uint64_t VUGallery.Client.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249F721B4 + 4 * byte_24A01FDB0[*v0]))(0x736F746F6850, 0xE600000000000000);
}

uint64_t sub_249F721B4()
{
  return 0x74694B656D6F48;
}

uint64_t sub_249F721CC()
{
  return 0x73746361746E6F43;
}

unint64_t sub_249F721E4()
{
  return 0xD000000000000013;
}

uint64_t sub_249F72200()
{
  return 0x6465767265736552;
}

uint64_t sub_249F72218()
{
  return 0x646572616853;
}

VisualUnderstanding::VUGallery::Client_optional __swiftcall VUGallery.Client.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((unsigned __int16)rawValue >= 6u)
    v2 = 6;
  *v1 = v2;
  return (VisualUnderstanding::VUGallery::Client_optional)rawValue;
}

uint64_t VUGallery.Client.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_249F72248(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249F7225C()
{
  sub_24A01F4EC();
  sub_24A01F510();
  return sub_24A01F528();
}

uint64_t sub_249F722A0()
{
  return sub_24A01F510();
}

uint64_t sub_249F722C8()
{
  sub_24A01F4EC();
  sub_24A01F510();
  return sub_24A01F528();
}

VisualUnderstanding::VUGallery::Client_optional sub_249F72308(Swift::Int16 *a1)
{
  return VUGallery.Client.init(rawValue:)(*a1);
}

void sub_249F72310(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_249F7231C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249F72348 + 4 * byte_24A01FDB6[*v0]))(0x736F746F6850, 0xE600000000000000);
}

uint64_t sub_249F72348()
{
  return 0x74694B656D6F48;
}

uint64_t sub_249F72360()
{
  return 0x73746361746E6F43;
}

unint64_t sub_249F72378()
{
  return 0xD000000000000013;
}

uint64_t sub_249F72394()
{
  return 0x6465767265736552;
}

uint64_t sub_249F723AC()
{
  return 0x646572616853;
}

void VUGallery.client.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
}

uint64_t VUGallery.path.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_path;
  v4 = sub_24A01EAA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VUGallery.isSecurityScoped.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_isSecurityScoped);
}

uint64_t sub_249F72424()
{
  unsigned __int8 v1;

  sub_24A01F138();
  return v1;
}

uint64_t sub_249F72474@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int v18;
  char v20;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)v2 + 64;
  v5 = 1;
  v6 = 1 << *(_BYTE *)(*(_QWORD *)v2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(*(_QWORD *)v2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
LABEL_5:
  v12 = v5;
  while (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v11 << 6);
LABEL_19:
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v14);
    if (v18 > 5)
    {
      if (v18 == 6)
      {
        v5 = 0;
        if ((v12 & 1) != 0)
          goto LABEL_4;
        goto LABEL_5;
      }
      if (v18 == 63)
      {
        v5 = 0;
        if ((v12 & 1) != 0)
          goto LABEL_4;
        goto LABEL_5;
      }
    }
    else if (!v18 || v18 == 2)
    {
      v5 = 0;
      if ((v12 & 1) != 0)
      {
LABEL_4:
        MEMORY[0x24BDAC7A8]();
        result = sub_24A01F138();
        v5 = v20;
        goto LABEL_5;
      }
      goto LABEL_5;
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v11 >= v9)
    goto LABEL_36;
  v16 = *(_QWORD *)(v4 + 8 * v11);
  if (v16)
  {
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_19;
  }
  v17 = v11 + 1;
  if (v11 + 1 >= v9)
    goto LABEL_36;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v11 + 2;
  if (v11 + 2 >= v9)
    goto LABEL_36;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v11 + 3;
  if (v11 + 3 >= v9)
  {
LABEL_36:
    result = swift_release();
    *a2 = v5 & 1;
    return result;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_17:
    v11 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v9)
      goto LABEL_36;
    v16 = *(_QWORD *)(v4 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249F726B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72474(v1, a1);
}

VisualUnderstanding::VUGallery::EntityClass_optional __swiftcall VUGallery.EntityClass.init(rawValue:)(VisualUnderstanding::VUGallery::EntityClass_optional rawValue)
{
  VisualUnderstanding::VUGallery::EntityClass *v1;
  VisualUnderstanding::VUGallery::EntityClass value;

  value = rawValue.value;
  if (rawValue.value <= (VisualUnderstanding_VUGallery_EntityClass_unknownDefault|VisualUnderstanding_VUGallery_EntityClass_person))
  {
    if (rawValue.value == VisualUnderstanding_VUGallery_EntityClass_invalid)
    {
LABEL_9:
      *v1 = value;
      return rawValue;
    }
    if (rawValue.value == VisualUnderstanding_VUGallery_EntityClass_animal)
    {
      *v1 = VisualUnderstanding_VUGallery_EntityClass_person;
      return rawValue;
    }
LABEL_8:
    value = VisualUnderstanding_VUGallery_EntityClass_unknownDefault;
    goto LABEL_9;
  }
  if (rawValue.value != (VisualUnderstanding_VUGallery_EntityClass_unknownDefault|VisualUnderstanding_VUGallery_EntityClass_animal))
  {
    if (rawValue.value == 63)
    {
      *v1 = VisualUnderstanding_VUGallery_EntityClass_animal;
      return rawValue;
    }
    goto LABEL_8;
  }
  *v1 = VisualUnderstanding_VUGallery_EntityClass_scene;
  return rawValue;
}

uint64_t sub_249F72724()
{
  unsigned __int8 v1;

  sub_24A01F138();
  return v1;
}

void sub_249F72784(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  char v15;
  char v16;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A0208B0;
  v7 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v6 + 64) = v7;
  *(_BYTE *)(v6 + 32) = 0x63F0200u >> (8 * a2);
  swift_retain();
  v8 = (void *)sub_24A01F09C();
  v9 = sub_249FCBC58(v8, 0, 1);
  swift_release();

  if (v9
    || (v10 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16),
        MEMORY[0x24BDAC7A8](),
        swift_retain(),
        v11 = v10,
        sub_24A01F180(),
        swift_release(),
        v11,
        (v16 & 1) != 0))
  {
    v12 = 0;
  }
  else
  {
    v13 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
    MEMORY[0x24BDAC7A8]();
    swift_retain();
    v14 = v13;
    sub_24A01F180();
    swift_release();

    v12 = v15 ^ 1;
  }
  *a3 = v12 & 1;
}

void sub_249F729B4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_249F72784(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t VUGallery.EntityClass.rawValue.getter()
{
  _BYTE *v0;

  return 0x63F0200u >> (8 * *v0);
}

uint64_t sub_249F729E8()
{
  return sub_249F788A8();
}

uint64_t sub_249F729F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  swift_retain();
  v2 = sub_249FD379C(256);
  v4 = v3;
  result = swift_release();
  v6 = 10;
  if ((v4 & 1) == 0)
    v6 = v2;
  *a1 = v6;
  return result;
}

uint64_t sub_249F72A60@<X0>(uint64_t *a1@<X8>)
{
  return sub_249F729F4(a1);
}

uint64_t sub_249F72A78()
{
  return sub_249F80088();
}

uint64_t sub_249F72A84@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  unsigned int v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v3 = 0x63F0200u >> (8 * a1);
  swift_retain();
  v4 = sub_249FD379C(v3 & 0x3F);
  v6 = v5;
  result = swift_release();
  v8 = 10;
  if ((v6 & 1) == 0)
    v8 = v4;
  *a2 = v8;
  return result;
}

uint64_t sub_249F72B04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72A84(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_249F72B20()
{
  return sub_249F788A8();
}

unint64_t sub_249F72B2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72C30(v1, 2u, a1);
}

uint64_t sub_249F72B48()
{
  return sub_249F788A8();
}

unint64_t sub_249F72B54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  result = swift_beginAccess();
  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    result = sub_249F8B0C4(2u);
    if ((v7 & 1) != 0)
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * result) + 32);
    else
      v6 = 0;
  }
  *a2 = v6;
  return result;
}

unint64_t sub_249F72BE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72B54(v1, a1);
}

uint64_t sub_249F72BFC()
{
  return sub_249F788A8();
}

unint64_t sub_249F72C08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72C30(v1, 0x3Fu, a1);
}

uint64_t sub_249F72C24()
{
  return sub_249F788A8();
}

unint64_t sub_249F72C30@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t *v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  result = swift_beginAccess();
  v7 = *v5;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    result = sub_249F8B0C4(a2);
    if ((v9 & 1) != 0)
      v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * result) + 24);
    else
      v8 = 0;
  }
  *a3 = v8;
  return result;
}

unint64_t sub_249F72CC4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72C30(v1, 6u, a1);
}

uint64_t sub_249F72CE0()
{
  return sub_249F72D54();
}

unint64_t sub_249F72CEC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72DB0(v1, 2u, a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD07890]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_249F72D48()
{
  return sub_249F72D54();
}

uint64_t sub_249F72D54()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF518);
  sub_24A01F138();
  return v1;
}

unint64_t sub_249F72DB0@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t result;
  char v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16) && (result = sub_249F8B0C4(a2), (v7 & 1) != 0))
  {
    swift_retain();
    v8 = sub_249F9A744();
    result = swift_release();
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  return result;
}

unint64_t sub_249F72E5C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F72DB0(v1, 0x3Fu, a1);
}

uint64_t sub_249F72E78()
{
  sub_24A01EB5C();
  return sub_24A01F138();
}

uint64_t sub_249F72ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void (*v22)(_BYTE *, uint64_t);
  _BYTE v24[24];
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = sub_24A01EB5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = &v24[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-v11];
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v14 = *(void **)(v13 + 16);
  v28 = 2;
  v29 = v13;
  swift_retain();
  v15 = v14;
  sub_24A01F180();
  swift_release();

  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v17 = *(void **)(v16 + 16);
  v26 = 63;
  v27 = v16;
  swift_retain();
  v18 = v17;
  sub_24A01F180();
  swift_release();

  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v20 = *(void **)(v19 + 16);
  v24[16] = 6;
  v25 = v19;
  swift_retain();
  v21 = v20;
  sub_24A01F180();
  swift_release();

  sub_249F730E8((uint64_t)v12, (uint64_t)v10, (uint64_t)v7, MEMORY[0x24BEE4AF8], v30);
  v22 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v22(v7, v3);
  v22(v10, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v22)(v12, v3);
}

uint64_t sub_249F730D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F72ED0(v1, a1);
}

uint64_t sub_249F730E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v27 = a4;
  v9 = sub_24A01EB5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  sub_249F9419C((unint64_t *)&unk_2578FF958, 255, v16, MEMORY[0x24BDCE948]);
  v17 = sub_24A01EE2C();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  if ((v17 & 1) != 0)
    v19 = a2;
  else
    v19 = a1;
  v18(v15, v19, v9);
  if ((sub_24A01EE2C() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(a5, a3, v9);
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v15, v9);
  }
  v21 = *(_QWORD *)(v27 + 16);
  if (v21)
  {
    v22 = v27 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v23 = *(_QWORD *)(v10 + 72);
    do
    {
      v18(v13, v22, v9);
      v24 = sub_24A01EE2C();
      v25 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      if ((v24 & 1) != 0)
      {
        v25(a5, v9);
        result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v13, v9);
      }
      else
      {
        result = ((uint64_t (*)(char *, uint64_t))v25)(v13, v9);
      }
      v22 += v23;
      --v21;
    }
    while (v21);
  }
  return result;
}

uint64_t sub_249F732BC()
{
  sub_24A01EB5C();
  return sub_24A01F138();
}

void sub_249F73320(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  sub_24A01EB5C();
  swift_retain();
  v2 = v1;
  sub_24A01F180();
  swift_release();

}

void sub_249F733D0()
{
  uint64_t v0;

  sub_249F73320(*(_QWORD *)(v0 + 16));
}

uint64_t sub_249F733EC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF518);
  sub_24A01F138();
  return v1;
}

unint64_t sub_249F73454@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t result;
  char v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v5 + 16) && (result = sub_249F8B0C4(0x63F0200u >> (8 * a2)), (v7 & 1) != 0))
  {
    swift_retain();
    v8 = sub_249F9A744();
    result = swift_release();
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  return result;
}

unint64_t sub_249F73510@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F73454(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_249F7352C()
{
  return sub_249F788A8();
}

uint64_t sub_249F73538@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  result = sub_249F735D0(*v3);
  if (result)
  {
    v5 = *(_QWORD *)(result + 48);
    result = swift_release();
  }
  else
  {
    v5 = -1;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_249F735B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F73538(v1, a1);
}

uint64_t sub_249F735D0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_249F9B4AC();
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  sub_249F922BC(result, v3, 0, a1);
  return swift_retain();
}

float sub_249F73634()
{
  return sub_249F73798();
}

uint64_t sub_249F73640@<X0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  float v5;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  result = sub_249F735D0(*v3);
  if (result)
  {
    v5 = *(float *)(result + 56);
    result = swift_release();
  }
  else
  {
    v5 = -1.0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_249F736C8@<X0>(float *a1@<X8>)
{
  uint64_t v1;

  return sub_249F73640(v1, a1);
}

float sub_249F736E0()
{
  return sub_249F73798();
}

uint64_t sub_249F736EC@<X0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  float v5;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  result = sub_249F735D0(*v3);
  if (result)
  {
    v5 = *(float *)(result + 60);
    result = swift_release();
  }
  else
  {
    v5 = -1.0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_249F73774@<X0>(float *a1@<X8>)
{
  uint64_t v1;

  return sub_249F736EC(v1, a1);
}

float sub_249F7378C()
{
  return sub_249F73798();
}

float sub_249F73798()
{
  float v1;

  sub_24A01F138();
  return v1;
}

uint64_t sub_249F737E0@<X0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  float v5;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  result = sub_249F735D0(*v3);
  if (result)
  {
    v5 = *(float *)(result + 64);
    result = swift_release();
  }
  else
  {
    v5 = -1.0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_249F73868@<X0>(float *a1@<X8>)
{
  uint64_t v1;

  return sub_249F737E0(v1, a1);
}

uint64_t VUGallery.__allocating_init(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned __int8 v9;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  unsigned __int8 v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0x736F746F6870 && a2 == 0xE600000000000000 || (sub_24A01F45C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v9 = 0;
  }
  else if (a1 == 0x74616369646E7973 && a2 == 0xEB000000006E6F69 || (sub_24A01F45C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v9 = 3;
  }
  else if (a1 == 0x73746361746E6F63 && a2 == 0xE800000000000000 || (sub_24A01F45C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v9 = 2;
  }
  else if (a1 == 0x74696B656D6F68 && a2 == 0xE700000000000000 || (sub_24A01F45C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v9 = 1;
  }
  else
  {
    if (a1 == 0x646572616873 && a2 == 0xE600000000000000
      || (sub_24A01F45C() & 1) != 0
      || a1 == 0x6465767265736572 && a2 == 0xE800000000000000
      || (sub_24A01F45C() & 1) != 0
      || a1 == 0x6C7070612E6D6F63 && a2 == 0xEF6C746375762E65)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_24A01F45C();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        sub_249F74AF4();
        swift_allocError();
        *v12 = 6;
        swift_willThrow();
        sub_249F990A0(a3, (uint64_t *)&unk_2544CAD60);
        return a2;
      }
    }
    v9 = 5;
  }
  v14 = v9;
  sub_249F9905C(a3, (uint64_t)v8, (uint64_t *)&unk_2544CAD60);
  type metadata accessor for VUGallery(0);
  a2 = swift_allocObject();
  VUGallery.init(for:at:)(&v14, (uint64_t)v8);
  sub_249F990A0(a3, (uint64_t *)&unk_2544CAD60);
  return a2;
}

uint64_t VUGallery.__allocating_init(for:at:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  VUGallery.init(for:at:)(a1, a2);
  return v4;
}

uint64_t VUGallery.init(for:at:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, char *);
  int v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void (*v38)(char *, uint64_t, uint64_t, char *);
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _BYTE *v44;
  char *v45;
  void (*v46)(char *, char *, char *);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  id v52;
  void *v53;
  unsigned __int8 v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint8_t *v62;
  id v63;
  void *v64;
  unsigned int v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  void (*v75)(char *, char *);
  int v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  void (*v88)(char *, char *);
  uint64_t v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, char *, char *);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[2];
  id v108[3];
  uint64_t v109[4];

  v105 = a2;
  v109[3] = *MEMORY[0x24BDAC8D0];
  v3 = sub_24A01EAA8();
  v104 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v103 = (char *)&v89 - v6;
  v99 = sub_24A01EA18();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v97 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v92 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v101 = (void (*)(char *, char *, char *))((char *)&v89 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v89 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)&v89 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v89 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v89 - v20;
  v22 = sub_24A01F120();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_24A01EDE4();
  MEMORY[0x24BDAC7A8](v26);
  v27 = sub_24A01F108();
  MEMORY[0x24BDAC7A8](v27);
  v91 = *a1;
  sub_249F990DC(0, (unint64_t *)&unk_2544CAEC0);
  sub_24A01F0FC();
  sub_24A01EDD8();
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v23 + 104);
  v29 = (char *)v3;
  v30 = (uint64_t)v21;
  v28(v25, *MEMORY[0x24BEE5750], v22);
  v31 = v102;
  *(_QWORD *)(v31 + 24) = sub_24A01F150();
  v96 = v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
  sub_24A01ED3C();
  v106 = v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
  sub_24A01ED9C();
  *(_QWORD *)(v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_cache) = MEMORY[0x24BEE4B00];
  v32 = v104;
  sub_249F9905C(v105, v30, (uint64_t *)&unk_2544CAD60);
  sub_249F9905C(v30, (uint64_t)v19, (uint64_t *)&unk_2544CAD60);
  v33 = *(uint64_t (**)(char *, uint64_t, char *))(v32 + 48);
  v34 = v33(v19, 1, v29);
  sub_249F990A0((uint64_t)v19, (uint64_t *)&unk_2544CAD60);
  if (v34 == 1)
  {
    v35 = sub_24A01ED90();
    v36 = sub_24A01F0E4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      MEMORY[0x24BD07950](v37, -1, -1);
    }

    v38 = *(void (**)(char *, uint64_t, uint64_t, char *))(v32 + 56);
    v38(v94, 1, 1, v29);
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *MEMORY[0x24BDCD7A0], v99);
    v39 = (uint64_t)v95;
    sub_24A01EA84();
    sub_249F990A0(v30, (uint64_t *)&unk_2544CAD60);
    v38((char *)v39, 0, 1, v29);
    sub_249F98C10(v39, v30, (uint64_t *)&unk_2544CAD60);
  }
  v40 = (char *)v101;
  sub_249F9905C(v30, (uint64_t)v101, (uint64_t *)&unk_2544CAD60);
  if (v33(v40, 1, v29) == 1)
  {
    sub_249F990A0((uint64_t)v40, (uint64_t *)&unk_2544CAD60);
    v41 = sub_24A01ED90();
    v42 = sub_24A01F0E4();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_249F70000, v41, v42, "Could not find a valid gallery path. Please make sure you have the right entitlements.", v43, 2u);
      MEMORY[0x24BD07950](v43, -1, -1);
    }

    sub_249F74AF4();
    swift_allocError();
    *v44 = 0;
    swift_willThrow();
    sub_249F990A0(v105, (uint64_t *)&unk_2544CAD60);
    sub_249F990A0(v30, (uint64_t *)&unk_2544CAD60);
    goto LABEL_23;
  }
  v45 = v103;
  (*(void (**)(char *, char *, char *))(v32 + 32))(v103, v40, v29);
  *(_BYTE *)(v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_isSecurityScoped) = sub_24A01EA6C() & 1;
  v46 = *(void (**)(char *, char *, char *))(v32 + 16);
  v47 = v100;
  v46(v100, v45, v29);
  v48 = sub_24A01EA24();
  v101 = v46;
  if (v48 == 0x2E7865646E495556 && v49 == 0xEE006574696C7173)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    sub_24A01EA3C();
    goto LABEL_14;
  }
  v50 = sub_24A01F45C();
  swift_bridgeObjectRelease();
  if ((v50 & 1) != 0)
    goto LABEL_13;
LABEL_14:
  v51 = (void *)objc_opt_self();
  v52 = objc_msgSend(v51, sel_defaultManager);
  sub_24A01EA78();
  v53 = (void *)sub_24A01EE44();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v52, sel_fileExistsAtPath_, v53);

  v90 = v30;
  if ((v54 & 1) == 0)
  {
    v55 = sub_24A01ED90();
    v56 = sub_24A01F0F0();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc();
      v95 = v29;
      v58 = (uint8_t *)v57;
      v59 = swift_slowAlloc();
      v109[0] = v59;
      *(_DWORD *)v58 = 136315138;
      v47 = v100;
      swift_beginAccess();
      v60 = sub_24A01EA78();
      v108[0] = (id)sub_249F8AAE8(v60, v61, v109);
      v31 = v102;
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249F70000, v55, v56, "Creating directory %s...", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD07950](v59, -1, -1);
      v62 = v58;
      v29 = v95;
      MEMORY[0x24BD07950](v62, -1, -1);

    }
    else
    {

      v47 = v100;
    }
    v63 = objc_msgSend(v51, sel_defaultManager);
    swift_beginAccess();
    sub_24A01EA78();
    v64 = (void *)sub_24A01EE44();
    swift_bridgeObjectRelease();
    v108[0] = 0;
    v65 = objc_msgSend(v63, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v64, 1, 0, v108);

    v66 = v108[0];
    v67 = v90;
    if (!v65)
    {
      v74 = v66;
      sub_24A01EA00();

      swift_willThrow();
      sub_249F990A0(v105, (uint64_t *)&unk_2544CAD60);
      v32 = v104;
      v75 = *(void (**)(char *, char *))(v104 + 8);
      v75(v103, v29);
      sub_249F990A0(v67, (uint64_t *)&unk_2544CAD60);
      v75(v47, v29);
LABEL_23:
      v76 = 0;
      goto LABEL_26;
    }
  }
  v68 = OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client;
  *(_BYTE *)(v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client) = v91;
  v101((char *)(v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_path), v103, v29);
  swift_retain_n();
  v69 = sub_24A01ED90();
  v70 = sub_24A01F0CC();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc();
    v108[0] = (id)swift_slowAlloc();
    *(_DWORD *)v71 = 136315394;
    swift_beginAccess();
    v72 = sub_24A01EA78();
    v107[0] = sub_249F8AAE8(v72, v73, (uint64_t *)v108);
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 12) = 2080;
    __asm { BR              X10 }
  }

  swift_release_n();
  swift_beginAccess();
  strcpy((char *)v107, "VUIndex.sqlite");
  HIBYTE(v107[1]) = -18;
  v77 = v98;
  v78 = v97;
  v79 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *MEMORY[0x24BDCD7A0], v99);
  sub_249F8AAA4();
  v80 = (uint64_t)v92;
  sub_24A01EA9C();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
  v32 = v104;
  (*(void (**)(uint64_t, _QWORD, uint64_t, char *))(v104 + 56))(v80, 0, 1, v29);
  type metadata accessor for VUIndex();
  swift_allocObject();
  v81 = v93;
  v82 = sub_249FF7DF0(v80, 0);
  if (!v81)
  {
    v87 = v82;
    sub_249F990A0(v105, (uint64_t *)&unk_2544CAD60);
    v88 = *(void (**)(char *, char *))(v32 + 8);
    v88(v103, v29);
    sub_249F990A0(v90, (uint64_t *)&unk_2544CAD60);
    *(_QWORD *)(v31 + 16) = v87;
    v88(v47, v29);
    return v31;
  }
  sub_249F990A0(v105, (uint64_t *)&unk_2544CAD60);
  v83 = *(void (**)(char *, char *))(v32 + 8);
  v83(v103, v29);
  sub_249F990A0(v90, (uint64_t *)&unk_2544CAD60);
  v83(v47, v29);
  v76 = 1;
LABEL_26:

  v84 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v96, v84);
  if (v76)
    (*(void (**)(uint64_t, char *))(v32 + 8))(v31 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_path, v29);
  v85 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v106, v85);
  swift_bridgeObjectRelease();
  type metadata accessor for VUGallery(0);
  swift_deallocPartialClassInstance();
  return v31;
}

unint64_t sub_249F74AF4()
{
  unint64_t result;

  result = qword_2578FFBA0;
  if (!qword_2578FFBA0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUError, &type metadata for VUError);
    atomic_store(result, (unint64_t *)&qword_2578FFBA0);
  }
  return result;
}

uint64_t type metadata accessor for VUGallery(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CAFA0);
}

uint64_t VUGallery.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_isSecurityScoped) == 1)
    sub_24A01EA54();
  swift_release();

  v2 = v0 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
  v3 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_path;
  v5 = sub_24A01EAA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
  v7 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t VUGallery.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_isSecurityScoped) == 1)
    sub_24A01EA54();
  swift_release();

  v2 = v0 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
  v3 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_path;
  v5 = sub_24A01EAA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
  v7 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249F74D18()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  unsigned __int8 v3;
  _BYTE v4[24];
  ValueMetadata *v5;

  v4[0] = 2;
  result = _s19VisualUnderstanding9VUGalleryC26isPersonalizationAvailable3forSbAC014TokenEmbeddingE4TypeO_tF_0(v4);
  if ((result & 1) != 0)
  {
    v5 = &type metadata for VUGallery.TokenEmbeddingPersonalizationType;
    v4[0] = 2;
    v3 = 1;
    v2 = (void *)sub_249FE4B50((uint64_t)v4, &v3);
    if (!v0)

    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  }
  return result;
}

VisualUnderstanding::VUGallery::Source_optional __swiftcall VUGallery.Source.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (VisualUnderstanding::VUGallery::Source_optional)rawValue;
}

uint64_t VUGallery.Source.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t _s19VisualUnderstanding9VUGalleryC10UpdateModeO9hashValueSivg_0()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

uint64_t sub_249F74DF0()
{
  return sub_24A01F4F8();
}

uint64_t sub_249F74E18()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

VisualUnderstanding::VUGallery::Source_optional sub_249F74E58(Swift::Int *a1)
{
  return VUGallery.Source.init(rawValue:)(*a1);
}

void sub_249F74E60(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t VUGallery.Context.moment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F9905C(v1, a1, &qword_2544CAD70);
}

uint64_t VUGallery.Context.moment.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_249F98AB8(a1, v1, &qword_2544CAD70);
}

uint64_t (*VUGallery.Context.moment.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.Context.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249F75E34(type metadata accessor for VUGallery.Context, a1);
}

uint64_t VUGallery.Context.asset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for VUGallery.Context(0);
  return sub_249F98AB8(a1, v1 + *(int *)(v3 + 20), &qword_2544CAD70);
}

uint64_t (*VUGallery.Context.asset.modify())()
{
  type metadata accessor for VUGallery.Context(0);
  return nullsub_1;
}

uint64_t VUGallery.Context.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VUGallery.Context(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t VUGallery.Context.source.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for VUGallery.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*VUGallery.Context.source.modify())()
{
  type metadata accessor for VUGallery.Context(0);
  return nullsub_1;
}

uint64_t VUGallery.Context.init(moment:asset:source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v7 = *a3;
  v8 = sub_24A01EBA4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(a4, 1, 1, v8);
  v10 = type metadata accessor for VUGallery.Context(0);
  v11 = a4 + *(int *)(v10 + 20);
  v9(v11, 1, 1, v8);
  v12 = *(int *)(v10 + 24);
  *(_BYTE *)(a4 + v12) = 3;
  sub_249F98AB8(a1, a4, &qword_2544CAD70);
  result = sub_249F98AB8(a2, v11, &qword_2544CAD70);
  *(_BYTE *)(a4 + v12) = v7;
  return result;
}

uint64_t _s19VisualUnderstanding9VUGalleryC7ContextV6moment5assetAE10Foundation4UUIDVSg_AKtcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = sub_24A01EBA4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(a3, 1, 1, v6);
  v8 = type metadata accessor for VUGallery.Context(0);
  v9 = a3 + *(int *)(v8 + 20);
  v7(v9, 1, 1, v6);
  *(_BYTE *)(a3 + *(int *)(v8 + 24)) = 3;
  sub_249F98AB8(a1, a3, &qword_2544CAD70);
  return sub_249F98AB8(a2, v9, &qword_2544CAD70);
}

uint64_t VUGallery.Context.init(moment:asset:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = sub_24A01EBA4();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v6(a1, 1, 1, v2);
  v3 = type metadata accessor for VUGallery.Context(0);
  v4 = a1 + *(int *)(v3 + 20);
  v6(v4, 1, 1, v2);
  *(_BYTE *)(a1 + *(int *)(v3 + 24)) = 3;
  sub_249F990A0(a1, &qword_2544CAD70);
  v6(a1, 1, 1, v2);
  sub_249F990A0(v4, &qword_2544CAD70);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(v4, 1, 1, v2);
}

uint64_t sub_249F75228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  uint8_t *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint8_t *v41;
  char v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  char v45;
  void (*v46)(_QWORD, _QWORD, _QWORD);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint8_t *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  unint64_t v60;
  unint64_t v61;
  uint8_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  void (*v72)(char *, uint64_t);
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint8_t *v78;
  _BYTE *v79;
  id v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  id v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint8_t *v90;
  void (*v91)(_QWORD, _QWORD, _QWORD);
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  unsigned int v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint8_t *v111;
  _QWORD *v112;
  uint64_t v113[5];

  v95 = a2;
  v94 = a1;
  v2 = sub_24A01EA18();
  v104 = *(_QWORD *)(v2 - 8);
  v105 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v103 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A01EAA8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v99 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v109 = (char *)&v94 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v102 = (char *)&v94 - v10;
  v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v11 = *(_QWORD *)(v97 - 8);
  v12 = MEMORY[0x24BDAC7A8](v97);
  v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v94 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v112 = (uint64_t *)((char *)&v94 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v100 = (char *)&v94 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v94 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v94 - v25;
  v27 = (void *)sub_24A01EE44();
  v28 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v27, v94, v95);

  if (v28)
  {
    v29 = objc_msgSend(v28, sel_bundleURL);

    sub_24A01EA60();
    v30 = *(uint8_t **)(v5 + 56);
    v31 = v26;
    v32 = 0;
  }
  else
  {
    v30 = *(uint8_t **)(v5 + 56);
    v31 = v26;
    v32 = 1;
  }
  v111 = v30;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v30)(v31, v32, 1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA228);
  v33 = v11;
  v34 = *(_QWORD *)(v11 + 72);
  v35 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24A0208C0;
  v96 = v36;
  v37 = v36 + v35;
  sub_249F9905C((uint64_t)v26, v37, (uint64_t *)&unk_2544CAD60);
  v108 = v34;
  v110 = v37;
  v38 = v37 + v34;
  sub_249F9905C((uint64_t)v26, (uint64_t)v24, (uint64_t *)&unk_2544CAD60);
  v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v39 = v107(v24, 1, v4);
  v98 = v26;
  if (v39 == 1)
  {
    sub_249F990A0((uint64_t)v24, (uint64_t *)&unk_2544CAD60);
    v40 = 1;
  }
  else
  {
    sub_24A01EA48();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
    v40 = 0;
  }
  v41 = v111;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v111)(v38, v40, 1, v4);
  v42 = 0;
  v43 = 0;
  v111 = (uint8_t *)MEMORY[0x24BEE4AF8];
  v101 = *MEMORY[0x24BDCD7A0];
  v106 = v5;
  v44 = v107;
  do
  {
    v45 = v42;
    v46 = (void (*)(_QWORD, _QWORD, _QWORD))v112;
    sub_249F9905C(v110 + v43 * v108, (uint64_t)v112, (uint64_t *)&unk_2544CAD60);
    sub_249F9905C((uint64_t)v46, (uint64_t)v14, (uint64_t *)&unk_2544CAD60);
    if (v44(v14, 1, v4) == 1)
    {
      sub_249F990A0((uint64_t)v14, (uint64_t *)&unk_2544CAD60);
      v47 = v17;
      v48 = 1;
    }
    else
    {
      strcpy((char *)v113, "Plugins.bundle");
      HIBYTE(v113[1]) = -18;
      v49 = v4;
      v50 = v5;
      v52 = v104;
      v51 = v105;
      v53 = v14;
      v54 = v41;
      v55 = v103;
      (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, v101, v105);
      sub_249F8AAA4();
      sub_24A01EA90();
      v56 = *(void (**)(char *, uint64_t))(v52 + 8);
      v5 = v50;
      v4 = v49;
      v44 = v107;
      v57 = v55;
      v41 = v54;
      v14 = v53;
      v56(v57, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v53, v4);
      v47 = v17;
      v48 = 0;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v47, v48, 1, v4);
    sub_249F990A0((uint64_t)v112, (uint64_t *)&unk_2544CAD60);
    if (v44(v17, 1, v4) == 1)
    {
      sub_249F990A0((uint64_t)v17, (uint64_t *)&unk_2544CAD60);
    }
    else
    {
      v58 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v59 = v102;
      v58(v102, v17, v4);
      v58(v109, v59, v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v111 = (uint8_t *)sub_249F89DB4(0, *((_QWORD *)v111 + 2) + 1, 1, (unint64_t)v111, (uint64_t *)&unk_2578FF938, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
      v61 = *((_QWORD *)v111 + 2);
      v60 = *((_QWORD *)v111 + 3);
      if (v61 >= v60 >> 1)
        v111 = (uint8_t *)sub_249F89DB4(v60 > 1, v61 + 1, 1, (unint64_t)v111, (uint64_t *)&unk_2578FF938, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
      v62 = v111;
      *((_QWORD *)v111 + 2) = v61 + 1;
      v63 = (unint64_t)&v62[((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))
                                 + *(_QWORD *)(v106 + 72) * v61];
      v5 = v106;
      v58((char *)v63, v109, v4);
    }
    v42 = 1;
    v43 = 1;
  }
  while ((v45 & 1) == 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v64 = *((_QWORD *)v111 + 2);
  if (v64)
  {
    v65 = &v111[(*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80)];
    v110 = *(_QWORD *)(v106 + 72);
    v112 = *(_QWORD **)(v106 + 16);
    v66 = v99;
    while (1)
    {
      v67 = v100;
      ((void (*)(char *, uint8_t *, uint64_t))v112)(v100, v65, v4);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v41)(v67, 0, 1, v4);
      if (v107(v67, 1, v4) == 1)
        break;
      v68 = v106;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v66, v67, v4);
      v69 = objc_allocWithZone(MEMORY[0x24BDD1488]);
      v70 = (void *)sub_24A01EA30();
      v71 = objc_msgSend(v69, sel_initWithURL_, v70);

      v72 = *(void (**)(char *, uint64_t))(v68 + 8);
      v72(v66, v4);
      if (v71)
      {
        swift_bridgeObjectRelease();
        v73 = v71;
        if ((objc_msgSend(v73, sel_load) & 1) == 0)
        {

          goto LABEL_26;
        }
        v81 = v73;
        v82 = sub_24A01ED90();
        v83 = sub_24A01F0CC();
        if (os_log_type_enabled(v82, v83))
        {
          v84 = (uint8_t *)swift_slowAlloc();
          v112 = (_QWORD *)swift_slowAlloc();
          v113[0] = (uint64_t)v112;
          *(_DWORD *)v84 = 136315138;
          v110 = (uint64_t)(v84 + 4);
          v111 = v84;
          v85 = objc_msgSend(v81, sel_bundleURL);
          v86 = v99;
          sub_24A01EA60();

          sub_249F9419C(&qword_2578FF930, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v87 = sub_24A01F444();
          v89 = v88;
          v72(v86, v4);
          v113[4] = sub_249F8AAE8(v87, v89, v113);
          sub_24A01F1F8();

          swift_bridgeObjectRelease();
          v90 = v111;
          _os_log_impl(&dword_249F70000, v82, v83, "Loaded plugins bundle from %s", v111, 0xCu);
          v91 = (void (*)(_QWORD, _QWORD, _QWORD))v112;
          swift_arrayDestroy();
          MEMORY[0x24BD07950](v91, -1, -1);
          MEMORY[0x24BD07950](v90, -1, -1);
        }
        else
        {

        }
        strcpy((char *)v113, "Plugins.");
        BYTE1(v113[1]) = 0;
        WORD1(v113[1]) = 0;
        HIDWORD(v113[1]) = -402653184;
        sub_24A01EEBC();
        v92 = (void *)sub_24A01EE44();
        swift_bridgeObjectRelease();
        v93 = objc_msgSend(v81, sel_classNamed_, v92);

        sub_249F990A0((uint64_t)v98, (uint64_t *)&unk_2544CAD60);
        if (v93)
          return swift_getObjCClassMetadata();
        else
          return 0;
      }
      v65 += v110;
      if (!--v64)
        goto LABEL_24;
    }
  }
  else
  {
LABEL_24:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v100, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  v73 = 0;
LABEL_26:
  v74 = sub_24A01ED90();
  v75 = sub_24A01F0E4();
  v76 = os_log_type_enabled(v74, v75);
  v77 = (uint64_t)v98;
  if (v76)
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v78 = 0;
    _os_log_impl(&dword_249F70000, v74, v75, "Cannot load the plugins bundle", v78, 2u);
    MEMORY[0x24BD07950](v78, -1, -1);
  }

  sub_249F74AF4();
  swift_allocError();
  *v79 = 5;
  swift_willThrow();

  return sub_249F990A0(v77, (uint64_t *)&unk_2544CAD60);
}

BOOL sub_249F75C7C(_BYTE *a1, _BYTE *a2)
{
  return ((0x63F0200u >> (8 * *a1)) & 0x3F) == ((0x63F0200u >> (8 * *a2)) & 0x3F);
}

uint64_t sub_249F75CB0()
{
  sub_24A01F4EC();
  sub_24A01F504();
  return sub_24A01F528();
}

uint64_t sub_249F75D00()
{
  return sub_24A01F504();
}

uint64_t sub_249F75D38()
{
  sub_24A01F4EC();
  sub_24A01F504();
  return sub_24A01F528();
}

VisualUnderstanding::VUGallery::EntityClass_optional sub_249F75D84(Swift::UInt8 *a1)
{
  return VUGallery.EntityClass.init(rawValue:)(*a1);
}

void sub_249F75D8C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x63F0200u >> (8 * *v1);
}

BOOL static VUGallery.RecognitionPreset.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VUGallery.RecognitionPreset.hash(into:)()
{
  return sub_24A01F4F8();
}

uint64_t VUGallery.RecognitionPreset.hashValue.getter()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

uint64_t VUGallery.RecognitionResult.tag.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249F75E34(type metadata accessor for VUGallery.RecognitionResult, a1);
}

uint64_t sub_249F75E34@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_249F9905C(v2 + *(int *)(v4 + 20), a2, &qword_2544CAD70);
}

float VUGallery.RecognitionResult.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUGallery.RecognitionResult(0) + 24));
}

uint64_t VUGallery.RecognitionResult.init(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, float a4@<S0>)
{
  uint64_t v7;
  uint64_t result;

  *a3 = a1;
  v7 = type metadata accessor for VUGallery.RecognitionResult(0);
  result = sub_249F98C10(a2, (uint64_t)a3 + *(int *)(v7 + 20), &qword_2544CAD70);
  *(float *)((char *)a3 + *(int *)(v7 + 24)) = a4;
  return result;
}

unint64_t VUGallery.RecognitionResult.toMetadata()()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF528);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0208C0;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x800000024A021D90;
  *(_QWORD *)(inited + 48) = sub_24A01F048();
  *(_QWORD *)(inited + 56) = 0x6E656469666E6F63;
  *(_QWORD *)(inited + 64) = 0xEA00000000006563;
  type metadata accessor for VUGallery.RecognitionResult(0);
  *(_QWORD *)(inited + 72) = sub_24A01EFF4();
  return sub_249F76654(inited, (uint64_t *)&unk_2578FF948);
}

unint64_t sub_249F75FA8(uint64_t a1)
{
  return sub_249F76654(a1, (uint64_t *)&unk_2578FF948);
}

unint64_t sub_249F75FB4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAF10);
  v2 = (_QWORD *)sub_24A01F3FC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_249F8B18C((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249F760BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF840);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF848);
  v6 = sub_24A01F3FC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_249F9905C(v12, (uint64_t)v5, &qword_2578FF840);
    result = sub_249F8B2AC((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for VUStreamingGallery.Label(0);
    result = sub_249F98928((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249F76254(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF890);
  v2 = (_QWORD *)sub_24A01F3FC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_249F8B0F8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249F7636C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF810);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF818);
  v6 = sub_24A01F3FC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_249F9905C(v12, (uint64_t)v5, &qword_2578FF810);
    result = sub_249F8B20C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_24A01EBA4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 24 * v16;
    v20 = *((_QWORD *)v9 + 2);
    *(_OWORD *)v19 = *(_OWORD *)v9;
    *(_QWORD *)(v19 + 16) = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249F76514(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CABE0);
  v2 = sub_24A01F3FC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_249F9905C(v6, (uint64_t)&v15, &qword_2578FF808);
    v7 = v15;
    v8 = v16;
    result = sub_249F8B0F8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_249F989B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_249F76648(uint64_t a1)
{
  return sub_249F76654(a1, (uint64_t *)&unk_2578FF7F8);
}

unint64_t sub_249F76654(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_24A01F3FC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_249F8B0F8(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::String __swiftcall VUGallery.RecognitionResult.description()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::String result;
  _QWORD v11[2];
  uint64_t v12;
  unint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VUGallery.RecognitionResult(0);
  sub_249F9905C((uint64_t)v1 + *(int *)(v5 + 20), (uint64_t)v4, &qword_2544CAD70);
  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_249F990A0((uint64_t)v4, &qword_2544CAD70);
  }
  else
  {
    sub_24A01EB74();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_24A01F2F4();
  sub_24A01EEBC();
  v11[1] = *v1;
  sub_24A01F444();
  sub_24A01EEBC();
  swift_bridgeObjectRelease();
  sub_24A01EEBC();
  sub_24A01EEBC();
  swift_bridgeObjectRelease();
  sub_24A01EEBC();
  sub_24A01F00C();
  v8 = v12;
  v9 = (void *)v13;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t sub_249F76944(void *a1, uint64_t *a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double Current;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t result;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t *v62;
  int v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  double v100;
  _QWORD *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  os_log_type_t v109;
  uint8_t *v110;
  NSString *v111;
  Class v112;
  void *v113;
  _QWORD *v114;
  uint64_t v115;
  void *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t *v136;
  int v137;
  char *v138;
  char *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t aBlock[6];
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;

  v140 = a2;
  v132 = type metadata accessor for VUGallery.RecognitionResult(0);
  v130 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAEA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v134 = (uint64_t)&v117 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v129 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v133 = (char *)&v117 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v139 = (char *)&v117 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v138 = (char *)&v117 - v20;
  v137 = *a3;
  Current = CFAbsoluteTimeGetCurrent();
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v145 = MEMORY[0x24BEE4AF8];
  objc_opt_self();
  v23 = swift_dynamicCastObjCClass();
  v128 = v11;
  if (v23)
  {
    v24 = (void *)v23;
    v25 = v3;
    v26 = a1;
    v27 = objc_msgSend(v24, sel_faceprint);
    if (v27
      && (v28 = v27,
          v29 = objc_msgSend(v27, sel_descriptorData),
          v28,
          v29))
    {
      v30 = sub_24A01EAFC();
      v32 = v31;

    }
    else
    {
      v30 = 0;
      v32 = 0xF000000000000000;
    }
    v33 = objc_msgSend(v24, sel_torsoprint);
    if (v33
      && (v34 = v33,
          v35 = objc_msgSend(v33, sel_descriptorData),
          v34,
          v35))
    {
      v36 = sub_24A01EAFC();
      v38 = v37;

    }
    else
    {
      v36 = 0;
      v38 = 0xF000000000000000;
    }
    if (v32 >> 60 == 15 && v38 >> 60 == 15)
      goto LABEL_12;
    v135 = &v117;
    MEMORY[0x24BDAC7A8](v33);
    *(&v117 - 8) = v25;
    *(&v117 - 7) = (uint64_t *)v30;
    *(&v117 - 6) = (uint64_t *)v32;
    *(&v117 - 5) = (uint64_t *)v24;
    *(&v117 - 4) = (uint64_t *)v36;
    *(&v117 - 3) = (uint64_t *)v38;
    *(&v117 - 2) = v140;
    *((_BYTE *)&v117 - 8) = v137;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
    sub_24A01F138();
    sub_249F92438(v30, v32);

    sub_249F92438(v36, v38);
    v50 = aBlock[0];
    v49 = swift_bridgeObjectRelease();
    v145 = v50;
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    objc_opt_self();
    v40 = swift_dynamicCastObjCClass();
    if (!v40)
      return 0;
    v41 = (void *)v40;
    v26 = a1;
    v42 = objc_msgSend(v41, sel_animalprint);
    v39 = v42;
    if (!v42)
    {

      return (uint64_t)v39;
    }
    v43 = objc_msgSend(v42, sel_descriptorData);

    if (!v43)
    {
LABEL_12:

      return 0;
    }
    v44 = sub_24A01EAFC();
    v25 = v3;
    v46 = v45;

    MEMORY[0x24BDAC7A8](v47);
    *(&v117 - 6) = v3;
    *(&v117 - 5) = (uint64_t *)v44;
    *(&v117 - 4) = (uint64_t *)v46;
    *(&v117 - 3) = (uint64_t *)v41;
    *((_BYTE *)&v117 - 16) = v137;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
    sub_24A01F138();
    sub_249F92358(v44, v46);

    v48 = aBlock[0];
    v49 = swift_bridgeObjectRelease();
    v145 = v48;
  }
  v136 = v25;
  v143 = v22;
  v144 = MEMORY[0x24BEE4B08];
  MEMORY[0x24BDAC7A8](v49);
  *(&v117 - 2) = v25;
  *(&v117 - 1) = &v145;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2E0);
  sub_24A01F138();
  v51 = aBlock[0];
  v52 = *(_QWORD *)(aBlock[0] + 16);
  if (!v52 || (v53 = v145, (v54 = *(_QWORD *)(v145 + 16)) == 0))
  {
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v100 = (CFAbsoluteTimeGetCurrent() - Current) * 1000.0;
    v101 = v143;
    if (v143[2])
    {
      swift_bridgeObjectRetain_n();
      v102 = sub_24A01ED90();
      v103 = sub_24A01F0D8();
      if (!os_log_type_enabled(v102, v103))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
      v104 = swift_slowAlloc();
      v105 = swift_slowAlloc();
      aBlock[0] = v105;
      *(_DWORD *)v104 = 136315394;
      v106 = MEMORY[0x24BD06E64](v101, v132);
      v141 = sub_249F8AAE8(v106, v107, aBlock);
      sub_24A01F1F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 12) = 2048;
      v141 = *(_QWORD *)&v100;
      sub_24A01F1F8();
      _os_log_impl(&dword_249F70000, v102, v103, "Recognized entities: %s in %fms", (uint8_t *)v104, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD07950](v105, -1, -1);
      v108 = v104;
    }
    else
    {
      v102 = sub_24A01ED90();
      v109 = sub_24A01F0D8();
      if (!os_log_type_enabled(v102, v109))
      {
LABEL_58:

        v111 = (NSString *)sub_24A01EE44();
        v112 = NSClassFromString(v111);

        if (!v112)
        {
          v113 = (void *)sub_24A01EE44();
          v114 = v143;
          v115 = swift_allocObject();
          *(_QWORD *)(v115 + 16) = v114;
          *(double *)(v115 + 24) = v100;
          aBlock[4] = (uint64_t)sub_249F923D8;
          aBlock[5] = v115;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_249F78200;
          aBlock[3] = (uint64_t)&block_descriptor;
          v116 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_release();
          AnalyticsSendEventLazy();
          _Block_release(v116);

        }
        swift_beginAccess();
        v39 = v143;
        swift_bridgeObjectRelease();
        return (uint64_t)v39;
      }
      v110 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v110 = 134217984;
      *(double *)aBlock = v100;
      sub_24A01F1F8();
      _os_log_impl(&dword_249F70000, v102, v109, "No entities recognized, request took %fms", v110, 0xCu);
      v108 = (uint64_t)v110;
    }
    MEMORY[0x24BD07950](v108, -1, -1);
    goto LABEL_58;
  }
  v55 = *(_BYTE *)(aBlock[0] + 40);
  v56 = *(_QWORD *)(aBlock[0] + 32);
  v118 = OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client;
  v127 = v145 + 40;
  result = swift_bridgeObjectRetain();
  v58 = 0;
  v59 = 0;
  v60 = v52 - 1;
  v117 = (uint64_t *)v7;
  v121 = v51;
  v120 = v53;
  v119 = v54;
  v126 = v52 - 1;
  while (v58 < *(_QWORD *)(v53 + 16))
  {
    if ((v55 & 1) == 0)
    {
      v61 = *(_DWORD *)(v127 + v59);
      result = sub_249F8BD0C(aBlock, v56);
      if ((result & 1) != 0)
      {
        v62 = *(uint64_t **)(v136[2] + 16);
        v63 = *((unsigned __int8 *)v136 + v118);
        v64 = sub_24A01EBA4();
        v131 = *(_QWORD *)(v64 - 8);
        v65 = *(uint64_t **)(v131 + 56);
        v66 = (uint64_t)v139;
        v135 = (_QWORD *)v64;
        v140 = v65;
        v67 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v139, 1, 1);
        v68 = (void *)v62[2];
        MEMORY[0x24BDAC7A8](v67);
        *(&v117 - 4) = (uint64_t *)v56;
        *((_BYTE *)&v117 - 24) = 0;
        v125 = v63;
        *((_WORD *)&v117 - 11) = v63;
        *((_BYTE *)&v117 - 20) = 0;
        *(&v117 - 2) = (uint64_t *)v66;
        *(&v117 - 1) = v62;
        swift_retain();
        v69 = v68;
        v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
        sub_24A01F180();
        swift_release();

        v70 = aBlock[0];
        sub_249F990A0(v66, &qword_2544CAD70);
        v71 = *(_QWORD *)(v70 + 16);
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
        v73 = *(_QWORD *)(v72 - 8);
        if (v71)
        {
          v74 = v134;
          sub_249F9905C(v70 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80)), v134, &qword_2544CAC20);
          v75 = 0;
        }
        else
        {
          v74 = v134;
          v75 = 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v74, v75, 1, v72);
        swift_bridgeObjectRelease();
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
        v123 = *(_QWORD *)(v76 - 8);
        v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
        if (v77(v74, 1, v76) == 1)
        {
          sub_249F990A0(v74, &qword_2544CAEA0);
          v78 = 1;
          v79 = (uint64_t)v133;
          v80 = (uint64_t)v138;
          v81 = v135;
        }
        else
        {
          v80 = (uint64_t)v138;
          v81 = v135;
          (*(void (**)(char *, uint64_t, _QWORD *))(v131 + 32))(v138, v74 + *(int *)(v76 + 64), v135);
          v78 = 0;
          v79 = (uint64_t)v133;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v140)(v80, v78, 1, v81);
        sub_249F9905C(v80, v79, &qword_2544CAD70);
        if (v137 == 1 && (*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v131 + 48))(v79, 1, v81) == 1)
        {
          sub_249F990A0(v79, &qword_2544CAD70);
          v51 = v121;
        }
        else
        {
          v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v77;
          sub_249F990A0(v79, &qword_2544CAD70);
          v82 = *(uint64_t **)(v136[2] + 16);
          v83 = (uint64_t)v139;
          v84 = ((uint64_t (*)(char *, uint64_t, uint64_t, _QWORD *))v140)(v139, 1, 1, v81);
          v85 = (void *)v82[2];
          MEMORY[0x24BDAC7A8](v84);
          *(&v117 - 4) = (uint64_t *)v56;
          *((_BYTE *)&v117 - 24) = 0;
          *((_WORD *)&v117 - 11) = v125;
          *((_BYTE *)&v117 - 20) = 0;
          *(&v117 - 2) = (uint64_t *)v83;
          *(&v117 - 1) = v82;
          swift_retain();
          v86 = v85;
          sub_24A01F180();
          swift_release();

          v87 = aBlock[0];
          sub_249F990A0(v83, &qword_2544CAD70);
          if (*(_QWORD *)(v87 + 16))
          {
            v88 = v123;
            v89 = (uint64_t)v128;
            sub_249F9905C(v87 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80)), (uint64_t)v128, &qword_2544CAC20);
            v90 = 0;
          }
          else
          {
            v89 = (uint64_t)v128;
            v88 = v123;
            v90 = 1;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v89, v90, 1, v76);
          swift_bridgeObjectRelease();
          v91 = v122(v89, 1, v76);
          v92 = v117;
          v80 = (uint64_t)v138;
          if (v91 == 1)
          {
            sub_249F990A0(v89, &qword_2544CAEA0);
            v93 = 1;
            v94 = (uint64_t)v129;
            v51 = v121;
            v95 = v135;
          }
          else
          {
            v94 = (uint64_t)v129;
            v95 = v135;
            (*(void (**)(char *, uint64_t, _QWORD *))(v131 + 32))(v129, v89 + *(int *)(v76 + 64), v135);
            v93 = 0;
            v51 = v121;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v140)(v94, v93, 1, v95);
          *v92 = v56;
          v96 = v132;
          sub_249F98C10(v94, (uint64_t)v92 + *(int *)(v132 + 20), &qword_2544CAD70);
          *(_DWORD *)((char *)v92 + *(int *)(v96 + 24)) = v61;
          v97 = (unint64_t)v143;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_249F89DB4(0, *(_QWORD *)(v97 + 16) + 1, 1, v97, (uint64_t *)&unk_2544CA310, type metadata accessor for VUGallery.RecognitionResult);
          v99 = *(_QWORD *)(v97 + 16);
          v98 = *(_QWORD *)(v97 + 24);
          if (v99 >= v98 >> 1)
            v97 = sub_249F89DB4(v98 > 1, v99 + 1, 1, v97, (uint64_t *)&unk_2544CA310, type metadata accessor for VUGallery.RecognitionResult);
          *(_QWORD *)(v97 + 16) = v99 + 1;
          sub_249F98928((uint64_t)v92, v97+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(_QWORD *)(v130 + 72) * v99, type metadata accessor for VUGallery.RecognitionResult);
          v143 = (_QWORD *)v97;
        }
        result = sub_249F990A0(v80, &qword_2544CAD70);
        v53 = v120;
        v54 = v119;
      }
      v60 = v126;
    }
    if (v60 != v58)
    {
      if (v58 + 1 >= *(_QWORD *)(v51 + 16))
        goto LABEL_64;
      v55 = *(_BYTE *)(v51 + v59 + 56);
      v56 = *(_QWORD *)(v51 + v59 + 48);
      v59 += 16;
      if (v54 != ++v58)
        continue;
    }
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_249F77760@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _DWORD v26[2];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;

  v30 = a5;
  v26[1] = a7;
  v28 = a2;
  v29 = a4;
  v27 = a1;
  v31 = a8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA288);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v16 = objc_msgSend(a3, sel_faceprint);
  v17 = v16;
  if (v16)
  {
    v18 = objc_msgSend(v16, sel_requestRevision);

  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(a3, sel_torsoprint);
  v20 = v19;
  if (v19)
  {
    v21 = objc_msgSend(v19, sel_requestRevision);

  }
  else
  {
    v21 = 0;
  }
  sub_249F9905C(a6, (uint64_t)v12, &qword_2544CA288);
  v22 = type metadata accessor for VUGallery.Context(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_249F990A0((uint64_t)v12, &qword_2544CA288);
    v23 = sub_24A01EBA4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 1, 1, v23);
  }
  else
  {
    sub_249F9905C((uint64_t)v12, (uint64_t)v15, &qword_2544CAD70);
    sub_249F989C0((uint64_t)v12, type metadata accessor for VUGallery.Context);
  }
  v24 = sub_249FFC588(2u, v27, v28, (uint64_t)v18, v17 == 0, v29, v30, (uint64_t)v21, v20 == 0);
  swift_release();
  result = sub_249F990A0((uint64_t)v15, &qword_2544CAD70);
  *v31 = v24;
  return result;
}

uint64_t sub_249F779D4@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v11 = objc_msgSend(a3, sel_animalprint);
  v12 = v11;
  if (v11)
  {
    v13 = objc_msgSend(v11, sel_requestRevision);

  }
  else
  {
    v13 = 0;
  }
  v14 = sub_24A01EBA4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  v15 = sub_249FFC588(0x3Fu, a1, a2, (uint64_t)v13, v12 == 0, 0, 0xF000000000000000, 0, 1);
  swift_release();
  result = sub_249F990A0((uint64_t)v10, &qword_2544CAD70);
  *a4 = v15;
  return result;
}

void sub_249F77B54(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v2 = a2;
  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  if (v4)
  {
    v15 = MEMORY[0x24BEE4AF8];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_249F8C9C8(0, v4, 0);
    v5 = v15;
    v6 = *(_QWORD *)(v15 + 16);
    v7 = 32;
    do
    {
      v8 = *(_QWORD *)(v3 + v7);
      v14 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
        sub_249F8C9C8(v9 > 1, v6 + 1, 1);
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_QWORD *)(v5 + 8 * v6 + 32) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    v10 = swift_bridgeObjectRelease();
    v2 = a2;
  }
  else
  {
    v10 = swift_retain();
  }
  MEMORY[0x24BDAC7A8](v10);
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2E0);
  sub_24A01F180();
  swift_release();
  swift_bridgeObjectRelease();

  *v2 = v14;
}

uint64_t sub_249F77CEC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_249F8C9C8(0, v1, 0);
  v2 = v25;
  result = sub_249FC6870(a1);
  v6 = result;
  v7 = v24;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 88;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_26;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v6);
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      v22 = v9;
      v23 = v5;
      v21 = v10;
      result = sub_249F8C9C8(v14 > 1, v15 + 1, 1);
      v10 = v21;
      v9 = v22;
      v5 = v23;
      v7 = v24;
    }
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_27;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_29;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (!v20)
        {
          v18 = v12 + 2;
          if (v12 + 2 >= v19)
            goto LABEL_4;
          v20 = *(_QWORD *)(v9 + 8 * v18);
          if (!v20)
          {
            while (v19 - 3 != v12)
            {
              v20 = *(_QWORD *)(v10 + 8 * v12++);
              if (v20)
              {
                v18 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v11 = __clz(__rbit64(v20)) + (v18 << 6);
      }
    }
LABEL_4:
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249F77EF8(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v27 = MEMORY[0x24BEE4AF8];
  sub_249F8CBD8(0, v2, 0);
  v3 = v27;
  result = sub_249F9B4AC(a1);
  v6 = result;
  v8 = v7;
  v9 = 0;
  v10 = a1 + 64;
  v23 = v2;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v13 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v10 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != v8)
      goto LABEL_26;
    v24 = v9;
    v25 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    sub_249F84A70(&v25, &v26);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v3;
    }
    result = swift_bridgeObjectRelease();
    v14 = v26;
    v27 = v3;
    v16 = *(_QWORD *)(v3 + 16);
    v15 = *(_QWORD *)(v3 + 24);
    if (v16 >= v15 >> 1)
    {
      v22 = v26;
      result = sub_249F8CBD8(v15 > 1, v16 + 1, 1);
      v14 = v22;
      v3 = v27;
    }
    *(_QWORD *)(v3 + 16) = v16 + 1;
    *(_QWORD *)(v3 + 8 * v16 + 32) = v14;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_27;
    v17 = *(_QWORD *)(v10 + 8 * v13);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != v8)
      goto LABEL_29;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v11 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v12 = v23;
      v1 = 0;
    }
    else
    {
      v19 = v13 + 1;
      v20 = (unint64_t)(v11 + 63) >> 6;
      v12 = v23;
      v1 = 0;
      if (v13 + 1 < v20)
      {
        v21 = *(_QWORD *)(v10 + 8 * v19);
        if (v21)
        {
LABEL_21:
          v11 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v13)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v13++);
            if (v21)
            {
              v19 = v13 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    v9 = v24 + 1;
    v6 = v11;
    if (v24 + 1 == v12)
      return v3;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_249F7813C()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0208C0;
  strcpy((char *)(inited + 32), "recognize_hit");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = sub_24A01EFDC();
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x800000024A022BC0;
  *(_QWORD *)(inited + 72) = sub_24A01EFE8();
  return sub_249F76654(inited, &qword_2544CAC60);
}

id sub_249F78200(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_249F990DC(0, (unint64_t *)&unk_2544CAC50);
    v4 = (void *)sub_24A01EDF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_249F78284()
{
  return sub_249F788A8();
}

uint64_t sub_249F78290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  v2 = sub_249FCBC58(0, 0, 1);
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_249F782EC()
{
  return sub_249F788A8();
}

uint64_t sub_249F782F8()
{
  return sub_249F788A8();
}

void sub_249F78304(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  swift_retain();
  v2 = (void *)sub_24A01F09C();
  v3 = sub_249FCBC58(v2, 0, 1);
  swift_release();

  *a1 = v3;
}

uint64_t sub_249F783AC()
{
  return sub_249F788A8();
}

void sub_249F783B8(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A0208B0;
  v3 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 2;
  swift_retain();
  v4 = (void *)sub_24A01F09C();
  v5 = sub_249FCBC58(v4, 0, 1);
  swift_release();

  *a1 = v5;
}

uint64_t sub_249F784A4()
{
  return sub_249F788A8();
}

void sub_249F784B0(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A0208B0;
  v3 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 63;
  swift_retain();
  v4 = (void *)sub_24A01F09C();
  v5 = sub_249FCBC58(v4, 0, 1);
  swift_release();

  *a1 = v5;
}

uint64_t sub_249F7859C()
{
  return sub_249F788A8();
}

void sub_249F785A8(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A0208B0;
  v3 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 6;
  swift_retain();
  v4 = (void *)sub_24A01F09C();
  v5 = sub_249FCBC58(v4, 0, 1);
  swift_release();

  *a1 = v5;
}

uint64_t sub_249F78694()
{
  return sub_249F788A8();
}

uint64_t sub_249F786A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  v2 = sub_249FCCB28(0);
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_249F786F4()
{
  return sub_249F788A8();
}

uint64_t sub_249F78700()
{
  return sub_249F7FDD8(&qword_2544CA218);
}

uint64_t sub_249F78714@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v12 = MEMORY[0x24BEE4B00];
  v4 = *(void **)(v3 + 16);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = v3;
  v5[4] = &v12;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_249F993C4;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_229;
  v7 = _Block_copy(aBlock);
  swift_retain_n();
  v8 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    result = swift_release();
    *a2 = v10;
  }
  return result;
}

uint64_t sub_249F78890()
{
  return sub_249F788A8();
}

uint64_t sub_249F7889C()
{
  return sub_249F788A8();
}

uint64_t sub_249F788A8()
{
  uint64_t v1;

  sub_24A01F138();
  return v1;
}

uint64_t sub_249F788F0@<X0>(unsigned __int8 a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  swift_retain();
  v4 = sub_249FCC124(a1);
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_249F78948(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = type metadata accessor for VUGallery.TagView(0);
  v3 = *(_QWORD *)(v37 - 8);
  v4 = MEMORY[0x24BDAC7A8](v37);
  v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v32 - v10;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1)
  {
    if (a1 == 1)
      return v12;
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  MEMORY[0x24BDAC7A8](v9);
  *(&v32 - 2) = (char *)v1;
  *((_WORD *)&v32 - 4) = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  result = sub_24A01F138();
  v15 = v38;
  v38 = v12;
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
    v24 = v12;
LABEL_18:
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v38 = v12;
      sub_249F8C9C8(0, v25, 0);
      v26 = v24 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v27 = *(_QWORD *)(v3 + 72);
      do
      {
        v28 = v36;
        sub_249F9896C(v26, v36, type metadata accessor for VUGallery.TagView);
        v29 = *(_QWORD *)(v28 + *(int *)(v37 + 28));
        sub_249F989C0(v28, type metadata accessor for VUGallery.TagView);
        v12 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249F8C9C8(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v38;
        }
        v31 = *(_QWORD *)(v12 + 16);
        v30 = *(_QWORD *)(v12 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_249F8C9C8(v30 > 1, v31 + 1, 1);
          v12 = v38;
        }
        *(_QWORD *)(v12 + 16) = v31 + 1;
        *(_QWORD *)(v12 + 8 * v31 + 32) = v29;
        v26 += v27;
        --v25;
      }
      while (v25);
      swift_release();
    }
    else
    {
      swift_release();
      return MEMORY[0x24BEE4AF8];
    }
    return v12;
  }
  v32 = v8;
  v17 = 0;
  v18 = MEMORY[0x24BEE4AF8];
  v33 = v16;
  v34 = v3;
  while (v17 < *(_QWORD *)(v15 + 16))
  {
    v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v20 = *(_QWORD *)(v3 + 72);
    sub_249F9896C(v15 + v19 + v20 * v17, (uint64_t)v11, type metadata accessor for VUGallery.TagView);
    if (v35 == v11[*(int *)(v37 + 24)])
    {
      v21 = (uint64_t)v32;
      sub_249F98928((uint64_t)v11, (uint64_t)v32, type metadata accessor for VUGallery.TagView);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_249F8C9EC(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v38;
      v23 = *(_QWORD *)(v38 + 16);
      v22 = *(_QWORD *)(v38 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_249F8C9EC(v22 > 1, v23 + 1, 1);
        v18 = v38;
      }
      *(_QWORD *)(v18 + 16) = v23 + 1;
      result = sub_249F98928(v21, v18 + v19 + v23 * v20, type metadata accessor for VUGallery.TagView);
      v16 = v33;
      v3 = v34;
    }
    else
    {
      result = sub_249F989C0((uint64_t)v11, type metadata accessor for VUGallery.TagView);
    }
    if (v16 == ++v17)
    {
      v24 = v38;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249F78CC8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = type metadata accessor for VUGallery.TagView(0);
  v2 = *(_QWORD *)(v33 - 8);
  v3 = MEMORY[0x24BDAC7A8](v33);
  v32 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v28 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - v8;
  v10 = MEMORY[0x24BEE4AF8];
  if (a1)
  {
    if (a1 == 1)
      return v10;
    LODWORD(v31) = 0;
  }
  else
  {
    LODWORD(v31) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  result = v34;
  v34 = v10;
  v30 = *(_QWORD *)(result + 16);
  if (!v30)
  {
    v19 = v10;
LABEL_18:
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v34 = v10;
      sub_249F8C9C8(0, v20, 0);
      v21 = *(unsigned __int8 *)(v2 + 80);
      v31 = v19;
      v22 = v19 + ((v21 + 32) & ~v21);
      v23 = *(_QWORD *)(v2 + 72);
      do
      {
        v24 = v32;
        sub_249F9896C(v22, v32, type metadata accessor for VUGallery.TagView);
        v25 = *(_QWORD *)(v24 + *(int *)(v33 + 28));
        sub_249F989C0(v24, type metadata accessor for VUGallery.TagView);
        v10 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249F8C9C8(0, *(_QWORD *)(v10 + 16) + 1, 1);
          v10 = v34;
        }
        v27 = *(_QWORD *)(v10 + 16);
        v26 = *(_QWORD *)(v10 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_249F8C9C8(v26 > 1, v27 + 1, 1);
          v10 = v34;
        }
        *(_QWORD *)(v10 + 16) = v27 + 1;
        *(_QWORD *)(v10 + 8 * v27 + 32) = v25;
        v22 += v23;
        --v20;
      }
      while (v20);
      swift_release();
    }
    else
    {
      swift_release();
      return MEMORY[0x24BEE4AF8];
    }
    return v10;
  }
  v12 = 0;
  v13 = MEMORY[0x24BEE4AF8];
  v28 = v7;
  v29 = v2;
  while (v12 < *(_QWORD *)(result + 16))
  {
    v14 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v15 = *(_QWORD *)(v2 + 72);
    v16 = result;
    sub_249F9896C(result + v14 + v15 * v12, (uint64_t)v9, type metadata accessor for VUGallery.TagView);
    if ((_DWORD)v31 == v9[*(int *)(v33 + 24)])
    {
      sub_249F98928((uint64_t)v9, (uint64_t)v7, type metadata accessor for VUGallery.TagView);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_249F8C9EC(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = v34;
      v18 = *(_QWORD *)(v34 + 16);
      v17 = *(_QWORD *)(v34 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_249F8C9EC(v17 > 1, v18 + 1, 1);
        v13 = v34;
      }
      *(_QWORD *)(v13 + 16) = v18 + 1;
      v7 = v28;
      sub_249F98928((uint64_t)v28, v13 + v14 + v18 * v15, type metadata accessor for VUGallery.TagView);
      v2 = v29;
    }
    else
    {
      sub_249F989C0((uint64_t)v9, type metadata accessor for VUGallery.TagView);
    }
    ++v12;
    result = v16;
    if (v30 == v12)
    {
      v19 = v34;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249F79020(char *a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint8_t *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v5 = v2;
  v8 = sub_24A01EDCC();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  type metadata accessor for VUGalleryTransaction();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  swift_retain();
  sub_24A01ED9C();
  *(_BYTE *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v5;
  swift_release();
  v13 = sub_24A01ED90();
  v14 = sub_24A01F0D8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v36 = v10;
    v16 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_249F70000, v13, v14, "Starting gallery transaction", v15, 2u);
    v17 = v16;
    v4 = v3;
    v10 = v36;
    MEMORY[0x24BD07950](v17, -1, -1);
  }

  a2(v12);
  if (v4)
  {
    sub_24A01EDC0();
    sub_24A01F12C();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
    v21 = v4;
    v22 = v4;
    v23 = sub_24A01ED90();
    v24 = sub_24A01F0E4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v27 = v4;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      v39 = v28;
      sub_24A01F1F8();
      *v26 = v28;

      _os_log_impl(&dword_249F70000, v23, v24, "%@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF530);
      swift_arrayDestroy();
      MEMORY[0x24BD07950](v26, -1, -1);
      MEMORY[0x24BD07950](v25, -1, -1);

    }
    else
    {

    }
    swift_willThrow();
  }
  else
  {
    v18 = sub_24A01ED90();
    v19 = sub_24A01F0D8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_249F70000, v18, v19, "Flushing gallery transaction", v20, 2u);
      MEMORY[0x24BD07950](v20, -1, -1);
    }

    sub_24A01B380();
    swift_retain_n();
    swift_retain();
    v30 = sub_24A01ED90();
    v31 = sub_24A01F0CC();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      *(_DWORD *)v32 = 134218496;
      swift_retain();
      v33 = sub_249FCBC58(0, 0, 1);
      swift_release();
      v39 = v33;
      sub_24A01F1F8();
      swift_release();
      *(_WORD *)(v32 + 12) = 2048;
      v39 = *(_QWORD *)(v12 + 32);
      sub_24A01F1F8();
      *(_WORD *)(v32 + 22) = 2048;
      v34 = *(_QWORD *)(v12 + 40);
      swift_release();
      v39 = v34;
      sub_24A01F1F8();
      swift_release();
      _os_log_impl(&dword_249F70000, v30, v31, "Transaction succeeded, gallery now has %ld observations (%ld added and %ld removed)", (uint8_t *)v32, 0x20u);
      MEMORY[0x24BD07950](v32, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_release();
    }

  }
  *(_QWORD *)(v12 + 24) = 0;
  swift_release();
  return swift_release();
}

uint64_t sub_249F79564(void (*a1)(uint64_t))
{
  uint64_t v1;
  char v3;

  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  return sub_249F79020(&v3, a1);
}

float VUGallery.ProgressStatus.fractionCompleted.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

BOOL static VUGallery.UpdateMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VUGallery.UpdateMode.hash(into:)()
{
  return sub_24A01F4F8();
}

BOOL sub_249F795E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_249F79608(uint64_t a1, uint64_t a2)
{
  return sub_249F79628(0, a1, a2);
}

uint64_t sub_249F79628(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A01EAA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v13 = 0;
  v12 = 1;
  sub_249F79B20((uint64_t)&unk_251B683B8, (uint64_t)v8, &v13, a1, 0x100000000, a2, a3);
  return sub_249F990A0((uint64_t)v8, (uint64_t *)&unk_2544CAD60);
}

uint64_t sub_249F79718(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t inited;
  uint64_t v13;
  _BYTE v15[7];
  unsigned __int8 v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF538);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0208B0;
  *(_BYTE *)(inited + 32) = v11;
  v13 = sub_24A01EAA8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  v16 = 0;
  v15[4] = 1;
  sub_249F79B20(inited, (uint64_t)v10, &v16, a2, 0x100000000, a3, a4);
  sub_249F990A0((uint64_t)v10, (uint64_t *)&unk_2544CAD60);
  return swift_setDeallocating();
}

uint64_t sub_249F79840(char *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t inited;
  uint64_t v13;
  _BYTE v15[7];
  unsigned __int8 v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF538);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0208B0;
  *(_BYTE *)(inited + 32) = v11;
  v13 = sub_24A01EAA8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  v16 = 0;
  v15[4] = 0;
  sub_249F79B20(inited, (uint64_t)v10, &v16, 1, LODWORD(a4), a2, a3);
  sub_249F990A0((uint64_t)v10, (uint64_t *)&unk_2544CAD60);
  return swift_setDeallocating();
}

uint64_t sub_249F79970(char *a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v12;
  unsigned __int8 v13;
  uint64_t inited;
  unsigned __int8 v16;

  v12 = *a1;
  v13 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF538);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0208B0;
  *(_BYTE *)(inited + 32) = v12;
  v16 = v13;
  sub_249F79B20(inited, a2, &v16, a5, a3 | ((HIDWORD(a3) & 1) << 32), a6, a7);
  return swift_setDeallocating();
}

uint64_t sub_249F79A2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[15];
  unsigned __int8 v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_24A01EAA8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v14 = 0;
  v13[12] = 1;
  sub_249F79B20(a1, (uint64_t)v10, &v14, a2, 0x100000000, a3, a4);
  return sub_249F990A0((uint64_t)v10, (uint64_t *)&unk_2544CAD60);
}

void sub_249F79B20(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  NSObject *v17;
  _BOOL4 v18;
  _DWORD *v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  _DWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSString *v46;
  Class v47;
  uint64_t inited;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  os_log_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t aBlock[6];
  uint64_t v69;
  int v70;
  int v71;

  v64 = a5;
  v62 = a2;
  v65 = sub_24A01EDCC();
  v13 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v63 = v7;
  swift_bridgeObjectRetain_n();
  v17 = sub_24A01ED90();
  v70 = sub_24A01F0F0();
  v18 = os_log_type_enabled(v17, (os_log_type_t)v70);
  v71 = v16;
  if (v18)
  {
    v56 = v17;
    v57 = a4;
    v58 = a6;
    v59 = v15;
    v60 = a7;
    v61 = v13;
    v19 = (_DWORD *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    aBlock[0] = v54;
    v55 = v19;
    *v19 = 136315650;
    v20 = *(_QWORD *)(a1 + 16);
    v21 = MEMORY[0x24BEE4AF8];
    if (v20)
    {
      v69 = MEMORY[0x24BEE4AF8];
      sub_249F8C988(0, v20, 0);
      v21 = v69;
      v53 = a1;
      v22 = (char *)(a1 + 32);
      do
      {
        v23 = *v22++;
        v67 = v23;
        v24 = sub_24A01EE74();
        v26 = v25;
        v69 = v21;
        v28 = *(_QWORD *)(v21 + 16);
        v27 = *(_QWORD *)(v21 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_249F8C988(v27 > 1, v28 + 1, 1);
          v21 = v69;
        }
        *(_QWORD *)(v21 + 16) = v28 + 1;
        v29 = v21 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v24;
        *(_QWORD *)(v29 + 40) = v26;
        --v20;
      }
      while (v20);
      a1 = v53;
      LOBYTE(v16) = v71;
    }
    v31 = v55;
    v32 = MEMORY[0x24BD06E64](v21, MEMORY[0x24BEE0D00]);
    v34 = v33;
    swift_bridgeObjectRelease();
    v69 = sub_249F8AAE8(v32, v34, aBlock);
    sub_24A01F1F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v31 + 6) = 2080;
    LOBYTE(v69) = v16;
    v35 = sub_24A01EE74();
    v69 = sub_249F8AAE8(v35, v36, aBlock);
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    *((_WORD *)v31 + 11) = 2080;
    v30 = v57;
    if ((v57 & 1) != 0)
      v37 = 0x646563726F662820;
    else
      v37 = 0;
    if ((v57 & 1) != 0)
      v38 = 0xE900000000000029;
    else
      v38 = 0xE000000000000000;
    v69 = sub_249F8AAE8(v37, v38, aBlock);
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    v39 = v56;
    _os_log_impl(&dword_249F70000, v56, (os_log_type_t)v70, "Updating the gallery for types %s with mode %s%s", (uint8_t *)v31, 0x20u);
    v40 = v54;
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v40, -1, -1);
    MEMORY[0x24BD07950](v31, -1, -1);

    v13 = v61;
    a7 = v60;
    v15 = v59;
    a6 = v58;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v30 = a4;
  }
  v41 = a1;
  CFAbsoluteTimeGetCurrent();
  v69 = 0;
  v42 = v63;
  v43 = sub_24A01EDC0();
  MEMORY[0x24BDAC7A8](v43);
  *(&v53 - 8) = (uint64_t)&v69;
  *(&v53 - 7) = v62;
  *(&v53 - 6) = v42;
  *(&v53 - 5) = v41;
  *((_BYTE *)&v53 - 32) = v71;
  *((_BYTE *)&v53 - 31) = v30 & 1;
  v44 = BYTE4(v64);
  *((_DWORD *)&v53 - 7) = v64;
  *((_BYTE *)&v53 - 24) = v44 & 1;
  *(&v53 - 2) = a6;
  *(&v53 - 1) = a7;
  v45 = v66;
  sub_24A01F12C();
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v65);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v65);
    v46 = (NSString *)sub_24A01EE44();
    v47 = NSClassFromString(v46);

    if (!v47)
    {
      CFAbsoluteTimeGetCurrent();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF528);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24A0208D0;
      strcpy((char *)(inited + 32), "update_timing");
      *(_WORD *)(inited + 46) = -4864;
      *(_QWORD *)(inited + 48) = sub_24A01EFE8();
      *(_QWORD *)(inited + 56) = 0xD00000000000001DLL;
      *(_QWORD *)(inited + 64) = 0x800000024A022B50;
      *(_QWORD *)(inited + 72) = sub_24A01EFE8();
      *(_QWORD *)(inited + 80) = 0xD000000000000010;
      *(_QWORD *)(inited + 88) = 0x800000024A022B70;
      *(_QWORD *)(inited + 96) = sub_24A01F048();
      v49 = sub_249F76654(inited, (uint64_t *)&unk_2578FF948);
      v50 = (void *)sub_24A01EE44();
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = v49;
      aBlock[4] = (uint64_t)sub_249F98FC4;
      aBlock[5] = v51;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_249F78200;
      aBlock[3] = (uint64_t)&block_descriptor_215;
      v52 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v52);

    }
  }
}

uint64_t sub_249F7A1AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v29;

  v14 = sub_24A01EAA8();
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a2, 1, v14) == 1)
  {
    swift_retain();
    v15 = sub_249FD1C90(256);
    swift_release();
  }
  v16 = a9;
  *a1 = v15;
  v17 = *(_QWORD *)(a4 + 16);
  if (v17)
  {
    v26 = a2;
    v29 = MEMORY[0x24BEE4AF8];
    swift_retain();
    sub_249F8CAA8(0, v17, 0);
    v18 = v29;
    v19 = (char *)(a4 + 32);
    v20 = *(_QWORD *)(v29 + 16);
    do
    {
      v22 = *v19++;
      v21 = v22;
      v23 = *(_QWORD *)(v29 + 24);
      if (v20 >= v23 >> 1)
        sub_249F8CAA8(v23 > 1, v20 + 1, 1);
      *(_QWORD *)(v29 + 16) = v20 + 1;
      *(_BYTE *)(v29 + v20++ + 32) = 0x63F0200u >> (8 * v21);
      --v17;
    }
    while (v17);
    a2 = v26;
    v16 = a9;
  }
  else
  {
    swift_retain();
    v18 = MEMORY[0x24BEE4AF8];
  }
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a3;
  v24[3] = a8;
  v24[4] = v16;
  swift_retain();
  sub_249F9900C(a8);
  sub_249FFD1AC(v18, a2, a5 & 1, a6 & 1, a7 | ((HIDWORD(a7) & 1) << 32), (void (*)(float))sub_249F99000, (uint64_t)v24);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_249F7A3D0(float a1, uint64_t a2, uint64_t (*a3)(float *))
{
  NSObject *v5;
  os_log_type_t v6;
  uint64_t result;
  float v8;
  uint8_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  float v13;

  v5 = sub_24A01ED90();
  v6 = sub_24A01F0D8();
  if (os_log_type_enabled(v5, v6))
  {
    result = swift_slowAlloc();
    *(_DWORD *)result = 134217984;
    v8 = a1 * 100.0;
    if ((~COERCE_INT(a1 * 100.0) & 0x7F800000) != 0)
    {
      if (v8 > -9.2234e18)
      {
        if (v8 < 9.2234e18)
        {
          v9 = (uint8_t *)result;
          sub_24A01F1F8();
          _os_log_impl(&dword_249F70000, v5, v6, "Updated %ld%% of the gallery", v9, 0xCu);
          MEMORY[0x24BD07950](v9, -1, -1);
          goto LABEL_6;
        }
LABEL_14:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:

  if (!a3)
    return 1;
  v13 = a1;
  if ((a3(&v13) & 1) != 0)
    return 1;
  v10 = sub_24A01ED90();
  v11 = sub_24A01F0CC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_249F70000, v10, v11, "Update was cancelled!", v12, 2u);
    MEMORY[0x24BD07950](v12, -1, -1);
  }

  return 0;
}

uint64_t sub_249F7A594(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v6 = *a1;
  v7 = sub_24A01ED90();
  v8 = sub_24A01F0F0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v29 = a3;
    v10 = swift_slowAlloc();
    *(_QWORD *)&v26 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_24A01EE74();
    v23[0] = sub_249F8AAE8(v11, v12, (uint64_t *)&v26);
    v4 = v3;
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F70000, v7, v8, "Updating gallery plugin %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v10, -1, -1);
    MEMORY[0x24BD07950](v9, -1, -1);
  }

  if (v6)
    v13 = 0xD000000000000017;
  else
    v13 = 0xD000000000000013;
  if (v6)
    v14 = 0x800000024A021CB0;
  else
    v14 = 0x800000024A021C90;
  v15 = sub_249F75228(v13, v14);
  result = swift_bridgeObjectRelease();
  if (!v4)
  {
    if (!v15)
      goto LABEL_18;
    v17 = swift_conformsToProtocol2();
    if (v17)
      v18 = v17;
    else
      v18 = 0;
    if (!v17)
      v15 = 0;
    if (v15)
    {
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8);
      *((_QWORD *)&v27 + 1) = v15;
      v28 = v18;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
      v20 = swift_retain();
      v19(v20, v15, v18);
    }
    else
    {
LABEL_18:
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
    }
    sub_249F9905C((uint64_t)&v26, (uint64_t)v23, &qword_2578FF540);
    if (v24)
    {
      v21 = v25;
      v22 = __swift_project_boxed_opaque_existential_1Tm(v23, v24);
      MEMORY[0x24BDAC7A8](v22);
      (*(void (**)(uint64_t (*)(float)))(v21 + 16))(sub_249F92604);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    else
    {
      sub_249F990A0((uint64_t)v23, &qword_2578FF540);
    }
    return sub_249F990A0((uint64_t)&v26, &qword_2578FF540);
  }
  return result;
}

uint64_t static VUGallery.Bookmark.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_2578FF510;
}

uint64_t static VUGallery.Bookmark.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_2578FF510 = a1;
  return result;
}

uint64_t (*static VUGallery.Bookmark.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_249F7A9C4(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_24A01EE44();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID + 8) & 1) == 0)
  {
    v6 = (id)sub_24A01F4C8();
    v7 = (id)sub_24A01EE44();
    objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  }
}

id VUGallery.Bookmark.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_249F93748();

  return v4;
}

id VUGallery.Bookmark.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_249F93748();

  return v2;
}

void sub_249F7ABB8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  char v5;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  id v13;
  objc_super v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID);
  v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID + 8);
  v6 = (objc_class *)type metadata accessor for VUGallery.Bookmark();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token] = 0;
  v9 = &v7[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = *(void **)&v7[v8];
  *(_QWORD *)&v7[v8] = v3;
  v11 = v3;
  v12 = v7;

  *(_QWORD *)v9 = v4;
  v9[8] = v5;

  v14.receiver = v12;
  v14.super_class = v6;
  v13 = objc_msgSendSuper2(&v14, sel_init);

  a1[3] = v6;
  *a1 = v13;
}

id VUGallery.Bookmark.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VUGallery.Bookmark.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VUGallery.Bookmark.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUGallery.Bookmark();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249F7ADAC()
{
  uint64_t v1;

  type metadata accessor for VUGallery.Bookmark();
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7AE00(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  objc_super v14;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v2 = objc_msgSend(v1, sel_persistentStoreCoordinator);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_currentPersistentHistoryTokenFromStores_, 0);
    swift_release();

  }
  else
  {
    swift_release();
    v4 = 0;
  }
  v5 = (objc_class *)type metadata accessor for VUGallery.Bookmark();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token;
  *(_QWORD *)&v6[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token] = 0;
  v8 = &v6[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = v4;
  v10 = v6;
  v11 = v4;

  *(_QWORD *)v8 = 0;
  v8[8] = 1;

  v14.receiver = v10;
  v14.super_class = v5;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  objc_msgSend(v12, sel_copy);
  sub_24A01F21C();
  swift_unknownObjectRelease();
  return swift_dynamicCast();
}

id sub_249F7AF70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

void sub_249F7AFB4(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;
  v5 = v2;

}

void *sub_249F7B008()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_249F7B048(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _BYTE *v20;
  objc_super v22;
  uint64_t v23;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = 0;
  v6 = a1;
  if (!a1)
  {
    v7 = (objc_class *)type metadata accessor for VUGallery.Bookmark();
    v8 = (char *)objc_allocWithZone(v7);
    v9 = OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token;
    *(_QWORD *)&v8[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token] = 0;
    v10 = &v8[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID];
    *(_QWORD *)v10 = 0;
    v10[8] = 1;
    v11 = *(void **)&v8[v9];
    *(_QWORD *)&v8[v9] = 0;
    v12 = v8;

    *(_QWORD *)v10 = 0;
    v10[8] = 0;

    v22.receiver = v12;
    v22.super_class = v7;
    v6 = objc_msgSendSuper2(&v22, sel_init);
  }
  swift_beginAccess();
  v13 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  v14 = a1;

  *(_QWORD *)(v3 + 40) = a2;
  if (a1)
  {
    v16 = *(void **)&v14[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token];
    v15 = v16;
  }
  else
  {
    v16 = 0;
  }
  v17 = *(void **)(a2 + 16);
  MEMORY[0x24BDAC7A8](v15);
  swift_retain();
  v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA220);
  sub_24A01F180();

  v19 = v23;
  if (v23)
  {

    swift_release();
    *(_QWORD *)(v3 + 24) = v19;
    *(_QWORD *)(v3 + 32) = 0;
  }
  else
  {
    sub_249F74AF4();
    swift_allocError();
    *v20 = 7;
    swift_willThrow();

    swift_release();
    swift_release();
    type metadata accessor for VUGallery.ChangeSequence();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t sub_249F7B278@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(id *, _QWORD);
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v83;
  char v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  int64_t v91;
  char v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  void (*v103)(id *, _QWORD);
  id v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  void *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  id v116;
  void *v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  id v121;
  uint64_t v122;
  id v123;
  void *v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  id v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t (*v132)(_BYTE *, _QWORD, uint64_t, uint64_t);
  _BYTE *v133;
  void *v134;
  id v135;
  id v136;
  _BYTE *v137;
  void *v138;
  id v139;
  uint64_t v140;
  id v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  _BYTE *v151;
  char *v152;
  _QWORD *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  id v162[5];
  __int128 v163;
  __int128 v164;

  v5 = v1;
  v151 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v150 = (char *)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v152 = (char *)&v149 - v9;
  v157 = v1 + 3;
  swift_beginAccess();
  v154 = 0;
  v153 = v1;
  while (1)
  {
    while (1)
    {
      swift_beginAccess();
      v11 = v5[3];
      v10 = v5[4];
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        v114 = sub_24A01F3CC();
        swift_bridgeObjectRelease();
        if (v10 == v114)
        {
LABEL_121:
          swift_endAccess();
          v115 = type metadata accessor for VUGalleryUpdate(0);
          return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v151, 1, 1, v115);
        }
      }
      else if (v10 == *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_121;
      }
      v12 = *v157;
      if ((*v157 & 0xC000000000000001) != 0)
      {
        v13 = (id)MEMORY[0x24BD071F4](v10);
      }
      else
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (v10 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_153;
        v13 = *(id *)(v12 + 8 * v10 + 32);
      }
      v14 = v13;
      if (__OFADD__(v10, 1))
        goto LABEL_152;
      v5[4] = v10 + 1;
      swift_endAccess();
      v15 = (void *)v5[2];
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v14, sel_changeID);
        v18 = &v16[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID];
        *(_QWORD *)v18 = v17;
        v18[8] = 0;

      }
      v19 = objc_msgSend(v14, sel_changedObjectID);
      v20 = objc_msgSend(v19, sel_entityName);

      v21 = sub_24A01EE68();
      v23 = v22;

      v156 = type metadata accessor for VUIndexMapping();
      v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
      v24 = sub_24A01EE68();
      v26 = v25;

      if (v21 == v24 && v23 == v26)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
      v27 = sub_24A01F45C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
        break;
      v35 = objc_msgSend(v14, sel_changedObjectID);
      v36 = objc_msgSend(v35, sel_entityName);

      v37 = sub_24A01EE68();
      v39 = v38;

      v156 = type metadata accessor for VUIndexTag();
      v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
      v40 = sub_24A01EE68();
      v42 = v41;

      if (v37 == v40 && v39 == v42)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v43 = sub_24A01F45C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_2;
      }
      if (objc_msgSend(v14, sel_changeType) == (id)1
        && (v44 = objc_msgSend(v14, sel_updatedProperties)) != 0)
      {
        v45 = v44;
        v155 = v14;
        sub_249F990DC(0, &qword_2544CAB98);
        sub_249F9398C();
        v46 = sub_24A01F024();

        v159 = v46 & 0xC000000000000001;
        if ((v46 & 0xC000000000000001) != 0)
        {
          v47 = sub_24A01F27C();
          if (!v47)
            goto LABEL_78;
        }
        else
        {
          v47 = *(_QWORD *)(v46 + 16);
          if (!v47)
          {
LABEL_78:
            swift_bridgeObjectRelease();
            v83 = (_QWORD *)MEMORY[0x24BEE4AF8];
            goto LABEL_95;
          }
        }
        v160 = MEMORY[0x24BEE4AF8];
        sub_249F8C988(0, v47 & ~(v47 >> 63), 0);
        if (v159)
        {
          result = sub_24A01F24C();
          v49 = 1;
        }
        else
        {
          result = sub_249F92234(v46);
          v49 = v84 & 1;
        }
        *(_QWORD *)&v163 = result;
        *((_QWORD *)&v163 + 1) = v48;
        LOBYTE(v164) = v49;
        if (v47 < 0)
          goto LABEL_163;
        v85 = v46 & 0xFFFFFFFFFFFFFF8;
        if (v46 < 0)
          v85 = v46;
        v158 = v85;
        do
        {
          while (1)
          {
            v2 = (id)*((_QWORD *)&v163 + 1);
            v91 = v163;
            v92 = v164;
            sub_249F91FCC(v163, *((uint64_t *)&v163 + 1), v164, v46);
            v94 = v93;
            v95 = objc_msgSend(v93, sel_name);
            v96 = sub_24A01EE68();
            v98 = v97;

            v99 = v160;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = sub_249F8C988(0, *(_QWORD *)(v99 + 16) + 1, 1);
              v99 = v160;
            }
            v101 = *(_QWORD *)(v99 + 16);
            v100 = *(_QWORD *)(v99 + 24);
            if (v101 >= v100 >> 1)
            {
              result = sub_249F8C988(v100 > 1, v101 + 1, 1);
              v99 = v160;
            }
            *(_QWORD *)(v99 + 16) = v101 + 1;
            v102 = v99 + 16 * v101;
            *(_QWORD *)(v102 + 32) = v96;
            *(_QWORD *)(v102 + 40) = v98;
            if (v159)
              break;
            v86 = sub_249F91EE8(v91, (int)v2, v92, v46);
            v88 = v87;
            v90 = v89;
            sub_249F939E4(v91, (uint64_t)v2, v92);
            *(_QWORD *)&v163 = v86;
            *((_QWORD *)&v163 + 1) = v88;
            LOBYTE(v164) = v90 & 1;
            if (!--v47)
              goto LABEL_94;
          }
          if ((v92 & 1) == 0)
            goto LABEL_167;
          if (sub_24A01F258())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB88);
          v103 = (void (*)(id *, _QWORD))sub_24A01F03C();
          sub_24A01F294();
          v103(v162, 0);
          --v47;
        }
        while (v47);
LABEL_94:
        sub_249F939E4(v163, *((uint64_t *)&v163 + 1), v164);
        swift_bridgeObjectRelease();
        v83 = (_QWORD *)v160;
LABEL_95:
        v104 = (id)v83[2];
        v3 = v155;
        v4 = (uint64_t)v152;
        v5 = v153;
        if (!v104)
          goto LABEL_104;
        if ((v83[4] != 0x6465766C6F736572 || v83[5] != 0xE800000000000000) && (sub_24A01F45C() & 1) == 0)
        {
          if (v104 == (id)1)
            goto LABEL_104;
          if (v83[6] != 0x6465766C6F736572 || v83[7] != 0xE800000000000000)
          {
            result = sub_24A01F45C();
            if ((result & 1) == 0)
            {
              if (v104 != (id)2)
              {
                v111 = v83 + 9;
                v112 = 2;
                while (1)
                {
                  v2 = (id)(v112 + 1);
                  if (__OFADD__(v112, 1))
                    goto LABEL_165;
                  if (*(v111 - 1) == 0x6465766C6F736572 && *v111 == 0xE800000000000000)
                    goto LABEL_99;
                  result = sub_24A01F45C();
                  if ((result & 1) != 0)
                    goto LABEL_99;
                  v111 += 2;
                  ++v112;
                  if (v2 == v104)
                    goto LABEL_104;
                }
              }
              goto LABEL_104;
            }
          }
        }
LABEL_99:
        swift_bridgeObjectRelease();
        v105 = v5[5];
        swift_retain();
        v106 = objc_msgSend(v3, sel_changedObjectID);
        v107 = MEMORY[0x24BDAC7A8](v106);
        *(&v149 - 2) = v105;
        *(&v149 - 1) = v107;
        v2 = v108;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB90);
        v109 = v154;
        sub_24A01F180();
        v154 = v109;
        swift_release();

        v11 = (unint64_t)v162[0];
        if (v162[0])
        {
          v110 = (void *)swift_dynamicCastClass();
          if (v110)
          {
            v2 = v110;
            result = (uint64_t)objc_msgSend(v110, sel_observation);
            if (!result)
              goto LABEL_168;
            v138 = (void *)result;
            v139 = objc_msgSend((id)result, sel_mapping);

            if (v139)
            {
              v140 = (uint64_t)objc_msgSend(v139, sel_label);

LABEL_155:
              if (objc_msgSend(v2, sel_resolved))
              {
                v141 = objc_msgSend(v2, sel_uuid);
                if (v141)
                {
                  v142 = v141;
                  v143 = (uint64_t)v150;
                  sub_24A01EB98();

                  v144 = sub_24A01EBA4();
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v143, 0, 1, v144);
                }
                else
                {

                  v146 = sub_24A01EBA4();
                  v143 = (uint64_t)v150;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v150, 1, 1, v146);
                }
                sub_249F98C10(v143, v4, &qword_2544CAD70);
              }
              else
              {

                v145 = sub_24A01EBA4();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v4, 1, 1, v145);
              }
              v147 = v151;
              *v151 = 1;
              *((_QWORD *)v147 + 1) = v140;
              v148 = type metadata accessor for VUGalleryEntityUpdate(0);
              sub_249F98C10(v4, (uint64_t)&v147[*(int *)(v148 + 24)], &qword_2544CAD70);
              v131 = type metadata accessor for VUGalleryUpdate(0);
              swift_storeEnumTagMultiPayload();
              v132 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56);
              v133 = v147;
              return v132(v133, 0, 1, v131);
            }
LABEL_154:
            v140 = -1;
            goto LABEL_155;
          }

        }
        else
        {
LABEL_61:

        }
      }
      else
      {
LABEL_2:

      }
    }
    if (objc_msgSend(v14, sel_changeType) == (id)2)
    {
      v116 = objc_msgSend(v14, sel_tombstone);
      if (v116)
      {
        v117 = v116;
        v118 = sub_24A01EDFC();

        v160 = 0x696669746E656469;
        v161 = 0xEA00000000007265;
        sub_24A01F2B8();
        if (*(_QWORD *)(v118 + 16) && (v119 = sub_249F8B15C((uint64_t)v162), (v120 & 1) != 0))
        {
          sub_249F93A3C(*(_QWORD *)(v118 + 56) + 32 * v119, (uint64_t)&v163);
        }
        else
        {
          v163 = 0u;
          v164 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_249F93A08((uint64_t)v162);
        if (*((_QWORD *)&v164 + 1))
        {
          sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v121 = v162[0];
            v122 = (uint64_t)objc_msgSend(v162[0], sel_integerValue);

            goto LABEL_133;
          }
LABEL_132:
          v122 = -1;
LABEL_133:
          v123 = objc_msgSend(v14, sel_tombstone);
          if (v123)
          {
            v124 = v123;
            v125 = sub_24A01EDFC();

            v160 = 0x6C6562616CLL;
            v161 = 0xE500000000000000;
            sub_24A01F2B8();
            if (*(_QWORD *)(v125 + 16) && (v126 = sub_249F8B15C((uint64_t)v162), (v127 & 1) != 0))
            {
              sub_249F93A3C(*(_QWORD *)(v125 + 56) + 32 * v126, (uint64_t)&v163);
            }
            else
            {
              v163 = 0u;
              v164 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_249F93A08((uint64_t)v162);
            if (*((_QWORD *)&v164 + 1))
            {
              sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v128 = v162[0];
                v129 = (uint64_t)objc_msgSend(v162[0], sel_integerValue);

LABEL_145:
                v130 = v151;
                *v151 = 2;
                *((_QWORD *)v130 + 1) = v122;
                *((_QWORD *)v130 + 2) = v129;
                v131 = type metadata accessor for VUGalleryUpdate(0);
                swift_storeEnumTagMultiPayload();
                v132 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56);
                v133 = v130;
                return v132(v133, 0, 1, v131);
              }

LABEL_144:
              v129 = -1;
              goto LABEL_145;
            }
          }
          else
          {
            v163 = 0u;
            v164 = 0u;
          }

          sub_249F990A0((uint64_t)&v163, &qword_2544CAF40);
          goto LABEL_144;
        }
      }
      else
      {
        v163 = 0u;
        v164 = 0u;
      }
      sub_249F990A0((uint64_t)&v163, &qword_2544CAF40);
      goto LABEL_132;
    }
    if (objc_msgSend(v14, sel_changeType) != (id)1)
      goto LABEL_2;
    v28 = objc_msgSend(v14, sel_updatedProperties);
    if (!v28)
      goto LABEL_2;
    v29 = v28;
    v155 = v14;
    sub_249F990DC(0, &qword_2544CAB98);
    sub_249F9398C();
    v30 = sub_24A01F024();

    v159 = v30 & 0xC000000000000001;
    if ((v30 & 0xC000000000000001) == 0)
      break;
    v31 = sub_24A01F27C();
    if (v31)
      goto LABEL_21;
LABEL_36:
    swift_bridgeObjectRelease();
    v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_53:
    v70 = (id)v50[2];
    v3 = v155;
    v5 = v153;
    if (!v70)
      goto LABEL_104;
    if (v50[4] == 0x6C6562616CLL && v50[5] == 0xE500000000000000 || (sub_24A01F45C() & 1) != 0)
    {
LABEL_57:
      swift_bridgeObjectRelease();
      v71 = v5[5];
      swift_retain();
      v72 = objc_msgSend(v3, sel_changedObjectID);
      v73 = MEMORY[0x24BDAC7A8](v72);
      *(&v149 - 2) = v71;
      *(&v149 - 1) = v73;
      v2 = v74;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB90);
      v75 = v154;
      sub_24A01F180();
      v154 = v75;
      swift_release();

      v76 = v162[0];
      if (!v162[0])
        goto LABEL_61;
      v77 = (void *)swift_dynamicCastClass();
      if (v77)
      {
        v78 = v77;
        v79 = objc_msgSend(v77, sel_observation);
        if (v79)
        {
          v134 = v79;
          v135 = objc_msgSend(v79, sel_identifier);

          LOBYTE(v134) = objc_msgSend(v3, sel_changeType) != 0;
          v136 = objc_msgSend(v78, sel_label);

          v137 = v151;
          *v151 = (_BYTE)v134;
          *((_QWORD *)v137 + 1) = v135;
          *((_QWORD *)v137 + 2) = v136;
          v131 = type metadata accessor for VUGalleryUpdate(0);
          swift_storeEnumTagMultiPayload();
          v132 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56);
          v133 = v137;
          return v132(v133, 0, 1, v131);
        }
      }

    }
    else
    {
      if (v70 != (id)1)
      {
        if (v50[6] == 0x6C6562616CLL && v50[7] == 0xE500000000000000)
          goto LABEL_57;
        result = sub_24A01F45C();
        if ((result & 1) != 0)
          goto LABEL_57;
        if (v70 != (id)2)
        {
          v80 = v50 + 9;
          v81 = 2;
          do
          {
            v2 = (id)(v81 + 1);
            if (__OFADD__(v81, 1))
              goto LABEL_164;
            if (*(v80 - 1) == 0x6C6562616CLL && *v80 == 0xE500000000000000)
              goto LABEL_57;
            result = sub_24A01F45C();
            if ((result & 1) != 0)
              goto LABEL_57;
            v80 += 2;
            ++v81;
          }
          while (v2 != v70);
        }
      }
LABEL_104:

      swift_bridgeObjectRelease();
    }
  }
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
    goto LABEL_36;
LABEL_21:
  v160 = MEMORY[0x24BEE4AF8];
  sub_249F8C988(0, v31 & ~(v31 >> 63), 0);
  if (v159)
  {
    result = sub_24A01F24C();
    v34 = 1;
  }
  else
  {
    result = sub_249F92234(v30);
    v34 = v51 & 1;
  }
  *(_QWORD *)&v163 = result;
  *((_QWORD *)&v163 + 1) = v33;
  LOBYTE(v164) = v34;
  if ((v31 & 0x8000000000000000) == 0)
  {
    v52 = v30 & 0xFFFFFFFFFFFFFF8;
    if (v30 < 0)
      v52 = v30;
    v158 = v52;
    do
    {
      while (1)
      {
        v2 = (id)*((_QWORD *)&v163 + 1);
        v4 = v163;
        v58 = v164;
        sub_249F91FCC(v163, *((uint64_t *)&v163 + 1), v164, v30);
        v60 = v59;
        v61 = objc_msgSend(v59, sel_name);
        v62 = sub_24A01EE68();
        v64 = v63;

        v65 = v160;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_249F8C988(0, *(_QWORD *)(v65 + 16) + 1, 1);
          v65 = v160;
        }
        v67 = *(_QWORD *)(v65 + 16);
        v66 = *(_QWORD *)(v65 + 24);
        if (v67 >= v66 >> 1)
        {
          result = sub_249F8C988(v66 > 1, v67 + 1, 1);
          v65 = v160;
        }
        *(_QWORD *)(v65 + 16) = v67 + 1;
        v68 = v65 + 16 * v67;
        *(_QWORD *)(v68 + 32) = v62;
        *(_QWORD *)(v68 + 40) = v64;
        if (v159)
          break;
        v53 = sub_249F91EE8(v4, (int)v2, v58, v30);
        v55 = v54;
        v57 = v56;
        sub_249F939E4(v4, (uint64_t)v2, v58);
        *(_QWORD *)&v163 = v53;
        *((_QWORD *)&v163 + 1) = v55;
        LOBYTE(v164) = v57 & 1;
        if (!--v31)
          goto LABEL_52;
      }
      if ((v58 & 1) == 0)
        goto LABEL_166;
      if (sub_24A01F258())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB88);
      v69 = (void (*)(id *, _QWORD))sub_24A01F03C();
      sub_24A01F294();
      v69(v162, 0);
      --v31;
    }
    while (v31);
LABEL_52:
    sub_249F939E4(v163, *((uint64_t *)&v163 + 1), v164);
    swift_bridgeObjectRelease();
    v50 = (_QWORD *)v160;
    goto LABEL_53;
  }
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
  return result;
}

uint64_t VUGallery.ChangeSequence.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t VUGallery.ChangeSequence.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_249F7C514(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_249F7C520()
{
  return 0;
}

uint64_t sub_249F7C528()
{
  return 2;
}

size_t sub_249F7C530()
{
  uint64_t *v0;
  size_t v1;

  v1 = sub_249FA01B4(*v0);
  swift_release();
  return v1;
}

uint64_t sub_249F7C564(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_249F7C584(a1, a2, a3);
}

uint64_t sub_249F7C584(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VUGalleryUpdate(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v3;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v17 = a1;
    sub_249F7B278(v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      v15 = 0;
LABEL_9:
      sub_249F990A0((uint64_t)v9, &qword_2578FF7E0);
    }
    else
    {
      v15 = 0;
      while (1)
      {
        sub_249F98928((uint64_t)v9, (uint64_t)v14, type metadata accessor for VUGalleryUpdate);
        sub_249F98928((uint64_t)v14, a2, type metadata accessor for VUGalleryUpdate);
        if (a3 - 1 == v15)
          break;
        a2 += *(_QWORD *)(v11 + 72);
        sub_249F7B278(v9);
        ++v15;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
          goto LABEL_9;
      }
      v15 = a3;
    }
    a1 = v17;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_249F7C710(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a2)
  {
    a3 = 0;
    goto LABEL_11;
  }
  if (!a3)
  {
LABEL_11:
    *a1 = a5;
    a1[1] = a3;
    return;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5 + 16);
    if (v9)
    {
      v10 = 0;
      while (v10 < *(_QWORD *)(a5 + 16))
      {
        v11 = *(_QWORD *)(type metadata accessor for VUGallery.EntityView(0) - 8);
        v12 = *(_QWORD *)(v11 + 72);
        sub_249F9896C(a5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)) + v12 * v10, a2, type metadata accessor for VUGallery.EntityView);
        if (a3 - 1 == v10)
          goto LABEL_11;
        a2 += v12;
        if (v9 == ++v10)
          goto LABEL_9;
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    a3 = v9;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_249F7C7F0()
{
  type metadata accessor for VUGallery.ChangeSequence();
  return sub_24A01EF40();
}

uint64_t sub_249F7C854@<X0>(_BYTE *a1@<X8>)
{
  return sub_249F7B278(a1);
}

uint64_t sub_249F7C874(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = a1;
  v5 = sub_24A01ED90();
  v6 = sub_24A01F0CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315138;
    if (a1)
      v9 = *(id *)&v4[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CABA8);
    v11 = sub_24A01EE74();
    sub_249F8AAE8(v11, v12, &v14);
    sub_24A01F1F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F70000, v5, v6, "Requesting changes since bookmark %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v8, -1, -1);
    MEMORY[0x24BD07950](v7, -1, -1);

    v2 = v1;
  }
  else
  {

  }
  MEMORY[0x24BDAC7A8](v10);
  type metadata accessor for VUGallery.ChangeSequence();
  result = sub_24A01F138();
  if (!v2)
    return v14;
  return result;
}

uint64_t sub_249F7CA6C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;

  if (a1)
  {
    objc_msgSend(a1, sel_copy);
    sub_24A01F21C();
    swift_unknownObjectRelease();
    type metadata accessor for VUGallery.Bookmark();
    if (swift_dynamicCast())
      v6 = v10;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  type metadata accessor for VUGallery.ChangeSequence();
  v8 = swift_allocObject();
  swift_retain();
  result = sub_249F7B048(v6, v7);
  if (!v3)
    *a3 = v8;
  return result;
}

uint64_t sub_249F7CB40()
{
  char v1;

  v1 = 0;
  return sub_249F7CB68(&v1);
}

uint64_t sub_249F7CB68(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v1;
  v5 = sub_24A01EDCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = sub_24A01ED90();
  v11 = sub_24A01F0F0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v24 = v6;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v23 = v2;
    v15 = v14;
    v27 = v14;
    v22 = v3;
    *(_DWORD *)v13 = 136315138;
    v25 = v5;
    LOBYTE(v26) = v9;
    v16 = sub_24A01EE74();
    v26 = sub_249F8AAE8(v16, v17, &v27);
    v5 = v25;
    v3 = v22;
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F70000, v10, v11, "Resetting gallery for %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v15, -1, -1);
    v18 = v13;
    v6 = v24;
    MEMORY[0x24BD07950](v18, -1, -1);
  }

  v19 = sub_24A01EDC0();
  MEMORY[0x24BDAC7A8](v19);
  *((_BYTE *)&v21 - 16) = v9;
  *(&v21 - 1) = v3;
  sub_24A01F12C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_249F7CD94(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = v2;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  v6 = *(void **)(v5 + 16);
  swift_retain();
  v7 = v6;
  if ((a1 & 1) != 0)
    goto LABEL_4;
  sub_24A01F180();
  if (!v3)
  {

    v7 = *(id *)(v5 + 16);
LABEL_4:
    sub_24A01F180();
  }
  swift_release();

}

uint64_t VUGallery.EntityView.entityIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VUGallery.EntityView.tag.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249F75E34(type metadata accessor for VUGallery.EntityView, a1);
}

uint64_t VUGallery.EntityView.observations.getter()
{
  type metadata accessor for VUGallery.EntityView(0);
  return swift_bridgeObjectRetain();
}

id VUGallery.EntitySequence.bookmark.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t VUGallery.EntitySequence.makeIterator()()
{
  return swift_bridgeObjectRetain();
}

void sub_249F7CECC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);

  *a1 = v3;
  a1[1] = 0;
}

size_t sub_249F7CEFC()
{
  uint64_t *v0;
  void *v1;
  size_t v2;

  v1 = (void *)*v0;
  v2 = sub_249FA048C(*v0, v0[1]);
  swift_bridgeObjectRelease();

  return v2;
}

void sub_249F7CF40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_249F7C710(a1, a2, a3, *(void **)v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_249F7CF48()
{
  return sub_24A01EF40();
}

uint64_t sub_249F7CF68()
{
  return sub_24A01F138();
}

uint64_t sub_249F7CFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __int16 v19;
  id v20;
  unint64_t *v21;
  __int128 v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t i;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char v46;
  unint64_t *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t *v51;
  char isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  unint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  int v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint8_t *v89;
  _QWORD *v90;
  uint64_t result;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  unint64_t *v103;
  uint8_t *v104;
  int64_t v105;
  _QWORD aBlock[7];
  uint64_t v107;

  v4 = v3;
  v96 = a2;
  v93 = a3;
  v101 = type metadata accessor for VUGallery.EntityView(0);
  v92 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v100 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v8 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  if (v8 == 5)
    v9 = 0;
  else
    v9 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  v107 = MEMORY[0x24BEE4B00];
  v10 = *(void **)(v7 + 16);
  v11 = swift_allocObject();
  *(_WORD *)(v11 + 16) = 256;
  *(_WORD *)(v11 + 18) = v9;
  *(_BYTE *)(v11 + 20) = v8 == 5;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = 1;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = &v107;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_249F98E60;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_208;
  v13 = _Block_copy(aBlock);
  swift_retain_n();
  v14 = v10;
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v13 & 1) == 0)
  {
    v15 = v107;
    swift_release();
    v16 = swift_release();
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
    v18 = *(void **)(v17 + 16);
    MEMORY[0x24BDAC7A8](v16);
    *((_WORD *)&v92 - 8) = v19;
    *(&v92 - 1) = v17;
    swift_retain();
    v20 = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA3C0);
    sub_24A01F180();
    v95 = v4;
    v21 = (unint64_t *)v15;
    swift_release();

    v23 = 0;
    v94 = aBlock[0];
    v24 = *(_QWORD *)(v15 + 64);
    v104 = (uint8_t *)(v15 + 64);
    v25 = 1 << *(_BYTE *)(v15 + 32);
    v26 = -1;
    if (v25 < 64)
      v26 = ~(-1 << v25);
    v27 = v26 & v24;
    v97 = a1;
    v28 = (unint64_t *)MEMORY[0x24BEE4B00];
    v105 = (unint64_t)(v25 + 63) >> 6;
    *(_QWORD *)&v22 = 134217984;
    v102 = v22;
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v98 = (a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger);
    v103 = v21;
    if ((v26 & v24) != 0)
      goto LABEL_10;
LABEL_11:
    v32 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    if (v32 < v105)
    {
      v33 = *(_QWORD *)&v104[8 * v32];
      ++v23;
      if (v33)
        goto LABEL_24;
      v23 = v32 + 1;
      if (v32 + 1 >= v105)
        goto LABEL_52;
      v33 = *(_QWORD *)&v104[8 * v23];
      if (v33)
        goto LABEL_24;
      v23 = v32 + 2;
      if (v32 + 2 >= v105)
        goto LABEL_52;
      v33 = *(_QWORD *)&v104[8 * v23];
      if (v33)
      {
LABEL_24:
        v27 = (v33 - 1) & v33;
        for (i = __clz(__rbit64(v33)) + (v23 << 6); ; i = v30 | (v23 << 6))
        {
          v35 = 8 * i;
          v36 = *(_QWORD *)(v21[7] + v35);
          if (HIBYTE(v36) > 0x3F || ((1 << SHIBYTE(v36)) & 0x8000000000000044) == 0)
          {
            v38 = sub_24A01ED90();
            v39 = sub_24A01F0E4();
            if (os_log_type_enabled(v38, v39))
            {
              v40 = swift_slowAlloc();
              *(_DWORD *)v40 = v102;
              *(_QWORD *)(v40 + 4) = v36;
              _os_log_impl(&dword_249F70000, v38, v39, "Invalid entity %ld!", (uint8_t *)v40, 0xCu);
              v41 = v40;
              v21 = v103;
              MEMORY[0x24BD07950](v41, -1, -1);
            }

            if (!v27)
              goto LABEL_11;
          }
          else
          {
            v42 = *(_QWORD *)(v21[6] + v35);
            v43 = v28[2];
            v99 = v42;
            if (v43)
            {
              v44 = sub_249F8B27C(v36);
              v45 = v29;
              if ((v46 & 1) != 0)
              {
                v45 = *(_QWORD **)(v28[7] + 8 * v44);
                swift_bridgeObjectRetain();
              }
            }
            else
            {
              v45 = v29;
            }
            v47 = v28;
            swift_bridgeObjectRetain();
            v48 = v45;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v48 = sub_249F8A30C(0, v45[2] + 1, 1, v45, (uint64_t *)&unk_2544CAC38);
            v50 = v48[2];
            v49 = v48[3];
            if (v50 >= v49 >> 1)
              v48 = sub_249F8A30C((_QWORD *)(v49 > 1), v50 + 1, 1, v48, (uint64_t *)&unk_2544CAC38);
            v48[2] = v50 + 1;
            v48[v50 + 4] = v99;
            swift_bridgeObjectRelease();
            v51 = v47;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = v47;
            v54 = sub_249F8B27C(v36);
            v55 = v51[2];
            v56 = (v53 & 1) == 0;
            v57 = v55 + v56;
            if (__OFADD__(v55, v56))
              goto LABEL_77;
            v58 = v53;
            if ((uint64_t)v51[3] >= v57)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_249FC1AF0();
            }
            else
            {
              sub_249FB99FC(v57, isUniquelyReferenced_nonNull_native);
              v59 = sub_249F8B27C(v36);
              if ((v58 & 1) != (v60 & 1))
                goto LABEL_80;
              v54 = v59;
            }
            v28 = (unint64_t *)aBlock[0];
            if ((v58 & 1) != 0)
            {
              v61 = *(_QWORD *)(aBlock[0] + 56);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v61 + 8 * v54) = v48;
            }
            else
            {
              *(_QWORD *)(aBlock[0] + 8 * (v54 >> 6) + 64) |= 1 << v54;
              *(_QWORD *)(v28[6] + 8 * v54) = v36;
              *(_QWORD *)(v28[7] + 8 * v54) = v48;
              v62 = v28[2];
              v63 = __OFADD__(v62, 1);
              v64 = v62 + 1;
              if (v63)
                goto LABEL_78;
              v28[2] = v64;
            }
            swift_bridgeObjectRelease();
            v21 = v103;
            if (!v27)
              goto LABEL_11;
          }
LABEL_10:
          v30 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
        }
      }
      v34 = v32 + 3;
      if (v34 < v105)
      {
        v33 = *(_QWORD *)&v104[8 * v34];
        if (v33)
        {
          v23 = v34;
          goto LABEL_24;
        }
        while (1)
        {
          v23 = v34 + 1;
          if (__OFADD__(v34, 1))
            goto LABEL_76;
          if (v23 >= v105)
            break;
          v33 = *(_QWORD *)&v104[8 * v23];
          ++v34;
          if (v33)
            goto LABEL_24;
        }
      }
    }
LABEL_52:
    v65 = swift_release();
    v66 = v96;
    if (v96)
    {
      v67 = v94;
      v68 = v95;
      if (*(_QWORD *)(v96 + 16))
      {
        swift_bridgeObjectRetain();
        v69 = swift_bridgeObjectRetain();
        v70 = sub_249F8E77C(v69, v66);
        v65 = swift_bridgeObjectRelease_n();
        v28 = v70;
      }
    }
    else
    {
      v67 = v94;
      v68 = v95;
    }
    MEMORY[0x24BDAC7A8](v65);
    *(&v92 - 2) = v67;
    v71 = swift_bridgeObjectRetain();
    v72 = v68;
    v73 = sub_249F92BA8(v71, (void (*)(uint64_t, uint64_t))sub_249F98ED0, (uint64_t)(&v92 - 4));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v74 = sub_24A01ED90();
    v75 = sub_24A01F0CC();
    if (os_log_type_enabled(v74, (os_log_type_t)v75))
    {
      v76 = swift_slowAlloc();
      *(_DWORD *)v76 = 134218240;
      aBlock[0] = *(_QWORD *)(v73 + 16);
      v77 = aBlock[0];
      sub_24A01F1F8();
      *(_WORD *)(v76 + 12) = 2048;
      LODWORD(v105) = v75;
      v104 = (uint8_t *)v76;
      if (v77)
      {
        v98 = v74;
        v99 = v72;
        v103 = v28;
        aBlock[0] = v29;
        sub_249F8C9C8(0, v77, 0);
        v78 = *(unsigned __int8 *)(v92 + 80);
        *(_QWORD *)&v102 = v73;
        v79 = v73 + ((v78 + 32) & ~v78);
        v80 = *(_QWORD *)(v92 + 72);
        v29 = (_QWORD *)aBlock[0];
        do
        {
          v81 = v100;
          sub_249F9896C(v79, v100, type metadata accessor for VUGallery.EntityView);
          v82 = *(_QWORD *)(*(_QWORD *)(v81 + *(int *)(v101 + 24)) + 16);
          sub_249F989C0(v81, type metadata accessor for VUGallery.EntityView);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249F8C9C8(0, v29[2] + 1, 1);
            v29 = (_QWORD *)aBlock[0];
          }
          v84 = v29[2];
          v83 = v29[3];
          v85 = v84 + 1;
          if (v84 >= v83 >> 1)
          {
            sub_249F8C9C8(v83 > 1, v84 + 1, 1);
            v29 = (_QWORD *)aBlock[0];
          }
          v29[2] = v85;
          v29[v84 + 4] = v82;
          v79 += v80;
          --v77;
        }
        while (v77);
        v74 = v98;
        v73 = v102;
LABEL_67:
        v86 = 0;
        v87 = 0;
        while (1)
        {
          v88 = v29[v86 + 4];
          v63 = __OFADD__(v87, v88);
          v87 += v88;
          if (v63)
            goto LABEL_75;
          if (v85 == ++v86)
          {
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
        }
      }
      v85 = v29[2];
      if (v85)
        goto LABEL_67;
      swift_bridgeObjectRelease();
      v87 = 0;
LABEL_71:
      swift_bridgeObjectRelease();
      v89 = v104;
      aBlock[0] = v87;
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249F70000, v74, (os_log_type_t)v105, "Snapshot: %ld entities over %ld observations", v89, 0x16u);
      MEMORY[0x24BD07950](v89, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    type metadata accessor for VUGallery.Bookmark();
    sub_24A01F138();
    v90 = v93;
    *v93 = aBlock[0];
    v90[1] = v73;
    return swift_bridgeObjectRelease();
  }
LABEL_79:
  __break(1u);
LABEL_80:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249F7D97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a3 + 16) && (v11 = sub_249F8B27C(a1), (v12 & 1) != 0))
  {
    v13 = v11;
    v14 = *(_QWORD *)(a3 + 56);
    v15 = sub_24A01EBA4();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v10, v14 + *(_QWORD *)(v16 + 72) * v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
  }
  else
  {
    v17 = sub_24A01EBA4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  }
  *a4 = a1;
  v18 = type metadata accessor for VUGallery.EntityView(0);
  sub_249F98C10((uint64_t)v10, (uint64_t)a4 + *(int *)(v18 + 20), &qword_2544CAD70);
  *(uint64_t *)((char *)a4 + *(int *)(v18 + 24)) = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F7DAB0()
{
  return sub_249F7FDD8(&qword_2544CA380);
}

uint64_t sub_249F7DAC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  __int16 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  v5 = v4 == 5;
  if (v4 == 5)
    v6 = 0;
  else
    v6 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  v17 = MEMORY[0x24BEE4B00];
  v7 = *(void **)(v3 + 16);
  v8 = swift_allocObject();
  *(_WORD *)(v8 + 16) = 256;
  *(_WORD *)(v8 + 18) = v6;
  *(_BYTE *)(v8 + 20) = v5;
  *(_QWORD *)(v8 + 24) = -1;
  *(_BYTE *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = v3;
  *(_QWORD *)(v8 + 48) = &v17;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_249F98E60;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_197;
  v10 = _Block_copy(aBlock);
  swift_retain_n();
  v11 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = v17;
    swift_release();
    swift_release();
    v14 = sub_249F77CEC(v13);
    v15 = sub_249FC6B8C(v14);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a2 = v15;
  }
  return result;
}

uint64_t sub_249F7DCA0()
{
  return sub_249F7FDD8(&qword_2544CA380);
}

uint64_t sub_249F7DCB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  swift_retain();
  v5 = MEMORY[0x24BEE4AF8];
  v6 = (void *)sub_24A01F09C();
  v7 = *(id *)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  sub_24A01F180();
  if (v2)
  {

    swift_release();
LABEL_3:
    v8 = MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
  swift_release();

  v9 = *(_QWORD *)(v16 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  sub_249F8C9C8(0, v9, 0);
  v10 = 0;
  v8 = v5;
  v11 = *(_QWORD *)(v5 + 16);
  do
  {
    v12 = *(_QWORD *)(v16 + 8 * v10 + 32);
    v13 = *(_QWORD *)(v5 + 24);
    if (v11 >= v13 >> 1)
      sub_249F8C9C8(v13 > 1, v11 + 1, 1);
    ++v10;
    *(_QWORD *)(v5 + 16) = v11 + 1;
    *(_QWORD *)(v5 + 8 * v11++ + 32) = v12;
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
LABEL_10:
  v14 = sub_249FC6B8C(v8);
  result = swift_bridgeObjectRelease();
  *a2 = v14;
  return result;
}

void VUGallery.TagView.client.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t VUGallery.TagView.tag.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VUGallery.TagView(0) + 20);
  v4 = sub_24A01EBA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VUGallery.TagView.confirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VUGallery.TagView(0) + 24));
}

uint64_t VUGallery.TagView.entity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VUGallery.TagView(0) + 28));
}

uint64_t sub_249F7DF20()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC08);
  return sub_24A01F138();
}

uint64_t sub_249F7DF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  char v23;
  __int16 v24;
  char v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  v11 = sub_24A01EBA4();
  v12 = 1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  v13 = *(void **)(v9 + 16);
  v22 = a2;
  v23 = 0;
  v24 = v10;
  v25 = 0;
  v26 = v8;
  v27 = v9;
  swift_retain();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  swift_release();

  v15 = v28;
  sub_249F990A0((uint64_t)v8, &qword_2544CAD70);
  swift_retain();
  v16 = sub_249F92E40(v15, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v17 = *(_QWORD *)(v16 + 16);
  v18 = type metadata accessor for VUGallery.TagView(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (v17)
  {
    sub_249F9896C(v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), a3, type metadata accessor for VUGallery.TagView);
    v12 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(a3, v12, 1, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F7E14C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF560);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7E1BC@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  __int16 v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v5 = v4;
  v32 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAEA0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v16 = a2;
  v17 = sub_24A01EBA4();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, a3, v17);
  v19 = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
  v20 = *(void **)(v15 + 16);
  v33 = 0;
  v34 = 1;
  v35 = v16;
  v36 = 0;
  v37 = v11;
  v38 = v15;
  swift_retain();
  v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  v31 = v5;
  swift_release();

  v22 = v39;
  sub_249F990A0((uint64_t)v11, &qword_2544CAD70);
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v25 = *(_QWORD *)(v24 - 8);
  if (v23)
  {
    sub_249F9905C(v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), (uint64_t)v14, &qword_2544CAC20);
    v19 = 0;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v14, v19, 1, v24);
  swift_bridgeObjectRelease();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v14, 1, v26) == 1)
  {
    result = sub_249F990A0((uint64_t)v14, &qword_2544CAEA0);
    v28 = v32;
    *v32 = 0;
    *((_BYTE *)v28 + 8) = 1;
  }
  else
  {
    v29 = (char *)v14 + *(int *)(v26 + 64);
    v30 = v32;
    *v32 = *v14;
    *((_BYTE *)v30 + 8) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v29, v17);
  }
  return result;
}

uint64_t sub_249F7E41C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7E47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t result;
  _QWORD v39[2];
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v40 = a3;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v7 = *(_QWORD *)(v48 - 8);
  v8 = MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)v39 - v10;
  v44 = type metadata accessor for VUGallery.TagView(0);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v17 = sub_24A01EBA4();
  v43 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 56);
  v45 = v17;
  v18(v15, 1, 1);
  v19 = *(void **)(v16 + 16);
  v50 = a2;
  v51 = 0;
  v52 = 0;
  v53 = 1;
  v54 = v15;
  v55 = v16;
  swift_retain();
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  swift_release();

  v21 = v56;
  sub_249F990A0((uint64_t)v15, &qword_2544CAD70);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v39[1] = v4;
    v56 = MEMORY[0x24BEE4AF8];
    sub_249F8C9EC(0, v22, 0);
    v23 = *(unsigned __int8 *)(v7 + 80);
    v39[0] = v21;
    v24 = v21 + ((v23 + 32) & ~v23);
    v41 = *(_QWORD *)(v7 + 72);
    v25 = (uint64_t)v42;
    v26 = v43;
    do
    {
      v49 = v22;
      sub_249F9905C(v24, v25, &qword_2544CAC20);
      if (*(unsigned __int16 *)(v25 + 8) >= 6u)
        v27 = 5;
      else
        v27 = *(_WORD *)(v25 + 8);
      v28 = *(int *)(v48 + 64);
      v29 = &v47[v28];
      v30 = *(int *)(v48 + 80);
      v31 = *(_QWORD *)v25;
      v32 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(&v47[v28], v25 + v28, v45);
      LOBYTE(v30) = *(_BYTE *)(v25 + v30);
      *v12 = v27;
      v33 = v44;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[*(int *)(v44 + 20)], v29, v32);
      v12[*(int *)(v33 + 24)] = v30;
      *(_QWORD *)&v12[*(int *)(v33 + 28)] = v31;
      sub_249F990A0(v25, &qword_2544CAC20);
      v34 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9EC(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v56;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      v37 = v49;
      if (v36 >= v35 >> 1)
      {
        sub_249F8C9EC(v35 > 1, v36 + 1, 1);
        v34 = v56;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      sub_249F98928((uint64_t)v12, v34+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v36, type metadata accessor for VUGallery.TagView);
      v24 += v41;
      v22 = v37 - 1;
    }
    while (v22);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
  }
  *v40 = v34;
  return result;
}

uint64_t sub_249F7E800()
{
  return sub_249F7FDD8((uint64_t *)&unk_2544CA248);
}

uint64_t sub_249F7E814@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t result;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v3 = v2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v6 = *(_QWORD *)(v48 - 8);
  v7 = MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v38 - v9;
  v44 = type metadata accessor for VUGallery.TagView(0);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v16 = sub_24A01EBA4();
  v43 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 56);
  v45 = v16;
  v17(v14, 1, 1);
  v18 = *(void **)(v15 + 16);
  v50 = 0;
  v51 = 1;
  v52 = 0;
  v53 = 1;
  v54 = v14;
  v55 = v15;
  swift_retain();
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  v40 = v3;
  swift_release();

  v20 = v56;
  sub_249F990A0((uint64_t)v14, &qword_2544CAD70);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v39 = a2;
    v56 = MEMORY[0x24BEE4AF8];
    sub_249F8C9EC(0, v21, 0);
    v22 = *(unsigned __int8 *)(v6 + 80);
    v38 = v20;
    v23 = v20 + ((v22 + 32) & ~v22);
    v41 = *(_QWORD *)(v6 + 72);
    v24 = (uint64_t)v42;
    v25 = v43;
    do
    {
      v49 = v21;
      sub_249F9905C(v23, v24, &qword_2544CAC20);
      if (*(unsigned __int16 *)(v24 + 8) >= 6u)
        v26 = 5;
      else
        v26 = *(_WORD *)(v24 + 8);
      v27 = *(int *)(v48 + 64);
      v28 = &v47[v27];
      v29 = *(int *)(v48 + 80);
      v30 = *(_QWORD *)v24;
      v31 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(&v47[v27], v24 + v27, v45);
      LOBYTE(v29) = *(_BYTE *)(v24 + v29);
      *v11 = v26;
      v32 = v44;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v11[*(int *)(v44 + 20)], v28, v31);
      v11[*(int *)(v32 + 24)] = v29;
      *(_QWORD *)&v11[*(int *)(v32 + 28)] = v30;
      sub_249F990A0(v24, &qword_2544CAC20);
      v33 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9EC(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v33 = v56;
      }
      v35 = *(_QWORD *)(v33 + 16);
      v34 = *(_QWORD *)(v33 + 24);
      v36 = v49;
      if (v35 >= v34 >> 1)
      {
        sub_249F8C9EC(v34 > 1, v35 + 1, 1);
        v33 = v56;
      }
      *(_QWORD *)(v33 + 16) = v35 + 1;
      sub_249F98928((uint64_t)v11, v33+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v35, type metadata accessor for VUGallery.TagView);
      v23 += v41;
      v21 = v36 - 1;
    }
    while (v21);
    result = swift_bridgeObjectRelease();
    a2 = v39;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v33 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v33;
  return result;
}

uint64_t sub_249F7EB90()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7EBF8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t result;
  _QWORD v39[2];
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v40 = a3;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v7 = *(_QWORD *)(v48 - 8);
  v8 = MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)v39 - v10;
  v44 = type metadata accessor for VUGallery.TagView(0);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v17 = sub_24A01EBA4();
  v43 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 56);
  v45 = v17;
  v18(v15, 1, 1);
  v19 = *(void **)(v16 + 16);
  v50 = 0;
  v51 = 1;
  v52 = a2;
  v53 = 0;
  v54 = v15;
  v55 = v16;
  swift_retain();
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  swift_release();

  v21 = v56;
  sub_249F990A0((uint64_t)v15, &qword_2544CAD70);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v39[1] = v4;
    v56 = MEMORY[0x24BEE4AF8];
    sub_249F8C9EC(0, v22, 0);
    v23 = *(unsigned __int8 *)(v7 + 80);
    v39[0] = v21;
    v24 = v21 + ((v23 + 32) & ~v23);
    v41 = *(_QWORD *)(v7 + 72);
    v25 = (uint64_t)v42;
    v26 = v43;
    do
    {
      v49 = v22;
      sub_249F9905C(v24, v25, &qword_2544CAC20);
      if (*(unsigned __int16 *)(v25 + 8) >= 6u)
        v27 = 5;
      else
        v27 = *(_WORD *)(v25 + 8);
      v28 = *(int *)(v48 + 64);
      v29 = &v47[v28];
      v30 = *(int *)(v48 + 80);
      v31 = *(_QWORD *)v25;
      v32 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(&v47[v28], v25 + v28, v45);
      LOBYTE(v30) = *(_BYTE *)(v25 + v30);
      *v12 = v27;
      v33 = v44;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[*(int *)(v44 + 20)], v29, v32);
      v12[*(int *)(v33 + 24)] = v30;
      *(_QWORD *)&v12[*(int *)(v33 + 28)] = v31;
      sub_249F990A0(v25, &qword_2544CAC20);
      v34 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9EC(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v56;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      v37 = v49;
      if (v36 >= v35 >> 1)
      {
        sub_249F8C9EC(v35 > 1, v36 + 1, 1);
        v34 = v56;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      sub_249F98928((uint64_t)v12, v34+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v36, type metadata accessor for VUGallery.TagView);
      v24 += v41;
      v22 = v37 - 1;
    }
    while (v22);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
  }
  *v40 = v34;
  return result;
}

uint64_t sub_249F7EF7C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7EFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t result;
  _QWORD v43[2];
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char v55;
  __int16 v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v11 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  v53 = v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)v43 - v14;
  v48 = type metadata accessor for VUGallery.TagView(0);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v21 = sub_24A01EBA4();
  v47 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 56);
  v49 = v21;
  v22(v19, 1, 1);
  v23 = *(void **)(v20 + 16);
  v54 = a2;
  v55 = 0;
  v56 = a3;
  v57 = 0;
  v58 = v19;
  v59 = v20;
  swift_retain();
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  swift_release();

  v25 = v60;
  sub_249F990A0((uint64_t)v19, &qword_2544CAD70);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v43[1] = v5;
    v44 = a4;
    v60 = MEMORY[0x24BEE4AF8];
    sub_249F8C9EC(0, v26, 0);
    v27 = *(unsigned __int8 *)(v53 + 80);
    v43[0] = v25;
    v28 = v25 + ((v27 + 32) & ~v27);
    v45 = *(_QWORD *)(v53 + 72);
    v29 = (uint64_t)v46;
    v30 = v49;
    do
    {
      v53 = v26;
      sub_249F9905C(v28, v29, &qword_2544CAC20);
      if (*(unsigned __int16 *)(v29 + 8) >= 6u)
        v31 = 5;
      else
        v31 = *(_WORD *)(v29 + 8);
      v32 = *(int *)(v52 + 64);
      v33 = &v51[v32];
      v34 = *(int *)(v52 + 80);
      v35 = *(_QWORD *)v29;
      v36 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(&v51[v32], v29 + v32, v30);
      LOBYTE(v34) = *(_BYTE *)(v29 + v34);
      *v16 = v31;
      v37 = v48;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v16[*(int *)(v48 + 20)], v33, v30);
      v16[*(int *)(v37 + 24)] = v34;
      *(_QWORD *)&v16[*(int *)(v37 + 28)] = v35;
      sub_249F990A0(v29, &qword_2544CAC20);
      v38 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9EC(0, *(_QWORD *)(v38 + 16) + 1, 1);
        v38 = v60;
      }
      v40 = *(_QWORD *)(v38 + 16);
      v39 = *(_QWORD *)(v38 + 24);
      v41 = v53;
      if (v40 >= v39 >> 1)
      {
        sub_249F8C9EC(v39 > 1, v40 + 1, 1);
        v38 = v60;
      }
      *(_QWORD *)(v38 + 16) = v40 + 1;
      sub_249F98928((uint64_t)v16, v38+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v40, type metadata accessor for VUGallery.TagView);
      v28 += v45;
      v26 = v41 - 1;
    }
    while (v26);
    result = swift_bridgeObjectRelease();
    a4 = v44;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v38 = MEMORY[0x24BEE4AF8];
  }
  *a4 = v38;
  return result;
}

uint64_t sub_249F7F368()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7F3D4@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char **v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  char v76;
  __int16 v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v64 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v8 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  v74 = v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v61 - v11;
  v12 = type metadata accessor for VUGallery.TagView(0);
  v13 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  v69 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAEA0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char **)((char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a1;
  v21 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v22 = sub_24A01EBA4();
  v23 = *(_QWORD *)(v22 - 8);
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v67(v20, a3, v22);
  v71 = v23;
  v72 = v22;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v25 = 1;
  v24((uint64_t)v20, 0, 1, v22);
  v26 = *(void **)(v21 + 16);
  v75 = 0;
  v76 = 1;
  v77 = a2;
  v78 = 0;
  v79 = v20;
  v80 = v21;
  swift_retain();
  v27 = v26;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  v28 = v65;
  sub_24A01F180();
  v29 = v28;
  swift_release();

  v30 = v81;
  v65 = (uint64_t)v20;
  sub_249F990A0((uint64_t)v20, &qword_2544CAD70);
  v31 = v74;
  if (*(_QWORD *)(v30 + 16))
  {
    sub_249F9905C(v30 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80)), (uint64_t)v17, &qword_2544CAC20);
    v25 = 0;
  }
  v32 = v73;
  (*(void (**)(char **, uint64_t, uint64_t, uint64_t))(v31 + 56))(v17, v25, 1, v73);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v31 + 48))(v17, 1, v32) == 1)
  {
    result = sub_249F990A0((uint64_t)v17, &qword_2544CAEA0);
    v34 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v35 = *v17;
    v36 = (char *)v17 + *(int *)(v32 + 64);
    v37 = v72;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v36, v72);
    v38 = *(_QWORD *)(*(_QWORD *)(v63 + 16) + 16);
    v39 = v65;
    v40 = v24(v65, 1, 1, v37);
    v41 = *(void **)(v38 + 16);
    MEMORY[0x24BDAC7A8](v40);
    *(&v61 - 4) = v35;
    *((_BYTE *)&v61 - 24) = 0;
    *((_WORD *)&v61 - 11) = 0;
    *((_BYTE *)&v61 - 20) = 1;
    *(&v61 - 2) = (char *)v39;
    *(&v61 - 1) = (char *)v38;
    swift_retain();
    v42 = v41;
    v43 = v29;
    v44 = v42;
    sub_24A01F180();
    v63 = v43;
    swift_release();

    v45 = v81;
    sub_249F990A0(v39, &qword_2544CAD70);
    v46 = *(_QWORD *)(v45 + 16);
    if (v46)
    {
      v81 = MEMORY[0x24BEE4AF8];
      sub_249F8C9EC(0, v46, 0);
      v47 = *(unsigned __int8 *)(v74 + 80);
      v62 = v45;
      v48 = v45 + ((v47 + 32) & ~v47);
      v65 = *(_QWORD *)(v74 + 72);
      v49 = v61;
      v50 = v72;
      do
      {
        v74 = v46;
        v51 = v66;
        sub_249F9905C(v48, v66, &qword_2544CAC20);
        if (*(unsigned __int16 *)(v51 + 8) >= 6u)
          v52 = 5;
        else
          v52 = *(_WORD *)(v51 + 8);
        v53 = *(int *)(v73 + 64);
        v54 = &v70[v53];
        v55 = *(int *)(v73 + 80);
        v56 = *(_QWORD *)v51;
        v67(&v70[v53], v51 + v53, v50);
        LOBYTE(v55) = *(_BYTE *)(v51 + v55);
        *v49 = v52;
        v57 = v68;
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v49[*(int *)(v68 + 20)], v54, v50);
        v49[*(int *)(v57 + 24)] = v55;
        *(_QWORD *)&v49[*(int *)(v57 + 28)] = v56;
        sub_249F990A0(v51, &qword_2544CAC20);
        v34 = v81;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249F8C9EC(0, *(_QWORD *)(v34 + 16) + 1, 1);
          v34 = v81;
        }
        v59 = *(_QWORD *)(v34 + 16);
        v58 = *(_QWORD *)(v34 + 24);
        v60 = v74;
        if (v59 >= v58 >> 1)
        {
          sub_249F8C9EC(v58 > 1, v59 + 1, 1);
          v34 = v81;
        }
        *(_QWORD *)(v34 + 16) = v59 + 1;
        sub_249F98928((uint64_t)v49, v34+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v59, type metadata accessor for VUGallery.TagView);
        v48 += v65;
        v46 = v60 - 1;
      }
      while (v46);
      result = swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v34 = MEMORY[0x24BEE4AF8];
    }
  }
  *v64 = v34;
  return result;
}

uint64_t sub_249F7F930()
{
  unsigned __int8 v1;

  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7F994@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[16];
  uint64_t v21;
  char v22;
  __int16 v23;
  char v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v12 = a2;
  v13 = sub_24A01EBA4();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v10, a3, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  v15 = *(void **)(v11 + 16);
  v21 = 0;
  v22 = 1;
  v23 = v12;
  v24 = 0;
  v25 = v10;
  v26 = v11;
  swift_retain();
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  swift_release();

  v17 = v27;
  sub_249F990A0((uint64_t)v10, &qword_2544CAD70);
  v18 = *(_QWORD *)(v17 + 16);
  result = swift_bridgeObjectRelease();
  *a4 = v18 != 0;
  return result;
}

uint64_t sub_249F7FAFC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF560);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F7FB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  __int16 v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v4 = v3;
  v30 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAEA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v14 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  v15 = sub_24A01EBA4();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, a2, v15);
  v17 = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  v18 = *(void **)(v13 + 16);
  v31 = 0;
  v32 = 1;
  v33 = v14;
  v34 = 0;
  v35 = v9;
  v36 = v13;
  swift_retain();
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC18);
  sub_24A01F180();
  v29 = v4;
  swift_release();

  v20 = v37;
  sub_249F990A0((uint64_t)v9, &qword_2544CAD70);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v23 = *(_QWORD *)(v22 - 8);
  if (v21)
  {
    sub_249F9905C(v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), (uint64_t)v12, &qword_2544CAC20);
    v17 = 0;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v17, 1, v22);
  swift_bridgeObjectRelease();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24) == 1)
  {
    result = sub_249F990A0((uint64_t)v12, &qword_2544CAEA0);
    v26 = v30;
    *v30 = 0;
    *((_BYTE *)v26 + 8) = 1;
  }
  else
  {
    v27 = (char *)v12 + *(int *)(v24 + 64);
    v28 = v30;
    *v30 = *v12;
    *((_BYTE *)v28 + 8) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v27, v15);
  }
  return result;
}

uint64_t sub_249F7FDC4()
{
  return sub_249F7FDD8(&qword_2544CAB70);
}

uint64_t sub_249F7FDD8(uint64_t *a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_24A01F138();
  return v2;
}

uint64_t sub_249F7FE2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB68);
  sub_24A01F180();
  swift_release();

  v6 = sub_249FB5484();
  swift_bridgeObjectRelease();
  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v8 = v7;
  sub_24A01F180();
  swift_release();

  v9 = sub_249FB5484();
  swift_bridgeObjectRelease();
  result = sub_249FB7C68(v9);
  *a2 = v6;
  return result;
}

uint64_t sub_249F7FF88(uint64_t a1)
{
  return sub_249F82288(a1, &qword_2544CAB70);
}

uint64_t sub_249F7FF9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB68);
  sub_24A01F180();
  swift_release();

  v5 = sub_249FB5484();
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_249F8007C()
{
  return sub_249F80088();
}

uint64_t sub_249F80088()
{
  uint64_t v1;

  sub_24A01F138();
  return v1;
}

void sub_249F800E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v4 = v3;
  sub_24A01F180();
  swift_release();

  *a2 = v5;
}

uint64_t VUGallery.ObservationView.tags.getter()
{
  return swift_bridgeObjectRetain();
}

void VUGallery.ObservationView.client.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void VUGallery.ObservationView.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t VUGallery.ObservationView.contextualOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t VUGallery.ObservationView.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for VUGallery.ObservationView(0);
  return sub_249F9905C(v1 + *(int *)(v3 + 36), a1, &qword_2544CAD70);
}

float VUGallery.ObservationView.quality.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 40));
}

float VUGallery.ObservationView.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 44));
}

uint64_t VUGallery.ObservationView.label.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 48));
}

uint64_t VUGallery.ObservationView.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VUGallery.ObservationView(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t VUGallery.ObservationView.isPrimary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 56));
}

float VUGallery.ObservationView.similarity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 60));
}

uint64_t VUGallery.ObservationView.partner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 64));
}

float VUGallery.ObservationView.density.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 68));
}

uint64_t VUGallery.ObservationView.embedding.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 72);
  v2 = *(_QWORD *)v1;
  sub_249F93CCC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t VUGallery.ObservationView.contextualEmbedding.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for VUGallery.ObservationView(0) + 76);
  v2 = *(_QWORD *)v1;
  sub_249F93CCC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_249F8039C@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unsigned int v36;
  char v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  _BYTE *v43;
  unsigned int v44;
  unsigned int v45;
  _BYTE *v46;
  char v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  id v59;
  void *v60;
  uint64_t v61;
  unsigned int v62;
  char v63;
  unsigned int v64;
  id v65;
  void *v66;
  float v67;
  float v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  float v73;
  float v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  unint64_t v84;
  unint64_t v85;
  unsigned int v86;
  _QWORD *v87;
  char v88;
  int *v89;
  uint64_t result;
  uint64_t *v91;
  uint64_t *v92;
  _BYTE v93[4];
  int v94;
  _QWORD *v95;
  id v96;
  _BYTE *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;

  v94 = a2;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  v104 = v5;
  v105 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v102 = &v93[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v97 = &v93[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v103 = &v93[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7C8);
  v100 = *(_QWORD *)(v12 - 8);
  v101 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v106 = &v93[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = a1;
  v14 = objc_msgSend(a1, sel_tags);
  if (!v14
    || (v15 = v14,
        v16 = objc_msgSend(v14, sel_allObjects),
        v15,
        v17 = sub_24A01EF88(),
        v16,
        v18 = sub_249FF0EE8(v17),
        swift_bridgeObjectRelease(),
        !v18))
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 < 0 || (v18 & 0x4000000000000000) != 0)
    goto LABEL_30;
  v19 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    v107 = v19;
    sub_249F894F0(&v107);
    v95 = (_QWORD *)a3;
    swift_bridgeObjectRelease();
    v20 = v107;
    if (v107 < 0 || (v107 & 0x4000000000000000) != 0)
      break;
    a3 = *(_QWORD *)(v107 + 16);
    if (!a3)
      goto LABEL_32;
LABEL_10:
    v107 = MEMORY[0x24BEE4AF8];
    sub_249F8CAF0(0, a3 & ~(a3 >> 63), 0);
    if (a3 < 0)
    {
      __break(1u);
      goto LABEL_79;
    }
    v21 = 0;
    v22 = v107;
    v98 = a3;
    v99 = v20 & 0xC000000000000001;
    v23 = v103;
    while (a3 != v21)
    {
      if (v99)
        v24 = (id)MEMORY[0x24BD071F4](v21, v20);
      else
        v24 = *(id *)(v20 + 8 * v21 + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_uuid);
      if (!v26)
        goto LABEL_81;
      v27 = v26;
      v28 = v22;
      v29 = v102;
      sub_24A01EB98();

      v30 = v104;
      v31 = v105;
      v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v105 + 32);
      v32(v23, v29, v104);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v23, 0, 1, v30);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v23, 1, v30) == 1)
        goto LABEL_82;
      v33 = v101;
      v34 = *(int *)(v101 + 48);
      v35 = v106;
      v32(v106, v23, v30);
      v35[v34] = objc_msgSend(v25, sel_isPrimary);
      v36 = objc_msgSend(v25, sel_type);

      if (v36 == 2)
        v37 = 2;
      else
        v37 = 1;
      if (!v36)
        v37 = 0;
      v35[*(int *)(v33 + 64)] = v37;
      v22 = v28;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v107 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_249F8CAF0(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v22 = v107;
      }
      a3 = v98;
      v40 = *(_QWORD *)(v22 + 16);
      v39 = *(_QWORD *)(v22 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_249F8CAF0(v39 > 1, v40 + 1, 1);
        v22 = v107;
      }
      ++v21;
      *(_QWORD *)(v22 + 16) = v40 + 1;
      sub_249F98C10((uint64_t)v106, v22+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v40, &qword_2578FF7C8);
      if (a3 == v21)
      {
        swift_release();
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_30:
    v41 = swift_bridgeObjectRetain();
    v19 = (uint64_t)sub_249FB56A8(v41);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  a3 = sub_24A01F3CC();
  swift_release();
  if (a3)
    goto LABEL_10;
LABEL_32:
  swift_release();
  v22 = MEMORY[0x24BEE4AF8];
LABEL_33:
  v42 = v96;
  v43 = objc_msgSend(v96, sel_identifier);
  v44 = objc_msgSend(v42, sel_client);
  v45 = objc_msgSend(v42, sel_type);
  v46 = v97;
  if ((v45 & 0x80000000) != 0)
    goto LABEL_83;
  v47 = v45;
  if (v45 >= 0x100)
    goto LABEL_83;
  v106 = v43;
  LODWORD(v103) = v44;
  if (v45 <= 5u)
  {
    if (!(_BYTE)v45)
      goto LABEL_43;
    if (v45 == 2)
    {
      v47 = 1;
      goto LABEL_43;
    }
LABEL_80:
    __break(1u);
LABEL_81:
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v103, 1, 1, v104);
LABEL_82:
    __break(1u);
    swift_release();
    __break(1u);
LABEL_83:
    result = sub_24A01F3B4();
    __break(1u);
    return result;
  }
  if (v45 == 63)
  {
    v47 = 2;
  }
  else
  {
    if (v45 != 6)
      goto LABEL_80;
    v47 = 3;
  }
LABEL_43:
  v48 = objc_msgSend(v42, sel_embedding);
  if (v48)
  {
    v49 = sub_24A01EAFC();
    v51 = v50;

    sub_249F92358(v49, v51);
  }
  v52 = objc_msgSend(v42, sel_asset);
  if (v52)
  {
    v53 = v52;
    sub_24A01EB98();

    v54 = 0;
  }
  else
  {
    v54 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v46, v54, 1, v104);
  objc_msgSend(v42, sel_quality);
  v56 = v55;
  objc_msgSend(v42, sel_confidence);
  v58 = v57;
  v59 = objc_msgSend(v42, sel_mapping);
  if (v59)
  {
    v60 = v59;
    v61 = (uint64_t)objc_msgSend(v59, sel_label);

  }
  else
  {
    v61 = -1;
  }
  v62 = objc_msgSend(v42, sel_source);
  if (!v62)
  {
    v63 = 0;
    goto LABEL_57;
  }
  if (v62 == 1)
  {
    v63 = 1;
    goto LABEL_57;
  }
  if (v62 != 2)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v63 = 2;
LABEL_57:
  v64 = objc_msgSend(v42, sel_isPrimary);
  v65 = objc_msgSend(v42, sel_mapping);
  if (v65)
  {
    v66 = v65;
    objc_msgSend(v65, sel_similarity);
    v68 = v67;

  }
  else
  {
    v68 = -1.0;
  }
  v69 = objc_msgSend(v42, sel_mapping);
  if (v69)
  {
    v70 = v69;
    v104 = (uint64_t)objc_msgSend(v69, sel_partner);

  }
  else
  {
    v104 = -1;
  }
  v71 = objc_msgSend(v42, sel_mapping);
  LODWORD(v105) = v64;
  if (v71)
  {
    v72 = v71;
    objc_msgSend(v71, sel_density);
    v74 = v73;

    if ((v94 & 1) != 0)
      goto LABEL_65;
LABEL_68:
    v77 = v61;
    v78 = 0;
    v81 = 0;
    v80 = 0xF000000000000000;
LABEL_73:
    v85 = 0xF000000000000000;
  }
  else
  {
    v74 = -1.0;
    if ((v94 & 1) == 0)
      goto LABEL_68;
LABEL_65:
    v75 = objc_msgSend(v42, sel_embedding);
    if (v75)
    {
      v76 = v75;
      v77 = v61;
      v78 = sub_24A01EAFC();
      v80 = v79;

    }
    else
    {
      v77 = v61;
      v78 = 0;
      v80 = 0xF000000000000000;
    }
    v82 = objc_msgSend(v42, sel_contextualEmbedding);
    if (!v82)
    {
      v81 = 0;
      goto LABEL_73;
    }
    v83 = v82;
    v81 = sub_24A01EAFC();
    v85 = v84;

  }
  v86 = v103;
  v87 = v95;
  *v95 = v106;
  v87[1] = v22;
  if (v86 >= 6)
    v88 = 5;
  else
    v88 = v86;
  *((_BYTE *)v87 + 16) = v88;
  *((_BYTE *)v87 + 17) = v47;
  *((_BYTE *)v87 + 18) = v48 == 0;
  v89 = (int *)type metadata accessor for VUGallery.ObservationView(0);
  result = sub_249F98C10((uint64_t)v97, (uint64_t)v87 + v89[9], &qword_2544CAD70);
  *(_DWORD *)((char *)v87 + v89[10]) = v56;
  *(_DWORD *)((char *)v87 + v89[11]) = v58;
  *(_QWORD *)((char *)v87 + v89[12]) = v77;
  *((_BYTE *)v87 + v89[13]) = v63;
  *((_BYTE *)v87 + v89[14]) = v105;
  *(float *)((char *)v87 + v89[15]) = v68;
  *(_QWORD *)((char *)v87 + v89[16]) = v104;
  *(float *)((char *)v87 + v89[17]) = v74;
  v91 = (_QWORD *)((char *)v87 + v89[18]);
  *v91 = v78;
  v91[1] = v80;
  v92 = (_QWORD *)((char *)v87 + v89[19]);
  *v92 = v81;
  v92[1] = v85;
  return result;
}

uint64_t sub_249F80C78()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF568);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F80CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];
  unint64_t v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v17 = MEMORY[0x24BEE4AF8];
  v8 = *(void **)(v7 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_BYTE *)(v9 + 24) = a3 & 1;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = &v17;
  *(_QWORD *)(v9 + 48) = v7;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249F98B74;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_175;
  v11 = _Block_copy(aBlock);
  swift_retain_n();
  v12 = v8;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v17;
    swift_release();
    swift_release();
    swift_retain();
    v15 = sub_249F93060(v14);
    swift_bridgeObjectRelease();
    result = swift_release();
    *a4 = v15;
  }
  return result;
}

uint64_t sub_249F80EB0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF568);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F80F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];
  unint64_t v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v19 = MEMORY[0x24BEE4AF8];
  v8 = *(void **)(v7 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_BYTE *)(v9 + 24) = 1;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = &v19;
  *(_QWORD *)(v9 + 48) = v7;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249F98B74;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_164;
  v11 = _Block_copy(aBlock);
  swift_retain_n();
  v12 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v19;
    swift_release();
    swift_release();
    swift_retain();
    v16 = sub_249F93210(v15, a1, a3 & 1);
    swift_bridgeObjectRelease();
    result = swift_release();
    *a4 = v16;
  }
  return result;
}

uint64_t sub_249F810F0()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
  sub_24A01F138();
  if (*(_QWORD *)(v2 + 16))
    v0 = *(_QWORD *)(v2 + 32);
  else
    v0 = 0;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_249F81184()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
  sub_24A01F138();
  return v1;
}

void sub_249F811E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = v2;
  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  swift_retain();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
  sub_24A01F180();
  if (v3)
  {

    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();

    *a2 = v7;
  }
}

uint64_t sub_249F812E4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
  sub_24A01F138();
  return v1;
}

void sub_249F81374(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = v2;
  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) + 16);
  MEMORY[0x24BDAC7A8](a1);
  swift_retain();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
  sub_24A01F180();
  if (v3)
  {

    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();

    *a2 = v7;
  }
}

uint64_t static VUGallery.SimilarityMetric.== infix(_:_:)()
{
  return 1;
}

uint64_t VUGallery.SimilarityMetric.hash(into:)()
{
  return sub_24A01F4F8();
}

uint64_t VUGallery.SimilarityMetric.hashValue.getter()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

uint64_t sub_249F81520()
{
  return 1;
}

uint64_t sub_249F81528()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

uint64_t sub_249F81568()
{
  return sub_24A01F4F8();
}

uint64_t sub_249F8158C()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

unint64_t sub_249F815C8()
{
  return sub_249F81648();
}

uint64_t sub_249F815D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t result;

  swift_retain();
  v6 = sub_249FF915C(a1, a2);
  result = swift_release();
  *(_DWORD *)a3 = v6;
  *(_BYTE *)(a3 + 4) = BYTE4(v6) & 1;
  return result;
}

unint64_t sub_249F8163C()
{
  return sub_249F81648();
}

unint64_t sub_249F81648()
{
  unsigned int v1;
  unsigned __int8 v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF570);
  sub_24A01F138();
  return v1 | ((unint64_t)v2 << 32);
}

uint64_t sub_249F816BC@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t result;

  if (HIBYTE(a1) > 0x3F || ((1 << SHIBYTE(a1)) & 0x8000000000000044) == 0)
    v7 = 0;
  else
    v7 = HIBYTE(a1);
  swift_retain();
  v8 = sub_249FF8704(v7, a1, a2, 0);
  swift_release();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
    v10 = *(_DWORD *)(v8 + 40);
  else
    v10 = 0;
  v11 = v9 == 0;
  result = swift_bridgeObjectRelease();
  *(_DWORD *)a3 = v10;
  *(_BYTE *)(a3 + 4) = v11;
  return result;
}

uint64_t sub_249F81778()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  sub_24A01F138();
  return v1;
}

void sub_249F817E0(uint64_t a1)
{
  sub_249F817EC(a1, 100, 0);
}

void sub_249F817EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF580);
  sub_24A01F138();
  swift_bridgeObjectRetain();
  v5 = sub_24A01ED90();
  v6 = sub_24A01F0D8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 134218240;
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    sub_24A01F1F8();
    _os_log_impl(&dword_249F70000, v5, v6, "Found %ld entities similar to %ld", (uint8_t *)v7, 0x16u);
    MEMORY[0x24BD07950](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v8 = *(_QWORD *)(v9 + 16);
  if (v8 <= a3)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_249F81F6C(a2, v9, v9 + 32, a3, (2 * v8) | 1);
  }
}

uint64_t sub_249F8198C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  float v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char isEscapingClosureAtFileLocation;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  float *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  unint64_t v43;
  char v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t aBlock[6];
  uint64_t v63;

  v3 = a2;
  v5 = HIBYTE(a1);
  if (!HIBYTE(a1) || v5 > 0x3F || (v6 = HIBYTE(a1), ((1 << SHIBYTE(a1)) & 0x8000000000000044) == 0))
    LODWORD(v6) = 0;
  v7 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16)
                 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_249F8B0C4(v6), (v10 & 1) != 0))
    v11 = *(float *)(*(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9) + 56);
  else
    v11 = INFINITY;
  swift_retain();
  v12 = sub_249FF8704(v6, a1, 0, 1);
  swift_release();
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  v61 = v12;
  if (v13)
  {
    v58 = v3;
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8C9C8(0, v13, 0);
    v14 = aBlock[0];
    v15 = (uint64_t *)(v12 + 32);
    v16 = *(_QWORD *)(aBlock[0] + 16);
    do
    {
      v18 = *v15;
      v15 += 2;
      v17 = v18;
      aBlock[0] = v14;
      v19 = *(_QWORD *)(v14 + 24);
      if (v16 >= v19 >> 1)
      {
        sub_249F8C9C8(v19 > 1, v16 + 1, 1);
        v14 = aBlock[0];
      }
      *(_QWORD *)(v14 + 16) = v16 + 1;
      *(_QWORD *)(v14 + 8 * v16++ + 32) = v17;
      --v13;
    }
    while (v13);
    v3 = v58;
  }
  v20 = sub_249FC6B8C(v14);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24A0208C0;
  switch((_DWORD)v5)
  {
    case 0:
LABEL_20:
      v23 = 0;
      break;
    case 0x3F:
      v23 = 63;
      break;
    case 6:
      v23 = 6;
      break;
    case 2:
      v23 = 2;
      break;
    default:
      goto LABEL_20;
  }
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v24 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v22 + 64) = v24;
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA380);
  *(_QWORD *)(v22 + 104) = sub_249F98C68(&qword_2578FF910, &qword_2544CA380, MEMORY[0x24BDCFD00]);
  *(_QWORD *)(v22 + 72) = v20;
  swift_retain();
  v25 = (void *)sub_24A01F09C();
  v63 = MEMORY[0x24BEE4B00];
  v26 = *(void **)(v21 + 16);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v25;
  v27[3] = v21;
  v27[4] = &v63;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_249F993C4;
  *(_QWORD *)(v28 + 24) = v27;
  aBlock[4] = (uint64_t)sub_249F9928C;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_249F87210;
  aBlock[3] = (uint64_t)&block_descriptor_152;
  v29 = _Block_copy(aBlock);
  swift_retain();
  v30 = v26;
  v31 = v25;
  swift_retain();
  swift_release();
  objc_msgSend(v30, sel_performBlockAndWait_, v29);

  _Block_release(v29);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_49:
    result = swift_release();
    __break(1u);
    return result;
  }
  v33 = v63;
  swift_release();

  swift_release();
  v34 = *(_QWORD *)(v61 + 16);
  v35 = MEMORY[0x24BEE4AF8];
  if (v34)
  {
    v36 = (float *)(v61 + 40);
    do
    {
      v40 = *((_QWORD *)v36 - 1);
      v41 = *v36;
      if (v40 != a1 && v11 <= v41)
      {
        if (*(_QWORD *)(v33 + 16))
        {
          v43 = sub_249F8B27C(*((_QWORD *)v36 - 1));
          if ((v44 & 1) != 0 && *(uint64_t *)(*(_QWORD *)(v33 + 56) + 8 * v43) >= 2)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = v35;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_249F8CB48(0, *(_QWORD *)(v35 + 16) + 1, 1);
              v35 = aBlock[0];
            }
            v38 = *(_QWORD *)(v35 + 16);
            v37 = *(_QWORD *)(v35 + 24);
            if (v38 >= v37 >> 1)
            {
              sub_249F8CB48(v37 > 1, v38 + 1, 1);
              v35 = aBlock[0];
            }
            *(_QWORD *)(v35 + 16) = v38 + 1;
            v39 = v35 + 16 * v38;
            *(_QWORD *)(v39 + 32) = v40;
            *(float *)(v39 + 40) = v41;
          }
        }
      }
      v36 += 4;
      --v34;
    }
    while (v34);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  aBlock[0] = v35;
  swift_retain();
  sub_249F89568(aBlock, sub_24A012F60, sub_249F8F058);
  if (v59)
    goto LABEL_49;
  swift_release();
  v46 = aBlock[0];
  v47 = *(_QWORD *)(aBlock[0] + 16);
  if (v47)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8CB6C(0, v47, 0);
    v48 = 0;
    v49 = aBlock[0];
    v50 = *(_QWORD *)(aBlock[0] + 16);
    v51 = 16 * v50;
    do
    {
      v52 = *(_QWORD *)(v46 + v48 + 32);
      v53 = *(_DWORD *)(v46 + v48 + 40);
      aBlock[0] = v49;
      v54 = *(_QWORD *)(v49 + 24);
      v55 = v50 + 1;
      if (v50 >= v54 >> 1)
      {
        sub_249F8CB6C(v54 > 1, v50 + 1, 1);
        v49 = aBlock[0];
      }
      *(_QWORD *)(v49 + 16) = v55;
      v56 = v49 + v51 + v48;
      *(_QWORD *)(v56 + 32) = v52;
      *(_DWORD *)(v56 + 40) = v53;
      v48 += 16;
      v50 = v55;
      --v47;
    }
    while (v47);
    result = swift_release();
  }
  else
  {
    result = swift_release();
    v49 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v49;
  return result;
}

uint64_t sub_249F81F6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v5 = result;
  if (!result)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v7 = a5 >> 1;
  v8 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v8 >= result)
    v8 = result;
  v30 = MEMORY[0x24BEE4AF8];
  sub_249F8CB6C(0, v8 & ~(v8 >> 63), 0);
  v9 = v30;
  if (v7 == a4)
  {
LABEL_32:
    swift_unknownObjectRelease();
    return v9;
  }
  result = swift_unknownObjectRetain();
  v10 = 0;
  v11 = a3;
  v12 = a3 + 24;
  v13 = a4;
  do
  {
    while (1)
    {
LABEL_8:
      if (v13 < a4 || v13 >= v7)
        goto LABEL_40;
      v14 = (uint64_t *)(v11 + 16 * v13);
      v15 = *v14;
      v16 = *((_DWORD *)v14 + 2);
      v17 = v13 + 1;
      v18 = *(_QWORD *)(v30 + 16);
      if ((uint64_t)v18 < v5)
        break;
      if (v10 >= v18)
        goto LABEL_42;
      v19 = v30 + 32 + 16 * v10;
      *(_QWORD *)v19 = v15;
      *(_DWORD *)(v19 + 8) = v16;
      if ((uint64_t)++v10 >= v5)
      {
        if (v17 == v7)
        {
LABEL_31:
          swift_unknownObjectRelease();
          goto LABEL_32;
        }
        v20 = (_DWORD *)(v12 + 16 * v13);
        v13 += 2;
        while (v13 - 1 < v7)
        {
          v15 = *((_QWORD *)v20 - 1);
          v16 = *v20;
          v18 = *(_QWORD *)(v30 + 16);
          if ((uint64_t)v18 < v5)
          {
            v10 = 0;
            goto LABEL_23;
          }
          *(_QWORD *)(v30 + 32) = v15;
          *(_DWORD *)(v30 + 40) = v16;
          if (v5 > 1)
          {
            v10 = 1;
            if (v13 != v7)
              goto LABEL_8;
            swift_unknownObjectRelease();
            v10 = 1;
            goto LABEL_35;
          }
          ++v13;
          v20 += 4;
          if (v13 - v7 == 1)
            goto LABEL_31;
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      ++v13;
      if (v17 == v7)
        goto LABEL_34;
    }
    ++v13;
LABEL_23:
    v21 = *(_QWORD *)(v30 + 24);
    v22 = v18 + 1;
    if (v18 >= v21 >> 1)
    {
      v27 = v12;
      result = sub_249F8CB6C(v21 > 1, v18 + 1, 1);
      v22 = v18 + 1;
      v12 = v27;
      v11 = a3;
    }
    *(_QWORD *)(v30 + 16) = v22;
    v23 = v30 + 16 * v18;
    *(_QWORD *)(v23 + 32) = v15;
    *(_DWORD *)(v23 + 40) = v16;
  }
  while (v13 != v7);
LABEL_34:
  swift_unknownObjectRelease();
  if (!v10)
    goto LABEL_32;
LABEL_35:
  v24 = *(_QWORD *)(v30 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  result = sub_249F8CB6C(0, v24, 0);
  if (v24 >= (uint64_t)v10)
  {
    if ((v10 & 0x8000000000000000) != 0)
      goto LABEL_45;
    v25 = *(_QWORD *)(v30 + 16);
    if (v25 >= v10 && v25 >= v24)
    {
      v26 = swift_retain();
      sub_249F981F4(v26, v30 + 32, v10, (2 * v24) | 1);
      swift_unknownObjectRelease();
      swift_release();
      sub_249F981F4(v30, v30 + 32, 0, (2 * v10) | 1);
      swift_release();
      return v29;
    }
    goto LABEL_46;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_249F82274(uint64_t a1)
{
  return sub_249F82288(a1, &qword_2578FF588);
}

uint64_t sub_249F82288(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_24A01F138();
  return v3;
}

uint64_t sub_249F822EC@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  float v38;
  float v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t j;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  _QWORD **v63;
  void (*v64)(_QWORD *);
  _QWORD *v65;
  _QWORD *v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  _QWORD *v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  int64_t v91;
  _QWORD aBlock[6];
  _QWORD *v93;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v4 = MEMORY[0x24BEE4AF8];
  v93 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 24) = 1;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = &v93;
  *(_QWORD *)(v6 + 48) = v3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_249F98B74;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_141;
  v8 = _Block_copy(aBlock);
  swift_retain_n();
  v9 = v5;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);

  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v7 = (unint64_t)v93;
    swift_release();
    swift_release();
    aBlock[0] = v4;
    if (!(v7 >> 62))
    {
      v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v10 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v10)
  {
    if (v10 < 1)
    {
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    for (i = 0; i != v10; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x24BD071F4](i, v7);
      else
        v12 = *(id *)(v7 + 8 * i + 32);
      v13 = v12;
      if (objc_msgSend(v12, sel_type) == ((0x63F0200u >> (8 * a2)) & 0x3F))
      {
        sub_24A01F33C();
        sub_24A01F36C();
        sub_24A01F378();
        sub_24A01F348();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v14 = aBlock[0];
    v4 = MEMORY[0x24BEE4AF8];
    v90 = aBlock[0];
    if ((aBlock[0] & 0x8000000000000000) != 0)
      goto LABEL_33;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    v90 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_33;
  }
  if ((v14 & 0x4000000000000000) == 0)
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (!v15)
      goto LABEL_34;
LABEL_19:
    aBlock[0] = v4;
    sub_249F8CBB4(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      sub_24A01F48C();
      __break(1u);
      goto LABEL_104;
    }
    v16 = 0;
    v17 = aBlock[0];
    v18 = v14 & 0xC000000000000001;
    do
    {
      if (v18)
        v19 = (id)MEMORY[0x24BD071F4](v16, v14);
      else
        v19 = *(id *)(v14 + 8 * v16 + 32);
      v20 = v19;
      v21 = objc_msgSend(v19, sel_identifier);
      v22 = objc_msgSend(v20, sel_mapping);
      if (v22)
      {
        v23 = v22;
        v24 = (uint64_t)objc_msgSend(v22, sel_partner);

        v20 = v23;
      }
      else
      {
        v24 = -1;
      }

      aBlock[0] = v17;
      v26 = *(_QWORD *)(v17 + 16);
      v25 = *(_QWORD *)(v17 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_249F8CBB4(v25 > 1, v26 + 1, 1);
        v17 = aBlock[0];
      }
      ++v16;
      *(_QWORD *)(v17 + 16) = v26 + 1;
      v27 = v17 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v21;
      *(_QWORD *)(v27 + 40) = v24;
      v14 = v90;
    }
    while (v15 != v16);
    v4 = MEMORY[0x24BEE4AF8];
    goto LABEL_35;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  v15 = sub_24A01F3CC();
  swift_release();
  if (v15)
    goto LABEL_19;
LABEL_34:
  if (*(_QWORD *)(v4 + 16))
  {
LABEL_35:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC28);
    v28 = sub_24A01F3FC();
    goto LABEL_36;
  }
  v28 = MEMORY[0x24BEE4B00];
LABEL_36:
  aBlock[0] = v28;
  v29 = (_QWORD *)swift_bridgeObjectRetain();
  sub_249F91B04(v29, 1, aBlock);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    v30 = aBlock[0];
    if (v15)
    {
      aBlock[0] = v4;
      sub_249F8CB90(0, v15 & ~(v15 >> 63), 0);
      if (v15 < 0)
        goto LABEL_102;
      v85 = v30;
      v31 = 0;
      v4 = aBlock[0];
      v32 = v14 & 0xC000000000000001;
      do
      {
        if (v32)
          v33 = (id)MEMORY[0x24BD071F4](v31, v14);
        else
          v33 = *(id *)(v14 + 8 * v31 + 32);
        v34 = v33;
        v35 = objc_msgSend(v33, sel_identifier, v85);
        v36 = objc_msgSend(v34, sel_mapping);
        if (v36)
        {
          v37 = v36;
          objc_msgSend(v36, sel_similarity);
          v39 = v38;

          v34 = v37;
        }
        else
        {
          v39 = -1.0;
        }

        aBlock[0] = v4;
        v41 = *(_QWORD *)(v4 + 16);
        v40 = *(_QWORD *)(v4 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_249F8CB90(v40 > 1, v41 + 1, 1);
          v4 = aBlock[0];
        }
        ++v31;
        *(_QWORD *)(v4 + 16) = v41 + 1;
        v42 = v4 + 16 * v41;
        *(_QWORD *)(v42 + 32) = v35;
        *(float *)(v42 + 40) = v39;
        v14 = v90;
      }
      while (v15 != v31);
      swift_release();
      v30 = v85;
    }
    else
    {
      swift_release();
    }
    v43 = (_QWORD *)MEMORY[0x24BEE4B00];
    if (*(_QWORD *)(v4 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8F8);
      v44 = sub_24A01F3FC();
    }
    else
    {
      v44 = MEMORY[0x24BEE4B00];
    }
    aBlock[0] = v44;
    v45 = swift_bridgeObjectRetain();
    sub_249F917C0(v45, 1, aBlock);
    swift_bridgeObjectRelease();
    v46 = aBlock[0];
    swift_retain();
    LOBYTE(aBlock[0]) = 1;
    v47 = sub_24A00B4B0(0x63F0200u >> (8 * a2), 0x100000000, v30, v46, 1, 0);
    swift_release();
    swift_release();
    swift_release();
    v48 = 0;
    v93 = v43;
    v49 = 1 << *(_BYTE *)(v47 + 32);
    v50 = -1;
    if (v49 < 64)
      v50 = ~(-1 << v49);
    v88 = v47 + 64;
    v51 = v50 & *(_QWORD *)(v47 + 64);
    v91 = (unint64_t)(v49 + 63) >> 6;
    if (v51)
      goto LABEL_60;
LABEL_61:
    v55 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    if (v55 < v91)
    {
      v56 = *(_QWORD *)(v88 + 8 * v55);
      ++v48;
      if (v56)
        goto LABEL_74;
      v48 = v55 + 1;
      if (v55 + 1 >= v91)
        goto LABEL_94;
      v56 = *(_QWORD *)(v88 + 8 * v48);
      if (v56)
        goto LABEL_74;
      v48 = v55 + 2;
      if (v55 + 2 >= v91)
        goto LABEL_94;
      v56 = *(_QWORD *)(v88 + 8 * v48);
      if (v56)
      {
LABEL_74:
        v51 = (v56 - 1) & v56;
        for (j = __clz(__rbit64(v56)) + (v48 << 6); ; j = v53 | (v48 << 6))
        {
          v58 = 8 * j;
          v59 = *(_QWORD *)(*(_QWORD *)(v47 + 48) + v58);
          v60 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + v58);
          v61 = v93;
          if (v93[2] && (sub_249F8B27C(v60), (v62 & 1) != 0))
          {
            v64 = sub_24A007628(aBlock, v60);
            v65 = *v63;
            if (*v63)
            {
              v66 = v63;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *v66 = v65;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v65 = sub_249F8A30C(0, v65[2] + 1, 1, v65, (uint64_t *)&unk_2544CAC38);
                *v66 = v65;
              }
              v69 = v65[2];
              v68 = v65[3];
              if (v69 >= v68 >> 1)
              {
                v65 = sub_249F8A30C((_QWORD *)(v68 > 1), v69 + 1, 1, v65, (uint64_t *)&unk_2544CAC38);
                *v66 = v65;
              }
              v65[2] = v69 + 1;
              v65[v69 + 4] = v59;
            }
            ((void (*)(_QWORD *, _QWORD))v64)(aBlock, 0);
            if (!v51)
              goto LABEL_61;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC38);
            v70 = swift_allocObject();
            *(_OWORD *)(v70 + 16) = xmmword_24A0208B0;
            *(_QWORD *)(v70 + 32) = v59;
            v71 = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = v61;
            v73 = sub_249F8B27C(v60);
            v74 = v61[2];
            v75 = (v72 & 1) == 0;
            v76 = v74 + v75;
            if (__OFADD__(v74, v75))
            {
              __break(1u);
              goto LABEL_97;
            }
            v77 = v72;
            if (v61[3] >= v76)
            {
              if ((v71 & 1) == 0)
                sub_249FC1AF0();
            }
            else
            {
              sub_249FB99FC(v76, v71);
              v78 = sub_249F8B27C(v60);
              if ((v77 & 1) != (v79 & 1))
                goto LABEL_103;
              v73 = v78;
            }
            v80 = (_QWORD *)aBlock[0];
            if ((v77 & 1) != 0)
            {
              v52 = *(_QWORD *)(aBlock[0] + 56);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v52 + 8 * v73) = v70;
            }
            else
            {
              *(_QWORD *)(aBlock[0] + 8 * (v73 >> 6) + 64) |= 1 << v73;
              *(_QWORD *)(v80[6] + 8 * v73) = v60;
              *(_QWORD *)(v80[7] + 8 * v73) = v70;
              v81 = v80[2];
              v82 = __OFADD__(v81, 1);
              v83 = v81 + 1;
              if (v82)
                goto LABEL_98;
              v80[2] = v83;
            }
            v93 = v80;
            swift_bridgeObjectRelease();
            if (!v51)
              goto LABEL_61;
          }
LABEL_60:
          v53 = __clz(__rbit64(v51));
          v51 &= v51 - 1;
        }
      }
      v57 = v55 + 3;
      if (v57 < v91)
      {
        v56 = *(_QWORD *)(v88 + 8 * v57);
        if (v56)
        {
          v48 = v57;
          goto LABEL_74;
        }
        while (1)
        {
          v48 = v57 + 1;
          if (__OFADD__(v57, 1))
            goto LABEL_99;
          if (v48 >= v91)
            break;
          v56 = *(_QWORD *)(v88 + 8 * v48);
          ++v57;
          if (v56)
            goto LABEL_74;
        }
      }
    }
LABEL_94:
    result = swift_release();
    *a3 = v93;
    return result;
  }
LABEL_104:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t VUGallery.ClusteringOptions.threshold.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t VUGallery.ClusteringOptions.threshold.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VUGallery.ClusteringOptions.threshold.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.ClusteringOptions.forceFullClustering.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t VUGallery.ClusteringOptions.forceFullClustering.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*VUGallery.ClusteringOptions.forceFullClustering.modify())()
{
  return nullsub_1;
}

void __swiftcall VUGallery.ClusteringOptions.init(threshold:forceFullClustering:)(VisualUnderstanding::VUGallery::ClusteringOptions *__return_ptr retstr, Swift::Float_optional *threshold, Swift::Bool forceFullClustering)
{
  LODWORD(retstr->threshold.value) = (_DWORD)threshold;
  retstr->threshold.is_nil = BYTE4(threshold) & 1;
  retstr->forceFullClustering = forceFullClustering;
}

uint64_t VUGallery.ClusteringResults.assetGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VUGallery.ClusteringResults.clusteringCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t VUGallery.ClusteringResults.fullModeCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_249F82D4C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;

  CFAbsoluteTimeGetCurrent();
  v0 = swift_allocObject();
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF590);
  sub_24A01F138();
  if (v8)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    CFAbsoluteTimeGetCurrent();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3 = sub_24A01ED90();
    v4 = sub_24A01F0CC();
    if (os_log_type_enabled(v3, v4))
    {
      v7 = v4;
      v5 = swift_slowAlloc();
      *(_DWORD *)v5 = 134218496;
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2048;
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 22) = 2048;
      sub_24A01F1F8();
      _os_log_impl(&dword_249F70000, v3, v7, "Extracting %ld clusters out of %ld assets took %fms", (uint8_t *)v5, 0x20u);
      MEMORY[0x24BD07950](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    MEMORY[0x24BDAC7A8](v6);
    sub_24A01F138();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

id sub_249F83038(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id result;
  uint64_t v12;

  v4 = sub_24A01EBA4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v12 - v9;
  result = objc_msgSend(a2, sel_label);
  if (result != (id)-1)
  {
    objc_msgSend(a2, sel_density);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    swift_beginAccess();
    sub_249F8BE04((uint64_t)v10, v8);
    swift_endAccess();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

uint64_t sub_249F83170@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void (*a5)(_QWORD, _QWORD, _QWORD)@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, _QWORD);
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  char v81;
  void (*v82)(unint64_t, uint64_t);
  uint64_t v83;
  unint64_t v84;
  char v85;
  void (*v86)(_QWORD, _QWORD, _QWORD);
  uint64_t v87;
  uint64_t v88;
  int v89;
  unint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  unint64_t v108;
  _OWORD *v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  _QWORD *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t result;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  int64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  char *v149;
  unint64_t v150;
  unint64_t v151;
  char *v152;
  void (*v153)(char *, uint64_t, uint64_t);
  char *v154;
  void (*v155)(_QWORD, _QWORD, _QWORD);
  uint64_t v156;
  __int128 v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;

  v155 = a5;
  v156 = a4;
  v139 = a7;
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v12 = *(_QWORD *)(v142 - 8);
  v13 = MEMORY[0x24BDAC7A8](v142);
  v138 = (uint64_t)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v130 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v143 = (char *)&v130 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v19);
  v154 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A01EBA4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v152 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)&v157 = (char *)&v130 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8D0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v27);
  v163 = MEMORY[0x24BEE4B00];
  if ((a1 & 0xFF0000000000) == 0x20000000000 || (a1 & 0x100000000) != 0)
  {
    v21 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_24A0208F0;
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v39 = swift_allocObject();
    v157 = xmmword_24A0208B0;
    *(_OWORD *)(v39 + 16) = xmmword_24A0208B0;
    v40 = MEMORY[0x24BEE42B0];
    *(_QWORD *)(v39 + 56) = MEMORY[0x24BEE4260];
    *(_QWORD *)(v39 + 64) = v40;
    *(_BYTE *)(v39 + 32) = 0x63F0200u >> (8 * a3);
    *(_QWORD *)(v38 + 32) = sub_24A01F09C();
    v161 = v38;
    sub_24A01EFA0();
    v162 = v161;
    if (*(_QWORD *)(a6 + 16) >> 4 >= 0x271uLL)
      goto LABEL_8;
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v157;
    *(_QWORD *)(v41 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB70);
    *(_QWORD *)(v41 + 64) = sub_249F98C68(&qword_2578FF8D8, &qword_2544CAB70, MEMORY[0x24BDCFBF8]);
    *(_QWORD *)(v41 + 32) = a6;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (uint64_t)(id)sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_7:
      sub_24A01EFD0();
      sub_24A01EFA0();

LABEL_8:
      v43 = swift_bridgeObjectRetain();
      v44 = sub_249FC6EF4(v43);
      swift_bridgeObjectRelease();
      v45 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
      swift_retain();
      v46 = (void *)sub_24A01EF70();
      swift_bridgeObjectRelease();
      v47 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v46);

      v49 = MEMORY[0x24BDAC7A8](v48);
      *(&v130 - 4) = v44;
      *(&v130 - 3) = (uint64_t)&v163;
      v50 = v155;
      *(&v130 - 2) = v156;
      *(&v130 - 1) = (uint64_t)v50;
      MEMORY[0x24BDAC7A8](v49);
      *(&v130 - 8) = (uint64_t)v47;
      *(&v130 - 7) = (uint64_t)&unk_251B683E0;
      *(&v130 - 6) = 1024;
      *(&v130 - 5) = v45;
      *(&v130 - 4) = (uint64_t)sub_249F98BD0;
      *(&v130 - 3) = v51;
      *(&v130 - 2) = 0;
      *(&v130 - 1) = 0;
      v53 = v52;
      sub_24A01F180();
      v54 = v21;
      if (!v21)
      {
        swift_release();

        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      swift_release();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_87:
    sub_24A01EFAC();
    goto LABEL_7;
  }
  v151 = a1;
  v148 = (uint64_t *)((char *)&v130 - v28);
  v149 = v29;
  v135 = v17;
  v137 = v12;
  v161 = MEMORY[0x24BEE4B00];
  v162 = MEMORY[0x24BEE4B00];
  v159 = MEMORY[0x24BEE4B00];
  v160 = MEMORY[0x24BEE4B00];
  v30 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v153 = (void (*)(char *, uint64_t, uint64_t))a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v31 = swift_allocObject();
  v136 = xmmword_24A0208B0;
  *(_OWORD *)(v31 + 16) = xmmword_24A0208B0;
  v32 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v31 + 64) = v32;
  LODWORD(v150) = 0x63F0200u >> (8 * a3);
  *(_BYTE *)(v31 + 32) = v150;
  swift_retain();
  v33 = (void *)sub_24A01F09C();
  v34 = MEMORY[0x24BDAC7A8](v33);
  *(&v130 - 6) = (uint64_t)&v162;
  *(&v130 - 5) = (uint64_t)&v161;
  *(&v130 - 4) = (uint64_t)&v160;
  *(&v130 - 3) = (uint64_t)&v159;
  *(&v130 - 2) = v156;
  *(&v130 - 1) = (uint64_t)v155;
  *(&v130 - 8) = MEMORY[0x24BDAC7A8](v34);
  *(&v130 - 7) = (uint64_t)&unk_251B68420;
  *(&v130 - 6) = 1024;
  *(&v130 - 5) = v30;
  *(&v130 - 4) = (uint64_t)sub_249F98BDC;
  *(&v130 - 3) = v35;
  *(&v130 - 2) = 0;
  *(&v130 - 1) = 0;
  v37 = v36;
  sub_24A01F180();
  swift_release();

  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v134 = 0;
  a2 = v161;
  v55 = v162;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v158) = 0;
  v141 = sub_24A00B4B0(v150, v151, v55, a2, 1, 1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v159 + 64);
  v140 = v159 + 64;
  v57 = 1 << *(_BYTE *)(v159 + 32);
  v58 = -1;
  if (v57 < 64)
    v58 = ~(-1 << v57);
  v151 = v58 & v56;
  v59 = (unint64_t)(v57 + 63) >> 6;
  v131 = v59 - 1;
  v60 = swift_bridgeObjectRetain();
  v61 = 0;
  v144 = v59;
  v132 = v59 - 5;
  isUniquelyReferenced_nonNull_native = (uint64_t)&qword_2578FF8E0;
  v146 = v60;
  v133 = v60 + 104;
  v147 = a6;
  v156 = v22;
  v62 = v149;
  while (1)
  {
    v63 = v154;
    if (v151)
    {
      v64 = __clz(__rbit64(v151));
      v150 = v61;
      v151 &= v151 - 1;
      v65 = v64 | (v61 << 6);
LABEL_18:
      v66 = *(_QWORD *)(v146 + 56);
      *(_QWORD *)v62 = *(_QWORD *)(*(_QWORD *)(v146 + 48) + 8 * v65);
      v67 = v66 + *(_QWORD *)(v22 + 72) * v65;
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(&v62[*(int *)(v68 + 48)], v67, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v62, 0, 1, v68);
      goto LABEL_25;
    }
    v69 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    if (v69 >= v144)
    {
      v71 = v61;
    }
    else
    {
      v70 = *(_QWORD *)(v140 + 8 * v69);
      if (v70)
        goto LABEL_22;
      v71 = v61 + 1;
      if ((uint64_t)(v61 + 2) < v144)
      {
        v70 = *(_QWORD *)(v140 + 8 * (v61 + 2));
        if (v70)
        {
          v69 = v61 + 2;
LABEL_22:
          v150 = v69;
          v151 = (v70 - 1) & v70;
          v65 = __clz(__rbit64(v70)) + (v69 << 6);
          goto LABEL_18;
        }
        v71 = v61 + 2;
        if ((uint64_t)(v61 + 3) < v144)
        {
          v70 = *(_QWORD *)(v140 + 8 * (v61 + 3));
          if (v70)
          {
            v69 = v61 + 3;
            goto LABEL_22;
          }
          v69 = v61 + 4;
          v71 = v61 + 3;
          if ((uint64_t)(v61 + 4) < v144)
          {
            v70 = *(_QWORD *)(v140 + 8 * v69);
            if (v70)
              goto LABEL_22;
            while (v132 != v61)
            {
              v70 = *(_QWORD *)(v133 + 8 * v61++);
              if (v70)
              {
                v69 = v61 + 4;
                goto LABEL_22;
              }
            }
            v71 = v131;
          }
        }
      }
    }
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v62, 1, 1, v72);
    v150 = v71;
    v151 = 0;
LABEL_25:
    v73 = v148;
    sub_249F98C10((uint64_t)v62, (uint64_t)v148, &qword_2578FF8D0);
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8E0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74) == 1)
      goto LABEL_81;
    v75 = *v73;
    v76 = (char *)v73 + *(int *)(v74 + 48);
    v155 = *(void (**)(_QWORD, _QWORD, _QWORD))(v22 + 32);
    v155(v157, v76, v21);
    v77 = *(_QWORD *)(a6 + 16);
    if (v77)
      break;
    swift_bridgeObjectRetain();
    v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
LABEL_33:
    v80(v63, 1, 1, v21);
    v22 = v156;
LABEL_34:
    a6 = v147;
    swift_bridgeObjectRelease();
    v82 = *(void (**)(unint64_t, uint64_t))(v22 + 8);
    v62 = v149;
LABEL_35:
    isUniquelyReferenced_nonNull_native = (uint64_t)&qword_2578FF8E0;
LABEL_15:
    v82(v157, v21);
    v61 = v150;
  }
  v145 = v75;
  v78 = a6 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  swift_bridgeObjectRetain();
  v79 = *(_QWORD *)(v22 + 72);
  v153 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  while (1)
  {
    v153(v63, v78, v21);
    v22 = v156;
    v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v156 + 56);
    v80(v63, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v63, 1, v21) == 1)
      goto LABEL_34;
    a2 = (unint64_t)v152;
    v155(v152, v63, v21);
    sub_249F9419C(&qword_2578FF760, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v81 = sub_24A01EE38();
    v82 = *(void (**)(unint64_t, uint64_t))(v22 + 8);
    v82(a2, v21);
    if ((v81 & 1) != 0)
      break;
    v78 += v79;
    --v77;
    v63 = v154;
    if (!v77)
      goto LABEL_33;
  }
  a6 = v147;
  swift_bridgeObjectRelease();
  v83 = v141;
  isUniquelyReferenced_nonNull_native = (uint64_t)&qword_2578FF8E0;
  if (!*(_QWORD *)(v141 + 16))
  {
    v22 = v156;
    v62 = v149;
    goto LABEL_15;
  }
  v84 = sub_249F8B27C(v145);
  v62 = v149;
  if ((v85 & 1) == 0)
  {
    v22 = v156;
    goto LABEL_15;
  }
  v86 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v83 + 56) + 8 * v84);
  v87 = *(int *)(v142 + 48);
  v153(v143, v157, v21);
  v88 = v160;
  v89 = 0;
  if (*(_QWORD *)(v160 + 16))
  {
    v90 = sub_249F8B27C(v145);
    if ((v91 & 1) != 0)
      v89 = *(_DWORD *)(*(_QWORD *)(v88 + 56) + 4 * v90);
  }
  *(_DWORD *)&v143[v87] = v89;
  if (!*(_QWORD *)(v163 + 16) || (sub_249F8B27C((uint64_t)v86), (v92 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8E8);
    v108 = (*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
    v109 = (_OWORD *)swift_allocObject();
    v109[1] = v136;
    v155 = (void (*)(_QWORD, _QWORD, _QWORD))v109;
    v110 = (char *)v109 + v108;
    v111 = *(int *)(v142 + 48);
    v153(v110, (uint64_t)v143, v21);
    *(_DWORD *)&v110[v111] = v89;
    v112 = v163;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v158 = (_QWORD *)v112;
    a2 = sub_249F8B27C((uint64_t)v86);
    v114 = *(_QWORD *)(v112 + 16);
    v115 = (v113 & 1) == 0;
    v116 = v114 + v115;
    if (__OFADD__(v114, v115))
      goto LABEL_86;
    if (*(_QWORD *)(v112 + 24) < v116)
    {
      LODWORD(v153) = v113;
      sub_249FBA8CC(v116, isUniquelyReferenced_nonNull_native);
      v117 = (uint64_t)v86;
      v118 = sub_249F8B27C((uint64_t)v86);
      v22 = v156;
      if ((v153 & 1) != (v119 & 1))
      {
LABEL_89:
        sub_24A01F48C();
        __break(1u);
        goto LABEL_90;
      }
      a2 = v118;
      v120 = v158;
      if ((v153 & 1) == 0)
        goto LABEL_56;
LABEL_59:
      v121 = v120[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 8 * a2) = v155;
      goto LABEL_60;
    }
    v117 = (uint64_t)v86;
    v22 = v156;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v120 = v158;
      if ((v113 & 1) != 0)
        goto LABEL_59;
    }
    else
    {
      v126 = v113;
      sub_249FC23FC();
      v120 = v158;
      if ((v126 & 1) != 0)
        goto LABEL_59;
    }
LABEL_56:
    sub_249FC0A04(a2, v117, (uint64_t)v155, v120);
LABEL_60:
    isUniquelyReferenced_nonNull_native = (uint64_t)&qword_2578FF8E0;
    v163 = (unint64_t)v120;
    swift_bridgeObjectRelease();
    sub_249F990A0((uint64_t)v143, &qword_2578FF8C8);
    goto LABEL_15;
  }
  v93 = v142;
  v94 = *(int *)(v142 + 48);
  v95 = v135;
  v153(v135, (uint64_t)v143, v21);
  *(_DWORD *)&v95[v94] = v89;
  v96 = *(int *)(v93 + 48);
  v97 = v138;
  v155(v138, v95, v21);
  *(_DWORD *)(v97 + v96) = v89;
  v98 = v163;
  v99 = swift_isUniquelyReferenced_nonNull_native();
  v158 = (_QWORD *)v98;
  v163 = 0x8000000000000000;
  v155 = v86;
  v101 = sub_249F8B27C((uint64_t)v86);
  v102 = *(_QWORD *)(v98 + 16);
  v103 = (v100 & 1) == 0;
  v104 = v102 + v103;
  if (__OFADD__(v102, v103))
  {
    __break(1u);
    goto LABEL_89;
  }
  v105 = v100;
  v22 = v156;
  if (*(_QWORD *)(v98 + 24) >= v104)
  {
    if ((v99 & 1) != 0)
    {
      a2 = v101;
      if ((v100 & 1) == 0)
        goto LABEL_80;
    }
    else
    {
      sub_249FC23FC();
      a2 = v101;
      if ((v105 & 1) == 0)
        goto LABEL_80;
    }
    goto LABEL_66;
  }
  sub_249FBA8CC(v104, v99);
  v106 = sub_249F8B27C((uint64_t)v155);
  if ((v105 & 1) != (v107 & 1))
    goto LABEL_89;
  a2 = v106;
  if ((v105 & 1) != 0)
  {
LABEL_66:
    v122 = *(_QWORD *)(v158[7] + 8 * a2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v122 = sub_249F89FD4(0, *(_QWORD *)(v122 + 16) + 1, 1, v122, &qword_2578FF8E8, &qword_2578FF8C8);
    v124 = *(_QWORD *)(v122 + 16);
    v123 = *(_QWORD *)(v122 + 24);
    if (v124 >= v123 >> 1)
      v122 = sub_249F89FD4(v123 > 1, v124 + 1, 1, v122, &qword_2578FF8E8, &qword_2578FF8C8);
    *(_QWORD *)(v122 + 16) = v124 + 1;
    sub_249F98C10(v138, v122+ ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80))+ *(_QWORD *)(v137 + 72) * v124, &qword_2578FF8C8);
    v125 = (unint64_t)v158;
    *(_QWORD *)(v158[7] + 8 * a2) = v122;
    v163 = v125;
    sub_249F990A0((uint64_t)v143, &qword_2578FF8C8);
    goto LABEL_35;
  }
LABEL_80:
  __break(1u);
LABEL_81:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = v134;
LABEL_82:
  v127 = swift_bridgeObjectRetain();
  v128 = sub_249F77EF8(v127);
  swift_bridgeObjectRelease();
  v162 = v128;
  swift_bridgeObjectRetain();
  sub_249F89568(&v162, (uint64_t (*)(uint64_t))sub_24A012F74, sub_249F8F748);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    *v139 = v162;
    return swift_bridgeObjectRelease();
  }
LABEL_90:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_249F841CC(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  float v33;
  float v34;
  uint64_t *v35;
  char v36;
  float v37;
  float v38;
  uint64_t *v39;
  char v40;
  _QWORD v41[2];
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a6;
  v46 = a7;
  v42 = a4;
  v43 = a5;
  v44 = a1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v41 - v18;
  v20 = sub_24A01EBA4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend(a2, sel_observation);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    return sub_249F990A0((uint64_t)v19, &qword_2544CAD70);
  }
  v25 = v24;
  v41[1] = a8;
  v26 = objc_msgSend(v24, sel_asset);

  if (v26)
  {
    sub_24A01EB98();

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v27(v17, 0, 1, v20);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v27(v17, 1, 1, v20);
  }
  sub_249F98C10((uint64_t)v17, (uint64_t)v19, &qword_2544CAD70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    return sub_249F990A0((uint64_t)v19, &qword_2544CAD70);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  v29 = objc_msgSend(a2, sel_partner);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = *a3;
  *a3 = 0x8000000000000000;
  v31 = (uint64_t)v29;
  v32 = v44;
  sub_249FBFA34(v31, v44, isUniquelyReferenced_nonNull_native);
  *a3 = v47;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_similarity);
  v34 = v33;
  v35 = v42;
  v36 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *v35;
  *v35 = 0x8000000000000000;
  sub_249FBFB60(v32, v36, v34);
  *v35 = v47;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_diversity);
  v38 = v37;
  v39 = v43;
  v40 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *v39;
  *v39 = 0x8000000000000000;
  sub_249FBFB60(v32, v40, v38);
  *v39 = v47;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v14, v23, v20);
  v27(v14, 0, 1, v20);
  sub_249FA4338((uint64_t)v14, v32);
  sub_249F83038((uint64_t)v23, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

uint64_t sub_249F8450C(uint64_t a1, void *a2, void (*a3)(char *, char *, uint64_t), unint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t result;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  unint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  unint64_t v70;

  v65 = a6;
  v67 = a5;
  v68 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v66 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v61 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (char *)&v61 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v61 - v19;
  v21 = sub_24A01EBA4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(a2, sel_observation);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    return sub_249F990A0((uint64_t)v20, &qword_2544CAD70);
  }
  v26 = v25;
  v63 = a4;
  v27 = a2;
  v28 = objc_msgSend(v25, sel_asset);

  if (v28)
  {
    sub_24A01EB98();

    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v18, v29, 1, v21);
  sub_249F98C10((uint64_t)v18, (uint64_t)v20, &qword_2544CAD70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    return sub_249F990A0((uint64_t)v20, &qword_2544CAD70);
  v31 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v31(v24, v20, v21);
  if ((sub_24A007810((uint64_t)v24, (uint64_t)v68) & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v32 = objc_msgSend(v27, sel_label);
  v33 = *(int *)(v8 + 48);
  v34 = v69;
  v68 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v68(v69, v24, v21);
  v62 = v27;
  objc_msgSend(v27, sel_diversity);
  v36 = v35;
  *(_DWORD *)&v34[v33] = v35;
  if (!*(_QWORD *)(*v63 + 16) || (sub_249F8B27C((uint64_t)v32), (v37 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8E8);
    v52 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_24A0208B0;
    v54 = v53 + v52;
    v55 = *(int *)(v8 + 48);
    v42 = (uint64_t)v69;
    v68((char *)v54, v69, v21);
    *(_DWORD *)(v54 + v55) = v36;
    v56 = v63;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70 = *v56;
    *v56 = 0x8000000000000000;
    sub_249FBFC84(v53, (uint64_t)v32, isUniquelyReferenced_nonNull_native);
    *v56 = v70;
    swift_bridgeObjectRelease();
LABEL_23:
    sub_249F83038((uint64_t)v24, v62);
    sub_249F990A0(v42, &qword_2578FF8C8);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  v38 = *(int *)(v8 + 48);
  v68(v13, v69, v21);
  *(_DWORD *)&v13[v38] = v36;
  v39 = *(int *)(v8 + 48);
  v40 = (uint64_t)v64;
  v31(v64, v13, v21);
  *(_DWORD *)(v40 + v39) = v36;
  v41 = v63;
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v70 = *v41;
  v43 = v70;
  *v41 = 0x8000000000000000;
  v45 = sub_249F8B27C((uint64_t)v32);
  v46 = *(_QWORD *)(v43 + 16);
  v47 = (v44 & 1) == 0;
  v48 = v46 + v47;
  if (__OFADD__(v46, v47))
  {
    __break(1u);
    goto LABEL_26;
  }
  v49 = v44;
  if (*(_QWORD *)(v43 + 24) >= v48)
  {
    if ((v42 & 1) != 0)
    {
      v42 = (uint64_t)v69;
      if ((v44 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      sub_249FC23FC();
      v42 = (uint64_t)v69;
      if ((v49 & 1) != 0)
        goto LABEL_19;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_249FBA8CC(v48, v42);
  v50 = sub_249F8B27C((uint64_t)v32);
  if ((v49 & 1) == (v51 & 1))
  {
    v45 = v50;
    v42 = (uint64_t)v69;
    if ((v49 & 1) == 0)
      goto LABEL_28;
LABEL_19:
    v43 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v45);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_20:
      v59 = *(_QWORD *)(v43 + 16);
      v58 = *(_QWORD *)(v43 + 24);
      if (v59 >= v58 >> 1)
        v43 = sub_249F89FD4(v58 > 1, v59 + 1, 1, v43, &qword_2578FF8E8, &qword_2578FF8C8);
      *(_QWORD *)(v43 + 16) = v59 + 1;
      sub_249F98C10((uint64_t)v64, v43+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v59, &qword_2578FF8C8);
      v60 = v70;
      *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v45) = v43;
      *v63 = v60;
      goto LABEL_23;
    }
LABEL_26:
    v43 = sub_249F89FD4(0, *(_QWORD *)(v43 + 16) + 1, 1, v43, &qword_2578FF8E8, &qword_2578FF8C8);
    goto LABEL_20;
  }
LABEL_29:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249F84A70@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  _QWORD v27[2];
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v27 - v9;
  v11 = sub_24A01EBA4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *a1;
  swift_bridgeObjectRetain();
  sub_249F895E0(&v32);
  if (v2)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v15 = v32;
    v16 = v32[2];
    if (v16)
    {
      v27[1] = 0;
      v28 = a2;
      v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v17 = v15;
      sub_249F8CC04(0, v16, 0);
      v18 = *(unsigned __int8 *)(v6 + 80);
      v27[0] = v17;
      v19 = (uint64_t)v17 + ((v18 + 32) & ~v18);
      v29 = *(_QWORD *)(v6 + 72);
      v30 = v14;
      do
      {
        sub_249F9905C(v19, (uint64_t)v10, &qword_2578FF8C8);
        v20 = v31;
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v10, v11);
        v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v21(v14, v20, v11);
        sub_249F990A0((uint64_t)v10, &qword_2578FF8C8);
        v22 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249F8CC04(0, v22[2] + 1, 1);
          v22 = v32;
        }
        v24 = v22[2];
        v23 = v22[3];
        if (v24 >= v23 >> 1)
        {
          sub_249F8CC04(v23 > 1, v24 + 1, 1);
          v22 = v32;
        }
        v22[2] = v24 + 1;
        v25 = (unint64_t)v22
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(_QWORD *)(v12 + 72) * v24;
        v14 = v30;
        v21((char *)v25, v30, v11);
        v32 = v22;
        v19 += v29;
        --v16;
      }
      while (v16);
      result = swift_release();
      a2 = v28;
    }
    else
    {
      result = swift_release();
      v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    *a2 = v22;
  }
  return result;
}

uint64_t sub_249F84CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  swift_beginAccess();
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v8)
  {
    v9 = 1;
  }
  else
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(*(_QWORD *)a3 + 16) != 0;
  }
  swift_beginAccess();
  v10 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + 24) = v8;
  return swift_bridgeObjectRetain();
}

float VUGallery.AccuracyMetrics.overallPrecision.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

float VUGallery.AccuracyMetrics.overallRecall.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

uint64_t VUGallery.AccuracyMetrics.entityPrecision.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VUGallery.AccuracyMetrics.entityRecall.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VUGallery.AccuracyMetrics.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_249F84DC8()
{
  return sub_24A01F138();
}

uint64_t sub_249F84E2C()
{
  return sub_24A01F138();
}

uint64_t sub_249F84E94@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v41;
  unint64_t i;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  unint64_t v67;
  int64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  unint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v95 = MEMORY[0x24BEE4B00];
  v94 = MEMORY[0x24BEE4B00];
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208C0;
  v11 = 0x63F0200u >> (8 * a2);
  v12 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v10 + 64) = v12;
  v13 = MEMORY[0x24BEE3F30];
  *(_BYTE *)(v10 + 32) = v11;
  v14 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 104) = v14;
  *(_WORD *)(v10 + 72) = 0;
  swift_retain();
  v15 = (void *)sub_24A01F09C();
  v16 = *(id *)(v9 + 16);
  sub_24A01F180();
  if (v6)
  {

    swift_arrayDestroy();
    swift_release();
  }
  else
  {
    swift_release();

  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_24A00B4B0(v11, 0x100000000, v95, v94, 1, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_249FA49A4(v18);
  v20 = swift_bridgeObjectRetain();
  v21 = sub_249FA49A4(v20);
  v22 = sub_249FF36D8(v21, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v23 = sub_249F933D4(v22, v17);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  v24 = sub_249F933D4(v22, a3);
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
    sub_249F9BE6C(v23, v24);
  else
    sub_249F9B64C(v23, v24);
  v27 = v25;
  v28 = v26;
  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v79 = (_QWORD *)MEMORY[0x24BEE4B00];
    v80 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_68:
    swift_bridgeObjectRelease();
    v81 = *(_QWORD *)(v22 + 16);
    swift_release();
    *(_DWORD *)a6 = v27;
    *(_DWORD *)(a6 + 4) = v28;
    *(_QWORD *)(a6 + 8) = v80;
    *(_QWORD *)(a6 + 16) = v79;
    *(_QWORD *)(a6 + 24) = v81;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v83 = v22;
  v29 = swift_bridgeObjectRetain();
  v30 = sub_249FA4B18(v29);
  v31 = 0;
  v32 = *(_QWORD *)(v30 + 56);
  v87 = v30 + 56;
  v33 = 1 << *(_BYTE *)(v30 + 32);
  v34 = -1;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  v35 = v34 & v32;
  v88 = (unint64_t)(v33 + 63) >> 6;
  v89 = v30;
  v85 = (_QWORD *)MEMORY[0x24BEE4B00];
  v86 = (_QWORD *)MEMORY[0x24BEE4B00];
  if ((v34 & v32) != 0)
    goto LABEL_18;
LABEL_40:
  v66 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    if (v66 < v88)
    {
      v67 = *(_QWORD *)(v87 + 8 * v66);
      ++v31;
      if (v67)
        goto LABEL_53;
      v31 = v66 + 1;
      if (v66 + 1 < v88)
      {
        v67 = *(_QWORD *)(v87 + 8 * v31);
        if (v67)
          goto LABEL_53;
        v31 = v66 + 2;
        if (v66 + 2 < v88)
        {
          v67 = *(_QWORD *)(v87 + 8 * v31);
          if (!v67)
          {
            v68 = v66 + 3;
            if (v68 < v88)
            {
              v67 = *(_QWORD *)(v87 + 8 * v68);
              if (v67)
              {
                v31 = v68;
                goto LABEL_53;
              }
              while (1)
              {
                v31 = v68 + 1;
                if (__OFADD__(v68, 1))
                  goto LABEL_70;
                if (v31 >= v88)
                  goto LABEL_67;
                v67 = *(_QWORD *)(v87 + 8 * v31);
                ++v68;
                if (v67)
                  goto LABEL_53;
              }
            }
            goto LABEL_67;
          }
LABEL_53:
          v35 = (v67 - 1) & v67;
          for (i = __clz(__rbit64(v67)) + (v31 << 6); ; i = v41 | (v31 << 6))
          {
            v69 = *(_QWORD *)(*(_QWORD *)(v89 + 48) + 8 * i);
            v70 = *(_QWORD *)(v24 + 16);
            if (v70)
            {
              v91 = v35;
              v71 = v23;
              v93 = MEMORY[0x24BEE4AF8];
              sub_249F8C9C8(0, v70, 0);
              v72 = v93;
              v73 = *(_QWORD *)(v93 + 16);
              v74 = (uint64_t *)(v24 + 32);
              do
              {
                v76 = *v74++;
                v75 = v76;
                if (v76 == v69)
                  v77 = v75;
                else
                  v77 = -1;
                v78 = *(_QWORD *)(v93 + 24);
                if (v73 >= v78 >> 1)
                  sub_249F8C9C8(v78 > 1, v73 + 1, 1);
                *(_QWORD *)(v93 + 16) = v73 + 1;
                *(_QWORD *)(v93 + 8 * v73++ + 32) = v77;
                --v70;
              }
              while (v70);
              v23 = v71;
              v35 = v91;
              if ((a4 & 1) != 0)
              {
LABEL_12:
                sub_249F9BE6C(v23, v72);
                goto LABEL_13;
              }
            }
            else
            {
              v72 = MEMORY[0x24BEE4AF8];
              if ((a4 & 1) != 0)
                goto LABEL_12;
            }
            sub_249F9B64C(v23, v72);
LABEL_13:
            v38 = v36;
            v39 = v37;
            swift_bridgeObjectRelease();
            if ((~v38 & 0x7F800000) != 0 || (v38 & 0x7FFFFF) == 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v45 = sub_249F8B27C(v69);
              v46 = v86[2];
              v47 = (v44 & 1) == 0;
              v48 = v46 + v47;
              if (__OFADD__(v46, v47))
                goto LABEL_71;
              v49 = v44;
              if (v86[3] >= v48)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  sub_249FC226C();
              }
              else
              {
                sub_249FBA62C(v48, isUniquelyReferenced_nonNull_native);
                v50 = sub_249F8B27C(v69);
                if ((v49 & 1) != (v51 & 1))
                  goto LABEL_75;
                v45 = v50;
              }
              if ((v49 & 1) != 0)
              {
                *(_DWORD *)(v86[7] + 4 * v45) = v38;
              }
              else
              {
                v86[(v45 >> 6) + 8] |= 1 << v45;
                *(_QWORD *)(v86[6] + 8 * v45) = v69;
                *(_DWORD *)(v86[7] + 4 * v45) = v38;
                v52 = v86[2];
                v53 = __OFADD__(v52, 1);
                v54 = v52 + 1;
                if (v53)
                  goto LABEL_73;
                v86[2] = v54;
              }
              swift_bridgeObjectRelease();
              v55 = swift_isUniquelyReferenced_nonNull_native();
              v57 = sub_249F8B27C(v69);
              v58 = v85[2];
              v59 = (v56 & 1) == 0;
              v60 = v58 + v59;
              if (__OFADD__(v58, v59))
                goto LABEL_72;
              v61 = v56;
              if (v85[3] >= v60)
              {
                if ((v55 & 1) == 0)
                  sub_249FC226C();
              }
              else
              {
                sub_249FBA62C(v60, v55);
                v62 = sub_249F8B27C(v69);
                if ((v61 & 1) != (v63 & 1))
                  goto LABEL_75;
                v57 = v62;
              }
              if ((v61 & 1) != 0)
              {
                *(_DWORD *)(v85[7] + 4 * v57) = v39;
              }
              else
              {
                v85[(v57 >> 6) + 8] |= 1 << v57;
                *(_QWORD *)(v85[6] + 8 * v57) = v69;
                *(_DWORD *)(v85[7] + 4 * v57) = v39;
                v64 = v85[2];
                v53 = __OFADD__(v64, 1);
                v65 = v64 + 1;
                if (v53)
                  goto LABEL_74;
                v85[2] = v65;
              }
              swift_bridgeObjectRelease();
              if (!v35)
                goto LABEL_40;
            }
            else if (!v35)
            {
              goto LABEL_40;
            }
LABEL_18:
            v41 = __clz(__rbit64(v35));
            v35 &= v35 - 1;
          }
        }
      }
    }
LABEL_67:
    swift_bridgeObjectRelease();
    swift_release();
    v22 = v83;
    v79 = v85;
    v80 = v86;
    goto LABEL_68;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249F8567C(uint64_t a1, id a2, uint64_t *a3, uint64_t *a4)
{
  id v8;
  char isUniquelyReferenced_nonNull_native;
  float v10;
  float v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  v8 = objc_msgSend(a2, sel_partner);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *a3;
  *a3 = 0x8000000000000000;
  sub_249FBFA34((uint64_t)v8, a1, isUniquelyReferenced_nonNull_native);
  *a3 = v14;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_similarity);
  v11 = v10;
  v12 = swift_isUniquelyReferenced_nonNull_native();
  v15 = *a4;
  *a4 = 0x8000000000000000;
  sub_249FBFB60(a1, v12, v11);
  *a4 = v15;
  return swift_bridgeObjectRelease();
}

void sub_249F85764()
{
  uint64_t v0;
  NSString *v1;
  Class v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;

  v1 = (NSString *)sub_24A01EE44();
  v2 = NSClassFromString(v1);

  if (!v2)
  {
    v3 = (void *)sub_24A01EE44();
    v16 = sub_249F93F14;
    v17 = v0;
    v4 = MEMORY[0x24BDAC760];
    v12 = MEMORY[0x24BDAC760];
    v13 = 1107296256;
    v14 = sub_249F78200;
    v15 = &block_descriptor_11;
    v5 = _Block_copy(&v12);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v5);

    v6 = (void *)sub_24A01EE44();
    v16 = sub_249F93F1C;
    v17 = v0;
    v12 = v4;
    v13 = 1107296256;
    v14 = sub_249F78200;
    v15 = &block_descriptor_14;
    v7 = _Block_copy(&v12);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v7);

    v8 = sub_249F87230();
    if (*(_QWORD *)(v8 + 16))
    {
      v9 = (void *)sub_24A01EE44();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v8;
      v16 = sub_249F93F44;
      v17 = v10;
      v12 = v4;
      v13 = 1107296256;
      v14 = sub_249F78200;
      v15 = &block_descriptor_20;
      v11 = _Block_copy(&v12);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v11);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_249F85974()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8B0);
  sub_24A01F138();
  return v1;
}

unint64_t sub_249F859D0@<X0>(unint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t inited;
  unint64_t result;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  swift_retain();
  v1 = (void *)sub_24A01F09C();
  sub_249FCBC58(v1, 0, 1);
  swift_release();

  swift_retain();
  v2 = (void *)sub_24A01F09C();
  sub_249FCBC58(v2, 0, 1);
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A0208B0;
  v4 = MEMORY[0x24BEE3F30];
  v5 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v3 + 64) = v5;
  *(_WORD *)(v3 + 32) = 2;
  swift_retain();
  v6 = (void *)sub_24A01F09C();
  sub_249FCBC58(v6, 0, 1);
  swift_release();

  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v7 + 56) = v4;
  *(_QWORD *)(v7 + 64) = v5;
  *(_WORD *)(v7 + 32) = 63;
  swift_retain();
  v8 = (void *)sub_24A01F09C();
  sub_249FCBC58(v8, 0, 1);
  swift_release();

  swift_retain();
  sub_249FCC124(2u);
  swift_release();
  swift_retain();
  sub_249FCC124(0x3Fu);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v5;
  *(_WORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 96) = v4;
  *(_QWORD *)(v9 + 104) = v5;
  *(_WORD *)(v9 + 72) = 2;
  swift_retain();
  v10 = (void *)sub_24A01F09C();
  sub_249FCCB28(v10);
  swift_release();

  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v11 + 56) = v4;
  *(_QWORD *)(v11 + 64) = v5;
  *(_WORD *)(v11 + 32) = 1;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v5;
  v12 = v5;
  *(_WORD *)(v11 + 72) = 2;
  swift_retain();
  v13 = (void *)sub_24A01F09C();
  sub_249FCCB28(v13);
  swift_release();

  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A0208C0;
  v15 = v4;
  *(_QWORD *)(v14 + 56) = v4;
  *(_QWORD *)(v14 + 64) = v12;
  *(_WORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 96) = v4;
  *(_QWORD *)(v14 + 104) = v12;
  *(_WORD *)(v14 + 72) = 63;
  swift_retain();
  v16 = (void *)sub_24A01F09C();
  sub_249FCCB28(v16);
  swift_release();

  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v17 + 56) = v15;
  *(_QWORD *)(v17 + 64) = v12;
  *(_WORD *)(v17 + 32) = 1;
  *(_QWORD *)(v17 + 96) = v15;
  *(_QWORD *)(v17 + 104) = v12;
  *(_WORD *)(v17 + 72) = 63;
  swift_retain();
  v18 = (void *)sub_24A01F09C();
  sub_249FCCB28(v18);
  swift_release();

  swift_retain();
  sub_249FCD52C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A020900;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x800000024A022980;
  *(_QWORD *)(inited + 48) = sub_24A01F048();
  *(_QWORD *)(inited + 56) = 0xD000000000000016;
  *(_QWORD *)(inited + 64) = 0x800000024A0229A0;
  *(_QWORD *)(inited + 72) = sub_24A01F048();
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x800000024A0229C0;
  *(_QWORD *)(inited + 96) = sub_24A01F048();
  *(_QWORD *)(inited + 104) = 0xD000000000000010;
  *(_QWORD *)(inited + 112) = 0x800000024A0229E0;
  *(_QWORD *)(inited + 120) = sub_24A01F048();
  *(_QWORD *)(inited + 128) = 0x655F6E6F73726570;
  *(_QWORD *)(inited + 136) = 0xEF7365697469746ELL;
  *(_QWORD *)(inited + 144) = sub_24A01F048();
  strcpy((char *)(inited + 152), "pet_entities");
  *(_BYTE *)(inited + 165) = 0;
  *(_WORD *)(inited + 166) = -5120;
  *(_QWORD *)(inited + 168) = sub_24A01F048();
  *(_QWORD *)(inited + 176) = 0xD000000000000015;
  *(_QWORD *)(inited + 184) = 0x800000024A022A00;
  *(_QWORD *)(inited + 192) = sub_24A01F048();
  *(_QWORD *)(inited + 200) = 0xD000000000000014;
  *(_QWORD *)(inited + 208) = 0x800000024A022A20;
  *(_QWORD *)(inited + 216) = sub_24A01F048();
  *(_QWORD *)(inited + 224) = 0xD000000000000012;
  *(_QWORD *)(inited + 232) = 0x800000024A022A40;
  *(_QWORD *)(inited + 240) = sub_24A01F048();
  *(_QWORD *)(inited + 248) = 0xD000000000000011;
  *(_QWORD *)(inited + 256) = 0x800000024A022A60;
  *(_QWORD *)(inited + 264) = sub_24A01F048();
  *(_QWORD *)(inited + 272) = 0xD000000000000014;
  *(_QWORD *)(inited + 280) = 0x800000024A022A80;
  *(_QWORD *)(inited + 288) = sub_24A01F048();
  result = sub_249F76654(inited, &qword_2544CAC60);
  *a1 = result;
  return result;
}

uint64_t sub_249F86068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t result;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  _QWORD aBlock[7];
  uint64_t v55;

  v1 = v0;
  v51 = type metadata accessor for VUGallery.TagView(0);
  v2 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BEE4B00];
  v5 = *(NSObject **)(v0 + 24);
  v52 = v0;
  v53 = 0;
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  sub_24A01F138();
  v50 = 0;
  v6 = aBlock[0];
  v7 = *(_QWORD *)(aBlock[0] + 16);
  v47 = v5;
  v48 = v0;
  v46 = v2;
  if (v7)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8C9C8(0, v7, 0);
    v8 = *(unsigned __int8 *)(v2 + 80);
    v45 = v6;
    v9 = v6 + ((v8 + 32) & ~v8);
    v10 = *(_QWORD *)(v2 + 72);
    v11 = aBlock[0];
    do
    {
      sub_249F9896C(v9, (uint64_t)v4, type metadata accessor for VUGallery.TagView);
      v12 = *(_QWORD *)&v4[*(int *)(v51 + 28)];
      sub_249F989C0((uint64_t)v4, type metadata accessor for VUGallery.TagView);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9C8(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = aBlock[0];
      }
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_249F8C9C8(v13 > 1, v14 + 1, 1);
        v11 = aBlock[0];
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      *(_QWORD *)(v11 + 8 * v14 + 32) = v12;
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v5 = v47;
    v1 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  LOBYTE(aBlock[0]) = 2;
  v45 = sub_249F78948(0);
  LOBYTE(aBlock[0]) = 1;
  v44 = sub_249F78948(0);
  LOBYTE(aBlock[0]) = 2;
  v43 = sub_249F78948(2);
  LOBYTE(aBlock[0]) = 1;
  v42 = sub_249F78948(2);
  MEMORY[0x24BDAC7A8](v42);
  v41[-2] = v1;
  LOWORD(v41[-1]) = 1;
  v15 = v50;
  sub_24A01F138();
  v41[1] = v15;
  v16 = aBlock[0];
  v17 = *(_QWORD *)(aBlock[0] + 16);
  if (v17)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8C9C8(0, v17, 0);
    v18 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    v41[0] = v16;
    v19 = v16 + v18;
    v20 = *(_QWORD *)(v46 + 72);
    v21 = aBlock[0];
    v50 = v20;
    do
    {
      sub_249F9896C(v19, (uint64_t)v4, type metadata accessor for VUGallery.TagView);
      v22 = *(_QWORD *)&v4[*(int *)(v51 + 28)];
      sub_249F989C0((uint64_t)v4, type metadata accessor for VUGallery.TagView);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9C8(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v20 = v50;
        v21 = aBlock[0];
      }
      v24 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_249F8C9C8(v23 > 1, v24 + 1, 1);
        v20 = v50;
        v21 = aBlock[0];
      }
      *(_QWORD *)(v21 + 16) = v24 + 1;
      *(_QWORD *)(v21 + 8 * v24 + 32) = v22;
      v19 += v20;
      --v17;
    }
    while (v17);
    v25 = swift_bridgeObjectRelease();
    v5 = v47;
    v1 = v48;
  }
  else
  {
    v25 = swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x24BDAC7A8](v25);
  v41[-2] = v1;
  LOWORD(v41[-1]) = 2;
  sub_24A01F138();
  v26 = aBlock[0];
  v27 = *(_QWORD *)(aBlock[0] + 16);
  if (v27)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8C9C8(0, v27, 0);
    v28 = v26 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
    v29 = *(_QWORD *)(v46 + 72);
    v49 = v26;
    v50 = v29;
    v30 = aBlock[0];
    do
    {
      sub_249F9896C(v28, (uint64_t)v4, type metadata accessor for VUGallery.TagView);
      v31 = *(_QWORD *)&v4[*(int *)(v51 + 28)];
      sub_249F989C0((uint64_t)v4, type metadata accessor for VUGallery.TagView);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8C9C8(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = aBlock[0];
      }
      v33 = *(_QWORD *)(v30 + 16);
      v32 = *(_QWORD *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_249F8C9C8(v32 > 1, v33 + 1, 1);
        v30 = aBlock[0];
      }
      *(_QWORD *)(v30 + 16) = v33 + 1;
      *(_QWORD *)(v30 + 8 * v33 + 32) = v31;
      v28 += v50;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v5 = v47;
    v1 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x24BEE4AF8];
  }
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v1;
  v34[3] = v11;
  v34[4] = v44;
  v34[5] = v21;
  v35 = v45;
  v34[6] = v30;
  v34[7] = v35;
  v36 = v42;
  v34[8] = v43;
  v34[9] = v36;
  v34[10] = &v55;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_249F988E4;
  *(_QWORD *)(v37 + 24) = v34;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_62;
  v38 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v38);
  _Block_release(v38);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v38 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v40 = v55;
    swift_release();
    return v40;
  }
  return result;
}

uint64_t sub_249F866A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A0208C0;
  v10 = MEMORY[0x24BEE3F30];
  v11 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v9 + 64) = v11;
  *(_WORD *)(v9 + 32) = 2;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_WORD *)(v9 + 72) = 1;
  swift_retain();
  v12 = (void *)sub_24A01F09C();
  sub_249FCBC58(v12, 0, 1);
  swift_release();

  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v13 + 56) = v10;
  *(_QWORD *)(v13 + 64) = v11;
  *(_WORD *)(v13 + 32) = 2;
  *(_QWORD *)(v13 + 96) = v10;
  *(_QWORD *)(v13 + 104) = v11;
  *(_WORD *)(v13 + 72) = 2;
  swift_retain();
  v14 = (void *)sub_24A01F09C();
  sub_249FCBC58(v14, 0, 1);
  swift_release();

  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v15 + 56) = v10;
  *(_QWORD *)(v15 + 64) = v11;
  *(_WORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 96) = v10;
  *(_QWORD *)(v15 + 104) = v11;
  *(_WORD *)(v15 + 72) = 2;
  swift_retain();
  v16 = (void *)sub_24A01F09C();
  sub_249FCCB28(v16);
  swift_release();

  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v17 + 56) = v10;
  *(_QWORD *)(v17 + 64) = v11;
  *(_WORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 96) = v10;
  *(_QWORD *)(v17 + 104) = v11;
  *(_WORD *)(v17 + 72) = 1;
  swift_retain();
  v18 = (void *)sub_24A01F09C();
  sub_249FCCB28(v18);
  swift_release();

  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v19 + 56) = v10;
  *(_QWORD *)(v19 + 64) = v11;
  *(_WORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 96) = v10;
  *(_QWORD *)(v19 + 104) = v11;
  *(_WORD *)(v19 + 72) = 0;
  swift_retain();
  v20 = (void *)sub_24A01F09C();
  sub_249FCCB28(v20);
  swift_release();

  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v21 + 56) = v10;
  *(_QWORD *)(v21 + 64) = v11;
  *(_WORD *)(v21 + 32) = 2;
  *(_QWORD *)(v21 + 96) = v10;
  *(_QWORD *)(v21 + 104) = v11;
  *(_WORD *)(v21 + 72) = 1;
  swift_retain();
  v22 = (void *)sub_24A01F09C();
  sub_249FCBC58(v22, 0, 1);
  swift_release();

  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v23 + 56) = v10;
  *(_QWORD *)(v23 + 64) = v11;
  *(_WORD *)(v23 + 32) = 2;
  *(_QWORD *)(v23 + 96) = v10;
  *(_QWORD *)(v23 + 104) = v11;
  *(_WORD *)(v23 + 72) = 2;
  swift_retain();
  v24 = (void *)sub_24A01F09C();
  sub_249FCBC58(v24, 0, 1);
  swift_release();

  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v25 + 56) = v10;
  *(_QWORD *)(v25 + 64) = v11;
  *(_WORD *)(v25 + 32) = 2;
  *(_QWORD *)(v25 + 96) = v10;
  *(_QWORD *)(v25 + 104) = v11;
  *(_WORD *)(v25 + 72) = 0;
  swift_retain();
  v26 = (void *)sub_24A01F09C();
  sub_249FCBC58(v26, 0, 1);
  swift_release();

  v27 = swift_bridgeObjectRetain();
  v28 = sub_249FC6B8C(v27);
  swift_bridgeObjectRelease();
  v29 = swift_bridgeObjectRetain();
  v30 = sub_249FC6B8C(v29);
  swift_bridgeObjectRelease();
  sub_249FF36D8(v30, v28);
  swift_bridgeObjectRelease();
  swift_release();
  v31 = swift_bridgeObjectRetain();
  v32 = sub_249FC6B8C(v31);
  swift_bridgeObjectRelease();
  v33 = swift_bridgeObjectRetain();
  v34 = sub_249FC6B8C(v33);
  swift_bridgeObjectRelease();
  sub_249FF36D8(v34, v32);
  swift_bridgeObjectRelease();
  swift_release();
  v35 = swift_bridgeObjectRetain();
  v36 = sub_249FC6B8C(v35);
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRetain();
  v38 = sub_249FC6B8C(v37);
  swift_bridgeObjectRelease();
  sub_249FF36D8(v38, v36);
  swift_bridgeObjectRelease();
  swift_release();
  v39 = swift_bridgeObjectRetain();
  v40 = sub_249FC6B8C(v39);
  swift_bridgeObjectRelease();
  v41 = swift_bridgeObjectRetain();
  v42 = sub_249FC6B8C(v41);
  swift_bridgeObjectRelease();
  sub_249FF36D8(v42, v40);
  swift_bridgeObjectRelease();
  swift_release();
  v43 = swift_bridgeObjectRetain();
  v44 = sub_249FC6B8C(v43);
  swift_bridgeObjectRelease();
  v45 = swift_bridgeObjectRetain();
  v46 = sub_249FC6B8C(v45);
  swift_bridgeObjectRelease();
  sub_249FF36D8(v46, v44);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_249FCD13C(3);
  swift_release();
  swift_retain();
  sub_249FCD13C(0);
  swift_release();
  swift_retain();
  sub_249FCD13C(2);
  swift_release();
  swift_retain();
  sub_249FCD13C(1);
  swift_release();
  swift_retain();
  v47 = sub_249FCD90C(0, 0, 0);
  sub_249FCE074(3, v47);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v48 = sub_249FCD90C(0, 0, 0);
  sub_249FCE074(0, v48);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v49 = sub_249FCD90C(2, 0, 0);
  sub_249FCE074(2, v49);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v50 = sub_249FCD90C(1, 0, 0);
  sub_249FCE074(1, v50);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A020910;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x800000024A0222F0;
  *(_QWORD *)(inited + 48) = sub_24A01F048();
  *(_QWORD *)(inited + 56) = 0xD000000000000015;
  *(_QWORD *)(inited + 64) = 0x800000024A022310;
  *(_QWORD *)(inited + 72) = sub_24A01F048();
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x800000024A022330;
  *(_QWORD *)(inited + 96) = sub_24A01F048();
  *(_QWORD *)(inited + 104) = 0xD000000000000016;
  *(_QWORD *)(inited + 112) = 0x800000024A022350;
  *(_QWORD *)(inited + 120) = sub_24A01F048();
  *(_QWORD *)(inited + 128) = 0xD000000000000015;
  *(_QWORD *)(inited + 136) = 0x800000024A022370;
  *(_QWORD *)(inited + 144) = sub_24A01F048();
  *(_QWORD *)(inited + 152) = 0xD000000000000029;
  *(_QWORD *)(inited + 160) = 0x800000024A022390;
  *(_QWORD *)(inited + 168) = sub_24A01F048();
  *(_QWORD *)(inited + 176) = 0xD00000000000002ALL;
  *(_QWORD *)(inited + 184) = 0x800000024A0223C0;
  *(_QWORD *)(inited + 192) = sub_24A01F048();
  *(_QWORD *)(inited + 200) = 0xD000000000000029;
  *(_QWORD *)(inited + 208) = 0x800000024A0223F0;
  *(_QWORD *)(inited + 216) = sub_24A01F048();
  *(_QWORD *)(inited + 224) = 0xD000000000000028;
  *(_QWORD *)(inited + 232) = 0x800000024A022420;
  *(_QWORD *)(inited + 240) = sub_24A01F048();
  *(_QWORD *)(inited + 248) = 0xD00000000000002ALL;
  *(_QWORD *)(inited + 256) = 0x800000024A022450;
  *(_QWORD *)(inited + 264) = sub_24A01F048();
  *(_QWORD *)(inited + 272) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 280) = 0x800000024A022480;
  *(_QWORD *)(inited + 288) = sub_24A01F048();
  *(_QWORD *)(inited + 296) = 0xD00000000000001FLL;
  *(_QWORD *)(inited + 304) = 0x800000024A0224A0;
  *(_QWORD *)(inited + 312) = sub_24A01F048();
  *(_QWORD *)(inited + 320) = 0xD000000000000029;
  *(_QWORD *)(inited + 328) = 0x800000024A0224C0;
  *(_QWORD *)(inited + 336) = sub_24A01F048();
  *(_QWORD *)(inited + 344) = 0xD000000000000021;
  *(_QWORD *)(inited + 352) = 0x800000024A0224F0;
  *(_QWORD *)(inited + 360) = sub_24A01F048();
  *(_QWORD *)(inited + 368) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 376) = 0x800000024A022520;
  *(_QWORD *)(inited + 384) = sub_24A01F048();
  *(_QWORD *)(inited + 392) = 0xD00000000000001FLL;
  *(_QWORD *)(inited + 400) = 0x800000024A022540;
  *(_QWORD *)(inited + 408) = sub_24A01F048();
  *(_QWORD *)(inited + 416) = 0xD00000000000001ELL;
  *(_QWORD *)(inited + 424) = 0x800000024A022560;
  *(_QWORD *)(inited + 432) = sub_24A01F048();
  *(_QWORD *)(inited + 440) = 0xD000000000000038;
  *(_QWORD *)(inited + 448) = 0x800000024A022580;
  *(_QWORD *)(inited + 456) = sub_24A01F048();
  *(_QWORD *)(inited + 464) = 0xD000000000000034;
  *(_QWORD *)(inited + 472) = 0x800000024A0225C0;
  *(_QWORD *)(inited + 480) = sub_24A01F048();
  *(_QWORD *)(inited + 488) = 0xD000000000000036;
  *(_QWORD *)(inited + 496) = 0x800000024A022600;
  *(_QWORD *)(inited + 504) = sub_24A01F048();
  *(_QWORD *)(inited + 512) = 0xD000000000000035;
  *(_QWORD *)(inited + 520) = 0x800000024A022640;
  *(_QWORD *)(inited + 528) = sub_24A01F048();
  *a9 = sub_249F76654(inited, &qword_2544CAC60);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F871F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_249F87210(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_249F87230()
{
  uint64_t v0;
  unint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  unint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t aBlock;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  uint64_t (*v96)();
  uint64_t v97;
  __int16 v98;
  unint64_t v99;
  unint64_t v100;

  v1 = MEMORY[0x24BEE4AF8];
  v99 = MEMORY[0x24BEE4AF8];
  v100 = MEMORY[0x24BEE4AF8];
  v98 = 0;
  v2 = *(NSObject **)(v0 + 24);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = &v100;
  *(_QWORD *)(v3 + 24) = v0;
  *(_BYTE *)(v3 + 32) = 1;
  *(_QWORD *)(v3 + 40) = &v99;
  *(_BYTE *)(v3 + 48) = 2;
  *(_QWORD *)(v3 + 56) = (char *)&v98 + 1;
  *(_QWORD *)(v3 + 64) = &v98;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_249F98B20;
  *(_QWORD *)(v4 + 24) = v3;
  v96 = sub_249F9928C;
  v97 = v4;
  aBlock = MEMORY[0x24BDAC760];
  v93 = 1107296256;
  v94 = sub_249F87210;
  v95 = &block_descriptor_105;
  v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    isEscapingClosureAtFileLocation = v100;
    if (!(v100 >> 62))
    {
      v7 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v91 = v3;
      if (v7)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  v7 = sub_24A01F3CC();
  v91 = v3;
  if (v7)
  {
LABEL_4:
    aBlock = v1;
    sub_249F8CBB4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
    {
      __break(1u);
      goto LABEL_69;
    }
    v8 = 0;
    v9 = aBlock;
    do
    {
      if ((isEscapingClosureAtFileLocation & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x24BD071F4](v8, isEscapingClosureAtFileLocation);
      else
        v10 = *(id *)(isEscapingClosureAtFileLocation + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_identifier);
      v13 = objc_msgSend(v11, sel_mapping);
      if (v13)
      {
        v14 = v13;
        v15 = (uint64_t)objc_msgSend(v13, sel_label);

        v11 = v14;
      }
      else
      {
        v15 = -1;
      }

      aBlock = v9;
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_249F8CBB4(v16 > 1, v17 + 1, 1);
        v9 = aBlock;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v17 + 1;
      v18 = v9 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v12;
      *(_QWORD *)(v18 + 40) = v15;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v9 + 16))
      goto LABEL_16;
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
LABEL_16:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC28);
    v19 = sub_24A01F3FC();
    goto LABEL_21;
  }
LABEL_20:
  v19 = MEMORY[0x24BEE4B00];
LABEL_21:
  aBlock = v19;
  v20 = (_QWORD *)swift_bridgeObjectRetain();
  sub_249F91B04(v20, 1, &aBlock);
  v21 = 0;
  swift_bridgeObjectRelease();
  v22 = aBlock;
  v23 = v99;
  if (v99 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_24A01F3CC();
    if (v24)
    {
LABEL_23:
      aBlock = v1;
      sub_249F8CBB4(0, v24 & ~(v24 >> 63), 0);
      if ((v24 & 0x8000000000000000) == 0)
      {
        v89 = 0;
        v90 = v22;
        v25 = 0;
        v26 = aBlock;
        v27 = v23 & 0xC000000000000001;
        v28 = v23;
        do
        {
          if (v27)
            v29 = (id)MEMORY[0x24BD071F4](v25, v23);
          else
            v29 = *(id *)(v23 + 8 * v25 + 32);
          v30 = v29;
          v31 = objc_msgSend(v29, sel_identifier, v89, v90, v91);
          v32 = objc_msgSend(v30, sel_mapping);
          if (v32)
          {
            v33 = v32;
            v34 = (uint64_t)objc_msgSend(v32, sel_label);

            v30 = v33;
          }
          else
          {
            v34 = -1;
          }

          aBlock = v26;
          v36 = *(_QWORD *)(v26 + 16);
          v35 = *(_QWORD *)(v26 + 24);
          if (v36 >= v35 >> 1)
          {
            sub_249F8CBB4(v35 > 1, v36 + 1, 1);
            v26 = aBlock;
          }
          ++v25;
          *(_QWORD *)(v26 + 16) = v36 + 1;
          v37 = v26 + 16 * v36;
          *(_QWORD *)(v37 + 32) = v31;
          *(_QWORD *)(v37 + 40) = v34;
          v23 = v28;
        }
        while (v24 != v25);
        swift_bridgeObjectRelease();
        v21 = v89;
        v22 = v90;
        if (*(_QWORD *)(v26 + 16))
          goto LABEL_35;
        goto LABEL_38;
      }
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
  else
  {
    v24 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + 16))
  {
LABEL_35:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC28);
    v38 = sub_24A01F3FC();
    goto LABEL_39;
  }
LABEL_38:
  v38 = MEMORY[0x24BEE4B00];
LABEL_39:
  aBlock = v38;
  v39 = (_QWORD *)swift_bridgeObjectRetain();
  sub_249F91B04(v39, 1, &aBlock);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    v40 = aBlock;
    if (*(_QWORD *)(v22 + 16))
    {
      v41 = swift_bridgeObjectRelease_n();
      MEMORY[0x24BDAC7A8](v41);
      sub_24A01F138();
      v42 = v93;
      v43 = v94;
      if (*(_QWORD *)(v40 + 16))
      {
LABEL_42:
        v44 = swift_bridgeObjectRelease_n();
        MEMORY[0x24BDAC7A8](v44);
        sub_24A01F138();
        v45 = v93;
        v46 = v94;
LABEL_45:
        v47 = sub_249F76654(MEMORY[0x24BEE4AF8], &qword_2544CAC60);
        if (HIBYTE(v98) != 1)
        {
          swift_release();
LABEL_56:
          if (v98 != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
LABEL_67:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return v47;
          }
          v68 = sub_24A01EFF4();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock = v47;
          sub_249FBFDCC(v68, 0x636572705F746570, 0xED00006E6F697369, isUniquelyReferenced_nonNull_native);
          v70 = aBlock;
          swift_bridgeObjectRelease();
          v71 = sub_24A01EFF4();
          v72 = swift_isUniquelyReferenced_nonNull_native();
          aBlock = v70;
          sub_249FBFDCC(v71, 0x616365725F746570, 0xEA00000000006C6CLL, v72);
          v73 = aBlock;
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(v45 + 16))
          {
            sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
            v76 = sub_24A01F1BC();
            goto LABEL_62;
          }
          v74 = swift_bridgeObjectRetain();
          v75 = sub_249F9C554(v74);
          swift_bridgeObjectRelease();
          if ((v75 & 0x100000000) == 0)
          {
            v76 = sub_24A01EFF4();
LABEL_62:
            v77 = v76;
            v78 = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v73;
            sub_249FBFDCC(v77, 0xD000000000000013, 0x800000024A022810, v78);
            v79 = aBlock;
            swift_bridgeObjectRelease();
            if (!*((_QWORD *)v46 + 2))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
              v82 = sub_24A01F1BC();
              goto LABEL_66;
            }
            v80 = swift_bridgeObjectRetain();
            v81 = sub_249F9C554(v80);
            swift_bridgeObjectRelease();
            if ((v81 & 0x100000000) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v82 = sub_24A01EFF4();
LABEL_66:
              v83 = v82;
              v84 = swift_isUniquelyReferenced_nonNull_native();
              aBlock = v79;
              sub_249FBFDCC(v83, 0xD000000000000010, 0x800000024A022830, v84);
              v85 = aBlock;
              swift_bridgeObjectRelease();
              swift_release();
              v86 = sub_24A01F048();
              v87 = swift_isUniquelyReferenced_nonNull_native();
              aBlock = v85;
              sub_249FBFDCC(v86, 0xD000000000000015, 0x800000024A022850, v87);
              v47 = aBlock;
              swift_bridgeObjectRelease();
              goto LABEL_67;
            }
            goto LABEL_73;
          }
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        v48 = sub_24A01EFF4();
        v49 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v47;
        sub_249FBFDCC(v48, 0xD000000000000010, 0x800000024A022870, v49);
        v50 = aBlock;
        swift_bridgeObjectRelease();
        v51 = sub_24A01EFF4();
        v52 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v50;
        sub_249FBFDCC(v51, 0x725F6E6F73726570, 0xED00006C6C616365, v52);
        v53 = aBlock;
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v42 + 16))
        {
          sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
          v56 = sub_24A01F1BC();
          goto LABEL_51;
        }
        v54 = swift_bridgeObjectRetain();
        v55 = sub_249F9C554(v54);
        swift_bridgeObjectRelease();
        if ((v55 & 0x100000000) == 0)
        {
          v56 = sub_24A01EFF4();
LABEL_51:
          v57 = v56;
          v58 = swift_isUniquelyReferenced_nonNull_native();
          aBlock = v53;
          sub_249FBFDCC(v57, 0xD000000000000016, 0x800000024A022890, v58);
          v59 = aBlock;
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)v43 + 2))
          {
            sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
            v62 = sub_24A01F1BC();
            goto LABEL_55;
          }
          v60 = swift_bridgeObjectRetain();
          v61 = sub_249F9C554(v60);
          swift_bridgeObjectRelease();
          if ((v61 & 0x100000000) == 0)
          {
            v62 = sub_24A01EFF4();
LABEL_55:
            v63 = v62;
            v64 = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v59;
            sub_249FBFDCC(v63, 0xD000000000000013, 0x800000024A0228B0, v64);
            v65 = aBlock;
            swift_bridgeObjectRelease();
            swift_release();
            v66 = sub_24A01F048();
            v67 = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v65;
            sub_249FBFDCC(v66, 0xD000000000000017, 0x800000024A0228D0, v67);
            v47 = aBlock;
            swift_bridgeObjectRelease();
            goto LABEL_56;
          }
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
    }
    else
    {
      v42 = MEMORY[0x24BEE4B00];
      v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE4B00];
      if (*(_QWORD *)(aBlock + 16))
        goto LABEL_42;
    }
    v45 = MEMORY[0x24BEE4B00];
    v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE4B00];
    goto LABEL_45;
  }
LABEL_74:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_249F87DA0(_QWORD *a1, uint64_t a2, char a3, _QWORD *a4, char a5, BOOL *a6, BOOL *a7)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t j;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL *v44;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  unint64_t v55;

  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  v11 = MEMORY[0x24BEE4AF8];
  v55 = MEMORY[0x24BEE4AF8];
  v12 = *(void **)(v10 + 16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 1;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = &v55;
  *(_QWORD *)(v13 + 48) = v10;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_249F98B74;
  *(_QWORD *)(v14 + 24) = v13;
  v53 = sub_249F9928C;
  v54 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v50 = 1107296256;
  v51 = sub_249F87210;
  v52 = &block_descriptor_117;
  v15 = _Block_copy(&aBlock);
  v16 = v54;
  swift_retain_n();
  v17 = v12;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_performBlockAndWait_, v15);

  _Block_release(v15);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v17 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16 = v55;
    swift_release();
    swift_release();
    aBlock = v11;
    v44 = a6;
    v43 = a4;
    if (!(v16 >> 62))
    {
      v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v18 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v18)
  {
    if (v18 < 1)
    {
      __break(1u);
      goto LABEL_36;
    }
    for (i = 0; i != v18; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x24BD071F4](i, v16);
      else
        v20 = *(id *)(v16 + 8 * i + 32);
      v21 = v20;
      if (objc_msgSend(v20, sel_type, v43) == ((0x63F0200u >> (8 * a3)) & 0x3F))
      {
        sub_24A01F33C();
        sub_24A01F36C();
        sub_24A01F378();
        sub_24A01F348();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v22 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
  }
  *a1 = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  v24 = MEMORY[0x24BEE4AF8];
  v55 = MEMORY[0x24BEE4AF8];
  v25 = *(void **)(v23 + 16);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  *(_BYTE *)(v26 + 24) = 1;
  *(_QWORD *)(v26 + 32) = 0;
  *(_QWORD *)(v26 + 40) = &v55;
  *(_QWORD *)(v26 + 48) = v23;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_249F98B74;
  *(_QWORD *)(v27 + 24) = v26;
  v53 = sub_249F9928C;
  v54 = v27;
  aBlock = MEMORY[0x24BDAC760];
  v50 = 1107296256;
  v51 = sub_249F87210;
  v52 = &block_descriptor_128;
  v28 = _Block_copy(&aBlock);
  swift_retain_n();
  v29 = v25;
  swift_retain();
  swift_release();
  objc_msgSend((id)v29, sel_performBlockAndWait_, v28);

  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v28 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v29 = v55;
    swift_release();
    swift_release();
    aBlock = v24;
    if (!(v29 >> 62))
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v30)
        goto LABEL_19;
LABEL_33:
      swift_bridgeObjectRelease();
      v34 = MEMORY[0x24BEE4AF8];
LABEL_34:
      *v43 = v34;
      swift_bridgeObjectRelease();
      sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_24A0208C0;
      v36 = MEMORY[0x24BEE3F30];
      v37 = MEMORY[0x24BEE3F78];
      *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE3F30];
      *(_QWORD *)(v35 + 64) = v37;
      *(_WORD *)(v35 + 32) = 0;
      *(_QWORD *)(v35 + 96) = v36;
      *(_QWORD *)(v35 + 104) = v37;
      *(_WORD *)(v35 + 72) = (0x63F0200u >> (8 * a3)) & 0x3F;
      swift_retain();
      v38 = (void *)sub_24A01F09C();
      v39 = sub_249FCCB28(v38);
      swift_release();

      *v44 = v39 > 0;
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_24A0208C0;
      *(_QWORD *)(v40 + 56) = v36;
      *(_QWORD *)(v40 + 64) = v37;
      *(_WORD *)(v40 + 32) = 0;
      *(_QWORD *)(v40 + 96) = v36;
      *(_QWORD *)(v40 + 104) = v37;
      *(_WORD *)(v40 + 72) = (0x63F0200u >> (8 * a5)) & 0x3F;
      swift_retain();
      v41 = (void *)sub_24A01F09C();
      v42 = sub_249FCCB28(v41);
      swift_release();

      *a7 = v42 > 0;
      return;
    }
  }
  swift_bridgeObjectRetain();
  v30 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v30)
    goto LABEL_33;
LABEL_19:
  if (v30 >= 1)
  {
    for (j = 0; j != v30; ++j)
    {
      if ((v29 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x24BD071F4](j, v29);
      else
        v32 = *(id *)(v29 + 8 * j + 32);
      v33 = v32;
      if (objc_msgSend(v32, sel_type, v43) == ((0x63F0200u >> (8 * a5)) & 0x3F))
      {
        sub_24A01F33C();
        sub_24A01F36C();
        sub_24A01F378();
        sub_24A01F348();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v34 = aBlock;
    goto LABEL_34;
  }
LABEL_36:
  __break(1u);
}

Swift::Void __swiftcall VUGallery.updateInferredDeviceOwner()()
{
  unsigned __int8 v0;

  v0 = 0;
  sub_249F7A594(&v0, 0, 0);
}

uint64_t VUGallery.SocialGroup.numberOfMomentNodes.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VUGallery.SocialGroup.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VUGallery.SocialGroup.init(numberOfMomentsNodes:tags:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t VUGallery.inferredDeviceOwner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for VUGallery.RecognitionResult(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = *(NSObject **)(v2 + 24);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v2;
  v9[3] = 0xD000000000000013;
  v9[4] = 0x800000024A021F60;
  v9[5] = v6;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249F93F50;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_249F93F6C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_29;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_249F98C10((uint64_t)v6, a1, &qword_2544CACB8);
    return swift_release();
  }
  return result;
}

uint64_t VUGallery.inferredDeviceOwner(ignoreMeGroundTruth:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACB8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VUGallery.RecognitionResult(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  if ((a1 & 1) != 0)
    v10 = 0xD000000000000028;
  else
    v10 = 0xD000000000000013;
  if ((a1 & 1) != 0)
    v11 = 0x800000024A021F80;
  else
    v11 = 0x800000024A021F60;
  v12 = *(NSObject **)(v3 + 24);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v3;
  v13[3] = v10;
  v13[4] = v11;
  v13[5] = v8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_249F99290;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_249F9928C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_40;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_249F98C10((uint64_t)v8, a2, &qword_2544CACB8);
    return swift_release();
  }
  return result;
}

uint64_t sub_249F88880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  uint64_t v55;
  _OWORD v56[2];
  _BYTE v57[24];
  uint64_t v58;

  v49 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC08);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACB8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  memset(v56, 0, sizeof(v56));
  v16 = *(void **)(v15 + 16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v15;
  v17[3] = v56;
  v17[4] = a2;
  v17[5] = a3;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_249F98A9C;
  *(_QWORD *)(v18 + 24) = v17;
  v54 = sub_249F9928C;
  v55 = v18;
  aBlock = MEMORY[0x24BDAC760];
  v51 = 1107296256;
  v52 = sub_249F87210;
  v53 = &block_descriptor_94;
  v19 = _Block_copy(&aBlock);
  swift_retain_n();
  v20 = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_performBlockAndWait_, v19);

  _Block_release(v19);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_249F98C10((uint64_t)v56, (uint64_t)v57, &qword_2544CAF40);
    swift_release();
    swift_release();
    if (v58)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CACC0);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v23 = aBlock;
        if (!*(_QWORD *)(aBlock + 16))
          return swift_bridgeObjectRelease();
        v24 = sub_249F8B0F8(0xD000000000000010, 0x800000024A021D90);
        if ((v25 & 1) == 0)
          return swift_bridgeObjectRelease();
        v26 = *(void **)(*(_QWORD *)(v23 + 56) + 8 * v24);
        aBlock = 0;
        LOBYTE(v51) = 1;
        v27 = v26;
        sub_24A01F054();

        if ((v51 & 1) == 0 && (v29 = aBlock) != 0)
        {
          MEMORY[0x24BDAC7A8](v28);
          *(&v47 - 4) = a1;
          *(&v47 - 3) = v29;
          *((_WORD *)&v47 - 8) = v30;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
          sub_24A01F138();
          v31 = aBlock;
          v32 = *(_QWORD *)(aBlock + 16);
          v33 = type metadata accessor for VUGallery.TagView(0);
          v34 = *(_QWORD *)(v33 - 8);
          if (v32)
          {
            sub_249F9896C(v31 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)), (uint64_t)v9, type metadata accessor for VUGallery.TagView);
            v35 = 0;
          }
          else
          {
            v35 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v9, v35, 1, v33);
          swift_bridgeObjectRelease();
          v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v33);
          v37 = (uint64_t)v48;
          if (v36 == 1)
          {
            sub_249F990A0((uint64_t)v9, (uint64_t *)&unk_2544CAC08);
            v38 = sub_24A01EBA4();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
          }
          else
          {
            v39 = &v9[*(int *)(v33 + 20)];
            v40 = sub_24A01EBA4();
            v41 = *(_QWORD *)(v40 - 8);
            (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v37, v39, v40);
            sub_249F989C0((uint64_t)v9, type metadata accessor for VUGallery.TagView);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
          }
          if (*(_QWORD *)(v23 + 16)
            && (v42 = sub_249F8B0F8(0x6E656469666E6F63, 0xEA00000000006563), (v43 & 1) != 0))
          {
            v44 = *(id *)(*(_QWORD *)(v23 + 56) + 8 * v42);
            swift_bridgeObjectRelease();
            LODWORD(aBlock) = 0;
            BYTE4(aBlock) = 1;
            MEMORY[0x24BD06ED0](v44, &aBlock);

            if (BYTE4(aBlock))
              v45 = 1.0;
            else
              v45 = *(float *)&aBlock;
          }
          else
          {
            swift_bridgeObjectRelease();
            v45 = 1.0;
          }
          *v14 = v29;
          v46 = type metadata accessor for VUGallery.RecognitionResult(0);
          sub_249F98C10(v37, (uint64_t)v14 + *(int *)(v46 + 20), &qword_2544CAD70);
          *(float *)((char *)v14 + *(int *)(v46 + 24)) = v45;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v14, 0, 1, v46);
          return sub_249F98AB8((uint64_t)v14, v49, &qword_2544CACB8);
        }
        else
        {
          return swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      return sub_249F990A0((uint64_t)v57, &qword_2544CAF40);
    }
  }
  return result;
}

uint64_t sub_249F88DE0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA218);
  sub_24A01F138();
  return v1;
}

uint64_t sub_249F88E50@<X0>(unsigned __int8 a1@<W0>, char a2@<W1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  id v5;
  int v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD aBlock[6];
  uint64_t v23;
  uint64_t v24;

  LOBYTE(v5) = a2;
  v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A020920;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  *(_QWORD *)(v7 + 32) = sub_24A01F09C();
  *(_QWORD *)(v7 + 40) = sub_24A01F09C();
  aBlock[0] = v7;
  sub_24A01EFA0();
  v24 = v7;
  v8 = &unk_24A020000;
  if (v6 == 4)
    goto LABEL_4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
  v10 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v9 + 64) = v10;
  *(_BYTE *)(v9 + 32) = 0x63F0200u >> (8 * v6);
  sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_11;
  while (1)
  {
    sub_24A01EFD0();
    sub_24A01EFA0();
LABEL_4:
    if (v5 != 3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = v8[139];
      v12 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v11 + 64) = v12;
      *(_QWORD *)(v11 + 32) = v5;
      sub_24A01F09C();
      MEMORY[0x24BD06E34]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24A01EFAC();
      sub_24A01EFD0();
      sub_24A01EFA0();
    }
    v13 = *(_QWORD *)(a3[2] + 16);
    swift_retain();
    v14 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v14);

    v23 = MEMORY[0x24BEE4B00];
    v16 = *(void **)(v13 + 16);
    a3 = (_QWORD *)swift_allocObject();
    a3[2] = v15;
    a3[3] = v13;
    a3[4] = &v23;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_249F98A54;
    *(_QWORD *)(v17 + 24) = a3;
    aBlock[4] = sub_249F9928C;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_249F87210;
    aBlock[3] = &block_descriptor_84;
    v18 = _Block_copy(aBlock);
    swift_retain();
    v8 = v16;
    v5 = v15;
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_performBlockAndWait_, v18);

    _Block_release(v18);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v18 & 1) == 0)
      break;
    __break(1u);
LABEL_11:
    sub_24A01EFAC();
  }
  v19 = v23;
  swift_release();

  result = swift_release();
  *a4 = v19;
  return result;
}

uint64_t sub_249F8925C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_24A01EDCC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A01EDC0();
  v13 = v3;
  v14 = a1;
  v15 = a2;
  v16 = a3;
  sub_24A01F12C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_249F89338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  _QWORD v13[6];
  _OWORD v14[2];

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v7 = *(void **)(v6 + 16);
  sub_249F93A3C(a4, (uint64_t)v14);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  sub_249F989B0(v14, (_OWORD *)(v8 + 40));
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_249F98A30;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_249F9928C;
  v13[5] = v9;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_249F87210;
  v13[3] = &block_descriptor_74;
  v10 = _Block_copy(v13);
  swift_retain_n();
  v11 = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_249FDF3A0();
    return swift_release();
  }
  return result;
}

uint64_t sub_249F894F0(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24A012F38();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_249F8E8F8(v6);
  return sub_24A01F348();
}

uint64_t sub_249F89568(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_249F895E0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_24A012F88(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_249F8FDA8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_249F89664(uint64_t a1, uint64_t a2)
{
  return sub_249F897AC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_249F89670(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_24A01EE50();
  *a2 = 0;
  return result;
}

uint64_t sub_249F896E4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_24A01EE5C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_249F89760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_24A01EE68();
  v2 = sub_24A01EE44();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_249F897A0(uint64_t a1, uint64_t a2)
{
  return sub_249F897AC(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_249F897AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24A01EE68();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_249F897E8()
{
  sub_24A01EE68();
  sub_24A01EE98();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F89828()
{
  uint64_t v0;

  sub_24A01EE68();
  sub_24A01F4EC();
  sub_24A01EE98();
  v0 = sub_24A01F528();
  swift_bridgeObjectRelease();
  return v0;
}

_QWORD *sub_249F89898@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_249F898A8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249F898BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24A01EE68();
  v2 = v1;
  if (v0 == sub_24A01EE68() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_24A01F45C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_249F89944@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24A01EE44();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_249F89988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A01EE68();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249F899B0()
{
  sub_249F9419C((unint64_t *)&unk_2544CAEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A020864);
  sub_249F9419C((unint64_t *)&unk_2578FF980, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A0207C4);
  return sub_24A01F414();
}

uint64_t sub_249F89A3C()
{
  return swift_slowAlloc();
}

void sub_249F89A44()
{
  JUMPOUT(0x24BD07950);
}

_QWORD *sub_249F89A50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8A64C(a1, a2, a3, a4, (uint64_t *)&unk_2544CA350);
}

_QWORD *sub_249F89A5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA320);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F92AA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F89B68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249F89DB4(a1, a2, a3, a4, &qword_2578FF768, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_249F89B7C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8A30C(a1, a2, a3, a4, (uint64_t *)&unk_2544CAC38);
}

_QWORD *sub_249F89B88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F93568(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249F89C94(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F926A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F89DA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249F89DB4(a1, a2, a3, a4, &qword_2578FF850, type metadata accessor for VUStreamingGallery.Recognition);
}

uint64_t sub_249F89DB4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_24A01F3B4();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249F928A0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_249F89FC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249F89FD4(a1, a2, a3, a4, &qword_2578FF828, &qword_2578FF830);
}

uint64_t sub_249F89FD4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_24A01F3B4();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249F9874C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_249F8A1E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF870);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249F98388(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249F8A300(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8A30C(a1, a2, a3, a4, (uint64_t *)&unk_2578FF7B8);
}

_QWORD *sub_249F8A30C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F98474(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F8A414(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249F89FD4(a1, a2, a3, a4, &qword_2578FF770, &qword_2578FF778);
}

_QWORD *sub_249F8A428(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F98474(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249F8A534(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF748);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F93658(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249F8A640(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8A64C(a1, a2, a3, a4, &qword_2544CA348);
}

_QWORD *sub_249F8A64C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F9855C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F8A754(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249F89FD4(a1, a2, a3, a4, &qword_2544CA308, &qword_2544CAD70);
}

_QWORD *sub_249F8A768(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA300);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249F98644(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_249F8A874(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA330);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_249F92794(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_249F8A998(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA338);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_249F929B8(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_249F8AAA4()
{
  unint64_t result;

  result = qword_2544CACF8;
  if (!qword_2544CACF8)
  {
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2544CACF8);
  }
  return result;
}

uint64_t sub_249F8AAE8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_249F8ABB8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_249F93A3C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_249F93A3C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_249F8ABB8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24A01F204();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_249F8AD70(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_24A01F330();
  if (!v8)
  {
    sub_24A01F3B4();
    __break(1u);
LABEL_17:
    result = sub_24A01F408();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_249F8AD70(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_249F8AE04(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_249F8AF78(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_249F8AF78(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_249F8AE04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_249FF2B74(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_24A01F300();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_24A01F3B4();
      __break(1u);
LABEL_10:
      v2 = sub_24A01EED4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_24A01F408();
    __break(1u);
LABEL_14:
    result = sub_24A01F3B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_249F8AF78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

unint64_t sub_249F8B0C4(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24BD073A4](*(_QWORD *)(v1 + 40), a1, 1);
  return sub_249F8B414(a1, v3);
}

unint64_t sub_249F8B0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24A01F4EC();
  sub_24A01EE98();
  v4 = sub_24A01F528();
  return sub_249F8B4B4(a1, a2, v4);
}

unint64_t sub_249F8B15C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A01F2A0();
  return sub_249F8B594(a1, v2);
}

unint64_t sub_249F8B18C(uint64_t a1)
{
  uint64_t v2;

  sub_24A01EE68();
  sub_24A01F4EC();
  sub_24A01EE98();
  v2 = sub_24A01F528();
  swift_bridgeObjectRelease();
  return sub_249F8B658(a1, v2);
}

unint64_t sub_249F8B20C(uint64_t a1)
{
  uint64_t v2;

  sub_24A01EBA4();
  sub_249F9419C(&qword_2578FF758, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_24A01EE14();
  return sub_249F8B7CC(a1, v2);
}

unint64_t sub_249F8B27C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A01F4E0();
  return sub_249F8B910(a1, v2);
}

unint64_t sub_249F8B2AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_24A01EBA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01F4EC();
  sub_249F9896C(a1, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_249F9419C(&qword_2578FF758, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_24A01F4F8();
  }
  v9 = sub_24A01F528();
  return sub_249F8B9AC(a1, v9);
}

unint64_t sub_249F8B414(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249F8B4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24A01F45C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24A01F45C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_249F8B594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_249F98F40(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24BD0717C](v9, a1);
      sub_249F93A08((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_249F8B658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_24A01EE68();
    v8 = v7;
    if (v6 == sub_24A01EE68() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_24A01F45C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_24A01EE68();
          v15 = v14;
          if (v13 == sub_24A01EE68() && v15 == v16)
            break;
          v18 = sub_24A01F45C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_249F8B7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_249F9419C(&qword_2578FF760, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_24A01EE38();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_249F8B910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249F8B9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = sub_24A01EBA4();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v36 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF858);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VUStreamingGallery.Label(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v46 = (uint64_t *)((char *)&v36 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v36 - v19;
  v21 = -1 << *(_BYTE *)(v2 + 32);
  v22 = a2 & ~v21;
  v49 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
  {
    v47 = ~v21;
    v48 = *(_QWORD *)(v18 + 72);
    v42 = a1;
    v43 = v2;
    v38 = v12;
    v39 = v9;
    v37 = v15;
    do
    {
      sub_249F9896C(*(_QWORD *)(v2 + 48) + v48 * v22, (uint64_t)v20, type metadata accessor for VUStreamingGallery.Label);
      v23 = &v11[*(int *)(v9 + 48)];
      sub_249F9896C((uint64_t)v20, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
      sub_249F9896C(a1, (uint64_t)v23, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_249F9896C((uint64_t)v11, (uint64_t)v15, type metadata accessor for VUStreamingGallery.Label);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
LABEL_4:
          sub_249F990A0((uint64_t)v11, &qword_2578FF858);
          sub_249F989C0((uint64_t)v20, type metadata accessor for VUStreamingGallery.Label);
          goto LABEL_5;
        }
        v25 = v44;
        v24 = v45;
        v26 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
        v27 = v40;
        v26(v40, v15, v45);
        v28 = v41;
        v26(v41, v23, v24);
        v29 = sub_24A01EB8C();
        v30 = *(void (**)(char *, uint64_t))(v25 + 8);
        v9 = v39;
        v31 = v28;
        v15 = v37;
        v30(v31, v24);
        v30(v27, v24);
        a1 = v42;
        v2 = v43;
        sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0((uint64_t)v20, type metadata accessor for VUStreamingGallery.Label);
        if ((v29 & 1) != 0)
          return v22;
      }
      else
      {
        sub_249F9896C((uint64_t)v11, (uint64_t)v46, type metadata accessor for VUStreamingGallery.Label);
        if (swift_getEnumCaseMultiPayload() == 1)
          goto LABEL_4;
        v32 = *v46;
        v33 = *(_QWORD *)v23;
        sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0((uint64_t)v20, type metadata accessor for VUStreamingGallery.Label);
        v34 = v32 == v33;
        a1 = v42;
        v2 = v43;
        if (v34)
          return v22;
      }
LABEL_5:
      v22 = (v22 + 1) & v47;
    }
    while (((*(_QWORD *)(v49 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
  }
  return v22;
}

uint64_t sub_249F8BD0C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_24A01F4E0();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_24A010A14(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_249F8BE04(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_249F9419C(&qword_2578FF758, 255, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_24A01EE14();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_249F9419C(&qword_2578FF760, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_24A01EE38();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_24A010B34((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_249F8C068(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v55 = a1;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF858);
  MEMORY[0x24BDAC7A8](v68);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v52 - v10;
  v11 = type metadata accessor for VUStreamingGallery.Label(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v52 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v69 = (uint64_t)&v52 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v53 = (uint64_t)&v52 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v52 - v21;
  v54 = v2;
  v23 = *v2;
  sub_24A01F4EC();
  sub_249F9896C(a2, (uint64_t)v22, type metadata accessor for VUStreamingGallery.Label);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v62 = v7;
  v63 = v6;
  if (EnumCaseMultiPayload == 1)
  {
    v25 = v58;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v58, v22, v6);
    sub_249F9419C(&qword_2578FF758, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  }
  else
  {
    sub_24A01F4F8();
    swift_bridgeObjectRetain();
  }
  v26 = sub_24A01F528();
  v27 = -1 << *(_BYTE *)(v23 + 32);
  v28 = v26 & ~v27;
  v67 = v23 + 56;
  if (((*(_QWORD *)(v23 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
  {
    v65 = ~v27;
    v66 = *(_QWORD *)(v12 + 72);
    v61 = a2;
    v30 = (uint64_t *)v59;
    v29 = (uint64_t)v60;
    v56 = v11;
    do
    {
      v31 = v23;
      v32 = *(_QWORD *)(v23 + 48);
      v64 = v66 * v28;
      v33 = v69;
      sub_249F9896C(v32 + v66 * v28, v69, type metadata accessor for VUStreamingGallery.Label);
      v34 = &v5[*(int *)(v68 + 48)];
      sub_249F9896C(v33, (uint64_t)v5, type metadata accessor for VUStreamingGallery.Label);
      sub_249F9896C(a2, (uint64_t)v34, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_249F9896C((uint64_t)v5, v29, type metadata accessor for VUStreamingGallery.Label);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v29, v63);
          v23 = v31;
LABEL_7:
          sub_249F990A0((uint64_t)v5, &qword_2578FF858);
          sub_249F989C0(v69, type metadata accessor for VUStreamingGallery.Label);
          goto LABEL_8;
        }
        v35 = v62;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
        v37 = v58;
        v38 = v29;
        v39 = v63;
        v36(v58, v38, v63);
        v40 = v37;
        v41 = v57;
        v36(v57, (uint64_t)v34, v39);
        v42 = sub_24A01EB8C();
        v43 = *(void (**)(char *, uint64_t))(v35 + 8);
        v43(v41, v39);
        v44 = v39;
        v30 = (uint64_t *)v59;
        v29 = (uint64_t)v60;
        v43(v40, v44);
        a2 = v61;
        sub_249F989C0((uint64_t)v5, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0(v69, type metadata accessor for VUStreamingGallery.Label);
        v23 = v31;
        if ((v42 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        sub_249F9896C((uint64_t)v5, (uint64_t)v30, type metadata accessor for VUStreamingGallery.Label);
        v23 = v31;
        if (swift_getEnumCaseMultiPayload() == 1)
          goto LABEL_7;
        v45 = *v30;
        v46 = *(_QWORD *)v34;
        sub_249F989C0((uint64_t)v5, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0(v69, type metadata accessor for VUStreamingGallery.Label);
        v47 = v45 == v46;
        a2 = v61;
        if (v47)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          sub_249F989C0(a2, type metadata accessor for VUStreamingGallery.Label);
          sub_249F9896C(*(_QWORD *)(*v54 + 48) + v64, v55, type metadata accessor for VUStreamingGallery.Label);
          return 0;
        }
      }
LABEL_8:
      v28 = (v28 + 1) & v65;
    }
    while (((*(_QWORD *)(v67 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  v49 = v54;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v51 = v53;
  sub_249F9896C(a2, v53, type metadata accessor for VUStreamingGallery.Label);
  v70 = *v49;
  *v49 = 0x8000000000000000;
  sub_24A010D38(v51, v28, isUniquelyReferenced_nonNull_native);
  *v49 = v70;
  swift_bridgeObjectRelease();
  sub_249F98928(a2, v55, type metadata accessor for VUStreamingGallery.Label);
  return 1;
}

uint64_t sub_249F8C5D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  v4 = v3;
  v8 = a3 & 1;
  v9 = *v4;
  sub_24A01F4EC();
  sub_24A01F504();
  if ((a3 & 1) == 0)
    sub_24A01F51C();
  v10 = sub_24A01F528();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_24A0111E0(a2, v8, v12, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_12;
  }
  v13 = ~v11;
  while (1)
  {
    v14 = *(_QWORD *)(v9 + 48) + 16 * v12;
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
      break;
    if (v8)
      goto LABEL_10;
LABEL_6:
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  if (v8 || *(_QWORD *)v14 != a2)
    goto LABEL_6;
LABEL_10:
  result = 0;
  v16 = *(_QWORD *)(*v4 + 48) + 16 * v12;
  a2 = *(_QWORD *)v16;
  LOBYTE(v8) = *(_BYTE *)(v16 + 8);
LABEL_12:
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_249F8C744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int16 *v12;
  int v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v7 = *v3;
  sub_24A01F4EC();
  sub_24A01F510();
  sub_24A01F4F8();
  v8 = sub_24A01F528();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = (unsigned __int16 *)(*(_QWORD *)(v7 + 48) + 16 * v10);
      v13 = *v12;
      v14 = *((_QWORD *)v12 + 1);
      if (v13 == (unsigned __int16)a2 && v14 == a3)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v18 = *(_QWORD *)(*v3 + 48) + 16 * v10;
    LOWORD(a2) = *(_WORD *)v18;
    a3 = *(_QWORD *)(v18 + 8);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_24A011368(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *(_WORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  return result;
}

uint64_t sub_249F8C888(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x24BD073A4](*(_QWORD *)(v6 + 40), a2, 1);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_24A0114CC(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v10 + v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_249F8C988(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8CE10(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8C9A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, (uint64_t *)&unk_2544CA360);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8C9C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8DBDC(a1, a2, a3, *v3, (uint64_t *)&unk_2544CAC38);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8C9EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2544CA258, type metadata accessor for VUGallery.TagView);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CA18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, (uint64_t *)&unk_2578FF790);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CA3C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, (uint64_t *)&unk_2544CA370);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CA60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8DFFC(a1, a2, a3, (_QWORD *)*v3, &qword_2578FF770, &qword_2578FF778);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CA8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8CF9C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CAA8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8D2AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CAC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2544CA398, type metadata accessor for VUGallery.EntityView);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CAF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8DFFC(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2578FF7D0, &qword_2578FF7C8);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CB1C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2578FF920, type metadata accessor for VUGallery.ObservationView);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CB48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2578FF7A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CB6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2578FF908);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CB90(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2578FF900);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CBB4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8D914(a1, a2, a3, *v3, &qword_2578FF8A8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CBD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D788(a1, a2, a3, (_QWORD *)*v3, &qword_2578FF8F0, &qword_2544CAB70);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CC04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, &qword_2578FF768, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CC30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8D618(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CC4C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8D914(a1, a2, a3, *v3, &qword_2578FF8C0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CC70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, &qword_2578FF888, type metadata accessor for VUStreamingGallery.Label);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CC9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8DBDC(a1, a2, a3, *v3, (uint64_t *)&unk_2578FF7B8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CCC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8DD34(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CCDC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2578FF7B0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CD00(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8DE90(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CD1C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8DFFC(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2544CA268, &qword_2544CAC20);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CD48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2544CA348);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CD6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E1DC(a1, a2, a3, *v3, &qword_2578FF820);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CD90(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E330(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CDAC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_249F8E498(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_249F8CDC8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8D3F8(a1, a2, a3, (_QWORD *)*v3, &qword_2578FF740, (uint64_t (*)(_QWORD))MEMORY[0x24BEBFDA0]);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CDF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_249F8E5F4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_249F8CE10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8CF78(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249F8E1DC(a1, a2, a3, a4, (uint64_t *)&unk_2544CA350);
}

uint64_t sub_249F8CF84(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249F8DBDC(a1, a2, a3, a4, (uint64_t *)&unk_2544CAC38);
}

uint64_t sub_249F8CF90(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249F8E1DC(a1, a2, a3, a4, (uint64_t *)&unk_2578FF790);
}

uint64_t sub_249F8CF9C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF780);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF788);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D124(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF878);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF880);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D2AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D3F8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D5D8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249F8E1DC(a1, a2, a3, a4, &qword_2578FF7A0);
}

uint64_t sub_249F8D5E4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_249F8E1DC(a1, a2, a3, a4, &qword_2578FF7A8);
}

uint64_t sub_249F8D5F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8D788(a1, a2, a3, a4, &qword_2578FF8F0, &qword_2544CAB70);
}

uint64_t sub_249F8D604(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8DFFC(a1, a2, a3, a4, &qword_2578FF8E8, &qword_2578FF8C8);
}

uint64_t sub_249F8D618(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA338);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D774(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8D788(a1, a2, a3, a4, &qword_2578FF8B8, &qword_2544CA2D0);
}

uint64_t sub_249F8D788(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8D914(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8DA6C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF838);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8DBC8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_249F8DFFC(a1, a2, a3, a4, &qword_2578FF828, &qword_2578FF830);
}

uint64_t sub_249F8DBDC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8DD34(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF860);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8DE90(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8DFFC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8E1DC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8E330(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF748);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8E498(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F8E5F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA300);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA278);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

unint64_t *sub_249F8E77C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v4;
  char v5;
  unint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  _QWORD v11[2];

  v4 = (unint64_t *)isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_249F98058((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v4 = sub_249F98058((unint64_t *)v9, v6, (uint64_t)v4, a2);
    MEMORY[0x24BD07950](v9, -1, -1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_249F8E8F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  signed int v16;
  id *v17;
  void *v18;
  id v19;
  id v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  signed int v35;
  signed int v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  signed int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void **v109;
  uint64_t v110;

  v3 = a1[1];
  v4 = sub_24A01F438();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_249F9078C(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v103 = v4;
  v98 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v110 = MEMORY[0x24BEE4AF8];
    v109 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        v92 = *v98;
        do
        {
          v93 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v92)
            goto LABEL_139;
          v94 = *(_QWORD *)&v8[16 * v93 + 32];
          v95 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_249F90B20((id *)(v92 + 8 * v94), (id *)(v92 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), v92 + 8 * v95, v109);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_24A012ED4((uint64_t)v8);
          if (v93 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v96 = &v8[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v8 + 2);
          if (v11 > v97)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((_QWORD *)v8 + 2) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_24A01EFA0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for VUIndexTag();
    v7 = sub_24A01EFC4();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v109 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v110 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v99 = *a1 - 8;
  v100 = *a1 + 16;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v12 = v9++;
    v107 = v12;
    if (v9 < v3)
    {
      v13 = *(void **)(v10 + 8 * v12);
      v14 = *(id *)(v10 + 8 * v9);
      v15 = v13;
      v104 = objc_msgSend(v14, sel_type);
      v16 = objc_msgSend(v15, sel_type);

      v3 = v106;
      v9 = v12 + 2;
      if (v12 + 2 < v106)
      {
        v101 = v8;
        v17 = (id *)(v100 + 8 * v12);
        while (1)
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v20 = v18;
          v21 = objc_msgSend(v19, sel_type);
          LODWORD(v18) = objc_msgSend(v20, sel_type);

          if (v104 < v16 == v21 >= (int)v18)
            break;
          ++v9;
          ++v17;
          v3 = v106;
          if (v106 == v9)
          {
            v9 = v106;
            v8 = v101;
            goto LABEL_22;
          }
        }
        v8 = v101;
        v3 = v106;
LABEL_22:
        v12 = v107;
      }
      if (v104 < v16)
      {
        if (v9 < v12)
          goto LABEL_133;
        if (v12 < v9)
        {
          v22 = (uint64_t *)(v99 + 8 * v9);
          v23 = v9;
          v24 = v12;
          v25 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v24 != --v23)
            {
              if (!v10)
                goto LABEL_138;
              v26 = *v25;
              *v25 = *v22;
              *v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v103)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_24A012ABC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v39 = *((_QWORD *)v8 + 2);
    v38 = *((_QWORD *)v8 + 3);
    v11 = v39 + 1;
    if (v39 >= v38 >> 1)
      v8 = sub_24A012ABC((char *)(v38 > 1), v39 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v40 = v8 + 32;
    v41 = &v8[16 * v39 + 32];
    *(_QWORD *)v41 = v12;
    *((_QWORD *)v41 + 1) = v9;
    if (v39)
    {
      v108 = v9;
      while (1)
      {
        v42 = v11 - 1;
        if (v11 >= 4)
        {
          v47 = &v40[16 * v11];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_115;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_116;
          v54 = v11 - 2;
          v55 = &v40[16 * v11 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_118;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_121;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_125;
            v70 = v45 < v80;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v71 = *((_QWORD *)v8 + 4);
            v72 = *((_QWORD *)v8 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_80;
          }
          v44 = *((_QWORD *)v8 + 4);
          v43 = *((_QWORD *)v8 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_117;
        v54 = v11 - 2;
        v60 = &v40[16 * v11 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_120;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_123;
        if (__OFADD__(v64, v69))
          goto LABEL_124;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_86:
          if (v70)
            v42 = v54;
          goto LABEL_88;
        }
LABEL_80:
        if ((v65 & 1) != 0)
          goto LABEL_119;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_122;
        if (v76 < v64)
          goto LABEL_14;
LABEL_88:
        v81 = v42 - 1;
        if (v42 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v82 = v10;
        if (!v10)
          goto LABEL_137;
        v83 = v8;
        v84 = &v40[16 * v81];
        v85 = *(_QWORD *)v84;
        v86 = v40;
        v87 = v42;
        v88 = &v40[16 * v42];
        v89 = *((_QWORD *)v88 + 1);
        v90 = v82;
        sub_249F90B20((id *)(v82 + 8 * *(_QWORD *)v84), (id *)(v82 + 8 * *(_QWORD *)v88), v82 + 8 * v89, v109);
        if (v1)
          goto LABEL_109;
        if (v89 < v85)
          goto LABEL_112;
        if (v87 > *((_QWORD *)v83 + 2))
          goto LABEL_113;
        *(_QWORD *)v84 = v85;
        *(_QWORD *)&v86[16 * v81 + 8] = v89;
        v91 = *((_QWORD *)v83 + 2);
        if (v87 >= v91)
          goto LABEL_114;
        v8 = v83;
        v11 = v91 - 1;
        memmove(v88, v88 + 16, 16 * (v91 - 1 - v87));
        v40 = v86;
        *((_QWORD *)v83 + 2) = v91 - 1;
        v10 = v90;
        v9 = v108;
        if (v91 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v106;
    if (v9 >= v106)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v103))
    goto LABEL_134;
  if (v12 + v103 >= v3)
    v27 = v3;
  else
    v27 = v12 + v103;
  if (v27 >= v12)
  {
    if (v9 != v27)
    {
      v102 = v8;
      v28 = v99 + 8 * v9;
      v105 = v27;
      do
      {
        v29 = *(void **)(v10 + 8 * v9);
        v30 = v12;
        v31 = v28;
        do
        {
          v32 = *(void **)v31;
          v33 = v29;
          v34 = v32;
          v35 = objc_msgSend(v33, sel_type);
          v36 = objc_msgSend(v34, sel_type);

          if (v35 >= v36)
            break;
          if (!v10)
            goto LABEL_136;
          v37 = *(void **)v31;
          v29 = *(void **)(v31 + 8);
          *(_QWORD *)v31 = v29;
          *(_QWORD *)(v31 + 8) = v37;
          v31 -= 8;
          ++v30;
        }
        while (v9 != v30);
        ++v9;
        v28 += 8;
        v12 = v107;
      }
      while (v9 != v105);
      v9 = v105;
      v8 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_24A01F3B4();
  __break(1u);
}

uint64_t sub_249F8F058(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  float v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  float *v28;
  float *v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  float v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 16;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = v86;
        v89 = v85;
        do
        {
          v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90)
            break;
          if (!v84)
            goto LABEL_145;
          v91 = *(_QWORD *)v89;
          *(_OWORD *)v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(_QWORD *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_150;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_107:
      v93 = v12;
      v104 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_136;
          if (!v94)
            goto LABEL_149;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_249F90E3C((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_24A012ED4((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_138;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_139;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF918);
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v103 = *a1 + 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v105 = v6;
  v106 = v3;
  v107 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v103 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(float *)(v103 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_142;
        if (v14 < v10)
        {
          v19 = 16 * v10 - 16;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_148;
              v23 = (_OWORD *)(v11 + v16);
              v24 = (_OWORD *)(v11 + v19);
              v25 = *(_QWORD *)(v11 + v16);
              v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1)
                *v23 = *v24;
              v22 = v11 + v19;
              *(_QWORD *)v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v10, v14))
      goto LABEL_140;
    if (v10 - v14 >= v6)
      goto LABEL_50;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_143;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (float *)(v11 + 16 * v10);
      do
      {
        v29 = v28;
        v30 = v14;
        do
        {
          v31 = v29[2];
          if (*(v29 - 2) >= v31)
            break;
          if (!v11)
            goto LABEL_146;
          v32 = *(_QWORD *)v29;
          *(_OWORD *)v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((_QWORD *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_50:
    if (v10 < v14)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24A012ABC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v107;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_24A012ABC((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v107;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_124;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_125;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_127;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_130;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_134;
            v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_81;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_126;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_129;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_132;
        if (__OFADD__(v59, v64))
          goto LABEL_133;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_87:
          if (v65)
            v37 = v49;
          goto LABEL_89;
        }
LABEL_81:
        if ((v60 & 1) != 0)
          goto LABEL_128;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_131;
        if (v71 < v59)
          goto LABEL_15;
LABEL_89:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11)
          goto LABEL_147;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_249F90E3C((char *)(v11 + 16 * *(_QWORD *)v78), (char *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_97;
        if (v81 < v79)
          goto LABEL_121;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_122;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_123;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v107;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v10 >= v106)
    {
      v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249F8F748(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *__dst;

  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_130;
    if (v3)
      return sub_249F9087C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_138;
  v6 = result;
  v88 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_96:
      v80 = v12;
      v90 = v9;
      if (v13 >= 2)
      {
        v81 = *v88;
        do
        {
          v82 = v13 - 2;
          if (v13 < 2)
            goto LABEL_125;
          if (!v81)
            goto LABEL_137;
          v83 = v80;
          v84 = *(_QWORD *)&v80[16 * v82 + 32];
          v85 = *(_QWORD *)&v80[16 * v13 + 24];
          sub_249F910C4((char *)(v81 + 8 * v84), (char *)(v81 + 8 * *(_QWORD *)&v80[16 * v13 + 16]), v81 + 8 * v85, __dst);
          if (v1)
            break;
          if (v85 < v84)
            goto LABEL_126;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v83 = sub_24A012ED4((uint64_t)v83);
          if (v82 >= *((_QWORD *)v83 + 2))
            goto LABEL_127;
          v86 = &v83[16 * v82 + 32];
          *(_QWORD *)v86 = v84;
          *((_QWORD *)v86 + 1) = v85;
          v87 = *((_QWORD *)v83 + 2);
          if (v13 > v87)
            goto LABEL_128;
          memmove(&v83[16 * v13 + 16], &v83[16 * v13 + 32], 16 * (v87 - v13));
          v80 = v83;
          *((_QWORD *)v83 + 2) = v87 - 1;
          v13 = v87 - 1;
        }
        while (v87 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v90 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v90 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAB70);
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v90 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v89 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v91 = v6;
  v92 = v3;
  v93 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v10) + 16);
      v16 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v14) + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = v15;
        while (1)
        {
          v18 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v10) + 16);
          if (v16 < v15 == v17 >= v18)
            break;
          ++v10;
          v17 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_131;
        if (v14 < v10)
        {
          v19 = (uint64_t *)(v89 + 8 * v10);
          v20 = v10;
          v21 = v14;
          v22 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_136;
              v23 = *v22;
              *v22 = *v19;
              *v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_129;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v24 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_132;
    if (v24 >= v3)
      v24 = v3;
    if (v24 < v14)
      break;
    if (v10 != v24)
    {
      v25 = (_QWORD *)(v89 + 8 * v10);
      do
      {
        v26 = *(_QWORD *)(v11 + 8 * v10);
        v27 = v14;
        v28 = v25;
        do
        {
          v29 = *v28;
          if (*(_QWORD *)(*v28 + 16) >= *(_QWORD *)(v26 + 16))
            break;
          if (!v11)
            goto LABEL_134;
          *v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v10 != v27);
        ++v10;
        ++v25;
      }
      while (v10 != v24);
      v10 = v24;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_124;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24A012ABC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v31 = *((_QWORD *)v12 + 2);
    v30 = *((_QWORD *)v12 + 3);
    v13 = v31 + 1;
    v11 = v93;
    if (v31 >= v30 >> 1)
    {
      v79 = sub_24A012ABC((char *)(v30 > 1), v31 + 1, 1, v12);
      v11 = v93;
      v12 = v79;
    }
    *((_QWORD *)v12 + 2) = v13;
    v32 = v12 + 32;
    v33 = &v12[16 * v31 + 32];
    *(_QWORD *)v33 = v14;
    *((_QWORD *)v33 + 1) = v10;
    if (v31)
    {
      while (1)
      {
        v34 = v13 - 1;
        if (v13 >= 4)
        {
          v39 = &v32[16 * v13];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_113;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_114;
          v46 = v13 - 2;
          v47 = &v32[16 * v13 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_116;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_119;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_123;
            v62 = v37 < v72;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v63 = *((_QWORD *)v12 + 4);
            v64 = *((_QWORD *)v12 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_77;
          }
          v36 = *((_QWORD *)v12 + 4);
          v35 = *((_QWORD *)v12 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_115;
        v46 = v13 - 2;
        v52 = &v32[16 * v13 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_118;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_121;
        if (__OFADD__(v56, v61))
          goto LABEL_122;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_83:
          if (v62)
            v34 = v46;
          goto LABEL_85;
        }
LABEL_77:
        if ((v57 & 1) != 0)
          goto LABEL_117;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_120;
        if (v68 < v56)
          goto LABEL_15;
LABEL_85:
        v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11)
          goto LABEL_135;
        v74 = &v32[16 * v73];
        v75 = *(_QWORD *)v74;
        v76 = &v32[16 * v34];
        v77 = *((_QWORD *)v76 + 1);
        sub_249F910C4((char *)(v11 + 8 * *(_QWORD *)v74), (char *)(v11 + 8 * *(_QWORD *)v76), v11 + 8 * v77, __dst);
        if (v1)
          goto LABEL_93;
        if (v77 < v75)
          goto LABEL_110;
        if (v34 > *((_QWORD *)v12 + 2))
          goto LABEL_111;
        *(_QWORD *)v74 = v75;
        *(_QWORD *)&v32[16 * v73 + 8] = v77;
        v78 = *((_QWORD *)v12 + 2);
        if (v34 >= v78)
          goto LABEL_112;
        v13 = v78 - 1;
        memmove(&v32[16 * v34], v76 + 16, 16 * (v78 - 1 - v34));
        *((_QWORD *)v12 + 2) = v78 - 1;
        v11 = v93;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v91;
    v3 = v92;
    if (v10 >= v92)
    {
      v9 = v90;
      goto LABEL_96;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249F8FDA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v128 = *(_QWORD *)(v134 - 8);
  v3 = MEMORY[0x24BDAC7A8](v134);
  v125 = (uint64_t)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v135 = (uint64_t)&v120 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v132 = (uint64_t)&v120 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v131 = (uint64_t)&v120 - v9;
  v10 = a1[1];
  result = sub_24A01F438();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_138;
    if (v10)
      return sub_249F908E4(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_146;
  v133 = a1;
  v122 = result;
  v129 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x24BEE4AF8];
    v127 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    v121 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      v112 = v16;
      if (v18 >= 2)
      {
        v113 = *v133;
        do
        {
          v114 = v18 - 2;
          if (v18 < 2)
            goto LABEL_133;
          if (!v113)
            goto LABEL_145;
          v115 = *(_QWORD *)&v112[16 * v114 + 32];
          v116 = *(_QWORD *)&v112[16 * v18 + 24];
          v117 = v129;
          sub_249F91340(v113 + *(_QWORD *)(v128 + 72) * v115, v113 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v112[16 * v18 + 16], v113 + *(_QWORD *)(v128 + 72) * v116, v127);
          v129 = v117;
          if (v117)
            break;
          if (v116 < v115)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_24A012ED4((uint64_t)v112);
          if (v114 >= *((_QWORD *)v112 + 2))
            goto LABEL_135;
          v118 = &v112[16 * v114 + 32];
          *(_QWORD *)v118 = v115;
          *((_QWORD *)v118 + 1) = v116;
          v119 = *((_QWORD *)v112 + 2);
          if (v18 > v119)
            goto LABEL_136;
          memmove(&v112[16 * v18 + 16], &v112[16 * v18 + 32], 16 * (v119 - v18));
          *((_QWORD *)v112 + 2) = v119 - 1;
          v18 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_24A01EFC4();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v128 + 80);
    v121 = v14;
    v127 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      v21 = v133;
    }
    else
    {
      v21 = v133;
      v22 = *v133;
      v130 = v22;
      v23 = *(_QWORD *)(v128 + 72);
      v24 = v131;
      sub_249F9905C(v22 + v23 * v20, v131, &qword_2578FF8C8);
      v25 = v22 + v23 * v19;
      v26 = v132;
      sub_249F9905C(v25, v132, &qword_2578FF8C8);
      v27 = *(int *)(v134 + 48);
      v28 = *(float *)(v24 + v27);
      v29 = *(float *)(v26 + v27);
      sub_249F990A0(v26, &qword_2578FF8C8);
      sub_249F990A0(v24, &qword_2578FF8C8);
      v17 = v19 + 2;
      v136 = v23;
      if (v19 + 2 >= v10)
      {
        v38 = v23;
        if (v29 >= v28)
          goto LABEL_39;
      }
      else
      {
        v126 = v19;
        v123 = v16;
        v30 = v23 * v20;
        v31 = v130;
        v32 = v23 * v17;
        while (1)
        {
          v33 = v10;
          v34 = v17;
          v35 = v131;
          sub_249F9905C(v31 + v32, v131, &qword_2578FF8C8);
          v36 = v132;
          sub_249F9905C(v31 + v30, v132, &qword_2578FF8C8);
          v37 = *(float *)(v36 + *(int *)(v134 + 48)) >= *(float *)(v35 + *(int *)(v134 + 48));
          sub_249F990A0(v36, &qword_2578FF8C8);
          sub_249F990A0(v35, &qword_2578FF8C8);
          if (v29 < v28 == v37)
            break;
          ++v17;
          v38 = v136;
          v31 += v136;
          v10 = v33;
          if (v33 == v34 + 1)
          {
            v17 = v33;
            v21 = v133;
            v16 = v123;
            v19 = v126;
            if (v29 < v28)
              goto LABEL_26;
            goto LABEL_39;
          }
        }
        v21 = v133;
        v16 = v123;
        v19 = v126;
        v10 = v33;
        v38 = v136;
        if (v29 >= v28)
          goto LABEL_39;
      }
LABEL_26:
      if (v17 < v19)
        goto LABEL_139;
      if (v19 < v17)
      {
        v123 = v16;
        v124 = v10;
        v39 = 0;
        v40 = v38 * (v17 - 1);
        v41 = v17 * v38;
        v42 = v19;
        v126 = v19;
        v43 = v19 * v38;
        do
        {
          if (v42 != v17 + v39 - 1)
          {
            v44 = v130;
            if (!v130)
              goto LABEL_144;
            v45 = v130 + v43;
            sub_249F98C10(v130 + v43, v125, &qword_2578FF8C8);
            if (v43 < v40 || v45 >= v44 + v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v40)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_249F98C10(v125, v44 + v40, &qword_2578FF8C8);
            v21 = v133;
            v38 = v136;
          }
          ++v42;
          --v39;
          v40 -= v38;
          v41 -= v38;
          v43 += v38;
        }
        while (v42 < v17 + v39);
        v16 = v123;
        v10 = v124;
        v19 = v126;
      }
    }
LABEL_39:
    if (v17 >= v10)
      goto LABEL_56;
    if (__OFSUB__(v17, v19))
      goto LABEL_137;
    if (v17 - v19 >= v122)
      goto LABEL_56;
    if (__OFADD__(v19, v122))
      goto LABEL_140;
    v46 = v19 + v122 >= v10 ? v10 : v19 + v122;
    if (v46 < v19)
      break;
    if (v17 != v46)
    {
      v123 = v16;
      v124 = v46;
      v47 = *(_QWORD *)(v128 + 72);
      v136 = v47 * (v17 - 1);
      v130 = v47;
      v48 = v17 * v47;
      v126 = v19;
      do
      {
        v49 = 0;
        v50 = v19;
        do
        {
          v51 = *v21;
          v52 = v131;
          sub_249F9905C(v48 + v49 + *v21, v131, &qword_2578FF8C8);
          v53 = v136 + v49 + v51;
          v54 = v132;
          sub_249F9905C(v53, v132, &qword_2578FF8C8);
          v55 = *(int *)(v134 + 48);
          v56 = *(float *)(v52 + v55);
          v57 = *(float *)(v54 + v55);
          sub_249F990A0(v54, &qword_2578FF8C8);
          sub_249F990A0(v52, &qword_2578FF8C8);
          if (v57 >= v56)
            break;
          v58 = *v21;
          if (!*v21)
            goto LABEL_142;
          v59 = v58 + v136 + v49;
          sub_249F98C10(v58 + v48 + v49, v135, &qword_2578FF8C8);
          swift_arrayInitWithTakeFrontToBack();
          sub_249F98C10(v135, v59, &qword_2578FF8C8);
          v49 -= v130;
          ++v50;
          v21 = v133;
        }
        while (v17 != v50);
        ++v17;
        v136 += v130;
        v48 += v130;
        v19 = v126;
      }
      while (v17 != v124);
      v17 = v124;
      v16 = v123;
    }
LABEL_56:
    if (v17 < v19)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_24A012ABC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_24A012ABC((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_121;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_122;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_124;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_127;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_131;
            v92 = v67 < v102;
            goto LABEL_93;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_87;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_123;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_126;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_129;
        if (__OFADD__(v86, v91))
          goto LABEL_130;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_93:
          if (v92)
            v64 = v76;
          goto LABEL_95;
        }
LABEL_87:
        if ((v87 & 1) != 0)
          goto LABEL_125;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_128;
        if (v98 < v86)
          goto LABEL_14;
LABEL_95:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v133)
          goto LABEL_143;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v129;
        sub_249F91340(*v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v106, *v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v108, *v133 + *(_QWORD *)(v128 + 72) * v109, v127);
        v129 = v110;
        if (v110)
          goto LABEL_115;
        if (v109 < v107)
          goto LABEL_118;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_119;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_120;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v133[1];
    if (v17 >= v10)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

void sub_249F9078C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  signed int v12;
  signed int v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, sel_type);
      v13 = objc_msgSend(v11, sel_type);

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_249F9087C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(_QWORD *)(*v8 + 16) >= *(_QWORD *)(v6 + 16))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249F908E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v7 = MEMORY[0x24BDAC7A8](v32);
  v33 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = (uint64_t)&v26 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v26 - v13;
  v31 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v35 = v15 * (v31 - 1);
    v30 = v15;
    v34 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v28;
    while (1)
    {
      v18 = *a4;
      sub_249F9905C(v34 + v16 + *a4, (uint64_t)v14, &qword_2578FF8C8);
      v19 = v35 + v16 + v18;
      v20 = v29;
      sub_249F9905C(v19, v29, &qword_2578FF8C8);
      v21 = *(int *)(v32 + 48);
      v22 = *(float *)&v14[v21];
      v23 = *(float *)(v20 + v21);
      sub_249F990A0(v20, &qword_2578FF8C8);
      result = sub_249F990A0((uint64_t)v14, &qword_2578FF8C8);
      if (v23 >= v22)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v27)
          return result;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v35 + v16;
      sub_249F98C10(v24 + v34 + v16, v33, &qword_2578FF8C8);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_249F98C10(v33, v25, &qword_2578FF8C8);
      v16 -= v30;
      if (v31 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249F90B20(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  signed int v18;
  signed int v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  signed int v29;
  signed int v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, sel_type);
          v30 = objc_msgSend(v28, sel_type);

          if (v29 >= v30)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_type);
        v19 = objc_msgSend(v17, sel_type);

        if (v18 >= v19)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_24A012BB8((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F90E3C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v26 = __dst;
  v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      v19 = 16 * v13;
      if (__dst != a2 || &a2[v19] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v20 = &v4[v19];
      v25 = &v4[v19];
      v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        v21 = (char *)(a3 - 16);
        do
        {
          v22 = v21 + 16;
          if (*((float *)v6 - 2) >= *((float *)v20 - 2))
          {
            v25 = v20 - 16;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
              *(_OWORD *)v21 = *((_OWORD *)v20 - 1);
            v23 = v6;
            v20 -= 16;
            if (v6 <= v7)
              break;
          }
          else
          {
            v23 = v6 - 16;
            if (v22 != v6 || v21 >= v6)
              *(_OWORD *)v21 = *(_OWORD *)v23;
            v27 = v6 - 16;
            if (v23 <= v7)
              break;
          }
          v21 -= 16;
          v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_24A012BB4(&v27, &v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    v14 = 16 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14);
    v15 = &v4[v14];
    v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v16 = v4;
      while (1)
      {
        if (*((float *)v16 + 2) >= *((float *)v6 + 2))
        {
          v4 = v16 + 16;
          v18 = v16;
          v17 = v6;
          if (v7 == v16)
          {
            v16 += 16;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v16 += 16;
          }
        }
        else
        {
          v17 = v6 + 16;
          v18 = v6;
          if (v7 == v6 && v7 < v17)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 16;
        if (v16 < v15)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v26 = v4;
        v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F910C4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(_QWORD *)(v20 + 16) >= *(_QWORD *)(*((_QWORD *)v16 - 1) + 16))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)v4 + 16) >= *(_QWORD *)(*(_QWORD *)v6 + 16))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24A012DAC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F91340(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  float v22;
  float v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  float v35;
  float v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8C8);
  v8 = MEMORY[0x24BDAC7A8](v42);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v45 = a1;
  v44 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v19;
      v43 = a4 + v19;
      v45 = a2;
      v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v31 = -v14;
        do
        {
          v32 = a3 + v31;
          sub_249F9905C(v29 + v31, (uint64_t)v12, &qword_2578FF8C8);
          v33 = a2 + v31;
          sub_249F9905C(a2 + v31, (uint64_t)v10, &qword_2578FF8C8);
          v34 = *(int *)(v42 + 48);
          v35 = *(float *)&v12[v34];
          v36 = *(float *)&v10[v34];
          sub_249F990A0((uint64_t)v10, &qword_2578FF8C8);
          sub_249F990A0((uint64_t)v12, &qword_2578FF8C8);
          if (v36 >= v35)
          {
            v37 = v43;
            v43 += v31;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 += v31;
          }
          v29 = v43;
          if (v43 <= a4)
            break;
          a2 = v33;
          a3 += v31;
        }
        while (v33 > v41);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = a4 + v18;
    v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_249F9905C(a2, (uint64_t)v12, &qword_2578FF8C8);
        sub_249F9905C(a4, (uint64_t)v10, &qword_2578FF8C8);
        v21 = *(int *)(v42 + 48);
        v22 = *(float *)&v12[v21];
        v23 = *(float *)&v10[v21];
        sub_249F990A0((uint64_t)v10, &qword_2578FF8C8);
        sub_249F990A0((uint64_t)v12, &qword_2578FF8C8);
        v24 = v45;
        if (v23 >= v22)
        {
          v27 = v44 + v14;
          if (v45 < v44 || v45 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v44 = v27;
          v25 = a2;
        }
        else
        {
          v25 = a2 + v14;
          if (v45 < a2 || v45 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v45 = v24 + v14;
        a4 = v44;
        if (v44 >= v41)
          break;
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_24A012DB0(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_72:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

void sub_249F917C0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_DWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  v11 = sub_249F8B27C(v7);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_249FC226C();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    *(_QWORD *)(v20[6] + 8 * v11) = v7;
    *(_DWORD *)(v20[7] + 4 * v11) = v8;
    v21 = v20[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v23;
    v24 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v25 = (_DWORD *)(a1 + 56);
    while (1)
    {
      v26 = *((_QWORD *)v25 - 1);
      v27 = *v25;
      v28 = (_QWORD *)*a3;
      v29 = sub_249F8B27C(v26);
      v31 = v28[2];
      v32 = (v30 & 1) == 0;
      v22 = __OFADD__(v31, v32);
      v33 = v31 + v32;
      if (v22)
        break;
      v34 = v30;
      if (v28[3] < v33)
      {
        sub_249FBA62C(v33, 1);
        v29 = sub_249F8B27C(v26);
        if ((v34 & 1) != (v35 & 1))
          goto LABEL_25;
      }
      if ((v34 & 1) != 0)
        goto LABEL_10;
      v36 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v29 >> 6) + 64) |= 1 << v29;
      *(_QWORD *)(v36[6] + 8 * v29) = v26;
      *(_DWORD *)(v36[7] + 4 * v29) = v27;
      v37 = v36[2];
      v22 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (v22)
        goto LABEL_24;
      v25 += 4;
      v36[2] = v38;
      if (!--v24)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_249FBA62C(v14, a2 & 1);
  v16 = sub_249F8B27C(v7);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8A0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24A01F48C();
  __break(1u);
LABEL_26:
  sub_24A01F2F4();
  sub_24A01EEBC();
  sub_24A01F3A8();
  sub_24A01EEBC();
  sub_24A01F3C0();
  __break(1u);
}

void sub_249F91B04(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = a1[4];
  v40 = a1[5];
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v10 = sub_249F8B27C(v7);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
    goto LABEL_23;
  v14 = v9;
  if (v8[3] >= v13)
  {
    if ((a2 & 1) != 0)
    {
      if ((v9 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_249FC20E0();
      if ((v14 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v19[6] + v20) = v7;
    *(_QWORD *)(v19[7] + v20) = v40;
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v23;
    v24 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v25 = a1 + 7;
    while (1)
    {
      v26 = *(v25 - 1);
      v27 = *v25;
      v28 = (_QWORD *)*a3;
      v29 = sub_249F8B27C(v26);
      v31 = v28[2];
      v32 = (v30 & 1) == 0;
      v22 = __OFADD__(v31, v32);
      v33 = v31 + v32;
      if (v22)
        break;
      v34 = v30;
      if (v28[3] < v33)
      {
        sub_249FBA388(v33, 1);
        v29 = sub_249F8B27C(v26);
        if ((v34 & 1) != (v35 & 1))
          goto LABEL_25;
      }
      if ((v34 & 1) != 0)
        goto LABEL_10;
      v36 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v29 >> 6) + 64) |= 1 << v29;
      v37 = 8 * v29;
      *(_QWORD *)(v36[6] + v37) = v26;
      *(_QWORD *)(v36[7] + v37) = v27;
      v38 = v36[2];
      v22 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v22)
        goto LABEL_24;
      v25 += 2;
      v36[2] = v39;
      if (!--v24)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_249FBA388(v13, a2 & 1);
  v15 = sub_249F8B27C(v7);
  if ((v14 & 1) == (v16 & 1))
  {
    v10 = v15;
    if ((v14 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v17 = (void *)swift_allocError();
    swift_willThrow();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8A0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24A01F48C();
  __break(1u);
LABEL_26:
  sub_24A01F2F4();
  sub_24A01EEBC();
  sub_24A01F3A8();
  sub_24A01EEBC();
  sub_24A01F3C0();
  __break(1u);
}

uint64_t sub_249F91E48(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_249F91EE8(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_249F91FCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_24A01F264() == *(_DWORD *)(a4 + 36))
      {
        sub_24A01F270();
        sub_249F990DC(0, &qword_2544CAB98);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_24A01F1C8();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_24A01F1D4();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_24A01F1D4();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x24BD07158](a1, a2, v7);
  sub_249F990DC(0, &qword_2544CAB98);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_249F92234(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_249F922BC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VUGallery.Context(uint64_t a1)
{
  return sub_249F93C98(a1, (uint64_t *)&unk_2544CACE8);
}

uint64_t type metadata accessor for VUGallery.RecognitionResult(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CAD48);
}

uint64_t sub_249F92338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F779D4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_249F92358(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_249F9239C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249F77B54(*(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_249F923B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_249F923D8()
{
  return sub_249F7813C();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_249F923FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_249F98DEC(a1);
}

uint64_t sub_249F92410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F77760(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), a1);
}

uint64_t sub_249F92438(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249F92358(a1, a2);
  return a1;
}

uint64_t sub_249F9244C@<X0>(uint64_t *a1@<X8>)
{
  return sub_249F78290(a1);
}

void sub_249F92464(uint64_t *a1@<X8>)
{
  sub_249F78304(a1);
}

void sub_249F92494(uint64_t *a1@<X8>)
{
  sub_249F78304(a1);
}

void sub_249F924CC(uint64_t *a1@<X8>)
{
  sub_249F783B8(a1);
}

void sub_249F924E4(uint64_t *a1@<X8>)
{
  sub_249F784B0(a1);
}

void sub_249F924FC(uint64_t *a1@<X8>)
{
  sub_249F785A8(a1);
}

uint64_t sub_249F92514@<X0>(uint64_t *a1@<X8>)
{
  return sub_249F786A0(a1);
}

uint64_t sub_249F9252C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  v2 = sub_249FCCD90();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_249F9257C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F78714(v1, a1);
}

uint64_t sub_249F92594@<X0>(uint64_t *a1@<X8>)
{
  return sub_249F788F0(2u, a1);
}

uint64_t sub_249F925B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_249F788F0(0x3Fu, a1);
}

id sub_249F925CC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) + 16), sel_reset);
}

uint64_t sub_249F92604(float a1)
{
  uint64_t v1;
  uint64_t (*v2)(float *);
  char v3;
  float v5;

  v2 = *(uint64_t (**)(float *))(v1 + 16);
  if (v2)
  {
    v5 = a1;
    v3 = v2(&v5);
  }
  else
  {
    v3 = 1;
  }
  return v3 & 1;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_249F926A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F92794(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2B8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F928A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

char *sub_249F929B8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F92AA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA2A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F92BA8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v35 = a3;
  v5 = type metadata accessor for VUGallery.EntityView(0);
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (!v8)
    return v9;
  v28 = v3;
  v36 = MEMORY[0x24BEE4AF8];
  sub_249F8CAC4(0, v8, 0);
  v9 = v36;
  result = sub_249F9B4AC(a1);
  v12 = result;
  v13 = 0;
  v14 = a1 + 64;
  v29 = a1 + 80;
  v30 = v8;
  v31 = v11;
  v32 = a1 + 64;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
  {
    v17 = (unint64_t)v12 >> 6;
    if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
      goto LABEL_24;
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v34(v18, v19);
    swift_bridgeObjectRelease();
    v36 = v9;
    v20 = (uint64_t)v7;
    v22 = *(_QWORD *)(v9 + 16);
    v21 = *(_QWORD *)(v9 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_249F8CAC4(v21 > 1, v22 + 1, 1);
      v9 = v36;
    }
    *(_QWORD *)(v9 + 16) = v22 + 1;
    result = sub_249F98928(v20, v9+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v22, type metadata accessor for VUGallery.EntityView);
    v15 = 1 << *(_BYTE *)(a1 + 32);
    if (v12 >= v15)
      goto LABEL_25;
    v14 = v32;
    v23 = *(_QWORD *)(v32 + 8 * v17);
    if ((v23 & (1 << v12)) == 0)
      goto LABEL_26;
    LODWORD(v11) = v31;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v31)
      goto LABEL_27;
    v7 = (char *)v20;
    v24 = v23 & (-2 << (v12 & 0x3F));
    if (v24)
    {
      v15 = __clz(__rbit64(v24)) | v12 & 0xFFFFFFFFFFFFFFC0;
      v16 = v30;
    }
    else
    {
      v25 = v17 + 1;
      v26 = (unint64_t)(v15 + 63) >> 6;
      v16 = v30;
      if (v17 + 1 < v26)
      {
        v27 = *(_QWORD *)(v32 + 8 * v25);
        if (v27)
        {
LABEL_20:
          v15 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v17)
          {
            v27 = *(_QWORD *)(v29 + 8 * v17++);
            if (v27)
            {
              v25 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v13;
    v12 = v15;
    if (v13 == v16)
      return v9;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249F92E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for VUGallery.TagView(0);
  v26 = *((_QWORD *)v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = v2;
    v29 = MEMORY[0x24BEE4AF8];
    sub_249F8C9EC(0, v10, 0);
    v11 = v29;
    v12 = (char *)(a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    v25 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
    v24 = *(_QWORD *)(v5 + 72);
    v13 = sub_24A01EBA4();
    v23 = *(_QWORD *)(v13 - 8);
    v22 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    do
    {
      v14 = *(int *)(v28 + 64);
      v15 = &v27[v14];
      v16 = *(int *)(v28 + 80);
      v17 = *(_QWORD *)v12;
      v22(&v27[v14], &v12[v14], v13);
      LOBYTE(v16) = v12[v16];
      *v9 = v25;
      (*(void (**)(_BYTE *, char *, uint64_t))(v23 + 32))(&v9[v7[5]], v15, v13);
      v9[v7[6]] = v16;
      *(_QWORD *)&v9[v7[7]] = v17;
      v29 = v11;
      v19 = *(_QWORD *)(v11 + 16);
      v18 = *(_QWORD *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_249F8C9EC(v18 > 1, v19 + 1, 1);
        v11 = v29;
      }
      v12 += v24;
      *(_QWORD *)(v11 + 16) = v19 + 1;
      sub_249F98928((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v19, type metadata accessor for VUGallery.TagView);
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_249F93060(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for VUGallery.ObservationView(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
      return v9;
    v17 = MEMORY[0x24BEE4AF8];
    result = sub_249F8CB1C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v16[1] = v2;
    v11 = 0;
    v9 = v17;
    v2 = a1 & 0xC000000000000001;
    while (v8 != v11)
    {
      if (v2)
        v12 = (id)MEMORY[0x24BD071F4](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      sub_249F8039C(v12, 0, (uint64_t)v7);

      v17 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_249F8CB1C(v14 > 1, v15 + 1, 1);
        v9 = v17;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v15 + 1;
      sub_249F98928((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15, type metadata accessor for VUGallery.ObservationView);
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v8 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_249F93210(unint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v4 = v3;
  LOBYTE(v5) = a3;
  v7 = type metadata accessor for VUGallery.ObservationView(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    if (!v11)
      return v12;
    v21 = MEMORY[0x24BEE4AF8];
    result = sub_249F8CB1C(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
      break;
    v14 = 0;
    v12 = v21;
    v19 = v4;
    v20 = a1 & 0xC000000000000001;
    v5 &= 1u;
    v15 = a1;
    while (v11 != v14)
    {
      if (v20)
        v16 = (id)MEMORY[0x24BD071F4](v14, a1);
      else
        v16 = *(id *)(a1 + 8 * v14 + 32);
      v17 = v16;
      sub_249F8039C(v16, v5, (uint64_t)v10);

      v21 = v12;
      v4 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v4 >= v18 >> 1)
      {
        sub_249F8CB1C(v18 > 1, v4 + 1, 1);
        v12 = v21;
      }
      ++v14;
      *(_QWORD *)(v12 + 16) = v4 + 1;
      sub_249F98928((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v4, type metadata accessor for VUGallery.ObservationView);
      a1 = v15;
      if (v11 == v14)
        return v12;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v11 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_249F933D4(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v19 = MEMORY[0x24BEE4AF8];
  sub_249F8C9C8(0, v2, 0);
  v3 = v19;
  result = sub_249F91E48(a1);
  v7 = result;
  v9 = v8;
  v11 = v10 & 1;
  v18 = a2;
  while ((v11 & 1) == 0)
  {
    if (v7 < 0 || v7 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      break;
    }
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_16;
    if (*(_DWORD *)(a1 + 36) != v9)
      goto LABEL_17;
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_18;
    result = sub_249F8B27C(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v7));
    if ((v12 & 1) == 0)
      goto LABEL_19;
    v13 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * result);
    v15 = *(_QWORD *)(v19 + 16);
    v14 = *(_QWORD *)(v19 + 24);
    if (v15 >= v14 >> 1)
      sub_249F8C9C8(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v19 + 16) = v15 + 1;
    *(_QWORD *)(v19 + 8 * v15 + 32) = v13;
    result = sub_249F91EE8(v7, v9, 0, a1);
    v7 = result;
    v9 = v16;
    v11 = v17 & 1;
    --v2;
    a2 = v18;
    if (!v2)
    {
      sub_249F939E4(result, v16, v11);
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249F93568(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F93658(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

id sub_249F93748()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  objc_super v14;
  _BYTE v15[24];
  uint64_t v16;

  v1 = OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_token] = 0;
  v2 = &v0[OBJC_IVAR____TtCC19VisualUnderstanding9VUGallery8Bookmark_changeID];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CABB8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v3 + 32) = sub_249F990DC(0, &qword_2544CABB0);
  v4 = v0;
  sub_24A01F1A4();
  swift_bridgeObjectRelease();
  if (v16)
  {
    v5 = swift_dynamicCast();
    v6 = v13;
    if (!v5)
      v6 = 0;
  }
  else
  {
    sub_249F990A0((uint64_t)v15, &qword_2544CAF40);
    v6 = 0;
  }
  v7 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v6;

  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v8 + 32) = sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
  sub_24A01F1A4();
  swift_bridgeObjectRelease();
  if (v16)
  {
    v9 = swift_dynamicCast();
    v10 = v13;
    if (!v9)
      v10 = 0;
    v11 = v9 ^ 1;
  }
  else
  {
    sub_249F990A0((uint64_t)v15, &qword_2544CAF40);
    v10 = 0;
    v11 = 1;
  }
  *(_QWORD *)v2 = v10;
  v2[8] = v11;

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for VUGallery.Bookmark();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for VUGallery.Bookmark()
{
  return objc_opt_self();
}

uint64_t sub_249F93974()
{
  uint64_t v0;

  return sub_249F7AE00(v0);
}

unint64_t sub_249F9398C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544CABA0;
  if (!qword_2544CABA0)
  {
    v1 = sub_249F990DC(255, &qword_2544CAB98);
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2544CABA0);
  }
  return result;
}

uint64_t sub_249F939E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_249F939F0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249FD0AD4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93A08(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_249F93A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_249F93A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7CA6C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t type metadata accessor for VUGallery.ChangeSequence()
{
  return objc_opt_self();
}

void sub_249F93AB0()
{
  uint64_t v0;

  sub_249F7CD94(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for VUGallery.EntityView(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CA3A8);
}

uint64_t sub_249F93AE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7CFB8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93AF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7DAC4(v1, a1);
}

uint64_t sub_249F93B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7DCB4(v1, a1);
}

uint64_t type metadata accessor for VUGallery.TagView(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CABF0);
}

uint64_t sub_249F93B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F7DF80(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93B54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7E1BC(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_249F93B74@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7E47C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93B8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7E814(v1, a1);
}

uint64_t sub_249F93BA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7EBF8(*(_QWORD *)(v1 + 16), *(_WORD *)(v1 + 24), a1);
}

uint64_t sub_249F93BC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7EFE0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_WORD *)(v1 + 32), a1);
}

uint64_t sub_249F93BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7F3D4(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_249F93BFC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7F994(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_249F93C1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7FB60(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93C34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7FE2C(v1, a1);
}

uint64_t sub_249F93C4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F7FF9C(*(_QWORD *)(v1 + 16), a1);
}

void sub_249F93C68(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249F800E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for VUGallery.ObservationView(uint64_t a1)
{
  return sub_249F93C98(a1, (uint64_t *)&unk_2578FF6C8);
}

uint64_t sub_249F93C98(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249F93CCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249F93CE0(a1, a2);
  return a1;
}

uint64_t sub_249F93CE0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_249F93D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F80CE0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_249F93D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F80F14(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

void sub_249F93D5C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249F811E8(*(_QWORD *)(v1 + 16), a1);
}

void sub_249F93D78(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249F81374(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_249F93DD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F815D4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_249F93DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F816BC(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_249F93E0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(unsigned __int8 *)(v1 + 48);
  swift_retain();
  v7 = sub_249FF9AE8(v3, v4, v5, v6);
  result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_249F93E80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249F8198C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F93E98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F822EC(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_249F93EB4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F83170(*(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int16 *)(v1 + 20) << 32), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_249F93EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_249F84CDC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_249F93F00@<X0>(uint64_t a1@<X8>)
{
  return sub_249F98B48(a1);
}

uint64_t sub_249F93F14()
{
  return sub_249F85974();
}

uint64_t sub_249F93F20()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249F93F44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F93F50()
{
  uint64_t *v0;

  return sub_249F88880(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_249F93F5C()
{
  return swift_deallocObject();
}

uint64_t sub_249F93F6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249F93FBC()
{
  return swift_deallocObject();
}

uint64_t sub_249F93FCC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249F88E50(*(_BYTE *)(v1 + 16), *(_BYTE *)(v1 + 17), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_249F93FEC()
{
  uint64_t *v0;

  return sub_249F89338(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_249F9400C()
{
  unint64_t result;

  result = qword_2578FF5A0;
  if (!qword_2578FF5A0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.Client, &type metadata for VUGallery.Client);
    atomic_store(result, (unint64_t *)&qword_2578FF5A0);
  }
  return result;
}

unint64_t sub_249F94054()
{
  unint64_t result;

  result = qword_2578FF5A8;
  if (!qword_2578FF5A8)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.Source, &type metadata for VUGallery.Source);
    atomic_store(result, (unint64_t *)&qword_2578FF5A8);
  }
  return result;
}

unint64_t sub_249F9409C()
{
  unint64_t result;

  result = qword_2578FF5B0;
  if (!qword_2578FF5B0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.EntityClass, &type metadata for VUGallery.EntityClass);
    atomic_store(result, (unint64_t *)&qword_2578FF5B0);
  }
  return result;
}

unint64_t sub_249F940E4()
{
  unint64_t result;

  result = qword_2578FF5B8;
  if (!qword_2578FF5B8)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.RecognitionPreset, &type metadata for VUGallery.RecognitionPreset);
    atomic_store(result, (unint64_t *)&qword_2578FF5B8);
  }
  return result;
}

unint64_t sub_249F9412C()
{
  unint64_t result;

  result = qword_2578FF5C0;
  if (!qword_2578FF5C0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.UpdateMode, &type metadata for VUGallery.UpdateMode);
    atomic_store(result, (unint64_t *)&qword_2578FF5C0);
  }
  return result;
}

uint64_t sub_249F94170(uint64_t a1, uint64_t a2)
{
  return sub_249F9419C(&qword_2578FF5C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for VUGallery.ChangeSequence, (uint64_t)&protocol conformance descriptor for VUGallery.ChangeSequence);
}

uint64_t sub_249F9419C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24BD078A8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249F941E0()
{
  unint64_t result;

  result = qword_2578FF5D0;
  if (!qword_2578FF5D0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.ResetType, &type metadata for VUGallery.ResetType);
    atomic_store(result, (unint64_t *)&qword_2578FF5D0);
  }
  return result;
}

uint64_t sub_249F94224()
{
  return sub_249F98C68(&qword_2578FF5D8, &qword_2578FF5E0, MEMORY[0x24BEE2C18]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD0789C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_249F94298()
{
  unint64_t result;

  result = qword_2578FF5E8;
  if (!qword_2578FF5E8)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.SimilarityMetric, &type metadata for VUGallery.SimilarityMetric);
    atomic_store(result, (unint64_t *)&qword_2578FF5E8);
  }
  return result;
}

unint64_t sub_249F942E0()
{
  unint64_t result;

  result = qword_2578FF5F0;
  if (!qword_2578FF5F0)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGallery.EvaluationType, &type metadata for VUGallery.EvaluationType);
    atomic_store(result, (unint64_t *)&qword_2578FF5F0);
  }
  return result;
}

uint64_t sub_249F94324()
{
  return type metadata accessor for VUGallery(0);
}

uint64_t sub_249F9432C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_24A01ED48();
  if (v1 <= 0x3F)
  {
    result = sub_24A01EAA8();
    if (v2 <= 0x3F)
    {
      result = sub_24A01EDA8();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for VUGallery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VUGallery.ready.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of VUGallery.isReady(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of VUGallery.version.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of VUGallery.version(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of VUGallery.faceprintRevision.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of VUGallery.torsoprintRevision.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of VUGallery.animalprintRevision.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of VUGallery.sceneprintRevision.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of VUGallery.personParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of VUGallery.animalParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of VUGallery.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of VUGallery.lastUpdated(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of VUGallery.parameters(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of VUGallery.numClusteringNeighbors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of VUGallery.classificationThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of VUGallery.contextualScalingFactor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of VUGallery.rankedDensityExponent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of VUGallery.__allocating_init(for:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of VUGallery.prewarm()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of VUGallery.recognize(observation:context:preset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of VUGallery.observationsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of VUGallery.primaryCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of VUGallery.secondaryCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of VUGallery.personObservationsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of VUGallery.animalObservationsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of VUGallery.sceneObservationsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of VUGallery.tagsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of VUGallery.entityCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of VUGallery.observationsCountPerEntity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of VUGallery.personEntitiesCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of VUGallery.animalEntitiesCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of VUGallery.mutate(for:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of VUGallery.mutate(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of VUGallery.update(progressHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of VUGallery.update(force:progressHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of VUGallery.update(_:force:progressHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of VUGallery.update(_:threshold:progressHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of VUGallery.update(_:using:threshold:mode:force:progressHandler:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)v3 + 512))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t dispatch thunk of VUGallery.update(plugin:progressHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of VUGallery.bookmark.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of VUGallery.changes(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of VUGallery.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of VUGallery.reset(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of VUGallery.entities(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of VUGallery.unassignedObservations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of VUGallery.matchOnlyObservations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of VUGallery.tag(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of VUGallery.entity(for:client:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of VUGallery.tags(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of VUGallery.tags()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of VUGallery.tags(label:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of VUGallery.tags(matching:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of VUGallery.contains(tag:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of VUGallery.entityIdentifier(matching:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of VUGallery.assets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of VUGallery.assets(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of VUGallery.assetCount(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of VUGallery.observations(for:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 712))(a1, a2 & 1);
}

uint64_t dispatch thunk of VUGallery.observations(identifiers:embeddings:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of VUGallery.keyObservation(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of VUGallery.keyObservations(for:limit:offset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of VUGallery.keyObservations(for:sortBy:limit:offset:assetsOnly:primaryOnly:confidenceThreshold:qualityThreshold:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)v8 + 744))(a1, a2, a3, a4, a5, a6, a7 | ((HIDWORD(a7) & 1) << 32), a8 | ((HIDWORD(a8) & 1) << 32));
}

uint64_t dispatch thunk of VUGallery.similarity(between:and:metric:)()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of VUGallery.neighbors(of:for:includeDuplicates:limit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of VUGallery.similarEntities(to:metric:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of VUGallery.similarEntities(to:limit:offset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of VUGallery.clusters(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of VUGallery.cluster(_:assets:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of VUGallery.evaluate(with:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of VUGallery.evaluate(with:for:type:includePerEntityMetrics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of VUGallery.reportMetrics()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of VUGallery.countPerEntity(for:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of VUGallery.updateMetadata(for:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VUGallery.Client(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.Client(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_249F94A60 + 4 * byte_24A01FDC1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_249F94A94 + 4 * byte_24A01FDBC[v4]))();
}

uint64_t sub_249F94A94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F94A9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249F94AA4);
  return result;
}

uint64_t sub_249F94AB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249F94AB8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_249F94ABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F94AC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.Client()
{
  return &type metadata for VUGallery.Client;
}

ValueMetadata *type metadata accessor for VUGallery.Source()
{
  return &type metadata for VUGallery.Source;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUGallery.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A01EBA4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for VUGallery.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = sub_24A01EBA4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *initializeWithCopy for VUGallery.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for VUGallery.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for VUGallery.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for VUGallery.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F952F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 3u)
    v9 = 3;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 3;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 3u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VUGallery.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F9538C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

void sub_249F95408()
{
  unint64_t v0;

  sub_249F9547C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249F9547C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2544CC178)
  {
    sub_24A01EBA4();
    v0 = sub_24A01F1EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2544CC178);
  }
}

uint64_t getEnumTagSinglePayload for VUGallery.EntityClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.EntityClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249F955AC + 4 * byte_24A01FDCB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249F955E0 + 4 * byte_24A01FDC6[v4]))();
}

uint64_t sub_249F955E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F955E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249F955F0);
  return result;
}

uint64_t sub_249F955FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249F95604);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249F95608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F95610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F9561C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_249F95624(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.EntityClass()
{
  return &type metadata for VUGallery.EntityClass;
}

uint64_t getEnumTagSinglePayload for VUGalleryUpdateType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19VisualUnderstanding9VUGalleryC6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249F95718 + 4 * byte_24A01FDD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249F9574C + 4 * byte_24A01FDD0[v4]))();
}

uint64_t sub_249F9574C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F95754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249F9575CLL);
  return result;
}

uint64_t sub_249F95768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249F95770);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249F95774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F9577C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.RecognitionPreset()
{
  return &type metadata for VUGallery.RecognitionPreset;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUGallery.RecognitionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24A01EBA4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_DWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for VUGallery.RecognitionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_24A01EBA4();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *initializeWithCopy for VUGallery.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for VUGallery.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *initializeWithTake for VUGallery.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for VUGallery.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.RecognitionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F95D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for VUGallery.RecognitionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F95D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_249F95DA4()
{
  sub_249F96528();
}

ValueMetadata *type metadata accessor for VUGallery.ProgressStatus()
{
  return &type metadata for VUGallery.ProgressStatus;
}

_BYTE *sub_249F95DCC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.UpdateMode()
{
  return &type metadata for VUGallery.UpdateMode;
}

uint64_t method lookup function for VUGallery.Bookmark()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VUGallery.Bookmark.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of VUGallery.Bookmark.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of VUGallery.Bookmark.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t method lookup function for VUGallery.ChangeSequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VUGallery.ChangeSequence.bookmark.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VUGallery.ChangeSequence.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

ValueMetadata *type metadata accessor for VUGallery.ResetType()
{
  return &type metadata for VUGallery.ResetType;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUGallery.EntityView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24A01EBA4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VUGallery.EntityView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_24A01EBA4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VUGallery.EntityView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VUGallery.EntityView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for VUGallery.EntityView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for VUGallery.EntityView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.EntityView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F96408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.EntityView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F96498(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_249F96518()
{
  sub_249F96528();
}

void sub_249F96528()
{
  unint64_t v0;

  sub_249F9547C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for VUGallery.EntitySequence(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VUGallery.EntitySequence(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for VUGallery.EntitySequence(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

id *assignWithTake for VUGallery.EntitySequence(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.EntitySequence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.EntitySequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.EntitySequence()
{
  return &type metadata for VUGallery.EntitySequence;
}

_QWORD *initializeBufferWithCopyOfBuffer for VUGallery.TagView(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_24A01EBA4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v11) = *(_QWORD *)((char *)a2 + v11);
  }
  return v4;
}

uint64_t destroy for VUGallery.TagView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_24A01EBA4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for VUGallery.TagView(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24A01EBA4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

_BYTE *assignWithCopy for VUGallery.TagView(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24A01EBA4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

_BYTE *initializeWithTake for VUGallery.TagView(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24A01EBA4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

_BYTE *assignWithTake for VUGallery.TagView(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24A01EBA4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.TagView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F96A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VUGallery.TagView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F96AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A01EBA4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_249F96B40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A01EBA4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for VUGallery.ObservationView(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v8 = a3[9];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_24A01EBA4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[11];
    *(_DWORD *)((char *)v4 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)((char *)v4 + v16) = *(_DWORD *)((char *)a2 + v16);
    v17 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *(_DWORD *)((char *)v4 + v18) = *(_DWORD *)((char *)a2 + v18);
    v19 = a3[17];
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    v20 = a3[18];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t *)((char *)a2 + v20);
    *(_DWORD *)((char *)v4 + v19) = *(_DWORD *)((char *)a2 + v19);
    v23 = v22[1];
    if (v23 >> 60 == 15)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    else
    {
      v24 = *v22;
      sub_249F93CE0(*v22, v22[1]);
      *(_QWORD *)v21 = v24;
      *((_QWORD *)v21 + 1) = v23;
    }
    v25 = a3[19];
    v26 = (char *)v4 + v25;
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    else
    {
      v29 = *v27;
      sub_249F93CE0(*v27, v27[1]);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
    }
  }
  return v4;
}

uint64_t destroy for VUGallery.ObservationView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = (uint64_t *)(a1 + a2[18]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    result = sub_249F92358(*v8, v9);
  v10 = (uint64_t *)(a1 + a2[19]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    return sub_249F92358(*v10, v11);
  return result;
}

uint64_t initializeWithCopy for VUGallery.ObservationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24A01EBA4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  v15 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v16) = *(_DWORD *)(a2 + v16);
  v17 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v18 = a3[18];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  *(_DWORD *)(a1 + v17) = *(_DWORD *)(a2 + v17);
  v21 = v20[1];
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  else
  {
    v22 = *v20;
    sub_249F93CE0(*v20, v20[1]);
    *(_QWORD *)v19 = v22;
    *(_QWORD *)(v19 + 8) = v21;
  }
  v23 = a3[19];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = v25[1];
  if (v26 >> 60 == 15)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v27 = *v25;
    sub_249F93CE0(*v25, v25[1]);
    *(_QWORD *)v24 = v27;
    *(_QWORD *)(v24 + 8) = v26;
  }
  return a1;
}

uint64_t assignWithCopy for VUGallery.ObservationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  v15 = a3[18];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_249F93CE0(v19, v18);
      *v16 = v19;
      v16[1] = v18;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v18 >> 60 == 15)
  {
    sub_249F972D0((uint64_t)v16);
LABEL_12:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_14;
  }
  v20 = *v17;
  sub_249F93CE0(v20, v18);
  v21 = *v16;
  v22 = v16[1];
  *v16 = v20;
  v16[1] = v18;
  sub_249F92358(v21, v22);
LABEL_14:
  v23 = a3[19];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_249F93CE0(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_249F92358(v29, v30);
      return a1;
    }
    sub_249F972D0((uint64_t)v24);
    goto LABEL_19;
  }
  if (v26 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  v27 = *v25;
  sub_249F93CE0(v27, v26);
  *v24 = v27;
  v24[1] = v26;
  return a1;
}

uint64_t sub_249F972D0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for VUGallery.ObservationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v13 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  v15 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_DWORD *)(a1 + v15) = *(_DWORD *)(a2 + v15);
  v16 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for VUGallery.ObservationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24A01EBA4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v16) = *(_DWORD *)(a2 + v16);
  v17 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v19 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  v20 = a3[18];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20 + 8);
  if (v23 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v22 + 8);
  if (v24 >> 60 == 15)
  {
    sub_249F972D0(v21);
    goto LABEL_10;
  }
  v25 = *(_QWORD *)v21;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v24;
  sub_249F92358(v25, v23);
LABEL_12:
  v26 = a3[19];
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = *(_QWORD *)(a1 + v26 + 8);
  if (v29 >> 60 != 15)
  {
    v30 = v28[1];
    if (v30 >> 60 != 15)
    {
      v31 = *v27;
      *v27 = *v28;
      v27[1] = v30;
      sub_249F92358(v31, v29);
      return a1;
    }
    sub_249F972D0((uint64_t)v27);
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.ObservationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F97670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VUGallery.ObservationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F976FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_249F97774()
{
  unint64_t v0;

  sub_249F9547C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for VUGallery.SimilarityMetric(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for VUGallery.SimilarityMetric(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_249F978E4 + 4 * byte_24A01FDDA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_249F97904 + 4 * byte_24A01FDDF[v4]))();
}

_BYTE *sub_249F978E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_249F97904(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249F9790C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249F97914(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_249F9791C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_249F97924(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_249F97930()
{
  return 0;
}

ValueMetadata *type metadata accessor for VUGallery.SimilarityMetric()
{
  return &type metadata for VUGallery.SimilarityMetric;
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VUGallery.ClusteringOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 5);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.ClusteringOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)(result + 5) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.ClusteringOptions()
{
  return &type metadata for VUGallery.ClusteringOptions;
}

uint64_t destroy for VUGallery.ClusteringResults()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VUGallery.ClusteringResults(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VUGallery.ClusteringResults(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for VUGallery.ClusteringResults(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.ClusteringResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.ClusteringResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.ClusteringResults()
{
  return &type metadata for VUGallery.ClusteringResults;
}

uint64_t initializeBufferWithCopyOfBuffer for VUGallery.AccuracyMetrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for VUGallery.AccuracyMetrics()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VUGallery.AccuracyMetrics(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VUGallery.AccuracyMetrics(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for VUGallery.AccuracyMetrics(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.AccuracyMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.AccuracyMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.AccuracyMetrics()
{
  return &type metadata for VUGallery.AccuracyMetrics;
}

uint64_t getEnumTagSinglePayload for VUPluginType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19VisualUnderstanding9VUGalleryC10UpdateModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249F97E5C + 4 * byte_24A01FDE9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249F97E90 + 4 * byte_24A01FDE4[v4]))();
}

uint64_t sub_249F97E90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F97E98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249F97EA0);
  return result;
}

uint64_t sub_249F97EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249F97EB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249F97EB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F97EC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.EvaluationType()
{
  return &type metadata for VUGallery.EvaluationType;
}

uint64_t initializeBufferWithCopyOfBuffer for VUGallery.SocialGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VUGallery.SocialGroup()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for VUGallery.SocialGroup(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VUGallery.SocialGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGallery.SocialGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGallery.SocialGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.SocialGroup()
{
  return &type metadata for VUGallery.SocialGroup;
}

unint64_t *sub_249F98058(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  do
  {
    while (1)
    {
      do
      {
LABEL_5:
        while (v10)
        {
          v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v14 = v13 | (v6 << 6);
          v15 = *(_QWORD *)(a4 + 16);
          if (v15)
            goto LABEL_22;
        }
        v16 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_31;
        if (v16 >= v11)
          return (unint64_t *)sub_249FBD148(result, a2, v5, a3);
        v17 = *(_QWORD *)(v7 + 8 * v16);
        ++v6;
        if (!v17)
        {
          v6 = v16 + 1;
          if (v16 + 1 >= v11)
            return (unint64_t *)sub_249FBD148(result, a2, v5, a3);
          v17 = *(_QWORD *)(v7 + 8 * v6);
          if (!v17)
          {
            v6 = v16 + 2;
            if (v16 + 2 >= v11)
              return (unint64_t *)sub_249FBD148(result, a2, v5, a3);
            v17 = *(_QWORD *)(v7 + 8 * v6);
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v11)
                return (unint64_t *)sub_249FBD148(result, a2, v5, a3);
              v17 = *(_QWORD *)(v7 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v6 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_33;
                  if (v6 >= v11)
                    return (unint64_t *)sub_249FBD148(result, a2, v5, a3);
                  v17 = *(_QWORD *)(v7 + 8 * v6);
                  ++v18;
                  if (v17)
                    goto LABEL_21;
                }
              }
              v6 = v18;
            }
          }
        }
LABEL_21:
        v10 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v6 << 6);
        v15 = *(_QWORD *)(a4 + 16);
      }
      while (!v15);
LABEL_22:
      v19 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
      if (*(_QWORD *)(a4 + 32) != v19)
        break;
LABEL_4:
      *(unint64_t *)((char *)result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v5++, 1))
        goto LABEL_32;
    }
  }
  while (v15 == 1);
  v20 = 5;
  while (1)
  {
    v21 = v20 - 3;
    if (__OFADD__(v20 - 4, 1))
      break;
    if (*(_QWORD *)(a4 + 8 * v20) == v19)
      goto LABEL_4;
    ++v20;
    if (v21 == v15)
      goto LABEL_5;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_249F981F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v7;
  if (!(_DWORD)result || v9 > *(_QWORD *)(v7 + 24) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_249F8CB6C(result, v13, 1);
      v7 = *v4;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = *(_QWORD *)(v7 + 16);
  if ((*(_QWORD *)(v7 + 24) >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
    goto LABEL_27;
  v15 = (char *)(v7 + 16 * v14 + 32);
  v16 = (char *)(a2 + 16 * a3);
  if (v16 < &v15[16 * v6] && v15 < &v16[16 * v6])
    goto LABEL_27;
  result = (uint64_t)memcpy(v15, v16, 16 * v6);
  if (!v6)
  {
LABEL_22:
    *v4 = v7;
    return result;
  }
  v18 = *(_QWORD *)(v7 + 16);
  v19 = __OFADD__(v18, v6);
  v20 = v18 + v6;
  if (!v19)
  {
    *(_QWORD *)(v7 + 16) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

char *sub_249F98388(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A01F408();
  __break(1u);
  return result;
}

char *sub_249F98474(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A01F408();
  __break(1u);
  return result;
}

char *sub_249F9855C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F98644(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA278);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249F9874C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_249F98888()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249F988E4()
{
  uint64_t v0;

  return sub_249F866A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(unint64_t **)(v0 + 80));
}

uint64_t sub_249F98918()
{
  return swift_deallocObject();
}

uint64_t sub_249F98928(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F9896C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_249F989B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_249F989C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249F989FC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  return swift_deallocObject();
}

void sub_249F98A30()
{
  uint64_t *v0;

  sub_249FCB9A8(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_249F98A40()
{
  return swift_deallocObject();
}

void sub_249F98A54()
{
  uint64_t v0;

  sub_249FCC324(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_249F98A60()
{
  return swift_deallocObject();
}

uint64_t sub_249F98A70()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249F98A9C()
{
  uint64_t v0;

  sub_249FCB78C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249F98AA8()
{
  return swift_deallocObject();
}

uint64_t sub_249F98AB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F98AFC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_249F98B20()
{
  uint64_t v0;

  sub_249F87DA0(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD **)(v0 + 40), *(_BYTE *)(v0 + 48), *(BOOL **)(v0 + 56), *(BOOL **)(v0 + 64));
}

uint64_t sub_249F98B38()
{
  return swift_deallocObject();
}

uint64_t sub_249F98B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F84E94(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_BYTE *)(v1 + 41), a1);
}

uint64_t sub_249F98B78()
{
  return swift_deallocObject();
}

uint64_t sub_249F98B8C()
{
  return swift_deallocObject();
}

unint64_t sub_249F98B9C@<X0>(unint64_t *a1@<X8>)
{
  return sub_249F859D0(a1);
}

uint64_t sub_249F98BB4(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_249F8567C(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

void sub_249F98BBC()
{
  sub_249F98BEC();
}

uint64_t sub_249F98BD0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_249F8450C(a1, a2, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(unint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_249F98BDC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_249F841CC(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24), *(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_249F98BEC()
{
  uint64_t v0;

  sub_249FD2918(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(id, id))(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t (**)(_QWORD))(v0 + 64));
}

uint64_t sub_249F98C10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F98C58()
{
  return swift_deallocObject();
}

uint64_t sub_249F98C68(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD078A8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F98CAC()
{
  return swift_deallocObject();
}

uint64_t sub_249F98CBC@<X0>(_QWORD *a1@<X8>)
{
  return sub_249F98CD0(a1);
}

uint64_t sub_249F98CD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249FDA340(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25), *(unsigned __int16 *)(v1 + 26) | (*(unsigned __int8 *)(v1 + 28) << 16), *(unsigned int *)(v1 + 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 36) << 32), *(unsigned int *)(v1 + 40) | ((unint64_t)*(unsigned __int8 *)(v1 + 44) << 32), *(_BYTE *)(v1 + 45), *(_QWORD *)(v1 + 48), a1, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_249F98D48()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_109Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249F98D88()
{
  uint64_t v0;

  return sub_249FD2138(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_249F98D9C()
{
  return swift_deallocObject();
}

void sub_249F98DAC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_249FCEB4C(*(_WORD *)(v1 + 16), *(_BYTE *)(v1 + 18), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F98DCC@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v1;

  return sub_249FCE4C8(*(_WORD *)(v1 + 16), *(_BYTE *)(v1 + 18), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F98DEC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249FD9A84(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(unsigned __int16 *)(v1 + 26) | (*(unsigned __int8 *)(v1 + 28) << 16), *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_249F98E20(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  sub_249FD25E0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_249F98E3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249F98E64()
{
  return swift_deallocObject();
}

uint64_t sub_249F98E74()
{
  uint64_t v0;

  return sub_249FD1014(*(unsigned __int8 *)(v0 + 16) | (unsigned __int16)(*(unsigned __int8 *)(v0 + 17) << 8), *(unsigned __int16 *)(v0 + 18) | (*(unsigned __int8 *)(v0 + 20) << 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
}

uint64_t sub_249F98EA4()
{
  return swift_deallocObject();
}

uint64_t sub_249F98EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249FD93FC(*(_WORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_249F98ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_249F7D97C(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

void sub_249F98ED8()
{
  uint64_t v0;

  sub_249FDEA68(v0);
}

void sub_249F98EF0()
{
  uint64_t v0;

  sub_249FCABF4(v0);
}

void sub_249F98F08()
{
  uint64_t v0;

  sub_249FDE6A4(v0);
}

void sub_249F98F20(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249FD0764(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_249F98F40(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_249F98F7C()
{
  uint64_t v0;

  return sub_249F7A1AC(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_BYTE *)(v0 + 49), *(unsigned int *)(v0 + 52) | ((unint64_t)*(unsigned __int8 *)(v0 + 56) << 32), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

void sub_249F98FC4()
{
  uint64_t v0;

  sub_249FE3AF0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_249F98FCC()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_249F99000(float a1)
{
  uint64_t v1;

  return sub_249F7A3D0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(float *))(v1 + 24));
}

uint64_t sub_249F9900C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t objectdestroy_76Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249F9904C()
{
  return swift_deallocObject();
}

uint64_t sub_249F9905C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F990A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249F990DC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_249F99114@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_249FD1700(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_249F9912C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_249FD3D44(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_249F99148(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  sub_249FD352C(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_249F99164(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  sub_249FD3548(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void type metadata accessor for NSPersistentHistoryTrackingOptionKey(uint64_t a1)
{
  sub_249F991A8(a1, (unint64_t *)&unk_2544CAF00);
}

void type metadata accessor for MLMultiArrayDataType(uint64_t a1)
{
  sub_249F991A8(a1, &qword_2578FF968);
}

void sub_249F991A8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_249F991EC()
{
  return sub_249F9419C(&qword_2578FF970, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A02078C);
}

uint64_t sub_249F9921C()
{
  return sub_249F9419C(&qword_2578FF978, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A020764);
}

uint64_t sub_249F9924C()
{
  return sub_249F9419C((unint64_t *)&unk_2544CAEF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A0207F4);
}

void sub_249F9930C(_QWORD *a1@<X8>)
{
  sub_249F93D5C(a1);
}

void sub_249F99370(_QWORD *a1@<X8>)
{
  sub_249F939F0(a1);
}

uint64_t sub_249F99384@<X0>(_QWORD *a1@<X8>)
{
  return sub_249F93BA4(a1);
}

void sub_249F99398(uint64_t a1@<X8>)
{
  sub_249F9912C(a1);
}

void sub_249F993AC(_BYTE *a1@<X8>)
{
  sub_249F729B4(a1);
}

uint64_t sub_249F993CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_249F93BC0(a1);
}

uint64_t sub_249F993E0@<X0>(uint64_t **a1@<X8>)
{
  return sub_249F98DCC(a1);
}

VisualUnderstanding::VUGalleryUpdateType_optional __swiftcall VUGalleryUpdateType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (VisualUnderstanding::VUGalleryUpdateType_optional)rawValue;
}

uint64_t VUGalleryUpdateType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

VisualUnderstanding::VUGalleryUpdateType_optional sub_249F9941C(Swift::Int *a1)
{
  return VUGalleryUpdateType.init(rawValue:)(*a1);
}

void VUGalleryObservationUpdate.updateType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t VUGalleryObservationUpdate.observationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t VUGalleryObservationUpdate.entityIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void VUGalleryEntityUpdate.updateType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t VUGalleryEntityUpdate.entityIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t VUGalleryEntityUpdate.tag.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
  return sub_249F99498(v3, a1);
}

uint64_t type metadata accessor for VUGalleryEntityUpdate(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CAD28);
}

uint64_t sub_249F99498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249F994E4()
{
  unint64_t result;

  result = qword_2578FFA50;
  if (!qword_2578FFA50)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUGalleryUpdateType, &type metadata for VUGalleryUpdateType);
    atomic_store(result, (unint64_t *)&qword_2578FFA50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VUGalleryUpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249F99574 + 4 * byte_24A020975[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249F995A8 + 4 * byte_24A020970[v4]))();
}

uint64_t sub_249F995A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F995B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249F995B8);
  return result;
}

uint64_t sub_249F995C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249F995CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249F995D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249F995D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUGalleryUpdateType()
{
  return &type metadata for VUGalleryUpdateType;
}

uint64_t getEnumTagSinglePayload for VUGalleryObservationUpdate(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[24])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUGalleryObservationUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGalleryObservationUpdate()
{
  return &type metadata for VUGalleryObservationUpdate;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUGalleryEntityUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_24A01EBA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for VUGalleryEntityUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_24A01EBA4();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for VUGalleryEntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_24A01EBA4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for VUGalleryEntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_24A01EBA4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t initializeWithTake for VUGalleryEntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_24A01EBA4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for VUGalleryEntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_24A01EBA4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGalleryEntityUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249F99B9C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *a1;
    if (v4 >= 3)
      return v4 - 2;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VUGalleryEntityUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_249F99C20(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_249F99C94()
{
  unint64_t v0;

  sub_249F9547C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for VUGalleryUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24A01EBA4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for VUGalleryUpdate(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
    v4 = sub_24A01EBA4();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for VUGalleryUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_24A01EBA4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for VUGalleryUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_249F9A100((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_24A01EBA4();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249F9A100(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VUGalleryUpdate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for VUGalleryUpdate(uint64_t a1)
{
  return sub_249F93C98(a1, (uint64_t *)&unk_2544CAD18);
}

_QWORD *initializeWithTake for VUGalleryUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_24A01EBA4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for VUGalleryUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_249F9A100((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for VUGalleryEntityUpdate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_24A01EBA4();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VUGalleryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for VUGalleryUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_249F9A39C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_249F9A3AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VUGalleryEntityUpdate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_249F9A41C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BOOL4 v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v10 = v4 + OBJC_IVAR____TtC19VisualUnderstanding17VUIndexParameters_logger;
  sub_24A01ED9C();
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_BYTE *)(v5 + 40) = a4;
  switch(a1)
  {
    case 63:
      v13 = a2 == 3737841667 || a2 == 1;
      if (!v13 || a3)
        break;
      v14 = 256;
      if ((a4 & 1) != 0)
        v14 = 128;
      *(_QWORD *)(v5 + 48) = v14;
      *(_QWORD *)(v5 + 56) = 1062836634;
      v15 = 1084227584;
      goto LABEL_39;
    case 6:
      if (a2 != 2 || a3)
      {
        if (a3)
          break;
        *(_QWORD *)(v5 + 48) = 512;
        v12 = 1060320051;
      }
      else
      {
        *(_QWORD *)(v5 + 48) = 32;
        v12 = 1064514355;
      }
      *(_DWORD *)(v5 + 56) = v12;
      *(_QWORD *)(v5 + 60) = 0;
LABEL_40:
      *(_BYTE *)(v5 + 68) = 0;
      return v5;
    case 2:
      if ((a2 & 0xFFFFFFFFFFFFFFFELL) == 0xDECAF004 || !a2 && a3 == 3737841672)
      {
        v11 = 512;
        if ((a4 & 1) != 0)
          v11 = 128;
        *(_QWORD *)(v5 + 48) = v11;
        *(_QWORD *)(v5 + 56) = 0x3F8000003F6147AELL;
        *(_DWORD *)(v5 + 64) = 0x40000000;
        *(_BYTE *)(v5 + 68) = 1;
        return v5;
      }
      v16 = !a2 && a3 == 3737841670;
      v17 = v16;
      if (a2 == 3737841667 || v17)
      {
        v23 = 512;
        if ((a4 & 1) != 0)
          v23 = 128;
        *(_QWORD *)(v5 + 48) = v23;
        *(_QWORD *)(v5 + 56) = 0x3F8000003F5EB852;
        v15 = 1065353216;
LABEL_39:
        *(_DWORD *)(v5 + 64) = v15;
        goto LABEL_40;
      }
      break;
  }
  v18 = sub_24A01ED90();
  v19 = sub_24A01F0E4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    *(_DWORD *)v20 = 16777984;
    sub_24A01F1F8();
    *(_WORD *)(v20 + 5) = 2048;
    sub_24A01F1F8();
    *(_WORD *)(v20 + 15) = 2048;
    sub_24A01F1F8();
    _os_log_impl(&dword_249F70000, v18, v19, "Unsupported combination for type %hhu: revision %ld with contextual revision %ld", (uint8_t *)v20, 0x19u);
    MEMORY[0x24BD07950](v20, -1, -1);
  }

  sub_249F74AF4();
  swift_allocError();
  *v21 = 1;
  swift_willThrow();
  v22 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v10, v22);
  type metadata accessor for VUIndexParameters();
  swift_deallocPartialClassInstance();
  return v5;
}

unint64_t sub_249F9A744()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF528);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A020B10;
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  *(_QWORD *)(inited + 40) = 0x800000024A022E80;
  *(_QWORD *)(inited + 48) = sub_24A01F048();
  *(_QWORD *)(inited + 56) = 0xD000000000000017;
  *(_QWORD *)(inited + 64) = 0x800000024A022EA0;
  *(_QWORD *)(inited + 72) = sub_24A01EFF4();
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x800000024A022EC0;
  *(_QWORD *)(inited + 96) = sub_24A01EFF4();
  *(_QWORD *)(inited + 104) = 0xD000000000000015;
  *(_QWORD *)(inited + 112) = 0x800000024A022EE0;
  *(_QWORD *)(inited + 120) = sub_24A01EFF4();
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  *(_QWORD *)(inited + 136) = 0x800000024A022F00;
  *(_QWORD *)(inited + 144) = sub_24A01EFDC();
  return sub_249F75FA8(inited);
}

uint64_t sub_249F9A84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding17VUIndexParameters_logger;
  v2 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_249F9A89C()
{
  return type metadata accessor for VUIndexParameters();
}

uint64_t type metadata accessor for VUIndexParameters()
{
  uint64_t result;

  result = qword_2544CAE70;
  if (!qword_2544CAE70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249F9A8E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A01EDA8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249F9A98C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_249F8CC30(0, v1, 0);
  v2 = v25;
  result = sub_249F9B4B0(a1);
  v6 = result;
  v7 = v24;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 88;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_26;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      v22 = v9;
      v23 = v5;
      v21 = v10;
      result = sub_249F8CC30(v14 > 1, v15 + 1, 1);
      v10 = v21;
      v9 = v22;
      v5 = v23;
      v7 = v24;
    }
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(float *)(v25 + 4 * v15 + 32) = (float)v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_27;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_29;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (!v20)
        {
          v18 = v12 + 2;
          if (v12 + 2 >= v19)
            goto LABEL_4;
          v20 = *(_QWORD *)(v9 + 8 * v18);
          if (!v20)
          {
            while (v19 - 3 != v12)
            {
              v20 = *(_QWORD *)(v10 + 8 * v12++);
              if (v20)
              {
                v18 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v11 = __clz(__rbit64(v20)) + (v18 << 6);
      }
    }
LABEL_4:
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249F9AB9C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = result + 64;
  v2 = *(_BYTE *)(result + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(result + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      return 0;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v22 = *(_QWORD *)(result + 72);
    if (v22)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        return 0;
      v22 = *(_QWORD *)(result + 80);
      if (v22)
      {
        v6 = 2;
      }
      else
      {
        v22 = *(_QWORD *)(result + 88);
        if (v22)
        {
          v6 = 3;
        }
        else
        {
LABEL_39:
          if (v6 < 9)
            return 0;
          v22 = *(_QWORD *)(result + 96);
          if (v22)
          {
            v6 = 4;
          }
          else
          {
            v22 = *(_QWORD *)(result + 104);
            if (!v22)
              goto LABEL_45;
            v6 = 5;
          }
        }
      }
    }
LABEL_32:
    v8 = (v22 - 1) & v22;
    v7 = __clz(__rbit64(v22)) + (v6 << 6);
  }
  v10 = 8 * v7;
  v11 = *(_QWORD *)(result + 48);
  v12 = *(_QWORD *)(result + 56);
  result = *(_QWORD *)(v11 + v10);
  v13 = *(_QWORD *)(v12 + v10);
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v6 << 6);
      goto LABEL_7;
    }
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v19 >= v9)
      return result;
    v20 = *(_QWORD *)(v1 + 8 * v19);
    ++v6;
    if (!v20)
    {
      v6 = v19 + 1;
      if (v19 + 1 >= v9)
        return result;
      v20 = *(_QWORD *)(v1 + 8 * v6);
      if (!v20)
      {
        v6 = v19 + 2;
        if (v19 + 2 >= v9)
          return result;
        v20 = *(_QWORD *)(v1 + 8 * v6);
        if (!v20)
        {
          v6 = v19 + 3;
          if (v19 + 3 >= v9)
            return result;
          v20 = *(_QWORD *)(v1 + 8 * v6);
          if (!v20)
            break;
        }
      }
    }
LABEL_27:
    v8 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v6 << 6);
LABEL_7:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(v11 + v16);
    v18 = *(_QWORD *)(v12 + v16);
    if (v13 < v18)
      result = v17;
    if (v13 <= v18)
      v13 = v18;
  }
  v21 = v19 + 4;
  if (v21 >= v9)
    return result;
  v20 = *(_QWORD *)(v1 + 8 * v21);
  if (v20)
  {
    v6 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v6 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v6 >= v9)
      return result;
    v20 = *(_QWORD *)(v1 + 8 * v6);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
  __break(1u);
LABEL_45:
  v23 = 0;
  v24 = 6;
  if (v9 > 6)
    v24 = v9;
  v25 = v24 - 6;
  while (v25 != v23)
  {
    v22 = *(_QWORD *)(result + 112 + 8 * v23++);
    if (v22)
    {
      v6 = v23 + 5;
      goto LABEL_32;
    }
  }
  return 0;
}

uint64_t sub_249F9ADB4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Metrics()
{
  return objc_opt_self();
}

uint64_t sub_249F9ADE4(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_24A012F9C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_249F9AE4C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249F9AE4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *__dst;

  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_130;
    if (v3)
      return sub_249F9087C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_138;
  v6 = result;
  v88 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_96:
      v80 = v12;
      v90 = v9;
      if (v13 >= 2)
      {
        v81 = *v88;
        do
        {
          v82 = v13 - 2;
          if (v13 < 2)
            goto LABEL_125;
          if (!v81)
            goto LABEL_137;
          v83 = v80;
          v84 = *(_QWORD *)&v80[16 * v82 + 32];
          v85 = *(_QWORD *)&v80[16 * v13 + 24];
          sub_249F910C4((char *)(v81 + 8 * v84), (char *)(v81 + 8 * *(_QWORD *)&v80[16 * v13 + 16]), v81 + 8 * v85, __dst);
          if (v1)
            break;
          if (v85 < v84)
            goto LABEL_126;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v83 = sub_24A012ED4((uint64_t)v83);
          if (v82 >= *((_QWORD *)v83 + 2))
            goto LABEL_127;
          v86 = &v83[16 * v82 + 32];
          *(_QWORD *)v86 = v84;
          *((_QWORD *)v86 + 1) = v85;
          v87 = *((_QWORD *)v83 + 2);
          if (v13 > v87)
            goto LABEL_128;
          memmove(&v83[16 * v13 + 16], &v83[16 * v13 + 32], 16 * (v87 - v13));
          v80 = v83;
          *((_QWORD *)v83 + 2) = v87 - 1;
          v13 = v87 - 1;
        }
        while (v87 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v90 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v90 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v90 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v89 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v91 = v6;
  v92 = v3;
  v93 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v10) + 16);
      v16 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v14) + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = v15;
        while (1)
        {
          v18 = *(_QWORD *)(*(_QWORD *)(v11 + 8 * v10) + 16);
          if (v16 < v15 == v17 >= v18)
            break;
          ++v10;
          v17 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_131;
        if (v14 < v10)
        {
          v19 = (uint64_t *)(v89 + 8 * v10);
          v20 = v10;
          v21 = v14;
          v22 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_136;
              v23 = *v22;
              *v22 = *v19;
              *v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_129;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v24 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_132;
    if (v24 >= v3)
      v24 = v3;
    if (v24 < v14)
      break;
    if (v10 != v24)
    {
      v25 = (_QWORD *)(v89 + 8 * v10);
      do
      {
        v26 = *(_QWORD *)(v11 + 8 * v10);
        v27 = v14;
        v28 = v25;
        do
        {
          v29 = *v28;
          if (*(_QWORD *)(*v28 + 16) >= *(_QWORD *)(v26 + 16))
            break;
          if (!v11)
            goto LABEL_134;
          *v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v10 != v27);
        ++v10;
        ++v25;
      }
      while (v10 != v24);
      v10 = v24;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_124;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24A012ABC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v31 = *((_QWORD *)v12 + 2);
    v30 = *((_QWORD *)v12 + 3);
    v13 = v31 + 1;
    v11 = v93;
    if (v31 >= v30 >> 1)
    {
      v79 = sub_24A012ABC((char *)(v30 > 1), v31 + 1, 1, v12);
      v11 = v93;
      v12 = v79;
    }
    *((_QWORD *)v12 + 2) = v13;
    v32 = v12 + 32;
    v33 = &v12[16 * v31 + 32];
    *(_QWORD *)v33 = v14;
    *((_QWORD *)v33 + 1) = v10;
    if (v31)
    {
      while (1)
      {
        v34 = v13 - 1;
        if (v13 >= 4)
        {
          v39 = &v32[16 * v13];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_113;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_114;
          v46 = v13 - 2;
          v47 = &v32[16 * v13 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_116;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_119;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_123;
            v62 = v37 < v72;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v63 = *((_QWORD *)v12 + 4);
            v64 = *((_QWORD *)v12 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_77;
          }
          v36 = *((_QWORD *)v12 + 4);
          v35 = *((_QWORD *)v12 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_115;
        v46 = v13 - 2;
        v52 = &v32[16 * v13 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_118;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_121;
        if (__OFADD__(v56, v61))
          goto LABEL_122;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_83:
          if (v62)
            v34 = v46;
          goto LABEL_85;
        }
LABEL_77:
        if ((v57 & 1) != 0)
          goto LABEL_117;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_120;
        if (v68 < v56)
          goto LABEL_15;
LABEL_85:
        v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11)
          goto LABEL_135;
        v74 = &v32[16 * v73];
        v75 = *(_QWORD *)v74;
        v76 = &v32[16 * v34];
        v77 = *((_QWORD *)v76 + 1);
        sub_249F910C4((char *)(v11 + 8 * *(_QWORD *)v74), (char *)(v11 + 8 * *(_QWORD *)v76), v11 + 8 * v77, __dst);
        if (v1)
          goto LABEL_93;
        if (v77 < v75)
          goto LABEL_110;
        if (v34 > *((_QWORD *)v12 + 2))
          goto LABEL_111;
        *(_QWORD *)v74 = v75;
        *(_QWORD *)&v32[16 * v73 + 8] = v77;
        v78 = *((_QWORD *)v12 + 2);
        if (v34 >= v78)
          goto LABEL_112;
        v13 = v78 - 1;
        memmove(&v32[16 * v34], v76 + 16, 16 * (v78 - 1 - v34));
        *((_QWORD *)v12 + 2) = v78 - 1;
        v11 = v93;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v91;
    v3 = v92;
    if (v10 >= v92)
    {
      v9 = v90;
      goto LABEL_96;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249F9B4B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_249F9B538(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v4;
  uint64_t result;
  unint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v17 = MEMORY[0x24BEE4AF8];
    result = sub_249F8C9C8(0, v4, 0);
    if ((a3 & 0x8000000000000000) == 0)
    {
      v8 = *(_QWORD *)(a2 + 16);
      if (v8 <= a3)
      {
LABEL_12:
        __break(1u);
        return result;
      }
      v9 = (unint64_t *)(a1 + 32);
      v10 = a2 + 32;
      v11 = *(_QWORD *)(v10 + 8 * a3);
      result = v17;
      while (1)
      {
        v13 = *v9;
        v9 += 2;
        v12 = v13;
        if (v13 >= v8)
          break;
        v14 = *(_QWORD *)(v10 + 8 * v12) == v11;
        v18 = result;
        v16 = *(_QWORD *)(result + 16);
        v15 = *(_QWORD *)(result + 24);
        if (v16 >= v15 >> 1)
        {
          sub_249F8C9C8(v15 > 1, v16 + 1, 1);
          result = v18;
        }
        *(_QWORD *)(result + 16) = v16 + 1;
        *(_QWORD *)(result + 8 * v16 + 32) = v14;
        if (!--v4)
          return result;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_249F9B64C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  char v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  float v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  float v86;
  float *v87;
  uint64_t v88;
  uint64_t v89;
  float *v90;
  float v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t result;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v8 = *(_QWORD *)(a1 + 8 * v4 + 32);
      if (v5[2])
      {
        v9 = sub_249F8B27C(*(_QWORD *)(a1 + 8 * v4 + 32));
        v10 = v6;
        if ((v11 & 1) != 0)
        {
          v10 = *(_QWORD **)(v5[7] + 8 * v9);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v10 = v6;
      }
      swift_bridgeObjectRetain();
      v12 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_249F89B7C(0, v10[2] + 1, 1, v10);
      v14 = v12[2];
      v13 = v12[3];
      if (v14 >= v13 >> 1)
        v12 = sub_249F89B7C((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
      v12[2] = v14 + 1;
      v12[v14 + 4] = v4;
      swift_bridgeObjectRelease();
      v15 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v110 = v15;
      v18 = sub_249F8B27C(v8);
      v19 = v15[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
        goto LABEL_101;
      v22 = v17;
      if (v15[3] >= v21)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v5 = v110;
          if ((v17 & 1) == 0)
            goto LABEL_20;
        }
        else
        {
          sub_249FC1AF0();
          v5 = v110;
          if ((v22 & 1) == 0)
            goto LABEL_20;
        }
      }
      else
      {
        sub_249FB99FC(v21, isUniquelyReferenced_nonNull_native);
        v23 = sub_249F8B27C(v8);
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_108;
        v18 = v23;
        v5 = v110;
        if ((v22 & 1) == 0)
        {
LABEL_20:
          v5[(v18 >> 6) + 8] |= 1 << v18;
          v25 = 8 * v18;
          *(_QWORD *)(v5[6] + v25) = v8;
          *(_QWORD *)(v5[7] + v25) = v12;
          v26 = v5[2];
          v27 = __OFADD__(v26, 1);
          v28 = v26 + 1;
          if (v27)
            goto LABEL_102;
          v5[2] = v28;
          goto LABEL_4;
        }
      }
      v7 = v5[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 8 * v18) = v12;
LABEL_4:
      ++v4;
      swift_bridgeObjectRelease();
      if (v2 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_26:
  swift_bridgeObjectRetain_n();
  v29 = sub_249FB57B8((uint64_t)v5);
  swift_bridgeObjectRelease();
  v110 = v29;
  v30 = 0;
  sub_249F9ADE4(&v110);
  swift_bridgeObjectRelease();
  v31 = v110;
  v104 = v110[2];
  if (!v104)
  {
LABEL_77:
    swift_release();
    v82 = swift_bridgeObjectRetain();
    v83 = sub_249F9A98C(v82);
    swift_bridgeObjectRelease();
    v84 = *(_QWORD *)(v83 + 16);
    if (v84)
    {
      if (v84 == 1)
      {
        v85 = 0;
        v86 = 0.0;
      }
      else
      {
        v85 = v84 & 0x7FFFFFFFFFFFFFFELL;
        v87 = (float *)(v83 + 36);
        v86 = 0.0;
        v88 = v84 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v86 = (float)(v86 + *(v87 - 1)) + *v87;
          v87 += 2;
          v88 -= 2;
        }
        while (v88);
        if (v84 == v85)
          goto LABEL_86;
      }
      v89 = v84 - v85;
      v90 = (float *)(v83 + 4 * v85 + 32);
      do
      {
        v91 = *v90++;
        v86 = v86 + v91;
        --v89;
      }
      while (v89);
    }
LABEL_86:
    swift_bridgeObjectRelease();
    v92 = *(_QWORD *)(a2 + 16);
    if (v92)
    {
      swift_bridgeObjectRetain();
      v93 = a2;
      v94 = 0;
      v95 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v98 = *(_QWORD *)(v93 + 8 * v94 + 32);
        if (v98 != -1)
        {
          v99 = swift_isUniquelyReferenced_nonNull_native();
          v110 = v95;
          if ((v99 & 1) == 0)
          {
            sub_249F8C9C8(0, v95[2] + 1, 1);
            v95 = v110;
          }
          v97 = v95[2];
          v96 = v95[3];
          v93 = a2;
          if (v97 >= v96 >> 1)
          {
            sub_249F8C9C8(v96 > 1, v97 + 1, 1);
            v93 = a2;
            v95 = v110;
          }
          v95[2] = v97 + 1;
          v95[v97 + 4] = v98;
        }
        ++v94;
      }
      while (v92 != v94);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v101 = 0;
  v32 = 0;
  v103 = v110 + 4;
  v33 = a2;
  v34 = 0.0;
  v35 = (_QWORD *)MEMORY[0x24BEE4B00];
  v102 = v110;
  while (1)
  {
    if (v32 >= v31[2])
      goto LABEL_103;
    v108 = v32;
    v36 = v103[v32];
    v37 = *(_QWORD *)(v36 + 16);
    v109 = v36;
    if (v37)
      break;
    swift_bridgeObjectRetain();
    v40 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_56:
    v59 = v108;
    if (v40[2] && (v60 = sub_249F8B27C(-1), (v61 & 1) != 0))
    {
      v62 = *(_QWORD *)(v36 + 16);
      if (*(_QWORD *)(v40[7] + 8 * v60) == v62)
        goto LABEL_28;
    }
    else
    {
      v62 = *(_QWORD *)(v36 + 16);
    }
    v63 = swift_bridgeObjectRetain();
    v64 = sub_249F9AB9C(v63);
    v66 = v65;
    v68 = v67;
    swift_bridgeObjectRelease();
    if ((v68 & 1) != 0)
      goto LABEL_107;
    if (v64 != -1)
    {
      if (!v35[2] || (sub_249F8B27C(v64), (v69 & 1) == 0))
      {
        v70 = swift_isUniquelyReferenced_nonNull_native();
        v110 = v35;
        v72 = sub_249F8B27C(v64);
        v73 = v35[2];
        v74 = (v71 & 1) == 0;
        v75 = v73 + v74;
        if (__OFADD__(v73, v74))
          goto LABEL_104;
        v76 = v71;
        if (v35[3] >= v75)
        {
          if ((v70 & 1) == 0)
            sub_249FC20E0();
        }
        else
        {
          sub_249FBA388(v75, v70);
          v77 = sub_249F8B27C(v64);
          if ((v76 & 1) != (v78 & 1))
            goto LABEL_108;
          v72 = v77;
        }
        v59 = v108;
        v35 = v110;
        if ((v76 & 1) != 0)
        {
          *(_QWORD *)(v110[7] + 8 * v72) = v66;
        }
        else
        {
          v110[(v72 >> 6) + 8] |= 1 << v72;
          v79 = 8 * v72;
          *(_QWORD *)(v35[6] + v79) = v64;
          *(_QWORD *)(v35[7] + v79) = v66;
          v80 = v35[2];
          v27 = __OFADD__(v80, 1);
          v81 = v80 + 1;
          if (v27)
            goto LABEL_106;
          v35[2] = v81;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (__OFADD__(v101, v62))
          goto LABEL_105;
        v101 += v62;
        v34 = v34 + (float)v66;
        goto LABEL_29;
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_29:
    v32 = v59 + 1;
    swift_bridgeObjectRelease();
    v33 = a2;
    v31 = v102;
    if (v32 == v104)
      goto LABEL_77;
  }
  v105 = v30;
  v106 = v35;
  v38 = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRetain_n();
  v39 = 0;
  v40 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v41 = *(_QWORD *)(v36 + 8 * v39 + 32);
    if (v41 >= v38)
      break;
    v42 = *(_QWORD *)(a2 + 32 + 8 * v41);
    v43 = v40[2];
    if (v43)
    {
      v44 = sub_249F8B27C(v42);
      if ((v45 & 1) == 0)
      {
        v46 = 1;
        goto LABEL_43;
      }
      v43 = *(_QWORD *)(v40[7] + 8 * v44);
    }
    v46 = v43 + 1;
    if (__OFADD__(v43, 1))
      goto LABEL_98;
LABEL_43:
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v110 = v40;
    v49 = sub_249F8B27C(v42);
    v50 = v40[2];
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
      goto LABEL_99;
    v53 = v48;
    if (v40[3] >= v52)
    {
      if ((v47 & 1) != 0)
      {
        v40 = v110;
        if ((v48 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        sub_249FC20E0();
        v40 = v110;
        if ((v53 & 1) != 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_249FBA388(v52, v47);
      v54 = sub_249F8B27C(v42);
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_108;
      v49 = v54;
      v40 = v110;
      if ((v53 & 1) != 0)
      {
LABEL_33:
        *(_QWORD *)(v40[7] + 8 * v49) = v46;
        goto LABEL_34;
      }
    }
    v40[(v49 >> 6) + 8] |= 1 << v49;
    v56 = 8 * v49;
    *(_QWORD *)(v40[6] + v56) = v42;
    *(_QWORD *)(v40[7] + v56) = v46;
    v57 = v40[2];
    v27 = __OFADD__(v57, 1);
    v58 = v57 + 1;
    if (v27)
      goto LABEL_100;
    v40[2] = v58;
LABEL_34:
    ++v39;
    swift_bridgeObjectRelease();
    v36 = v109;
    if (v37 == v39)
    {
      swift_bridgeObjectRelease();
      v30 = v105;
      v35 = v106;
      goto LABEL_56;
    }
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  sub_24A01F48C();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_249F9BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = *(_QWORD *)(a2 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v6 = *(_QWORD *)(a2 + 8 * v4 + 32);
      v7 = v5[2];
      if (v7)
      {
        v8 = sub_249F8B27C(*(_QWORD *)(a2 + 8 * v4 + 32));
        if ((v9 & 1) != 0)
          v7 = *(_QWORD *)(v5[7] + 8 * v8);
        else
          v7 = 0;
      }
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v13 = sub_249F8B27C(v6);
      v14 = v5[2];
      v15 = (v12 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
        goto LABEL_49;
      v17 = v12;
      if (v5[3] >= v16)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v12 & 1) == 0)
            goto LABEL_17;
        }
        else
        {
          sub_249FC20E0();
          if ((v17 & 1) == 0)
            goto LABEL_17;
        }
      }
      else
      {
        sub_249FBA388(v16, isUniquelyReferenced_nonNull_native);
        v18 = sub_249F8B27C(v6);
        if ((v17 & 1) != (v19 & 1))
          goto LABEL_55;
        v13 = v18;
        if ((v17 & 1) == 0)
        {
LABEL_17:
          v5[(v13 >> 6) + 8] |= 1 << v13;
          v20 = 8 * v13;
          *(_QWORD *)(v5[6] + v20) = v6;
          *(_QWORD *)(v5[7] + v20) = v10;
          v21 = v5[2];
          v22 = __OFADD__(v21, 1);
          v23 = v21 + 1;
          if (v22)
            goto LABEL_54;
          v5[2] = v23;
          goto LABEL_4;
        }
      }
      *(_QWORD *)(v5[7] + 8 * v13) = v10;
LABEL_4:
      ++v4;
      swift_bridgeObjectRelease();
      if (v48 == v4)
      {
        swift_bridgeObjectRelease();
        v24 = *(_QWORD *)(a1 + 16);
        if (!v24)
          return swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x24BEE4B00];
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
    return swift_bridgeObjectRelease();
LABEL_22:
  v25 = a2 + 32;
  swift_bridgeObjectRetain();
  v26 = 0;
  v27 = 0;
  v28 = 0.0;
  v29 = 0.0;
  v46 = a2;
  v45 = a2 + 32;
  while (v27 != v48)
  {
    if (*(_QWORD *)(v25 + 8 * v27) != -1)
    {
      v47 = v26;
      v30 = *(_QWORD *)(a1 + 32 + 8 * v27);
      swift_bridgeObjectRetain();
      v31 = 0;
      v32 = MEMORY[0x24BEE4AF8];
      do
      {
        if (*(_QWORD *)(a1 + 8 * v31 + 32) == v30)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_249F8CC4C(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v34 = *(_QWORD *)(v32 + 16);
          v33 = *(_QWORD *)(v32 + 24);
          if (v34 >= v33 >> 1)
            sub_249F8CC4C(v33 > 1, v34 + 1, 1);
          *(_QWORD *)(v32 + 16) = v34 + 1;
          v35 = v32 + 16 * v34;
          *(_QWORD *)(v35 + 32) = v31;
          *(_QWORD *)(v35 + 40) = v30;
        }
        ++v31;
      }
      while (v24 != v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v36 = sub_249F9B538(v32, v46, v27);
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        v38 = 0;
        v39 = (uint64_t *)(v36 + 32);
        v25 = v45;
        while (1)
        {
          v40 = *v39++;
          v22 = __OFADD__(v38, v40);
          v38 += v40;
          if (v22)
            break;
          if (!--v37)
            goto LABEL_40;
        }
        __break(1u);
        goto LABEL_48;
      }
      v38 = 0;
      v25 = v45;
LABEL_40:
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v32 + 16);
      swift_release();
      if (!v5[2])
        goto LABEL_51;
      v42 = sub_249F8B27C(*(_QWORD *)(v25 + 8 * v27));
      if ((v43 & 1) == 0)
        goto LABEL_52;
      v26 = v47 + 1;
      if (__OFADD__(v47, 1))
        goto LABEL_53;
      v29 = v29 + (float)((float)v38 / (float)v41);
      v28 = v28 + (float)((float)v38 / (float)*(uint64_t *)(v5[7] + 8 * v42));
    }
    if (++v27 == v24)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249F9C260(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t result;
  float *v6;
  unint64_t v7;
  float v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_249F8CC30(0, v3, 0);
    result = v12;
    v6 = (float *)(a1 + 40);
    while (1)
    {
      v7 = *((_QWORD *)v6 - 1);
      if ((v7 & 0x8000000000000000) != 0)
        break;
      if (v7 >= *(_QWORD *)(*(_QWORD *)a2 + 16))
        goto LABEL_10;
      v8 = *v6;
      v9 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v7 + 32);
      v13 = result;
      v11 = *(_QWORD *)(result + 16);
      v10 = *(_QWORD *)(result + 24);
      if (v11 >= v10 >> 1)
      {
        sub_249F8CC30(v10 > 1, v11 + 1, 1);
        result = v13;
      }
      v6 += 4;
      *(_QWORD *)(result + 16) = v11 + 1;
      *(float *)(result + 4 * v11 + 32) = v8 / (float)v9;
      if (!--v3)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_249F9C35C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = result + 64;
  v2 = *(_BYTE *)(result + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(result + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      return 0;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v17 = *(_QWORD *)(result + 72);
    if (v17)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        return 0;
      v17 = *(_QWORD *)(result + 80);
      if (v17)
      {
        v6 = 2;
      }
      else
      {
        v17 = *(_QWORD *)(result + 88);
        if (v17)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            return 0;
          v17 = *(_QWORD *)(result + 96);
          if (v17)
          {
            v6 = 4;
          }
          else
          {
            v17 = *(_QWORD *)(result + 104);
            if (!v17)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v17 - 1) & v17;
    v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(result + 56);
  result = *(_QWORD *)(v10 + 8 * v7);
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v6 << 6);
LABEL_7:
    v13 = *(_QWORD *)(v10 + 8 * v12);
    if (v13 < result)
      result = v13;
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      return result;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v18 = 0;
  v19 = 6;
  if (v9 > 6)
    v19 = v9;
  v20 = v19 - 6;
  while (v20 != v18)
  {
    v17 = *(_QWORD *)(result + 112 + 8 * v18++);
    if (v17)
    {
      v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

unint64_t sub_249F9C554(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      goto LABEL_49;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v19 = *(_QWORD *)(a1 + 72);
    if (v19)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        goto LABEL_49;
      v19 = *(_QWORD *)(a1 + 80);
      if (v19)
      {
        v6 = 2;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 88);
        if (v19)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            goto LABEL_49;
          v19 = *(_QWORD *)(a1 + 96);
          if (v19)
          {
            v6 = 4;
          }
          else
          {
            v19 = *(_QWORD *)(a1 + 104);
            if (!v19)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v19 - 1) & v19;
    v7 = __clz(__rbit64(v19)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(float *)(v10 + 4 * v7);
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v6 << 6);
LABEL_7:
    if (*(float *)(v10 + 4 * v13) < v11)
      v11 = *(float *)(v10 + 4 * v13);
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_26:
    v17 = 0;
    v18 = LODWORD(v11);
    return v18 | ((unint64_t)v17 << 32);
  }
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      goto LABEL_26;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v20 = 0;
  v21 = 6;
  if (v9 > 6)
    v21 = v9;
  v22 = v21 - 6;
  while (v22 != v20)
  {
    v19 = *(_QWORD *)(a1 + 112 + 8 * v20++);
    if (v19)
    {
      v6 = v20 + 5;
      goto LABEL_30;
    }
  }
LABEL_49:
  v18 = 0;
  v17 = 1;
  return v18 | ((unint64_t)v17 << 32);
}

uint64_t sub_249F9C764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a2;
  v16 = a1;
  v3 = sub_24A01F120();
  v13 = *(_QWORD *)(v3 - 8);
  v14 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A01F108();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_24A01EDE4();
  MEMORY[0x24BDAC7A8](v8);
  *(_OWORD *)(v2 + 24) = xmmword_24A020BB0;
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 40) = 8;
  *(_QWORD *)(v2 + 48) = v9;
  sub_24A01ED9C();
  v10 = OBJC_IVAR____TtC19VisualUnderstanding16VUIndexQuantizer_lockQueue;
  sub_249F990DC(0, (unint64_t *)&unk_2544CAEC0);
  sub_24A01EDD8();
  v17 = MEMORY[0x24BEE4AF8];
  sub_249FA2B24((unint64_t *)&unk_2544CAEB0, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAE90);
  sub_249F98C68(&qword_2544CAE98, &qword_2544CAE90, MEMORY[0x24BEE12C8]);
  sub_24A01F228();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v5, *MEMORY[0x24BEE5750], v14);
  *(_QWORD *)(v2 + v10) = sub_24A01F150();
  *(_QWORD *)(v2 + 16) = v15;
  *(_QWORD *)(v2 + 56) = v16;
  return v2;
}

void sub_249F9C9C0(NSObject *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  void *v39;
  __int128 v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  NSObject *v63;
  int v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t *v97;
  uint64_t v98;
  _QWORD v99[6];
  char v100;
  uint64_t v101;
  char v102;
  int64_t v103;
  id (*v104)(void *);
  uint64_t v105;
  uint64_t *v106;
  _QWORD v107[3];
  uint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t (*v112)(void);
  id v113;
  uint64_t v114;
  int64_t v115;
  NSObject *v116;
  _QWORD aBlock[6];
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120[4];
  uint64_t v121;

  LOBYTE(v7) = v4;
  v111 = a3;
  v112 = a2;
  v9 = 512;
  if (a1 == 6)
    v9 = 3072;
  v115 = v9;
  v10 = v3 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexQuantizer_logger;
  v11 = sub_24A01ED90();
  v12 = sub_24A01F0CC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 16777472;
    LOBYTE(aBlock[0]) = (_BYTE)a1;
    sub_24A01F1F8();
    _os_log_impl(&dword_249F70000, v11, v12, "Training quantizer for type %hhu", v13, 5u);
    MEMORY[0x24BD07950](v13, -1, -1);
  }

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A0208B0;
  v15 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v14 + 64) = v15;
  v116 = a1;
  *(_QWORD *)(v14 + 32) = a1;
  v16 = (void *)sub_24A01F09C();
  v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v18 = (void *)sub_24A01EE44();
  v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

  v20 = *(_QWORD *)(v114 + 56);
  v21 = v16;
  v22 = sub_249FCBC58(v16, 0, 1);

  if (!v22)
  {

    return;
  }
  v23 = *(_QWORD *)(v114 + 16);
  if (!v23)
    goto LABEL_49;
  if (v22 == 0x8000000000000000 && v23 == -1)
  {
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    swift_release_n();
    swift_release();
    __break(1u);
    return;
  }
  v107[2] = v10;
  v108 = v22;
  v24 = v22 / v23;
  if (v24 <= 1)
    v25 = 1;
  else
    v25 = v24;
  *(_OWORD *)v120 = xmmword_24A020BC0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24A0208F0;
  *(_QWORD *)(v26 + 32) = v19;
  aBlock[0] = v26;
  v27 = sub_24A01EFA0();
  v110 = v107;
  v28 = aBlock[0];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v106 = v120;
  v30 = *(void **)(v20 + 16);
  MEMORY[0x24BDAC7A8](v29);
  v113 = (id)v21;
  v99[2] = v21;
  v99[3] = v28;
  v99[4] = &unk_251B67C40;
  v99[5] = v25;
  v109 = v25;
  v100 = 0;
  v101 = 0;
  v102 = 1;
  v103 = v20;
  v104 = sub_249FA2290;
  v105 = v31;
  v32 = v19;
  v33 = v30;
  sub_24A01F180();
  if (!v4)
  {
    v107[1] = v20;
    swift_bridgeObjectRelease();

    v34 = v109;
    v121 = sub_24A014F48(0, v109);
    v119 = v34;
    v6 = v108;
    v35 = v108 / 1024;
    if (v108 / 1024 <= 1)
      v35 = 1;
    v36 = 8 * v35;
    if (v36 >= 64)
      v37 = 64;
    else
      v37 = v36;
    v38 = v112;
    v5 = v113;
    v10 = v114;
    do
    {
      v39 = (void *)MEMORY[0x24BD07458]();
      sub_249F9D65C(&v119, v10, v6, (uint64_t)v5, v32, v116, v120, &v121, v115);
      objc_autoreleasePoolPop(v39);
      if (v38 && (v38() & 1) == 0)
      {

LABEL_64:
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      --v37;
    }
    while (v37);
    v110 = v32;
    v40 = *(_OWORD *)v120;
    sub_249F93CE0(v120[0], v120[1]);
    v41 = v116;
    sub_249FA22BC((char)v116, v40, *((unint64_t *)&v40 + 1));
    v43 = v42;
    v45 = v44;
    sub_249F92358(v40, *((unint64_t *)&v40 + 1));
    sub_249F92358(v40, *((unint64_t *)&v40 + 1));
    v120[0] = v43;
    v120[1] = v45;
    swift_beginAccess();
    sub_249F93CE0(v43, v45);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = *(_QWORD **)(v10 + 48);
    *(_QWORD *)(v10 + 48) = 0x8000000000000000;
    sub_249FBF52C(v43, v45, v41, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v10 + 48) = v118;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v21 = v120[1];
    v47 = v120[0];
    sub_249F93CE0(v120[0], v120[1]);
    sub_249FD7A68((uint64_t)v41, v47, v21);
    sub_249F92358(v47, v21);
    if (v6 >= 1)
    {
      v23 = 0;
      v48 = 0;
      while (1)
      {
        v20 = v23 + 1;
        if (__OFADD__(v23, 1))
          break;
        v49 = __OFADD__(v48, 0x2000);
        v48 += 0x2000;
        if (v49)
          v48 = 0x7FFFFFFFFFFFFFFFLL;
        ++v23;
        if (v48 >= v6)
          goto LABEL_33;
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v20 = 0;
LABEL_33:
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_249F8C9C8(0, v20 & ~(v20 >> 63), 0);
    if ((v20 & 0x8000000000000000) == 0)
    {
      v50 = aBlock[0];
      v5 = (id)v6;
      v107[0] = 0;
      if (v20)
      {
        v7 = 0;
        do
        {
          v23 = (uint64_t)v5;
          if (v7 >= (uint64_t)v5)
            goto LABEL_48;
          v10 = v7 + 0x2000;
          if (__OFADD__(v7, 0x2000))
            v6 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v6 = v7 + 0x2000;
          aBlock[0] = v50;
          v52 = *(_QWORD *)(v50 + 16);
          v51 = *(_QWORD *)(v50 + 24);
          v21 = v52 + 1;
          if (v52 >= v51 >> 1)
          {
            sub_249F8C9C8(v51 > 1, v52 + 1, 1);
            v50 = aBlock[0];
          }
          *(_QWORD *)(v50 + 16) = v21;
          *(_QWORD *)(v50 + 8 * v52 + 32) = v7;
          v7 = v6;
          --v20;
        }
        while (v20);
        if (v6 >= (uint64_t)v5)
        {
LABEL_59:
          v54 = swift_allocObject();
          *(_QWORD *)(v54 + 16) = MEMORY[0x24BEE4B00];
          v55 = v54 + 16;
          sub_249F990DC(0, (unint64_t *)&unk_2544CAEC0);
          MEMORY[0x24BDAC7A8](*(_QWORD *)(v50 + 16));
          v99[-8] = 0x2000;
          v56 = v114;
          v99[-7] = v115;
          v99[-6] = v56;
          v57 = v113;
          v99[-5] = v113;
          v99[-4] = v50;
          LOBYTE(v99[-3]) = (_BYTE)v116;
          v97 = v120;
          v98 = v54;
          sub_24A01F114();
          swift_release();
          v58 = *(NSObject **)(v56 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexQuantizer_lockQueue);
          aBlock[4] = nullsub_1;
          aBlock[5] = 0;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_249F87210;
          aBlock[3] = &block_descriptor_0;
          v59 = _Block_copy(aBlock);
          swift_release();
          dispatch_sync(v58, v59);
          _Block_release(v59);
          if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
            goto LABEL_106;
          v60 = v107[0];
          v61 = v110;
          v62 = v109;
          if (v112 && (v112() & 1) == 0
            || (sub_249FDF3A0(), v60)
            || (swift_beginAccess(), !*(_QWORD *)(*(_QWORD *)v55 + 16)))
          {
            swift_release();

          }
          else
          {
            swift_retain_n();
            v63 = sub_24A01ED90();
            v64 = sub_24A01F0F0();
            v116 = v63;
            if (os_log_type_enabled(v63, (os_log_type_t)v64))
            {
              LODWORD(v114) = v64;
              v115 = v54;
              v65 = swift_slowAlloc();
              *(_DWORD *)v65 = 134219264;
              v118 = *(_QWORD **)(*(_QWORD *)v55 + 16);
              sub_24A01F1F8();
              *(_WORD *)(v65 + 12) = 2048;
              v118 = (_QWORD *)v62;
              sub_24A01F1F8();
              v66 = 0;
              v67 = 0;
              *(_WORD *)(v65 + 22) = 2048;
              v68 = *(_QWORD *)v55;
              v69 = 1 << *(_BYTE *)(*(_QWORD *)v55 + 32);
              if (v69 < 64)
                v70 = ~(-1 << v69);
              else
                v70 = -1;
              v72 = *(_QWORD *)(v68 + 64);
              v71 = v68 + 64;
              v73 = v70 & v72;
              v74 = (unint64_t)(v69 + 63) >> 6;
              while (1)
              {
                if (v73)
                {
                  v75 = __clz(__rbit64(v73));
                  v73 &= v73 - 1;
                  v76 = v75 | (v66 << 6);
                }
                else
                {
                  v78 = v66 + 1;
                  if (__OFADD__(v66, 1))
                    goto LABEL_104;
                  if (v78 >= v74)
                  {
LABEL_94:
                    v81 = v115;
                    swift_release();
                    v118 = (_QWORD *)v67;
                    sub_24A01F1F8();
                    swift_release();
                    *(_WORD *)(v65 + 32) = 2048;
                    v82 = swift_bridgeObjectRetain();
                    v83 = sub_249F9C35C(v82);
                    v85 = v84;
                    swift_release();
                    swift_bridgeObjectRelease();
                    if ((v85 & 1) != 0)
                      v86 = 0;
                    else
                      v86 = v83;
                    v118 = (_QWORD *)v86;
                    sub_24A01F1F8();
                    swift_release();
                    *(_WORD *)(v65 + 42) = 2048;
                    v87 = *(_QWORD *)(v81 + 16);
                    swift_bridgeObjectRetain_n();
                    v88 = sub_249FB5198(v87);
                    swift_bridgeObjectRelease();
                    v118 = v88;
                    sub_249FA0130((uint64_t *)&v118);
                    swift_bridgeObjectRelease();
                    v89 = *(_QWORD *)(*(_QWORD *)v55 + 16) >> 1;
                    if (v89 < v118[2])
                    {
                      v90 = v118[v89 + 4];
                      swift_release();
                      swift_release();
                      v118 = (_QWORD *)v90;
                      sub_24A01F1F8();
                      swift_release();
                      *(_WORD *)(v65 + 52) = 2048;
                      v91 = swift_bridgeObjectRetain();
                      v92 = sub_249FA5258(v91);
                      v94 = v93;
                      swift_release();
                      swift_bridgeObjectRelease();
                      if ((v94 & 1) != 0)
                        v95 = 0;
                      else
                        v95 = v92;
                      v118 = (_QWORD *)v95;
                      sub_24A01F1F8();
                      swift_release();
                      v96 = v116;
                      _os_log_impl(&dword_249F70000, v116, (os_log_type_t)v114, "Updated %ld out of %ld partitions with %ld primary observations (min=%ld, median=%ld, max=%ld)", (uint8_t *)v65, 0x3Eu);
                      MEMORY[0x24BD07950](v65, -1, -1);
                      swift_release();

                      goto LABEL_64;
                    }
                    goto LABEL_107;
                  }
                  v79 = *(_QWORD *)(v71 + 8 * v78);
                  ++v66;
                  if (!v79)
                  {
                    v66 = v78 + 1;
                    if (v78 + 1 >= v74)
                      goto LABEL_94;
                    v79 = *(_QWORD *)(v71 + 8 * v66);
                    if (!v79)
                    {
                      v66 = v78 + 2;
                      if (v78 + 2 >= v74)
                        goto LABEL_94;
                      v79 = *(_QWORD *)(v71 + 8 * v66);
                      if (!v79)
                      {
                        v66 = v78 + 3;
                        if (v78 + 3 >= v74)
                          goto LABEL_94;
                        v79 = *(_QWORD *)(v71 + 8 * v66);
                        if (!v79)
                        {
                          v66 = v78 + 4;
                          if (v78 + 4 >= v74)
                            goto LABEL_94;
                          v79 = *(_QWORD *)(v71 + 8 * v66);
                          if (!v79)
                          {
                            v80 = v78 + 5;
                            if (v80 >= v74)
                              goto LABEL_94;
                            v79 = *(_QWORD *)(v71 + 8 * v80);
                            if (!v79)
                            {
                              while (1)
                              {
                                v66 = v80 + 1;
                                if (__OFADD__(v80, 1))
                                  goto LABEL_108;
                                if (v66 >= v74)
                                  goto LABEL_94;
                                v79 = *(_QWORD *)(v71 + 8 * v66);
                                ++v80;
                                if (v79)
                                  goto LABEL_92;
                              }
                            }
                            v66 = v80;
                          }
                        }
                      }
                    }
                  }
LABEL_92:
                  v73 = (v79 - 1) & v79;
                  v76 = __clz(__rbit64(v79)) + (v66 << 6);
                }
                v77 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v55 + 56) + 8 * v76);
                v49 = __OFADD__(v67, v77);
                v67 += v77;
                if (v49)
                  goto LABEL_103;
              }
            }

            swift_release_n();
          }
          goto LABEL_64;
        }
      }
      else
      {
        if (v6 < 1)
          goto LABEL_59;
        v10 = 0;
        v21 = *(_QWORD *)(aBlock[0] + 16);
      }
      do
      {
        v6 = v10 + 0x2000;
        LOBYTE(v7) = __OFADD__(v10, 0x2000);
        aBlock[0] = v50;
        v23 = *(_QWORD *)(v50 + 24);
        v20 = v21 + 1;
        if (v21 >= (unint64_t)v23 >> 1)
        {
LABEL_50:
          sub_249F8C9C8((unint64_t)v23 > 1, v20, 1);
          v50 = aBlock[0];
        }
        *(_QWORD *)(v50 + 16) = v20;
        *(_QWORD *)(v50 + 8 * v21 + 32) = v10;
        if (v6 >= (uint64_t)v5)
          v53 = 1;
        else
          v53 = v7;
        v10 += 0x2000;
        v21 = v20;
      }
      while ((v53 & 1) == 0);
      goto LABEL_59;
    }
    goto LABEL_105;
  }
  swift_bridgeObjectRelease();

LABEL_65:
  sub_249F92358(v120[0], v120[1]);
}

uint64_t sub_249F9D65C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, unsigned int a6, uint64_t *a7, _QWORD *a8, int64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v54;
  uint64_t v55;
  int64_t v57;
  uint64_t v59;
  uint64_t v61[4];
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  v10 = *a1;
  v11 = *a1 + 1024;
  if (__OFADD__(*a1, 1024))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 >= a3)
    v11 = a3;
  if (v10 >= a3)
  {
    v10 = 0;
    *a1 = 0;
  }
  if (__OFSUB__(v11, v10))
  {
LABEL_65:
    __break(1u);
    JUMPOUT(0x249F9EC9CLL);
  }
  v59 = v11;
  v62 = sub_24A006BCC(v11 - v10);
  v63 = v15;
  v16 = *(_QWORD *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0208F0;
  *(_QWORD *)(v17 + 32) = a5;
  v61[0] = v17;
  v18 = sub_24A01EFA0();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = *(void **)(v16 + 16);
  MEMORY[0x24BDAC7A8](v19);
  v21 = a5;
  v22 = v20;
  sub_24A01F180();
  swift_bridgeObjectRelease();

  if (v9)
    return sub_249F92358(v62, v63);
  *a1 = v59;
  v23 = *a7;
  v24 = a7[1];
  sub_249F93CE0(v62, v63);
  sub_249F93CE0(v23, v24);
  sub_249FA1B60(a6, v62, v63, v23, v24);
  v26 = v25;
  sub_249F92358(v23, v24);
  sub_249F92358(v62, v63);
  v61[3] = MEMORY[0x24BEE4B08];
  if (*(_QWORD *)(v26 + 16))
  {
    v54 = v63;
    v55 = v62;
    v28 = *(_QWORD *)(v26 + 32);
    v29 = swift_bridgeObjectRetain();
    sub_249F9C260(v29, (uint64_t)a8);
    v30 = swift_bridgeObjectRetain();
    v31 = sub_249FA06C4(v30);
    swift_bridgeObjectRelease();
    v61[0] = v31;
    sub_249FA00C8(v61);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v61[0] + 16))
    {
      swift_release();
      __break(1u);
      JUMPOUT(0x249F9ED10);
    }
    v32 = *(_QWORD *)(v61[0] + 32);
    swift_release();
    if ((v32 & 0x8000000000000000) == 0)
    {
      if (v32 < *(_QWORD *)(v28 + 16))
      {
        v33 = *(_QWORD *)(v28 + 16 * v32 + 32);
        swift_bridgeObjectRelease();
        v34 = (_QWORD *)*a8;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a8 = v34;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v33 & 0x8000000000000000) == 0)
            goto LABEL_15;
        }
        else
        {
          v34 = sub_24A006BA4(v34);
          if ((v33 & 0x8000000000000000) == 0)
          {
LABEL_15:
            if ((unint64_t)v33 < v34[2])
            {
              v36 = v34[v33 + 4];
              if (!__OFADD__(v36, 1))
              {
                v34[v33 + 4] = v36 + 1;
                *a8 = v34;
                if ((unsigned __int128)(v33 * (__int128)a9) >> 64 == (v33 * a9) >> 63)
                {
                  v37 = (v33 + 1) * a9;
                  if ((unsigned __int128)((v33 + 1) * (__int128)a9) >> 64 == v37 >> 63)
                  {
                    if (v37 >= v33 * a9)
                    {
                      v38 = *a7;
                      v39 = a7[1];
                      sub_249F93CE0(*a7, v39);
                      sub_24A01EB14();
                      v41 = v40;
                      sub_249F92358(v38, v39);
                      if (is_mul_ok(0, a9))
                      {
                        if ((unsigned __int128)(1 * (__int128)a9) >> 64 == a9 >> 63)
                        {
                          if (a9 >= 0)
                          {
                            sub_249F93CE0(v55, v54);
                            sub_24A01EB14();
                            sub_249F92358(v55, v54);
                            sub_249F8BD0C(v61, v33);
                            __asm { BR              X9 }
                          }
LABEL_63:
                          __break(1u);
                          __break(1u);
                          JUMPOUT(0x249F9EC70);
                        }
LABEL_62:
                        __break(1u);
                        goto LABEL_63;
                      }
LABEL_61:
                      __break(1u);
                      goto LABEL_62;
                    }
LABEL_60:
                    __break(1u);
                    goto LABEL_61;
                  }
LABEL_59:
                  __break(1u);
                  goto LABEL_60;
                }
LABEL_58:
                __break(1u);
                goto LABEL_59;
              }
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
        }
        __break(1u);
        JUMPOUT(0x249F9E544);
      }
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  swift_bridgeObjectRelease();
  v42 = 1 << *(_BYTE *)(MEMORY[0x24BEE4B08] + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & *(_QWORD *)(MEMORY[0x24BEE4B08] + 56);
  v57 = (unint64_t)(v42 + 63) >> 6;
  if (v44)
  {
    v45 = __clz(__rbit64(v44));
    goto LABEL_40;
  }
  v46 = 1;
  if ((unint64_t)(v42 + 63) >> 6 > 1)
  {
    v47 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 64);
    if (v47)
    {
LABEL_39:
      v45 = __clz(__rbit64(v47)) + (v46 << 6);
LABEL_40:
      v49 = *(_QWORD *)(*(_QWORD *)(MEMORY[0x24BEE4B08] + 48) + 8 * v45);
      v50 = v49 * a9;
      if ((unsigned __int128)(v49 * (__int128)a9) >> 64 == (v49 * a9) >> 63)
      {
        v51 = __OFADD__(v49, 1);
        v52 = v49 + 1;
        if (!v51)
        {
          if ((unsigned __int128)(v52 * (__int128)a9) >> 64 == (v52 * a9) >> 63)
          {
            if (v52 * a9 >= v50)
            {
              sub_24A01EAE4();
              __asm { BR              X9 }
            }
            goto LABEL_53;
          }
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_52;
    }
    v48 = 2;
    if (v57 > 2)
    {
      v47 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 72);
      if (v47)
        goto LABEL_38;
      v48 = 3;
      if (v57 <= 3)
        goto LABEL_49;
      v47 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 80);
      if (v47)
      {
LABEL_38:
        v46 = v48;
        goto LABEL_39;
      }
      v48 = 4;
      if (v57 > 4)
      {
        v47 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 88);
        if (v47)
          goto LABEL_38;
        while (1)
        {
          v46 = v48 + 1;
          if (__OFADD__(v48, 1))
          {
            __break(1u);
            JUMPOUT(0x249F9ECB8);
          }
          if (v46 >= v57)
            break;
          v47 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 56 + 8 * v46);
          ++v48;
          if (v47)
            goto LABEL_39;
        }
      }
    }
  }
LABEL_49:
  swift_release();
  return sub_249F92358(v62, v63);
}

id sub_249F9EDB8(void *a1)
{
  id result;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = objc_msgSend(a1, sel_embedding);
  if (result)
  {
    v2 = result;
    v3 = sub_24A01EAFC();
    v5 = v4;

    sub_24A01EB08();
    return (id)sub_249F92358(v3, v5);
  }
  return result;
}

uint64_t sub_249F9EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;

  v10 = (a4 - a3) / 4;
  if (!a3)
    v10 = 0;
  v11 = (a2 - a1) / 4;
  v16 = a3;
  v17 = v10;
  v18 = 1.0 - a5;
  if (!a1)
    v11 = 0;
  v21 = a1;
  v22 = v11;
  v23 = a5;
  MEMORY[0x24BDAC7A8](a1);
  result = sub_249FA1824(v12, (uint64_t (*)(_QWORD *, uint64_t *))sub_249FA2A50);
  v14 = *(_QWORD *)(result + 16);
  if (v14 >> 61)
  {
    __break(1u);
    goto LABEL_12;
  }
  if ((unsigned __int128)(a7 * (__int128)a8) >> 64 != (a7 * a8) >> 63)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = a7 + 1;
  if (__OFADD__(a7, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((unsigned __int128)(v15 * (__int128)a8) >> 64 != (v15 * a8) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v15 * a8 >= a7 * a8)
  {
    v19 = MEMORY[0x24BEE0F88];
    v20 = MEMORY[0x24BDCFB90];
    v16 = result + 32;
    v17 = result + 32 + 4 * v14;
    __swift_project_boxed_opaque_existential_1Tm(&v16, MEMORY[0x24BEE0F88]);
    sub_24A01EAD8();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v16);
    return swift_bridgeObjectRelease();
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_249F9EFB0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unsigned int a7, unint64_t *a8)
{
  void *v16;

  v16 = (void *)MEMORY[0x24BD07458]();
  sub_249F9F04C(a2, a3, a4, a5, a6, a1, a7, a8);
  objc_autoreleasePoolPop(v16);
}

uint64_t sub_249F9F04C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t i, unint64_t a6, unsigned int a7, unint64_t *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v9 = v8;
  v49 = sub_24A01EE08();
  v48 = MEMORY[0x24BEE4AF8];
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
    goto LABEL_27;
  v17 = sub_24A006BCC(a1 * a2);
  v46 = v17;
  v47 = v18;
  if ((a6 & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    sub_24A01F48C();
    __break(1u);
    goto LABEL_31;
  }
  if (*(_QWORD *)(i + 16) <= a6)
    goto LABEL_29;
  v19 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v19);
  a4 = (unint64_t)v20;
  sub_24A01F180();
  if (v8)
  {
LABEL_31:

    swift_arrayDestroy();
    swift_unexpectedError();
    __break(1u);
    sub_249F92358(a6, i);
    sub_249F92358(v9, a4);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }

  swift_arrayDestroy();
  v9 = v46;
  a4 = v47;
  a6 = *a8;
  v21 = a8[1];
  sub_249F93CE0(v46, v47);
  sub_249F93CE0(a6, v21);
  sub_249FA1B60(a7, v46, v47, a6, v21);
  v23 = v22;
  sub_249F92358(a6, v21);
  sub_249F92358(v46, v47);
  v45 = v23;
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    for (i = 0; v24 != i; ++i)
    {
      v25 = *(_QWORD *)(v45 + 32 + 8 * i);
      if (!*(_QWORD *)(v25 + 16))
        continue;
      if (i >= *(_QWORD *)(v48 + 16))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v26 = *(_QWORD *)(v25 + 32);
      v9 = *(_QWORD *)(v48 + 8 * i + 32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a6 = sub_249F8B27C(v9);
      v29 = *(_QWORD *)(v49 + 16);
      v30 = (v28 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
        goto LABEL_25;
      a4 = v28;
      if (*(_QWORD *)(v49 + 24) >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v34 = (_QWORD *)v49;
          if ((v28 & 1) == 0)
            goto LABEL_19;
        }
        else
        {
          sub_249FC20E0();
          v34 = (_QWORD *)v49;
          if ((a4 & 1) == 0)
            goto LABEL_19;
        }
      }
      else
      {
        sub_249FBA388(v31, isUniquelyReferenced_nonNull_native);
        v32 = sub_249F8B27C(v9);
        if ((a4 & 1) != (v33 & 1))
          goto LABEL_30;
        a6 = v32;
        v34 = (_QWORD *)v49;
        if ((a4 & 1) == 0)
        {
LABEL_19:
          v34[(a6 >> 6) + 8] |= 1 << a6;
          v35 = 8 * a6;
          *(_QWORD *)(v34[6] + v35) = v9;
          *(_QWORD *)(v34[7] + v35) = v26;
          v36 = v34[2];
          v37 = __OFADD__(v36, 1);
          v38 = v36 + 1;
          if (v37)
            goto LABEL_26;
          v34[2] = v38;
          goto LABEL_8;
        }
      }
      *(_QWORD *)(v34[7] + 8 * a6) = v26;
LABEL_8:
      v49 = (uint64_t)v34;
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v39 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  *(_QWORD *)(v39 + 64) = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v39 + 32) = v48;
  swift_bridgeObjectRetain();
  v40 = (void *)sub_24A01F09C();
  v41 = MEMORY[0x24BDAC7A8](v40);
  MEMORY[0x24BDAC7A8](v41);
  v43 = v42;
  sub_24A01F180();

  sub_249F92358(v46, v47);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_249F9F5E4(void *a1, _QWORD **a2)
{
  id result;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;

  result = objc_msgSend(a1, sel_embedding);
  if (result)
  {
    v5 = result;
    v6 = sub_24A01EAFC();
    v8 = v7;

    v9 = objc_msgSend(a1, sel_identifier);
    v10 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_249F89B7C(0, v10[2] + 1, 1, v10);
      *a2 = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
      v10 = sub_249F89B7C((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    v10[2] = v13 + 1;
    v10[v13 + 4] = v9;
    *a2 = v10;
    sub_24A01EB08();
    return (id)sub_249F92358(v6, v8);
  }
  return result;
}

unint64_t sub_249F9F704(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v24 = a5;
  v9 = sub_24A01EDCC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A01EDE4();
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a3;
  if (*(_QWORD *)(v18 + 16))
  {
    result = sub_249F8B27C(a1);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * result);
      result = (unint64_t)objc_msgSend(a2, sel_partition);
      if (v20 != (int)result)
      {
        if (v20 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v20 <= 0x7FFFFFFF)
        {
          objc_msgSend(a2, sel_setPartition_, v20);
          v23[1] = *(_QWORD *)(a4 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexQuantizer_lockQueue);
          v21 = swift_allocObject();
          *(_QWORD *)(v21 + 16) = v24;
          *(_QWORD *)(v21 + 24) = v20;
          aBlock[4] = sub_249FA2A0C;
          aBlock[5] = v21;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_24A007D98;
          aBlock[3] = &block_descriptor_7;
          v22 = _Block_copy(aBlock);
          swift_retain();
          sub_24A01EDD8();
          v25 = MEMORY[0x24BEE4AF8];
          sub_249FA2B24((unint64_t *)&qword_2544CA290, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA298);
          sub_249F98C68((unint64_t *)&qword_2544CA2A0, &qword_2544CA298, MEMORY[0x24BEE12C8]);
          sub_24A01F228();
          MEMORY[0x24BD07014](0, v17, v12, v22);
          _Block_release(v22);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
          return swift_release();
        }
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_249F9F974(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t *v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) || (sub_249F8B27C(a2), (v6 & 1) == 0))
  {
    swift_endAccess();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v5;
    *v5 = 0x8000000000000000;
    sub_249FBFA34(0, a2, isUniquelyReferenced_nonNull_native);
    *v5 = v22;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_beginAccess();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v5;
  v23 = *v5;
  *v5 = 0x8000000000000000;
  v11 = sub_249F8B27C(a2);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  v2 = v10;
  if (*(_QWORD *)(v9 + 24) < v14)
  {
    sub_249FBA388(v14, v8);
    v15 = sub_249F8B27C(a2);
    if ((v2 & 1) != (v16 & 1))
    {
LABEL_17:
      result = sub_24A01F48C();
      __break(1u);
      return result;
    }
    v11 = v15;
    if ((v2 & 1) != 0)
      goto LABEL_11;
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((v8 & 1) == 0)
    goto LABEL_15;
  if ((v10 & 1) == 0)
    goto LABEL_16;
LABEL_11:
  while (1)
  {
    v17 = *(_QWORD *)(v23 + 56);
    v18 = *(_QWORD *)(v17 + 8 * v11);
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
      break;
LABEL_14:
    __break(1u);
LABEL_15:
    sub_249FC20E0();
    if ((v2 & 1) == 0)
      goto LABEL_16;
  }
  *(_QWORD *)(v17 + 8 * v11) = v20;
  *v5 = v23;
  return swift_endAccess();
}

void sub_249F9FB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x249F9FC6CLL);
}

int64_t sub_249F9FCA0(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F9FCE4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_249F8BD0C(&v13, *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249F9FE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;

  v7 = swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v8 + 16) && (v7 = sub_249F8B0C4(a1), (v9 & 1) != 0))
  {
    v10 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v7);
    v11 = *v10;
    v12 = v10[1];
    sub_249F93CE0(*v10, v12);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v7);
    v14 = v13;
    sub_24A01F180();

    v11 = v18;
    v12 = v19;
  }
  sub_249FA1B60(a1, a2, a3, v11, v12);
  v16 = v15;
  sub_249F92358(v11, v12);
  return v16;
}

uint64_t sub_249F9FF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexQuantizer_logger;
  v2 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_249F9FFDC()
{
  return type metadata accessor for VUIndexQuantizer();
}

uint64_t type metadata accessor for VUIndexQuantizer()
{
  uint64_t result;

  result = qword_2544CAE60;
  if (!qword_2544CAE60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249FA0020()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A01EDA8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_249FA00C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24A012EFC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249FA0840(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249FA0130(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24A012F10(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249FA0F30(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249FA0198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249FD8188(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

size_t sub_249FA01B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  size_t result;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t (*v24)(_BYTE *, uint64_t, uint64_t);
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VUGalleryUpdate(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v6 + 80);
  swift_retain();
  v41 = a1;
  sub_249F7B278(v4);
  v39 = v6;
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v11 = v10(v4, 1, v5);
  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v11 != 1)
  {
    v13 = 0;
    v40 = (v9 + 32) & ~v9;
    v19 = MEMORY[0x24BEE4AF8] + v40;
    v38 = v9 | 7;
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v21 = v39;
    while (1)
    {
      result = sub_249F98928((uint64_t)v4, (uint64_t)v8, type metadata accessor for VUGalleryUpdate);
      if (v13)
      {
        v12 = v20;
        v17 = __OFSUB__(v13--, 1);
        if (v17)
          goto LABEL_32;
      }
      else
      {
        v22 = v20[3];
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_33;
        v23 = v8;
        v24 = v10;
        v25 = v5;
        v26 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1)
          v27 = 1;
        else
          v27 = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA60);
        v28 = *(_QWORD *)(v21 + 72);
        v29 = v40;
        v12 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v12);
        if (!v28)
          goto LABEL_34;
        v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1)
          goto LABEL_35;
        v32 = v30 / v28;
        v12[2] = v27;
        v12[3] = 2 * (v30 / v28);
        v33 = (char *)v12 + v29;
        v34 = v20[3] >> 1;
        v35 = v34 * v28;
        if (v20[2])
        {
          if (v12 < v20 || v33 >= (char *)v20 + v40 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v20)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v20[2] = 0;
        }
        v19 = (uint64_t)&v33[v35];
        v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        result = swift_release();
        v5 = v25;
        v21 = v39;
        v10 = v24;
        v8 = v23;
        v17 = __OFSUB__(v37, 1);
        v13 = v37 - 1;
        if (v17)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
      }
      sub_249F98928((uint64_t)v8, v19, type metadata accessor for VUGalleryUpdate);
      v19 += *(_QWORD *)(v21 + 72);
      sub_249F7B278(v4);
      v20 = v12;
      if (v10(v4, 1, v5) == 1)
        goto LABEL_3;
    }
  }
  v13 = 0;
LABEL_3:
  swift_release();
  result = sub_249FA2AE4((uint64_t)v4);
  v15 = v12[3];
  if (v15 >= 2)
  {
    v16 = v15 >> 1;
    v17 = __OFSUB__(v16, v13);
    v18 = v16 - v13;
    if (v17)
      goto LABEL_36;
    v12[2] = v18;
  }
  return (size_t)v12;
}

size_t sub_249FA048C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  size_t result;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v34 = type metadata accessor for VUGallery.EntityView(0);
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v33 = a2;
  v9 = 0;
  if (v7)
  {
    v10 = (v6 + 32) & ~v6;
    v11 = MEMORY[0x24BEE4AF8] + v10;
    v12 = *(_QWORD *)(v3 + 72);
    v13 = v10;
    v14 = a2 + v10;
    v36 = v6 | 7;
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v35 = v5;
    do
    {
      result = sub_249FA2AA0(v14, (uint64_t)v5);
      if (v9)
      {
        v8 = v15;
        v16 = __OFSUB__(v9--, 1);
        if (v16)
          goto LABEL_27;
      }
      else
      {
        v18 = v15[3];
        if ((uint64_t)((v18 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          return result;
        }
        v19 = v18 & 0xFFFFFFFFFFFFFFFELL;
        if (v19 <= 1)
          v20 = 1;
        else
          v20 = v19;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA398);
        v8 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v8);
        if (!v12)
          goto LABEL_33;
        v21 = result - v13;
        if (result - v13 == 0x8000000000000000 && v12 == -1)
          goto LABEL_34;
        v23 = v21 / v12;
        v8[2] = v20;
        v8[3] = 2 * (v21 / v12);
        v24 = v13;
        v25 = (char *)v8 + v13;
        v26 = v15[3] >> 1;
        v27 = v26 * v12;
        if (v15[2])
        {
          if (v8 < v15 || v25 >= (char *)v15 + v24 + v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v8 != v15)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v15[2] = 0;
        }
        v11 = (uint64_t)&v25[v27];
        v29 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v26;
        swift_release();
        v13 = v24;
        v5 = v35;
        v16 = __OFSUB__(v29, 1);
        v9 = v29 - 1;
        if (v16)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      sub_249F98928((uint64_t)v5, v11, type metadata accessor for VUGallery.EntityView);
      v11 += v12;
      v14 += v12;
      v15 = v8;
      --v7;
    }
    while (v7);
  }
  result = swift_bridgeObjectRelease();
  v30 = v8[3];
  if (v30 >= 2)
  {
    v31 = v30 >> 1;
    v16 = __OFSUB__(v31, v9);
    v32 = v31 - v9;
    if (v16)
      goto LABEL_35;
    v8[2] = v32;
  }
  return (size_t)v8;
}

uint64_t sub_249FA06C4(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  size_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FF790);
        v11 = (_QWORD *)swift_allocObject();
        v12 = _swift_stdlib_malloc_size(v11);
        v13 = v12 - 32;
        if (v12 < 32)
          v13 = v12 - 17;
        v14 = v13 >> 4;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        v15 = (unint64_t)(v11 + 4);
        v16 = v2[3] >> 1;
        v17 = 16 * v16;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[v17 / 8 + 4])
            memmove(v11 + 4, v2 + 4, v17);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + v17);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v11;
      }
      v19 = __OFSUB__(v4--, 1);
      if (v19)
        break;
      *v6 = v5;
      *((_DWORD *)v6 + 2) = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v20 = v2[3];
  if (v20 < 2)
    return (uint64_t)v2;
  v21 = v20 >> 1;
  v19 = __OFSUB__(v21, v4);
  v22 = v21 - v4;
  if (!v19)
  {
    v2[2] = v22;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249FA0840(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  float v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  float *v28;
  float *v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  float v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 16;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = v86;
        v89 = v85;
        do
        {
          v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90)
            break;
          if (!v84)
            goto LABEL_145;
          v91 = *(_QWORD *)v89;
          *(_OWORD *)v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(_QWORD *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_150;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_107:
      v93 = v12;
      v104 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_136;
          if (!v94)
            goto LABEL_149;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_249F90E3C((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_24A012ED4((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_138;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_139;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA58);
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v103 = *a1 + 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v105 = v6;
  v106 = v3;
  v107 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v103 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(float *)(v103 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_142;
        if (v14 < v10)
        {
          v19 = 16 * v10 - 16;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_148;
              v23 = (_OWORD *)(v11 + v16);
              v24 = (_OWORD *)(v11 + v19);
              v25 = *(_QWORD *)(v11 + v16);
              v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1)
                *v23 = *v24;
              v22 = v11 + v19;
              *(_QWORD *)v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v10, v14))
      goto LABEL_140;
    if (v10 - v14 >= v6)
      goto LABEL_50;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_143;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (float *)(v11 + 16 * v10);
      do
      {
        v29 = v28;
        v30 = v14;
        do
        {
          v31 = v29[2];
          if (*(v29 - 2) >= v31)
            break;
          if (!v11)
            goto LABEL_146;
          v32 = *(_QWORD *)v29;
          *(_OWORD *)v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((_QWORD *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_50:
    if (v10 < v14)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24A012ABC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v107;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_24A012ABC((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v107;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_124;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_125;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_127;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_130;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_134;
            v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_81;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_126;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_129;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_132;
        if (__OFADD__(v59, v64))
          goto LABEL_133;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_87:
          if (v65)
            v37 = v49;
          goto LABEL_89;
        }
LABEL_81:
        if ((v60 & 1) != 0)
          goto LABEL_128;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_131;
        if (v71 < v59)
          goto LABEL_15;
LABEL_89:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11)
          goto LABEL_147;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_249F90E3C((char *)(v11 + 16 * *(_QWORD *)v78), (char *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_97;
        if (v81 < v79)
          goto LABEL_121;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_122;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_123;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v107;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v10 >= v106)
    {
      v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249FA0F30(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_249FA15B8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_24A012ED4((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_24A01EFC4();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24A012ABC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_24A012ABC((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_249FA15B8((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249FA15B8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24A012BB8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FA1824(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = sub_24A01EFC4();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = v5 + 32;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 32;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(_QWORD *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(_QWORD *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_249FA191C(const float *a1, uint64_t a2, const float *a3, vDSP_Length __N, uint64_t a5, float a6, float a7)
{
  uint64_t v7;

  v7 = *(_QWORD *)(a5 + 8);
  if (v7 == a2 && v7 == __N)
    sub_249FA1978(a1, a2, a3, __N, (int)a1, a2, (float **)a5, __N, a7, a6);
  else
    __break(1u);
}

void sub_249FA1978(const float *a1, int a2, const float *__C, int a4, int a5, int a6, float **a7, vDSP_Length __N, float a9, float a10)
{
  float *v10;
  float __D;
  float __B;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  __D = a9;
  __B = a10;
  if (!a1)
    goto LABEL_7;
  if (!__C)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  v10 = *a7;
  if (!v10)
    goto LABEL_9;
  if ((__N & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  vDSP_vsmsma(a1, 1, &__B, __C, 1, &__D, v10, 1, __N);
}

uint64_t sub_249FA1A14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x249FA1A74);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_249FA1A2C + *((int *)qword_249FA1A78 + (a4 >> 62))))(v5);
}

uint64_t sub_249FA1A88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_249FA1A98 + *((int *)qword_249FA1B40 + (a4 >> 62))))();
}

uint64_t sub_249FA1AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x249FA1B38);
  }
  return ((uint64_t (*)(void))((char *)&loc_249FA1AE8 + *((int *)qword_249FA1B50 + a3)))();
}

void sub_249FA1B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

id sub_249FA2290(void *a1)
{
  return sub_249F9EDB8(a1);
}

void sub_249FA22A8()
{
  sub_249FA2A14();
}

void sub_249FA22BC(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = 768;
  if (a1 != 6)
    v5 = 128;
  v6 = 4 * v5;
  v7 = a3 >> 62;
  sub_249F93CE0(a2, a3);
  sub_249F9FB24(v6, a2, a3);
  __asm { BR              X10 }
}

uint64_t sub_249FA23C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  float *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t i;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[2];
  uint64_t v73;
  unint64_t v74;

  if ((v64 & 1) != 0)
    goto LABEL_81;
  if (a1 < v65 / v2)
  {
    v70 = v1;
    sub_249F93CE0(v73, v74);
    sub_24A0155B4(v73, v74);
    v7 = v6;
    v67 = v74;
    v68 = v73;
    sub_249F92358(v73, v74);
    v8 = *(_QWORD *)(v7 + 16);
    if (!v8)
    {
      v12 = MEMORY[0x24BEE4AF8];
      goto LABEL_25;
    }
    v9 = 0;
    v10 = *(_QWORD *)(v5 - 112);
    v11 = v10 + 56;
    v12 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v9 <= v8)
        v13 = v8;
      else
        v13 = v9;
      v14 = v9;
      while (1)
      {
        if (v14 == v13)
        {
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
        v15 = *(_DWORD *)(v7 + 32 + 4 * v14);
        v9 = v14 + 1;
        if (!*(_QWORD *)(v10 + 16))
          goto LABEL_18;
        v16 = sub_24A01F4E0();
        v17 = v4 << *(_BYTE *)(v10 + 32);
        v18 = v16 & ~v17;
        if (((*(_QWORD *)(v11 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          goto LABEL_18;
        v19 = *(_QWORD *)(v10 + 48);
        if (*(_QWORD *)(v19 + 8 * v18) != v14)
          break;
LABEL_9:
        ++v14;
        if (v9 == v8)
          goto LABEL_25;
      }
      v20 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v20;
        if (((*(_QWORD *)(v11 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        if (*(_QWORD *)(v19 + 8 * v18) == v14)
          goto LABEL_9;
      }
LABEL_18:
      v72[0] = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249F8CA18(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v72[0];
      }
      v22 = *(_QWORD *)(v12 + 16);
      v21 = *(_QWORD *)(v12 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_249F8CA18(v21 > 1, v22 + 1, 1);
        v12 = v72[0];
      }
      *(_QWORD *)(v12 + 16) = v22 + 1;
      v23 = v12 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v14;
      *(_DWORD *)(v23 + 40) = v15;
      v4 = -1;
      if (v9 == v8)
      {
LABEL_25:
        swift_bridgeObjectRelease();
        v72[0] = v12;
        swift_retain();
        sub_249FA00C8(v72);
        if (!v70)
        {
          swift_release();
          v24 = v72[0];
          v25 = *(_QWORD *)(v72[0] + 16);
          if (!v25)
            JUMPOUT(0x249FA237CLL);
          if (*(float *)(v72[0] + 40) >= 0.9)
          {
            if (v25 == 1)
            {
LABEL_46:
              v72[0] = MEMORY[0x24BEE4AF8];
              sub_249F8C9C8(0, v25, 0);
              v41 = v72[0];
              v42 = *(_QWORD *)(v72[0] + 16);
              for (i = 32; ; i += 16)
              {
                v44 = *(_QWORD *)(v24 + i);
                v72[0] = v41;
                v45 = *(_QWORD *)(v41 + 24);
                if (v42 >= v45 >> 1)
                {
                  sub_249F8C9C8(v45 > 1, v42 + 1, 1);
                  v41 = v72[0];
                }
                *(_QWORD *)(v41 + 16) = v42 + 1;
                *(_QWORD *)(v41 + 8 * v42++ + 32) = v44;
                if (!--v25)
                {
                  swift_release();
                  JUMPOUT(0x249FA238CLL);
                }
              }
            }
            v39 = (float *)(v72[0] + 56);
            v26 = 1;
            while (*v39 >= 0.9)
            {
              v40 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_70;
              ++v26;
              v39 += 4;
              if (v40 == v25)
                goto LABEL_46;
            }
          }
          else
          {
            v26 = 0;
          }
          if (v26 < v25)
          {
            v27 = *(_QWORD *)(v72[0] + 32 + 16 * v26);
            v28 = v27 * v69;
            if ((unsigned __int128)(v27 * (__int128)v69) >> 64 == (v27 * v69) >> 63)
            {
              v29 = __OFADD__(v27, 1);
              v30 = v27 + 1;
              if (!v29)
              {
                if ((unsigned __int128)(v30 * (__int128)v69) >> 64 == (v30 * v69) >> 63)
                {
                  if (v30 * v69 >= v28)
                  {
                    v31 = sub_24A01EB14();
                    v33 = v32;
                    sub_249F92358(v68, v67);
                    v73 = v31;
                    v74 = v33;
                    if (*(_QWORD *)(v24 + 16) >= v26)
                    {
                      if (v26)
                      {
                        v72[0] = MEMORY[0x24BEE4AF8];
                        sub_249F8C9C8(0, v26, 0);
                        v34 = v72[0];
                        v35 = *(_QWORD *)(v72[0] + 16);
                        v36 = 32;
                        do
                        {
                          v37 = *(_QWORD *)(v24 + v36);
                          v72[0] = v34;
                          v38 = *(_QWORD *)(v34 + 24);
                          if (v35 >= v38 >> 1)
                          {
                            sub_249F8C9C8(v38 > 1, v35 + 1, 1);
                            v34 = v72[0];
                          }
                          *(_QWORD *)(v34 + 16) = v35 + 1;
                          *(_QWORD *)(v34 + 8 * v35 + 32) = v37;
                          v36 += 16;
                          ++v35;
                          --v26;
                        }
                        while (v26);
                        swift_release();
                      }
                      else
                      {
                        swift_release();
                        v34 = MEMORY[0x24BEE4AF8];
                      }
                      v46 = swift_bridgeObjectRetain();
                      sub_249FB7B20(v46);
                      v47 = sub_249FC6B8C(v34);
                      swift_bridgeObjectRelease();
                      sub_249F9FCE4(v47);
                      JUMPOUT(0x249FA2398);
                    }
LABEL_80:
                    __break(1u);
LABEL_81:
                    __break(1u);
                    JUMPOUT(0x249FA2940);
                  }
LABEL_79:
                  __break(1u);
                  goto LABEL_80;
                }
LABEL_78:
                __break(1u);
                goto LABEL_79;
              }
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
LABEL_83:
        swift_release();
        __break(1u);
        JUMPOUT(0x249FA2954);
      }
    }
  }
  if (v63)
  {
    if (v63 == 1)
    {
      v48 = v65;
      if ((v64 & 1) != 0)
      {
        __break(1u);
        JUMPOUT(0x249FA280CLL);
      }
    }
    else
    {
      v50 = *(_QWORD *)(v71 + 16);
      v49 = *(_QWORD *)(v71 + 24);
      v48 = v49 - v50;
      if (__OFSUB__(v49, v50))
      {
        __break(1u);
        goto LABEL_83;
      }
    }
  }
  else
  {
    v48 = v66;
  }
  v51 = sub_24A006BCC(v48);
  v72[0] = v51;
  v72[1] = v52;
  v53 = *(_QWORD *)(v3 + 16);
  if (v53)
  {
    v54 = 0;
    do
    {
      v55 = *(_QWORD *)(v3 + 8 * v54 + 32);
      v56 = v55 * v2;
      if ((unsigned __int128)(v55 * (__int128)v2) >> 64 != (v55 * v2) >> 63)
        goto LABEL_71;
      v29 = __OFADD__(v55, 1);
      v57 = v55 + 1;
      if (v29)
      {
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      if ((unsigned __int128)(v57 * (__int128)v2) >> 64 != (v57 * v2) >> 63)
        goto LABEL_73;
      if (v57 * v2 < v56)
        goto LABEL_74;
      ++v54;
      v58 = sub_24A01EB14();
      v60 = v59;
      sub_24A01EB08();
      sub_249F92358(v58, v60);
    }
    while (v53 != v54);
    swift_bridgeObjectRelease();
    v61 = v72[0];
  }
  else
  {
    v61 = v51;
    swift_bridgeObjectRelease();
  }
  sub_249F92358(v73, v74);
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_249FA2964()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249FA2988(unint64_t a1)
{
  uint64_t v1;

  sub_249F9EFB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unint64_t **)(v1 + 64));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

id sub_249FA29D4(void *a1)
{
  uint64_t v1;

  return sub_249F9F5E4(a1, *(_QWORD ***)(v1 + 16));
}

unint64_t sub_249FA29DC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_249F9F704(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_249FA29E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FA2A0C()
{
  uint64_t v0;

  return sub_249F9F974(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_249FA2A14()
{
  uint64_t v0;

  sub_249FD2380(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void (**)(void))(v0 + 80));
}

void sub_249FA2A50(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v4 + 8);
  sub_249FA191C(*(const float **)v4, v6, *(const float **)v5, *(_QWORD *)(v5 + 8), a1, *(float *)(v4 + 16), *(float *)(v5 + 16));
  *a2 = v6;
}

uint64_t sub_249FA2AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VUGallery.EntityView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FA2AE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF7E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249FA2B24(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BD078A8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id Data.multiArray(for:dataType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_249FA3438(v3, a2);
  MEMORY[0x24BDAC7A8](v4);
  sub_24A01F0B4();
  return v4;
}

void sub_249FA2C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_249FA2CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v20;
  __int16 v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v20 = v4;
  v21 = v5;
  v22 = BYTE2(v5);
  v23 = BYTE3(v5);
  v24 = BYTE4(v5);
  v25 = BYTE5(v5);
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v7 = (id)MEMORY[0x24BD071F4](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_31:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      __break(1u);
      JUMPOUT(0x249FA3178);
    }
    v6 = *(void **)(v1 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v7 = v6;
  }
  v8 = v7;
  v9 = (unint64_t)objc_msgSend(v7, sel_integerValue);

  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    JUMPOUT(0x249FA3150);
  }
  if (v9)
  {
    for (i = 0; v9 != i; ++i)
    {
      if (v9 == i)
      {
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x249FA30CCLL);
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        v11 = (id)MEMORY[0x24BD071F4](1, v1);
      }
      else
      {
        if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_28;
        }
        v11 = *(id *)(v1 + 40);
      }
      v12 = v11;
      v13 = (uint64_t)objc_msgSend(v11, sel_integerValue);

      v14 = v13 * v2;
      if ((unsigned __int128)(v13 * (__int128)v2) >> 64 != (v13 * v2) >> 63)
        goto LABEL_22;
      if (!v3)
        goto LABEL_31;
      if (!*(_QWORD *)(v0 + 16))
      {
        __break(1u);
        JUMPOUT(0x249FA30D4);
      }
      v15 = *(_QWORD *)(v0 + 32);
      v16 = i * v15;
      if ((unsigned __int128)(i * (__int128)v15) >> 64 != (i * v15) >> 63)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x249FA30E4);
      }
      v17 = v16 * v2;
      if ((unsigned __int128)(v16 * (__int128)v2) >> 64 != (v16 * v2) >> 63)
        goto LABEL_25;
      v18 = i * v14;
      if ((unsigned __int128)(i * (__int128)v14) >> 64 != (i * v14) >> 63)
      {
        __break(1u);
        JUMPOUT(0x249FA30ECLL);
      }
      if (v14 < 0)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_24A01F408();
        __break(1u);
        JUMPOUT(0x249FA31F8);
      }
      memcpy((void *)(v3 + v17), (char *)&v20 + v18, v14);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

void sub_249FA324C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id i;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;

  v24 = a3 & 0xC000000000000001;
  if ((a3 & 0xC000000000000001) != 0)
    goto LABEL_29;
  if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = *(id *)(a3 + 32); ; i = (id)MEMORY[0x24BD071F4](0, a3))
    {
      v13 = i;
      v14 = (unint64_t)objc_msgSend(i, sel_integerValue);

      if ((v14 & 0x8000000000000000) != 0)
        break;
      if (!v14)
        return;
      v15 = 0;
      while (v14 != v15)
      {
        if (v24)
        {
          v16 = (id)MEMORY[0x24BD071F4](1, a3);
        }
        else
        {
          if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            goto LABEL_28;
          v16 = *(id *)(a3 + 40);
        }
        v17 = v16;
        v18 = (uint64_t)objc_msgSend(v16, sel_integerValue);

        v19 = v18 * a4;
        if ((unsigned __int128)(v18 * (__int128)a4) >> 64 != (v18 * a4) >> 63)
          goto LABEL_23;
        if (!a5)
          goto LABEL_32;
        if (!*(_QWORD *)(a7 + 16))
          goto LABEL_24;
        v20 = *(_QWORD *)(a7 + 32);
        v21 = v15 * v20;
        if ((unsigned __int128)(v15 * (__int128)v20) >> 64 != (v15 * v20) >> 63)
          goto LABEL_25;
        v22 = v21 * a4;
        if ((unsigned __int128)(v21 * (__int128)a4) >> 64 != (v21 * a4) >> 63)
          goto LABEL_26;
        if (!a1)
          goto LABEL_33;
        v23 = v15 * v19;
        if ((unsigned __int128)(v15 * (__int128)v19) >> 64 != (v15 * v19) >> 63)
          goto LABEL_27;
        if (v19 < 0)
          goto LABEL_34;
        ++v15;
        memmove((void *)(a5 + v22), (const void *)(a1 + v23), v19);
        if (v14 == v15)
          return;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      ;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  sub_24A01F408();
  __break(1u);
}

id sub_249FA3438(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_249FA3620();
  v4 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_24A01EA00();

    swift_willThrow();
  }
  return v5;
}

void sub_249FA3520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_249FA2C44(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_249FA353C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = sub_24A01E9AC();
  v15 = result;
  if (result)
  {
    result = sub_24A01E9D0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v15 += a1 - result;
  }
  v16 = __OFSUB__(a2, a1);
  v17 = a2 - a1;
  if (v16)
  {
    __break(1u);
    goto LABEL_13;
  }
  v18 = sub_24A01E9C4();
  if (v18 >= v17)
    v19 = v17;
  else
    v19 = v18;
  v20 = v15 + v19;
  if (v15)
    v21 = v20;
  else
    v21 = 0;
  sub_249FA324C(v15, v21, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_249FA3620()
{
  unint64_t result;

  result = qword_2544CAD40;
  if (!qword_2544CAD40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2544CAD40);
  }
  return result;
}

uint64_t sub_249FA365C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_249F8B27C(a1), (v2 & 1) != 0))
    return swift_retain();
  else
    return 0;
}

uint64_t sub_249FA369C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_249F8B27C(a1), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v3);
  else
    return 0;
}

uint64_t sub_249FA36E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_249F8B20C(a1), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v3);
  else
    return 0;
}

uint64_t sub_249FA3724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_249F8B27C(a1), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(a2 + 56);
    v9 = sub_24A01EBA4();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a3, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12 = a3;
    v13 = 0;
    v14 = v9;
  }
  else
  {
    v14 = sub_24A01EBA4();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v12 = a3;
    v13 = 1;
  }
  return v11(v12, v13, 1, v14);
}

unint64_t sub_249FA37CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    goto LABEL_5;
  v4 = sub_249F8B27C(a1);
  if ((v5 & 1) == 0)
  {
    v2 = 0;
LABEL_5:
    v6 = 1;
    return v2 | ((unint64_t)v6 << 32);
  }
  v6 = 0;
  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 56) + 4 * v4);
  return v2 | ((unint64_t)v6 << 32);
}

uint64_t sub_249FA3824(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_249F8B27C(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_249FA3864(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_249F8B2AC(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

unint64_t sub_249FA38A4@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) && (result = sub_249F8B20C(result), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * result);
    v7 = *v6;
    v8 = v6[1];
    v9 = v6[2];
    *a3 = *v6;
    a3[1] = v8;
    a3[2] = v9;
    sub_249F93CE0(v7, v8);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

unint64_t sub_249FA390C(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t *i;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_249F8C9C8(0, v2, 0);
  v3 = v13;
  for (i = (uint64_t *)(a1 + 32); ; ++i)
  {
    v8 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
      break;
    result = sub_249F8B27C(*i);
    if ((v9 & 1) == 0)
      goto LABEL_10;
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result) + 16);
    v12 = *(_QWORD *)(v13 + 16);
    v11 = *(_QWORD *)(v13 + 24);
    if (v12 >= v11 >> 1)
      result = sub_249F8C9C8(v11 > 1, v12 + 1, 1);
    *(_QWORD *)(v13 + 16) = v12 + 1;
    *(_QWORD *)(v13 + 8 * v12 + 32) = v10;
    if (!--v2)
      return v3;
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_249FA3A04(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_249F89B7C(0, v3[2] + 1, 1, v3);
    v3 = (_QWORD *)result;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    result = (uint64_t)sub_249F89B7C((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    v3 = (_QWORD *)result;
  }
  v3[2] = v6 + 1;
  v3[v6 + 4] = a1;
  *v1 = v3;
  return result;
}

BOOL sub_249FA3AA0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  return sub_24A0127D8((uint64_t (*)(char *))sub_249FCA374, (_BOOL8)v3, a2);
}

uint64_t sub_249FA3AE0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FA3B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a1;
  v3 = sub_24A01EBA4();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF858);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VUStreamingGallery.Label(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v34 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (uint64_t)&v34 - v18;
  v19 = *(_QWORD *)(a2 + 16);
  if (!v19)
    return 0;
  v20 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v43 = *(_QWORD *)(v17 + 72);
  v34 = a2;
  swift_bridgeObjectRetain();
  v37 = v10;
  v38 = v7;
  v35 = v16;
  v36 = v13;
  do
  {
    v21 = v45;
    sub_249F9896C(v20, v45, type metadata accessor for VUStreamingGallery.Label);
    v22 = &v9[*(int *)(v7 + 48)];
    sub_249F9896C(v21, (uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    sub_249F9896C(v44, (uint64_t)v22, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_249F9896C((uint64_t)v9, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
LABEL_4:
        sub_249F990A0((uint64_t)v9, &qword_2578FF858);
        sub_249F989C0(v45, type metadata accessor for VUStreamingGallery.Label);
        goto LABEL_5;
      }
      v24 = v41;
      v23 = v42;
      v25 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v26 = v39;
      v25(v39, v13, v42);
      v27 = v40;
      v25(v40, v22, v23);
      v28 = sub_24A01EB8C();
      v29 = *(void (**)(char *, uint64_t))(v24 + 8);
      v30 = v27;
      v16 = v35;
      v13 = v36;
      v29(v30, v23);
      v31 = v26;
      v7 = v38;
      v29(v31, v23);
    }
    else
    {
      sub_249F9896C((uint64_t)v9, (uint64_t)v16, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_4;
      v28 = *v16 == *(_QWORD *)v22;
    }
    sub_249F989C0((uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    sub_249F989C0(v45, type metadata accessor for VUStreamingGallery.Label);
    if ((v28 & 1) != 0)
    {
      v32 = 1;
      goto LABEL_14;
    }
LABEL_5:
    v20 += v43;
    --v19;
  }
  while (v19);
  v32 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v32;
}

void sub_249FA3E60(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_249FA3E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_249F989B0((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_249FBF10C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_249F990A0(a1, &qword_2544CAF40);
    sub_249FB7DDC(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_249F990A0((uint64_t)v9, &qword_2544CAF40);
  }
}

unint64_t sub_249FA3F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v4;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_249FBF3C4(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v19;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_249F8B27C(a4);
    if ((v12 & 1) != 0)
    {
      v13 = result;
      v14 = swift_isUniquelyReferenced_nonNull_native();
      v15 = *v4;
      v20 = *v5;
      *v5 = 0x8000000000000000;
      if ((v14 & 1) == 0)
      {
        sub_249FC1160();
        v15 = v20;
      }
      v16 = *(_QWORD *)(v15 + 56) + 24 * v13;
      v17 = *(_QWORD *)(v16 + 8);
      v18 = *(_QWORD *)(v16 + 16);
      sub_249FBDFD4(v13, v15);
      *v5 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_249F92358(v17, v18);
    }
  }
  return result;
}

uint64_t sub_249FA4058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13[3];

  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_249FBF23C(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v13[0];
    swift_bridgeObjectRelease();
    v10 = sub_24A01EBA4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a4, v10);
  }
  else
  {
    sub_249FB7ECC(a4, (uint64_t)v13);
    v12 = sub_24A01EBA4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a4, v12);
    return sub_249FCA398(v13[0], v13[1], v13[2]);
  }
}

unint64_t sub_249FA4148(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v7;
  unint64_t result;
  char v9;
  unint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  if ((a2 & 1) != 0)
  {
    result = sub_249F8B27C(a3);
    if ((v9 & 1) == 0)
      return result;
    v10 = result;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v3;
    v14 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249FC20E0();
      v12 = v14;
    }
    sub_249FBE6CC(v10, v12);
    *v4 = v12;
  }
  else
  {
    v7 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v3;
    *v3 = 0x8000000000000000;
    sub_249FBFA34(a1, a3, v7);
    *v3 = v13;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249FA4214(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  if ((a2 & 1) == 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_249FBF8E4(a1, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_249F8B20C(a3);
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v3;
    v18 = *v4;
    *v4 = 0x8000000000000000;
    if ((v11 & 1) == 0)
    {
      sub_249FC1D1C();
      v12 = v18;
    }
    v13 = *(_QWORD *)(v12 + 48);
    v14 = sub_24A01EBA4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v8, v14);
    sub_249FBE42C(v8, v12);
    *v4 = v12;
    goto LABEL_7;
  }
LABEL_8:
  v15 = sub_24A01EBA4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a3, v15);
}

uint64_t sub_249FA4338(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A01EBA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_249F990A0(a1, &qword_2544CAD70);
    v13 = sub_249F8B27C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_249FC1AFC();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_249FBE9F4(v15, v17, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_249F990A0((uint64_t)v8, &qword_2544CAD70);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_249FBF7C0((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FA4518(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VUStreamingGallery.Label(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_249F990A0(a1, &qword_2578FFA68);
    v13 = sub_249F8B27C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_249FC272C();
        v17 = v22;
      }
      sub_249F98928(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      sub_249FBE9F4(v15, v17, type metadata accessor for VUStreamingGallery.Label);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_249F990A0((uint64_t)v8, &qword_2578FFA68);
  }
  else
  {
    sub_249F98928(a1, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_249FC01D0((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FA46F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_249FC0074(a1, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v15;
    swift_bridgeObjectRelease();
    return sub_249F989C0(a2, type metadata accessor for VUStreamingGallery.Label);
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = sub_249F8B2AC(a2);
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v11 = swift_isUniquelyReferenced_nonNull_native();
      v12 = *v2;
      v16 = *v3;
      *v3 = 0x8000000000000000;
      if ((v11 & 1) == 0)
      {
        sub_249FC2958();
        v12 = v16;
      }
      v13 = *(_QWORD *)(v12 + 48);
      v14 = type metadata accessor for VUStreamingGallery.Label(0);
      sub_249F989C0(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v8, type metadata accessor for VUStreamingGallery.Label);
      sub_249FBEBBC(v8, v12);
      *v3 = v12;
      swift_bridgeObjectRelease();
    }
    sub_249F989C0(a2, type metadata accessor for VUStreamingGallery.Label);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FA4850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13[3];

  if (a3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_249FC0420(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v13[0];
    swift_bridgeObjectRelease();
    v10 = sub_24A01EBA4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a4, v10);
  }
  else
  {
    sub_249FB8198(a4, (uint64_t)v13);
    v12 = sub_24A01EBA4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a4, v12);
    return sub_249FCA428(v13[0], v13[1], v13[2]);
  }
}

uint64_t sub_249FA4940(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_249FA4948(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_249FA49A8(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_24A01F030();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_249F8BD0C(&v14, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249FA4B18(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_24A01F030();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_249F8BD0C(&v14, *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249FA4C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;

  v2 = sub_24A01EBA4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249FA2B24(&qword_2578FF758, v3, MEMORY[0x24BDCEA88]);
  result = sub_24A01F030();
  v14 = 0;
  v15 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v16 + 63) >> 6;
  v25 = result;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v19 | (v14 << 6); ; i = __clz(__rbit64(v22)) + (v14 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
    sub_249F8BE04((uint64_t)v9, v7);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v2);
    if (v18)
      goto LABEL_4;
LABEL_5:
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v21);
    ++v14;
    if (!v22)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v24)
        goto LABEL_24;
      v22 = *(_QWORD *)(v15 + 8 * v14);
      if (!v22)
      {
        v14 = v21 + 2;
        if (v21 + 2 >= v24)
          goto LABEL_24;
        v22 = *(_QWORD *)(v15 + 8 * v14);
        if (!v22)
        {
          v14 = v21 + 3;
          if (v21 + 3 >= v24)
            goto LABEL_24;
          v22 = *(_QWORD *)(v15 + 8 * v14);
          if (!v22)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v2);
LABEL_25:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v15 + 8 * v23);
  if (v22)
  {
    v14 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249FA4F54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v24 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  sub_249FA2B24(&qword_2578FFB18, type metadata accessor for VUStreamingGallery.Label, (uint64_t)&protocol conformance descriptor for VUStreamingGallery.Label);
  result = sub_24A01F030();
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v25 = result;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      goto LABEL_23;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_23;
      v22 = *(_QWORD *)(v24 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_23;
        v22 = *(_QWORD *)(v24 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            goto LABEL_23;
          v22 = *(_QWORD *)(v24 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_249F9896C(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * v20, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    sub_249F98928((uint64_t)v11, (uint64_t)v6, type metadata accessor for VUStreamingGallery.Label);
    sub_249F8C068((uint64_t)v9, (uint64_t)v6);
    result = sub_249F989C0((uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_23;
    v22 = *(_QWORD *)(v24 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249FA51A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  v6 = a1;
  swift_bridgeObjectRetain();
  sub_249FB1D60(&v6, a2, sub_24A012F10);
  v4 = v6;
  if (v2)
    swift_release();
  return v4;
}

uint64_t sub_249FA5204(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return sub_249FB7B20(a2);
}

unint64_t sub_249FA5234(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    return *(_QWORD *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

unint64_t sub_249FA525C(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      goto LABEL_49;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v19 = *(_QWORD *)(a1 + 72);
    if (v19)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        goto LABEL_49;
      v19 = *(_QWORD *)(a1 + 80);
      if (v19)
      {
        v6 = 2;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 88);
        if (v19)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            goto LABEL_49;
          v19 = *(_QWORD *)(a1 + 96);
          if (v19)
          {
            v6 = 4;
          }
          else
          {
            v19 = *(_QWORD *)(a1 + 104);
            if (!v19)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v19 - 1) & v19;
    v7 = __clz(__rbit64(v19)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(float *)(v10 + 4 * v7);
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v6 << 6);
LABEL_7:
    if (v11 < *(float *)(v10 + 4 * v13))
      v11 = *(float *)(v10 + 4 * v13);
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_26:
    v17 = 0;
    v18 = LODWORD(v11);
    return v18 | ((unint64_t)v17 << 32);
  }
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      goto LABEL_26;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v20 = 0;
  v21 = 6;
  if (v9 > 6)
    v21 = v9;
  v22 = v21 - 6;
  while (v22 != v20)
  {
    v19 = *(_QWORD *)(a1 + 112 + 8 * v20++);
    if (v19)
    {
      v6 = v20 + 5;
      goto LABEL_30;
    }
  }
LABEL_49:
  v18 = 0;
  v17 = 1;
  return v18 | ((unint64_t)v17 << 32);
}

uint64_t sub_249FA546C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = result + 64;
  v2 = *(_BYTE *)(result + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(result + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      return 0;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v17 = *(_QWORD *)(result + 72);
    if (v17)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        return 0;
      v17 = *(_QWORD *)(result + 80);
      if (v17)
      {
        v6 = 2;
      }
      else
      {
        v17 = *(_QWORD *)(result + 88);
        if (v17)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            return 0;
          v17 = *(_QWORD *)(result + 96);
          if (v17)
          {
            v6 = 4;
          }
          else
          {
            v17 = *(_QWORD *)(result + 104);
            if (!v17)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v17 - 1) & v17;
    v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(result + 56);
  result = *(_QWORD *)(v10 + 8 * v7);
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v6 << 6);
LABEL_7:
    v13 = *(_QWORD *)(v10 + 8 * v12);
    if (result <= v13)
      result = v13;
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
    return result;
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      return result;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v18 = 0;
  v19 = 6;
  if (v9 > 6)
    v19 = v9;
  v20 = v19 - 6;
  while (v20 != v18)
  {
    v17 = *(_QWORD *)(result + 112 + 8 * v18++);
    if (v17)
    {
      v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

uint64_t sub_249FA5664()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_249FA566C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = result;
  return result;
}

uint64_t VUStreamingGallery.Label.intValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v6;

  v1 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9896C(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *(_QWORD *)v3;
  sub_249F989C0((uint64_t)v3, type metadata accessor for VUStreamingGallery.Label);
  return 0;
}

uint64_t type metadata accessor for VUStreamingGallery.Label(uint64_t a1)
{
  return sub_249F93C98(a1, qword_2544CA3E0);
}

uint64_t VUStreamingGallery.Label.uuidValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9896C(v1, (uint64_t)v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = sub_24A01EBA4();
  v9 = *(_QWORD *)(v8 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v10, 1, v8);
}

uint64_t VUStreamingGallery.Label.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9896C(v0, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_24A01F4F8();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_24A01EE20();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_249FA5944@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9896C(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24A01EB68();
    v11 = sub_24A01EBA4();
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(_QWORD *, char *, uint64_t))(v12 + 32))(a2, v6, v11);
      swift_storeEnumTagMultiPayload();
      return sub_249F989C0((uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    }
  }
  else
  {
    *a2 = -1;
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t VUStreamingGallery.Label.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_24A01EBA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01F4EC();
  sub_249F9896C(v1, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_24A01F4F8();
  }
  return sub_24A01F528();
}

uint64_t sub_249FA5C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9896C(v0, (uint64_t)v7, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_24A01F4F8();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_24A01EE20();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_249FA5D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_24A01EBA4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01F4EC();
  sub_249F9896C(v1, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    sub_24A01F4F8();
  }
  return sub_24A01F528();
}

uint64_t VUStreamingGallery.Configuration.maximumIdentities.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VUStreamingGallery.Configuration.maximumIdentities.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*VUStreamingGallery.Configuration.maximumIdentities.modify())()
{
  return nullsub_1;
}

uint64_t VUStreamingGallery.Configuration.maximumObservationsPerIdentity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t VUStreamingGallery.Configuration.maximumObservationsPerIdentity.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*VUStreamingGallery.Configuration.maximumObservationsPerIdentity.modify())()
{
  return nullsub_1;
}

uint64_t VUStreamingGallery.Configuration.autoUpdate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t VUStreamingGallery.Configuration.autoUpdate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*VUStreamingGallery.Configuration.autoUpdate.modify())()
{
  return nullsub_1;
}

uint64_t VUStreamingGallery.Configuration.isStreamingEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t VUStreamingGallery.Configuration.isStreamingEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*VUStreamingGallery.Configuration.isStreamingEnabled.modify())()
{
  return nullsub_1;
}

uint64_t VUStreamingGallery.Configuration.maxKeyObservationsPerEntity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t VUStreamingGallery.Configuration.maxKeyObservationsPerEntity.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*VUStreamingGallery.Configuration.maxKeyObservationsPerEntity.modify())()
{
  return nullsub_1;
}

VisualUnderstanding::VUStreamingGallery::Configuration __swiftcall VUStreamingGallery.Configuration.init()()
{
  int64x2_t *v0;
  VisualUnderstanding::VUStreamingGallery::Configuration result;

  *v0 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  v0[1].i16[0] = 0;
  v0[1].i64[1] = 10;
  return result;
}

uint64_t VUStreamingGallery.__allocating_init(for:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  VUStreamingGallery.init(for:)();
  return v0;
}

uint64_t VUStreamingGallery.init(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[2];

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - v7;
  swift_bridgeObjectRelease();
  *(int64x2_t *)(v2 + 48) = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(_OWORD *)(v2 + 64) = xmmword_24A020C30;
  *(_WORD *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 84) = xmmword_24A020C40;
  *(_QWORD *)(v2 + 104) = 100;
  v9 = v2 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  sub_24A01ED9C();
  v10 = v2 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED3C();
  v11 = sub_24A01EAA8();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v8, 1, 1, v11);
  type metadata accessor for VUIndex();
  swift_allocObject();
  v13 = sub_249FF7DF0((uint64_t)v8, 0);
  if (v1)
  {
    v15 = sub_24A01EDA8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v16 = sub_24A01ED48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v10, v16);
    type metadata accessor for VUStreamingGallery(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v13;
    v12(v6, 1, 1, v11);
    swift_allocObject();
    v14 = sub_249FF7DF0((uint64_t)v6, 0);
    v18 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v2 + 24) = v14;
    *(_QWORD *)(v2 + 32) = v18;
    *(_QWORD *)(v2 + 40) = v18;
  }
  return v2;
}

uint64_t VUStreamingGallery.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  VUStreamingGallery.init()();
  return v0;
}

uint64_t VUStreamingGallery.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[2];

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - v7;
  *(int64x2_t *)(v2 + 48) = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(_OWORD *)(v2 + 64) = xmmword_24A020C30;
  *(_WORD *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 84) = xmmword_24A020C40;
  *(_QWORD *)(v2 + 104) = 100;
  v9 = v2 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  sub_24A01ED9C();
  v10 = v2 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED3C();
  v11 = sub_24A01EAA8();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v8, 1, 1, v11);
  type metadata accessor for VUIndex();
  swift_allocObject();
  v13 = sub_249FF7DF0((uint64_t)v8, 0);
  if (v1)
  {
    v15 = sub_24A01EDA8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v16 = sub_24A01ED48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v10, v16);
    type metadata accessor for VUStreamingGallery(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v13;
    v12(v6, 1, 1, v11);
    swift_allocObject();
    v14 = sub_249FF7DF0((uint64_t)v6, 0);
    v18 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v2 + 24) = v14;
    *(_QWORD *)(v2 + 32) = v18;
    *(_QWORD *)(v2 + 40) = v18;
  }
  return v2;
}

uint64_t VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  VUStreamingGallery.init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:)(a1, a2, a3);
  return v6;
}

uint64_t VUStreamingGallery.init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v5 = v3;
  v25 = a3;
  v23 = a1;
  v24 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  *(int64x2_t *)(v5 + 48) = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(_OWORD *)(v5 + 64) = xmmword_24A020C30;
  *(_WORD *)(v5 + 80) = 0;
  *(_OWORD *)(v5 + 84) = xmmword_24A020C40;
  *(_QWORD *)(v5 + 104) = 100;
  v12 = v5 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  sub_24A01ED9C();
  v13 = v5 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED3C();
  v14 = sub_24A01EAA8();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v11, 1, 1, v14);
  type metadata accessor for VUIndex();
  swift_allocObject();
  v16 = sub_249FF7DF0((uint64_t)v11, 1);
  if (v4)
  {
    v18 = sub_24A01EDA8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v12, v18);
    v19 = sub_24A01ED48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v13, v19);
    type metadata accessor for VUStreamingGallery(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v16;
    v15(v9, 1, 1, v14);
    swift_allocObject();
    v17 = sub_249FF7DF0((uint64_t)v9, 1);
    v21 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v5 + 24) = v17;
    *(_QWORD *)(v5 + 32) = v21;
    v22 = v23;
    *(_QWORD *)(v5 + 40) = v21;
    *(_QWORD *)(v5 + 48) = v22;
    *(_QWORD *)(v5 + 56) = v24;
    *(_BYTE *)(v5 + 81) = v25 & 1;
    *(_BYTE *)(v5 + 80) = 1;
  }
  return v5;
}

uint64_t VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  VUStreamingGallery.init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)(a1, a2, a3, a4);
  return v8;
}

uint64_t VUStreamingGallery.init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v5 = v4;
  v26 = a3;
  v24 = a1;
  v25 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - v11;
  *(int64x2_t *)(v5 + 48) = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(_OWORD *)(v5 + 64) = xmmword_24A020C30;
  *(_WORD *)(v5 + 80) = 0;
  *(_OWORD *)(v5 + 84) = xmmword_24A020C40;
  *(_QWORD *)(v5 + 104) = 100;
  v27 = v5 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  sub_24A01ED9C();
  v13 = v5 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED3C();
  v14 = sub_24A01EAA8();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v12, 1, 1, v14);
  type metadata accessor for VUIndex();
  swift_allocObject();
  v16 = v28;
  v17 = sub_249FF7DF0((uint64_t)v12, a4);
  if (v16)
  {
    v19 = sub_24A01EDA8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v27, v19);
    v20 = sub_24A01ED48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v13, v20);
    type metadata accessor for VUStreamingGallery(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v17;
    v15(v10, 1, 1, v14);
    swift_allocObject();
    v18 = sub_249FF7DF0((uint64_t)v10, a4 & 1);
    v22 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v5 + 24) = v18;
    *(_QWORD *)(v5 + 32) = v22;
    v23 = v24;
    *(_QWORD *)(v5 + 40) = v22;
    *(_QWORD *)(v5 + 48) = v23;
    *(_QWORD *)(v5 + 56) = v25;
    *(_BYTE *)(v5 + 81) = v26 & 1;
    *(_BYTE *)(v5 + 80) = a4 & 1;
  }
  return v5;
}

uint64_t VUStreamingGallery.__allocating_init(from:with:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2[2] == 2)
  {
    LODWORD(v4) = 0;
    LODWORD(v5) = 0;
    v6 = 0x7FFFFFFFFFFFFFFFLL;
    v7 = 10;
    v8 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = a2[3];
    v4 = a2[2] & 1;
    v5 = ((unint64_t)a2[2] >> 8) & 1;
    v6 = *a2;
    v8 = a2[1];
  }
  type metadata accessor for VUStreamingGallery(0);
  v9 = swift_allocObject();
  VUStreamingGallery.init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)(v6, v8, v4, v5);
  if (v2)
  {
    sub_249F990A0(a1, (uint64_t *)&unk_2544CAD60);
  }
  else
  {
    swift_retain();
    sub_249FA6B10(a1, v7);
    sub_249F990A0(a1, (uint64_t *)&unk_2544CAD60);
    swift_release();
  }
  return v9;
}

uint64_t sub_249FA6B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v4 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9905C(a1, (uint64_t)v9, (uint64_t *)&unk_2544CAD60);
  LOBYTE(v38) = 5;
  type metadata accessor for VUGallery(0);
  swift_allocObject();
  result = VUGallery.init(for:at:)((unsigned __int8 *)&v38, (uint64_t)v9);
  if (!v3)
  {
    v11 = result;
    v31 = a2;
    sub_249F79628(0, 0, 0);
    v12 = 0;
    result = sub_249F78CC8(0);
    v13 = result;
    v35 = *(_QWORD *)(result + 16);
    if (v35)
    {
      v14 = 0;
      v32 = result + 32;
      v33 = result;
      v15 = v31;
      v30 = v4;
      v34 = v11;
      while (v14 < *(_QWORD *)(v13 + 16))
      {
        MEMORY[0x24BDAC7A8](result);
        *(&v30 - 4) = v11;
        *(&v30 - 3) = v16;
        *(&v30 - 2) = v15;
        *(&v30 - 1) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
        sub_24A01F138();
        v17 = v38;
        v18 = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 16);
        v19 = *(_QWORD *)(v38 + 16);
        v37 = v18;
        if (v19)
        {
          v36 = v12;
          v38 = MEMORY[0x24BEE4AF8];
          swift_retain();
          sub_249F8C9C8(0, v19, 0);
          v20 = v38;
          v21 = *(_QWORD *)(v38 + 16);
          v22 = 32;
          do
          {
            v23 = *(_QWORD *)(v17 + v22);
            v38 = v20;
            v24 = *(_QWORD *)(v20 + 24);
            if (v21 >= v24 >> 1)
            {
              sub_249F8C9C8(v24 > 1, v21 + 1, 1);
              v20 = v38;
            }
            *(_QWORD *)(v20 + 16) = v21 + 1;
            *(_QWORD *)(v20 + 8 * v21 + 32) = v23;
            v22 += 16;
            ++v21;
            --v19;
          }
          while (v19);
          v25 = swift_bridgeObjectRelease();
          v4 = v30;
          v15 = v31;
          v12 = v36;
          v18 = v37;
        }
        else
        {
          swift_retain();
          v25 = swift_bridgeObjectRelease();
          v20 = MEMORY[0x24BEE4AF8];
        }
        v26 = MEMORY[0x24BDAC7A8](v25);
        *(&v30 - 4) = v20;
        *(&v30 - 3) = v18;
        *(&v30 - 2) = (uint64_t)sub_249FCA550;
        *(&v30 - 1) = v4;
        MEMORY[0x24BDAC7A8](v26);
        *(&v30 - 2) = (uint64_t)sub_249FCA568;
        *(&v30 - 1) = v27;
        v29 = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB50);
        sub_24A01F180();
        if (v12)
        {

          v12 = 0;
        }
        v13 = v33;
        ++v14;
        swift_bridgeObjectRelease();

        result = swift_release();
        v11 = v34;
        if (v14 == v35)
          goto LABEL_15;
      }
      __break(1u);
    }
    else
    {
LABEL_15:
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_249FA6E7C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) + 16);
  swift_retain();
  v3 = v2;
  sub_24A01F180();
  swift_release();

}

void sub_249FA6EFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v2 = v1;
  v3 = v0;
  v4 = *(_QWORD *)(v0[2] + 16);
  v5 = *(void **)(v4 + 16);
  swift_retain();
  v6 = v5;
  sub_24A01F180();
  if (v2)
  {
    swift_release();

  }
  else
  {

    v7 = *(id *)(v4 + 16);
    sub_24A01F180();
    swift_release();

    v8 = *(_QWORD *)(v3[3] + 16);
    v9 = *(void **)(v8 + 16);
    swift_retain();
    v10 = v9;
    sub_24A01F180();

    v11 = *(id *)(v8 + 16);
    sub_24A01F180();
    swift_release();

    v12 = *(_QWORD *)(v3[2] + OBJC_IVAR____TtC19VisualUnderstanding7VUIndex_scanner);
    swift_retain();
    sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_55, (uint64_t)sub_249FCA5FC, (uint64_t)&block_descriptor_58);
    sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_49, (uint64_t)sub_249FCA548, (uint64_t)&block_descriptor_52);
    v13 = (_QWORD *)(v12 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingPartition);
    swift_beginAccess();
    v14 = MEMORY[0x24BEE4AF8];
    *v13 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    v15 = v13[1];
    v16 = v13[2];
    *(_OWORD *)(v13 + 1) = xmmword_24A020BC0;
    sub_249F92358(v15, v16);
    v17 = (_QWORD *)(v12 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingContext);
    swift_beginAccess();
    *v17 = v14;
    swift_bridgeObjectRelease();
    v18 = v17[1];
    v19 = v17[2];
    *(_OWORD *)(v17 + 1) = xmmword_24A020BC0;
    sub_249F92358(v18, v19);
    swift_release();
    v20 = *(_QWORD *)(v3[3] + OBJC_IVAR____TtC19VisualUnderstanding7VUIndex_scanner);
    swift_retain();
    sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_55, (uint64_t)sub_249FCA5FC, (uint64_t)&block_descriptor_58);
    sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_49, (uint64_t)sub_249FCA548, (uint64_t)&block_descriptor_52);
    v21 = (_QWORD *)(v20 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingPartition);
    swift_beginAccess();
    *v21 = v14;
    swift_bridgeObjectRelease();
    v22 = v21[1];
    v23 = v21[2];
    *(_OWORD *)(v21 + 1) = xmmword_24A020BC0;
    sub_249F92358(v22, v23);
    v24 = (_QWORD *)(v20 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingContext);
    swift_beginAccess();
    *v24 = v14;
    swift_bridgeObjectRelease();
    v25 = v24[1];
    v26 = v24[2];
    *(_OWORD *)(v24 + 1) = xmmword_24A020BC0;
    sub_249F92358(v25, v26);
    swift_release();
    swift_beginAccess();
    v27 = MEMORY[0x24BEE4B00];
    v3[4] = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v3[5] = v27;
    swift_bridgeObjectRelease();
    v3[13] = 100;
  }
}

uint64_t sub_249FA72AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  const char *v30;
  _BYTE *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t result;
  uint64_t v50;
  _BYTE *v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL4 v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v57 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (uint64_t)&v52 - v13;
  v63 = type metadata accessor for VUStreamingGallery.Label(0);
  v59 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v15 = (unint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 >> 62;
  v60 = a2;
  if (a3)
  {
    a2 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_63:
      swift_bridgeObjectRetain();
      v17 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v18 = a2 == v17;
    a2 = v60;
    if (!v18)
    {
      v27 = sub_24A01ED90();
      v28 = sub_24A01F0E4();
      if (!os_log_type_enabled(v27, v28))
        goto LABEL_23;
      v15 = swift_slowAlloc();
      *(_WORD *)v15 = 0;
      v30 = "Unable to add observations: track identifiers count must equal observation count";
LABEL_22:
      _os_log_impl(&dword_249F70000, v27, v28, v30, (uint8_t *)v15, 2u);
      MEMORY[0x24BD07950](v15, -1, -1);
LABEL_23:

      sub_249F74AF4();
      swift_allocError();
      *v32 = 1;
      swift_willThrow();
      return v15;
    }
  }
  if (a2)
  {
    v19 = *(_QWORD *)(a2 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain();
      v20 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v18 = v19 == v20;
    a2 = v60;
    if (!v18)
    {
      v27 = sub_24A01ED90();
      v28 = sub_24A01F0E4();
      if (!os_log_type_enabled(v27, v28))
        goto LABEL_23;
      v15 = swift_slowAlloc();
      *(_WORD *)v15 = 0;
      v30 = "Unable to add observations: observation identifiers count must equal number of observations";
      goto LABEL_22;
    }
  }
  v56 = a1;
  if (a3)
  {
    v21 = *(_QWORD *)(a3 + 16);
    v22 = MEMORY[0x24BEE4AF8];
    if (v21)
    {
      v61 = (_QWORD *)v16;
      v62 = v5;
      v65 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_249F8CC70(0, v21, 0);
      v23 = v59;
      v24 = 0;
      v22 = v65;
      do
      {
        *(_QWORD *)v15 = *(_QWORD *)(a3 + 8 * v24 + 32);
        swift_storeEnumTagMultiPayload();
        v65 = v22;
        v26 = *(_QWORD *)(v22 + 16);
        v25 = *(_QWORD *)(v22 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_249F8CC70(v25 > 1, v26 + 1, 1);
          v23 = v59;
          v22 = v65;
        }
        ++v24;
        *(_QWORD *)(v22 + 16) = v26 + 1;
        sub_249F98928(v15, v22+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v26, type metadata accessor for VUStreamingGallery.Label);
      }
      while (v21 != v24);
      swift_bridgeObjectRelease();
      v16 = (uint64_t)v61;
      v5 = v62;
      a2 = v60;
    }
    a1 = v56;
    if (!v16)
    {
LABEL_25:
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v33)
        goto LABEL_26;
LABEL_50:
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x24BEE4AF8];
LABEL_56:
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  else
  {
    v22 = 0;
    if (!v16)
      goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v33 = sub_24A01F3CC();
  if (!v33)
    goto LABEL_50;
LABEL_26:
  v54 = a2 == 0;
  v15 = MEMORY[0x24BEE4AF8];
  v55 = a1 & 0xC000000000000001;
  v16 = 4;
  v53 = v33;
  while (1)
  {
    v61 = (_QWORD *)v15;
    v15 = v16 - 4;
    if (v55)
      v34 = (uint64_t *)MEMORY[0x24BD071F4](v16 - 4, a1);
    else
      v34 = (uint64_t *)*(id *)(a1 + 8 * v16);
    v62 = v34;
    a1 = v16 - 3;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (a2)
    {
      if (v15 >= *(_QWORD *)(a2 + 16))
        goto LABEL_61;
      v35 = *(_QWORD *)(a2 + 8 * v16);
    }
    else
    {
      v35 = 0;
    }
    a2 = v58;
    v52 = v16 - 4;
    if (v22)
    {
      if (v15 >= *(_QWORD *)(v22 + 16))
        goto LABEL_62;
      v36 = v59;
      sub_249F9896C(v22+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v59 + 72) * v15, v58, type metadata accessor for VUStreamingGallery.Label);
      v37 = 0;
    }
    else
    {
      v37 = 1;
      v36 = v59;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(a2, v37, 1, v63);
    v15 = (unint64_t)&qword_2578FFA68;
    sub_249F9905C(a2, (uint64_t)v12, &qword_2578FFA68);
    v39 = sub_249FA8118(v62, v35, v54, (uint64_t)v12, v57, 0, 0);
    if (v5)
    {
      sub_249F990A0((uint64_t)v12, &qword_2578FFA68);
      swift_bridgeObjectRelease();

      sub_249F990A0(a2, &qword_2578FFA68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    v40 = v38;
    sub_249F990A0((uint64_t)v12, &qword_2578FFA68);
    sub_249F990A0(a2, &qword_2578FFA68);
    if ((v40 & 1) != 0)
      break;
    v41 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_249F89B7C(0, v41[2] + 1, 1, v41);
    v5 = 0;
    v43 = v41[2];
    v42 = v41[3];
    v44 = v41;
    a3 = v53;
    if (v43 >= v42 >> 1)
      v44 = sub_249F89B7C((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
    v44[2] = v43 + 1;
    v15 = (unint64_t)v44;
    v44[v43 + 4] = v39;

    ++v16;
    v18 = a1 == a3;
    a2 = v60;
    a1 = v56;
    if (v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = v60;
  swift_bridgeObjectRetain_n();
  v46 = sub_24A01ED90();
  v47 = sub_24A01F0E4();
  if (!os_log_type_enabled(v46, v47))
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_59;
  }
  v48 = (uint8_t *)swift_slowAlloc();
  result = swift_slowAlloc();
  v50 = result;
  v65 = result;
  *(_DWORD *)v48 = 136315138;
  if (!v45 || v52 < *(_QWORD *)(v45 + 16))
  {
    v15 = (unint64_t)(v48 + 4);
    v64 = sub_249F8AAE8(0xD000000000000020, 0x800000024A0230E0, &v65);
    sub_24A01F1F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249F70000, v46, v47, "Unable to add observation with observation identifier: %s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v50, -1, -1);
    MEMORY[0x24BD07950](v48, -1, -1);
LABEL_59:

    sub_249F74AF4();
    swift_allocError();
    *v51 = 1;
    swift_willThrow();

    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FA7A68(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  int v23;

  v23 = a7;
  v14 = a3 & 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a5 & 1) != 0)
  {
    v19 = type metadata accessor for VUStreamingGallery.Label(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  else
  {
    *v17 = a4;
    v18 = type metadata accessor for VUStreamingGallery.Label(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  v20 = sub_249FA8118(a1, a2, v14, (uint64_t)v17, a6, v23 & 1, 0);
  if (!v8)
    v7 = v20;
  sub_249F990A0((uint64_t)v17, &qword_2578FFA68);
  return v7;
}

uint64_t *sub_249FA7BC8(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v11 = a3 & 1;
  v12 = &qword_2578FFA68;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F9905C(a4, (uint64_t)v15, &qword_2578FFA68);
  v16 = v19[1];
  v17 = sub_249FA8118(a1, a2, v11, (uint64_t)v15, a5, a6, 0);
  if (!v16)
    v12 = (uint64_t *)v17;
  sub_249F990A0((uint64_t)v15, &qword_2578FFA68);
  return v12;
}

uint64_t sub_249FA7CD0(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int EnumCaseMultiPayload;
  _QWORD *v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v10 = a3 & 1;
  v11 = type metadata accessor for VUStreamingGallery.Label(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v31 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v32 = (uint64_t)&v30 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  LOBYTE(v18) = *(_BYTE *)(v17 + 8);
  v33 = (_QWORD *)v17;
  if ((v18 & 1) != 0)
  {
    v20 = 1;
  }
  else
  {
    *v19 = *(_QWORD *)v17;
    swift_storeEnumTagMultiPayload();
    v20 = 0;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v19, v20, 1, v11);
  v21 = v34;
  v22 = sub_249FA8118(a1, a2, v10, (uint64_t)v19, a5, a6 & 1, 1);
  if (v21)
  {
    sub_249F990A0((uint64_t)v19, &qword_2578FFA68);
  }
  else
  {
    a2 = v22;
    v23 = 1;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
    {
      v24 = 0;
    }
    else
    {
      v25 = v32;
      sub_249F9896C((uint64_t)v19, v32, type metadata accessor for VUStreamingGallery.Label);
      v26 = v31;
      sub_249F9896C(v25, (uint64_t)v31, type metadata accessor for VUStreamingGallery.Label);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v23 = EnumCaseMultiPayload == 1;
      if (EnumCaseMultiPayload == 1)
      {
        sub_249F989C0((uint64_t)v26, type metadata accessor for VUStreamingGallery.Label);
        v24 = 0;
      }
      else
      {
        v24 = *v26;
      }
      sub_249F989C0(v25, type metadata accessor for VUStreamingGallery.Label);
    }
    v28 = v33;
    *v33 = v24;
    *((_BYTE *)v28 + 8) = v23;
    sub_249F990A0((uint64_t)v19, &qword_2578FFA68);
  }
  return a2;
}

uint64_t sub_249FA7F10(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;

  v27 = a6;
  v26 = a5;
  v9 = a3 & 1;
  v10 = type metadata accessor for VUStreamingGallery.Label(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v25 - v18;
  v25 = a4;
  sub_249F9896C(a4, (uint64_t)&v25 - v18, type metadata accessor for VUStreamingGallery.Label);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  v20 = v28;
  v21 = sub_249FA8118(a1, a2, v9, (uint64_t)v19, v26, v27, 1);
  if (v20)
  {
    sub_249F990A0((uint64_t)v19, &qword_2578FFA68);
  }
  else
  {
    v9 = v21;
    sub_249F98C10((uint64_t)v19, (uint64_t)v17, &qword_2578FFA68);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10);
    v23 = v25;
    if (v22 == 1)
    {
      sub_249F98928(v25, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
      sub_249F990A0((uint64_t)v17, &qword_2578FFA68);
    }
    else
    {
      sub_249F989C0(v25, type metadata accessor for VUStreamingGallery.Label);
      sub_249F98928((uint64_t)v17, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
    }
    sub_249F98928((uint64_t)v13, v23, type metadata accessor for VUStreamingGallery.Label);
  }
  return v9;
}

uint64_t sub_249FA8118(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t *v65;
  id v66;
  void *v67;
  unint64_t v68;
  id v69;
  void *v70;
  unint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  _BYTE *v75;
  uint64_t v76;
  float v77;
  unint64_t v78;
  float v79;
  char *v80;
  void *v81;
  char *v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD *@<X8>);
  int v87;
  void (*v88)(_QWORD *@<X8>);
  uint64_t v89;
  void *v90;
  char *v91;
  float v92;
  id v93;
  void *v94;
  uint64_t *v95;
  void *v96;
  uint64_t *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t *v101;
  id v102;
  void *v103;
  unint64_t v104;
  unint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  id v112;
  char *v113;
  unsigned int v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(unint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t result;
  uint64_t v136;
  uint64_t *v137;
  id v138;
  void *v139;
  char *v140;
  unint64_t v141;
  unint64_t v142;
  id v143;
  id v144;
  void *v145;
  unint64_t v146;
  unint64_t v147;
  id v148;
  void *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  id v155;
  double v156;
  double v157;
  char isUniquelyReferenced_nonNull_native;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(uint64_t, uint64_t, unint64_t);
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, _QWORD, uint64_t, unint64_t);
  char v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  void *v176;
  id v177;
  id v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  id v186;
  void *v187;
  id v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t inited;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int64_t v201;
  unint64_t v202;
  int64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  _BOOL8 v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  char v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  char v231;
  char v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  uint64_t v242;
  void *v243;
  uint64_t *v244;
  unint64_t v245;
  unint64_t v246;
  id v247;
  uint64_t v248;
  void *v249;
  uint64_t *v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  id v254;
  void *v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  unsigned int (*v261)(uint64_t, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unsigned int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t v270;
  id v271;
  id v272;
  void *v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  void (*v278)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  void *v287;
  uint64_t v288;
  unint64_t v289;
  unint64_t v290;
  id v291;
  void *v292;
  uint64_t v293;
  unint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t *v301;
  uint64_t *v302;
  uint64_t v303;
  id v304;
  id v305;
  uint64_t *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int64_t v319;
  _QWORD *v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  unint64_t v324;
  id v325;
  void (*v326)(_QWORD *@<X8>);
  uint64_t v327;
  uint64_t *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t *v332;
  __int128 v333;
  uint64_t v334;
  unint64_t v335;
  uint64_t v336;
  char *v337;

  v8 = v7;
  LODWORD(v319) = a7;
  LODWORD(v333) = a6;
  v331 = a5;
  v329 = (char *)a4;
  v324 = a2;
  LODWORD(v323) = a3 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA78);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v322 = (char *)&v297 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v320 = (uint64_t *)((char *)&v297 - v13);
  v327 = type metadata accessor for VUStreamingGallery.Label(0);
  v332 = *(uint64_t **)(v327 - 8);
  v14 = MEMORY[0x24BDAC7A8](v327);
  v312 = (uint64_t)&v297 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v321 = (uint64_t)&v297 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v328 = (uint64_t *)((char *)&v297 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v316 = (uint64_t)&v297 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v326 = (void (*)(_QWORD *@<X8>))((char *)&v297 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v22);
  v318 = (uint64_t)&v297 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v315 = (uint64_t)&v297 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v317 = (uint64_t)&v297 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA288);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v307 = (char *)&v297 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v314 = (char *)&v297 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v308 = (char *)&v297 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v297 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v297 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (unint64_t)&v297 - v42;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v310 = (char *)&v297 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v311 = (char *)&v297 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v309 = (char *)&v297 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v313 = (uint64_t)&v297 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v55 = (char *)&v297 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53);
  v58 = (char *)&v297 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56);
  v61 = (char *)&v297 - v60;
  MEMORY[0x24BDAC7A8](v59);
  v330 = (char *)&v297 - v62;
  objc_opt_self();
  v63 = swift_dynamicCastObjCClass();
  v335 = v8;
  if (v63)
  {
    v64 = (void *)v63;
    v306 = a1;
    v65 = a1;
    v66 = objc_msgSend(v64, sel_faceTorsoprint);
    if (!v66
      || (v67 = v66,
          v68 = (unint64_t)objc_msgSend(v66, sel_faceprint),
          v67,
          !v68))
    {
      v68 = (unint64_t)objc_msgSend(v64, sel_faceprint);
    }
    v69 = objc_msgSend(v64, sel_faceTorsoprint);
    if (!v69
      || (v70 = v69,
          v71 = (unint64_t)objc_msgSend(v69, sel_torsoprint),
          v70,
          !v71))
    {
      v71 = (unint64_t)objc_msgSend(v64, sel_torsoprint);
      if (!(v68 | v71))
      {
        v72 = sub_24A01ED90();
        v73 = sub_24A01F0E4();
        if (os_log_type_enabled(v72, v73))
        {
          v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v74 = 0;
          _os_log_impl(&dword_249F70000, v72, v73, "Unable to add observation: observations of type VNFaceObservation must be either a faceprint or a torsoprint", v74, 2u);
          MEMORY[0x24BD07950](v74, -1, -1);
        }

        sub_249F74AF4();
        swift_allocError();
        *v75 = 1;
        swift_willThrow();
        goto LABEL_50;
      }
    }
    if ((v333 & 1) != 0)
    {
      v76 = v331;
      if (v68)
      {
        objc_msgSend((id)v68, sel_confidence);
        if (v77 < 0.6)
        {

          v68 = 0;
        }
      }
      v78 = v335;
      if (v71)
      {
        objc_msgSend((id)v71, sel_confidence);
        if (v79 < 0.6)
        {

          v71 = 0;
        }
      }
      if (!(v68 | v71))
        goto LABEL_19;
    }
    else
    {
      v78 = v335;
      v76 = v331;
      if (!(v68 | v71))
      {
LABEL_19:
        v80 = 0;
        a1 = v306;
LABEL_20:
        v330 = v80;

        v81 = 0;
        v82 = 0;
        v43 = 0;
        v83 = 1;
        v84 = v327;
        goto LABEL_21;
      }
    }
    v325 = (id)v71;
    v299 = *(_QWORD *)(*(_QWORD *)(v78 + 16) + 16);
    v101 = v65;
    if (v68)
    {
      swift_retain();
      v102 = objc_msgSend((id)v68, sel_descriptorData);
      if (v102)
      {
        v103 = v102;
        v298 = sub_24A01EAFC();
        v105 = v104;

      }
      else
      {
        v298 = 0;
        v105 = 0xF000000000000000;
      }
      v304 = objc_msgSend((id)v68, sel_requestRevision);
    }
    else
    {
      swift_retain();
      v304 = 0;
      v298 = 0;
      v105 = 0xF000000000000000;
    }
    v305 = (id)v68;
    v300 = v105;
    if (v325)
    {
      v118 = objc_msgSend(v325, sel_descriptorData);
      if (v118)
      {
        v119 = v118;
        v120 = sub_24A01EAFC();
        v122 = v121;

      }
      else
      {
        v120 = 0;
        v122 = 0xF000000000000000;
      }
      v303 = v120;
      v302 = (uint64_t *)objc_msgSend(v325, sel_requestRevision);
    }
    else
    {
      v302 = 0;
      v303 = 0;
      v122 = 0xF000000000000000;
    }
    sub_249F9905C(v76, v43, &qword_2544CA288);
    v123 = type metadata accessor for VUGallery.Context(0);
    v124 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 48);
    if (v124(v43, 1, v123) == 1)
    {
      sub_249F990A0(v43, &qword_2544CA288);
      v125 = sub_24A01EBA4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v330, 1, 1, v125);
    }
    else
    {
      sub_249F9905C(v43, (uint64_t)v330, &qword_2544CAD70);
      sub_249F989C0(v43, type metadata accessor for VUGallery.Context);
    }
    v301 = v101;
    sub_249F9905C(v76, (uint64_t)v41, &qword_2544CA288);
    if (v124((unint64_t)v41, 1, v123) == 1)
    {
      sub_249F990A0((uint64_t)v41, &qword_2544CA288);
      v126 = sub_24A01EBA4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v61, 1, 1, v126);
    }
    else
    {
      sub_249F9905C((uint64_t)&v41[*(int *)(v123 + 20)], (uint64_t)v61, &qword_2544CAD70);
      sub_249F989C0((uint64_t)v41, type metadata accessor for VUGallery.Context);
    }
    v127 = (uint64_t)v330;
    v128 = v300;
    v129 = v303;
    LOBYTE(v337) = 3;
    v43 = (unint64_t)v305;
    v130 = (uint64_t *)v298;
    if (v305)
    {
      objc_msgSend(v305, sel_confidence);
      v132 = v131;
    }
    else
    {
      v132 = 0;
    }
    LOBYTE(v336) = 1;
    v133 = v334;
    v134 = sub_249FE1C30(2u, 0xFFFFLL, v130, v128, (uint64_t)v304, v43 == 0, v129, v122, v302, v325 == 0, v127, (uint64_t)v61, (uint64_t)&v337, v132 | ((unint64_t)(v43 == 0) << 32));
    if (v133)
    {
      swift_release();

      sub_249F92438(v129, v122);
      sub_249F92438((uint64_t)v130, v128);
      sub_249F990A0((uint64_t)v61, &qword_2544CAD70);
      sub_249F990A0(v127, &qword_2544CAD70);

      goto LABEL_70;
    }
    v324 = (unint64_t)v134;
    v334 = 0;
    swift_release();
    sub_249F92438(v129, v122);
    sub_249F92438((uint64_t)v130, v128);
    sub_249F990A0((uint64_t)v61, &qword_2544CAD70);
    sub_249F990A0(v127, &qword_2544CAD70);
    v117 = v335;
    v136 = v43;
    if (v43)
    {
      v137 = v301;
      swift_retain();
      v138 = objc_msgSend((id)v43, sel_descriptorData);
      if (v138)
      {
        v139 = v138;
        v140 = (char *)sub_24A01EAFC();
        v142 = v141;

        v143 = v325;
        if (!v325)
          goto LABEL_82;
LABEL_80:
        v148 = objc_msgSend(v143, sel_descriptorData);
        if (v148)
        {
          v149 = v148;
          v150 = sub_24A01EAFC();
          v43 = v151;

LABEL_83:
          sub_24A005098(v324, (uint64_t)v140, v142, v150, v43);

          sub_249F92438(v150, v43);
          sub_249F92438((uint64_t)v140, v142);
          v330 = 0;
          v82 = (char *)v325;
          goto LABEL_86;
        }
LABEL_82:
        v150 = 0;
        v43 = 0xF000000000000000;
        goto LABEL_83;
      }
    }
    else
    {
      v137 = v301;
      swift_retain();
    }
    v140 = 0;
    v142 = 0xF000000000000000;
    v143 = v325;
    if (!v325)
      goto LABEL_82;
    goto LABEL_80;
  }
  objc_opt_self();
  v89 = swift_dynamicCastObjCClass();
  if (!v89)
  {
    v106 = sub_24A01ED90();
    v107 = sub_24A01F0E4();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v108 = 0;
      _os_log_impl(&dword_249F70000, v106, v107, "Unable to add observation. Observation must be of type VNFaceObservation or VNAnimalObservation.", v108, 2u);
      MEMORY[0x24BD07950](v108, -1, -1);
    }

    sub_249F74AF4();
    swift_allocError();
    *v109 = 1;
    swift_willThrow();
    return v43;
  }
  v90 = (void *)v89;
  v43 = a1;
  v91 = (char *)objc_msgSend(v90, sel_animalprint);
  if (!v91)
  {
    sub_249F74AF4();
    swift_allocError();
    *v110 = 1;
    swift_willThrow();
LABEL_70:

    return v43;
  }
  v80 = v91;
  if ((v333 & 1) != 0)
  {
    objc_msgSend(v91, sel_confidence);
    if (v92 < 0.6)
      goto LABEL_20;
  }
  v325 = (id)v43;
  v306 = a1;
  swift_retain();
  v93 = objc_msgSend(v80, sel_descriptorData);
  if (!v93)
    goto LABEL_232;
  v94 = v93;
  v95 = (uint64_t *)sub_24A01EAFC();
  v305 = v96;

  v97 = (uint64_t *)v80;
  v304 = objc_msgSend(v80, sel_requestRevision);
  v98 = sub_24A01EBA4();
  v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56);
  v99(v58, 1, 1, v98);
  sub_249F9905C(v331, (uint64_t)v38, &qword_2544CA288);
  v100 = type metadata accessor for VUGallery.Context(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48))(v38, 1, v100) == 1)
  {
    sub_249F990A0((uint64_t)v38, &qword_2544CA288);
    v99(v55, 1, 1, v98);
  }
  else
  {
    sub_249F9905C((uint64_t)&v38[*(int *)(v100 + 20)], (uint64_t)v55, &qword_2544CAD70);
    sub_249F989C0((uint64_t)v38, type metadata accessor for VUGallery.Context);
  }
  LOBYTE(v337) = 3;
  v65 = v97;
  objc_msgSend(v97, sel_confidence);
  LOBYTE(v336) = 1;
  v115 = (unint64_t)v305;
  v116 = v334;
  v43 = (unint64_t)sub_249FE1C30(0x3Fu, 0xFFFFLL, v95, (unint64_t)v305, (uint64_t)v304, 0, 0, 0xF000000000000000, 0, 1, (uint64_t)v58, (uint64_t)v55, (uint64_t)&v337, v114);
  swift_release();
  v117 = v335;
  if (v116)
  {

    sub_249F92358((uint64_t)v95, v115);
    sub_249F990A0((uint64_t)v55, &qword_2544CAD70);
    sub_249F990A0((uint64_t)v58, &qword_2544CAD70);
LABEL_50:

    return v43;
  }
  v334 = 0;
  sub_249F92358((uint64_t)v95, v115);
  sub_249F990A0((uint64_t)v55, &qword_2544CAD70);
  sub_249F990A0((uint64_t)v58, &qword_2544CAD70);
  swift_retain();
  v144 = objc_msgSend(v65, sel_descriptorData);
  v330 = (char *)v65;
  if (v144)
  {
    v145 = v144;
    v140 = (char *)sub_24A01EAFC();
    v147 = v146;

  }
  else
  {
    v140 = 0;
    v147 = 0xF000000000000000;
  }
  v324 = v43;
  sub_24A005098(v43, (uint64_t)v140, v147, 0, 0xF000000000000000);

  sub_249F92438((uint64_t)v140, v147);
  v82 = 0;
  v136 = 0;
LABEL_86:
  swift_release();
  v152 = *(_QWORD *)(v117 + 104);
  v153 = __OFSUB__(v152, 1);
  v154 = v152 - 1;
  v84 = v327;
  if (v153)
  {
    __break(1u);
    goto LABEL_225;
  }
  *(_QWORD *)(v117 + 104) = v154;
  v155 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
  objc_msgSend(v155, sel_timeIntervalSince1970);
  v157 = v156;

  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v336 = *(_QWORD *)(v117 + 32);
  *(_QWORD *)(v117 + 32) = 0x8000000000000000;
  v43 = v324;
  sub_249FBFF4C(v324, isUniquelyReferenced_nonNull_native, v157);
  *(_QWORD *)(v117 + 32) = v336;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((v319 & 1) == 0)
  {
    v81 = (void *)v136;
    v83 = 0;
LABEL_21:
    v85 = (uint64_t)v329;
    v86 = v326;
    sub_249F9905C((uint64_t)v329, (uint64_t)v326, &qword_2578FFA68);
    v87 = ((uint64_t (*)(void (*)(_QWORD *@<X8>), uint64_t, unint64_t))v332[6])(v86, 1, v84);
    sub_249F990A0((uint64_t)v86, &qword_2578FFA68);
    if (v87 != 1)
    {
      if ((v83 & 1) != 0)
      {
        v88 = 0;
LABEL_41:
        v112 = v81;
        v113 = v82;
        v82 = v330;
        goto LABEL_42;
      }
      v111 = v318;
      sub_249F9905C(v85, v318, &qword_2578FFA68);
      swift_beginAccess();
      sub_249FA4518(v111, v43);
      swift_endAccess();
    }
    v88 = 0;
    goto LABEL_41;
  }
  v159 = (void *)v136;
  v160 = (uint64_t)v329;
  v161 = v317;
  sub_249F9905C((uint64_t)v329, v317, &qword_2578FFA68);
  v162 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))v332[6];
  v163 = v162(v161, 1, v84);
  sub_249F990A0(v161, &qword_2578FFA68);
  if (v163 == 1)
  {
    v83 = 0;
    v81 = v159;
    goto LABEL_21;
  }
  v164 = v315;
  sub_249F9905C(v160, v315, &qword_2578FFA68);
  if (v162(v164, 1, v84) == 1)
  {
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
LABEL_236:
    result = sub_24A01F48C();
    __break(1u);
    return result;
  }
  v165 = v316;
  v166 = v334;
  v167 = v335;
  sub_249FAD690(v306, v331, v164, 30, v333 & 1, v316);
  v136 = (uint64_t)v159;
  if (v166)
  {
    sub_249F989C0(v164, type metadata accessor for VUStreamingGallery.Label);

    return v43;
  }
  v334 = 0;
  v168 = (uint64_t)v329;
  sub_249F990A0((uint64_t)v329, &qword_2578FFA68);
  v169 = v165;
  sub_249F989C0(v164, type metadata accessor for VUStreamingGallery.Label);
  sub_249F9896C(v165, v168, type metadata accessor for VUStreamingGallery.Label);
  v170 = (void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v332[7];
  v170(v168, 0, 1, v84);
  v171 = _s19VisualUnderstanding18VUStreamingGalleryC5LabelO09isUnknownE05labelSbAE_tFZ_0(v169);
  v325 = v82;
  if ((v171 & 1) != 0)
  {
    sub_249FCA454();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v172 = swift_allocObject();
    v173 = MEMORY[0x24BEE1768];
    v333 = xmmword_24A0208B0;
    *(_OWORD *)(v172 + 16) = xmmword_24A0208B0;
    v174 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v172 + 56) = v173;
    *(_QWORD *)(v172 + 64) = v174;
    *(_QWORD *)(v172 + 32) = v43;
    swift_retain();
    v175 = v43;
    v43 = v167;
    v176 = (void *)sub_24A01F09C();
    MEMORY[0x24BDAC7A8](v176);
    v178 = v177;
    v179 = v334;
    sub_24A01F180();
    v180 = v330;
    if (v179)
    {

      sub_249F989C0(v316, type metadata accessor for VUStreamingGallery.Label);
      swift_release();

    }
    else
    {
      swift_release();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC38);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v333;
      *(_QWORD *)(inited + 32) = v175;
      swift_retain();
      sub_24A005630(inited);
      swift_setDeallocating();
      swift_release();
      sub_249F989C0(v316, type metadata accessor for VUStreamingGallery.Label);

      return 0;
    }
    return v43;
  }
  v181 = v169;
  v182 = v318;
  sub_249F9896C(v181, v318, type metadata accessor for VUStreamingGallery.Label);
  v170(v182, 0, 1, v84);
  v140 = (char *)(v167 + 40);
  swift_beginAccess();
  sub_249FA4518(v182, v43);
  swift_endAccess();
  swift_retain();
  v84 = sub_249FD1FB8(0, 1, 0);
  swift_release();
  v82 = v330;
  if (v84 >> 62)
    goto LABEL_229;
  v183 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_99:
  v184 = v322;
  v305 = (id)v136;
  *(_QWORD *)&v333 = v140;
  if (v183)
  {
    v337 = (char *)MEMORY[0x24BEE4AF8];
    sub_249F8CC9C(0, v183 & ~(v183 >> 63), 0);
    if (v183 < 0)
    {
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
      goto LABEL_233;
    }
    v185 = 0;
    v140 = v337;
    do
    {
      if ((v84 & 0xC000000000000001) != 0)
        v186 = (id)MEMORY[0x24BD071F4](v185, v84);
      else
        v186 = *(id *)(v84 + 8 * v185 + 32);
      v187 = v186;
      v188 = objc_msgSend(v186, sel_identifier);

      v337 = v140;
      v190 = *((_QWORD *)v140 + 2);
      v189 = *((_QWORD *)v140 + 3);
      if (v190 >= v189 >> 1)
      {
        sub_249F8CC9C(v189 > 1, v190 + 1, 1);
        v140 = v337;
      }
      ++v185;
      *((_QWORD *)v140 + 2) = v190 + 1;
      *(_QWORD *)&v140[8 * v190 + 32] = v188;
      v82 = v330;
      v184 = v322;
    }
    while (v183 != v185);
    swift_bridgeObjectRelease();
    v43 = v324;
  }
  else
  {
    swift_bridgeObjectRelease();
    v140 = (char *)MEMORY[0x24BEE4AF8];
  }
  v192 = *(_QWORD *)v333;
  v193 = *(_QWORD *)(*(_QWORD *)v333 + 64);
  v318 = *(_QWORD *)v333 + 64;
  v194 = 1 << *(_BYTE *)(v192 + 32);
  v195 = -1;
  if (v194 < 64)
    v195 = ~(-1 << v194);
  v84 = v195 & v193;
  v319 = (unint64_t)(v194 + 63) >> 6;
  v317 = v319 - 1;
  v323 = v192;
  swift_bridgeObjectRetain();
  v326 = 0;
  *(_QWORD *)&v333 = 0;
  v329 = (char *)MEMORY[0x24BEE4B00];
  v136 = (uint64_t)&qword_2578FFA80;
  v113 = (char *)v325;
  while (1)
  {
    if (v84)
    {
      v196 = __clz(__rbit64(v84));
      v84 &= v84 - 1;
      v197 = v196 | ((_QWORD)v333 << 6);
LABEL_118:
      v198 = *(_QWORD *)(v323 + 56);
      *v184 = *(_QWORD *)(*(_QWORD *)(v323 + 48) + 8 * v197);
      v199 = v198 + v332[9] * v197;
      v200 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v136);
      sub_249F9896C(v199, (uint64_t)v184 + *(int *)(v200 + 48), type metadata accessor for VUStreamingGallery.Label);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 56))(v184, 0, 1, v200);
      v113 = (char *)v325;
      goto LABEL_137;
    }
    v201 = v333 + 1;
    if (__OFADD__((_QWORD)v333, 1))
      goto LABEL_227;
    if (v201 < v319)
    {
      v202 = *(_QWORD *)(v318 + 8 * v201);
      if (v202)
        goto LABEL_122;
      v203 = v333 + 2;
      *(_QWORD *)&v333 = v333 + 1;
      if (v201 + 1 < v319)
      {
        v202 = *(_QWORD *)(v318 + 8 * v203);
        if (v202)
          goto LABEL_125;
        *(_QWORD *)&v333 = v201 + 1;
        if (v201 + 2 < v319)
        {
          v202 = *(_QWORD *)(v318 + 8 * (v201 + 2));
          if (v202)
          {
            v201 += 2;
            goto LABEL_122;
          }
          v203 = v201 + 3;
          *(_QWORD *)&v333 = v201 + 2;
          if (v201 + 3 < v319)
          {
            v202 = *(_QWORD *)(v318 + 8 * v203);
            if (v202)
            {
LABEL_125:
              v201 = v203;
LABEL_122:
              v84 = (v202 - 1) & v202;
              v197 = __clz(__rbit64(v202)) + (v201 << 6);
              *(_QWORD *)&v333 = v201;
              goto LABEL_118;
            }
            while (1)
            {
              v201 = v203 + 1;
              if (__OFADD__(v203, 1))
                goto LABEL_231;
              if (v201 >= v319)
              {
                *(_QWORD *)&v333 = v317;
                break;
              }
              v202 = *(_QWORD *)(v318 + 8 * v201);
              ++v203;
              if (v202)
                goto LABEL_122;
            }
          }
        }
      }
    }
    v204 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v136);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 56))(v184, 1, 1, v204);
    v84 = 0;
LABEL_137:
    v205 = (uint64_t)v184;
    v206 = v320;
    sub_249F98C10(v205, (uint64_t)v320, &qword_2578FFA78);
    v207 = v136;
    v208 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v136);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 48))(v206, 1, v208) == 1)
      break;
    v209 = v206;
    v210 = *v206;
    v136 = (uint64_t)type metadata accessor for VUStreamingGallery.Label;
    sub_249F98928((uint64_t)v209 + *(int *)(v208 + 48), (uint64_t)v328, type metadata accessor for VUStreamingGallery.Label);
    v211 = *((_QWORD *)v140 + 2);
    if (!v211)
      goto LABEL_115;
    if (*((_QWORD *)v140 + 4) == v210)
      goto LABEL_140;
    if (v211 == 1)
      goto LABEL_115;
    if (*((_QWORD *)v140 + 5) == v210)
    {
LABEL_140:
      v212 = v321;
      sub_249F9896C((uint64_t)v328, v321, type metadata accessor for VUStreamingGallery.Label);
      sub_249FC7728((uint64_t)v326);
      v82 = v329;
      v136 = swift_isUniquelyReferenced_nonNull_native();
      v337 = v82;
      v214 = sub_249F8B2AC(v212);
      v215 = *((_QWORD *)v82 + 2);
      v216 = (v213 & 1) == 0;
      v217 = v215 + v216;
      if (__OFADD__(v215, v216))
        goto LABEL_226;
      v43 = v213;
      if (*((_QWORD *)v82 + 3) >= v217)
      {
        if ((v136 & 1) == 0)
          sub_249FC2958();
      }
      else
      {
        sub_249FBB160(v217, v136);
        v218 = sub_249F8B2AC(v321);
        if ((v43 & 1) != (v219 & 1))
          goto LABEL_236;
        v214 = v218;
      }
      v82 = v337;
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_QWORD *)&v82[8 * (v214 >> 6) + 64] |= 1 << v214;
        v222 = *((_QWORD *)v82 + 6) + v332[9] * v214;
        swift_bridgeObjectRetain();
        sub_249F9896C(v321, v222, type metadata accessor for VUStreamingGallery.Label);
        *(_QWORD *)(*((_QWORD *)v82 + 7) + 8 * v214) = MEMORY[0x24BEE4AF8];
        v223 = *((_QWORD *)v82 + 2);
        v153 = __OFADD__(v223, 1);
        v224 = v223 + 1;
        if (v153)
          goto LABEL_228;
        *((_QWORD *)v82 + 2) = v224;
      }
      v225 = *((_QWORD *)v82 + 7);
      swift_bridgeObjectRelease();
      v226 = *(_QWORD **)(v225 + 8 * v214);
      v227 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v225 + 8 * v214) = v226;
      v329 = v82;
      if ((v227 & 1) == 0)
      {
        v226 = sub_249F89B7C(0, v226[2] + 1, 1, v226);
        *(_QWORD *)(v225 + 8 * v214) = v226;
      }
      v229 = v226[2];
      v228 = v226[3];
      if (v229 >= v228 >> 1)
      {
        v226 = sub_249F89B7C((_QWORD *)(v228 > 1), v229 + 1, 1, v226);
        *(_QWORD *)(v225 + 8 * v214) = v226;
      }
      v113 = (char *)v325;
      v226[2] = v229 + 1;
      v226[v229 + 4] = v210;
      sub_249F989C0(v321, type metadata accessor for VUStreamingGallery.Label);
      v326 = sub_249FA3E60;
      v82 = v330;
      v43 = v324;
    }
    else if (v211 != 2)
    {
      v220 = 6;
      while (1)
      {
        v221 = v220 - 3;
        if (__OFADD__(v220 - 4, 1))
          break;
        if (*(_QWORD *)&v140[8 * v220] == v210)
          goto LABEL_140;
        ++v220;
        if (v221 == v211)
          goto LABEL_115;
      }
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      swift_bridgeObjectRetain();
      v183 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      goto LABEL_99;
    }
LABEL_115:
    sub_249F989C0((uint64_t)v328, type metadata accessor for VUStreamingGallery.Label);
    v184 = v322;
    v136 = v207;
  }
  swift_bridgeObjectRelease();
  swift_release();
  if (!*((_QWORD *)v329 + 2))
  {
    v233 = v312;
    sub_249F9896C(v316, v312, type metadata accessor for VUStreamingGallery.Label);
    v234 = v335;
    v235 = (uint64_t)v314;
    v112 = v305;
    goto LABEL_168;
  }
  swift_bridgeObjectRetain();
  v230 = v316;
  sub_249F8B2AC(v316);
  v232 = v231;
  swift_bridgeObjectRelease();
  v233 = v312;
  sub_249F9896C(v230, v312, type metadata accessor for VUStreamingGallery.Label);
  v234 = v335;
  v235 = (uint64_t)v314;
  v112 = v305;
  if ((v232 & 1) == 0)
  {
LABEL_168:
    sub_249F989C0(v233, type metadata accessor for VUStreamingGallery.Label);
    goto LABEL_169;
  }
  v236 = sub_249FA3864(v233, (uint64_t)v329);
  if (!v236)
    goto LABEL_234;
  v237 = *(_QWORD *)(v236 + 16);
  swift_bridgeObjectRelease();
  sub_249F989C0(v233, type metadata accessor for VUStreamingGallery.Label);
  if (v237 > 0x1D)
  {
    v238 = v316;
    v88 = v326;
    goto LABEL_223;
  }
LABEL_169:
  objc_opt_self();
  v239 = swift_dynamicCastObjCClass();
  v240 = *(_QWORD *)(*(_QWORD *)(v234 + 24) + 16);
  if (v239)
  {
    if (v112)
    {
      swift_retain();
      v241 = objc_msgSend(v112, sel_descriptorData);
      v242 = (uint64_t)v309;
      if (v241)
      {
        v243 = v241;
        v244 = (uint64_t *)sub_24A01EAFC();
        v246 = v245;

      }
      else
      {
        v244 = 0;
        v246 = 0xF000000000000000;
      }
      v330 = (char *)objc_msgSend(v112, sel_requestRevision);
    }
    else
    {
      swift_retain();
      v330 = 0;
      v244 = 0;
      v246 = 0xF000000000000000;
      v242 = (uint64_t)v309;
    }
    v253 = (uint64_t)v308;
    v332 = v244;
    *(_QWORD *)&v333 = v240;
    if (v113)
    {
      v254 = objc_msgSend(v113, sel_descriptorData);
      if (v254)
      {
        v255 = v254;
        v256 = sub_24A01EAFC();
        v258 = v257;

      }
      else
      {
        v256 = 0;
        v258 = 0xF000000000000000;
      }
      v235 = (uint64_t)v314;
      v259 = v246;
      v328 = (uint64_t *)objc_msgSend(v325, sel_requestRevision);
    }
    else
    {
      v259 = v246;
      v328 = 0;
      v256 = 0;
      v258 = 0xF000000000000000;
    }
    sub_249F9905C(v331, v253, &qword_2544CA288);
    v260 = type metadata accessor for VUGallery.Context(0);
    v261 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v260 - 8) + 48);
    if (v261(v253, 1, v260) == 1)
    {
      sub_249F990A0(v253, &qword_2544CA288);
      v262 = sub_24A01EBA4();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 56))(v313, 1, 1, v262);
    }
    else
    {
      sub_249F9905C(v253, v313, &qword_2544CAD70);
      sub_249F989C0(v253, type metadata accessor for VUGallery.Context);
    }
    sub_249F9905C(v331, v235, &qword_2544CA288);
    if (v261(v235, 1, v260) == 1)
    {
      sub_249F990A0(v235, &qword_2544CA288);
      v263 = sub_24A01EBA4();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 56))(v242, 1, 1, v263);
    }
    else
    {
      sub_249F9905C(v235 + *(int *)(v260 + 20), v242, &qword_2544CAD70);
      sub_249F989C0(v235, type metadata accessor for VUGallery.Context);
    }
    v264 = v256;
    LOBYTE(v337) = 3;
    v112 = v305;
    v43 = v258;
    if (v305)
    {
      objc_msgSend(v305, sel_confidence);
      v266 = v265;
    }
    else
    {
      v266 = 0;
    }
    LOBYTE(v336) = 1;
    v296 = v242;
    v267 = v242;
    v268 = v313;
    v269 = v332;
    v270 = v334;
    sub_249FE1C30(2u, 0xFFFFLL, v332, v259, (uint64_t)v330, v112 == 0, v264, v43, v328, v325 == 0, v313, v296, (uint64_t)&v337, v266 | ((unint64_t)(v112 == 0) << 32));
    v334 = v270;
    if (v270)
    {
      swift_release();
      sub_249F92438(v264, v43);
      sub_249F92438((uint64_t)v269, v259);
      sub_249F990A0(v267, &qword_2544CAD70);
      sub_249F990A0(v268, &qword_2544CAD70);
      sub_249F989C0(v316, type metadata accessor for VUStreamingGallery.Label);
      swift_bridgeObjectRelease();

LABEL_208:
      sub_249FC7728((uint64_t)v326);
      return v43;
    }
    swift_release();
    sub_249F92438(v264, v43);
    sub_249F92438((uint64_t)v269, v259);
    sub_249F990A0(v267, &qword_2544CAD70);
    sub_249F990A0(v268, &qword_2544CAD70);
    if (v112)
    {
      swift_retain();
      v271 = objc_msgSend(v112, sel_descriptorData);
      v272 = v325;
      v88 = v326;
      if (v271)
      {
        v273 = v271;
        v274 = sub_24A01EAFC();
        v276 = v275;

      }
      else
      {
        v274 = 0;
        v276 = 0xF000000000000000;
      }
    }
    else
    {
      swift_retain();
      v274 = 0;
      v276 = 0xF000000000000000;
      v272 = v325;
      v88 = v326;
    }
    if (v272 && (v291 = objc_msgSend(v272, sel_descriptorData)) != 0)
    {
      v292 = v291;
      v293 = sub_24A01EAFC();
      v295 = v294;

    }
    else
    {
      v293 = 0;
      v295 = 0xF000000000000000;
    }
    v43 = v324;
    sub_24A005098(v324, v274, v276, v293, v295);
    sub_249F92438(v293, v295);
    sub_249F92438(v274, v276);
    v113 = (char *)v325;
  }
  else
  {
    if (v82)
    {
      swift_retain();
      v247 = objc_msgSend(v82, sel_descriptorData);
      v248 = (uint64_t)v307;
      if (!v247)
        goto LABEL_235;
      v249 = v247;
      v250 = (uint64_t *)sub_24A01EAFC();
      v252 = v251;

      v332 = (uint64_t *)objc_msgSend(v82, sel_requestRevision);
    }
    else
    {
      swift_retain();
      v332 = 0;
      v250 = 0;
      v252 = 0xF000000000000000;
      v248 = (uint64_t)v307;
    }
    v277 = sub_24A01EBA4();
    v278 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v277 - 8) + 56);
    v278(v311, 1, 1, v277);
    sub_249F9905C(v331, v248, &qword_2544CA288);
    v279 = v248;
    v280 = type metadata accessor for VUGallery.Context(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v280 - 8) + 48))(v279, 1, v280) == 1)
    {
      sub_249F990A0(v279, &qword_2544CA288);
      v278(v310, 1, 1, v277);
    }
    else
    {
      sub_249F9905C(v279 + *(int *)(v280 + 20), (uint64_t)v310, &qword_2544CAD70);
      sub_249F989C0(v279, type metadata accessor for VUGallery.Context);
    }
    v113 = (char *)v325;
    v43 = v324;
    LOBYTE(v337) = 3;
    v281 = (uint64_t)v311;
    if (v82)
    {
      objc_msgSend(v82, sel_confidence);
      v283 = v282;
    }
    else
    {
      v283 = 0;
    }
    LOBYTE(v336) = 1;
    v284 = (uint64_t)v310;
    v285 = v334;
    sub_249FE1C30(0x3Fu, 0xFFFFLL, v250, v252, (uint64_t)v332, v82 == 0, 0, 0xF000000000000000, 0, 1, v281, (uint64_t)v310, (uint64_t)&v337, v283 | ((unint64_t)(v82 == 0) << 32));
    v334 = v285;
    if (v285)
    {
      swift_release();
      sub_249F92438((uint64_t)v250, v252);
      sub_249F990A0(v284, &qword_2544CAD70);
      sub_249F990A0(v281, &qword_2544CAD70);
      sub_249F989C0(v316, type metadata accessor for VUStreamingGallery.Label);
      swift_bridgeObjectRelease();

      goto LABEL_208;
    }
    swift_release();
    sub_249F92438((uint64_t)v250, v252);
    sub_249F990A0(v284, &qword_2544CAD70);
    sub_249F990A0(v281, &qword_2544CAD70);
    if (v82)
    {
      swift_retain();
      v286 = objc_msgSend(v82, sel_descriptorData);
      v88 = v326;
      if (v286)
      {
        v287 = v286;
        v288 = sub_24A01EAFC();
        v290 = v289;

      }
      else
      {
        v288 = 0;
        v290 = 0xF000000000000000;
      }
    }
    else
    {
      swift_retain();
      v288 = 0;
      v290 = 0xF000000000000000;
      v88 = v326;
    }
    sub_24A005098(v43, v288, v290, 0, 0xF000000000000000);
    sub_249F92438(v288, v290);
  }
  swift_release();
  v238 = v316;
LABEL_223:
  sub_249F989C0(v238, type metadata accessor for VUStreamingGallery.Label);
  swift_bridgeObjectRelease();
LABEL_42:
  if ((sub_249FB2EBC() & 1) != 0)
    sub_249FAE81C();

  sub_249FC7728((uint64_t)v88);
  return v43;
}

void sub_249FAA680()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) + 16);
  swift_retain();
  v2 = v1;
  sub_24A01F180();
  swift_release();

}

uint64_t VUStreamingGallery.ClusterResult.observationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VUStreamingGallery.ClusterResult.clusterIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t VUStreamingGallery.ClusterResult.isKeyFace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_249FAA72C(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_249FAA780(a1, (uint64_t)&unk_251B67DA0);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_249FAA780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  char v29;
  uint64_t v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint8_t *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *p_aBlock;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(_QWORD *@<X8>);
  uint64_t v52;
  uint64_t *v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  int64_t v100;
  unint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  int64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int64_t v149;
  int64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  int64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  BOOL v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  const char *v167;
  void (*v168)(unint64_t, uint64_t);
  char *v169;
  uint64_t v170;
  uint8_t *v171;
  os_signpost_id_t v172;
  NSString *v173;
  Class v174;
  uint64_t inited;
  unint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;
  uint64_t result;
  uint64_t v181;
  int64_t v182;
  char *v183;
  void (*v184)(_QWORD *@<X8>);
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  void (*v194)(char *, char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  int64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  int64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t i;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  _QWORD *aBlock;
  uint64_t v216;
  void *v217;
  void *v218;
  void *v219;
  uint64_t v220;

  v203 = a2;
  v202 = a1;
  v191 = sub_24A01ED54();
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v197 = (uint64_t *)((char *)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA70);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v199 = (uint64_t)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v207 = (uint64_t)&v181 - v7;
  v188 = type metadata accessor for VUStreamingGallery.Label(0);
  v208 = *(_QWORD *)(v188 - 8);
  MEMORY[0x24BDAC7A8](v188);
  v212 = (uint64_t *)((char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA78);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v204 = (uint64_t *)((char *)&v181 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v181 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v14);
  v209 = (unint64_t)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_24A01ED24();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v181 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v181 - v24;
  CFAbsoluteTimeGetCurrent();
  swift_retain();
  v189 = sub_249FCBC58(0, 0, 1);
  swift_release();
  v205 = v2;
  v26 = v2 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED30();
  sub_24A01ED0C();
  v192 = v26;
  v27 = sub_24A01ED30();
  v28 = sub_24A01F174();
  v29 = sub_24A01F1E0();
  v193 = v20;
  if ((v29 & 1) != 0)
  {
    v194 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v194(v23, v25, v16);
    v30 = v17;
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = sub_24A01ED18();
    _os_signpost_emit_with_name_impl(&dword_249F70000, v27, v28, v32, "update", "", v31, 2u);
    v33 = v31;
    v17 = v30;
    MEMORY[0x24BD07950](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v16);
    v34 = v194;
    v194(v23, v25, v16);
  }
  else
  {

    v34 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v34(v23, v25, v16);
  }
  sub_24A01ED78();
  swift_allocObject();
  v195 = v16;
  v35 = sub_24A01ED6C();
  v36 = sub_24A01EAA8();
  v37 = (_QWORD *)v209;
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v209, 1, 1, v36);
  swift_retain();
  LOBYTE(aBlock) = 1;
  v38 = i;
  sub_249FFD1AC(0, (uint64_t)v37, 0, 0, 0x100000000, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_249F990A0((uint64_t)v37, (uint64_t *)&unk_2544CAD60);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v195);
    return (uint64_t)v37;
  }
  v194 = v34;
  v183 = v23;
  v187 = v35;
  v185 = v17;
  v210 = 0;
  v186 = v25;
  sub_249F990A0((uint64_t)v37, (uint64_t *)&unk_2544CAD60);
  swift_release();
  v39 = v205;
  p_aBlock = *(_QWORD **)(*(_QWORD *)(v205 + 16) + 16);
  v214 = MEMORY[0x24BEE4B00];
  v41 = (void *)p_aBlock[2];
  v42 = swift_allocObject();
  *(_DWORD *)(v42 + 16) = 256;
  *(_BYTE *)(v42 + 20) = 1;
  *(_QWORD *)(v42 + 24) = 0;
  *(_BYTE *)(v42 + 32) = 1;
  *(_QWORD *)(v42 + 40) = p_aBlock;
  *(_QWORD *)(v42 + 48) = &v214;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_249F98E60;
  *(_QWORD *)(v43 + 24) = v42;
  v219 = sub_249FC76E4;
  v220 = v43;
  aBlock = (_QWORD *)MEMORY[0x24BDAC760];
  v216 = 1107296256;
  v217 = sub_249F87210;
  v218 = &block_descriptor_1;
  v44 = _Block_copy(&aBlock);
  swift_retain_n();
  v45 = v41;
  swift_retain();
  swift_release();
  objc_msgSend(v45, sel_performBlockAndWait_, v44);

  _Block_release(v44);
  LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v44 & 1) != 0)
    goto LABEL_187;
  i = v214;
  swift_release();
  swift_release();
  swift_beginAccess();
  v46 = *(_QWORD *)(v39 + 40);
  v47 = *(_QWORD *)(v46 + 64);
  v196 = v46 + 64;
  v48 = 1 << *(_BYTE *)(v46 + 32);
  v49 = -1;
  if (v48 < 64)
    v49 = ~(-1 << v48);
  v50 = v49 & v47;
  v198 = (unint64_t)(v48 + 63) >> 6;
  v182 = v198 - 1;
  v200 = v46;
  swift_bridgeObjectRetain();
  v51 = 0;
  v206 = 0;
  v52 = MEMORY[0x24BEE4B00];
  v53 = &qword_2578FFA80;
  v54 = type metadata accessor for VUStreamingGallery.Label;
  v201 = v13;
  while (1)
  {
    v55 = (uint64_t)v204;
    if (v50)
    {
      v56 = __clz(__rbit64(v50));
      v57 = (v50 - 1) & v50;
      v58 = v56 | (v206 << 6);
LABEL_12:
      v59 = *(_QWORD *)(v200 + 56);
      *v204 = *(_QWORD *)(*(_QWORD *)(v200 + 48) + 8 * v58);
      v60 = v59 + *(_QWORD *)(v208 + 72) * v58;
      v61 = __swift_instantiateConcreteTypeFromMangledName(v53);
      sub_249F9896C(v60, v55 + *(int *)(v61 + 48), v54);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v55, 0, 1, v61);
      goto LABEL_31;
    }
    v62 = v206 + 1;
    if (__OFADD__(v206, 1))
      goto LABEL_182;
    if (v62 < v198)
    {
      v63 = *(_QWORD *)(v196 + 8 * v62);
      if (v63)
        goto LABEL_16;
      v64 = v206 + 2;
      ++v206;
      if (v62 + 1 < v198)
      {
        v63 = *(_QWORD *)(v196 + 8 * v64);
        if (v63)
          goto LABEL_19;
        v206 = v62 + 1;
        if (v62 + 2 < v198)
        {
          v63 = *(_QWORD *)(v196 + 8 * (v62 + 2));
          if (v63)
          {
            v62 += 2;
            goto LABEL_16;
          }
          v64 = v62 + 3;
          v206 = v62 + 2;
          if (v62 + 3 < v198)
          {
            v63 = *(_QWORD *)(v196 + 8 * v64);
            if (v63)
            {
LABEL_19:
              v62 = v64;
LABEL_16:
              v57 = (v63 - 1) & v63;
              v58 = __clz(__rbit64(v63)) + (v62 << 6);
              v206 = v62;
              goto LABEL_12;
            }
            while (1)
            {
              v62 = v64 + 1;
              if (__OFADD__(v64, 1))
                goto LABEL_188;
              if (v62 >= v198)
                break;
              v63 = *(_QWORD *)(v196 + 8 * v62);
              ++v64;
              if (v63)
                goto LABEL_16;
            }
            v206 = v182;
          }
        }
      }
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName(v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v55, 1, 1, v65);
    v57 = 0;
LABEL_31:
    sub_249F98C10(v55, (uint64_t)v13, &qword_2578FFA78);
    v66 = __swift_instantiateConcreteTypeFromMangledName(v53);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v13, 1, v66) == 1)
      break;
    v209 = v57;
    v67 = *v13;
    v68 = (uint64_t)v13 + *(int *)(v66 + 48);
    v69 = (uint64_t)v212;
    v70 = v54;
    sub_249F98928(v68, (uint64_t)v212, v54);
    sub_249FC7728((uint64_t)v51);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock = (_QWORD *)v52;
    v72 = v69;
    p_aBlock = (_QWORD *)v52;
    v74 = sub_249F8B2AC(v72);
    v75 = *(_QWORD *)(v52 + 16);
    v76 = (v73 & 1) == 0;
    v77 = v75 + v76;
    if (__OFADD__(v75, v76))
      goto LABEL_179;
    v78 = v73;
    if (*(_QWORD *)(v52 + 24) >= v77)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        p_aBlock = &aBlock;
        sub_249FC2958();
        v52 = (uint64_t)aBlock;
      }
    }
    else
    {
      sub_249FBB160(v77, isUniquelyReferenced_nonNull_native);
      v52 = (uint64_t)aBlock;
      p_aBlock = aBlock;
      v79 = sub_249F8B2AC((uint64_t)v212);
      if ((v78 & 1) != (v80 & 1))
        goto LABEL_192;
      v74 = v79;
    }
    swift_bridgeObjectRelease();
    if ((v78 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)(v52 + 8 * (v74 >> 6) + 64) |= 1 << v74;
      v81 = *(_QWORD *)(v52 + 48) + *(_QWORD *)(v208 + 72) * v74;
      swift_bridgeObjectRetain();
      sub_249F9896C((uint64_t)v212, v81, v70);
      *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v74) = MEMORY[0x24BEE4AF8];
      v82 = *(_QWORD *)(v52 + 16);
      v83 = __OFADD__(v82, 1);
      v84 = v82 + 1;
      if (v83)
        goto LABEL_180;
      *(_QWORD *)(v52 + 16) = v84;
    }
    v85 = v53;
    v86 = *(_QWORD *)(v52 + 56);
    swift_bridgeObjectRelease();
    p_aBlock = *(_QWORD **)(v86 + 8 * v74);
    v87 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v86 + 8 * v74) = p_aBlock;
    v88 = v52;
    if ((v87 & 1) == 0)
    {
      p_aBlock = sub_249F89B7C(0, p_aBlock[2] + 1, 1, p_aBlock);
      *(_QWORD *)(v86 + 8 * v74) = p_aBlock;
    }
    v90 = p_aBlock[2];
    v89 = p_aBlock[3];
    if (v90 >= v89 >> 1)
    {
      p_aBlock = sub_249F89B7C((_QWORD *)(v89 > 1), v90 + 1, 1, p_aBlock);
      *(_QWORD *)(v86 + 8 * v74) = p_aBlock;
    }
    p_aBlock[2] = v90 + 1;
    p_aBlock[v90 + 4] = v67;
    v54 = v70;
    sub_249F989C0((uint64_t)v212, v70);
    v51 = sub_249FA3E60;
    v52 = v88;
    v53 = v85;
    v13 = v201;
    v50 = v209;
  }
  swift_release();
  v91 = *(_QWORD *)(v52 + 64);
  v204 = (_QWORD *)(v52 + 64);
  v92 = 1 << *(_BYTE *)(v52 + 32);
  v93 = -1;
  if (v92 < 64)
    v93 = ~(-1 << v92);
  v94 = v93 & v91;
  v206 = (unint64_t)(v92 + 63) >> 6;
  v201 = (_QWORD *)(v206 - 1);
  swift_bridgeObjectRetain();
  v209 = 0;
  p_aBlock = (_QWORD *)i;
  v212 = (_QWORD *)v52;
  v184 = v51;
  while (2)
  {
    if (v94)
    {
      i = (v94 - 1) & v94;
      v95 = __clz(__rbit64(v94)) | (v209 << 6);
      goto LABEL_54;
    }
    v100 = v209 + 1;
    if (__OFADD__(v209, 1))
      goto LABEL_184;
    if (v100 >= v206)
      goto LABEL_72;
    v101 = v204[v100];
    if (!v101)
    {
      v102 = v209 + 2;
      ++v209;
      if (v100 + 1 < v206)
      {
        v101 = v204[v102];
        if (v101)
        {
LABEL_61:
          v100 = v102;
          goto LABEL_58;
        }
        v209 = v100 + 1;
        if (v100 + 2 < v206)
        {
          v101 = v204[v100 + 2];
          if (v101)
          {
            v100 += 2;
            goto LABEL_58;
          }
          v102 = v100 + 3;
          v209 = v100 + 2;
          if (v100 + 3 < v206)
          {
            v101 = v204[v102];
            if (v101)
              goto LABEL_61;
            while (1)
            {
              v100 = v102 + 1;
              if (__OFADD__(v102, 1))
                goto LABEL_189;
              if (v100 >= v206)
                break;
              v101 = v204[v100];
              ++v102;
              if (v101)
                goto LABEL_58;
            }
            v209 = (unint64_t)v201;
          }
        }
      }
LABEL_72:
      v98 = &qword_2578FF830;
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
      v96 = v199;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v199, 1, 1, v103);
      i = 0;
      goto LABEL_73;
    }
LABEL_58:
    i = (v101 - 1) & v101;
    v95 = __clz(__rbit64(v101)) + (v100 << 6);
    v209 = v100;
LABEL_54:
    v96 = v199;
    sub_249F9896C(*(_QWORD *)(v52 + 48) + *(_QWORD *)(v208 + 72) * v95, v199, type metadata accessor for VUStreamingGallery.Label);
    v97 = *(_QWORD *)(v52 + 56);
    v98 = &qword_2578FF830;
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
    *(_QWORD *)(v96 + *(int *)(v99 + 48)) = *(_QWORD *)(v97 + 8 * v95);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v96, 0, 1, v99);
    swift_bridgeObjectRetain();
LABEL_73:
    v104 = v207;
    sub_249F98C10(v96, v207, &qword_2578FFA70);
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v104, 1, v105) == 1)
    {
      swift_release();
      v124 = swift_bridgeObjectRetain();
      v125 = sub_249FA4B18(v124);
      v126 = 0;
      v213 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v127 = *(_QWORD *)(v125 + 56);
      v206 = v125 + 56;
      v208 = v125;
      v128 = 1 << *(_BYTE *)(v125 + 32);
      v129 = -1;
      if (v128 < 64)
        v129 = ~(-1 << v128);
      v130 = v129 & v127;
      v207 = (unint64_t)(v128 + 63) >> 6;
      for (i = (uint64_t)p_aBlock; ; p_aBlock = (_QWORD *)i)
      {
        if (v130)
        {
          v130 &= v130 - 1;
        }
        else
        {
          v83 = __OFADD__(v126++, 1);
          if (v83)
            goto LABEL_181;
          if (v126 >= v207)
            goto LABEL_126;
          v131 = *(_QWORD *)(v206 + 8 * v126);
          if (!v131)
          {
            v132 = v126 + 1;
            if (v126 + 1 >= v207)
              goto LABEL_126;
            v131 = *(_QWORD *)(v206 + 8 * v132);
            if (!v131)
            {
              v132 = v126 + 2;
              if (v126 + 2 >= v207)
                goto LABEL_126;
              v131 = *(_QWORD *)(v206 + 8 * v132);
              if (!v131)
              {
                v132 = v126 + 3;
                if (v126 + 3 >= v207)
                  goto LABEL_126;
                v131 = *(_QWORD *)(v206 + 8 * v132);
                if (!v131)
                {
                  while (1)
                  {
                    v126 = v132 + 1;
                    if (__OFADD__(v132, 1))
                      goto LABEL_185;
                    if (v126 >= v207)
                      break;
                    v131 = *(_QWORD *)(v206 + 8 * v126);
                    ++v132;
                    if (v131)
                      goto LABEL_113;
                  }
LABEL_126:
                  swift_release();
                  swift_bridgeObjectRelease();
                  v145 = p_aBlock[8];
                  v212 = p_aBlock + 8;
                  v146 = 1 << *((_BYTE *)p_aBlock + 32);
                  v147 = -1;
                  if (v146 < 64)
                    v147 = ~(-1 << v146);
                  v148 = v147 & v145;
                  v149 = (unint64_t)(v146 + 63) >> 6;
                  swift_bridgeObjectRetain();
                  v150 = 0;
                  v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
                  if (!v148)
                    goto LABEL_130;
                  while (2)
                  {
                    v151 = __clz(__rbit64(v148));
                    v148 &= v148 - 1;
                    v152 = v151 | (v150 << 6);
LABEL_141:
                    v155 = 8 * v152;
                    v156 = *(_QWORD *)(*(_QWORD *)(i + 48) + v155);
                    v157 = *(_QWORD *)(*(_QWORD *)(i + 56) + v155);
                    v158 = v213[2];
                    if (!v158)
                      goto LABEL_145;
                    if (v213[4] == v156)
                      goto LABEL_143;
                    if (v158 != 1)
                    {
                      if (v213[5] == v156)
                      {
LABEL_143:
                        v159 = 1;
                      }
                      else
                      {
                        if (v158 == 2)
                          goto LABEL_145;
                        v163 = 6;
                        do
                        {
                          v164 = v163 - 3;
                          if (__OFADD__(v163 - 4, 1))
                            goto LABEL_178;
                          v165 = v213[v163];
                          v159 = v165 == v156;
                          if (v165 == v156)
                            break;
                          ++v163;
                        }
                        while (v164 != v158);
                      }
                    }
                    else
                    {
LABEL_145:
                      v159 = 0;
                    }
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v37 = sub_249F8A1E0(0, v37[2] + 1, 1, v37);
                    v161 = v37[2];
                    v160 = v37[3];
                    p_aBlock = (_QWORD *)(v161 + 1);
                    if (v161 >= v160 >> 1)
                      v37 = sub_249F8A1E0((_QWORD *)(v160 > 1), v161 + 1, 1, v37);
                    v37[2] = p_aBlock;
                    v162 = &v37[3 * v161];
                    v162[4] = v156;
                    v162[5] = v157;
                    *((_BYTE *)v162 + 48) = v159;
                    if (v148)
                      continue;
                    break;
                  }
LABEL_130:
                  v83 = __OFADD__(v150++, 1);
                  if (v83)
                    goto LABEL_183;
                  if (v150 >= v149)
                  {
                    swift_release();
                    v166 = v186;
                    v98 = v197;
                    goto LABEL_165;
                  }
                  v153 = v212[v150];
                  v98 = v197;
                  if (!v153)
                  {
                    v154 = v150 + 1;
                    if (v150 + 1 >= v149)
                      goto LABEL_164;
                    v153 = v212[v154];
                    if (!v153)
                    {
                      v154 = v150 + 2;
                      if (v150 + 2 >= v149)
                        goto LABEL_164;
                      v153 = v212[v154];
                      if (!v153)
                      {
                        v154 = v150 + 3;
                        if (v150 + 3 >= v149)
                          goto LABEL_164;
                        v153 = v212[v154];
                        if (!v153)
                        {
                          while (1)
                          {
                            v150 = v154 + 1;
                            if (__OFADD__(v154, 1))
                              goto LABEL_186;
                            if (v150 >= v149)
                              break;
                            v153 = v212[v150];
                            ++v154;
                            if (v153)
                              goto LABEL_140;
                          }
LABEL_164:
                          swift_release();
                          v166 = v186;
LABEL_165:
                          swift_bridgeObjectRelease();
                          v104 = sub_24A01ED30();
                          v57 = (unint64_t)v193;
                          sub_24A01ED60();
                          LOBYTE(v106) = sub_24A01F168();
                          if ((sub_24A01F1E0() & 1) != 0)
                          {
                            swift_retain();
                            sub_24A01ED84();
                            swift_release();
                            v108 = v190;
                            p_aBlock = (_QWORD *)v191;
                            if ((*(unsigned int (**)(uint64_t *, uint64_t))(v190 + 88))(v98, v191) == *MEMORY[0x24BEE7810])
                            {
                              v167 = "[Error] Interval already ended";
                            }
                            else
                            {
LABEL_169:
                              (*(void (**)(uint64_t *, _QWORD *))(v108 + 8))(v98, p_aBlock);
                              v167 = "";
                            }
                            v169 = v183;
                            v170 = v195;
                            v194(v183, (char *)v57, v195);
                            v171 = (uint8_t *)swift_slowAlloc();
                            *(_WORD *)v171 = 0;
                            v172 = sub_24A01ED18();
                            _os_signpost_emit_with_name_impl(&dword_249F70000, (os_log_t)v104, (os_signpost_type_t)v106, v172, "update", v167, v171, 2u);
                            MEMORY[0x24BD07950](v171, -1, -1);

                            v168 = *(void (**)(unint64_t, uint64_t))(v185 + 8);
                            v168(v57, v170);
                            v168((unint64_t)v169, v170);
                            v166 = v186;
                          }
                          else
                          {

                            v168 = *(void (**)(unint64_t, uint64_t))(v185 + 8);
                            v168(v57, v195);
                          }
                          v173 = (NSString *)sub_24A01EE44();
                          v174 = NSClassFromString(v173);

                          if (v174)
                          {
                            v168((unint64_t)v166, v195);
                            swift_release();
                          }
                          else
                          {
                            CFAbsoluteTimeGetCurrent();
                            __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF528);
                            inited = swift_initStackObject();
                            *(_OWORD *)(inited + 16) = xmmword_24A0208D0;
                            strcpy((char *)(inited + 32), "update_timing");
                            *(_WORD *)(inited + 46) = -4864;
                            *(_QWORD *)(inited + 48) = sub_24A01EFE8();
                            *(_QWORD *)(inited + 56) = 0xD00000000000001DLL;
                            *(_QWORD *)(inited + 64) = 0x800000024A022B50;
                            *(_QWORD *)(inited + 72) = sub_24A01EFE8();
                            *(_QWORD *)(inited + 80) = 0xD000000000000010;
                            *(_QWORD *)(inited + 88) = 0x800000024A023110;
                            *(_QWORD *)(inited + 96) = sub_24A01F048();
                            v176 = sub_249F75FA8(inited);
                            v177 = (void *)sub_24A01EE44();
                            v178 = swift_allocObject();
                            *(_QWORD *)(v178 + 16) = v176;
                            v219 = sub_249F98FC4;
                            v220 = v178;
                            aBlock = (_QWORD *)MEMORY[0x24BDAC760];
                            v216 = 1107296256;
                            v217 = sub_249F78200;
                            v218 = &block_descriptor_11_0;
                            v179 = _Block_copy(&aBlock);
                            swift_release();
                            AnalyticsSendEventLazy();
                            _Block_release(v179);
                            swift_release();

                            v168((unint64_t)v166, v195);
                          }
                          swift_bridgeObjectRelease();
                          sub_249FC7728((uint64_t)v184);
                          return (uint64_t)v37;
                        }
                      }
                    }
                    v150 = v154;
                  }
LABEL_140:
                  v148 = (v153 - 1) & v153;
                  v152 = __clz(__rbit64(v153)) + (v150 << 6);
                  goto LABEL_141;
                }
              }
            }
            v126 = v132;
          }
LABEL_113:
          v130 = (v131 - 1) & v131;
        }
        v133 = *(_QWORD *)(*(_QWORD *)(v205 + 16) + 16);
        v134 = *(void **)(v133 + 16);
        MEMORY[0x24BDAC7A8](v125);
        *(&v181 - 8) = v135;
        *((_DWORD *)&v181 - 14) = 1;
        *((_BYTE *)&v181 - 52) = 1;
        *((_DWORD *)&v181 - 12) = 0;
        *((_BYTE *)&v181 - 44) = 1;
        *((_DWORD *)&v181 - 10) = 0;
        *((_WORD *)&v181 - 18) = 1;
        v136 = v203;
        *(&v181 - 4) = v133;
        *(&v181 - 3) = v136;
        *(&v181 - 2) = v202;
        *(&v181 - 1) = 0;
        swift_retain();
        p_aBlock = v134;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA1F8);
        v137 = v210;
        sub_24A01F180();
        v210 = v137;
        if (v137)
          goto LABEL_191;
        swift_release();

        v138 = aBlock;
        v139 = aBlock[2];
        if (v139)
        {
          v209 = v126;
          aBlock = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_249F8C9C8(0, v139, 0);
          v140 = (uint64_t)aBlock;
          v141 = aBlock[2];
          v142 = 4;
          do
          {
            v143 = v138[v142];
            aBlock = (_QWORD *)v140;
            v144 = *(_QWORD *)(v140 + 24);
            if (v141 >= v144 >> 1)
            {
              sub_249F8C9C8(v144 > 1, v141 + 1, 1);
              v140 = (uint64_t)aBlock;
            }
            *(_QWORD *)(v140 + 16) = v141 + 1;
            *(_QWORD *)(v140 + 8 * v141 + 32) = v143;
            v142 += 2;
            ++v141;
            --v139;
          }
          while (v139);
          swift_bridgeObjectRelease();
          v126 = v209;
        }
        else
        {
          swift_bridgeObjectRelease();
          v140 = MEMORY[0x24BEE4AF8];
        }
        v125 = sub_249FB7B20(v140);
      }
    }
    v106 = *(_QWORD *)(v104 + *(int *)(v105 + 48));
    v37 = *(_QWORD **)(v106 + 16);
    if (!v37)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      sub_249F989C0(v207, type metadata accessor for VUStreamingGallery.Label);
      v94 = i;
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  v107 = 0;
  while (2)
  {
    v108 = *(_QWORD *)(v106 + 8 * v107 + 32);
    if (!p_aBlock[2] || (v109 = sub_249F8B27C(*(_QWORD *)(v106 + 32)), (v110 & 1) == 0))
    {
      v121 = sub_249F8B27C(v108);
      if ((v122 & 1) != 0)
      {
        v104 = v121;
        v123 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = p_aBlock;
        if ((v123 & 1) == 0)
        {
          sub_249FC20E0();
          p_aBlock = aBlock;
        }
        sub_249FBE6CC(v104, (uint64_t)p_aBlock);
        goto LABEL_91;
      }
LABEL_92:
      if (v37 == (_QWORD *)++v107)
      {
        swift_bridgeObjectRelease();
        v52 = (uint64_t)v212;
        goto LABEL_51;
      }
      if (!*(_QWORD *)(v106 + 16))
      {
        __break(1u);
        goto LABEL_169;
      }
      continue;
    }
    break;
  }
  v98 = *(uint64_t **)(p_aBlock[7] + 8 * v109);
  v104 = swift_isUniquelyReferenced_nonNull_native();
  aBlock = p_aBlock;
  v57 = sub_249F8B27C(v108);
  v112 = p_aBlock[2];
  v113 = (v111 & 1) == 0;
  v114 = v112 + v113;
  if (!__OFADD__(v112, v113))
  {
    v115 = v111;
    if (p_aBlock[3] >= v114)
    {
      if ((v104 & 1) != 0)
      {
        p_aBlock = aBlock;
        if ((v111 & 1) == 0)
          goto LABEL_82;
      }
      else
      {
        sub_249FC20E0();
        p_aBlock = aBlock;
        if ((v115 & 1) == 0)
          goto LABEL_82;
      }
    }
    else
    {
      sub_249FBA388(v114, v104);
      p_aBlock = aBlock;
      v116 = sub_249F8B27C(v108);
      if ((v115 & 1) != (v117 & 1))
        goto LABEL_190;
      v57 = v116;
      p_aBlock = aBlock;
      if ((v115 & 1) == 0)
      {
LABEL_82:
        p_aBlock[(v57 >> 6) + 8] |= 1 << v57;
        v118 = 8 * v57;
        *(_QWORD *)(p_aBlock[6] + v118) = v108;
        *(_QWORD *)(p_aBlock[7] + v118) = v98;
        v119 = p_aBlock[2];
        v83 = __OFADD__(v119, 1);
        v120 = v119 + 1;
        if (v83)
          goto LABEL_177;
        p_aBlock[2] = v120;
LABEL_91:
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
    }
    *(_QWORD *)(p_aBlock[7] + 8 * v57) = v98;
    goto LABEL_91;
  }
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  sub_24A01F48C();
  __break(1u);
LABEL_191:

  swift_unexpectedError();
  __break(1u);
LABEL_192:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t VUStreamingGallery.RecognitionResult.label.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

float VUStreamingGallery.RecognitionResult.score.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

uint64_t VUStreamingGallery.Recognition.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_249F9905C(v1, a1, &qword_2578FFA68);
}

float VUStreamingGallery.Recognition.score.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VUStreamingGallery.Recognition(0) + 20));
}

unint64_t sub_249FAC114(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  int EnumCaseMultiPayload;
  BOOL v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v35 = a2;
  v3 = type metadata accessor for VUStreamingGallery.Label(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v32 = (_QWORD *)((char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VUStreamingGallery.Recognition(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_retain();
  v14 = v36;
  v15 = sub_249FAC828(v13, a1, v35, 5, 0);
  swift_release();
  if (!v14)
  {
    v36 = v9;
    if (v15)
    {
      v31[1] = 0;
      v17 = *(_QWORD *)(v15 + 16);
      if (v17)
      {
        v37 = MEMORY[0x24BEE4AF8];
        sub_249F8CCC0(0, v17, 0);
        v18 = v10;
        v19 = *(unsigned __int8 *)(v10 + 80);
        v31[0] = v15;
        v20 = v15 + ((v19 + 32) & ~v19);
        v33 = *(_QWORD *)(v18 + 72);
        v34 = v4;
        v35 = v3;
        do
        {
          sub_249F9896C(v20, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Recognition);
          sub_249F9905C((uint64_t)v12, (uint64_t)v8, &qword_2578FFA68);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
          {
            sub_249F990A0((uint64_t)v8, &qword_2578FFA68);
            v21 = 0;
            v22 = 1;
            v23 = v36;
          }
          else
          {
            v24 = v32;
            sub_249F9896C((uint64_t)v8, (uint64_t)v32, type metadata accessor for VUStreamingGallery.Label);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v26 = EnumCaseMultiPayload == 1;
            v23 = v36;
            if (EnumCaseMultiPayload == 1)
            {
              sub_249F989C0((uint64_t)v24, type metadata accessor for VUStreamingGallery.Label);
              v21 = 0;
            }
            else
            {
              v21 = *v24;
            }
            sub_249F989C0((uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
            v22 = v26;
          }
          v27 = *(_DWORD *)&v12[*(int *)(v23 + 20)];
          sub_249F989C0((uint64_t)v12, type metadata accessor for VUStreamingGallery.Recognition);
          v15 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249F8CCC0(0, *(_QWORD *)(v15 + 16) + 1, 1);
            v15 = v37;
          }
          v29 = *(_QWORD *)(v15 + 16);
          v28 = *(_QWORD *)(v15 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_249F8CCC0(v28 > 1, v29 + 1, 1);
            v15 = v37;
          }
          *(_QWORD *)(v15 + 16) = v29 + 1;
          v30 = v15 + 16 * v29;
          *(_QWORD *)(v30 + 32) = v21;
          *(_BYTE *)(v30 + 40) = v22;
          *(_DWORD *)(v30 + 44) = v27;
          v4 = v34;
          v20 += v33;
          --v17;
          v3 = v35;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x24BEE4AF8];
      }
    }
  }
  return v15;
}

uint64_t sub_249FAC44C(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  unint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v48 = (char *)a3;
  v44 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for VUStreamingGallery.Label(0);
  v46 = *(_QWORD *)(v49 - 8);
  v7 = MEMORY[0x24BDAC7A8](v49);
  v45 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v41 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v41 - v12;
  v14 = type metadata accessor for VUStreamingGallery.Recognition(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (_QWORD *)((char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v41 - v19;
  v21 = swift_retain();
  v22 = sub_249FAC828(v21, v44, v47, (uint64_t)v48, 0);
  result = swift_release();
  if (!v3)
  {
    v44 = v18;
    v48 = v11;
    v50 = MEMORY[0x24BEE4B08];
    if (v22)
    {
      v24 = *(_QWORD *)(v22 + 16);
      if (v24)
      {
        v41[0] = v22;
        v41[1] = 0;
        v25 = v15;
        v42 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v26 = v22 + v42;
        v27 = *(_QWORD *)(v25 + 72);
        v47 = MEMORY[0x24BEE4AF8];
        v28 = type metadata accessor for VUStreamingGallery.Recognition;
        v29 = v46;
        v30 = (uint64_t)v13;
        v43 = v6;
        do
        {
          sub_249F9896C(v26, (uint64_t)v20, v28);
          sub_249F9905C((uint64_t)v20, (uint64_t)v6, &qword_2578FFA68);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v6, 1, v49) == 1)
          {
            sub_249F989C0((uint64_t)v20, v28);
            sub_249F990A0((uint64_t)v6, &qword_2578FFA68);
          }
          else
          {
            v31 = v30;
            v32 = (uint64_t)v6;
            v33 = v28;
            v34 = v27;
            sub_249F98928(v32, v30, type metadata accessor for VUStreamingGallery.Label);
            v35 = v45;
            sub_249F9896C(v30, v45, type metadata accessor for VUStreamingGallery.Label);
            v36 = sub_249F8C068((uint64_t)v48, v35);
            sub_249F989C0((uint64_t)v48, type metadata accessor for VUStreamingGallery.Label);
            if ((v36 & 1) != 0)
            {
              sub_249F9896C((uint64_t)v20, (uint64_t)v44, v33);
              v27 = v34;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v37 = v47;
              else
                v37 = sub_249F89DA0(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
              v39 = *(_QWORD *)(v37 + 16);
              v38 = *(_QWORD *)(v37 + 24);
              v28 = v33;
              if (v39 >= v38 >> 1)
                v37 = sub_249F89DA0(v38 > 1, v39 + 1, 1, v37);
              v40 = v42;
              v6 = v43;
              *(_QWORD *)(v37 + 16) = v39 + 1;
              v47 = v37;
              sub_249F98928((uint64_t)v44, v37 + v40 + v39 * v27, v28);
              sub_249F989C0(v31, type metadata accessor for VUStreamingGallery.Label);
              sub_249F989C0((uint64_t)v20, v28);
              v29 = v46;
              v30 = v31;
            }
            else
            {
              sub_249F989C0(v30, type metadata accessor for VUStreamingGallery.Label);
              sub_249F989C0((uint64_t)v20, v33);
              v29 = v46;
              v27 = v34;
              v28 = v33;
              v6 = v43;
            }
          }
          v26 += v27;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v47 = MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      return v47;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_249FAC828(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  NSObject *v35;
  os_signpost_type_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  os_signpost_type_t v45;
  char *v46;
  uint8_t *v47;
  void (*v48)(char *, char *, uint64_t);
  void (*v49)(char *, uint64_t);
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  char *v61;
  float v62;
  uint64_t v63;
  id v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  void *v68;
  unint64_t v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  _BYTE *v81;
  float v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _DWORD *v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  NSObject *v133;
  char *v134;
  os_signpost_type_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  const char *v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint8_t *v144;
  os_signpost_id_t v145;
  void (*v146)(char *, uint64_t);
  unint64_t v148;
  unint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;

  v6 = v5;
  LODWORD(v166) = a5;
  v158 = a3;
  v174 = a2;
  v9 = sub_24A01ED54();
  v156 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v155 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VUStreamingGallery.Recognition(0);
  v172 = *(_QWORD *)(v11 - 8);
  v173 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v169 = (uint64_t)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v170 = (char *)&v148 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v167 = (uint64_t)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v171 = (uint64_t)&v148 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA288);
  MEMORY[0x24BDAC7A8](v19);
  v157 = (uint64_t)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v168 = (char *)&v148 - v25;
  v26 = sub_24A01ED24();
  v165 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v160 = (char *)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v148 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v148 - v32;
  if (!sub_249FCBC58(0, 0, 1))
    return 0;
  v162 = v31;
  v151 = v9;
  v34 = v5 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED30();
  sub_24A01ED0C();
  v154 = v34;
  v35 = sub_24A01ED30();
  v36 = sub_24A01F174();
  v37 = sub_24A01F1E0();
  v163 = v26;
  v153 = a1;
  v152 = a4;
  if ((v37 & 1) != 0)
  {
    v38 = v24;
    v39 = v165;
    v40 = v6;
    v41 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
    v42 = v162;
    v41(v162, v33, v26);
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    v44 = sub_24A01ED18();
    v45 = v36;
    v46 = v42;
    _os_signpost_emit_with_name_impl(&dword_249F70000, v35, v45, v44, "KNNSearch", "", v43, 2u);
    v47 = v43;
    v26 = v163;
    MEMORY[0x24BD07950](v47, -1, -1);

    v48 = v41;
    v6 = v40;
    v49 = *(void (**)(char *, uint64_t))(v39 + 8);
    v24 = v38;
    v49(v42, v26);
  }
  else
  {

    v48 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
    v46 = v162;
  }
  v48(v46, v33, v26);
  sub_24A01ED78();
  swift_allocObject();
  v161 = sub_24A01ED6C();
  objc_opt_self();
  v50 = v174;
  v51 = swift_dynamicCastObjCClass();
  if (v51)
  {
    v52 = (void *)v51;
    v150 = v48;
    v159 = v33;
    v53 = (uint64_t *)v50;
    v54 = objc_msgSend(v52, sel_faceTorsoprint);
    if (!v54
      || (v55 = v54, v56 = objc_msgSend(v54, sel_faceprint), v55, !v56))
    {
      v56 = objc_msgSend(v52, sel_faceprint);
    }
    v57 = objc_msgSend(v52, sel_faceTorsoprint);
    v58 = (uint64_t)v168;
    if (v57
      && (v59 = v57, v60 = objc_msgSend(v57, sel_torsoprint), v59, v60))
    {
      if ((v166 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      v60 = objc_msgSend(v52, sel_torsoprint);
      if ((v166 & 1) != 0)
      {
LABEL_13:
        if (v56)
        {
          objc_msgSend(v56, sel_confidence);
          v61 = v159;
          if (v62 < 0.6)
          {

            v56 = 0;
          }
        }
        else
        {
          v61 = v159;
        }
        if (v60)
        {
          objc_msgSend(v60, sel_confidence);
          if (v82 < 0.6)
          {

            v60 = 0;
          }
        }
        v63 = v163;
        if (!v56)
          goto LABEL_35;
        goto LABEL_18;
      }
    }
    v63 = v163;
    v61 = v159;
    if (!v56)
    {
LABEL_35:
      if (!v60)
      {
        (*(void (**)(char *, uint64_t))(v165 + 8))(v61, v63);
        swift_release();

        return 0;
      }
      *(_QWORD *)&v166 = 0;
      v148 = 0xF000000000000000;
LABEL_37:
      v83 = objc_msgSend(v60, sel_descriptorData, v148);
      v174 = v53;
      if (v83)
      {
        v84 = v83;
        v85 = sub_24A01EAFC();
        v87 = v86;

LABEL_40:
        v88 = v157;
        sub_249F9905C(v158, v157, &qword_2544CA288);
        v89 = type metadata accessor for VUGallery.Context(0);
        v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89);
        v149 = v6;
        if (v90 == 1)
        {
          sub_249F990A0(v88, &qword_2544CA288);
          v91 = sub_24A01EBA4();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v58, 1, 1, v91);
        }
        else
        {
          sub_249F9905C(v88, v58, &qword_2544CAD70);
          sub_249F989C0(v88, type metadata accessor for VUGallery.Context);
        }
        v92 = v58;
        v93 = v166;
        v94 = v148;
        v95 = sub_249FFC588(2u, v166, v148, 0, 1, v85, v87, 0, 1);

        sub_249F92438(v85, v87);
        sub_249F92438(v93, v94);
        sub_249F990A0(v92, &qword_2544CAD70);

        v96 = v170;
        v97 = v149;
LABEL_48:
        v99 = *(_QWORD *)(v95 + 16);
        v158 = v95;
        if (v99)
        {
          v168 = (char *)(v97 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger);
          v174 = (uint64_t *)(v97 + 40);
          swift_beginAccess();
          v100 = (_DWORD *)(v95 + 40);
          v6 = MEMORY[0x24BEE4AF8];
          *(_QWORD *)&v101 = 134217984;
          v166 = v101;
          do
          {
            v103 = *((_QWORD *)v100 - 1);
            v104 = *v100;
            v105 = *v174;
            if (*(_QWORD *)(*v174 + 16) && (v106 = sub_249F8B27C(*((_QWORD *)v100 - 1)), (v107 & 1) != 0))
            {
              v108 = v106;
              v109 = *(_QWORD *)(v105 + 56);
              v110 = type metadata accessor for VUStreamingGallery.Label(0);
              v111 = *(_QWORD *)(v110 - 8);
              v112 = *(_QWORD *)(v111 + 72);
              v113 = v109 + v112 * v108;
              v114 = v171;
              sub_249F9896C(v113, v171, type metadata accessor for VUStreamingGallery.Label);
              v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
              v116 = 1;
              v115(v114, 0, 1, v110);
              sub_249F990A0(v114, &qword_2578FFA68);
              v117 = *v174;
              if (*(_QWORD *)(*v174 + 16))
              {
                v118 = sub_249F8B27C(v103);
                if ((v119 & 1) != 0)
                {
                  sub_249F9896C(*(_QWORD *)(v117 + 56) + v118 * v112, v167, type metadata accessor for VUStreamingGallery.Label);
                  v116 = 0;
                }
              }
              v96 = v170;
              v120 = v167;
              v115(v167, v116, 1, v110);
              v121 = v169;
              sub_249F98C10(v120, v169, &qword_2578FFA68);
              *(_DWORD *)(v121 + *(int *)(v173 + 20)) = v104;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v6 = sub_249F89DA0(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
              v123 = *(_QWORD *)(v6 + 16);
              v122 = *(_QWORD *)(v6 + 24);
              v124 = v123 + 1;
              if (v123 >= v122 >> 1)
                v6 = sub_249F89DA0(v122 > 1, v123 + 1, 1, v6);
              v102 = v169;
            }
            else
            {
              v125 = type metadata accessor for VUStreamingGallery.Label(0);
              v126 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56);
              v127 = v171;
              v126(v171, 1, 1, v125);
              sub_249F990A0(v127, &qword_2578FFA68);
              v128 = sub_24A01ED90();
              v129 = sub_24A01F0E4();
              if (os_log_type_enabled(v128, v129))
              {
                v130 = swift_slowAlloc();
                *(_DWORD *)v130 = v166;
                *(_QWORD *)(v130 + 4) = v103;
                _os_log_impl(&dword_249F70000, v128, v129, "(rdar://109365063) identifier %ld not in observationTrackMap", (uint8_t *)v130, 0xCu);
                v131 = v130;
                v96 = v170;
                MEMORY[0x24BD07950](v131, -1, -1);
              }

              v126((uint64_t)v96, 1, 1, v125);
              *(_DWORD *)&v96[*(int *)(v173 + 20)] = v104;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v6 = sub_249F89DA0(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
              v123 = *(_QWORD *)(v6 + 16);
              v132 = *(_QWORD *)(v6 + 24);
              v124 = v123 + 1;
              if (v123 >= v132 >> 1)
                v6 = sub_249F89DA0(v132 > 1, v123 + 1, 1, v6);
              v102 = (uint64_t)v96;
            }
            v100 += 4;
            *(_QWORD *)(v6 + 16) = v124;
            sub_249F98928(v102, v6+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(_QWORD *)(v172 + 72) * v123, type metadata accessor for VUStreamingGallery.Recognition);
            --v99;
          }
          while (v99);
        }
        else
        {
          v6 = MEMORY[0x24BEE4AF8];
        }
        swift_bridgeObjectRelease();
        v133 = sub_24A01ED30();
        v134 = v160;
        sub_24A01ED60();
        v135 = sub_24A01F168();
        if ((sub_24A01F1E0() & 1) != 0)
        {
          swift_retain();
          v136 = v155;
          sub_24A01ED84();
          swift_release();
          v137 = v156;
          v138 = v151;
          if ((*(unsigned int (**)(char *, uint64_t))(v156 + 88))(v136, v151) == *MEMORY[0x24BEE7810])
          {
            v139 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
            v139 = "";
          }
          v142 = v162;
          v143 = v163;
          v150(v162, v134, v163);
          v144 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v144 = 0;
          v145 = sub_24A01ED18();
          _os_signpost_emit_with_name_impl(&dword_249F70000, v133, v135, v145, "KNNSearch", v139, v144, 2u);
          MEMORY[0x24BD07950](v144, -1, -1);

          v146 = *(void (**)(char *, uint64_t))(v165 + 8);
          v146(v134, v143);
          v146(v159, v143);
          swift_release();
          v146(v142, v143);
        }
        else
        {

          v140 = *(void (**)(char *, uint64_t))(v165 + 8);
          v141 = v163;
          v140(v134, v163);
          v140(v159, v141);
          swift_release();
        }
        return v6;
      }
LABEL_39:
      v85 = 0;
      v87 = 0xF000000000000000;
      goto LABEL_40;
    }
LABEL_18:
    v64 = objc_msgSend(v56, sel_descriptorData);
    if (v64)
    {
      v65 = v64;
      *(_QWORD *)&v166 = sub_24A01EAFC();
      v148 = v66;

      if (v60)
        goto LABEL_37;
    }
    else
    {
      *(_QWORD *)&v166 = 0;
      v148 = 0xF000000000000000;
      if (v60)
        goto LABEL_37;
    }
    v174 = v53;
    goto LABEL_39;
  }
  objc_opt_self();
  v67 = swift_dynamicCastObjCClass();
  if (v67)
  {
    v68 = (void *)v67;
    v69 = v6;
    v150 = v48;
    v159 = v33;
    v70 = v50;
    v71 = objc_msgSend(v68, sel_animalprint);
    if (!v71)
    {
      (*(void (**)(char *, uint64_t))(v165 + 8))(v159, v163);
      swift_release();

      return 0;
    }
    v72 = v71;
    v73 = objc_msgSend(v71, sel_descriptorData);
    if (v73)
    {
      v74 = v73;
      v75 = sub_24A01EAFC();
      v77 = v76;

    }
    else
    {
      v75 = 0;
      v77 = 0xF000000000000000;
    }
    v98 = sub_24A01EBA4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v24, 1, 1, v98);
    v95 = sub_249FFC588(0x3Fu, v75, v77, 0, 1, 0, 0xF000000000000000, 0, 1);

    sub_249F92438(v75, v77);
    sub_249F990A0((uint64_t)v24, &qword_2544CAD70);
    v96 = v170;
    v97 = v69;
    goto LABEL_48;
  }
  v78 = sub_24A01ED90();
  v79 = sub_24A01F0E4();
  if (os_log_type_enabled(v78, v79))
  {
    v6 = swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_249F70000, v78, v79, "Unable to recognize observation: observation must be a valid VNFaceObservation or VNAnimalObservation", (uint8_t *)v6, 2u);
    MEMORY[0x24BD07950](v6, -1, -1);
  }

  sub_249F74AF4();
  v80 = swift_allocError();
  *v81 = 1;
  v164 = v80;
  swift_willThrow();
  swift_release();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v33, v163);
  return v6;
}

uint64_t sub_249FAD690@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_signpost_type_t v52;
  char v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  uint8_t *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  char isUniquelyReferenced_nonNull_native;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  NSObject *v132;
  char *v133;
  uint64_t v134;
  os_signpost_type_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  const char *v142;
  uint64_t v143;
  int EnumCaseMultiPayload;
  _QWORD *v145;
  NSObject *v146;
  char *v147;
  os_signpost_type_t v148;
  char v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  const char *v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  NSObject *v156;
  int v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  const char *v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  void (*v166)(char *, uint64_t);
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint8_t *v171;
  os_signpost_id_t v172;
  void (*v173)(char *, uint64_t);
  char *v174;
  char *v175;
  uint8_t *v176;
  os_signpost_id_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint8_t *v181;
  os_signpost_id_t v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  _QWORD *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  const char *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;

  v8 = v6;
  LODWORD(v202) = a5;
  v203 = a2;
  v204 = a4;
  v201 = a1;
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA88);
  v11 = MEMORY[0x24BDAC7A8](v214);
  v213 = (uint64_t)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v212 = (uint64_t)&v184 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v211 = (uint64_t)&v184 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v210 = (uint64_t)&v184 - v17;
  v197 = sub_24A01ED54();
  v199 = *(_QWORD *)(v197 - 8);
  v18 = MEMORY[0x24BDAC7A8](v197);
  v193 = (char *)&v184 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v192 = (char *)&v184 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v191 = (char *)&v184 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for VUStreamingGallery.Label(0);
  v217 = *(_QWORD *)(v208 - 8);
  v26 = MEMORY[0x24BDAC7A8](v208);
  v216 = (uint64_t)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v194 = (uint64_t)&v184 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v196 = (uint64_t *)((char *)&v184 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v215 = (char *)&v184 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v207 = (uint64_t)&v184 - v34;
  v206 = sub_24A01ED24();
  v35 = *(_QWORD *)(v206 - 8);
  v36 = MEMORY[0x24BDAC7A8](v206);
  v198 = (char *)&v184 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v200 = (char *)&v184 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v195 = (char *)&v184 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v205 = (char *)&v184 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v184 - v44;
  swift_beginAccess();
  v46 = swift_bridgeObjectRetain();
  v47 = sub_249FA4F54(v46);
  v48 = sub_24A007994(a3, v47);
  swift_bridgeObjectRelease();
  if ((v48 & 1) == 0)
  {
    v62 = a3;
    return sub_249F9896C(v62, a6, type metadata accessor for VUStreamingGallery.Label);
  }
  v189 = a3;
  swift_retain();
  v49 = sub_249FCBC58(0, 0, 1);
  swift_release();
  if (!v49)
  {
    v62 = v189;
    return sub_249F9896C(v62, a6, type metadata accessor for VUStreamingGallery.Label);
  }
  v50 = v8 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED30();
  sub_24A01ED0C();
  v186 = v50;
  v51 = sub_24A01ED30();
  v52 = sub_24A01F174();
  v53 = sub_24A01F1E0();
  v190 = a6;
  v209 = v45;
  v188 = v35;
  if ((v53 & 1) != 0)
  {
    v187 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v54 = v205;
    v55 = v45;
    v56 = v35;
    v57 = v206;
    v187(v205, v55, v206);
    v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v58 = 0;
    v59 = sub_24A01ED18();
    _os_signpost_emit_with_name_impl(&dword_249F70000, v51, v52, v59, "verifyLabel", "", v58, 2u);
    v60 = v58;
    a6 = v190;
    MEMORY[0x24BD07950](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v57);
    v61 = v187;
    v187(v54, v209, v57);
  }
  else
  {

    v61 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v57 = v206;
    v61(v205, v209, v206);
  }
  sub_24A01ED78();
  swift_allocObject();
  v64 = sub_24A01ED6C();
  v65 = swift_retain();
  v66 = sub_249FAC828(v65, v201, v203, v204, v202 & 1);
  if (v7)
  {
    (*(void (**)(char *, uint64_t))(v188 + 8))(v209, v57);
    swift_release();
    return swift_release();
  }
  v67 = v66;
  v187 = v61;
  v202 = 0;
  swift_release();
  if (!v67)
  {
    v132 = sub_24A01ED30();
    v133 = v198;
    sub_24A01ED60();
    v134 = v64;
    v135 = sub_24A01F168();
    v136 = sub_24A01F1E0();
    v137 = v209;
    v138 = v188;
    v139 = v199;
    if ((v136 & 1) != 0)
    {
      swift_retain();
      v140 = v193;
      sub_24A01ED84();
      v185 = v134;
      swift_release();
      v141 = v197;
      if ((*(unsigned int (**)(char *, uint64_t))(v139 + 88))(v140, v197) == *MEMORY[0x24BEE7810])
      {
        v142 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v141);
        v142 = "";
      }
      v168 = v205;
      v169 = v206;
      v170 = v198;
      v187(v205, v198, v206);
      v171 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v171 = 0;
      v172 = sub_24A01ED18();
      _os_signpost_emit_with_name_impl(&dword_249F70000, v132, v135, v172, "verifyLabel", v142, v171, 2u);
      MEMORY[0x24BD07950](v171, -1, -1);

      v173 = *(void (**)(char *, uint64_t))(v138 + 8);
      v173(v170, v169);
      v173(v209, v169);
      swift_release();
      v173(v168, v169);
    }
    else
    {

      v154 = *(void (**)(char *, uint64_t))(v138 + 8);
      v155 = v206;
      v154(v133, v206);
      v154(v137, v155);
      swift_release();
    }
    v62 = v189;
    return sub_249F9896C(v62, a6, type metadata accessor for VUStreamingGallery.Label);
  }
  v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v69 = v67;
  v70 = (_QWORD *)sub_249F760BC(MEMORY[0x24BEE4AF8]);
  v71 = *(_QWORD *)(v69 + 16);
  v185 = v64;
  if (v71)
  {
    v72 = type metadata accessor for VUStreamingGallery.Recognition(0);
    v73 = *(_QWORD *)(v72 - 8);
    v74 = v69 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    v75 = *(_QWORD *)(v73 + 72);
    v203 = v69;
    swift_bridgeObjectRetain();
    v76 = &qword_2578FFA68;
    v204 = v72;
    do
    {
      if (*(float *)(v74 + *(int *)(v72 + 20)) > 0.85)
      {
        sub_249F9905C(v74, (uint64_t)v25, v76);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48))(v25, 1, v208) == 1)
        {
          sub_249F990A0((uint64_t)v25, v76);
        }
        else
        {
          v77 = v76;
          v78 = v207;
          sub_249F98928((uint64_t)v25, v207, type metadata accessor for VUStreamingGallery.Label);
          v79 = v78;
          v80 = v215;
          sub_249F9896C(v79, (uint64_t)v215, type metadata accessor for VUStreamingGallery.Label);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v218 = v70;
          v83 = sub_249F8B2AC((uint64_t)v80);
          v84 = v70[2];
          v85 = (v82 & 1) == 0;
          v86 = v84 + v85;
          if (__OFADD__(v84, v85))
            goto LABEL_90;
          v87 = v82;
          if (v70[3] >= v86)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_249FC2DC0();
          }
          else
          {
            sub_249FBB604(v86, isUniquelyReferenced_nonNull_native);
            v88 = sub_249F8B2AC((uint64_t)v215);
            if ((v87 & 1) != (v89 & 1))
              goto LABEL_94;
            v83 = v88;
          }
          a6 = v190;
          v70 = v218;
          swift_bridgeObjectRelease();
          if ((v87 & 1) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v70[(v83 >> 6) + 8] |= 1 << v83;
            v90 = v70[6] + *(_QWORD *)(v217 + 72) * v83;
            swift_bridgeObjectRetain();
            sub_249F9896C((uint64_t)v215, v90, type metadata accessor for VUStreamingGallery.Label);
            *(_QWORD *)(v70[7] + 8 * v83) = 0;
            v91 = v70[2];
            v92 = __OFADD__(v91, 1);
            v93 = v91 + 1;
            if (v92)
              goto LABEL_92;
            v70[2] = v93;
          }
          v94 = v70[7];
          swift_bridgeObjectRelease();
          v95 = *(_QWORD *)(v94 + 8 * v83);
          v92 = __OFADD__(v95, 1);
          v96 = v95 + 1;
          if (v92)
            goto LABEL_91;
          *(_QWORD *)(v94 + 8 * v83) = v96;
          sub_249F989C0((uint64_t)v215, type metadata accessor for VUStreamingGallery.Label);
          sub_249F989C0(v207, type metadata accessor for VUStreamingGallery.Label);
          v76 = v77;
          v72 = v204;
        }
      }
      v74 += v75;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease();
    v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v97 = v189;
  v98 = v209;
  v99 = v200;
  if (!v70[2])
  {
    swift_bridgeObjectRelease();
    v143 = v194;
    sub_249F9896C(v97, v194, type metadata accessor for VUStreamingGallery.Label);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v145 = v196;
    sub_249FA5944(v97, v196);
    if (EnumCaseMultiPayload == 1)
      sub_249F989C0(v143, type metadata accessor for VUStreamingGallery.Label);
    v146 = sub_24A01ED30();
    v147 = v195;
    sub_24A01ED60();
    v148 = sub_24A01F168();
    v149 = sub_24A01F1E0();
    v150 = v199;
    if ((v149 & 1) != 0)
    {
      swift_retain();
      v151 = v191;
      sub_24A01ED84();
      swift_release();
      v152 = v197;
      if ((*(unsigned int (**)(char *, uint64_t))(v150 + 88))(v151, v197) == *MEMORY[0x24BEE7810])
      {
        v153 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);
        v153 = "";
      }
      v178 = v195;
      v179 = v205;
      v180 = v206;
      v187(v205, v195, v206);
      v181 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v181 = 0;
      v182 = sub_24A01ED18();
      _os_signpost_emit_with_name_impl(&dword_249F70000, v146, v148, v182, "verifyLabel", v153, v181, 2u);
      MEMORY[0x24BD07950](v181, -1, -1);

      v183 = *(void (**)(char *, uint64_t))(v188 + 8);
      v183(v178, v180);
      v183(v98, v180);
      swift_release();
      v183(v179, v180);
      v145 = v196;
    }
    else
    {

      v166 = *(void (**)(char *, uint64_t))(v188 + 8);
      v167 = v206;
      v166(v147, v206);
      v166(v98, v167);
      swift_release();
    }
    return sub_249F98928((uint64_t)v145, a6, type metadata accessor for VUStreamingGallery.Label);
  }
  v100 = swift_bridgeObjectRetain();
  v101 = sub_249FA546C(v100);
  v103 = v102;
  swift_bridgeObjectRelease();
  v104 = v202;
  v105 = sub_249FBC7B4((uint64_t)v70, v101, v103 & 1);
  v202 = v104;
  swift_bridgeObjectRelease();
  v106 = *(_QWORD *)(v105 + 16);
  if (!v106)
  {
    swift_release();
    v124 = MEMORY[0x24BEE4AF8];
LABEL_67:
    v156 = sub_24A01ED30();
    sub_24A01ED60();
    v157 = sub_24A01F168();
    if ((sub_24A01F1E0() & 1) != 0)
    {
      swift_retain();
      v158 = v192;
      sub_24A01ED84();
      swift_release();
      v159 = v199;
      v160 = v197;
      v161 = (*(uint64_t (**)(char *, uint64_t))(v199 + 88))(v158, v197);
      v162 = *MEMORY[0x24BEE7810];
      LODWORD(v216) = v157;
      if (v161 == v162)
      {
        v163 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v160);
        v163 = "";
      }
      v215 = v163;
      v174 = v205;
      v165 = v206;
      v187(v205, v99, v206);
      v175 = v99;
      v176 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v176 = 0;
      v177 = sub_24A01ED18();
      _os_signpost_emit_with_name_impl(&dword_249F70000, v156, (os_signpost_type_t)v216, v177, "verifyLabel", v215, v176, 2u);
      MEMORY[0x24BD07950](v176, -1, -1);

      v164 = *(void (**)(char *, uint64_t))(v188 + 8);
      v164(v175, v165);
      v164(v174, v165);
      v97 = v189;
    }
    else
    {

      v164 = *(void (**)(char *, uint64_t))(v188 + 8);
      v165 = v206;
      v164(v99, v206);
    }
    if ((sub_249FA3B44(v97, v124) & 1) == 0)
    {
      if (!*(_QWORD *)(v124 + 16))
        goto LABEL_93;
      sub_249F9896C(v124 + ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80)), a6, type metadata accessor for VUStreamingGallery.Label);
      swift_release();
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(char *, uint64_t))v164)(v98, v165);
    }
    v164(v98, v165);
    swift_release();
    swift_bridgeObjectRelease();
    v62 = v97;
    return sub_249F9896C(v62, a6, type metadata accessor for VUStreamingGallery.Label);
  }
  v218 = v68;
  v208 = v105;
  sub_249F8CC70(0, v106, 0);
  v107 = v208;
  v109 = sub_249F9B4B0(v208);
  v110 = 0;
  v111 = v107 + 64;
  v112 = *(_BYTE *)(v107 + 32);
  v201 = (uint64_t *)(v107 + 88);
  v203 = v106;
  v204 = v108;
  v207 = v107 + 64;
  while ((v109 & 0x8000000000000000) == 0 && v109 < 1 << v112)
  {
    v115 = (unint64_t)v109 >> 6;
    if ((*(_QWORD *)(v111 + 8 * ((unint64_t)v109 >> 6)) & (1 << v109)) == 0)
      goto LABEL_85;
    if (*(_DWORD *)(v107 + 36) != (_DWORD)v108)
      goto LABEL_86;
    v116 = v214;
    v117 = *(int *)(v214 + 48);
    v118 = *(_QWORD *)(v107 + 48);
    v215 = *(const char **)(v217 + 72);
    v119 = v210;
    sub_249F9896C(v118 + (_QWORD)v215 * v109, v210, type metadata accessor for VUStreamingGallery.Label);
    v120 = *(_QWORD *)(*(_QWORD *)(v107 + 56) + 8 * v109);
    *(_QWORD *)(v119 + v117) = v120;
    v121 = v211;
    sub_249F9896C(v119, v211, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(v121 + *(int *)(v116 + 48)) = v120;
    v122 = v212;
    sub_249F98C10(v121, v212, &qword_2578FFA88);
    sub_249F990A0(v119, &qword_2578FFA88);
    v123 = v213;
    sub_249F9896C(v122, v213, type metadata accessor for VUStreamingGallery.Label);
    sub_249F98928(v123, v216, type metadata accessor for VUStreamingGallery.Label);
    sub_249F990A0(v122, &qword_2578FFA88);
    v124 = (uint64_t)v218;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_249F8CC70(0, *(_QWORD *)(v124 + 16) + 1, 1);
      v124 = (uint64_t)v218;
    }
    v126 = *(_QWORD *)(v124 + 16);
    v125 = *(_QWORD *)(v124 + 24);
    v107 = v208;
    if (v126 >= v125 >> 1)
    {
      sub_249F8CC70(v125 > 1, v126 + 1, 1);
      v107 = v208;
      v124 = (uint64_t)v218;
    }
    *(_QWORD *)(v124 + 16) = v126 + 1;
    sub_249F98928(v216, v124+ ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80))+ v126 * (_QWORD)v215, type metadata accessor for VUStreamingGallery.Label);
    v112 = *(_BYTE *)(v107 + 32);
    v113 = 1 << v112;
    if (v109 >= 1 << v112)
      goto LABEL_87;
    v111 = v207;
    v127 = *(_QWORD *)(v207 + 8 * v115);
    if ((v127 & (1 << v109)) == 0)
      goto LABEL_88;
    LODWORD(v108) = v204;
    if (*(_DWORD *)(v107 + 36) != (_DWORD)v204)
      goto LABEL_89;
    v128 = v127 & (-2 << (v109 & 0x3F));
    if (v128)
    {
      v113 = __clz(__rbit64(v128)) | v109 & 0xFFFFFFFFFFFFFFC0;
      v98 = v209;
      v114 = v203;
    }
    else
    {
      v129 = v115 + 1;
      v130 = (v113 + 63) >> 6;
      v98 = v209;
      v114 = v203;
      if (v115 + 1 < v130)
      {
        v131 = *(_QWORD *)(v207 + 8 * v129);
        if (!v131)
        {
          v129 = v115 + 2;
          if (v115 + 2 >= v130)
            goto LABEL_35;
          v131 = *(_QWORD *)(v207 + 8 * v129);
          if (!v131)
          {
            while (v130 - 3 != v115)
            {
              v131 = v201[v115++];
              if (v131)
              {
                v129 = v115 + 2;
                goto LABEL_50;
              }
            }
            goto LABEL_35;
          }
        }
LABEL_50:
        v113 = __clz(__rbit64(v131)) + (v129 << 6);
      }
    }
LABEL_35:
    ++v110;
    v109 = v113;
    if (v110 == v114)
    {
      swift_release();
      a6 = v190;
      v97 = v189;
      v99 = v200;
      goto LABEL_67;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FAE81C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  char *v66;
  char *v67;
  NSObject *v68;
  os_signpost_type_t v69;
  char v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint8_t *v74;
  os_signpost_id_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD **v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  _QWORD *v97;
  unint64_t isEscapingClosureAtFileLocation;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  void (*v104)(_QWORD *@<X8>);
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  int64_t v110;
  unint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char isUniquelyReferenced_nonNull_native;
  char v118;
  unint64_t v119;
  uint64_t v120;
  _BOOL8 v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  unint64_t v136;
  uint64_t v137;
  _BOOL8 v138;
  uint64_t v139;
  char v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(_QWORD, _QWORD, _QWORD, _QWORD);
  double v178;
  unint64_t v179;
  char v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  char v186;
  unint64_t v187;
  uint64_t v188;
  _BOOL8 v189;
  uint64_t v190;
  char v191;
  unint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char *v201;
  uint64_t v202;
  unint64_t v203;
  int64_t v204;
  unint64_t v205;
  int64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  int64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int64_t v217;
  char v218;
  unint64_t v219;
  _QWORD *v220;
  unint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char v244;
  char v245;
  unint64_t v246;
  _QWORD *v247;
  _BOOL8 v248;
  uint64_t v249;
  char v250;
  unint64_t v251;
  char v252;
  _QWORD *v253;
  _QWORD *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  char v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  int64_t v274;
  char v275;
  unint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  unint64_t v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD **v299;
  uint64_t v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD **v304;
  unint64_t v305;
  char v306;
  unint64_t v307;
  char v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t (*v314)(uint64_t, uint64_t, uint64_t);
  int v315;
  _QWORD *v316;
  unint64_t v317;
  unint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  char v321;
  char v322;
  unint64_t v323;
  uint64_t v324;
  _BOOL8 v325;
  uint64_t v326;
  char v327;
  unint64_t v328;
  char v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  _QWORD *v336;
  uint64_t v337;
  char v338;
  uint64_t v339;
  char v340;
  uint64_t v341;
  _QWORD *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unint64_t v369;
  uint64_t v370;
  _QWORD *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  uint64_t v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  uint64_t v383;
  uint64_t *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  float v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  float v392;
  uint64_t v393;
  float v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  int64_t v402;
  unint64_t v403;
  unint64_t v404;
  unint64_t v405;
  int64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  char v412;
  uint64_t v413;
  char v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  os_log_type_t v426;
  uint64_t v427;
  _QWORD *v428;
  const char *v429;
  void (*v430)(uint64_t, uint64_t);
  uint64_t v431;
  uint64_t v432;
  _QWORD *v433;
  os_signpost_id_t v434;
  uint64_t v435[2];
  void (*v436)(_QWORD *@<X8>);
  uint64_t v437;
  char *v438;
  char *v439;
  char *v440;
  unint64_t v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  char *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  _QWORD *v455;
  uint64_t v456;
  int64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  _QWORD *v466;
  uint64_t v467;
  uint64_t *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  _QWORD *v474;
  _QWORD *v475;
  uint64_t *v476;
  uint64_t v477;
  char *v478;
  _QWORD *v479;
  uint64_t v480;
  char *v481;
  uint64_t v482;
  _QWORD *v483;
  int64_t v484;
  char *v485;
  char *v486;
  uint64_t v487;
  char *v488;
  uint64_t v489;
  __int128 v490;
  _QWORD *v491;
  int64_t v492;
  uint64_t v493;
  uint64_t v494;
  _QWORD *v495;
  _QWORD *v496;
  _QWORD *v497;
  _QWORD *v498;
  _QWORD *v499;
  char *v500;
  _QWORD *v501;
  _QWORD *v502;
  _QWORD aBlock[6];

  v437 = sub_24A01ED54();
  v441 = *(_QWORD *)(v437 - 8);
  MEMORY[0x24BDAC7A8](v437);
  v440 = (char *)v435 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA70);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v435 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v447 = (unint64_t)v435 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v445 = (uint64_t)v435 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
  v450 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v444 = (uint64_t)v435 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v446 = (uint64_t)v435 - v12;
  v473 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA88);
  v13 = MEMORY[0x24BDAC7A8](v473);
  v472 = (uint64_t)v435 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v471 = (uint64_t)v435 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v470 = (uint64_t)v435 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v469 = (uint64_t)v435 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v449 = (uint64_t)v435 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v460 = (uint64_t)v435 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v467 = (uint64_t)v435 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v461 = (char *)v435 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v456 = (uint64_t)v435 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v477 = (uint64_t)v435 - v31;
  v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA80);
  v482 = *(_QWORD *)(v487 - 8);
  v32 = MEMORY[0x24BDAC7A8](v487);
  v481 = (char *)v435 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v480 = (uint64_t)v435 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v479 = (uint64_t *)((char *)v435 - v37);
  MEMORY[0x24BDAC7A8](v36);
  v478 = (char *)v435 - v38;
  v465 = type metadata accessor for VUStreamingGallery.Label(0);
  v492 = *(_QWORD *)(v465 - 8);
  v39 = MEMORY[0x24BDAC7A8](v465);
  v451 = (uint64_t)v435 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v488 = (char *)v435 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v486 = (char *)v435 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v489 = (uint64_t)v435 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v468 = (uint64_t *)((char *)v435 - v48);
  MEMORY[0x24BDAC7A8](v47);
  v491 = (uint64_t *)((char *)v435 - v49);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA78);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v483 = (uint64_t *)((char *)v435 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v51);
  v476 = (uint64_t *)((char *)v435 - v53);
  v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v54);
  v485 = (char *)v435 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v454 = sub_24A01ED24();
  v458 = *(_QWORD *)(v454 - 8);
  v56 = MEMORY[0x24BDAC7A8](v454);
  v58 = (char *)v435 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v56);
  v61 = (char *)v435 - v60;
  MEMORY[0x24BDAC7A8](v59);
  v453 = (char *)v435 - v62;
  v474 = v0;
  v438 = (char *)v0 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  v63 = sub_24A01ED90();
  v64 = sub_24A01F0CC();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    _os_log_impl(&dword_249F70000, v63, v64, "Updating streaming gallery", v65, 2u);
    MEMORY[0x24BD07950](v65, -1, -1);
  }

  v66 = (char *)v474 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_24A01ED30();
  v67 = v453;
  sub_24A01ED0C();
  v442 = v66;
  v68 = sub_24A01ED30();
  v69 = sub_24A01F174();
  v70 = sub_24A01F1E0();
  v448 = v5;
  v452 = v9;
  v439 = v58;
  if ((v70 & 1) != 0)
  {
    v71 = v458;
    v72 = *(void (**)(char *, char *, uint64_t))(v458 + 16);
    v73 = v454;
    v72(v61, v67, v454);
    v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v74 = 0;
    v75 = sub_24A01ED18();
    _os_signpost_emit_with_name_impl(&dword_249F70000, v68, v69, v75, "autoUpdate", "", v74, 2u);
    MEMORY[0x24BD07950](v74, -1, -1);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v73);
  }
  else
  {

    v72 = *(void (**)(char *, char *, uint64_t))(v458 + 16);
    v73 = v454;
  }
  v72(v61, v67, v73);
  sub_24A01ED78();
  swift_allocObject();
  v76 = sub_24A01ED6C();
  v77 = v474;
  v78 = sub_24A01EAA8();
  v79 = (uint64_t)v485;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v485, 1, 1, v78);
  swift_retain();
  LOBYTE(aBlock[0]) = 1;
  v80 = (_QWORD *)v490;
  sub_249FFD1AC(0, v79, 0, 0, 0x100000000, 0, 0);
  v81 = v487;
  v466 = v80;
  if (v80)
  {
    swift_release();
    swift_release();
    sub_249F990A0(v79, (uint64_t *)&unk_2544CAD60);
    return (*(uint64_t (**)(char *, uint64_t))(v458 + 8))(v67, v73);
  }
  v435[1] = v76;
  sub_249F990A0(v79, (uint64_t *)&unk_2544CAD60);
  swift_release();
  v83 = *(_QWORD *)(v77[2] + OBJC_IVAR____TtC19VisualUnderstanding7VUIndex_scanner);
  swift_retain();
  sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_55, (uint64_t)sub_249FCA5FC, (uint64_t)&block_descriptor_58);
  sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_49, (uint64_t)sub_249FCA548, (uint64_t)&block_descriptor_52);
  v84 = (_QWORD *)(v83 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingPartition);
  swift_beginAccess();
  v85 = MEMORY[0x24BEE4AF8];
  *v84 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v86 = v84[1];
  v87 = v84[2];
  v490 = xmmword_24A020BC0;
  *(_OWORD *)(v84 + 1) = xmmword_24A020BC0;
  sub_249F92358(v86, v87);
  v88 = (_QWORD *)(v83 + OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_streamingContext);
  swift_beginAccess();
  *v88 = v85;
  swift_bridgeObjectRelease();
  v89 = v88[1];
  v90 = v88[2];
  *(_OWORD *)(v88 + 1) = v490;
  sub_249F92358(v89, v90);
  swift_release();
  v91 = *(_QWORD ***)(v77[2] + 16);
  v92 = MEMORY[0x24BEE4B00];
  v500 = (char *)MEMORY[0x24BEE4B00];
  v93 = v91[2];
  v94 = swift_allocObject();
  *(_DWORD *)(v94 + 16) = 256;
  *(_BYTE *)(v94 + 20) = 1;
  *(_QWORD *)(v94 + 24) = 0;
  *(_BYTE *)(v94 + 32) = 1;
  *(_QWORD *)(v94 + 40) = v91;
  *(_QWORD *)(v94 + 48) = &v500;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = sub_249F98E60;
  *(_QWORD *)(v95 + 24) = v94;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v95;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_22;
  v96 = _Block_copy(aBlock);
  swift_retain_n();
  v97 = v93;
  swift_retain();
  swift_release();
  objc_msgSend(v97, sel_performBlockAndWait_, v96);

  _Block_release(v96);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_384;
  v99 = v500;
  swift_release();
  swift_release();
  v501 = (_QWORD *)v92;
  v502 = (_QWORD *)v92;
  v100 = *((_QWORD *)v99 + 8);
  v475 = v99 + 64;
  v101 = 1 << v99[32];
  v102 = -1;
  if (v101 < 64)
    v102 = ~(-1 << v101);
  v103 = v102 & v100;
  v484 = (unint64_t)(v101 + 63) >> 6;
  v485 = v99;
  swift_bridgeObjectRetain();
  v104 = 0;
  v105 = 0;
  v106 = (_QWORD *)v92;
  v107 = (_QWORD *)v92;
  while (1)
  {
    if (v103)
    {
      v108 = __clz(__rbit64(v103));
      v103 &= v103 - 1;
      *(_QWORD *)&v490 = v105;
      v109 = v108 | (v105 << 6);
      goto LABEL_30;
    }
    v110 = v105 + 1;
    if (__OFADD__(v105, 1))
    {
      __break(1u);
LABEL_355:
      __break(1u);
LABEL_356:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v420 = v474;
      swift_retain();
      v421 = sub_249FF7DC4();
      swift_release();
      swift_retain();
      v422 = sub_249FD1FB8(0, 1, 0);
      swift_release();
      v423 = sub_249FA4948(v422);
      swift_bridgeObjectRelease();
      isEscapingClosureAtFileLocation = v441;
      v107 = v440;
      v260 = (uint64_t)v439;
      if (v421 != v423
        || (swift_retain(), v424 = sub_249FF7DC4(), swift_release(), v424 != *(_QWORD *)(v420[4] + 16))
        || (swift_retain(), v425 = sub_249FF7DC4(), swift_release(), v425 != *(_QWORD *)(v420[5] + 16)))
      {
        v241 = sub_24A01ED90();
        v426 = sub_24A01F0E4();
        if (os_log_type_enabled((os_log_t)v241, v426))
        {
          v427 = sub_249F89A3C();
          v494 = 0;
          v493 = 0;
          *(_WORD *)v427 = 0;
          v495 = (_QWORD *)(v427 + 2);
          v428 = v466;
          sub_249FB4140(MEMORY[0x24BEE4AF8], (uint64_t)&v495, (uint64_t)&v494, (uint64_t)&v493);
          v466 = v428;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_249F70000, (os_log_t)v241, v426, "videoIndex size and observationTrackMap are not equal", (uint8_t *)v427, 2u);
          sub_249F89A44();
        }
        goto LABEL_371;
      }
LABEL_372:
      v474[13] = 100;
      v103 = sub_24A01ED30();
      sub_24A01ED60();
      LOBYTE(v106) = sub_24A01F168();
      if ((sub_24A01F1E0() & 1) != 0)
      {
        swift_retain();
        sub_24A01ED84();
        swift_release();
        v91 = (_QWORD **)v437;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(isEscapingClosureAtFileLocation + 88))(v107, v437) != *MEMORY[0x24BEE7810])
          goto LABEL_378;
        v429 = "[Error] Interval already ended";
        goto LABEL_379;
      }

      v430 = *(void (**)(uint64_t, uint64_t))(v458 + 8);
      v431 = v454;
      v430(v260, v454);
      v430((uint64_t)v453, v431);
      swift_release();
      goto LABEL_365;
    }
    if (v110 >= v484)
      goto LABEL_54;
    v111 = v475[v110];
    v112 = v105 + 1;
    if (!v111)
    {
      v112 = v105 + 2;
      if (v105 + 2 >= v484)
        goto LABEL_54;
      v111 = v475[v112];
      if (!v111)
      {
        v112 = v105 + 3;
        if (v105 + 3 >= v484)
          goto LABEL_54;
        v111 = v475[v112];
        if (!v111)
          break;
      }
    }
LABEL_29:
    v103 = (v111 - 1) & v111;
    *(_QWORD *)&v490 = v112;
    v109 = __clz(__rbit64(v111)) + (v112 << 6);
LABEL_30:
    v114 = 8 * v109;
    v115 = *(_QWORD *)(*((_QWORD *)v485 + 6) + v114);
    v116 = *(_QWORD *)(*((_QWORD *)v485 + 7) + v114);
    sub_249FC7728((uint64_t)v104);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v107;
    v119 = sub_249F8B27C(v116);
    v120 = v107[2];
    v121 = (v118 & 1) == 0;
    v122 = v120 + v121;
    if (__OFADD__(v120, v121))
      goto LABEL_257;
    v123 = v118;
    if (v107[3] >= v122)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_249FC2408(&qword_2544CA390);
        v107 = (_QWORD *)aBlock[0];
      }
    }
    else
    {
      sub_249FBA8D8(v122, isUniquelyReferenced_nonNull_native, &qword_2544CA390);
      v107 = (_QWORD *)aBlock[0];
      v124 = sub_249F8B27C(v116);
      if ((v123 & 1) != (v125 & 1))
        goto LABEL_405;
      v119 = v124;
    }
    swift_bridgeObjectRelease();
    if ((v123 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
    v107[(v119 >> 6) + 8] |= 1 << v119;
    v126 = 8 * v119;
    *(_QWORD *)(v107[6] + v126) = v116;
    *(_QWORD *)(v107[7] + v126) = MEMORY[0x24BEE4AF8];
    v127 = v107[2];
    v128 = v127 + 1;
    v129 = __OFADD__(v127, 1);
    swift_bridgeObjectRetain();
    if (v129)
    {
      __break(1u);
LABEL_352:
      __break(1u);
LABEL_353:
      swift_release();
LABEL_363:
      swift_bridgeObjectRelease();
LABEL_364:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v458 + 8))(v453, v454);
      goto LABEL_365;
    }
    v107[2] = v128;
LABEL_43:
    v130 = v107[7];
    swift_bridgeObjectRelease();
    v131 = (uint64_t *)(v130 + 8 * v119);
    sub_249FB4EA4();
    v132 = *(_QWORD **)(*v131 + 16);
    sub_249FB4EEC(v132);
    v133 = *v131;
    *(_QWORD *)(v133 + 16) = (char *)v132 + 1;
    *(_QWORD *)(v133 + 8 * (_QWORD)v132 + 32) = v115;
    v134 = v474[7];
    isEscapingClosureAtFileLocation = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v106;
    v91 = (_QWORD **)v106;
    v136 = sub_249F8B27C(v116);
    v137 = v106[2];
    v138 = (v135 & 1) == 0;
    v139 = v137 + v138;
    if (__OFADD__(v137, v138))
      goto LABEL_258;
    v140 = v135;
    if (v106[3] >= v139)
    {
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        v106 = (_QWORD *)aBlock[0];
        if ((v135 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        v91 = (_QWORD **)aBlock;
        sub_249FC20E0();
        v106 = (_QWORD *)aBlock[0];
        if ((v140 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_249FBA388(v139, isEscapingClosureAtFileLocation);
      v91 = (_QWORD **)aBlock[0];
      v141 = sub_249F8B27C(v116);
      if ((v140 & 1) != (v142 & 1))
        goto LABEL_405;
      v136 = v141;
      v106 = (_QWORD *)aBlock[0];
      if ((v140 & 1) != 0)
      {
LABEL_12:
        *(_QWORD *)(v106[7] + 8 * v136) = v134;
        goto LABEL_13;
      }
    }
    v106[(v136 >> 6) + 8] |= 1 << v136;
    v143 = 8 * v136;
    *(_QWORD *)(v106[6] + v143) = v116;
    *(_QWORD *)(v106[7] + v143) = v134;
    v144 = v106[2];
    v145 = __OFADD__(v144, 1);
    v146 = v144 + 1;
    if (v145)
      goto LABEL_352;
    v106[2] = v146;
LABEL_13:
    swift_bridgeObjectRelease();
    v104 = sub_249FA3E60;
    v81 = v487;
    v105 = v490;
  }
  v113 = v105 + 4;
  if (v105 + 4 >= v484)
    goto LABEL_54;
  v111 = v475[v113];
  if (v111)
  {
    v112 = v105 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    v112 = v113 + 1;
    if (__OFADD__(v113, 1))
    {
      __break(1u);
      goto LABEL_377;
    }
    if (v112 >= v484)
      break;
    v111 = v475[v112];
    ++v113;
    if (v111)
      goto LABEL_29;
  }
LABEL_54:
  v435[0] = (uint64_t)v104;
  v501 = v106;
  v502 = v107;
  v147 = (uint64_t)v485;
  swift_release();
  v148 = v474;
  *(_QWORD *)&v490 = v474 + 4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v149 = swift_bridgeObjectRetain();
  v150 = v466;
  v151 = sub_249FBCA94(v149, v147);
  swift_bridgeObjectRelease();
  v148[4] = v151;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v152 = swift_bridgeObjectRetain();
  v153 = sub_249FC9058(v152, v147);
  v466 = v150;
  v154 = v148 + 5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v148[5] = v153;
  swift_bridgeObjectRelease();
  v155 = (_QWORD *)MEMORY[0x24BEE4B00];
  v499 = (_QWORD *)MEMORY[0x24BEE4B00];
  v156 = v148[5];
  v157 = *(_QWORD *)(v156 + 64);
  v484 = v156 + 64;
  v158 = 1 << *(_BYTE *)(v156 + 32);
  v159 = -1;
  if (v158 < 64)
    v159 = ~(-1 << v158);
  v160 = v159 & v157;
  v485 = (char *)((unint64_t)(v158 + 63) >> 6);
  v464 = v485 - 1;
  v161 = v156;
  swift_bridgeObjectRetain();
  v162 = v155;
  v163 = 0;
  v475 = v154;
  while (2)
  {
    v164 = v483;
    if (v160)
    {
      v165 = __clz(__rbit64(v160));
      v160 &= v160 - 1;
      v166 = v165 | (v163 << 6);
      goto LABEL_61;
    }
    v169 = v163 + 1;
    if (__OFADD__(v163, 1))
    {
      __break(1u);
LABEL_362:
      v466 = v155;
      swift_release();
      swift_release();
      goto LABEL_363;
    }
    if (v169 >= (uint64_t)v485)
      goto LABEL_73;
    v170 = *(_QWORD *)(v484 + 8 * v169);
    if (v170)
    {
LABEL_65:
      v160 = (v170 - 1) & v170;
      v166 = __clz(__rbit64(v170)) + (v169 << 6);
      v163 = v169;
LABEL_61:
      v167 = *(_QWORD *)(v161 + 56);
      *v483 = *(_QWORD *)(*(_QWORD *)(v161 + 48) + 8 * v166);
      sub_249F9896C(v167 + *(_QWORD *)(v492 + 72) * v166, (uint64_t)v164 + *(int *)(v81 + 48), type metadata accessor for VUStreamingGallery.Label);
      v168 = 0;
      goto LABEL_74;
    }
    v163 += 2;
    if (v169 + 1 >= (uint64_t)v485)
    {
      v160 = 0;
      v168 = 1;
      v163 = v169;
      goto LABEL_74;
    }
    v170 = *(_QWORD *)(v484 + 8 * v163);
    if (v170)
    {
      ++v169;
      goto LABEL_65;
    }
    if (v169 + 2 >= (uint64_t)v485)
    {
LABEL_73:
      v160 = 0;
      v168 = 1;
      goto LABEL_74;
    }
    v170 = *(_QWORD *)(v484 + 8 * (v169 + 2));
    if (v170)
    {
      v169 += 2;
      goto LABEL_65;
    }
    v196 = v169 + 3;
    if (v169 + 3 >= (uint64_t)v485)
    {
      v160 = 0;
      v168 = 1;
      v163 = v169 + 2;
    }
    else
    {
      v170 = *(_QWORD *)(v484 + 8 * v196);
      if (v170)
      {
        v169 += 3;
        goto LABEL_65;
      }
      while (1)
      {
        v169 = v196 + 1;
        if (__OFADD__(v196, 1))
          goto LABEL_389;
        if (v169 >= (uint64_t)v485)
          break;
        v170 = *(_QWORD *)(v484 + 8 * v169);
        ++v196;
        if (v170)
          goto LABEL_65;
      }
      v160 = 0;
      v168 = 1;
      v163 = (uint64_t)v464;
    }
LABEL_74:
    v171 = v482;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v482 + 56))(v164, v168, 1, v81);
    v172 = (uint64_t)v164;
    v173 = v476;
    sub_249F98C10(v172, (uint64_t)v476, &qword_2578FFA78);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v171 + 48))(v173, 1, v81) != 1)
    {
      v174 = v173;
      v175 = *v173;
      v176 = (uint64_t)v174 + *(int *)(v81 + 48);
      sub_249F9896C(v176, (uint64_t)v491, type metadata accessor for VUStreamingGallery.Label);
      v177 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v468;
      sub_249F98928(v176, (uint64_t)v468, type metadata accessor for VUStreamingGallery.Label);
      v178 = 0.0;
      if (v162[2])
      {
        v179 = sub_249F8B2AC((uint64_t)v177);
        if ((v180 & 1) != 0)
          v178 = *(double *)(v162[7] + 8 * v179);
      }
      sub_249F989C0((uint64_t)v177, type metadata accessor for VUStreamingGallery.Label);
      v181 = *(_QWORD *)v490;
      if (!*(_QWORD *)(*(_QWORD *)v490 + 16))
        goto LABEL_259;
      v182 = sub_249F8B27C(v175);
      if ((v183 & 1) == 0)
        goto LABEL_260;
      v184 = *(_QWORD *)(v181 + 56);
      if (v178 <= *(double *)(v184 + 8 * v182))
        v178 = *(double *)(v184 + 8 * v182);
      v185 = swift_isUniquelyReferenced_nonNull_native();
      v496 = v162;
      v187 = sub_249F8B2AC((uint64_t)v491);
      v188 = v162[2];
      v189 = (v186 & 1) == 0;
      v190 = v188 + v189;
      if (__OFADD__(v188, v189))
        goto LABEL_261;
      v191 = v186;
      if (v162[3] >= v190)
      {
        if ((v185 & 1) == 0)
          sub_249FC2B90();
      }
      else
      {
        sub_249FBB3BC(v190, v185);
        v192 = sub_249F8B2AC((uint64_t)v491);
        if ((v191 & 1) != (v193 & 1))
          goto LABEL_406;
        v187 = v192;
      }
      v162 = v496;
      if ((v191 & 1) != 0)
      {
        *(double *)(v496[7] + 8 * v187) = v178;
      }
      else
      {
        v496[(v187 >> 6) + 8] |= 1 << v187;
        sub_249F9896C((uint64_t)v491, v162[6] + *(_QWORD *)(v492 + 72) * v187, type metadata accessor for VUStreamingGallery.Label);
        *(double *)(v162[7] + 8 * v187) = v178;
        v194 = v162[2];
        v145 = __OFADD__(v194, 1);
        v195 = v194 + 1;
        if (v145)
          goto LABEL_355;
        v162[2] = v195;
      }
      swift_bridgeObjectRelease();
      sub_249F989C0((uint64_t)v491, type metadata accessor for VUStreamingGallery.Label);
      v81 = v487;
      continue;
    }
    break;
  }
  v499 = v162;
  swift_release();
  v498 = (_QWORD *)MEMORY[0x24BEE4B00];
  v497 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v197 = v502[8];
  v455 = v502 + 8;
  v198 = 1 << *((_BYTE *)v502 + 32);
  v199 = -1;
  if (v198 < 64)
    v199 = ~(-1 << v198);
  v200 = v199 & v197;
  v457 = (unint64_t)(v198 + 63) >> 6;
  v459 = (uint64_t)v502;
  swift_bridgeObjectRetain();
  v436 = 0;
  v201 = 0;
  isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
  v202 = v465;
  v107 = v488;
  if (!v200)
    goto LABEL_104;
LABEL_103:
  v463 = (v200 - 1) & v200;
  v464 = v201;
  v203 = __clz(__rbit64(v200)) | ((_QWORD)v201 << 6);
LABEL_115:
  v207 = 8 * v203;
  v208 = *(_QWORD *)(v459 + 56);
  v462 = *(_QWORD *)(*(_QWORD *)(v459 + 48) + v207);
  v209 = *(_QWORD *)(v208 + v207);
  swift_bridgeObjectRetain_n();
  v210 = swift_bridgeObjectRetain();
  v211 = v466;
  v212 = sub_249FC7BF0(v210, v209);
  v466 = v211;
  swift_bridgeObjectRelease();
  v476 = (uint64_t *)v209;
  swift_bridgeObjectRelease();
  v213 = *(_QWORD *)(v212 + 16);
  if (!v213)
  {
    swift_release();
    v239 = MEMORY[0x24BEE4AF8];
    v238 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_139:
    v91 = (_QWORD **)sub_249F760BC(v239);
    v240 = v238[2];
    v241 = (unint64_t)v486;
    if (!v240)
      goto LABEL_153;
    v242 = (uint64_t)v238
         + ((*(unsigned __int8 *)(v492 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v492 + 80));
    v243 = *(_QWORD *)(v492 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_249F9896C(v242, v241, type metadata accessor for VUStreamingGallery.Label);
      sub_249F9896C(v241, (uint64_t)v107, type metadata accessor for VUStreamingGallery.Label);
      v244 = swift_isUniquelyReferenced_nonNull_native();
      v496 = v91;
      v246 = sub_249F8B2AC((uint64_t)v107);
      v247 = v91[2];
      v248 = (v245 & 1) == 0;
      v249 = (uint64_t)v247 + v248;
      if (__OFADD__(v247, v248))
        goto LABEL_247;
      v250 = v245;
      if ((uint64_t)v91[3] >= v249)
      {
        if ((v244 & 1) == 0)
        {
          sub_249FC2DC0();
          v91 = (_QWORD **)v496;
        }
      }
      else
      {
        sub_249FBB604(v249, v244);
        v91 = (_QWORD **)v496;
        v251 = sub_249F8B2AC((uint64_t)v107);
        if ((v250 & 1) != (v252 & 1))
          goto LABEL_407;
        v246 = v251;
      }
      isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
      swift_bridgeObjectRelease();
      if ((v250 & 1) == 0)
      {
        v91[(v246 >> 6) + 8] = (_QWORD *)((unint64_t)v91[(v246 >> 6) + 8] | (1 << v246));
        sub_249F9896C((uint64_t)v107, (uint64_t)v91[6] + v246 * v243, type metadata accessor for VUStreamingGallery.Label);
        v91[7][v246] = 0;
        v253 = v91[2];
        v145 = __OFADD__(v253, 1);
        v254 = (_QWORD *)((char *)v253 + 1);
        if (v145)
        {
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          v331 = (uint64_t)v498;
          goto LABEL_263;
        }
        v91[2] = v254;
      }
      v255 = v91[7];
      v256 = v255[v246];
      v145 = __OFADD__(v256, 1);
      v257 = v256 + 1;
      if (v145)
        goto LABEL_248;
      v255[v246] = v257;
      sub_249F989C0((uint64_t)v107, type metadata accessor for VUStreamingGallery.Label);
      v241 = (unint64_t)v486;
      sub_249F989C0((uint64_t)v486, type metadata accessor for VUStreamingGallery.Label);
      v242 += v243;
      if (!--v240)
      {
        swift_bridgeObjectRelease();
        v202 = v465;
LABEL_153:
        swift_bridgeObjectRelease();
        v258 = sub_249FC6874((uint64_t)v91);
        v260 = (uint64_t)v461;
        if ((v261 & 1) != 0)
          goto LABEL_397;
        if (*((_DWORD *)v91 + 9) != v259)
          goto LABEL_370;
        if (v258 == 1 << *((_BYTE *)v91 + 32))
        {
          v262 = *(uint64_t **)(v492 + 56);
          v263 = v477;
          v264 = 1;
        }
        else
        {
          v265 = v477;
          sub_249FC67D8(v258, v259, (uint64_t)v91, v477);
          v262 = *(uint64_t **)(v492 + 56);
          v263 = v265;
          v264 = 0;
        }
        v468 = v262;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v262)(v263, v264, 1, v202);
        if ((unint64_t)v91[2] < 2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_197;
        }
        v266 = swift_bridgeObjectRetain();
        v267 = sub_249FA546C(v266);
        isEscapingClosureAtFileLocation = v268;
        swift_bridgeObjectRelease();
        v269 = v466;
        v270 = sub_249FBC7B4((uint64_t)v91, v267, isEscapingClosureAtFileLocation & 1);
        v466 = v269;
        swift_bridgeObjectRelease();
        v106 = *(_QWORD **)(v270 + 16);
        if (!v106)
        {
          swift_release();
          v103 = MEMORY[0x24BEE4AF8];
          if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
            goto LABEL_377;
          goto LABEL_185;
        }
        v496 = (_QWORD *)MEMORY[0x24BEE4AF8];
        sub_249FB4DA8((int64_t)v106);
        v272 = sub_249F9B4B0(v270);
        v273 = 0;
        v274 = v270 + 64;
        v275 = *(_BYTE *)(v270 + 32);
        v482 = v271;
        v443 = v270 + 88;
        v483 = v106;
        v484 = v270 + 64;
        v485 = (char *)v270;
        while (2)
        {
          if (v272 < 0 || v272 >= 1 << v275)
            goto LABEL_251;
          v278 = (unint64_t)v272 >> 6;
          if ((*(_QWORD *)(v274 + 8 * ((unint64_t)v272 >> 6)) & (1 << v272)) == 0)
            goto LABEL_252;
          if (*(_DWORD *)(v270 + 36) != (_DWORD)v271)
            goto LABEL_253;
          v491 = (_QWORD *)v271;
          *(_QWORD *)&v490 = v273;
          v279 = v473;
          v280 = *(int *)(v473 + 48);
          v281 = v469;
          sub_249F9896C(*(_QWORD *)(v270 + 48) + *(_QWORD *)(v492 + 72) * v272, v469, type metadata accessor for VUStreamingGallery.Label);
          v282 = *(_QWORD *)(*(_QWORD *)(v270 + 56) + 8 * v272);
          *(_QWORD *)(v281 + v280) = v282;
          v283 = v470;
          sub_249F9896C(v281, v470, type metadata accessor for VUStreamingGallery.Label);
          *(_QWORD *)(v283 + *(int *)(v279 + 48)) = v282;
          v284 = v471;
          sub_249F98C10(v283, v471, &qword_2578FFA88);
          sub_249F990A0(v281, &qword_2578FFA88);
          v285 = v472;
          sub_249F9896C(v284, v472, type metadata accessor for VUStreamingGallery.Label);
          v286 = v489;
          sub_249F98928(v285, v489, type metadata accessor for VUStreamingGallery.Label);
          sub_249F990A0(v284, &qword_2578FFA88);
          v91 = &v496;
          sub_249FB4F5C((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_249F8CC70);
          v288 = v496[2];
          v287 = v496[3];
          if (v288 >= v287 >> 1)
            sub_249F8CC70(v287 > 1, v288 + 1, 1);
          sub_249FB504C(v288, v286);
          v270 = (uint64_t)v485;
          v275 = v485[32];
          v276 = 1 << v275;
          if (v272 >= 1 << v275)
            goto LABEL_254;
          v274 = v484;
          v289 = *(_QWORD *)(v484 + 8 * v278);
          if ((v289 & (1 << v272)) == 0)
            goto LABEL_255;
          if (*((_DWORD *)v485 + 9) != (_DWORD)v491)
            goto LABEL_256;
          v290 = v289 & (-2 << (v272 & 0x3F));
          if (v290)
          {
            v276 = __clz(__rbit64(v290)) | v272 & 0xFFFFFFFFFFFFFFC0;
            isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
            v106 = v483;
            v277 = v490;
          }
          else
          {
            v291 = v278 + 1;
            v292 = (v276 + 63) >> 6;
            isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
            v106 = v483;
            v277 = v490;
            if (v278 + 1 < v292)
            {
              v293 = *(_QWORD *)(v484 + 8 * v291);
              if (v293)
                goto LABEL_175;
              v291 = v278 + 2;
              if (v278 + 2 < v292)
              {
                v293 = *(_QWORD *)(v484 + 8 * v291);
                if (v293)
                {
LABEL_175:
                  v276 = __clz(__rbit64(v293)) + (v291 << 6);
                }
                else
                {
                  while (v292 - 3 != v278)
                  {
                    v293 = *(_QWORD *)(v443 + 8 * v278++);
                    if (v293)
                    {
                      v291 = v278 + 2;
                      goto LABEL_175;
                    }
                  }
                }
              }
            }
          }
          v273 = (_QWORD *)(v277 + 1);
          v271 = v482;
          v272 = v276;
          v107 = v488;
          if (v273 != v106)
            continue;
          break;
        }
        swift_release();
        v103 = (unint64_t)v496;
        v260 = (uint64_t)v461;
        v202 = v465;
        if (!v496[2])
        {
LABEL_377:
          __break(1u);
LABEL_378:
          (*(void (**)(_QWORD *, _QWORD **))(isEscapingClosureAtFileLocation + 8))(v107, v91);
          v429 = "";
LABEL_379:
          v432 = sub_249F89A3C();
          v494 = 0;
          v493 = 0;
          *(_WORD *)v432 = 0;
          v495 = (_QWORD *)(v432 + 2);
          v433 = v466;
          sub_249FB4140(MEMORY[0x24BEE4AF8], (uint64_t)&v495, (uint64_t)&v494, (uint64_t)&v493);
          v466 = v433;
          swift_bridgeObjectRelease();
          v434 = sub_24A01ED18();
          _os_signpost_emit_with_name_impl(&dword_249F70000, (os_log_t)v103, (os_signpost_type_t)v106, v434, "autoUpdate", v429, (uint8_t *)v432, 2u);
          sub_249F89A44();
        }
LABEL_185:
        v294 = v456;
        sub_249F9896C(v103 + ((*(unsigned __int8 *)(v492 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v492 + 80)), v456, type metadata accessor for VUStreamingGallery.Label);
        swift_bridgeObjectRelease();
        v295 = v477;
        sub_249F990A0(v477, &qword_2578FFA68);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v468)(v294, 0, 1, v202);
        sub_249F98C10(v294, v295, &qword_2578FFA68);
        v296 = (uint64_t)v476;
        v297 = v476[2];
        if (v297)
        {
          v298 = 0;
          v299 = (_QWORD **)v475;
          do
          {
            v302 = *(_QWORD *)(v296 + 8 * v298 + 32);
            sub_249F9905C(v477, v260, &qword_2578FFA68);
            swift_beginAccess();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v492 + 48))(v260, 1, v202) == 1)
            {
              v303 = v202;
              sub_249F990A0(v260, &qword_2578FFA68);
              v304 = v299;
              v305 = sub_249F8B27C(v302);
              if ((v306 & 1) != 0)
              {
                v307 = v305;
                v308 = swift_isUniquelyReferenced_nonNull_native();
                v309 = *v299;
                v495 = *v304;
                *v304 = (_QWORD *)0x8000000000000000;
                if ((v308 & 1) == 0)
                {
                  sub_249FC272C();
                  v309 = v495;
                }
                v310 = v467;
                sub_249F98928(v309[7] + *(_QWORD *)(v492 + 72) * v307, v467, type metadata accessor for VUStreamingGallery.Label);
                sub_249FBE9F4(v307, (uint64_t)v309, type metadata accessor for VUStreamingGallery.Label);
                *v304 = v309;
                swift_bridgeObjectRelease();
                v311 = v310;
                v312 = 0;
                v107 = v488;
                v299 = v304;
              }
              else
              {
                v312 = 1;
                v311 = v467;
              }
              v202 = v303;
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v468)(v311, v312, 1, v303);
              sub_249F990A0(v311, &qword_2578FFA68);
            }
            else
            {
              v300 = v489;
              sub_249F98928(v260, v489, type metadata accessor for VUStreamingGallery.Label);
              v301 = swift_isUniquelyReferenced_nonNull_native();
              v495 = *v299;
              *v299 = (_QWORD *)0x8000000000000000;
              sub_249FC01D0(v300, v302, v301);
              v299 = (_QWORD **)v475;
              *v475 = v495;
              swift_bridgeObjectRelease();
            }
            ++v298;
            swift_endAccess();
            v296 = (uint64_t)v476;
          }
          while (v297 != v298);
        }
        swift_bridgeObjectRelease();
        isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
LABEL_197:
        v313 = v460;
        sub_249F9905C(v477, v460, &qword_2578FFA68);
        v314 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v492 + 48);
        v315 = v314(v313, 1, v202);
        sub_249F990A0(v313, &qword_2578FFA68);
        if (v315 == 1)
        {
          sub_249FB4EA4();
          v316 = v497;
          v318 = v497[2];
          v317 = v497[3];
          if (v318 >= v317 >> 1)
          {
            v316 = sub_249F89B7C((_QWORD *)(v317 > 1), v318 + 1, 1, v497);
            v497 = v316;
          }
          v316[2] = v318 + 1;
          v316[v318 + 4] = v462;
          sub_249F990A0(v477, &qword_2578FFA68);
          goto LABEL_201;
        }
        v319 = v449;
        sub_249F9905C(v477, v449, &qword_2578FFA68);
        if (v314(v319, 1, v202) != 1)
        {
          sub_249FC7728((uint64_t)v436);
          v320 = v498;
          v321 = swift_isUniquelyReferenced_nonNull_native();
          v496 = v320;
          v498 = (_QWORD *)0x8000000000000000;
          v323 = sub_249F8B2AC(v319);
          v324 = v320[2];
          v325 = (v322 & 1) == 0;
          v326 = v324 + v325;
          if (__OFADD__(v324, v325))
            goto LABEL_390;
          v327 = v322;
          if (v320[3] >= v326)
          {
            if ((v321 & 1) == 0)
            {
              sub_249FC2958();
              v320 = v496;
            }
            goto LABEL_214;
          }
          sub_249FBB160(v326, v321);
          v320 = v496;
          v328 = sub_249F8B2AC(v449);
          if ((v327 & 1) == (v329 & 1))
          {
            v323 = v328;
LABEL_214:
            v202 = v465;
            v498 = v320;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            if ((v327 & 1) == 0)
            {
              v330 = v489;
              sub_249F9896C(v449, v489, type metadata accessor for VUStreamingGallery.Label);
              sub_249FC0B74(v323, v330, MEMORY[0x24BEE4AF8], v320);
            }
            swift_bridgeObjectRelease();
            sub_249FA3A04(v462);
            sub_249F990A0(v477, &qword_2578FFA68);
            sub_249F989C0(v449, type metadata accessor for VUStreamingGallery.Label);
            v436 = sub_249FA3E60;
LABEL_201:
            v201 = v464;
            v200 = v463;
            if (v463)
              goto LABEL_103;
LABEL_104:
            v145 = __OFADD__(v201, 1);
            v204 = (int64_t)(v201 + 1);
            if (v145)
            {
              __break(1u);
LABEL_381:
              __break(1u);
              goto LABEL_382;
            }
            if (v204 < v457)
            {
              v205 = v455[v204];
              if (v205)
                goto LABEL_114;
              v206 = v204 + 1;
              if (v204 + 1 < v457)
              {
                v205 = v455[v206];
                if (v205)
                  goto LABEL_113;
                v206 = v204 + 2;
                if (v204 + 2 < v457)
                {
                  v205 = v455[v206];
                  if (v205)
                    goto LABEL_113;
                  v206 = v204 + 3;
                  if (v204 + 3 < v457)
                  {
                    v205 = v455[v206];
                    if (v205)
                    {
LABEL_113:
                      v204 = v206;
LABEL_114:
                      v463 = (v205 - 1) & v205;
                      v464 = (char *)v204;
                      v203 = __clz(__rbit64(v205)) + (v204 << 6);
                      goto LABEL_115;
                    }
                    while (1)
                    {
                      v204 = v206 + 1;
                      if (__OFADD__(v206, 1))
                        goto LABEL_385;
                      if (v204 >= v457)
                        break;
                      v205 = v455[v204];
                      ++v206;
                      if (v205)
                        goto LABEL_114;
                    }
                  }
                }
              }
            }
            swift_release();
            v331 = (uint64_t)v498;
            v332 = v498[2];
            v333 = v497[2];
            v334 = v332 + v333;
            if (__OFADD__(v332, v333))
              goto LABEL_393;
            v335 = v466;
            sub_249FB1D60((uint64_t *)&v497, (uint64_t *)&v502, (uint64_t (*)(uint64_t))sub_24A006BA4);
            swift_bridgeObjectRetain_n();
            v336 = (_QWORD *)sub_249FB58B0(v331);
            swift_bridgeObjectRelease();
            v495 = v336;
            sub_249FB1DDC(&v495, (uint64_t *)&v499);
            v466 = v335;
            if (!v335)
            {
              swift_bridgeObjectRelease();
              v496 = v495;
              if (v474[6] < v334)
              {
                while (1)
                {
                  if (v497[2])
                  {
                    v337 = sub_249FC6778();
                    if ((v338 & 1) != 0)
                      v337 = sub_249FB4B84(v497[2] - 1);
                    v339 = v337;
                    if (!v502[2])
                      goto LABEL_386;
                    sub_249F8B27C(v337);
                    if ((v340 & 1) == 0)
                      goto LABEL_387;
                    v341 = swift_bridgeObjectRetain();
                    v342 = v466;
                    sub_249FB2F50(v341);
                    v466 = v342;
                    if (v342)
                      goto LABEL_353;
                    swift_bridgeObjectRelease();
                    sub_249FB1E70(v339);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    if (!v496[2])
                      goto LABEL_392;
                    v343 = v445;
                    sub_249FC66B8(v445);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v450 + 48))(v343, 1, v452) == 1)
                    {
                      sub_249F990A0(v343, &qword_2578FFA70);
                      v344 = v446;
                      sub_249FB4C54(v496[2] - 1, v446);
                    }
                    else
                    {
                      v344 = v446;
                      sub_249F98C10(v343, v446, &qword_2578FF830);
                    }
                    v345 = v452;
                    v346 = *(int *)(v452 + 48);
                    sub_249FB80C0(v344);
                    swift_bridgeObjectRelease();
                    v347 = *(int *)(v345 + 48);
                    v348 = v444;
                    sub_249F9896C(v344, v444, type metadata accessor for VUStreamingGallery.Label);
                    v349 = *(_QWORD *)(v344 + v346);
                    *(_QWORD *)(v348 + v347) = v349;
                    swift_bridgeObjectRetain();
                    sub_249F989C0(v348, type metadata accessor for VUStreamingGallery.Label);
                    v350 = *(_QWORD *)(v349 + 16);
                    if (v350)
                    {
                      v351 = 0;
                      while (v502[2])
                      {
                        v352 = *(_QWORD *)(v349 + 8 * v351 + 32);
                        sub_249F8B27C(v352);
                        if ((v353 & 1) == 0)
                          goto LABEL_383;
                        v354 = swift_bridgeObjectRetain();
                        v355 = v466;
                        sub_249FB2F50(v354);
                        v466 = v355;
                        if (v355)
                          goto LABEL_249;
                        ++v351;
                        swift_bridgeObjectRelease();
                        sub_249FB1E70(v352);
                        swift_bridgeObjectRelease();
                        if (v350 == v351)
                          goto LABEL_221;
                      }
LABEL_382:
                      __break(1u);
LABEL_383:
                      __break(1u);
LABEL_384:
                      __break(1u);
LABEL_385:
                      __break(1u);
LABEL_386:
                      __break(1u);
LABEL_387:
                      __break(1u);
LABEL_388:
                      __break(1u);
LABEL_389:
                      __break(1u);
LABEL_390:
                      __break(1u);
LABEL_391:
                      __break(1u);
LABEL_392:
                      __break(1u);
LABEL_393:
                      __break(1u);
LABEL_394:
                      __break(1u);
LABEL_395:
                      __break(1u);
                      goto LABEL_396;
                    }
LABEL_221:
                    swift_bridgeObjectRelease();
                    sub_249F990A0(v446, &qword_2578FF830);
                  }
                  if (v474[6] >= --v334)
                    goto LABEL_262;
                }
              }
LABEL_263:
              v356 = *(_QWORD *)(v331 + 64);
              v487 = v331 + 64;
              v357 = 1 << *(_BYTE *)(v331 + 32);
              v358 = -1;
              if (v357 < 64)
                v358 = ~(-1 << v357);
              v359 = v358 & v356;
              v488 = (char *)((unint64_t)(v357 + 63) >> 6);
              v486 = v488 - 1;
              *(_QWORD *)&v490 = v331;
              swift_bridgeObjectRetain();
              v360 = 0;
              v361 = (uint64_t)v448;
              v362 = v452;
              v363 = v450;
              v364 = v451;
              while (2)
              {
                if (v359)
                {
                  v365 = __clz(__rbit64(v359));
                  v359 &= v359 - 1;
                  v491 = (_QWORD *)v360;
                  v366 = v365 | (v360 << 6);
                  goto LABEL_269;
                }
                v368 = v360 + 1;
                if (__OFADD__(v360, 1))
                  goto LABEL_391;
                if (v368 >= (uint64_t)v488)
                  goto LABEL_280;
                v369 = *(_QWORD *)(v487 + 8 * v368);
                if (v369)
                {
LABEL_273:
                  v359 = (v369 - 1) & v369;
                  v366 = __clz(__rbit64(v369)) + (v368 << 6);
                  v491 = (_QWORD *)v368;
LABEL_269:
                  v367 = v490;
                  sub_249F9896C(*(_QWORD *)(v490 + 48) + *(_QWORD *)(v492 + 72) * v366, v361, type metadata accessor for VUStreamingGallery.Label);
                  *(_QWORD *)(v361 + *(int *)(v362 + 48)) = *(_QWORD *)(*(_QWORD *)(v367 + 56) + 8 * v366);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v363 + 56))(v361, 0, 1, v362);
                  swift_bridgeObjectRetain();
LABEL_282:
                  v241 = v447;
                  sub_249F98C10(v361, v447, &qword_2578FFA70);
                  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v363 + 48))(v241, 1, v362) == 1)
                  {
                    swift_release();
                    v397 = (uint64_t)v501;
                    v396 = (uint64_t)v502;
                    v398 = v502[8];
                    v491 = v502 + 8;
                    v399 = 1 << *((_BYTE *)v502 + 32);
                    v400 = -1;
                    if (v399 < 64)
                      v400 = ~(-1 << v399);
                    v401 = v400 & v398;
                    v492 = (unint64_t)(v399 + 63) >> 6;
                    swift_bridgeObjectRetain();
                    v402 = 0;
                    while (1)
                    {
                      if (v401)
                      {
                        v403 = __clz(__rbit64(v401));
                        v401 &= v401 - 1;
                        v404 = v403 | (v402 << 6);
                        if (!*(_QWORD *)(v397 + 16))
                          goto LABEL_400;
                      }
                      else
                      {
                        v145 = __OFADD__(v402++, 1);
                        if (v145)
                          goto LABEL_394;
                        if (v402 >= v492)
                          goto LABEL_356;
                        v405 = v491[v402];
                        if (!v405)
                        {
                          v406 = v402 + 1;
                          if (v402 + 1 >= v492)
                            goto LABEL_356;
                          v405 = v491[v406];
                          if (!v405)
                          {
                            v406 = v402 + 2;
                            if (v402 + 2 >= v492)
                              goto LABEL_356;
                            v405 = v491[v406];
                            if (!v405)
                            {
                              v406 = v402 + 3;
                              if (v402 + 3 >= v492)
                                goto LABEL_356;
                              v405 = v491[v406];
                              if (!v405)
                              {
                                while (1)
                                {
                                  v402 = v406 + 1;
                                  if (__OFADD__(v406, 1))
                                    goto LABEL_395;
                                  if (v402 >= v492)
                                    goto LABEL_356;
                                  v405 = v491[v402];
                                  ++v406;
                                  if (v405)
                                    goto LABEL_338;
                                }
                              }
                            }
                          }
                          v402 = v406;
                        }
LABEL_338:
                        v401 = (v405 - 1) & v405;
                        v404 = __clz(__rbit64(v405)) + (v402 << 6);
                        if (!*(_QWORD *)(v397 + 16))
                          goto LABEL_400;
                      }
                      v407 = 8 * v404;
                      v408 = *(_QWORD *)(*(_QWORD *)(v396 + 48) + v407);
                      v409 = *(_QWORD *)(*(_QWORD *)(v396 + 56) + v407);
                      v410 = *(_QWORD *)(v409 + 16);
                      v411 = sub_249F8B27C(v408);
                      if ((v412 & 1) == 0)
                        goto LABEL_400;
                      if (*(_QWORD *)(*(_QWORD *)(v397 + 56) + 8 * v411) < v410)
                      {
                        v413 = sub_249FA369C(v408, v397);
                        if ((v414 & 1) != 0)
                          goto LABEL_404;
                        if (v413 >= 30)
                          v415 = 30;
                        else
                          v415 = v413;
                        v416 = swift_bridgeObjectRetain();
                        v417 = v415;
                        v155 = v466;
                        v418 = sub_249FB33F0(v416, v417);
                        if (v155)
                          goto LABEL_362;
                        v419 = sub_249FC6DA8(v409, v418);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        sub_249FB2F50(v419);
                        v466 = 0;
                        swift_bridgeObjectRelease();
                      }
                    }
                  }
                  v370 = *(_QWORD *)(v241 + *(int *)(v362 + 48));
                  sub_249F98928(v241, v364, type metadata accessor for VUStreamingGallery.Label);
                  if (*(_QWORD *)(v370 + 16) < 6uLL)
                    goto LABEL_293;
                  v371 = v466;
                  v372 = sub_249FA51A8(v370, (uint64_t *)&v502);
                  v466 = v371;
                  swift_bridgeObjectRelease();
                  v241 = *(_QWORD *)(v372 + 16);
                  v373 = v489;
                  if (v241 < 5)
                    goto LABEL_388;
                  sub_249F9896C(v364, v489, type metadata accessor for VUStreamingGallery.Label);
                  v374 = swift_bridgeObjectRetain();
                  v375 = sub_249FC7144(v374, v372 + 32, 0, 0xBuLL);
                  swift_bridgeObjectRelease();
                  sub_249FA46F8(v375, v373);
                  v376 = v241 - 5;
                  if (v241 == 5)
                    goto LABEL_292;
                  swift_unknownObjectRetain();
                  v241 = 0;
                  do
                  {
                    if (v376 == v241)
                      goto LABEL_381;
                    v377 = *(_QWORD *)(v372 + 8 * v241 + 72);
                    v378 = sub_249FA3824(v377, (uint64_t)v502);
                    if (!v378)
                      goto LABEL_399;
                    v379 = v466;
                    sub_249FB2F50(v378);
                    v466 = v379;
                    if (v379)
                    {
                      swift_bridgeObjectRelease_n();
                      swift_release();
                      swift_bridgeObjectRelease();
                      sub_249F989C0(v451, type metadata accessor for VUStreamingGallery.Label);
                      swift_release();
                      goto LABEL_364;
                    }
                    swift_bridgeObjectRelease();
                    sub_249FB1E70(v377);
                    swift_bridgeObjectRelease();
                    ++v241;
                  }
                  while (v376 != v241);
                  swift_bridgeObjectRelease();
LABEL_292:
                  v364 = v451;
LABEL_293:
                  swift_bridgeObjectRelease();
                  v380 = (uint64_t)v498;
                  v381 = sub_249FA3864(v364, (uint64_t)v498);
                  if (!v381)
                    goto LABEL_401;
                  v107 = (_QWORD *)v381;
                  v382 = v466;
                  isEscapingClosureAtFileLocation = sub_249FA390C(v381, (uint64_t *)&v502);
                  v466 = v382;
                  swift_bridgeObjectRelease();
                  v383 = *(_QWORD *)(isEscapingClosureAtFileLocation + 16);
                  if (v383)
                  {
                    v260 = 0;
                    v384 = (uint64_t *)(isEscapingClosureAtFileLocation + 32);
                    while (1)
                    {
                      v385 = *v384++;
                      v145 = __OFADD__(v260, v385);
                      v260 += v385;
                      if (v145)
                        break;
                      if (!--v383)
                        goto LABEL_300;
                    }
                    __break(1u);
LABEL_367:
                    __break(1u);
LABEL_368:
                    __break(1u);
LABEL_369:
                    __break(1u);
LABEL_370:
                    __break(1u);
LABEL_371:
                    swift_bridgeObjectRelease();

                    goto LABEL_372;
                  }
                  v260 = 0;
LABEL_300:
                  swift_bridgeObjectRelease();
                  v386 = sub_249FA3864(v364, v380);
                  if (!v386)
                  {
LABEL_402:
                    __break(1u);
                    goto LABEL_403;
                  }
                  isEscapingClosureAtFileLocation = v386;
                  v387 = *(_QWORD *)(v386 + 16);
                  if (v387)
                  {
                    v241 = v386 + 32;
                    v107 = v502;
                    v388 = (float)v260;
                    while (1)
                    {
                      v389 = *(_QWORD *)v241;
                      v241 += 8;
                      v260 = v389;
                      v390 = v474[7];
                      v391 = sub_249FA3824(v389, (uint64_t)v107);
                      if (!v391)
                        break;
                      v392 = (float)v390;
                      v393 = *(_QWORD *)(v391 + 16);
                      swift_bridgeObjectRelease();
                      v394 = (float)((float)v393 / v388) * v392;
                      if ((~LODWORD(v394) & 0x7F800000) == 0)
                        goto LABEL_367;
                      if (v394 <= -9.2234e18)
                        goto LABEL_368;
                      if (v394 >= 9.2234e18)
                        goto LABEL_369;
                      if ((uint64_t)v394 <= 1)
                        v395 = 1;
                      else
                        v395 = (uint64_t)v394;
                      sub_249FA4148(v395, 0, v260);
                      if (!--v387)
                        goto LABEL_266;
                    }
LABEL_396:
                    __break(1u);
LABEL_397:
                    __break(1u);
LABEL_398:
                    __break(1u);
LABEL_399:
                    __break(1u);
LABEL_400:
                    __break(1u);
LABEL_401:
                    __break(1u);
                    goto LABEL_402;
                  }
LABEL_266:
                  swift_bridgeObjectRelease();
                  v364 = v451;
                  sub_249F989C0(v451, type metadata accessor for VUStreamingGallery.Label);
                  v361 = (uint64_t)v448;
                  v362 = v452;
                  v363 = v450;
                  v360 = (uint64_t)v491;
                  continue;
                }
                break;
              }
              v360 += 2;
              if (v368 + 1 >= (uint64_t)v488)
                goto LABEL_320;
              v369 = *(_QWORD *)(v487 + 8 * v360);
              if (v369)
              {
LABEL_276:
                v368 = v360;
                goto LABEL_273;
              }
              if (v368 + 2 >= (uint64_t)v488)
              {
LABEL_280:
                v491 = (_QWORD *)v360;
              }
              else
              {
                v369 = *(_QWORD *)(v487 + 8 * (v368 + 2));
                if (v369)
                {
                  v368 += 2;
                  goto LABEL_273;
                }
                v360 = v368 + 3;
                if (v368 + 3 >= (uint64_t)v488)
                {
                  v491 = (_QWORD *)(v368 + 2);
                }
                else
                {
                  v369 = *(_QWORD *)(v487 + 8 * v360);
                  if (v369)
                    goto LABEL_276;
                  while (1)
                  {
                    v368 = v360 + 1;
                    if (__OFADD__(v360, 1))
                      goto LABEL_398;
                    if (v368 >= (uint64_t)v488)
                      break;
                    v369 = *(_QWORD *)(v487 + 8 * v368);
                    ++v360;
                    if (v369)
                      goto LABEL_273;
                  }
                  v368 = (uint64_t)v486;
LABEL_320:
                  v491 = (_QWORD *)v368;
                }
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v363 + 56))(v361, 1, 1, v362);
              v359 = 0;
              goto LABEL_282;
            }
LABEL_408:
            result = swift_release();
            __break(1u);
            return result;
          }
LABEL_407:
          sub_24A01F48C();
          __break(1u);
          goto LABEL_408;
        }
LABEL_403:
        __break(1u);
LABEL_404:
        __break(1u);
LABEL_405:
        sub_24A01F48C();
        __break(1u);
LABEL_406:
        v499 = (_QWORD *)0x8000000000000000;
        goto LABEL_407;
      }
    }
  }
  v496 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_249FB4DA8(v213);
  v215 = sub_249F9B4B0(v212);
  v216 = 0;
  v217 = v212 + 64;
  v218 = *(_BYTE *)(v212 + 32);
  v482 = v214;
  v468 = (uint64_t *)(v212 + 88);
  v483 = (_QWORD *)v213;
  v484 = v212 + 64;
  v485 = (char *)v212;
  while (2)
  {
    if ((v215 & 0x8000000000000000) == 0 && v215 < 1 << v218)
    {
      v221 = (unint64_t)v215 >> 6;
      if ((*(_QWORD *)(v217 + 8 * ((unint64_t)v215 >> 6)) & (1 << v215)) == 0)
        goto LABEL_242;
      if (*(_DWORD *)(v212 + 36) != (_DWORD)v214)
        goto LABEL_243;
      v491 = (_QWORD *)v214;
      *(_QWORD *)&v490 = v216;
      v222 = v487;
      v223 = v478;
      v224 = (uint64_t)&v478[*(int *)(v487 + 48)];
      v225 = *(_QWORD *)(*(_QWORD *)(v212 + 48) + 8 * v215);
      sub_249F9896C(*(_QWORD *)(v212 + 56) + *(_QWORD *)(v492 + 72) * v215, v224, type metadata accessor for VUStreamingGallery.Label);
      *v223 = v225;
      v226 = (uint64_t)v479;
      *v479 = v225;
      sub_249F9896C(v224, v226 + *(int *)(v222 + 48), type metadata accessor for VUStreamingGallery.Label);
      v227 = v480;
      sub_249F98C10(v226, v480, &qword_2578FFA80);
      sub_249F990A0((uint64_t)v223, &qword_2578FFA80);
      v228 = *(int *)(v222 + 48);
      v229 = (uint64_t)&v481[v228];
      sub_249F9896C(v227 + v228, (uint64_t)&v481[v228], type metadata accessor for VUStreamingGallery.Label);
      v230 = v489;
      sub_249F98928(v229, v489, type metadata accessor for VUStreamingGallery.Label);
      sub_249F990A0(v227, &qword_2578FFA80);
      sub_249FB4F5C((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_249F8CC70);
      v232 = v496[2];
      v231 = v496[3];
      if (v232 >= v231 >> 1)
        sub_249F8CC70(v231 > 1, v232 + 1, 1);
      sub_249FB504C(v232, v230);
      v212 = (uint64_t)v485;
      v218 = v485[32];
      v219 = 1 << v218;
      if (v215 >= 1 << v218)
        goto LABEL_244;
      v217 = v484;
      v233 = *(_QWORD *)(v484 + 8 * v221);
      if ((v233 & (1 << v215)) == 0)
        goto LABEL_245;
      if (*((_DWORD *)v485 + 9) != (_DWORD)v491)
        goto LABEL_246;
      v234 = v233 & (-2 << (v215 & 0x3F));
      if (v234)
      {
        v219 = __clz(__rbit64(v234)) | v215 & 0xFFFFFFFFFFFFFFC0;
        v107 = v488;
        isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
        v220 = v483;
      }
      else
      {
        v235 = v221 + 1;
        v236 = (v219 + 63) >> 6;
        v107 = v488;
        isEscapingClosureAtFileLocation = (unint64_t)type metadata accessor for VUStreamingGallery.Label;
        v220 = v483;
        if (v221 + 1 < v236)
        {
          v237 = *(_QWORD *)(v484 + 8 * v235);
          if (v237)
            goto LABEL_131;
          v235 = v221 + 2;
          if (v221 + 2 < v236)
          {
            v237 = *(_QWORD *)(v484 + 8 * v235);
            if (v237)
            {
LABEL_131:
              v219 = __clz(__rbit64(v237)) + (v235 << 6);
            }
            else
            {
              while (v236 - 3 != v221)
              {
                v237 = v468[v221++];
                if (v237)
                {
                  v235 = v221 + 2;
                  goto LABEL_131;
                }
              }
            }
          }
        }
      }
      v216 = v490 + 1;
      v214 = v482;
      v215 = v219;
      if ((_QWORD *)(v490 + 1) == v220)
      {
        swift_release();
        v238 = v496;
        v202 = v465;
        v239 = MEMORY[0x24BEE4AF8];
        goto LABEL_139;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_242:
  __break(1u);
LABEL_243:
  __break(1u);
LABEL_244:
  __break(1u);
LABEL_245:
  __break(1u);
LABEL_246:
  __break(1u);
LABEL_247:
  __break(1u);
LABEL_248:
  __break(1u);
LABEL_249:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v458 + 8))(v453, v454);
  sub_249F990A0(v446, &qword_2578FF830);
LABEL_365:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249FC7728(v435[0]);
  return sub_249FC7728((uint64_t)v436);
}

uint64_t sub_249FB1CF8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24A012FB0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249FC4084(v5);
  *a1 = v2;
  return result;
}

int64_t sub_249FB1D60(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  int64_t result;
  uint64_t v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a3(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = sub_249FC3928(v9, a2);
  *a1 = v6;
  return result;
}

uint64_t sub_249FB1DDC(_QWORD **a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8[2];

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830) - 8);
  v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_24A012FC4(v5);
  v6 = v5[2];
  v8[0] = (uint64_t)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8[1] = v6;
  result = sub_249FC4764(v8, a2);
  *a1 = v5;
  return result;
}

uint64_t sub_249FB1E70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_249F8B27C(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_249FC2408(&qword_2544CA390);
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_249FBE6CC(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_249FB1F0C()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_249FCBC58(0, 0, 1);
  swift_release();
  return v0;
}

uint64_t sub_249FB1F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_249F8B27C(a1), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = type metadata accessor for VUStreamingGallery.Label(0);
    v11 = *(_QWORD *)(v10 - 8);
    sub_249F9896C(v9 + *(_QWORD *)(v11 + 72) * v8, a2, type metadata accessor for VUStreamingGallery.Label);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  else
  {
    v13 = type metadata accessor for VUStreamingGallery.Label(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t sub_249FB202C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[6];
  uint64_t v65;

  v2 = v1;
  v63 = a1;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA80);
  v3 = MEMORY[0x24BDAC7A8](v62);
  v61 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v60 = (uint64_t *)((char *)&v53 - v6);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v59 = (uint64_t *)((char *)&v53 - v8);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v53 - v9;
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  v65 = MEMORY[0x24BEE4B00];
  v11 = *(void **)(v10 + 16);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 256;
  *(_BYTE *)(v12 + 20) = 1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = v10;
  *(_QWORD *)(v12 + 48) = &v65;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_249F98E60;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_33;
  v14 = _Block_copy(aBlock);
  swift_retain_n();
  v15 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlockAndWait_, v14);

  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v15 & 1) != 0)
    goto LABEL_35;
  v17 = v65;
  swift_release();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_249FC9058(v18, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v2 + 40) = v19;
  v20 = swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v2 + 40);
  MEMORY[0x24BDAC7A8](v20);
  *(&v53 - 2) = v63;
  swift_bridgeObjectRetain();
  v22 = sub_249FBC924((uint64_t)sub_249FC920C, (uint64_t)(&v53 - 4), v21);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v65 = MEMORY[0x24BEE4AF8];
  sub_249F8C9C8(0, v23, 0);
  result = sub_249F9B4B0(v22);
  v25 = result;
  v26 = 0;
  v27 = v22 + 64;
  v28 = *(_BYTE *)(v22 + 32);
  v53 = v22 + 88;
  v54 = v23;
  v55 = v24;
  v56 = v22 + 64;
  v57 = v22;
  while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << v28)
  {
    v31 = (unint64_t)v25 >> 6;
    if ((*(_QWORD *)(v27 + 8 * ((unint64_t)v25 >> 6)) & (1 << v25)) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(v22 + 36) != (_DWORD)v24)
      goto LABEL_31;
    v63 = v26;
    v32 = v62;
    v33 = v58;
    v34 = (uint64_t)&v58[*(int *)(v62 + 48)];
    v35 = *(_QWORD *)(v22 + 56);
    v36 = *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * v25);
    v37 = type metadata accessor for VUStreamingGallery.Label(0);
    sub_249F9896C(v35 + *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72) * v25, v34, type metadata accessor for VUStreamingGallery.Label);
    *v33 = v36;
    v38 = v59;
    *v59 = v36;
    sub_249F9896C(v34, (uint64_t)v38 + *(int *)(v32 + 48), type metadata accessor for VUStreamingGallery.Label);
    v39 = (uint64_t)v38;
    v40 = v60;
    sub_249F98C10(v39, (uint64_t)v60, &qword_2578FFA80);
    sub_249F990A0((uint64_t)v33, &qword_2578FFA80);
    v41 = *(int *)(v32 + 48);
    v42 = v61;
    v43 = (uint64_t)v61 + v41;
    v44 = *v40;
    *v61 = *v40;
    sub_249F9896C((uint64_t)v40 + v41, (uint64_t)v42 + v41, type metadata accessor for VUStreamingGallery.Label);
    sub_249F989C0(v43, type metadata accessor for VUStreamingGallery.Label);
    sub_249F990A0((uint64_t)v40, &qword_2578FFA80);
    v45 = v65;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_249F8C9C8(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v65;
    }
    v47 = *(_QWORD *)(v45 + 16);
    v46 = *(_QWORD *)(v45 + 24);
    v22 = v57;
    if (v47 >= v46 >> 1)
    {
      result = sub_249F8C9C8(v46 > 1, v47 + 1, 1);
      v45 = v65;
    }
    *(_QWORD *)(v45 + 16) = v47 + 1;
    *(_QWORD *)(v45 + 8 * v47 + 32) = v44;
    v28 = *(_BYTE *)(v22 + 32);
    v29 = 1 << v28;
    if (v25 >= 1 << v28)
      goto LABEL_32;
    v27 = v56;
    v48 = *(_QWORD *)(v56 + 8 * v31);
    if ((v48 & (1 << v25)) == 0)
      goto LABEL_33;
    LODWORD(v24) = v55;
    if (*(_DWORD *)(v22 + 36) != (_DWORD)v55)
      goto LABEL_34;
    v49 = v48 & (-2 << (v25 & 0x3F));
    if (v49)
    {
      v29 = __clz(__rbit64(v49)) | v25 & 0xFFFFFFFFFFFFFFC0;
      v30 = v54;
    }
    else
    {
      v50 = v31 + 1;
      v51 = (v29 + 63) >> 6;
      v30 = v54;
      if (v31 + 1 < v51)
      {
        v52 = *(_QWORD *)(v56 + 8 * v50);
        if (!v52)
        {
          v50 = v31 + 2;
          if (v31 + 2 >= v51)
            goto LABEL_5;
          v52 = *(_QWORD *)(v56 + 8 * v50);
          if (!v52)
          {
            while (v51 - 3 != v31)
            {
              v52 = *(_QWORD *)(v53 + 8 * v31++);
              if (v52)
              {
                v50 = v31 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_5;
          }
        }
LABEL_20:
        v29 = __clz(__rbit64(v52)) + (v50 << 6);
      }
    }
LABEL_5:
    v26 = v63 + 1;
    v25 = v29;
    if (v63 + 1 == v30)
    {
      swift_release();
      return v45;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_249FB25D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a2;
  v36 = a3;
  v4 = sub_24A01EBA4();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v31 - v7;
  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char **)((char *)&v31 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF858);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA80);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char **)((char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v20 = *a1;
  v21 = (uint64_t)v20 + *(int *)(v18 + 48);
  sub_249F9896C(v35, v21, type metadata accessor for VUStreamingGallery.Label);
  v22 = &v16[*(int *)(v14 + 48)];
  sub_249F9896C(v21, (uint64_t)v16, type metadata accessor for VUStreamingGallery.Label);
  sub_249F9896C(v36, (uint64_t)v22, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_249F9896C((uint64_t)v16, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v28 = *v13 == *(_QWORD *)v22;
      goto LABEL_6;
    }
LABEL_8:
    sub_249F990A0((uint64_t)v16, &qword_2578FF858);
    v28 = 0;
    goto LABEL_9;
  }
  sub_249F9896C((uint64_t)v16, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    goto LABEL_8;
  }
  v23 = v33;
  v24 = v34;
  v25 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v26 = v31;
  v25(v31, v11, v34);
  v27 = v32;
  v25(v32, v22, v24);
  v28 = sub_24A01EB8C();
  v29 = *(void (**)(char *, uint64_t))(v23 + 8);
  v29(v27, v24);
  v29(v26, v24);
LABEL_6:
  sub_249F989C0((uint64_t)v16, type metadata accessor for VUStreamingGallery.Label);
LABEL_9:
  sub_249F990A0((uint64_t)v20, &qword_2578FFA80);
  return v28 & 1;
}

size_t sub_249FB28B4()
{
  uint64_t v0;
  uint64_t v1;
  size_t v2;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_249FA4F54(v0);
  v2 = sub_249FB59E8(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_249FB290C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(_QWORD *@<X8>);
  _QWORD *v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;

  v56 = a1;
  v53 = type metadata accessor for VUStreamingGallery.Label(0);
  v63 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA78);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v53 - v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v9 + 64);
  v57 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v58 = (unint64_t)(v11 + 63) >> 6;
  v59 = v9;
  v54 = v58 - 1;
  v55 = v1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v62 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  v16 = &qword_2578FFA80;
  v60 = v3;
  if (!v13)
    goto LABEL_6;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v18 = (v13 - 1) & v13;
  v19 = v17 | (v62 << 6);
LABEL_5:
  v20 = *(_QWORD *)(v59 + 56);
  *v7 = *(_QWORD *)(*(_QWORD *)(v59 + 48) + 8 * v19);
  v21 = v20 + *(_QWORD *)(v63 + 72) * v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(v16);
  sub_249F9896C(v21, (uint64_t)v7 + *(int *)(v22 + 48), type metadata accessor for VUStreamingGallery.Label);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 0, 1, v22);
  v23 = (uint64_t *)v61;
  while (1)
  {
    sub_249F98C10((uint64_t)v7, (uint64_t)v23, &qword_2578FFA78);
    v28 = __swift_instantiateConcreteTypeFromMangledName(v16);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v23, 1, v28) == 1)
    {
      swift_release();
      if (v15[2])
      {
        sub_249F8B2AC(v56);
        if ((v50 & 1) != 0)
        {
          v51 = swift_bridgeObjectRetain();
          sub_249FB2F50(v51);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      return sub_249FC7728((uint64_t)v14);
    }
    v64 = v18;
    v29 = v16;
    v30 = v7;
    v31 = *v23;
    sub_249F98928((uint64_t)v23 + *(int *)(v28 + 48), (uint64_t)v3, type metadata accessor for VUStreamingGallery.Label);
    sub_249FC7728((uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = v15;
    v34 = sub_249F8B2AC((uint64_t)v3);
    v35 = v15[2];
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (v15[3] >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_249FC2958();
        v15 = v65;
      }
    }
    else
    {
      sub_249FBB160(v37, isUniquelyReferenced_nonNull_native);
      v15 = v65;
      v39 = sub_249F8B2AC((uint64_t)v3);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_49;
      v34 = v39;
    }
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v15[(v34 >> 6) + 8] |= 1 << v34;
      v41 = v15[6] + *(_QWORD *)(v63 + 72) * v34;
      swift_bridgeObjectRetain();
      sub_249F9896C((uint64_t)v3, v41, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)(v15[7] + 8 * v34) = MEMORY[0x24BEE4AF8];
      v42 = v15[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_46;
      v15[2] = v44;
    }
    v45 = v15[7];
    swift_bridgeObjectRelease();
    v46 = *(_QWORD **)(v45 + 8 * v34);
    v47 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v45 + 8 * v34) = v46;
    if ((v47 & 1) == 0)
    {
      v46 = sub_249F89B7C(0, v46[2] + 1, 1, v46);
      *(_QWORD *)(v45 + 8 * v34) = v46;
    }
    v49 = v46[2];
    v48 = v46[3];
    if (v49 >= v48 >> 1)
    {
      v46 = sub_249F89B7C((_QWORD *)(v48 > 1), v49 + 1, 1, v46);
      *(_QWORD *)(v45 + 8 * v34) = v46;
    }
    v7 = v30;
    v46[2] = v49 + 1;
    v46[v49 + 4] = v31;
    v3 = v60;
    sub_249F989C0((uint64_t)v60, type metadata accessor for VUStreamingGallery.Label);
    v14 = sub_249FA3E60;
    v16 = v29;
    v13 = v64;
    if (v64)
      goto LABEL_4;
LABEL_6:
    v24 = v62 + 1;
    if (__OFADD__(v62, 1))
      goto LABEL_47;
    v23 = (uint64_t *)v61;
    if (v24 < v58)
    {
      v25 = *(_QWORD *)(v57 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v26 = v62 + 2;
      ++v62;
      if (v24 + 1 < v58)
      {
        v25 = *(_QWORD *)(v57 + 8 * v26);
        if (v25)
          goto LABEL_12;
        v62 = v24 + 1;
        if (v24 + 2 < v58)
        {
          v25 = *(_QWORD *)(v57 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_9;
          }
          v26 = v24 + 3;
          v62 = v24 + 2;
          if (v24 + 3 < v58)
          {
            v25 = *(_QWORD *)(v57 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                v24 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_48;
                if (v24 >= v58)
                {
                  v62 = v54;
                  goto LABEL_23;
                }
                v25 = *(_QWORD *)(v57 + 8 * v24);
                ++v26;
                if (v25)
                  goto LABEL_9;
              }
            }
LABEL_12:
            v24 = v26;
LABEL_9:
            v18 = (v25 - 1) & v25;
            v19 = __clz(__rbit64(v25)) + (v24 << 6);
            v62 = v24;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v27 = __swift_instantiateConcreteTypeFromMangledName(v16);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 1, 1, v27);
    v18 = 0;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FB2EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v0 + 81) != 1)
    return 0;
  v1 = v0;
  if ((*(_QWORD *)(v0 + 104) & 0x8000000000000000) != 0)
    return 1;
  swift_retain();
  v2 = sub_249FCBC58(0, 0, 1);
  result = swift_release();
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 == (v4 * v5) >> 63)
    return v4 * v5 < v2;
  __break(1u);
  return result;
}

void sub_249FB2F50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v1;
  v6 = *(_QWORD *)(v1[2] + 16);
  v7 = sub_249FCA454();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v8 = swift_allocObject();
  v46 = xmmword_24A0208B0;
  *(_OWORD *)(v8 + 16) = xmmword_24A0208B0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  *(_QWORD *)(v8 + 56) = v9;
  v10 = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  v50 = (uint64_t *)v7;
  v11 = (void *)sub_24A01F09C();
  v12 = *(void **)(v6 + 16);
  v52 = v11;
  v53 = v6;
  v13 = v12;
  sub_24A01F180();
  swift_release();

  if (!v2)
  {
    v14 = v51;
    v45 = 0;
    swift_retain();
    sub_24A005630(a1);
    swift_release();
    v15 = *(_QWORD *)(v14[3] + 16);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v46;
    *(_QWORD *)(v16 + 56) = v9;
    *(_QWORD *)(v16 + 64) = v10;
    *(_QWORD *)(v16 + 32) = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = (void *)sub_24A01F09C();
    *(&v44 - 2) = MEMORY[0x24BDAC7A8](v17);
    *(&v44 - 1) = v15;
    v19 = v18;
    v20 = v45;
    sub_24A01F180();
    swift_release();

    if (!v20)
    {
      v45 = 0;
      swift_retain();
      sub_24A005630(a1);
      swift_release();
      v21 = *(_QWORD *)(a1 + 16);
      if (v21)
      {
        v22 = v51 + 5;
        v23 = v51 + 4;
        swift_bridgeObjectRetain();
        v24 = 0;
        v25 = v49;
        v50 = v23;
        v51 = v22;
        v47 = v21;
        v48 = a1;
        do
        {
          v26 = *(_QWORD *)(a1 + 8 * v24 + 32);
          swift_beginAccess();
          v27 = sub_249F8B27C(v26);
          if ((v28 & 1) != 0)
          {
            v29 = v27;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v31 = *v22;
            v54 = *v22;
            *v22 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_249FC272C();
              v31 = v54;
            }
            v32 = *(_QWORD *)(v31 + 56);
            v33 = type metadata accessor for VUStreamingGallery.Label(0);
            v34 = *(_QWORD *)(v33 - 8);
            v35 = v49;
            sub_249F98928(v32 + *(_QWORD *)(v34 + 72) * v29, v49, type metadata accessor for VUStreamingGallery.Label);
            sub_249FBE9F4(v29, v31, type metadata accessor for VUStreamingGallery.Label);
            *v22 = v31;
            v36 = v35;
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v33);
            v21 = v47;
            a1 = v48;
          }
          else
          {
            v37 = type metadata accessor for VUStreamingGallery.Label(0);
            v36 = v25;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v25, 1, 1, v37);
          }
          v25 = v36;
          sub_249F990A0(v36, &qword_2578FFA68);
          swift_endAccess();
          v38 = v50;
          swift_beginAccess();
          v39 = sub_249F8B27C(v26);
          if ((v40 & 1) != 0)
          {
            v41 = v39;
            v42 = swift_isUniquelyReferenced_nonNull_native();
            v43 = *v38;
            v54 = *v38;
            *v38 = 0x8000000000000000;
            if (!v42)
            {
              sub_249FC25A0();
              v43 = v54;
            }
            sub_249FBE6CC(v41, v43);
            *v38 = v43;
            swift_bridgeObjectRelease();
          }
          ++v24;
          swift_endAccess();
          v22 = v51;
        }
        while (v21 != v24);
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_249FB33F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  float v29;
  float v30;
  float v31;
  float v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  float v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  int64_t v109;
  uint64_t *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  id v121;
  uint64_t v122;
  _QWORD *v123;
  id v124;
  uint64_t result;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t i;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t aBlock[6];
  uint64_t *v138;
  _QWORD *v139;

  v3 = a2;
  v139 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a2 >= 0)
    v4 = a2;
  else
    v4 = a2 + 1;
  v134 = a1;
  if (a2 >= 2)
  {
    v128 = v4;
    v5 = *(_QWORD *)(v2[2] + 16);
    v138 = (uint64_t *)MEMORY[0x24BEE4AF8];
    v6 = *(_QWORD *)(v5 + 16);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = 0;
    *(_BYTE *)(v7 + 24) = 1;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = &v138;
    *(_QWORD *)(v7 + 48) = v5;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_249F98D88;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = (uint64_t)sub_249FCA5C8;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_249F87210;
    aBlock[3] = (uint64_t)&block_descriptor_45;
    v9 = _Block_copy(aBlock);
    swift_retain_n();
    v10 = (id)v6;
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_performBlockAndWait_, v9);

    _Block_release(v9);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v9 & 1) != 0)
      goto LABEL_31;
    v11 = (unint64_t)v138;
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    v6 = sub_249FC6BFC(v11, v134);
    v130 = v132;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6 >> 62)
      goto LABEL_32;
    v12 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (i = v3; v12; i = v3)
    {
      v135 = v6 & 0xC000000000000001;
      v13 = (_QWORD *)MEMORY[0x24BEE4B00];
      v3 = 4;
      v133 = v6;
      while (1)
      {
        v14 = v135 ? (id)MEMORY[0x24BD071F4](v3 - 4, v6) : *(id *)(v6 + 8 * v3);
        v15 = v14;
        v16 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
          break;
        v17 = objc_msgSend(v14, sel_embedding);
        if (v17
          && (v18 = v17,
              v19 = sub_24A01EAFC(),
              v21 = v20,
              v18,
              sub_249F92358(v19, v21),
              (v22 = objc_msgSend(v15, sel_contextualEmbedding)) != 0))
        {
          v23 = v22;
          v24 = (uint64_t)v13;
          v25 = v12;
          v6 = sub_24A01EAFC();
          v27 = v26;

          sub_249F92358(v6, v27);
          v28 = objc_msgSend(v15, sel_identifier);
          objc_msgSend(v15, sel_confidence);
          v30 = v29;
          objc_msgSend(v15, sel_quality);
          v32 = v31;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v24;
          v35 = sub_249F8B27C((uint64_t)v28);
          v36 = *(_QWORD *)(v24 + 16);
          v37 = (v34 & 1) == 0;
          v38 = v36 + v37;
          if (__OFADD__(v36, v37))
            goto LABEL_29;
          v6 = v34;
          if (*(_QWORD *)(v24 + 24) >= v38)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_249FC226C();
          }
          else
          {
            sub_249FBA62C(v38, isUniquelyReferenced_nonNull_native);
            v39 = sub_249F8B27C((uint64_t)v28);
            if ((v6 & 1) != (v40 & 1))
              goto LABEL_122;
            v35 = v39;
          }
          v12 = v25;
          v41 = v30 * v32;
          v13 = (_QWORD *)aBlock[0];
          if ((v6 & 1) != 0)
          {
            *(float *)(*(_QWORD *)(aBlock[0] + 56) + 4 * v35) = v41;
          }
          else
          {
            *(_QWORD *)(aBlock[0] + 8 * (v35 >> 6) + 64) |= 1 << v35;
            *(_QWORD *)(v13[6] + 8 * v35) = v28;
            *(float *)(v13[7] + 4 * v35) = v41;
            v42 = v13[2];
            v43 = __OFADD__(v42, 1);
            v44 = v42 + 1;
            if (v43)
              goto LABEL_30;
            v13[2] = v44;
          }

          swift_bridgeObjectRelease();
          v6 = v133;
        }
        else
        {

        }
        ++v3;
        if (v16 == v12)
          goto LABEL_34;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v12 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v45 = sub_249FB5B1C((uint64_t)v13, &qword_2578FF7A8, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_249FB6E80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249FCA390);
    swift_bridgeObjectRelease();
    aBlock[0] = (uint64_t)v45;
    sub_249FC8B68(aBlock, v131);
    v132 = v130;
    if (v130)
      goto LABEL_124;
    swift_bridgeObjectRelease();
    swift_release();
    v46 = aBlock[0];
    v47 = *(_QWORD *)(aBlock[0] + 16);
    v2 = (uint64_t *)MEMORY[0x24BEE4AF8];
    if (v47)
    {
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_249F8C9C8(0, v47, 0);
      v2 = (uint64_t *)aBlock[0];
      v48 = (uint64_t *)(v46 + 32);
      v49 = *(_QWORD *)(aBlock[0] + 16);
      do
      {
        v51 = *v48;
        v48 += 2;
        v50 = v51;
        aBlock[0] = (uint64_t)v2;
        v52 = v2[3];
        if (v49 >= v52 >> 1)
        {
          sub_249F8C9C8(v52 > 1, v49 + 1, 1);
          v2 = (uint64_t *)aBlock[0];
        }
        v2[2] = v49 + 1;
        v2[v49++ + 4] = v50;
        --v47;
      }
      while (v47);
    }
    swift_release();
    swift_bridgeObjectRelease();
    v53 = v2[2];
    if (v53)
    {
      if (v53 >= v128 >> 1)
        v54 = v128 >> 1;
      else
        v54 = v2[2];
      if (v54 > v53)
      {
LABEL_121:
        __break(1u);
LABEL_122:
        sub_24A01F48C();
        __break(1u);
        goto LABEL_123;
      }
      v55 = 0;
      v56 = v53 / v54;
      do
      {
        if (v55 >= v53)
          break;
        if (__OFADD__(v55, v56))
          v57 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v57 = v55 + v56;
        if (v55 < 0)
          goto LABEL_116;
        if (v55 >= (unint64_t)v2[2])
          goto LABEL_117;
        v58 = v2[v55 + 4];
        v59 = v139;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v59 = sub_249F89B7C(0, v59[2] + 1, 1, v59);
        v61 = v59[2];
        v60 = v59[3];
        v62 = v61 + 1;
        if (v61 >= v60 >> 1)
          v59 = sub_249F89B7C((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
        v59[2] = v62;
        v59[v61 + 4] = v58;
        v139 = v59;
        v55 = v57;
      }
      while (v62 != v54);
    }
    swift_bridgeObjectRelease();
    a1 = v134;
    v3 = i;
  }
  v63 = v139;
  v64 = v139[2];
  v43 = __OFSUB__(v3, v64);
  v65 = v3 - v64;
  if (v43)
    goto LABEL_119;
  v136 = v65;
  v66 = *(_QWORD *)(a1 + 16);
  v67 = swift_bridgeObjectRetain();
  v68 = MEMORY[0x24BEE4AF8];
  if (v66)
  {
    v69 = 0;
    v70 = v67 + 32;
    while (1)
    {
      v71 = v69 <= v66 ? v66 : v69;
      while (1)
      {
        if (v69 == v71)
          goto LABEL_114;
        v72 = *(_QWORD *)(v70 + 8 * v69++);
        v73 = v63[2];
        if (!v73)
          goto LABEL_73;
        if (v63[4] != v72)
          break;
LABEL_64:
        if (v69 == v66)
          goto LABEL_78;
      }
      if (v73 != 1)
        break;
LABEL_73:
      v76 = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v68;
      if ((v76 & 1) == 0)
      {
        v2 = aBlock;
        sub_249F8C9C8(0, *(_QWORD *)(v68 + 16) + 1, 1);
        v68 = aBlock[0];
      }
      v78 = *(_QWORD *)(v68 + 16);
      v77 = *(_QWORD *)(v68 + 24);
      if (v78 >= v77 >> 1)
      {
        v2 = aBlock;
        sub_249F8C9C8(v77 > 1, v78 + 1, 1);
        v68 = aBlock[0];
      }
      *(_QWORD *)(v68 + 16) = v78 + 1;
      *(_QWORD *)(v68 + 8 * v78 + 32) = v72;
      if (v69 == v66)
        goto LABEL_78;
    }
    v74 = 5;
    while (1)
    {
      v75 = v74 - 3;
      if (__OFADD__(v74 - 4, 1))
        break;
      if (v63[v74] == v72)
        goto LABEL_64;
      ++v74;
      if (v75 == v73)
        goto LABEL_73;
    }
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
LABEL_78:
  swift_bridgeObjectRelease();
  v79 = *(_QWORD *)(v68 + 16);
  if (v79)
  {
    v80 = v131 + 32;
    v81 = (uint64_t *)(v68 + 32);
    swift_beginAccess();
    v82 = (uint64_t *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v84 = *v81++;
      v83 = v84;
      v85 = *(_QWORD *)v80;
      if (!*(_QWORD *)(*(_QWORD *)v80 + 16) || (v86 = sub_249F8B27C(v83), (v87 & 1) == 0))
      {
        v2 = v82;
        v100 = sub_249F8B27C(v83);
        if ((v101 & 1) != 0)
        {
          v102 = v100;
          v103 = swift_isUniquelyReferenced_nonNull_native();
          v138 = v82;
          if ((v103 & 1) == 0)
          {
            v2 = (uint64_t *)&v138;
            sub_249FC25A0();
            v82 = v138;
          }
          sub_249FBE6CC(v102, (uint64_t)v82);
          swift_bridgeObjectRelease();
        }
        goto LABEL_82;
      }
      v88 = v68;
      v89 = v80;
      v90 = *(_QWORD *)(*(_QWORD *)(v85 + 56) + 8 * v86);
      v2 = v82;
      v91 = swift_isUniquelyReferenced_nonNull_native();
      v138 = v2;
      v93 = sub_249F8B27C(v83);
      v94 = v2[2];
      v95 = (v92 & 1) == 0;
      v96 = v94 + v95;
      if (__OFADD__(v94, v95))
        goto LABEL_115;
      v97 = v92;
      if (v2[3] >= v96)
      {
        if ((v91 & 1) != 0)
        {
          v82 = v138;
          if ((v92 & 1) == 0)
            goto LABEL_96;
        }
        else
        {
          v2 = (uint64_t *)&v138;
          sub_249FC25A0();
          v82 = v138;
          if ((v97 & 1) == 0)
            goto LABEL_96;
        }
      }
      else
      {
        sub_249FBAB88(v96, v91);
        v2 = v138;
        v98 = sub_249F8B27C(v83);
        if ((v97 & 1) != (v99 & 1))
          goto LABEL_122;
        v93 = v98;
        v82 = v138;
        if ((v97 & 1) == 0)
        {
LABEL_96:
          v82[(v93 >> 6) + 8] |= 1 << v93;
          v104 = 8 * v93;
          *(_QWORD *)(v82[6] + v104) = v83;
          *(_QWORD *)(v82[7] + v104) = v90;
          v105 = v82[2];
          v43 = __OFADD__(v105, 1);
          v106 = v105 + 1;
          if (v43)
            goto LABEL_118;
          v82[2] = v106;
          goto LABEL_81;
        }
      }
      *(_QWORD *)(v82[7] + 8 * v93) = v90;
LABEL_81:
      swift_bridgeObjectRelease();
      v80 = v89;
      v68 = v88;
LABEL_82:
      if (!--v79)
        goto LABEL_101;
    }
  }
  v82 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_101:
  swift_release();
  swift_bridgeObjectRetain_n();
  v107 = sub_249FB5B1C((uint64_t)v82, &qword_2578FF838, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_249FB7218, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249FCA390);
  swift_bridgeObjectRelease();
  v138 = v107;
  sub_249FB1CF8((uint64_t *)&v138);
  if (!v132)
  {
    swift_bridgeObjectRelease();
    v108 = (uint64_t)v138;
    v109 = v138[2];
    if (v109)
    {
      v110 = v82;
      v138 = (uint64_t *)MEMORY[0x24BEE4AF8];
      v2 = (uint64_t *)&v138;
      sub_249F8C9C8(0, v109, 0);
      v111 = (uint64_t)v138;
      v112 = v138[2];
      v113 = 32;
      do
      {
        v114 = *(_QWORD *)(v108 + v113);
        v138 = (uint64_t *)v111;
        v115 = *(_QWORD *)(v111 + 24);
        if (v112 >= v115 >> 1)
        {
          v2 = (uint64_t *)&v138;
          sub_249F8C9C8(v115 > 1, v112 + 1, 1);
          v111 = (uint64_t)v138;
        }
        *(_QWORD *)(v111 + 16) = v112 + 1;
        *(_QWORD *)(v111 + 8 * v112 + 32) = v114;
        v113 += 16;
        ++v112;
        --v109;
      }
      while (v109);
      swift_release();
      v82 = v110;
      v116 = v136;
      if ((v136 & 0x8000000000000000) == 0)
        goto LABEL_108;
    }
    else
    {
      swift_release();
      v111 = MEMORY[0x24BEE4AF8];
      v116 = v136;
      if ((v136 & 0x8000000000000000) == 0)
      {
LABEL_108:
        if (*(_QWORD *)(v111 + 16) < v116)
        {
LABEL_120:
          __break(1u);
          goto LABEL_121;
        }
        sub_249FC8C08(v111, v111 + 32, 0, (2 * v116) | 1);
        swift_bridgeObjectRelease();
        sub_249FCA454();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
        v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = xmmword_24A0208B0;
        v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
        *(_QWORD *)(v117 + 56) = v127;
        v118 = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
        *(_QWORD *)(v117 + 64) = v118;
        *(_QWORD *)(v117 + 32) = v134;
        swift_bridgeObjectRetain();
        swift_retain();
        v119 = (void *)sub_24A01F09C();
        MEMORY[0x24BDAC7A8](v119);
        v121 = v120;
        sub_24A01F180();
        swift_release();

        swift_retain();
        sub_24A005630(v134);
        swift_release();
        v122 = swift_allocObject();
        *(_OWORD *)(v122 + 16) = xmmword_24A0208B0;
        v123 = v139;
        *(_QWORD *)(v122 + 56) = v127;
        *(_QWORD *)(v122 + 64) = v118;
        *(_QWORD *)(v122 + 32) = v123;
        swift_retain();
        swift_bridgeObjectRetain();
        v82 = (uint64_t *)sub_24A01F09C();
        MEMORY[0x24BDAC7A8](v82);
        v2 = (uint64_t *)v124;
        sub_24A01F180();
LABEL_112:
        swift_release();

        v126 = v139;
        swift_bridgeObjectRelease();
        return (uint64_t)v126;
      }
    }
    __break(1u);
    goto LABEL_112;
  }
LABEL_123:
  swift_release();
  __break(1u);
LABEL_124:
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_249FB4140(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249FB41D0(void *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  unsigned __int8 v11;
  id v12;
  void *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t result;
  uint64_t *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t *v66;
  char v67;
  char v68;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v61 - v8;
  v10 = objc_msgSend(a1, sel_type);
  if ((v10 & 0x80000000) != 0 || (v11 = v10, v10 >= 0x100))
  {
    sub_24A01F3B4();
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_retain();
    v12 = objc_msgSend(a1, sel_embedding);
    if (v12)
    {
      v13 = v12;
      v14 = (uint64_t *)sub_24A01EAFC();
      v65 = v15;
      v66 = v14;

    }
    else
    {
      v65 = 0xF000000000000000;
      v66 = 0;
    }
    v16 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16)
                    + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
    swift_beginAccess();
    v17 = *v16;
    if (*(_QWORD *)(v17 + 16) && (v18 = sub_249F8B0C4(v11), (v19 & 1) != 0))
    {
      v64 = 0;
      v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18) + 24);
    }
    else
    {
      v63 = 0;
      v64 = 1;
    }
    v20 = objc_msgSend(a1, sel_contextualEmbedding);
    if (v20)
    {
      v21 = v20;
      v62 = sub_24A01EAFC();
      v61[0] = v22;

    }
    else
    {
      v62 = 0;
      v61[0] = 0xF000000000000000;
    }
    v23 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16)
                    + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
    swift_beginAccess();
    v24 = *v23;
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_249F8B0C4(v11), (v26 & 1) != 0))
    {
      v27 = 0;
      v28 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v25) + 32);
    }
    else
    {
      v28 = 0;
      v27 = 1;
    }
    v29 = objc_msgSend(a1, sel_moment, v61[0]);
    if (v29)
    {
      v30 = v29;
      sub_24A01EB98();

      v31 = sub_24A01EBA4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 0, 1, v31);
    }
    else
    {
      v32 = sub_24A01EBA4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
    }
    v33 = objc_msgSend(a1, sel_asset);
    v61[1] = a2;
    if (v33)
    {
      v34 = v33;
      sub_24A01EB98();

      v35 = sub_24A01EBA4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v7, 0, 1, v35);
    }
    else
    {
      v36 = sub_24A01EBA4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 1, 1, v36);
    }
    v68 = 3;
    objc_msgSend(a1, sel_confidence);
    v38 = v37;
    objc_msgSend(a1, sel_identifier);
    v67 = 1;
    v60 = (uint64_t)v7;
    v59 = (uint64_t)v9;
    v58 = v27;
    v57 = v28;
    v39 = v66;
    v40 = (uint64_t)v9;
    v41 = (uint64_t)v7;
    v42 = v65;
    v43 = v62;
    v44 = v61[0];
    sub_249FE1C30(v11, 0xFFFFLL, v66, v65, v63, v64, v62, v61[0], v57, v58, v59, v60, (uint64_t)&v68, v38);
    swift_release();
    sub_249F92438(v43, v44);
    sub_249F92438((uint64_t)v39, v42);
    sub_249F990A0(v41, &qword_2544CAD70);
    sub_249F990A0(v40, &qword_2544CAD70);
    swift_retain();
    v45 = objc_msgSend(a1, sel_identifier);
    v46 = objc_msgSend(a1, sel_embedding);
    if (v46)
    {
      v47 = v46;
      v48 = sub_24A01EAFC();
      v50 = v49;

    }
    else
    {
      v48 = 0;
      v50 = 0xF000000000000000;
    }
    v51 = objc_msgSend(a1, sel_contextualEmbedding);
    if (v51)
    {
      v52 = v51;
      v53 = sub_24A01EAFC();
      v55 = v54;

    }
    else
    {
      v53 = 0;
      v55 = 0xF000000000000000;
    }
    sub_24A005098((uint64_t)v45, v48, v50, v53, v55);
    swift_release();
    sub_249F92438(v53, v55);
    return sub_249F92438(v48, v50);
  }
  return result;
}

uint64_t VUStreamingGallery.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  v2 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  v4 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t VUStreamingGallery.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  v2 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  v4 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_249FB4868()
{
  return sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_55, (uint64_t)sub_249FCA5FC, (uint64_t)&block_descriptor_58);
}

uint64_t sub_249FB488C()
{
  return sub_249FB48B0((uint64_t)sub_249FCA530, (uint64_t)&block_descriptor_49, (uint64_t)sub_249FCA548, (uint64_t)&block_descriptor_52);
}

uint64_t sub_249FB48B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t);
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v21 = a3;
  v22 = a4;
  v7 = sub_24A01EDE4();
  v8 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A01EDCC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01EDC0();
  v28 = a1;
  v29 = v4;
  aBlock = MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v26 = sub_24A007D98;
  v27 = a2;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  sub_24A01EDD8();
  MEMORY[0x24BD07014](0, v10, v14, v15);
  _Block_release(v15);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  swift_release();
  v28 = v21;
  v29 = v4;
  aBlock = MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v26 = sub_24A007D98;
  v27 = v22;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  sub_24A01EDD8();
  v23 = MEMORY[0x24BEE4AF8];
  sub_249FA2B24((unint64_t *)&qword_2544CA290, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA298);
  sub_249F98C68((unint64_t *)&qword_2544CA2A0, &qword_2544CA298, MEMORY[0x24BEE12C8]);
  sub_24A01F228();
  MEMORY[0x24BD07014](0, v10, v14, v18);
  _Block_release(v18);
  v17(v14, v11);
  v16(v10, v20);
  return swift_release();
}

uint64_t sub_249FB4B10(uint64_t a1)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_249FB4B84(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_24A006BA4(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 5, 8 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FB4C54@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_24A006BB8(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_249F98C10(v10, a2, &qword_2578FF830);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_24A01F408();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_249FB4D9C()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_249FB4DA8(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    return sub_249F8CC70(result, v5, 0);
  }
  return result;
}

uint64_t sub_249FB4E0C(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_24A01F3B4();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_24A01EFC4();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_249FB4EA4()
{
  _QWORD **v0;
  _QWORD *v1;
  _QWORD *result;

  v1 = *v0;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)result)
  {
    result = sub_249F89B7C(result, v1[2] + 1, 1, v1);
    *v0 = result;
  }
  return result;
}

_QWORD *sub_249FB4EEC(_QWORD *result)
{
  _QWORD **v1;
  unint64_t v2;

  v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    result = sub_249F89B7C((_QWORD *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    *v1 = result;
  }
  return result;
}

unint64_t sub_249FB4F30(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249FB4F50()
{
  return sub_249FB4F5C((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_249F8CA60);
}

uint64_t sub_249FB4F5C(uint64_t (*a1)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
    return a1(0, *(_QWORD *)(v2 + 16) + 1, 1);
  return result;
}

uint64_t sub_249FB4FB8(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return sub_249F8CA60(v2 > 1, result + 1, 1);
  return result;
}

uint64_t sub_249FB4FE0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(*v2 + 16) = a1 + 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF778);
  return sub_249F98C10(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, &qword_2578FF778);
}

uint64_t sub_249FB504C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  return sub_249F98928(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, type metadata accessor for VUStreamingGallery.Label);
}

_QWORD *sub_249FB50B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC38);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_249FB6124(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_249FCA390();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_249FB5198(uint64_t a1)
{
  return sub_249FB57CC(a1, (uint64_t *)&unk_2544CAC38, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249FB62B8);
}

uint64_t sub_249FB51AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 8 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC38);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FB5314(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD00);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

_QWORD *sub_249FB5488(uint64_t a1)
{
  return sub_249FB57CC(a1, (uint64_t *)&unk_2544CAC38, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249FB644C);
}

size_t sub_249FB549C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF768);
  v3 = *(_QWORD *)(sub_24A01EBA4() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_249FB65E0(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_249FCA390();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_249FB5594(uint64_t a1)
{
  return sub_249FB5B1C(a1, &qword_2578FF878, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_249FB6930, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249FCA390);
}

size_t sub_249FB55B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF768);
  v3 = *(_QWORD *)(sub_24A01EBA4() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_249FB6B30(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_249FCA390();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_249FB56A8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_249FC64AC((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_249FB579C(uint64_t a1)
{
  return sub_249FB5B1C(a1, &qword_2578FF7A8, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_249FB6E80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249FCA390);
}

_QWORD *sub_249FB57B8(uint64_t a1)
{
  return sub_249FB57CC(a1, &qword_2578FF8B8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_249FB7020);
}

_QWORD *sub_249FB57CC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 25;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 3);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_249FCA390();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

size_t sub_249FB58B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF828);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830) - 8) + 80);
      v10 = sub_249FB73BC(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_249FCA390();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_249FB59E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF888);
  v3 = *(_QWORD *)(type metadata accessor for VUStreamingGallery.Label(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_249FB76C0(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_249FCA390();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_249FB5B00(uint64_t a1)
{
  return sub_249FB5B1C(a1, &qword_2578FF7B0, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_249FB797C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249FCA5CC);
}

_QWORD *sub_249FB5B1C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v10 = v9 - 32;
  if (v9 < 32)
    v10 = v9 - 17;
  v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  v11 = a3(v18, v8 + 4, v4, a1);
  v12 = v18[0];
  v13 = v18[1];
  v14 = v18[2];
  v15 = v18[3];
  v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_249FB5C04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        type metadata accessor for VUIndexObservation();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FB5D84(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VUStreamingGallery.Label(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01F4EC();
  sub_249F9896C(a1, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_24A01F4F8();
  }
  sub_24A01F528();
  v14 = sub_24A01F240();
  *(_QWORD *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  result = sub_249F98928(a1, a3[6] + *(_QWORD *)(v11 + 72) * v14, type metadata accessor for VUStreamingGallery.Label);
  *(_QWORD *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_249FB5F50(uint64_t a1, _QWORD *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_24A01EBA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VUStreamingGallery.Label(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A01F4EC();
  sub_249F9896C(a1, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_24A01EE20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_24A01F4F8();
  }
  sub_24A01F528();
  v14 = sub_24A01F240();
  *(_QWORD *)((char *)a2 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  result = sub_249F98928(a1, a2[6] + *(_QWORD *)(v11 + 72) * v14, type metadata accessor for VUStreamingGallery.Label);
  *(double *)(a2[7] + 8 * v14) = a3;
  ++a2[2];
  return result;
}

_QWORD *sub_249FB6124(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_249FB62B8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_249FB644C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249FB65E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A01EBA4();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_249F990A0((uint64_t)v10, &qword_2544CAD70);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_249FB6930(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *(_BYTE *)v11 = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v16);
    *(_QWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    v11 += 16;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249FB6B30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A01EBA4();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_249F990A0((uint64_t)v10, &qword_2544CAD70);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_249FB6E80(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v12);
    *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    *(_DWORD *)(a2 + 8) = v13;
    a2 += 16;
    if (v9 == a3)
      goto LABEL_35;
  }
  v14 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v10)
    goto LABEL_30;
  v15 = *(_QWORD *)(v4 + 8 * v14);
  if (v15)
    goto LABEL_19;
  v8 += 2;
  if (v14 + 1 >= v10)
  {
    v7 = 0;
    v8 = v14;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v4 + 8 * v8);
  if (v15)
  {
LABEL_15:
    v14 = v8;
LABEL_19:
    v17 = __clz(__rbit64(v15));
    v7 = (v15 - 1) & v15;
    v12 = v17 + (v14 << 6);
    v8 = v14;
    goto LABEL_8;
  }
  v16 = v14 + 2;
  if (v14 + 2 >= v10)
    goto LABEL_30;
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_18:
    v14 = v16;
    goto LABEL_19;
  }
  v8 = v14 + 3;
  if (v14 + 3 >= v10)
  {
    v7 = 0;
    v8 = v14 + 2;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v4 + 8 * v8);
  if (v15)
    goto LABEL_15;
  v16 = v14 + 4;
  if (v14 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
    goto LABEL_18;
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249FB7020(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_249FB7218(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v12);
    *a2 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    a2[1] = v13;
    a2 += 2;
    if (v9 == a3)
      goto LABEL_35;
  }
  v14 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v10)
    goto LABEL_30;
  v15 = *(_QWORD *)(v4 + 8 * v14);
  if (v15)
    goto LABEL_19;
  v8 += 2;
  if (v14 + 1 >= v10)
  {
    v7 = 0;
    v8 = v14;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v4 + 8 * v8);
  if (v15)
  {
LABEL_15:
    v14 = v8;
LABEL_19:
    v17 = __clz(__rbit64(v15));
    v7 = (v15 - 1) & v15;
    v12 = v17 + (v14 << 6);
    v8 = v14;
    goto LABEL_8;
  }
  v16 = v14 + 2;
  if (v14 + 2 >= v10)
    goto LABEL_30;
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_18:
    v14 = v16;
    goto LABEL_19;
  }
  v8 = v14 + 3;
  if (v14 + 3 >= v10)
  {
    v7 = 0;
    v8 = v14 + 2;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v4 + 8 * v8);
  if (v15)
    goto LABEL_15;
  v16 = v14 + 4;
  if (v14 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
    goto LABEL_18;
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249FB73BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v35 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v33 = a1;
  v19 = 0;
  v20 = 0;
  v34 = (unint64_t)(63 - v16) >> 6;
  v31 = v34 - 1;
  v21 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = type metadata accessor for VUStreamingGallery.Label(0);
    sub_249F9896C(v27 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v23, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)&v11[*(int *)(v37 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v23);
    sub_249F98C10((uint64_t)v11, (uint64_t)v14, &qword_2578FF830);
    sub_249F98C10((uint64_t)v14, a2, &qword_2578FF830);
    if (v20 == v21)
    {
      a3 = v21;
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v36 + 72);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_8;
LABEL_9:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v24 >= v34)
      goto LABEL_33;
    v25 = *(_QWORD *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        v18 = 0;
        v19 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v35 + 8 * v19);
        if (v25)
          goto LABEL_14;
        v26 = v24 + 2;
        if (v24 + 2 >= v34)
          goto LABEL_33;
        v25 = *(_QWORD *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          v24 = v26;
          goto LABEL_18;
        }
        v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          v25 = *(_QWORD *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            v24 = v19;
            goto LABEL_18;
          }
          v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v25 = *(_QWORD *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v24 >= v34)
              {
                v18 = 0;
                v19 = v31;
                goto LABEL_37;
              }
              v25 = *(_QWORD *)(v35 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_249FB76C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_249F9896C(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
    sub_249F98928((uint64_t)v12, (uint64_t)v15, type metadata accessor for VUStreamingGallery.Label);
    result = sub_249F98928((uint64_t)v15, a2, type metadata accessor for VUStreamingGallery.Label);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_249FB797C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 16 * v12;
    v14 = *(_QWORD *)v13;
    LOBYTE(v13) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)a2 = v14;
    *(_BYTE *)(a2 + 8) = v13;
    a2 += 16;
    if (v9 == a3)
      goto LABEL_35;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v15);
  if (v16)
    goto LABEL_19;
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    v7 = 0;
    v8 = v15;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    v15 = v8;
LABEL_19:
    v18 = __clz(__rbit64(v16));
    v7 = (v16 - 1) & v16;
    v12 = v18 + (v15 << 6);
    v8 = v15;
    goto LABEL_8;
  }
  v17 = v15 + 2;
  if (v15 + 2 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v15 = v17;
    goto LABEL_19;
  }
  v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    v7 = 0;
    v8 = v15 + 2;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
    goto LABEL_15;
  v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_18;
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_249FB7B20(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_249F89B7C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FB7C68(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_249F89B68(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_24A01EBA4();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FB7DD0(uint64_t a1, uint64_t a2)
{
  return sub_249FB82AC(a1, a2, &qword_2578FFB60);
}

double sub_249FB7DDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_249F8B0F8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249FC0CE0();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_249F989B0((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_249FBDB54(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_249FB7ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249F8B20C(a1);
  LOBYTE(a1) = v7;
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249FC0EC4();
      v10 = v14;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = sub_24A01EBA4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v6, v12);
    v13 = *(_QWORD *)(v10 + 56) + 24 * v6;
    *(_QWORD *)a2 = *(_QWORD *)v13;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v13 + 8);
    sub_249FBDD28(v6, v10);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  return result;
}

unint64_t sub_249FB7FD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_249F8B20C(a1);
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v1;
    v13 = *v2;
    *v2 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249FC18BC();
      v8 = v13;
    }
    v9 = *(_QWORD *)(v8 + 48);
    v10 = sub_24A01EBA4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v4, v10);
    v11 = *(unsigned int *)(*(_QWORD *)(v8 + 56) + 4 * v4);
    sub_249FBE17C(v4, v8);
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  return v11 | ((unint64_t)((v6 & 1) == 0) << 32);
}

uint64_t sub_249FB80C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_249F8B2AC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_249FC2958();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for VUStreamingGallery.Label(0);
  sub_249F989C0(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, type metadata accessor for VUStreamingGallery.Label);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_249FBEBBC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_249FB8198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_249F8B20C(a1);
  LOBYTE(a1) = v7;
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_249FC3190();
      v10 = v15;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = sub_24A01EBA4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v6, v12);
    v13 = *(_QWORD *)(v10 + 56) + 24 * v6;
    v14 = *(_QWORD *)(v13 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_QWORD *)(a2 + 16) = v14;
    sub_249FBDD28(v6, v10);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t sub_249FB82A0(uint64_t a1, uint64_t a2)
{
  return sub_249FB82AC(a1, a2, (uint64_t *)&unk_2578FF7F8);
}

uint64_t sub_249FB82AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_249F8B0F8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v5;
  v14 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_249FC35E0(a3);
    v11 = v14;
  }
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v8);
  sub_249FBEF2C(v8, v11);
  *v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_249FB8388(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CABE0);
  v6 = sub_24A01F3F0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_249F989B0(v24, v35);
      }
      else
      {
        sub_249F93A3C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24A01F4EC();
      sub_24A01EE98();
      result = sub_24A01F528();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_249F989B0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249FB8684(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int64_t v49;
  char *v50;
  uint64_t v51;

  v3 = v2;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAD0);
  v48 = a2;
  v10 = sub_24A01F3F0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v50 = v8;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v45 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v43 = v2;
  v44 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v46 = v9;
  v47 = v6;
  v51 = v5;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44)
      break;
    v24 = v45;
    v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v44)
        goto LABEL_34;
      v25 = v45[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v44)
              goto LABEL_34;
            v25 = v45[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    v49 = v18;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v50, v28, v51);
      v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v29;
      v31 = v29[1];
      v32 = v29[2];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v50, v28, v51);
      v33 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v33;
      v31 = v33[1];
      v32 = v33[2];
      swift_bridgeObjectRetain();
      sub_249F93CE0(v31, v32);
    }
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A01EE14();
    v34 = -1 << *(_BYTE *)(v11 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      v6 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      v6 = v47;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v50, v51);
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 24 * v19);
    *v20 = v30;
    v20[1] = v31;
    v20[2] = v32;
    ++*(_QWORD *)(v11 + 16);
    v9 = v46;
    v18 = v49;
  }
  swift_release();
  v3 = v43;
  v24 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v9 + 32);
  if (v41 >= 64)
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v41;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_249FB8A64(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2F8);
  v36 = a2;
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v8 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v34)
          goto LABEL_33;
        v21 = v35[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v34)
            goto LABEL_33;
          v21 = v35[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v34)
            {
LABEL_33:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_40;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v35[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v34)
                  goto LABEL_33;
                v21 = v35[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v19);
      v29 = *v28;
      v30 = v28[1];
      v31 = v28[2];
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_249F93CE0(v30, v31);
      }
      result = sub_24A01F4E0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v16);
      *v17 = v29;
      v17[1] = v30;
      v17[2] = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249FB8D50(uint64_t a1, char a2)
{
  return sub_249FBA8D8(a1, a2, &qword_2544CA2F0);
}

uint64_t sub_249FB8D5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB00);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        sub_249F93CE0(v31, *((unint64_t *)&v31 + 1));
      result = MEMORY[0x24BD073A4](*(_QWORD *)(v7 + 40), v28, 1);
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249FB9024(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAE0);
  v42 = a2;
  v10 = sub_24A01F3F0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A01EE14();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_249FB93B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAD8);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_24A01F4E0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249FB966C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v4 = sub_24A01EBA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v2;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAB0);
  v9 = sub_24A01F3F0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v35 = v39;
LABEL_42:
    *v35 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v38 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v42 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v22 >= v40)
    {
      swift_release();
      v35 = v39;
      v23 = v41;
      if ((v38 & 1) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v8 + 32);
        if (v36 >= 64)
          bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v36;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
        break;
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v42))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v4);
    v27 = *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v21);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A01EE14();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v4);
    *(_DWORD *)(*(_QWORD *)(v10 + 56) + 4 * v19) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  v25 = v22 + 2;
  if (v25 >= v40)
  {
LABEL_34:
    swift_release();
    v35 = v39;
    if ((v38 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v24 = v41[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v40)
      goto LABEL_34;
    v24 = v41[v17];
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_249FB99FC(uint64_t a1, char a2)
{
  return sub_249FBA8D8(a1, a2, &qword_2544CA390);
}

uint64_t sub_249FB9A08(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA388);
  result = sub_24A01F3F0();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_24A01F4E0();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_249FB9D38(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_24A01EBA4();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAB8);
  v8 = sub_24A01F3F0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A01EE14();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_249FBA0D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAC0);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_24A01F4E0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249FBA388(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC28);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_24A01F4E0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_249FBA62C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8F8);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v17);
      result = sub_24A01F4E0();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_249FBA8CC(uint64_t a1, char a2)
{
  return sub_249FBA8D8(a1, a2, &qword_2578FFB58);
}

uint64_t sub_249FBA8D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_24A01F3F0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_24A01F4E0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_249FBAB88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB30);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_24A01F4E0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_249FBAE30(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for VUStreamingGallery.Label(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB20);
  v39 = a2;
  result = sub_24A01F3F0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_249F98928(v25, (uint64_t)v7, type metadata accessor for VUStreamingGallery.Label);
      else
        sub_249F9896C(v25, (uint64_t)v7, type metadata accessor for VUStreamingGallery.Label);
      result = sub_24A01F4E0();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_249F98928((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for VUStreamingGallery.Label);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_249FBB160(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v3 = v2;
  v5 = type metadata accessor for VUStreamingGallery.Label(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB48);
  v10 = (_QWORD *)sub_24A01F3F0();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15)
          goto LABEL_23;
        v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v15)
            goto LABEL_23;
          v22 = v12[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_30;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v22 = v12[v17];
                ++v23;
                if (v22)
                  goto LABEL_20;
              }
            }
            v17 = v23;
          }
        }
LABEL_20:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v20;
      if ((a2 & 1) != 0)
      {
        sub_249F98928(v24, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_249F9896C(v24, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      result = sub_249FB5D84((uint64_t)v8, v18, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_249FBB3BC(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v3 = v2;
  v5 = type metadata accessor for VUStreamingGallery.Label(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB28);
  v10 = (_QWORD *)sub_24A01F3F0();
  if (*(_QWORD *)(v9 + 16))
  {
    v26 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15)
          goto LABEL_23;
        v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v15)
            goto LABEL_23;
          v21 = v12[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v26;
                goto LABEL_30;
              }
              v24 = 1 << *(_BYTE *)(v9 + 32);
              if (v24 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v24;
              v3 = v26;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v21 = v12[v17];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v17 = v22;
          }
        }
LABEL_20:
        v14 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v19;
      if ((a2 & 1) != 0)
        sub_249F98928(v23, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      else
        sub_249F9896C(v23, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      result = sub_249FB5F50((uint64_t)v8, v10, *(double *)(*(_QWORD *)(v9 + 56) + 8 * v19));
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_249FBB604(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v3 = v2;
  v5 = type metadata accessor for VUStreamingGallery.Label(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF848);
  v10 = (_QWORD *)sub_24A01F3F0();
  if (*(_QWORD *)(v9 + 16))
  {
    v26 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15)
          goto LABEL_23;
        v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v15)
            goto LABEL_23;
          v21 = v12[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v26;
                goto LABEL_30;
              }
              v24 = 1 << *(_BYTE *)(v9 + 32);
              if (v24 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v24;
              v3 = v26;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v21 = v12[v17];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v17 = v22;
          }
        }
LABEL_20:
        v14 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v19;
      if ((a2 & 1) != 0)
        sub_249F98928(v23, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      else
        sub_249F9896C(v23, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      result = sub_249FB5D84((uint64_t)v8, *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19), v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_249FBB84C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF18);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = v3;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v31[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v31[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v31[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      result = MEMORY[0x24BD073A4](*(_QWORD *)(v7 + 40), v27, 1);
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249FBBB04(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int64_t v49;
  char *v50;
  uint64_t v51;

  v3 = v2;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF818);
  v48 = a2;
  v10 = sub_24A01F3F0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v50 = v8;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v45 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v43 = v2;
  v44 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v46 = v9;
  v47 = v6;
  v51 = v5;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44)
      break;
    v24 = v45;
    v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v44)
        goto LABEL_34;
      v25 = v45[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v44)
              goto LABEL_34;
            v25 = v45[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    v49 = v18;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v50, v28, v51);
      v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v29;
      v31 = v29[1];
      v32 = v29[2];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v50, v28, v51);
      v33 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v33;
      v31 = v33[1];
      v32 = v33[2];
      sub_249F93CE0(*v33, v31);
      swift_bridgeObjectRetain();
    }
    sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A01EE14();
    v34 = -1 << *(_BYTE *)(v11 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      v6 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      v6 = v47;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v50, v51);
    v20 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 24 * v19);
    *v20 = v30;
    v20[1] = v31;
    v20[2] = v32;
    ++*(_QWORD *)(v11 + 16);
    v9 = v46;
    v18 = v49;
  }
  swift_release();
  v3 = v43;
  v24 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v9 + 32);
  if (v41 >= 64)
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v41;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_249FBBEE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAE8);
  v36 = a2;
  v6 = sub_24A01F3F0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24A01F4EC();
    sub_24A01EE98();
    result = sub_24A01F528();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249FBC1F8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_24A01F3F0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_24A01F4EC();
    sub_24A01EE98();
    result = sub_24A01F528();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_249FBC500(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAC8);
  result = sub_24A01F3F0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v35 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v10;
    v34 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v33;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = *(_QWORD *)(v5 + 56) + 16 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v24 = *(_DWORD *)(v22 + 8);
      v25 = *(_QWORD *)v22;
      result = sub_24A01F4E0();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v23;
      v16 = *(_QWORD *)(v7 + 56) + 16 * v15;
      *(_QWORD *)v16 = v25;
      *(_DWORD *)(v16 + 8) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_249FBC7B4(uint64_t isStackAllocationSafe, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v5;
  int v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v5 = (_QWORD *)isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v6 = a3 & 1;
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_249FBCC10((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v5, a2, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_249FBCC10((unint64_t *)v11, v8, v5, a2, v6);
    MEMORY[0x24BD07950](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_249FBC924(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t *, char *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(uint64_t *, char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_249FBCEFC((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_249FBCEFC((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x24BD07950](v11, -1, -1);
  }
  return a2;
}

unint64_t sub_249FBCA94(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_249FC775C((unint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v4 = sub_249FC775C((unint64_t)v9, v6, v4, a2);
    MEMORY[0x24BD07950](v9, -1, -1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_249FBCC10(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  _QWORD *v39;

  v30 = a2;
  v38 = a5;
  v33 = a4;
  v31 = a1;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA88);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = type metadata accessor for VUStreamingGallery.Label(0);
  v36 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v15 = 0;
  v39 = a3;
  v18 = a3[8];
  v17 = a3 + 8;
  v16 = v18;
  v19 = 1 << *((_BYTE *)v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v34 = v17;
  v35 = (unint64_t)(v19 + 63) >> 6;
  while (v21)
  {
    v22 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v23 = v22 | (v15 << 6);
LABEL_18:
    v27 = v39;
    sub_249F9896C(v39[6] + *(_QWORD *)(v36 + 72) * v23, (uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    v28 = *(_QWORD *)(v27[7] + 8 * v23);
    sub_249F9896C((uint64_t)v14, (uint64_t)v10, type metadata accessor for VUStreamingGallery.Label);
    v29 = *(int *)(v37 + 48);
    *(_QWORD *)&v10[v29] = v28;
    sub_249F98928((uint64_t)v10, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)&v8[v29] = v28;
    if ((v38 & 1) != 0)
    {
      sub_249F989C0((uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      result = sub_249F989C0((uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    }
    else
    {
      sub_249F989C0((uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      result = sub_249F989C0((uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
      if (v28 == v33)
      {
        *(unint64_t *)((char *)v31 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        v24 = __OFADD__(v32++, 1);
        if (v24)
          goto LABEL_30;
      }
    }
  }
  v24 = __OFADD__(v15++, 1);
  if (v24)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v35)
    return sub_249FBD3BC(v31, v30, v32, v39);
  v25 = v34[v15];
  if (v25)
  {
LABEL_17:
    v21 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v15 << 6);
    goto LABEL_18;
  }
  v26 = v15 + 1;
  if (v15 + 1 >= v35)
    return sub_249FBD3BC(v31, v30, v32, v39);
  v25 = v34[v26];
  if (v25)
    goto LABEL_16;
  v26 = v15 + 2;
  if (v15 + 2 >= v35)
    return sub_249FBD3BC(v31, v30, v32, v39);
  v25 = v34[v26];
  if (v25)
    goto LABEL_16;
  v26 = v15 + 3;
  if (v15 + 3 >= v35)
    return sub_249FBD3BC(v31, v30, v32, v39);
  v25 = v34[v26];
  if (v25)
  {
LABEL_16:
    v15 = v26;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v35)
      return sub_249FBD3BC(v31, v30, v32, v39);
    v25 = v34[v15];
    ++v26;
    if (v25)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249FBCEFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *, char *);
  uint64_t v30;

  v29 = a4;
  v23 = a2;
  v24 = a1;
  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v28 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    v20 = *(_QWORD *)(a3 + 56);
    v30 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    sub_249F9896C(v20 + *(_QWORD *)(v28 + 72) * v16, (uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    v21 = v29(&v30, v9);
    result = sub_249F989C0((uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    if (v4)
      return result;
    if ((v21 & 1) != 0)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v25++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27)
    return sub_249FBD5EC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v27)
    return sub_249FBD5EC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v27)
    return sub_249FBD5EC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v27)
    return sub_249FBD5EC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      return sub_249FBD5EC(v24, v23, v25, (_QWORD *)a3);
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249FBD148(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA390);
  result = sub_24A01F3FC();
  v9 = result;
  v31 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v31[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v31[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v31[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    result = sub_24A01F4E0();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = swift_bridgeObjectRetain();
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249FBD3BC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t *v26;

  v26 = a1;
  v7 = type metadata accessor for VUStreamingGallery.Label(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF848);
  result = sub_24A01F3FC();
  v15 = (_QWORD *)result;
  v25 = a2;
  if (a2 < 1)
    v16 = 0;
  else
    v16 = *v26;
  v17 = 0;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v17 << 6);
    }
    else
    {
      v20 = v17 + 1;
      if (__OFADD__(v17, 1))
        goto LABEL_30;
      if (v20 >= v25)
        return (uint64_t)v15;
      v21 = v26[v20];
      ++v17;
      if (!v21)
      {
        v17 = v20 + 1;
        if (v20 + 1 >= v25)
          return (uint64_t)v15;
        v21 = v26[v17];
        if (!v21)
        {
          v17 = v20 + 2;
          if (v20 + 2 >= v25)
            return (uint64_t)v15;
          v21 = v26[v17];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v25)
              return (uint64_t)v15;
            v21 = v26[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_31;
                if (v17 >= v25)
                  return (uint64_t)v15;
                v21 = v26[v17];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v17 = v22;
          }
        }
      }
LABEL_24:
      v16 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v17 << 6);
    }
    sub_249F9896C(a4[6] + *(_QWORD *)(v8 + 72) * v19, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
    v23 = *(_QWORD *)(a4[7] + 8 * v19);
    sub_249F98928((uint64_t)v13, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    result = sub_249FB5D84((uint64_t)v11, v23, v15);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      return (uint64_t)v15;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_249FBD5EC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  v36 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB20);
  result = sub_24A01F3FC();
  v14 = result;
  v34 = a1;
  v35 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v35)
        return v14;
      v21 = v34[v20];
      ++v16;
      if (!v21)
      {
        v16 = v20 + 1;
        if (v20 + 1 >= v35)
          return v14;
        v21 = v34[v16];
        if (!v21)
        {
          v16 = v20 + 2;
          if (v20 + 2 >= v35)
            return v14;
          v21 = v34[v16];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v35)
              return v14;
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v16 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v16 >= v35)
                  return v14;
                v21 = v34[v16];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v16 = v22;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v16 << 6);
    }
    v23 = *(_QWORD *)(a4[6] + 8 * v19);
    v24 = *(_QWORD *)(v36 + 72);
    sub_249F9896C(a4[7] + v24 * v19, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
    sub_249F98928((uint64_t)v12, v37, type metadata accessor for VUStreamingGallery.Label);
    result = sub_24A01F4E0();
    v25 = -1 << *(_BYTE *)(v14 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v17 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v17 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v17 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v17 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v28) = v23;
    result = sub_249F98928(v37, *(_QWORD *)(v14 + 56) + v28 * v24, type metadata accessor for VUStreamingGallery.Label);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249FBD8F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB30);
  result = sub_24A01F3FC();
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    result = sub_24A01F4E0();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_249FBDB54(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_24A01F4EC();
        swift_bridgeObjectRetain();
        sub_24A01EE98();
        v10 = sub_24A01F528();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBDD28(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_24A01EBA4();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_24A01EE14();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 24 * a1;
            v25 = (__int128 *)(v23 + 24 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 24))
            {
              v26 = *v25;
              *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
              *(_OWORD *)v24 = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBDFD4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = sub_24A01F4E0();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = v16 + 24 * v3;
            v18 = (__int128 *)(v16 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              v9 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBE17C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_24A01EBA4();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_24A01EE14();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_DWORD *)(v23 + 4 * a1);
            v25 = (_DWORD *)(v23 + 4 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBE420(unint64_t a1, uint64_t a2)
{
  return sub_249FBE9F4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

unint64_t sub_249FBE42C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_24A01EBA4();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_24A01EE14();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBE6CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_24A01F4E0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBE860(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_24A01F4E0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_DWORD *)(v15 + 4 * v3);
            v17 = (_DWORD *)(v15 + 4 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBE9F4(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v7);
        result = sub_24A01F4E0();
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13)
            goto LABEL_6;
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        v16 = (_QWORD *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1)
          *v16 = *v12;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBEBBC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v4 = sub_24A01EBA4();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = a2 + 64;
  v14 = -1 << *(_BYTE *)(a2 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    v16 = ~v14;
    result = sub_24A01F234();
    v17 = a2 + 64;
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v18 = *(_QWORD *)(v7 + 72);
      v19 = (uint64_t)v47;
      v49 = v18;
      v50 = (result + 1) & v16;
      do
      {
        v20 = v18 * v15;
        sub_249F9896C(*(_QWORD *)(a2 + 48) + v18 * v15, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        sub_24A01F4EC();
        sub_249F9896C((uint64_t)v12, v19, type metadata accessor for VUStreamingGallery.Label);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v48 = a1;
          v21 = v12;
          v22 = v16;
          v23 = a2;
          v24 = v17;
          v25 = v6;
          v26 = v44;
          v27 = v45;
          v28 = v19;
          v29 = v46;
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v44, v28, v46);
          sub_249FA2B24(&qword_2578FF758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
          sub_24A01EE20();
          v30 = *(void (**)(char *, uint64_t))(v27 + 8);
          v6 = v25;
          v17 = v24;
          a2 = v23;
          v16 = v22;
          v12 = v21;
          v31 = v29;
          v19 = (uint64_t)v47;
          a1 = v48;
          v30(v26, v31);
        }
        else
        {
          sub_24A01F4F8();
        }
        v32 = sub_24A01F528();
        result = sub_249F989C0((uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        v33 = v32 & v16;
        if ((uint64_t)a1 >= (uint64_t)v50)
        {
          v18 = v49;
          if (v33 < v50)
            goto LABEL_5;
        }
        else
        {
          v18 = v49;
          if (v33 >= v50)
            goto LABEL_14;
        }
        if ((uint64_t)a1 >= (uint64_t)v33)
        {
LABEL_14:
          v34 = *(_QWORD *)(a2 + 48);
          result = v34 + v18 * a1;
          if ((uint64_t)(v18 * a1) < v20 || result >= v34 + v20 + v18)
          {
            result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v18 * a1 != v20)
          {
            result = swift_arrayInitWithTakeBackToFront();
          }
          v35 = *(_QWORD *)(a2 + 56);
          v36 = (_QWORD *)(v35 + 8 * a1);
          v37 = (_QWORD *)(v35 + 8 * v15);
          if (a1 != v15 || (a1 = v15, v36 >= v37 + 1))
          {
            *v36 = *v37;
            a1 = v15;
          }
        }
LABEL_5:
        v15 = (v15 + 1) & v16;
      }
      while (((*(_QWORD *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    v38 = (uint64_t *)(v17 + 8 * (a1 >> 6));
    v39 = *v38;
    v40 = (-1 << a1) - 1;
  }
  else
  {
    v38 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    v40 = *v38;
    v39 = (-1 << a1) - 1;
  }
  *v38 = v40 & v39;
  v41 = *(_QWORD *)(a2 + 16);
  v42 = __OFSUB__(v41, 1);
  v43 = v41 - 1;
  if (v42)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v43;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FBEF2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A01F234();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_24A01F4EC();
        swift_bridgeObjectRetain();
        sub_24A01EE98();
        v9 = sub_24A01F528();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_249FBF100(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_249FBFDD8(a1, a2, a3, a4, &qword_2578FFB60);
}

_OWORD *sub_249FBF10C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_249F8B0F8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
        return sub_249F989B0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_249FC0CE0();
      goto LABEL_7;
    }
    sub_249FB8388(v15, a4 & 1);
    v21 = sub_249F8B0F8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_249FC0850(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBF23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v6 = (_QWORD **)v5;
  v30 = a2;
  v31 = a3;
  v10 = sub_24A01EBA4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_249F8B20C(a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    v22 = *v6;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      v24 = v23[1];
      v25 = v23[2];
      swift_bridgeObjectRelease();
      result = sub_249F92358(v24, v25);
      v27 = v30;
      *v23 = a1;
      v23[1] = v27;
      v23[2] = v31;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_249FC0EC4();
    goto LABEL_7;
  }
  sub_249FB8684(v19, a5 & 1);
  v28 = sub_249F8B20C(a4);
  if ((v20 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_24A01F48C();
    __break(1u);
    return result;
  }
  v16 = v28;
  v22 = *v6;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_249FC08B8(v16, (uint64_t)v13, a1, v30, v31, v22);
}

uint64_t sub_249FBF3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_249F8B27C(a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_249FC1160();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 24 * v14);
      v22 = v21[1];
      v23 = v21[2];
      swift_bridgeObjectRelease();
      result = sub_249F92358(v22, v23);
      *v21 = a1;
      v21[1] = a2;
      v21[2] = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_QWORD *)(v20[6] + 8 * v14) = a4;
    v25 = (_QWORD *)(v20[7] + 24 * v14);
    *v25 = a1;
    v25[1] = a2;
    v25[2] = a3;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FB8A64(result, a5 & 1);
  result = sub_249F8B27C(a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBF52C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_249F8B0C4(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_249FC1338();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      result = sub_249F92358(*(_QWORD *)v19, *(_QWORD *)(v19 + 8));
      *(_QWORD *)v19 = a1;
      *(_QWORD *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FB8D5C(result, a4 & 1);
  result = sub_249F8B0C4(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBF668(uint64_t a1, char a2, float a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_24A01EBA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_249F8B20C(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(float *)(v20[7] + 4 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_249FC18BC();
      goto LABEL_7;
    }
    sub_249FB966C(result, a2 & 1);
    result = sub_249F8B20C(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      v14 = result;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      return sub_249FC096C(v14, (uint64_t)v11, v20, a3);
    }
  }
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBF7C0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_249F8B27C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_24A01EBA4();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_249FC0A08(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_249FC1AFC();
      goto LABEL_7;
    }
    sub_249FB9A08(v13, a3 & 1);
    v20 = sub_249F8B27C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_249FC0A08(v10, a2, a1, v16);
    }
  }
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBF8E4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_24A01EBA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_249F8B20C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_249FC1D1C();
    goto LABEL_7;
  }
  sub_249FB9D38(result, a3 & 1);
  result = sub_249F8B20C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_24A01F48C();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_249FC0A94(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_249FBFA34(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249F8B27C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_249FC20E0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a2;
    *(_QWORD *)(v16[7] + v18) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBA388(result, a3 & 1);
  result = sub_249F8B27C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBFB60(uint64_t a1, char a2, float a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249F8B27C(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_249FC226C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(float *)(v16[7] + 4 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a1;
    *(float *)(v16[7] + 4 * v10) = a3;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBA62C(result, a2 & 1);
  result = sub_249F8B27C(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FBFC84(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249F8B27C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_249FC2408(&qword_2578FFB58);
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBA8D8(result, a3 & 1, &qword_2578FFB58);
  result = sub_249F8B27C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

void sub_249FBFDCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_249FBFDD8(a1, a2, a3, a4, &qword_2544CAC60);
}

void sub_249FBFDD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v5;
  v12 = *v5;
  v14 = sub_249F8B0F8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_249FC35E0(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a2;
    v24[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_249FBC1F8(v17, a4 & 1, a5);
  v22 = sub_249F8B0F8(a2, a3);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_24A01F48C();
  __break(1u);
}

uint64_t sub_249FBFF4C(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249F8B27C(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_249FC25A0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a1;
    *(double *)(v16[7] + v18) = a3;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBAB88(result, a2 & 1);
  result = sub_249F8B27C(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FC0074(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_249F8B2AC(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_249FC2958();
    goto LABEL_7;
  }
  sub_249FBB160(v16, a3 & 1);
  v22 = sub_249F8B2AC(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_24A01F48C();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_249F9896C(a2, (uint64_t)v10, type metadata accessor for VUStreamingGallery.Label);
  return sub_249FC0B74(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_249FC01D0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_249F8B27C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for VUStreamingGallery.Label(0) - 8) + 72) * v10;
        return sub_249FCA4EC(a1, v18);
      }
      return sub_249FC0C0C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_249FC272C();
      goto LABEL_7;
    }
    sub_249FBAE30(v13, a3 & 1);
    v20 = sub_249F8B27C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_249FC0C0C(v10, a2, a1, v16);
    }
  }
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FC02EC(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249F8B0C4(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_249FC2FF0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBB84C(result, a3 & 1);
  result = sub_249F8B0C4(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FC0420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (_QWORD **)v5;
  v28 = a2;
  v29 = a3;
  v10 = sub_24A01EBA4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_249F8B20C(a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    v22 = *v6;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_249F92358(*v23, v23[1]);
      result = swift_bridgeObjectRelease();
      v25 = v28;
      *v23 = a1;
      v23[1] = v25;
      v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_249FC3190();
    goto LABEL_7;
  }
  sub_249FBBB04(v19, a5 & 1);
  v26 = sub_249F8B20C(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_24A01F48C();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v6;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_249FC08B8(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_249FC05A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_249F8B0F8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_249FC342C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_249FBBEE4(v15, a4 & 1);
  v21 = sub_249F8B0F8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

void sub_249FC0700(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_249FBFDD8(a1, a2, a3, a4, (uint64_t *)&unk_2578FF7F8);
}

uint64_t sub_249FC070C(uint64_t a1, uint64_t a2, char a3, float a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_249F8B27C(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_249FC3788();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      *(_QWORD *)v19 = a1;
      *(float *)(v19 + 8) = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a2;
    v21 = v18[7] + 16 * v12;
    *(_QWORD *)v21 = a1;
    *(float *)(v21 + 8) = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FBC500(result, a3 & 1);
  result = sub_249F8B27C(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

_OWORD *sub_249FC0850(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_249F989B0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_249FC08B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a6[6];
  v13 = sub_24A01EBA4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v15 = (_QWORD *)(a6[7] + 24 * a1);
  *v15 = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16 = a6[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a6[2] = v18;
  return result;
}

uint64_t sub_249FC096C(unint64_t a1, uint64_t a2, _QWORD *a3, float a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = sub_24A01EBA4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(float *)(a3[7] + 4 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_249FC0A08(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_24A01EBA4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_249FC0A94(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_24A01EBA4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_249FC0B2C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_249FC0B74(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for VUStreamingGallery.Label(0);
  result = sub_249F98928(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for VUStreamingGallery.Label);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_249FC0C0C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  result = sub_249F98928(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for VUStreamingGallery.Label);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_249FC0C98(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void *sub_249FC0CE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CABE0);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_249F93A3C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_249F989B0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC0EC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  const void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v40 = sub_24A01EBA4();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAD0);
  v35 = v0;
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = *(_QWORD *)(v2 + 16);
  v42 = v3;
  if (!v4)
  {
    result = (void *)swift_release();
    v33 = v42;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v5 = v3;
  result = (void *)(v3 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  v37 = (const void *)(v2 + 64);
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    result = memmove(result, v37, 8 * v7);
    v5 = v42;
  }
  v9 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v41 = v2;
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v38;
  v14 = v39;
  v15 = v40;
  v16 = v42;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v43 = v9;
      v18 = v17 | (v9 << 6);
      v19 = v41;
      goto LABEL_12;
    }
    v28 = v9 + 1;
    v19 = v41;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v37 + v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *((_QWORD *)v37 + v30);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v43 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v13 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(_QWORD *)(v19 + 48) + v20, v15);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 24 * v18;
    v23 = (uint64_t *)(v21 + 24 * v18);
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(_QWORD *)(v16 + 48) + v20, v14, v15);
    v27 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v22);
    *v27 = v24;
    v27[1] = v25;
    v27[2] = v26;
    swift_bridgeObjectRetain();
    result = (void *)sub_249F93CE0(v25, v26);
    v9 = v43;
  }
  v31 = v28 + 2;
  if (v31 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v35;
    v33 = v42;
    goto LABEL_28;
  }
  v29 = *((_QWORD *)v37 + v31);
  if (v29)
  {
    v30 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v37 + v30);
    ++v31;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC1160()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2F8);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v23 = v20;
    v23[1] = v21;
    v23[2] = v22;
    swift_bridgeObjectRetain();
    result = (void *)sub_249F93CE0(v21, v22);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC132C()
{
  return sub_249FC2408(&qword_2544CA2F0);
}

void *sub_249FC1338()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB00);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)sub_249F93CE0(v16, *((unint64_t *)&v16 + 1));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC14E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAE0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC1710()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAD8);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC18BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_24A01EBA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAB0);
  v6 = *v0;
  v7 = sub_24A01F3E4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 4 * v18;
    v21 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_DWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC1AF0()
{
  return sub_249FC2408(&qword_2544CA390);
}

void *sub_249FC1AFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA388);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC1D1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAB8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC1F40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAC0);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC20E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC28);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC226C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF8F8);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 4 * v15;
    v19 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC23FC()
{
  return sub_249FC2408(&qword_2578FFB58);
}

void *sub_249FC2408(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24A01F3E4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC25A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB30);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC272C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB20);
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_249F9896C(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_249F98928((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for VUStreamingGallery.Label);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC2958()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB48);
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_249F9896C(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for VUStreamingGallery.Label);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_249F98928((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC2B90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB28);
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_249F9896C(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for VUStreamingGallery.Label);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20);
    result = (void *)sub_249F98928((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC2DC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF848);
  v5 = *v0;
  v6 = sub_24A01F3E4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_249F9896C(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for VUStreamingGallery.Label);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19);
    result = (void *)sub_249F98928((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC2FF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF18);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC3190()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  const void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v40 = sub_24A01EBA4();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF818);
  v35 = v0;
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = *(_QWORD *)(v2 + 16);
  v42 = v3;
  if (!v4)
  {
    result = (void *)swift_release();
    v33 = v42;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v5 = v3;
  result = (void *)(v3 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  v37 = (const void *)(v2 + 64);
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    result = memmove(result, v37, 8 * v7);
    v5 = v42;
  }
  v9 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v41 = v2;
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v38;
  v14 = v39;
  v15 = v40;
  v16 = v42;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v43 = v9;
      v18 = v17 | (v9 << 6);
      v19 = v41;
      goto LABEL_12;
    }
    v28 = v9 + 1;
    v19 = v41;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v37 + v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *((_QWORD *)v37 + v30);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v43 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v13 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(_QWORD *)(v19 + 48) + v20, v15);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 24 * v18;
    v23 = (uint64_t *)(v21 + 24 * v18);
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(_QWORD *)(v16 + 48) + v20, v14, v15);
    v27 = (uint64_t *)(*(_QWORD *)(v16 + 56) + v22);
    *v27 = v24;
    v27[1] = v25;
    v27[2] = v26;
    sub_249F93CE0(v24, v25);
    result = (void *)swift_bridgeObjectRetain();
    v9 = v43;
  }
  v31 = v28 + 2;
  if (v31 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v35;
    v33 = v42;
    goto LABEL_28;
  }
  v29 = *((_QWORD *)v37 + v31);
  if (v29)
  {
    v30 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v37 + v30);
    ++v31;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249FC342C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAE8);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_249FC35E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24A01F3E4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249FC3788()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAC8);
  v2 = *v0;
  v3 = sub_24A01F3E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_DWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_DWORD *)(v22 + 8) = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

int64_t sub_249FC3928(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  int64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int8x16_t *v33;
  int8x16_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *__dst;
  unint64_t v112;
  char *v113;
  char *v114;

  v4 = a1[1];
  result = sub_24A01F438();
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_249FC5408(0, v4, 1, a1, a2);
      return result;
    }
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    v104 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v45 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
      if (v45 < 2)
      {
LABEL_121:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      v95 = *v102;
      while (1)
      {
        v96 = v45 - 2;
        if (v45 < 2)
          goto LABEL_142;
        if (!v95)
          goto LABEL_159;
        v97 = *(_QWORD *)&v9[16 * v96 + 32];
        v98 = *(_QWORD *)&v9[16 * v45 + 24];
        sub_249FC586C((uint64_t *)(v95 + 8 * v97), (uint64_t *)(v95 + 8 * *(_QWORD *)&v9[16 * v45 + 16]), v95 + 8 * v98, __dst, a2);
        if (v2)
          goto LABEL_121;
        if (v98 < v97)
          goto LABEL_143;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24A012ED4((uint64_t)v9);
        if (v96 >= *((_QWORD *)v9 + 2))
          goto LABEL_144;
        v99 = &v9[16 * v96 + 32];
        *(_QWORD *)v99 = v97;
        *((_QWORD *)v99 + 1) = v98;
        v100 = *((_QWORD *)v9 + 2);
        if (v45 > v100)
          goto LABEL_145;
        memmove(&v9[16 * v45 + 16], &v9[16 * v45 + 32], 16 * (v100 - v45));
        *((_QWORD *)v9 + 2) = v100 - 1;
        v45 = v100 - 1;
        if (v100 <= 2)
          goto LABEL_121;
      }
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v103 = *a1 + 16;
  v101 = *a1 - 8;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v109 = v4;
  v110 = *a1;
  while (1)
  {
    v12 = v10++;
    if (v10 >= v4)
      goto LABEL_37;
    v13 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
      goto LABEL_147;
    v14 = *(_QWORD *)(v11 + 8 * v12);
    v15 = sub_249F8B27C(*(_QWORD *)(v11 + 8 * v10));
    if ((v16 & 1) == 0)
      goto LABEL_148;
    v107 = v12;
    v17 = *(_QWORD *)(v13 + 56);
    v18 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v15) + 16);
    v19 = sub_249F8B27C(v14);
    if ((v20 & 1) == 0)
      goto LABEL_149;
    v112 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v19) + 16);
    v10 = v107 + 2;
    if (v107 + 2 >= v4)
      goto LABEL_26;
    if (!*(_QWORD *)(v13 + 16))
      goto LABEL_152;
    v21 = *(_QWORD *)(v13 + 56);
    v22 = (uint64_t *)(v103 + 8 * v107);
    while (1)
    {
      v23 = *(v22 - 1);
      v24 = sub_249F8B27C(*v22);
      if ((v25 & 1) == 0)
        goto LABEL_129;
      v26 = *(_QWORD *)(*(_QWORD *)(v21 + 8 * v24) + 16);
      v27 = sub_249F8B27C(v23);
      if ((v28 & 1) == 0)
      {
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      if (v112 < v18 == *(_QWORD *)(*(_QWORD *)(v21 + 8 * v27) + 16) >= v26)
        break;
      ++v22;
      if (v109 == ++v10)
      {
        v4 = v109;
        v10 = v109;
        goto LABEL_26;
      }
    }
    v4 = v109;
LABEL_26:
    if (v112 >= v18)
    {
      v12 = v107;
      goto LABEL_37;
    }
    v12 = v107;
    if (v10 < v107)
      goto LABEL_155;
    if (v107 < v10)
    {
      v29 = v10 - 1;
      v30 = v107;
      do
      {
        if (v30 != v29)
        {
          if (!v11)
            goto LABEL_158;
          v31 = *(_QWORD *)(v11 + 8 * v30);
          *(_QWORD *)(v11 + 8 * v30) = *(_QWORD *)(v11 + 8 * v29);
          *(_QWORD *)(v11 + 8 * v29) = v31;
        }
        v76 = ++v30 < v29--;
      }
      while (v76);
    }
LABEL_37:
    if (v10 < v4)
      break;
LABEL_57:
    if (v10 < v12)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_24A012ABC(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v44 = *((_QWORD *)v9 + 2);
    v43 = *((_QWORD *)v9 + 3);
    v45 = v44 + 1;
    if (v44 >= v43 >> 1)
      v9 = sub_24A012ABC((char *)(v43 > 1), v44 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v45;
    v114 = v9;
    v46 = v9 + 32;
    v47 = &v9[16 * v44 + 32];
    *(_QWORD *)v47 = v12;
    *((_QWORD *)v47 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        v48 = v45 - 1;
        if (v45 >= 4)
        {
          v53 = &v46[16 * v45];
          v54 = *((_QWORD *)v53 - 8);
          v55 = *((_QWORD *)v53 - 7);
          v59 = __OFSUB__(v55, v54);
          v56 = v55 - v54;
          if (v59)
            goto LABEL_131;
          v58 = *((_QWORD *)v53 - 6);
          v57 = *((_QWORD *)v53 - 5);
          v59 = __OFSUB__(v57, v58);
          v51 = v57 - v58;
          v52 = v59;
          if (v59)
            goto LABEL_132;
          v60 = v45 - 2;
          v61 = &v46[16 * v45 - 32];
          v63 = *(_QWORD *)v61;
          v62 = *((_QWORD *)v61 + 1);
          v59 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          if (v59)
            goto LABEL_134;
          v59 = __OFADD__(v51, v64);
          v65 = v51 + v64;
          if (v59)
            goto LABEL_137;
          if (v65 >= v56)
          {
            v83 = &v46[16 * v48];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v59 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v59)
              goto LABEL_141;
            v76 = v51 < v86;
            goto LABEL_94;
          }
        }
        else
        {
          if (v45 != 3)
          {
            v77 = *((_QWORD *)v114 + 4);
            v78 = *((_QWORD *)v114 + 5);
            v59 = __OFSUB__(v78, v77);
            v70 = v78 - v77;
            v71 = v59;
            goto LABEL_88;
          }
          v50 = *((_QWORD *)v114 + 4);
          v49 = *((_QWORD *)v114 + 5);
          v59 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          v52 = v59;
        }
        if ((v52 & 1) != 0)
          goto LABEL_133;
        v60 = v45 - 2;
        v66 = &v46[16 * v45 - 32];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v69 = __OFSUB__(v67, v68);
        v70 = v67 - v68;
        v71 = v69;
        if (v69)
          goto LABEL_136;
        v72 = &v46[16 * v48];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v59 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v59)
          goto LABEL_139;
        if (__OFADD__(v70, v75))
          goto LABEL_140;
        if (v70 + v75 >= v51)
        {
          v76 = v51 < v75;
LABEL_94:
          if (v76)
            v48 = v60;
          goto LABEL_96;
        }
LABEL_88:
        if ((v71 & 1) != 0)
          goto LABEL_135;
        v79 = &v46[16 * v48];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v59 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v59)
          goto LABEL_138;
        if (v82 < v70)
          goto LABEL_105;
LABEL_96:
        v87 = v48 - 1;
        if (v48 - 1 >= v45)
          goto LABEL_125;
        if (!v11)
          goto LABEL_157;
        v88 = v11;
        v89 = &v46[16 * v87];
        v90 = *(_QWORD *)v89;
        v91 = v48;
        v92 = &v46[16 * v48];
        v93 = *((_QWORD *)v92 + 1);
        sub_249FC586C((uint64_t *)(v88 + 8 * *(_QWORD *)v89), (uint64_t *)(v88 + 8 * *(_QWORD *)v92), v88 + 8 * v93, __dst, a2);
        if (v2)
          goto LABEL_121;
        if (v93 < v90)
          goto LABEL_126;
        if (v91 > *((_QWORD *)v114 + 2))
          goto LABEL_127;
        *(_QWORD *)v89 = v90;
        *(_QWORD *)&v46[16 * v87 + 8] = v93;
        v94 = *((_QWORD *)v114 + 2);
        if (v91 >= v94)
          goto LABEL_128;
        v45 = v94 - 1;
        memmove(v92, v92 + 16, 16 * (v94 - 1 - v91));
        *((_QWORD *)v114 + 2) = v94 - 1;
        v11 = v110;
        if (v94 <= 2)
          goto LABEL_105;
      }
    }
    v45 = 1;
LABEL_105:
    v4 = v109;
    v9 = v114;
    if (v10 >= v109)
      goto LABEL_110;
  }
  if (__OFSUB__(v10, v12))
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  if (v10 - v12 >= v105)
    goto LABEL_57;
  if (__OFADD__(v12, v105))
    goto LABEL_153;
  if (v12 + v105 >= v4)
    v32 = v4;
  else
    v32 = v12 + v105;
  if (v32 >= v12)
  {
    if (v10 != v32)
    {
      v113 = v9;
      v33 = (int8x16_t *)(v101 + 8 * v10);
      v106 = v32;
      v108 = v12;
      do
      {
        v34 = v33;
        do
        {
          v35 = *a2;
          if (!*(_QWORD *)(*a2 + 16))
          {
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
          v36 = v34->i64[0];
          v37 = sub_249F8B27C(v34->i64[1]);
          if ((v38 & 1) == 0)
            goto LABEL_123;
          v39 = *(_QWORD *)(v35 + 56);
          v40 = *(_QWORD *)(*(_QWORD *)(v39 + 8 * v37) + 16);
          v41 = sub_249F8B27C(v36);
          if ((v42 & 1) == 0)
            goto LABEL_124;
          if (*(_QWORD *)(*(_QWORD *)(v39 + 8 * v41) + 16) >= v40)
            break;
          if (!v11)
            goto LABEL_156;
          *v34 = vextq_s8(*v34, *v34, 8uLL);
          v34 = (int8x16_t *)((char *)v34 - 8);
          ++v12;
        }
        while (v10 != v12);
        ++v10;
        v33 = (int8x16_t *)((char *)v33 + 8);
        v12 = v108;
      }
      while (v10 != v106);
      v10 = v106;
      v9 = v113;
    }
    goto LABEL_57;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249FC4084(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *__dst;

  v3 = a1[1];
  result = sub_24A01F438();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (*(double *)v90 >= v88)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_249FC5B94((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_24A012ED4((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB40);
    v8 = sub_24A01EFC4();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v16 < v15 == v19 >= *v17)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29)
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24A012ABC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_24A012ABC((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_249FC5B94((double *)(v11 + 16 * *(_QWORD *)v78), (double *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249FC4764(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  char v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;

  v3 = v2;
  v176 = a2;
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
  v166 = *(_QWORD *)(v177 - 8);
  v5 = MEMORY[0x24BDAC7A8](v177);
  v164 = (uint64_t)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v171 = (uint64_t)&v157 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v157 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v175 = (uint64_t)&v157 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v157 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v173 = a1;
  v174 = (uint64_t)&v157 - v17;
  v18 = a1[1];
  result = sub_24A01F438();
  if (result >= v18)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      if (v18)
        return sub_249FC5500(0, v18, 1, v173, v176);
      return result;
    }
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    result = sub_24A01F3B4();
    __break(1u);
    return result;
  }
  if (v18 >= 0)
    v20 = v18;
  else
    v20 = v18 + 1;
  if (v18 < -1)
    goto LABEL_173;
  v160 = result;
  if (v18 < 2)
  {
    v24 = (char *)MEMORY[0x24BEE4AF8];
    v165 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80));
    v159 = MEMORY[0x24BEE4AF8];
    if (v18 != 1)
    {
      v99 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_119;
    }
    v169 = v11;
  }
  else
  {
    v169 = v11;
    v21 = v20 >> 1;
    v22 = sub_24A01EFC4();
    *(_QWORD *)(v22 + 16) = v21;
    v23 = *(unsigned __int8 *)(v166 + 80);
    v159 = v22;
    v165 = v22 + ((v23 + 32) & ~v23);
  }
  v25 = 0;
  v24 = (char *)MEMORY[0x24BEE4AF8];
  v170 = v16;
  do
  {
    v26 = v25;
    v27 = v25 + 1;
    v168 = v18;
    v163 = v25;
    if (v25 + 1 >= v18)
    {
      v44 = v25 + 1;
      goto LABEL_30;
    }
    v161 = v3;
    v28 = *v173;
    v29 = *(_QWORD *)(v166 + 72);
    v30 = v25;
    v31 = v174;
    sub_249F9905C(*v173 + v29 * v27, v174, &qword_2578FF830);
    v162 = v28;
    v172 = v29;
    sub_249F9905C(v28 + v29 * v30, (uint64_t)v16, &qword_2578FF830);
    v32 = *(int *)(v177 + 48);
    v33 = v175;
    sub_249F9896C(v31, v175, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(v33 + v32) = *(_QWORD *)(v31 + v32);
    v34 = *v176;
    if (!*(_QWORD *)(*v176 + 16))
      goto LABEL_160;
    v35 = sub_249F8B2AC(v33);
    v3 = v161;
    if ((v36 & 1) == 0)
      goto LABEL_161;
    v37 = *(double *)(*(_QWORD *)(v34 + 56) + 8 * v35);
    v38 = *(int *)(v177 + 48);
    v39 = (uint64_t)v169;
    sub_249F9896C((uint64_t)v16, (uint64_t)v169, type metadata accessor for VUStreamingGallery.Label);
    *(_QWORD *)(v39 + v38) = *(_QWORD *)&v16[v38];
    v40 = *v176;
    if (!*(_QWORD *)(*v176 + 16))
      goto LABEL_162;
    v41 = sub_249F8B2AC(v39);
    if ((v42 & 1) == 0)
      goto LABEL_163;
    v43 = *(double *)(*(_QWORD *)(v40 + 56) + 8 * v41);
    sub_249F989C0(v39, type metadata accessor for VUStreamingGallery.Label);
    sub_249F989C0(v175, type metadata accessor for VUStreamingGallery.Label);
    sub_249F990A0((uint64_t)v16, &qword_2578FF830);
    sub_249F990A0(v174, &qword_2578FF830);
    v26 = v163;
    v44 = v163 + 2;
    if (v163 + 2 >= v168)
      goto LABEL_32;
    v45 = v172 * v27;
    v46 = v162;
    v47 = v172 * v44;
    do
    {
      v48 = v44;
      v49 = v174;
      sub_249F9905C(v46 + v47, v174, &qword_2578FF830);
      sub_249F9905C(v46 + v45, (uint64_t)v170, &qword_2578FF830);
      v50 = *(int *)(v177 + 48);
      v51 = v175;
      sub_249F9896C(v49, v175, type metadata accessor for VUStreamingGallery.Label);
      v52 = v51;
      *(_QWORD *)(v51 + v50) = *(_QWORD *)(v49 + v50);
      v53 = *v176;
      if (!*(_QWORD *)(*v176 + 16))
        goto LABEL_140;
      v54 = sub_249F8B2AC(v52);
      if ((v55 & 1) == 0)
        goto LABEL_141;
      v56 = *(double *)(*(_QWORD *)(v53 + 56) + 8 * v54);
      v57 = *(int *)(v177 + 48);
      v59 = (uint64_t)v169;
      v58 = (uint64_t)v170;
      sub_249F9896C((uint64_t)v170, (uint64_t)v169, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)(v59 + v57) = *(_QWORD *)(v58 + v57);
      v60 = *v176;
      if (!*(_QWORD *)(*v176 + 16))
        goto LABEL_142;
      v61 = sub_249F8B2AC(v59);
      if ((v62 & 1) == 0)
        goto LABEL_143;
      v63 = *(double *)(*(_QWORD *)(v60 + 56) + 8 * v61) >= v56;
      sub_249F989C0(v59, type metadata accessor for VUStreamingGallery.Label);
      sub_249F989C0(v175, type metadata accessor for VUStreamingGallery.Label);
      sub_249F990A0((uint64_t)v170, &qword_2578FF830);
      sub_249F990A0(v174, &qword_2578FF830);
      if (v43 < v37 == v63)
      {
        v16 = v170;
        v44 = v48;
        v3 = v161;
        v26 = v163;
LABEL_32:
        v64 = v168;
        if (v43 < v37)
          goto LABEL_33;
        goto LABEL_36;
      }
      v44 = v48 + 1;
      v46 += v172;
    }
    while (v168 != v48 + 1);
    v64 = v168;
    v44 = v168;
    v16 = v170;
    v3 = v161;
    v26 = v163;
    if (v43 >= v37)
      goto LABEL_36;
LABEL_33:
    if (v44 < v26)
      goto LABEL_168;
    if (v26 < v44)
    {
      v158 = v24;
      v65 = 0;
      v66 = v172 * (v44 - 1);
      v67 = v44 * v172;
      v68 = v26;
      v69 = v26 * v172;
      do
      {
        if (v68 != v44 + v65 - 1)
        {
          v93 = v44;
          v94 = v162;
          if (!v162)
            goto LABEL_171;
          v95 = v162 + v69;
          v167 = v162 + v66;
          sub_249F98C10(v162 + v69, v164, &qword_2578FF830);
          if (v69 < v66 || v95 >= v94 + v67)
          {
            v92 = v167;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v92 = v167;
            if (v69 != v66)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_249F98C10(v164, v92, &qword_2578FF830);
          v44 = v93;
        }
        ++v68;
        --v65;
        v66 -= v172;
        v67 -= v172;
        v69 += v172;
      }
      while (v68 < v44 + v65);
      v24 = v158;
      v16 = v170;
      v26 = v163;
LABEL_30:
      v64 = v168;
    }
LABEL_36:
    if (v44 >= v64)
      goto LABEL_68;
    if (__OFSUB__(v44, v26))
      goto LABEL_164;
    if (v44 - v26 >= v160)
      goto LABEL_68;
    if (__OFADD__(v26, v160))
      goto LABEL_166;
    if (v26 + v160 >= v64)
      v70 = v64;
    else
      v70 = v26 + v160;
    if (v70 < v26)
      goto LABEL_167;
    if (v44 == v70)
      goto LABEL_68;
    v158 = v24;
    v161 = v3;
    v162 = v70;
    v71 = *(_QWORD *)(v166 + 72);
    v172 = v71 * (v44 - 1);
    v167 = v71;
    v72 = v44 * v71;
    while (2)
    {
      v74 = 0;
      v75 = v26;
      v168 = v44;
      while (2)
      {
        v76 = *v173;
        v77 = v174;
        sub_249F9905C(v72 + v74 + *v173, v174, &qword_2578FF830);
        sub_249F9905C(v172 + v74 + v76, (uint64_t)v16, &qword_2578FF830);
        v78 = *(int *)(v177 + 48);
        v79 = v175;
        sub_249F9896C(v77, v175, type metadata accessor for VUStreamingGallery.Label);
        *(_QWORD *)(v79 + v78) = *(_QWORD *)(v77 + v78);
        v80 = *v176;
        if (!*(_QWORD *)(*v176 + 16))
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          goto LABEL_165;
        }
        v81 = sub_249F8B2AC(v79);
        if ((v82 & 1) == 0)
          goto LABEL_133;
        v83 = *(double *)(*(_QWORD *)(v80 + 56) + 8 * v81);
        v84 = *(int *)(v177 + 48);
        v85 = (uint64_t)v169;
        v16 = v170;
        sub_249F9896C((uint64_t)v170, (uint64_t)v169, type metadata accessor for VUStreamingGallery.Label);
        *(_QWORD *)(v85 + v84) = *(_QWORD *)&v16[v84];
        v86 = *v176;
        if (!*(_QWORD *)(*v176 + 16))
          goto LABEL_134;
        v87 = sub_249F8B2AC(v85);
        if ((v88 & 1) == 0)
          goto LABEL_135;
        v89 = *(double *)(*(_QWORD *)(v86 + 56) + 8 * v87);
        sub_249F989C0(v85, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0(v175, type metadata accessor for VUStreamingGallery.Label);
        sub_249F990A0((uint64_t)v16, &qword_2578FF830);
        sub_249F990A0(v174, &qword_2578FF830);
        if (v89 < v83)
        {
          v90 = *v173;
          if (!*v173)
            goto LABEL_169;
          v91 = v90 + v172 + v74;
          sub_249F98C10(v90 + v72 + v74, v171, &qword_2578FF830);
          swift_arrayInitWithTakeFrontToBack();
          sub_249F98C10(v171, v91, &qword_2578FF830);
          v73 = v168;
          v74 -= v167;
          if (v168 == ++v75)
            goto LABEL_47;
          continue;
        }
        break;
      }
      v73 = v168;
LABEL_47:
      v44 = v73 + 1;
      v172 += v167;
      v72 += v167;
      v26 = v163;
      if (v44 != v162)
        continue;
      break;
    }
    v44 = v162;
    v3 = v161;
    v24 = v158;
LABEL_68:
    if (v44 < v26)
      goto LABEL_159;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v168 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v24 = sub_24A012ABC(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    v98 = *((_QWORD *)v24 + 2);
    v97 = *((_QWORD *)v24 + 3);
    v99 = v98 + 1;
    if (v98 >= v97 >> 1)
      v24 = sub_24A012ABC((char *)(v97 > 1), v98 + 1, 1, v24);
    *((_QWORD *)v24 + 2) = v99;
    v100 = v24 + 32;
    v101 = &v24[16 * v98 + 32];
    v102 = v168;
    *(_QWORD *)v101 = v26;
    *((_QWORD *)v101 + 1) = v102;
    if (v98)
    {
      while (1)
      {
        v103 = v99 - 1;
        if (v99 >= 4)
        {
          v108 = &v100[16 * v99];
          v109 = *((_QWORD *)v108 - 8);
          v110 = *((_QWORD *)v108 - 7);
          v114 = __OFSUB__(v110, v109);
          v111 = v110 - v109;
          if (v114)
            goto LABEL_144;
          v113 = *((_QWORD *)v108 - 6);
          v112 = *((_QWORD *)v108 - 5);
          v114 = __OFSUB__(v112, v113);
          v106 = v112 - v113;
          v107 = v114;
          if (v114)
            goto LABEL_145;
          v115 = v99 - 2;
          v116 = &v100[16 * v99 - 32];
          v118 = *(_QWORD *)v116;
          v117 = *((_QWORD *)v116 + 1);
          v114 = __OFSUB__(v117, v118);
          v119 = v117 - v118;
          if (v114)
            goto LABEL_147;
          v114 = __OFADD__(v106, v119);
          v120 = v106 + v119;
          if (v114)
            goto LABEL_150;
          if (v120 >= v111)
          {
            v138 = &v100[16 * v103];
            v140 = *(_QWORD *)v138;
            v139 = *((_QWORD *)v138 + 1);
            v114 = __OFSUB__(v139, v140);
            v141 = v139 - v140;
            if (v114)
              goto LABEL_154;
            v131 = v106 < v141;
            goto LABEL_105;
          }
        }
        else
        {
          if (v99 != 3)
          {
            v132 = *((_QWORD *)v24 + 4);
            v133 = *((_QWORD *)v24 + 5);
            v114 = __OFSUB__(v133, v132);
            v125 = v133 - v132;
            v126 = v114;
            goto LABEL_99;
          }
          v105 = *((_QWORD *)v24 + 4);
          v104 = *((_QWORD *)v24 + 5);
          v114 = __OFSUB__(v104, v105);
          v106 = v104 - v105;
          v107 = v114;
        }
        if ((v107 & 1) != 0)
          goto LABEL_146;
        v115 = v99 - 2;
        v121 = &v100[16 * v99 - 32];
        v123 = *(_QWORD *)v121;
        v122 = *((_QWORD *)v121 + 1);
        v124 = __OFSUB__(v122, v123);
        v125 = v122 - v123;
        v126 = v124;
        if (v124)
          goto LABEL_149;
        v127 = &v100[16 * v103];
        v129 = *(_QWORD *)v127;
        v128 = *((_QWORD *)v127 + 1);
        v114 = __OFSUB__(v128, v129);
        v130 = v128 - v129;
        if (v114)
          goto LABEL_152;
        if (__OFADD__(v125, v130))
          goto LABEL_153;
        if (v125 + v130 >= v106)
        {
          v131 = v106 < v130;
LABEL_105:
          if (v131)
            v103 = v115;
          goto LABEL_107;
        }
LABEL_99:
        if ((v126 & 1) != 0)
          goto LABEL_148;
        v134 = &v100[16 * v103];
        v136 = *(_QWORD *)v134;
        v135 = *((_QWORD *)v134 + 1);
        v114 = __OFSUB__(v135, v136);
        v137 = v135 - v136;
        if (v114)
          goto LABEL_151;
        if (v137 < v125)
          goto LABEL_116;
LABEL_107:
        v142 = v103 - 1;
        if (v103 - 1 >= v99)
          goto LABEL_136;
        if (!*v173)
          goto LABEL_170;
        v143 = v24;
        v144 = &v100[16 * v142];
        v145 = *(_QWORD *)v144;
        v146 = &v100[16 * v103];
        v147 = *((_QWORD *)v146 + 1);
        sub_249FC5E1C(*v173 + *(_QWORD *)(v166 + 72) * *(_QWORD *)v144, *v173 + *(_QWORD *)(v166 + 72) * *(_QWORD *)v146, *v173 + *(_QWORD *)(v166 + 72) * v147, v165, v176);
        if (v3)
          goto LABEL_130;
        if (v147 < v145)
          goto LABEL_137;
        if (v103 > *((_QWORD *)v143 + 2))
          goto LABEL_138;
        *(_QWORD *)v144 = v145;
        *(_QWORD *)&v100[16 * v142 + 8] = v147;
        v148 = *((_QWORD *)v143 + 2);
        if (v103 >= v148)
          goto LABEL_139;
        v24 = v143;
        v99 = v148 - 1;
        memmove(&v100[16 * v103], v146 + 16, 16 * (v148 - 1 - v103));
        *((_QWORD *)v143 + 2) = v148 - 1;
        if (v148 <= 2)
          goto LABEL_116;
      }
    }
    v99 = 1;
LABEL_116:
    v18 = v173[1];
    v25 = v168;
    v16 = v170;
  }
  while (v168 < v18);
LABEL_119:
  if (v99 >= 2)
  {
    v149 = *v173;
    do
    {
      v150 = v99 - 2;
      if (v99 < 2)
        goto LABEL_155;
      if (!v149)
        goto LABEL_172;
      v151 = v24;
      v152 = v24 + 32;
      v153 = *(_QWORD *)&v24[16 * v150 + 32];
      v154 = *(_QWORD *)&v24[16 * v99 + 24];
      sub_249FC5E1C(v149 + *(_QWORD *)(v166 + 72) * v153, v149 + *(_QWORD *)(v166 + 72) * *(_QWORD *)&v152[16 * v99 - 16], v149 + *(_QWORD *)(v166 + 72) * v154, v165, v176);
      if (v3)
        break;
      if (v154 < v153)
        goto LABEL_156;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v151 = sub_24A012ED4((uint64_t)v151);
      if (v150 >= *((_QWORD *)v151 + 2))
        goto LABEL_157;
      v155 = &v151[16 * v150 + 32];
      *(_QWORD *)v155 = v153;
      *((_QWORD *)v155 + 1) = v154;
      v156 = *((_QWORD *)v151 + 2);
      if (v99 > v156)
        goto LABEL_158;
      v24 = v151;
      memmove(&v151[16 * v99 + 16], &v151[16 * v99 + 32], 16 * (v156 - v99));
      *((_QWORD *)v151 + 2) = v156 - 1;
      v99 = v156 - 1;
    }
    while (v156 > 2);
  }
LABEL_130:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v159 + 16) = 0;
  return swift_bridgeObjectRelease();
}

unint64_t sub_249FC5408(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  int8x16_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v17;
  int8x16_t *v18;

  v17 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v7 = *a4;
    v8 = (int8x16_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v9 = v17;
    v18 = v8;
    while (1)
    {
      v10 = *a5;
      if (!*(_QWORD *)(*a5 + 16))
        break;
      v11 = v8->i64[0];
      result = sub_249F8B27C(v8->i64[1]);
      if ((v12 & 1) == 0)
        goto LABEL_14;
      v13 = *(_QWORD *)(v10 + 56);
      v14 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * result) + 16);
      result = sub_249F8B27C(v11);
      if ((v15 & 1) == 0)
        goto LABEL_15;
      if (*(_QWORD *)(*(_QWORD *)(v13 + 8 * result) + 16) < v14)
      {
        if (!v7)
          goto LABEL_16;
        *v8 = vextq_s8(*v8, *v8, 8uLL);
        v8 = (int8x16_t *)((char *)v8 - 8);
        if (v6 != ++v9)
          continue;
      }
      ++v6;
      v8 = (int8x16_t *)&v18->u64[1];
      if (v6 == a2)
        return result;
      goto LABEL_5;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_249FC5500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v44 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
  v9 = MEMORY[0x24BDAC7A8](v54);
  v50 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v42 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v55 = (uint64_t)&v42 - v17;
  result = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v42 - v20;
  v49 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v22 = *(_QWORD *)(v19 + 72);
    v23 = v22 * (v49 - 1);
    v47 = v22;
    v24 = v22 * v49;
    v45 = v15;
LABEL_5:
    v25 = 0;
    v53 = v44;
    v48 = v24;
    while (1)
    {
      v26 = *a4;
      v52 = v24 + v25;
      sub_249F9905C(v24 + v25 + v26, (uint64_t)v21, &qword_2578FF830);
      v51 = v23 + v25;
      sub_249F9905C(v23 + v25 + v26, v55, &qword_2578FF830);
      v27 = *(int *)(v54 + 48);
      result = sub_249F9896C((uint64_t)v21, (uint64_t)v15, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)&v15[v27] = *(_QWORD *)&v21[v27];
      v28 = *a5;
      if (!*(_QWORD *)(*a5 + 16))
        break;
      result = sub_249F8B2AC((uint64_t)v15);
      if ((v29 & 1) == 0)
        goto LABEL_15;
      v30 = v23;
      v31 = (uint64_t)v21;
      v32 = *(double *)(*(_QWORD *)(v28 + 56) + 8 * result);
      v33 = *(int *)(v54 + 48);
      v34 = a5;
      v35 = v55;
      v36 = v46;
      result = sub_249F9896C(v55, v46, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)(v36 + v33) = *(_QWORD *)(v35 + v33);
      v37 = *v34;
      if (!*(_QWORD *)(*v34 + 16))
        goto LABEL_16;
      a5 = v34;
      result = sub_249F8B2AC(v36);
      if ((v38 & 1) == 0)
        goto LABEL_17;
      v39 = *(double *)(*(_QWORD *)(v37 + 56) + 8 * result);
      sub_249F989C0(v36, type metadata accessor for VUStreamingGallery.Label);
      sub_249F989C0((uint64_t)v15, type metadata accessor for VUStreamingGallery.Label);
      sub_249F990A0(v55, &qword_2578FF830);
      v21 = (char *)v31;
      result = sub_249F990A0(v31, &qword_2578FF830);
      v23 = v30;
      v24 = v48;
      if (v39 < v32)
      {
        v40 = *a4;
        if (!*a4)
          goto LABEL_18;
        v41 = v40 + v23 + v25;
        sub_249F98C10(v40 + v48 + v25, v50, &qword_2578FF830);
        swift_arrayInitWithTakeFrontToBack();
        result = sub_249F98C10(v50, v41, &qword_2578FF830);
        v25 -= v47;
        ++v53;
        v15 = v45;
        if (v49 != v53)
          continue;
      }
      v23 += v47;
      v24 += v47;
      if (++v49 == v43)
        return result;
      goto LABEL_5;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  return result;
}

uint64_t sub_249FC586C(uint64_t *a1, uint64_t *__src, unint64_t a3, uint64_t *__dst, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t result;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t *v45;

  v5 = __dst;
  v7 = __src;
  v8 = (char *)__src - (char *)a1;
  v9 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v9 = (char *)__src - (char *)a1;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  v45 = a1;
  v44 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != __src || &__src[v13] <= __dst)
        memmove(__dst, __src, 8 * v13);
      v25 = &v5[v13];
      v43 = v25;
      v45 = v7;
      if (a1 < v7 && v11 >= 8)
      {
        v26 = (uint64_t *)(a3 - 8);
        while (1)
        {
          v27 = *a5;
          if (!*(_QWORD *)(*a5 + 16))
            break;
          v28 = v25 - 1;
          v29 = v7 - 1;
          v30 = *(v7 - 1);
          v31 = sub_249F8B27C(*(v25 - 1));
          if ((v32 & 1) == 0)
            goto LABEL_52;
          v42 = v7;
          v33 = v5;
          v34 = *(_QWORD *)(v27 + 56);
          v35 = *(_QWORD *)(*(_QWORD *)(v34 + 8 * v31) + 16);
          v36 = sub_249F8B27C(v30);
          if ((v37 & 1) == 0)
            goto LABEL_53;
          v38 = v26 + 1;
          if (*(_QWORD *)(*(_QWORD *)(v34 + 8 * v36) + 16) >= v35)
          {
            v43 = v25 - 1;
            v5 = v33;
            if (v38 < v25 || v26 >= v25)
            {
              *v26 = *v28;
              v29 = v42;
            }
            else
            {
              v29 = v42;
              if (v38 != v25)
                *v26 = *v28;
            }
            --v25;
          }
          else
          {
            v5 = v33;
            if (v38 != v42 || v26 >= v42)
              *v26 = *v29;
            v45 = v29;
          }
          if (v29 > a1)
          {
            --v26;
            v7 = v29;
            if (v25 > v5)
              continue;
          }
          goto LABEL_50;
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_50:
      sub_24A012BB8((void **)&v45, (const void **)&v44, &v43);
      return 1;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != a1 || &a1[v10] <= __dst)
      memmove(__dst, a1, 8 * v10);
    v14 = &v5[v10];
    v43 = v14;
    if ((unint64_t)v7 < a3 && v8 >= 8)
    {
      v15 = a1;
      while (1)
      {
        v16 = *a5;
        if (!*(_QWORD *)(*a5 + 16))
          break;
        v17 = *v5;
        v18 = sub_249F8B27C(*v7);
        if ((v19 & 1) == 0)
          goto LABEL_55;
        v20 = *(_QWORD *)(v16 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(v20 + 8 * v18) + 16);
        v22 = sub_249F8B27C(v17);
        if ((v23 & 1) == 0)
          goto LABEL_56;
        if (*(_QWORD *)(*(_QWORD *)(v20 + 8 * v22) + 16) >= v21)
        {
          if (v15 != v5)
            *v15 = *v5;
          v44 = ++v5;
          v24 = v7;
        }
        else
        {
          v24 = v7 + 1;
          if (v15 < v7 || v15 >= v24 || v15 != v7)
            *v15 = *v7;
        }
        ++v15;
        if (v5 < v14)
        {
          v7 = v24;
          if ((unint64_t)v24 < a3)
            continue;
        }
        v45 = v15;
        goto LABEL_50;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    goto LABEL_50;
  }
LABEL_57:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC5B94(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v6 - 1) >= *(v18 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_24A012C60((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v15[1] >= v6[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC5E1C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  double v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  double v59;
  unint64_t v60;
  BOOL v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v71 = a5;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
  v9 = MEMORY[0x24BDAC7A8](v72);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v65 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v65 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v65 - v17;
  v20 = *(_QWORD *)(v19 + 72);
  if (!v20)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1)
    goto LABEL_78;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1)
    goto LABEL_79;
  v22 = (uint64_t)(a2 - a1) / v20;
  v75 = a1;
  v74 = a4;
  v23 = v21 / v20;
  v70 = v16;
  if (v22 >= v21 / v20)
  {
    if (v23 < 0)
      goto LABEL_80;
    v25 = v23 * v20;
    if (a4 < a2 || a2 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v25;
    v73 = a4 + v25;
    v75 = a2;
    if (v25 < 1 || a1 >= a2)
      goto LABEL_68;
    v44 = -v20;
    v66 = a1;
    v67 = a4;
    v68 = v44;
    while (1)
    {
      sub_249F9905C(v42 + v44, (uint64_t)v18, &qword_2578FF830);
      v45 = a2 + v44;
      sub_249F9905C(a2 + v44, (uint64_t)v15, &qword_2578FF830);
      v46 = *(int *)(v72 + 48);
      sub_249F9896C((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)&v12[v46] = *(_QWORD *)&v18[v46];
      v47 = *v71;
      if (!*(_QWORD *)(*v71 + 16))
        goto LABEL_70;
      v48 = sub_249F8B2AC((uint64_t)v12);
      if ((v49 & 1) == 0)
        goto LABEL_72;
      v50 = a3;
      v51 = (uint64_t)v18;
      v52 = (uint64_t)v12;
      v53 = *(double *)(*(_QWORD *)(v47 + 56) + 8 * v48);
      v54 = *(int *)(v72 + 48);
      v55 = v70;
      sub_249F9896C((uint64_t)v15, v70, type metadata accessor for VUStreamingGallery.Label);
      *(_QWORD *)(v55 + v54) = *(_QWORD *)&v15[v54];
      v56 = *v71;
      if (!*(_QWORD *)(*v71 + 16))
        goto LABEL_74;
      v57 = sub_249F8B2AC(v55);
      if ((v58 & 1) == 0)
        goto LABEL_76;
      v44 = v68;
      v69 = v50 + v68;
      v59 = *(double *)(*(_QWORD *)(v56 + 56) + 8 * v57);
      sub_249F989C0(v55, type metadata accessor for VUStreamingGallery.Label);
      v12 = (char *)v52;
      sub_249F989C0(v52, type metadata accessor for VUStreamingGallery.Label);
      sub_249F990A0((uint64_t)v15, &qword_2578FF830);
      v18 = (char *)v51;
      sub_249F990A0(v51, &qword_2578FF830);
      if (v59 < v53)
      {
        v60 = v66;
        a3 = v69;
        if (v50 < a2 || v69 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          v62 = v67;
        }
        else
        {
          v61 = v50 == a2;
          v62 = v67;
          if (!v61)
            swift_arrayInitWithTakeBackToFront();
        }
        v44 = v68;
        v75 += v68;
        goto LABEL_66;
      }
      v63 = v73;
      v73 += v44;
      v60 = v66;
      a3 = v69;
      if (v50 < v63 || v69 >= v63)
        break;
      if (v50 != v63)
      {
        swift_arrayInitWithTakeBackToFront();
LABEL_64:
        v44 = v68;
      }
      v45 = a2;
      v62 = v67;
LABEL_66:
      v42 = v73;
      if (v73 > v62)
      {
        a2 = v45;
        if (v45 > v60)
          continue;
      }
      goto LABEL_68;
    }
    swift_arrayInitWithTakeFrontToBack();
    goto LABEL_64;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v69 = a4 + v24;
    v73 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_249F9905C(a2, (uint64_t)v18, &qword_2578FF830);
        sub_249F9905C(a4, (uint64_t)v15, &qword_2578FF830);
        v27 = *(int *)(v72 + 48);
        sub_249F9896C((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        *(_QWORD *)&v12[v27] = *(_QWORD *)&v18[v27];
        v28 = *v71;
        if (!*(_QWORD *)(*v71 + 16))
          break;
        v29 = sub_249F8B2AC((uint64_t)v12);
        if ((v30 & 1) == 0)
          goto LABEL_71;
        v31 = a3;
        v32 = *(double *)(*(_QWORD *)(v28 + 56) + 8 * v29);
        v33 = *(int *)(v72 + 48);
        v34 = v70;
        sub_249F9896C((uint64_t)v15, v70, type metadata accessor for VUStreamingGallery.Label);
        *(_QWORD *)(v34 + v33) = *(_QWORD *)&v15[v33];
        v35 = *v71;
        if (!*(_QWORD *)(*v71 + 16))
          goto LABEL_73;
        v36 = sub_249F8B2AC(v34);
        if ((v37 & 1) == 0)
          goto LABEL_75;
        v38 = *(double *)(*(_QWORD *)(v35 + 56) + 8 * v36);
        sub_249F989C0(v34, type metadata accessor for VUStreamingGallery.Label);
        sub_249F989C0((uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        sub_249F990A0((uint64_t)v15, &qword_2578FF830);
        sub_249F990A0((uint64_t)v18, &qword_2578FF830);
        v39 = v75;
        if (v38 >= v32)
        {
          v41 = v74 + v20;
          a3 = v31;
          if (v75 < v74 || v75 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v75 != v74)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v74 = v41;
          v40 = a2;
        }
        else
        {
          v40 = a2 + v20;
          a3 = v31;
          if (v75 < a2 || v75 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v75 == a2)
          {
            v39 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v75 = v39 + v20;
        a4 = v74;
        if (v74 < v69)
        {
          a2 = v40;
          if (v40 < a3)
            continue;
        }
        goto LABEL_68;
      }
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
LABEL_68:
    sub_24A012DBC(&v75, &v74, (uint64_t *)&v73);
    return 1;
  }
LABEL_80:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC64AC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_249F98C68(&qword_2578FFB10, &qword_2578FFB08, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB08);
          v12 = sub_249FE16EC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for VUIndexTag();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC66B8@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
LABEL_3:
      v6 = v5 - 1;
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF830);
      v8 = *(_QWORD *)(v7 - 8);
      sub_249F98C10(v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v6, a1, &qword_2578FF830);
      *(_QWORD *)(v3 + 16) = v6;
      *v1 = v3;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  else
  {
    result = sub_24A006BB8(v3);
    v3 = result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FC6778()
{
  _QWORD **v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v3 = v1[2];
    if (v3)
    {
LABEL_3:
      v4 = v3 - 1;
      result = v1[v4 + 4];
      v1[2] = v4;
      *v0 = v1;
      return result;
    }
  }
  else
  {
    result = (uint64_t)sub_24A006BA4(v1);
    v1 = (_QWORD *)result;
    v3 = *(_QWORD *)(result + 16);
    if (v3)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FC67D8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    v7 = type metadata accessor for VUStreamingGallery.Label(0);
    return sub_249F9896C(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, a4, type metadata accessor for VUStreamingGallery.Label);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_249FC6874(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s19VisualUnderstanding18VUStreamingGalleryC5LabelO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v26;
  uint64_t v27;

  v4 = sub_24A01EBA4();
  v27 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for VUStreamingGallery.Label(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char **)((char *)&v26 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF858);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v18[*(int *)(v16 + 48)];
  sub_249F9896C(a1, (uint64_t)v18, type metadata accessor for VUStreamingGallery.Label);
  sub_249F9896C(a2, (uint64_t)v19, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_249F9896C((uint64_t)v18, (uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v23 = *v14 == *(_QWORD *)v19;
      goto LABEL_6;
    }
LABEL_8:
    sub_249F990A0((uint64_t)v18, &qword_2578FF858);
    v23 = 0;
    return v23 & 1;
  }
  sub_249F9896C((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v4);
    goto LABEL_8;
  }
  v20 = v27;
  v21 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v21(v8, v12, v4);
  v22 = v26;
  v21(v26, v19, v4);
  v23 = sub_24A01EB8C();
  v24 = *(void (**)(char *, uint64_t))(v20 + 8);
  v24(v22, v4);
  v24(v8, v4);
LABEL_6:
  sub_249F989C0((uint64_t)v18, type metadata accessor for VUStreamingGallery.Label);
  return v23 & 1;
}

uint64_t sub_249FC6B8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_24A01F030();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_249F8BD0C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_249FC6BFC(unint64_t a1, uint64_t a2)
{
  unint64_t p_align;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint32_t *v8;
  id v9;
  void *v10;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  p_align = a1;
  v18 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_24;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_24A01F3CC())
  {
    v17 = p_align;
    v5 = 0;
    v6 = p_align & 0xC000000000000001;
    v7 = p_align & 0xFFFFFFFFFFFFFF8;
    v8 = (uint32_t *)(p_align + 32);
    p_align = (unint64_t)&stru_251B6CFE8.align;
    while (1)
    {
      if (v6)
      {
        v9 = (id)MEMORY[0x24BD071F4](v5, v17);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
          goto LABEL_22;
        v9 = *(id *)&v8[2 * v5];
      }
      v10 = v9;
      if (__OFADD__(v5++, 1))
        goto LABEL_23;
      v12 = objc_msgSend(v9, *(SEL *)(p_align + 3200));
      v13 = *(_QWORD *)(a2 + 16);
      if (v13)
      {
        if (*(id *)(a2 + 32) == v12)
        {
LABEL_12:
          sub_24A01F33C();
          sub_24A01F36C();
          sub_24A01F378();
          sub_24A01F348();
          p_align = 0x251B6D000;
          goto LABEL_5;
        }
        if (v13 != 1)
          break;
      }
LABEL_4:

LABEL_5:
      if (v5 == i)
        return v18;
    }
    v14 = 5;
    while (1)
    {
      v15 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      if (*(id *)(a2 + 8 * v14) == v12)
        goto LABEL_12;
      ++v14;
      if (v15 == v13)
        goto LABEL_4;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    ;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_249FC6DA8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v5 = result + 32;
  v6 = MEMORY[0x24BEE4AF8];
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    while (1)
    {
      if (v4 == v7)
        goto LABEL_24;
      v8 = *(_QWORD *)(v5 + 8 * v4++);
      v9 = *(_QWORD *)(a2 + 16);
      if (!v9)
        goto LABEL_15;
      if (*(_QWORD *)(a2 + 32) != v8)
        break;
LABEL_6:
      if (v4 == v2)
        return v6;
    }
    if (v9 != 1)
    {
      v10 = 5;
      while (1)
      {
        v11 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        if (*(_QWORD *)(a2 + 8 * v10) == v8)
          goto LABEL_6;
        ++v10;
        if (v11 == v9)
          goto LABEL_15;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_15:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_249F8C9C8(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
      result = sub_249F8C9C8(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v6 + 16) = v13 + 1;
    *(_QWORD *)(v6 + 8 * v13 + 32) = v8;
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_249FC6EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_24A01EBA4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_249FA2B24(&qword_2578FF758, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_24A01F030();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_249F8BE04((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_249FC70C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  char v6;
  _BYTE v7[16];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFAF0);
  sub_249FCA3CC();
  result = sub_24A01F030();
  v8 = result;
  if (v2)
  {
    v4 = (char *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v4 += 16;
      sub_249F8C5D8((uint64_t)v7, v5, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_249FC7144(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  if ((a4 & 1) == 0)
    return sub_249FB51AC(a1, a2, a3, a4);
  sub_24A01F468();
  swift_unknownObjectRetain_n();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
    return sub_249FB51AC(a1, a2, a3, a4);
  }
  result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t _s19VisualUnderstanding18VUStreamingGalleryC5LabelO09isUnknownE05labelSbAE_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = sub_24A01EBA4();
  v3 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  v49 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBE0);
  MEMORY[0x24BDAC7A8](v47);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v44 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for VUStreamingGallery.Label(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char **)((char *)&v44 - v21);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v44 - v23;
  sub_249F9896C(a1, (uint64_t)&v44 - v23, v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v46 = v13;
    v44 = v24;
    v26 = v48;
    v27 = v49;
    sub_249F9896C(a1, (uint64_t)v19, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v15, v19, v26);
      v28 = 0;
    }
    else
    {
      v28 = 1;
    }
    v30 = (uint64_t)v6;
    v31 = v26;
    v32 = (uint64_t)v10;
    v33 = (uint64_t)v15;
    v34 = (uint64_t)v44;
    v36 = (uint64_t)v46;
    v35 = v47;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v33, v28, 1, v31);
    sub_24A01EB68();
    v37 = v30 + *(int *)(v35 + 48);
    v38 = &qword_2544CAD70;
    sub_249F9905C(v33, v30, &qword_2544CAD70);
    sub_249F9905C(v36, v37, &qword_2544CAD70);
    v39 = v36;
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v40(v30, 1, v31) == 1)
    {
      sub_249F990A0(v39, &qword_2544CAD70);
      sub_249F990A0(v33, &qword_2544CAD70);
      if (v40(v37, 1, v31) == 1)
      {
        v29 = -1;
      }
      else
      {
        v38 = &qword_2578FFBE0;
        v29 = 0;
      }
    }
    else
    {
      sub_249F9905C(v30, v32, &qword_2544CAD70);
      if (v40(v37, 1, v31) == 1)
      {
        sub_249F990A0((uint64_t)v46, &qword_2544CAD70);
        sub_249F990A0(v33, &qword_2544CAD70);
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v31);
        v29 = 0;
        v38 = &qword_2578FFBE0;
      }
      else
      {
        v41 = v45;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v45, v37, v31);
        sub_249FA2B24(&qword_2578FF760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v29 = sub_24A01EE38();
        v42 = *(void (**)(char *, uint64_t))(v27 + 8);
        v42(v41, v31);
        v38 = &qword_2544CAD70;
        sub_249F990A0((uint64_t)v46, &qword_2544CAD70);
        sub_249F990A0(v33, &qword_2544CAD70);
        v42((char *)v32, v31);
      }
    }
    sub_249F990A0(v30, v38);
    sub_249F989C0(v34, type metadata accessor for VUStreamingGallery.Label);
  }
  else
  {
    sub_249F9896C(a1, (uint64_t)v22, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_249F989C0((uint64_t)v22, type metadata accessor for VUStreamingGallery.Label);
      v29 = 0;
    }
    else
    {
      v29 = *v22 == -1;
    }
  }
  return v29 & 1;
}

uint64_t type metadata accessor for VUStreamingGallery(uint64_t a1)
{
  return sub_249F93C98(a1, (uint64_t *)&unk_2544CA230);
}

void sub_249FC768C()
{
  uint64_t v0;

  sub_249FDD2A0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_249FC76B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FC76D4()
{
  return swift_deallocObject();
}

uint64_t sub_249FC76E4()
{
  uint64_t v0;

  return sub_249F871F0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_249FC7704()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249FC7728(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for VUStreamingGallery.Recognition(uint64_t a1)
{
  return sub_249F93C98(a1, (uint64_t *)&unk_2578FFA98);
}

uint64_t sub_249FC774C()
{
  return swift_deallocObject();
}

unint64_t sub_249FC775C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 64;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    while (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v8 << 6);
      if (*(_QWORD *)(a4 + 16))
        goto LABEL_4;
    }
    v17 = __OFADD__(v8++, 1);
    if (v17)
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v13)
      return sub_249FBD8F0(v6, a2, v7, a3);
    v18 = *(_QWORD *)(v9 + 8 * v8);
    if (!v18)
      break;
LABEL_18:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v8 << 6);
    if (*(_QWORD *)(a4 + 16))
    {
LABEL_4:
      result = sub_249F8B27C(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v16));
      if ((v14 & 1) != 0)
      {
        *(unint64_t *)((char *)v6 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        v17 = __OFADD__(v7++, 1);
        if (v17)
        {
          __break(1u);
          return sub_249FBD8F0(v6, a2, v7, a3);
        }
      }
    }
  }
  v19 = v8 + 1;
  if (v8 + 1 >= v13)
    return sub_249FBD8F0(v6, a2, v7, a3);
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v8 + 2;
  if (v8 + 2 >= v13)
    return sub_249FBD8F0(v6, a2, v7, a3);
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v8 + 3;
  if (v8 + 3 >= v13)
    return sub_249FBD8F0(v6, a2, v7, a3);
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v13)
      return sub_249FBD8F0(v6, a2, v7, a3);
    v18 = *(_QWORD *)(v9 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249FC7900(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a2;
  v29 = a1;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA80);
  MEMORY[0x24BDAC7A8](v34);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  v33 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = *(_QWORD *)(a3 + 64);
  v30 = 0;
  v31 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v32 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v16)
      {
        v17 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v18 = v17 | (v12 << 6);
      }
      else
      {
        v19 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_34;
        if (v19 >= v32)
          return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
        v20 = *(_QWORD *)(v31 + 8 * v19);
        ++v12;
        if (!v20)
        {
          v12 = v19 + 1;
          if (v19 + 1 >= v32)
            return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
          v20 = *(_QWORD *)(v31 + 8 * v12);
          if (!v20)
          {
            v12 = v19 + 2;
            if (v19 + 2 >= v32)
              return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
            v20 = *(_QWORD *)(v31 + 8 * v12);
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v32)
                return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
              v20 = *(_QWORD *)(v31 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v12 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_35;
                  if (v12 >= v32)
                    return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
                  v20 = *(_QWORD *)(v31 + 8 * v12);
                  ++v21;
                  if (v20)
                    goto LABEL_20;
                }
              }
              v12 = v21;
            }
          }
        }
LABEL_20:
        v16 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v12 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v18);
      sub_249F9896C(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v33 + 72) * v18, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
      *v7 = v22;
      result = sub_249F9896C((uint64_t)v11, (uint64_t)v7 + *(int *)(v34 + 48), type metadata accessor for VUStreamingGallery.Label);
      v23 = *(_QWORD *)(a4 + 16);
      if (v23)
        break;
LABEL_4:
      sub_249F990A0((uint64_t)v7, &qword_2578FFA80);
      result = sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    }
    if (*(_QWORD *)(a4 + 32) != v22)
      break;
LABEL_29:
    sub_249F990A0((uint64_t)v7, &qword_2578FFA80);
    result = sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    *(unint64_t *)((char *)v29 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    if (__OFADD__(v30++, 1))
    {
      __break(1u);
      return sub_249FBD5EC(v29, v28, v30, (_QWORD *)a3);
    }
  }
  if (v23 == 1)
    goto LABEL_4;
  v24 = 5;
  while (1)
  {
    v25 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
      break;
    if (*(_QWORD *)(a4 + 8 * v24) == v22)
      goto LABEL_29;
    ++v24;
    if (v25 == v23)
      goto LABEL_4;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_249FC7BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_249FC7900((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_249FC7900((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x24BD07950](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_249FC7DA4()
{
  return swift_deallocObject();
}

uint64_t sub_249FC7DB4(float *__src, float *a2, unint64_t a3, float *__dst, uint64_t a5)
{
  float *v6;
  float *v7;
  float *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  char *v16;
  uint64_t *v17;
  unint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  float *v25;
  float *v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  char v30;
  double v31;
  float *v32;
  uint64_t v33;
  char *v34;
  _BYTE *v35;
  float *v36;
  char *v37;
  float v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  float *v46;
  char *v47;
  float *v48;
  float *v49;
  uint64_t v50;
  double v51;
  unint64_t v52;
  char v53;
  double v54;
  _OWORD *v55;
  uint64_t result;
  _BYTE *v57;
  uint64_t *v58;
  char *v59;
  float *v60;
  float *v61;

  v6 = __dst;
  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 4;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 4;
  v60 = __dst;
  v61 = __src;
  v57 = (_BYTE *)a3;
  if (v11 < v14)
  {
    if (v9 < -15)
      goto LABEL_60;
    v15 = 4 * v11;
    if (__dst != __src || &__src[v15] <= __dst)
    {
      memmove(__dst, __src, v15 * 4);
      a3 = (unint64_t)v57;
    }
    v16 = (char *)&v6[v15];
    v59 = (char *)&v6[v15];
    if ((unint64_t)v7 < a3 && (unint64_t)(v9 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v17 = (uint64_t *)(a5 + 32);
      swift_beginAccess();
      v18 = (unint64_t)v57;
      while (1)
      {
        v19 = v7[2];
        v20 = v6[2];
        if (v19 == v20)
        {
          v21 = *v17;
          if (!*(_QWORD *)(*v17 + 16))
            goto LABEL_57;
          v22 = *(_QWORD *)v6;
          v23 = sub_249F8B27C(*(_QWORD *)v7);
          if ((v24 & 1) == 0)
            goto LABEL_58;
          v25 = v8;
          v26 = v6;
          v27 = *(_QWORD *)(v21 + 56);
          v28 = *(double *)(v27 + 8 * v23);
          v29 = sub_249F8B27C(v22);
          if ((v30 & 1) == 0)
            goto LABEL_59;
          v31 = *(double *)(v27 + 8 * v29);
          v6 = v26;
          v8 = v25;
          v18 = (unint64_t)v57;
          if (v31 >= v28)
          {
LABEL_23:
            if (v8 != v6)
              *(_OWORD *)v8 = *(_OWORD *)v6;
            v6 += 4;
            v60 = v6;
            v32 = v7;
            goto LABEL_26;
          }
        }
        else if (v20 >= v19)
        {
          goto LABEL_23;
        }
        v32 = v7 + 4;
        if (v8 < v7 || v8 >= v32 || v8 != v7)
          *(_OWORD *)v8 = *(_OWORD *)v7;
LABEL_26:
        v8 += 4;
        if (v6 < (float *)v16)
        {
          v7 = v32;
          if ((unint64_t)v32 < v18)
            continue;
        }
        v61 = v8;
        break;
      }
    }
LABEL_53:
    sub_24A012BB4(&v61, &v60, &v59);
    return 1;
  }
  if (v12 < -15)
    goto LABEL_60;
  v33 = 4 * v14;
  if (__dst != a2 || &a2[v33] <= __dst)
    memmove(__dst, a2, 16 * v14);
  v34 = (char *)&v6[v33];
  v59 = (char *)&v6[v33];
  v61 = v7;
  if (v8 >= v7 || (unint64_t)(v12 - 16) > 0xFFFFFFFFFFFFFFE0)
    goto LABEL_53;
  v58 = (uint64_t *)(a5 + 32);
  swift_beginAccess();
  v35 = v57;
  v36 = v7;
  while (1)
  {
    v37 = v34 - 16;
    v38 = *((float *)v34 - 2);
    v40 = *((_QWORD *)v36 - 2);
    v36 -= 4;
    v39 = v40;
    v41 = v36[2];
    if (v38 != v41)
    {
      v55 = v35 - 16;
      if (v41 < v38)
        goto LABEL_41;
      goto LABEL_47;
    }
    v42 = *v58;
    if (!*(_QWORD *)(*v58 + 16))
      break;
    v43 = sub_249F8B27C(*((_QWORD *)v34 - 2));
    if ((v44 & 1) == 0)
      goto LABEL_55;
    v45 = v39;
    v46 = v7;
    v47 = v34;
    v48 = v8;
    v49 = v6;
    v50 = *(_QWORD *)(v42 + 56);
    v51 = *(double *)(v50 + 8 * v43);
    v52 = sub_249F8B27C(v45);
    if ((v53 & 1) == 0)
      goto LABEL_56;
    v54 = *(double *)(v50 + 8 * v52);
    v55 = v35 - 16;
    v6 = v49;
    v8 = v48;
    v34 = v47;
    v7 = v46;
    if (v54 < v51)
    {
LABEL_41:
      if (v35 != (_BYTE *)v7 || v55 >= (_OWORD *)v7)
        *v55 = *(_OWORD *)v36;
      v61 = v36;
      if (v36 <= v8)
        goto LABEL_53;
      goto LABEL_52;
    }
LABEL_47:
    v59 = v37;
    if (v35 < v34 || v55 >= (_OWORD *)v34 || v35 != v34)
      *v55 = *(_OWORD *)v37;
    v36 = v7;
    v34 = v37;
    if (v7 <= v8)
      goto LABEL_53;
LABEL_52:
    v7 = v36;
    v35 = v55;
    if (v34 <= (char *)v6)
      goto LABEL_53;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  swift_release();
  result = sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC8160(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  double v26;
  unint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t v57;
  float v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  double v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  float *v119;
  float *v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t i;
  float v129;
  uint64_t v130;
  float v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  double v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  int v140;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  float *v146;
  char *v147;
  unint64_t v148;
  uint64_t result;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  float *__dst;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v4 = a1[1];
  swift_retain_n();
  v5 = sub_24A01F438();
  v158 = v4;
  v159 = a2;
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_183;
    if ((unint64_t)v4 > 1)
    {
      v124 = *a1;
      v125 = a2 + 32;
      swift_retain();
      v126 = v124 + 16;
      v127 = -1;
      for (i = 1; i != v4; ++i)
      {
        swift_beginAccess();
        v165 = v127;
        v167 = v126;
        do
        {
          v129 = *(float *)(v126 + 8);
          v130 = *(_QWORD *)(v126 - 16);
          v131 = *(float *)(v126 - 8);
          if (v129 == v131)
          {
            v132 = *(_QWORD *)v125;
            if (!*(_QWORD *)(*(_QWORD *)v125 + 16))
            {
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
              goto LABEL_181;
            }
            v133 = sub_249F8B27C(*(_QWORD *)v126);
            if ((v134 & 1) == 0)
              goto LABEL_154;
            v135 = *(_QWORD *)(v132 + 56);
            v136 = *(double *)(v135 + 8 * v133);
            v137 = sub_249F8B27C(v130);
            if ((v138 & 1) == 0)
              goto LABEL_155;
            if (*(double *)(v135 + 8 * v137) >= v136)
              break;
          }
          else if (v131 >= v129)
          {
            break;
          }
          if (!v124)
            goto LABEL_190;
          v139 = *(_QWORD *)v126;
          v140 = *(_DWORD *)(v126 + 8);
          *(_OWORD *)v126 = *(_OWORD *)(v126 - 16);
          *(_DWORD *)(v126 - 8) = v140;
          *(_QWORD *)(v126 - 16) = v139;
          v126 -= 16;
        }
        while (!__CFADD__(v127++, 1));
        v126 = v167 + 16;
        v127 = v165 - 1;
      }
    }
    swift_release_n();
    return swift_release();
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_195;
  v7 = v5;
  v150 = a1;
  if (v4 >= 2)
  {
    v8 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB38);
    v9 = sub_24A01EFC4();
    *(_QWORD *)(v9 + 16) = v8;
    v152 = v9;
    __dst = (float *)(v9 + 32);
    goto LABEL_12;
  }
  __dst = (float *)(MEMORY[0x24BEE4AF8] + 32);
  v152 = MEMORY[0x24BEE4AF8];
  if (v4 != 1)
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
    v70 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_137:
    v162 = v13;
    if (v70 >= 2)
    {
      v142 = *v150;
      do
      {
        v143 = v70 - 2;
        if (v70 < 2)
          goto LABEL_177;
        if (!v142)
          goto LABEL_194;
        v144 = *(_QWORD *)&v162[16 * v143 + 32];
        v145 = *(_QWORD *)&v162[16 * v70 + 24];
        v146 = (float *)(v142 + 16 * *(_QWORD *)&v162[16 * v70 + 16]);
        swift_retain();
        sub_249FC7DB4((float *)(v142 + 16 * v144), v146, v142 + 16 * v145, __dst, v159);
        if (v163)
          goto LABEL_152;
        swift_release();
        if (v145 < v144)
          goto LABEL_178;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v162 = sub_24A012ED4((uint64_t)v162);
        if (v143 >= *((_QWORD *)v162 + 2))
          goto LABEL_179;
        v147 = &v162[16 * v143 + 32];
        *(_QWORD *)v147 = v144;
        *((_QWORD *)v147 + 1) = v145;
        v148 = *((_QWORD *)v162 + 2);
        if (v70 > v148)
          goto LABEL_180;
        memmove(&v162[16 * v70 + 16], &v162[16 * v70 + 32], 16 * (v148 - v70));
        *((_QWORD *)v162 + 2) = v148 - 1;
        v70 = v148 - 1;
      }
      while (v148 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v152 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_12:
  v10 = *a1;
  v164 = a2 + 32;
  swift_beginAccess();
  v11 = v10;
  v12 = 0;
  v151 = v10 + 24;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v166 = v11;
  v154 = v7;
  while (2)
  {
    v14 = v12;
    v15 = v12 + 1;
    v155 = v12;
    if (v12 + 1 >= v4)
    {
LABEL_45:
      if (v15 >= v4)
        goto LABEL_71;
      goto LABEL_46;
    }
    v16 = v11 + 16 * v15;
    v17 = *(float *)(v16 + 8);
    v18 = v11 + 16 * v12;
    v19 = *(float *)(v18 + 8);
    if (v17 == v19)
    {
      v20 = *(_QWORD *)v164;
      if (!*(_QWORD *)(*(_QWORD *)v164 + 16))
        goto LABEL_184;
      v21 = *(_QWORD *)v18;
      v22 = sub_249F8B27C(*(_QWORD *)v16);
      if ((v23 & 1) == 0)
        goto LABEL_185;
      v24 = v13;
      v25 = *(_QWORD *)(v20 + 56);
      v26 = *(double *)(v25 + 8 * v22);
      v27 = sub_249F8B27C(v21);
      if ((v28 & 1) == 0)
        goto LABEL_186;
      v29 = *(double *)(v25 + 8 * v27) < v26;
      v11 = v166;
    }
    else
    {
      v24 = v13;
      v29 = v19 < v17;
    }
    v15 = v14 + 2;
    if (v14 + 2 >= v4)
    {
LABEL_31:
      if (!v29)
        goto LABEL_44;
      goto LABEL_32;
    }
    v30 = v151 + 16 * v14;
    v31 = v30;
    while (1)
    {
      v32 = *(float *)(v31 + 16);
      v31 += 16;
      v33 = v32;
      if (v32 == *(float *)v30)
        break;
      if (v29 != *(float *)v30 < v33)
        goto LABEL_43;
LABEL_29:
      ++v15;
      v30 = v31;
      if (v158 == v15)
      {
        v4 = v158;
        v15 = v158;
        goto LABEL_31;
      }
    }
    v34 = *(_QWORD *)v164;
    if (!*(_QWORD *)(*(_QWORD *)v164 + 16))
      goto LABEL_173;
    v35 = *(_QWORD *)(v30 - 8);
    v36 = sub_249F8B27C(*(_QWORD *)(v30 + 8));
    if ((v37 & 1) == 0)
      goto LABEL_174;
    v38 = *(_QWORD *)(v34 + 56);
    v39 = *(double *)(v38 + 8 * v36);
    v40 = sub_249F8B27C(v35);
    if ((v41 & 1) == 0)
      goto LABEL_175;
    v42 = *(double *)(v38 + 8 * v40) < v39;
    v11 = v166;
    v14 = v155;
    if (v29 == v42)
      goto LABEL_29;
LABEL_43:
    v4 = v158;
    if (!v29)
    {
LABEL_44:
      v13 = v24;
      goto LABEL_45;
    }
LABEL_32:
    if (v15 < v14)
      goto LABEL_189;
    if (v14 < v15)
    {
      v43 = 16 * v15 - 16;
      v44 = 16 * v14;
      v45 = v15;
      v46 = v14;
      v13 = v24;
      while (1)
      {
        if (v46 != --v45)
        {
          if (!v11)
            goto LABEL_193;
          v48 = (_OWORD *)(v11 + v44);
          v49 = (_OWORD *)(v11 + v43);
          v50 = *(_QWORD *)(v11 + v44);
          v51 = *(_DWORD *)(v11 + v44 + 8);
          if (v44 != v43 || v48 >= v49 + 1)
            *v48 = *v49;
          v47 = v11 + v43;
          *(_QWORD *)v47 = v50;
          *(_DWORD *)(v47 + 8) = v51;
        }
        ++v46;
        v43 -= 16;
        v44 += 16;
        if (v46 >= v45)
          goto LABEL_45;
      }
    }
    v13 = v24;
    if (v15 >= v4)
      goto LABEL_71;
LABEL_46:
    if (!__OFSUB__(v15, v14))
    {
      if (v15 - v14 >= v7)
        goto LABEL_71;
      if (__OFADD__(v14, v7))
        goto LABEL_187;
      if (v14 + v7 >= v4)
        v52 = v4;
      else
        v52 = v14 + v7;
      if (v52 < v14)
        goto LABEL_188;
      if (v15 == v52)
        goto LABEL_70;
      v160 = v13;
      v53 = v11 + 16 * v15;
      while (2)
      {
        v54 = v53;
        v55 = v14;
        while (2)
        {
          v56 = *(float *)(v54 + 8);
          v57 = *(_QWORD *)(v54 - 16);
          v58 = *(float *)(v54 - 8);
          if (v56 != v58)
          {
            if (v58 >= v56)
              goto LABEL_55;
LABEL_64:
            if (!v11)
              goto LABEL_191;
            v66 = *(_QWORD *)v54;
            v67 = *(_DWORD *)(v54 + 8);
            *(_OWORD *)v54 = *(_OWORD *)(v54 - 16);
            *(_DWORD *)(v54 - 8) = v67;
            *(_QWORD *)(v54 - 16) = v66;
            v54 -= 16;
            if (v15 == ++v55)
              goto LABEL_55;
            continue;
          }
          break;
        }
        v59 = *(_QWORD *)v164;
        if (!*(_QWORD *)(*(_QWORD *)v164 + 16))
          goto LABEL_156;
        v60 = sub_249F8B27C(*(_QWORD *)v54);
        if ((v61 & 1) == 0)
          goto LABEL_157;
        v62 = *(_QWORD *)(v59 + 56);
        v63 = *(double *)(v62 + 8 * v60);
        v64 = sub_249F8B27C(v57);
        if ((v65 & 1) == 0)
          goto LABEL_158;
        v11 = v166;
        if (*(double *)(v62 + 8 * v64) < v63)
          goto LABEL_64;
LABEL_55:
        ++v15;
        v53 += 16;
        v14 = v155;
        if (v15 != v52)
          continue;
        break;
      }
      v15 = v52;
      v13 = v160;
LABEL_70:
      v7 = v154;
LABEL_71:
      if (v15 >= v14)
      {
        v153 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_24A012ABC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v69 = *((_QWORD *)v13 + 2);
        v68 = *((_QWORD *)v13 + 3);
        v70 = v69 + 1;
        v11 = v166;
        if (v69 >= v68 >> 1)
        {
          v123 = sub_24A012ABC((char *)(v68 > 1), v69 + 1, 1, v13);
          v11 = v166;
          v13 = v123;
        }
        *((_QWORD *)v13 + 2) = v70;
        v71 = v13 + 32;
        v72 = &v13[16 * v69 + 32];
        *(_QWORD *)v72 = v14;
        *((_QWORD *)v72 + 1) = v153;
        if (!v69)
        {
          v70 = 1;
LABEL_120:
          v4 = v158;
          v12 = v153;
          if (v153 >= v158)
            goto LABEL_137;
          continue;
        }
        v161 = v13;
        v156 = v13 + 32;
        while (2)
        {
          v73 = v70 - 1;
          if (v70 >= 4)
          {
            v78 = &v71[16 * v70];
            v79 = *((_QWORD *)v78 - 8);
            v80 = *((_QWORD *)v78 - 7);
            v84 = __OFSUB__(v80, v79);
            v81 = v80 - v79;
            if (v84)
              goto LABEL_163;
            v83 = *((_QWORD *)v78 - 6);
            v82 = *((_QWORD *)v78 - 5);
            v84 = __OFSUB__(v82, v83);
            v76 = v82 - v83;
            v77 = v84;
            if (v84)
              goto LABEL_164;
            v85 = v70 - 2;
            v86 = &v71[16 * v70 - 32];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v84 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v84)
              goto LABEL_166;
            v84 = __OFADD__(v76, v89);
            v90 = v76 + v89;
            if (v84)
              goto LABEL_169;
            if (v90 >= v81)
            {
              v108 = &v71[16 * v73];
              v110 = *(_QWORD *)v108;
              v109 = *((_QWORD *)v108 + 1);
              v84 = __OFSUB__(v109, v110);
              v111 = v109 - v110;
              if (v84)
                goto LABEL_176;
              v101 = v76 < v111;
            }
            else
            {
LABEL_91:
              if ((v77 & 1) != 0)
                goto LABEL_165;
              v85 = v70 - 2;
              v91 = &v71[16 * v70 - 32];
              v93 = *(_QWORD *)v91;
              v92 = *((_QWORD *)v91 + 1);
              v94 = __OFSUB__(v92, v93);
              v95 = v92 - v93;
              v96 = v94;
              if (v94)
                goto LABEL_168;
              v97 = &v71[16 * v73];
              v99 = *(_QWORD *)v97;
              v98 = *((_QWORD *)v97 + 1);
              v84 = __OFSUB__(v98, v99);
              v100 = v98 - v99;
              if (v84)
                goto LABEL_171;
              if (__OFADD__(v95, v100))
                goto LABEL_172;
              if (v95 + v100 < v76)
                goto LABEL_103;
              v101 = v76 < v100;
            }
            if (v101)
              v73 = v85;
          }
          else
          {
            if (v70 == 3)
            {
              v75 = *((_QWORD *)v13 + 4);
              v74 = *((_QWORD *)v13 + 5);
              v84 = __OFSUB__(v74, v75);
              v76 = v74 - v75;
              v77 = v84;
              goto LABEL_91;
            }
            v102 = *((_QWORD *)v13 + 4);
            v103 = *((_QWORD *)v13 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
LABEL_103:
            if ((v96 & 1) != 0)
              goto LABEL_167;
            v104 = &v71[16 * v73];
            v106 = *(_QWORD *)v104;
            v105 = *((_QWORD *)v104 + 1);
            v84 = __OFSUB__(v105, v106);
            v107 = v105 - v106;
            if (v84)
              goto LABEL_170;
            if (v107 < v95)
              goto LABEL_120;
          }
          v112 = v73 - 1;
          if (v73 - 1 >= v70)
            goto LABEL_159;
          if (!v11)
            goto LABEL_192;
          v113 = &v71[16 * v112];
          v114 = v71;
          v115 = *(_QWORD *)v113;
          v116 = v73;
          v117 = &v114[16 * v73];
          v118 = *((_QWORD *)v117 + 1);
          v119 = (float *)(v11 + 16 * *(_QWORD *)v113);
          v120 = (float *)(v11 + 16 * *(_QWORD *)v117);
          v121 = v11 + 16 * v118;
          swift_retain();
          sub_249FC7DB4(v119, v120, v121, __dst, v159);
          if (v163)
          {
LABEL_152:
            swift_bridgeObjectRelease();
            swift_release();
            *(_QWORD *)(v152 + 16) = 0;
            swift_release_n();
            return swift_bridgeObjectRelease();
          }
          swift_release();
          if (v118 < v115)
            goto LABEL_160;
          v13 = v161;
          if (v116 > *((_QWORD *)v161 + 2))
            goto LABEL_161;
          *(_QWORD *)v113 = v115;
          v71 = v156;
          *(_QWORD *)&v156[16 * v112 + 8] = v118;
          v122 = *((_QWORD *)v161 + 2);
          if (v116 >= v122)
            goto LABEL_162;
          v70 = v122 - 1;
          memmove(v117, v117 + 16, 16 * (v122 - 1 - v116));
          *((_QWORD *)v161 + 2) = v122 - 1;
          v7 = v154;
          v11 = v166;
          if (v122 <= 2)
            goto LABEL_120;
          continue;
        }
      }
LABEL_181:
      __break(1u);
    }
    break;
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  swift_release_n();
  __break(1u);
LABEL_192:
  swift_release_n();
  __break(1u);
LABEL_193:
  swift_release_n();
  __break(1u);
LABEL_194:
  swift_release_n();
  __break(1u);
LABEL_195:
  swift_release_n();
  result = sub_24A01F3B4();
  __break(1u);
  return result;
}

uint64_t sub_249FC8B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_24A012F4C(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_249FC8160(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

_QWORD *sub_249FC8C08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  _QWORD *result;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD **)v4;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v9 > v7[3] >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_249F89B7C(result, v13, 1, v7);
      v7 = result;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = v7[2];
  if ((v7[3] >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
    goto LABEL_27;
  v15 = (char *)&v7[v14 + 4];
  v16 = (char *)(a2 + 8 * a3);
  if (v16 < &v15[8 * v6] && v15 < &v16[8 * v6])
    goto LABEL_27;
  result = memcpy(v15, v16, 8 * v6);
  if (!v6)
  {
LABEL_22:
    *(_QWORD *)v4 = v7;
    return result;
  }
  v18 = v7[2];
  v19 = __OFADD__(v18, v6);
  v20 = v18 + v6;
  if (!v19)
  {
    v7[2] = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  result = (_QWORD *)sub_24A01F408();
  __break(1u);
  return result;
}

uint64_t sub_249FC8D9C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a2;
  v27 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA80);
  MEMORY[0x24BDAC7A8](v32);
  v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for VUStreamingGallery.Label(0);
  v31 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v30 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v18 = v17 | (v12 << 6);
LABEL_18:
    v22 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v18);
    sub_249F9896C(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v31 + 72) * v18, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    *v7 = v22;
    sub_249F9896C((uint64_t)v11, (uint64_t)v7 + *(int *)(v32 + 48), type metadata accessor for VUStreamingGallery.Label);
    if (*(_QWORD *)(a4 + 16))
    {
      sub_249F8B27C(v22);
      v24 = v23;
      sub_249F990A0((uint64_t)v7, &qword_2578FFA80);
      result = sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
      if ((v24 & 1) != 0)
      {
        *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = __OFADD__(v28++, 1);
        if (v19)
          goto LABEL_30;
      }
    }
    else
    {
      sub_249F990A0((uint64_t)v7, &qword_2578FFA80);
      result = sub_249F989C0((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    }
  }
  v19 = __OFADD__(v12++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v12 >= v30)
    return sub_249FBD5EC(v27, v26, v28, (_QWORD *)a3);
  v20 = *(_QWORD *)(v29 + 8 * v12);
  if (v20)
  {
LABEL_17:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_18;
  }
  v21 = v12 + 1;
  if (v12 + 1 >= v30)
    return sub_249FBD5EC(v27, v26, v28, (_QWORD *)a3);
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v21 = v12 + 2;
  if (v12 + 2 >= v30)
    return sub_249FBD5EC(v27, v26, v28, (_QWORD *)a3);
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v21 = v12 + 3;
  if (v12 + 3 >= v30)
    return sub_249FBD5EC(v27, v26, v28, (_QWORD *)a3);
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v12 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v30)
      return sub_249FBD5EC(v27, v26, v28, (_QWORD *)a3);
    v20 = *(_QWORD *)(v29 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249FC9058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_249FC8D9C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_249FC8D9C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x24BD07950](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_249FC920C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_249FB25D8(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_249FC9228()
{
  return sub_249FA2B24(&qword_2578FFA90, type metadata accessor for VUStreamingGallery.Label, (uint64_t)&protocol conformance descriptor for VUStreamingGallery.Label);
}

uint64_t sub_249FC9254()
{
  return type metadata accessor for VUStreamingGallery(0);
}

uint64_t sub_249FC925C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24A01EDA8();
  if (v1 <= 0x3F)
  {
    result = sub_24A01ED48();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for VUStreamingGallery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of VUStreamingGallery.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of VUStreamingGallery.add(observations:observationIdentifiers:trackIdentifiers:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of VUStreamingGallery.add(observation:observationIdentifier:trackIdentifier:context:ignoreLowConfidence:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)v5 + 488))(a1, a2, a3 & 1, a4, a5 & 1);
}

uint64_t dispatch thunk of VUStreamingGallery.add(observation:observationIdentifier:trackIdentifier:context:ignoreLowConfidence:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 496))(a1, a2, a3 & 1);
}

{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 504))(a1, a2, a3 & 1);
}

{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 512))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of VUStreamingGallery.tag(observationIdentifier:tag:tagType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of VUStreamingGallery.update(maxKeyFacesPerCluster:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of VUStreamingGallery.update(maxKeyFacesPerCluster:sortBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of VUStreamingGallery.recognize(observation:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of VUStreamingGallery.recognize(observation:context:k:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of VUStreamingGallery.autoUpdate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of VUStreamingGallery.observationsCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of VUStreamingGallery.trackID(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of VUStreamingGallery.observations(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of VUStreamingGallery.entities()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of VUStreamingGallery.remove(trackIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of VUStreamingGallery.needUpdate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t *initializeBufferWithCopyOfBuffer for VUStreamingGallery.Label(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A01EBA4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for VUStreamingGallery.Label(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_24A01EBA4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A01EBA4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A01EBA4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A01EBA4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A01EBA4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249FC9900()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A01EBA4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.Configuration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.Configuration()
{
  return &type metadata for VUStreamingGallery.Configuration;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.ClusterResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.ClusterResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.ClusterResult()
{
  return &type metadata for VUStreamingGallery.ClusterResult;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.RecognitionResult(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.RecognitionResult(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.RecognitionResult()
{
  return &type metadata for VUStreamingGallery.RecognitionResult;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUStreamingGallery.Recognition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for VUStreamingGallery.Label(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = sub_24A01EBA4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for VUStreamingGallery.Recognition(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for VUStreamingGallery.Label(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v4 = sub_24A01EBA4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    }
  }
  return result;
}

char *initializeWithCopy for VUStreamingGallery.Recognition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_24A01EBA4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_DWORD *)&a1[*(int *)(a3 + 20)] = *(_DWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for VUStreamingGallery.Recognition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;

  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = sub_24A01EBA4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v12 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_24A01EBA4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *(_DWORD *)&a1[*(int *)(a3 + 20)] = *(_DWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *initializeWithTake for VUStreamingGallery.Recognition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_24A01EBA4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_DWORD *)&a1[*(int *)(a3 + 20)] = *(_DWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for VUStreamingGallery.Recognition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;

  v6 = type metadata accessor for VUStreamingGallery.Label(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = sub_24A01EBA4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v12 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_249F989C0((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_24A01EBA4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *(_DWORD *)&a1[*(int *)(a3 + 20)] = *(_DWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.Recognition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249FCA21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.Recognition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249FCA268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFA68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_249FCA2AC()
{
  unint64_t v0;

  sub_249FCA320();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249FCA320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578FFAA8)
  {
    type metadata accessor for VUStreamingGallery.Label(255);
    v0 = sub_24A01F1EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2578FFAA8);
  }
}

uint64_t sub_249FCA374()
{
  return sub_24A012764() & 1;
}

uint64_t sub_249FCA390()
{
  return swift_release();
}

uint64_t sub_249FCA398(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_249F92358(a2, a3);
  }
  return result;
}

unint64_t sub_249FCA3CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2578FFAF8;
  if (!qword_2578FFAF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578FFAF0);
    v2 = MEMORY[0x24BEE4018];
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2578FFAF8);
  }
  return result;
}

uint64_t sub_249FCA428(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_249F92358(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_249FCA454()
{
  unint64_t result;

  result = qword_2544CACD0;
  if (!qword_2544CACD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2544CACD0);
  }
  return result;
}

void sub_249FCA490()
{
  uint64_t v0;

  sub_249FDC0A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249FCA4A8(void *a1)
{
  unint64_t v1;

  return sub_249FB41D0(a1, v1);
}

uint64_t sub_249FCA4B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FCA4DC()
{
  return swift_deallocObject();
}

uint64_t sub_249FCA4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VUStreamingGallery.Label(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FCA530()
{
  uint64_t v0;

  return sub_249FB4B10(v0);
}

void sub_249FCA548()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
}

void sub_249FCA550(uint64_t a1)
{
  uint64_t v1;

  sub_249FA6E7C(a1, v1);
}

void sub_249FCA568()
{
  uint64_t v0;

  sub_249FD40BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_249FCA584@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = 0;
  return result;
}

id sub_249FCA5B0()
{
  uint64_t v0;

  return sub_249FD730C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_249FCA620()
{
  sub_249FCA490();
}

unint64_t Int.entityClass.getter@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (HIBYTE(result) == 6)
    v2 = 3;
  else
    v2 = HIBYTE(result) == 2;
  if (HIBYTE(result) == 63)
    v3 = 2;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

uint64_t Int.rawValue.getter(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

BOOL static VUError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VUError.hash(into:)()
{
  return sub_24A01F4F8();
}

uint64_t VUError.hashValue.getter()
{
  sub_24A01F4EC();
  sub_24A01F4F8();
  return sub_24A01F528();
}

unint64_t sub_249FCA6F0()
{
  unint64_t result;

  result = qword_2578FFB68;
  if (!qword_2578FFB68)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUError, &type metadata for VUError);
    atomic_store(result, (unint64_t *)&qword_2578FFB68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VUError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VUError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_249FCA820 + 4 * byte_24A020E15[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_249FCA854 + 4 * asc_24A020E10[v4]))();
}

uint64_t sub_249FCA854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FCA85C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249FCA864);
  return result;
}

uint64_t sub_249FCA870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249FCA878);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_249FCA87C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FCA884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUError()
{
  return &type metadata for VUError;
}

uint64_t sub_249FCA8A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_24A01F06C();
  if (!v18)
    return sub_24A01EFB8();
  v19 = v18;
  v25 = v15;
  v39 = sub_24A01F390();
  v32 = sub_24A01F39C();
  sub_24A01F354();
  v36 = v17;
  result = sub_24A01F060();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_24A01F084();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_24A01F384();
      sub_24A01F078();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t sub_249FCAB7C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24A012F38();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_249FDFDA0(v6);
  return sub_24A01F348();
}

void sub_249FCABF4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t j;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  unsigned int v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  id v40;
  id k;
  void *v42;
  id v43;
  void *v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __int16 v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  _QWORD *i;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  unint64_t v76;
  int64_t v77;
  __int128 v78;
  __int128 v79;
  _QWORD *v80;

  v2 = v1;
  j = a1;
  v4 = (_QWORD *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
  swift_beginAccess();
  *v4 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v5 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v6 = (void *)sub_24A01EE44();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v8 = *(void **)(j + 16);
  type metadata accessor for VUIndexSubset();
  v9 = v8;
  v10 = sub_24A01F198();
  if (v1)
  {

    v11 = v9;
LABEL_3:

    return;
  }
  v12 = v10;

  if (v12 >> 62)
    goto LABEL_31;
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v70 = v7;
  for (i = v4; v13; i = v4)
  {
    v75 = (id)v13;
    for (j = 4; ; ++j)
    {
      v14 = (v12 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24BD071F4](j - 4, v12) : *(id *)(v12 + 8 * j);
      v15 = v14;
      v7 = (id)(j - 3);
      if (__OFADD__(j - 4, 1))
        break;
      v16 = objc_msgSend(v14, sel_type);
      if ((v16 & 0x80000000) != 0)
        goto LABEL_90;
      v17 = v16;
      if (v16 >= 0x100)
        goto LABEL_90;
      v18 = objc_msgSend(v15, sel_embeddingRevision);
      v19 = objc_msgSend(v15, sel_contextualEmbeddingRevision);
      type metadata accessor for VUIndexParameters();
      swift_allocObject();
      v20 = sub_249F9A41C(v17, (uint64_t)v18, (uint64_t)v19, 0);
      if (v2)
      {

        v2 = 0;
      }
      else
      {
        v21 = v20;
        swift_beginAccess();
        v73 = v21;
        swift_retain_n();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v23 = v4;
        v4 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        v80 = (_QWORD *)*v23;
        v24 = v80;
        *v23 = 0x8000000000000000;
        v2 = sub_249F8B0C4(v17);
        v26 = v24[2];
        v27 = (v25 & 1) == 0;
        v28 = v26 + v27;
        if (__OFADD__(v26, v27))
          goto LABEL_29;
        v29 = v25;
        if (v24[3] >= v28)
        {
          if ((v4 & 1) == 0)
            sub_249FC2FF0();
        }
        else
        {
          sub_249FBB84C(v28, (char)v4);
          v30 = sub_249F8B0C4(v17);
          if ((v29 & 1) != (v31 & 1))
            goto LABEL_91;
          v2 = v30;
        }
        v4 = i;
        v32 = v80;
        if ((v29 & 1) != 0)
        {
          v33 = v80[7];
          swift_release();
          *(_QWORD *)(v33 + 8 * v2) = v73;
        }
        else
        {
          v80[(v2 >> 6) + 8] |= 1 << v2;
          *(_BYTE *)(v32[6] + v2) = v17;
          *(_QWORD *)(v32[7] + 8 * v2) = v73;
          v34 = v32[2];
          v35 = __OFADD__(v34, 1);
          v36 = v34 + 1;
          if (v35)
            goto LABEL_30;
          v32[2] = v36;
        }
        *i = v32;
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_release_n();
        v2 = 0;
      }
      if (v7 == v75)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    v13 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    v70 = v7;
  }
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(*(id *)(j + 16), sel_persistentStoreCoordinator);
  v72 = j;
  if (!v37)
    goto LABEL_51;
  v38 = v37;
  v39 = v2;
  v40 = objc_msgSend(v37, sel_persistentStores);

  sub_249F990DC(0, &qword_2544CAEA8);
  v13 = sub_24A01EF88();

  if (!(v13 >> 62))
  {
    v2 = v39;
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_35;
LABEL_50:
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  v48 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  v2 = v39;
  if (!v48)
    goto LABEL_50;
LABEL_35:
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_87;
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (k = *(id *)(v13 + 32); ; k = (id)MEMORY[0x24BD071F4](0, v13))
    {
      v42 = k;
      swift_bridgeObjectRelease();
      if (!v42)
        break;
      v43 = objc_msgSend(v42, sel_metadata);
      if (!v43)
        goto LABEL_89;
      v44 = v43;
      v13 = sub_24A01EDFC();

      if (*(_QWORD *)(v13 + 16) && (v45 = sub_249F8B0F8(0xD000000000000010, 0x800000024A023840), (v46 & 1) != 0))
      {
        sub_249F93A3C(*(_QWORD *)(v13 + 56) + 32 * v45, (uint64_t)&v78);
      }
      else
      {
        v78 = 0u;
        v79 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v79 + 1))
      {
        v2 = v39;
LABEL_52:
        sub_249F990A0((uint64_t)&v78, &qword_2544CAF40);
        goto LABEL_53;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC80);
      if (swift_dynamicCast())
      {
        v74 = v42;
        v47 = (unint64_t)v80;
        v2 = v39;
        goto LABEL_54;
      }
      v2 = v39;
LABEL_53:
      v74 = v42;
      v47 = sub_249F76254(MEMORY[0x24BEE4AF8]);
LABEL_54:
      v49 = 0;
      v76 = v47 + 64;
      v50 = 1 << *(_BYTE *)(v47 + 32);
      v51 = -1;
      if (v50 < 64)
        v51 = ~(-1 << v50);
      v39 = v51 & *(_QWORD *)(v47 + 64);
      v77 = (unint64_t)(v50 + 63) >> 6;
      while (1)
      {
        while (1)
        {
          if (v39)
          {
            v52 = __clz(__rbit64(v39));
            v39 &= v39 - 1;
            v53 = v52 | (v49 << 6);
          }
          else
          {
            v35 = __OFADD__(v49++, 1);
            if (v35)
              goto LABEL_85;
            if (v49 >= v77)
            {
LABEL_82:
              swift_release();

              v11 = v70;
              goto LABEL_3;
            }
            v54 = *(_QWORD *)(v76 + 8 * v49);
            if (!v54)
            {
              v55 = v49 + 1;
              if (v49 + 1 >= v77)
                goto LABEL_82;
              v54 = *(_QWORD *)(v76 + 8 * v55);
              if (!v54)
              {
                v55 = v49 + 2;
                if (v49 + 2 >= v77)
                  goto LABEL_82;
                v54 = *(_QWORD *)(v76 + 8 * v55);
                if (!v54)
                {
                  v55 = v49 + 3;
                  if (v49 + 3 >= v77)
                    goto LABEL_82;
                  v54 = *(_QWORD *)(v76 + 8 * v55);
                  if (!v54)
                  {
                    while (1)
                    {
                      v49 = v55 + 1;
                      if (__OFADD__(v55, 1))
                        goto LABEL_86;
                      if (v49 >= v77)
                        goto LABEL_82;
                      v54 = *(_QWORD *)(v76 + 8 * v49);
                      ++v55;
                      if (v54)
                        goto LABEL_70;
                    }
                  }
                }
              }
              v49 = v55;
            }
LABEL_70:
            v39 = (v54 - 1) & v54;
            v53 = __clz(__rbit64(v54)) + (v49 << 6);
          }
          v56 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 16 * v53);
          v58 = *v56;
          v57 = v56[1];
          v59 = *(_QWORD **)(*(_QWORD *)(v47 + 56) + 8 * v53);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v60 = sub_249FCB51C(v58, v57);
          if ((v60 & 0x100) == 0)
            break;
          swift_bridgeObjectRelease();
        }
        v61 = v59[2];
        if (!v61)
          break;
        if (v61 == 1)
          goto LABEL_84;
        v62 = v60;
        v63 = v59[4];
        v64 = v59[5];
        type metadata accessor for VUIndexParameters();
        v65 = swift_allocObject();
        v66 = v64;
        v13 = v65;
        v67 = sub_249F9A41C(v62, v63, v66, 0);
        if (v2)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          v68 = v67;
          swift_beginAccess();
          swift_retain_n();
          v69 = swift_isUniquelyReferenced_nonNull_native();
          v80 = (_QWORD *)*i;
          *i = 0x8000000000000000;
          v13 = (unint64_t)&v80;
          sub_249FC02EC(v68, v62, v69);
          *i = v80;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRetain();
          sub_249FE2300(v62, v72, v59);
          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        v2 = 0;
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      ;
    }
LABEL_51:
    v42 = 0;
    v78 = 0u;
    v79 = 0u;
    goto LABEL_52;
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  sub_24A01F3B4();
  __break(1u);
LABEL_91:
  sub_24A01F48C();
  __break(1u);
}

uint64_t sub_249FCB51C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  int v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 *v19;
  unsigned int v20;
  _QWORD v21[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v8 = 1;
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_24A01F330();
      v7 = sub_249FF415C(v6, v4, 10);
      v8 = (v7 >> 8) & 1;
      goto LABEL_38;
    }
    v21[0] = a1;
    v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v9 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LOBYTE(v7) = BYTE1(a1) - 48;
          if ((BYTE1(a1) - 48) <= 9u)
          {
            v13 = v3 - 2;
            if (v13)
            {
              v14 = (unsigned __int8 *)v21 + 2;
              while (1)
              {
                v15 = *v14 - 48;
                if (v15 > 9)
                  goto LABEL_35;
                if (((10 * v7) & 0xF00) != 0)
                  goto LABEL_35;
                v7 = (10 * v7) + v15;
                if (((v7 >> 8) & 1) != 0)
                  goto LABEL_35;
                v8 = 0;
                ++v14;
                if (!--v13)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LOBYTE(v7) = a1 - 48;
          if ((a1 - 48) <= 9u)
          {
            v16 = v3 - 1;
            if (v16)
            {
              v19 = (unsigned __int8 *)v21 + 1;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  goto LABEL_35;
                if (((10 * v7) & 0xF00) != 0)
                  goto LABEL_35;
                v7 = (10 * v7) + v20;
                if (((v7 >> 8) & 1) != 0)
                  goto LABEL_35;
                v8 = 0;
                ++v19;
                if (!--v16)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          v9 = 0;
          v7 = -(BYTE1(a1) - 48);
          if ((v7 & 0xFFFFFF00) == 0)
          {
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v21 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_35;
                if (((10 * v7) & 0xF00) != 0)
                  goto LABEL_35;
                v7 = (10 * v7) - v12;
                if ((v7 & 0xFFFFFF00) != 0)
                  goto LABEL_35;
                v8 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_38;
              }
            }
LABEL_37:
            v8 = 0;
            goto LABEL_38;
          }
LABEL_54:
          v8 = 1;
          LOBYTE(v7) = v9;
          goto LABEL_38;
        }
LABEL_35:
        LOBYTE(v7) = 0;
        v8 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
  v7 = sub_249FF4254(a1, a2, 10);
  swift_bridgeObjectRelease();
  v8 = (v7 >> 8) & 1;
LABEL_39:
  if (v8)
    v17 = 0;
  else
    v17 = v7;
  return v17 | (v8 << 8);
}

void sub_249FCB78C(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (!v3)
    goto LABEL_16;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_persistentStores);

  sub_249F990DC(0, &qword_2544CAEA8);
  v6 = sub_24A01EF88();

  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v14 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_15;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x24BD071F4](0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_20;
    }
    v7 = *(id *)(v6 + 32);
  }
  v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_16:
    v15 = 0u;
    v16 = 0u;
LABEL_17:
    sub_249F98AB8((uint64_t)&v15, a2, &qword_2544CAF40);
    return;
  }
  v9 = v8;
  sub_24A01EEBC();
  v10 = objc_msgSend(v9, sel_metadata);

  if (v10)
  {
    v11 = sub_24A01EDFC();

    if (*(_QWORD *)(v11 + 16) && (v12 = sub_249F8B0F8(0x2E7865646E495556, 0xE800000000000000), (v13 & 1) != 0))
    {
      sub_249F93A3C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v15);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
}

void sub_249FCB9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v5 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_persistentStores);

    sub_249F990DC(0, &qword_2544CAEA8);
    v8 = sub_24A01EF88();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_4:
        if ((v8 & 0xC000000000000001) != 0)
        {
          v9 = (id)MEMORY[0x24BD071F4](0, v8);
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_19;
          }
          v9 = *(id *)(v8 + 32);
        }
        v10 = v9;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v21 = 0x2E7865646E495556;
        *((_QWORD *)&v21 + 1) = 0xE800000000000000;
        v11 = v10;
        sub_24A01EEBC();
        sub_249F93A3C(a4, (uint64_t)&v21);
        v12 = objc_msgSend(v11, sel_metadata);
        if (v12)
        {
          v13 = v12;
          v14 = sub_24A01EDFC();

          v20 = v14;
          if (v22)
          {
            sub_249F989B0(&v21, v19);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v18 = v14;
            sub_249FBF10C(v19, 0x2E7865646E495556, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14)
            {
LABEL_10:
              v16 = (void *)sub_24A01EDF0();
              swift_bridgeObjectRelease();
LABEL_13:
              objc_msgSend(v11, sel_setMetadata_, v16, v18);

              return;
            }
          }
          else
          {
            sub_249F990A0((uint64_t)&v21, &qword_2544CAF40);
            sub_249FB7DDC(0x2E7865646E495556, 0xE800000000000000, v19);
            swift_bridgeObjectRelease();
            sub_249F990A0((uint64_t)v19, &qword_2544CAF40);
            if (v20)
              goto LABEL_10;
          }
          v16 = 0;
          goto LABEL_13;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FCBC58(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  _QWORD v17[6];
  uint64_t v18;
  unsigned __int8 v19;

  v4 = v3;
  v18 = 0;
  v19 = 1;
  v8 = *(void **)(v4 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_BYTE *)(v9 + 32) = a3 & 1;
  *(_QWORD *)(v9 + 40) = &v18;
  *(_QWORD *)(v9 + 48) = v4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249FE29B0;
  *(_QWORD *)(v10 + 24) = v9;
  v17[4] = sub_249FCA5C8;
  v17[5] = v10;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_249F87210;
  v17[3] = &block_descriptor_153;
  v11 = _Block_copy(v17);
  v12 = a1;
  v13 = v8;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v18;
    v16 = v19;
    swift_release();
    if (v16)
      return 0;
    else
      return v15;
  }
  return result;
}

void sub_249FCBDD8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;

  v10 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v11 = (void *)sub_24A01EE44();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  if (a1)
    objc_msgSend(v12, sel_setPredicate_, a1);
  if ((a3 & 1) == 0)
    objc_msgSend(v12, sel_setFetchLimit_, a2);
  v13 = *(void **)(a5 + 16);
  type metadata accessor for VUIndexObservation();
  v14 = v13;
  v15 = sub_24A01F18C();

  *(_QWORD *)a4 = v15;
  *(_BYTE *)(a4 + 8) = 0;
}

BOOL sub_249FCBEF8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  if ((a2 & 1) != 0)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A0208F0;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v8 + 16) = xmmword_24A0208B0;
  v10 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v7 + 32) = sub_24A01F09C();
  sub_24A01EFA0();
  if ((a4 & 1) == 0)
  {
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24A0208B0;
    *(_QWORD *)(v11 + 56) = v9;
    *(_QWORD *)(v11 + 64) = v10;
    *(_QWORD *)(v11 + 32) = a3;
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
  }
  v12 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  v14 = sub_249FCBC58(v13, 1, 0);
  return v14 > 0;
}

uint64_t sub_249FCC124(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  v2 = v1;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24A0208B0;
  v5 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 32) = a1;
  v6 = (void *)sub_24A01F09C();
  v17 = MEMORY[0x24BEE4B00];
  v7 = *(void **)(v2 + 16);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v2;
  v8[4] = &v17;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_249F98A54;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_123;
  v10 = _Block_copy(aBlock);
  v11 = v7;
  v12 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v17;

    swift_release();
    v15 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

void sub_249FCC324(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[3];
  uint64_t v60;

  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_24A01EE44();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  v7 = (void *)sub_24A01EE44();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_expressionForKeyPath_, v7);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB660]), sel_init);
  v11 = (void *)sub_24A01EE44();
  objc_msgSend(v10, sel_setName_, v11);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v12 + 56) = sub_249F990DC(0, &qword_2544CABD0);
  *(_QWORD *)(v12 + 32) = v9;
  v53 = v9;
  v13 = (void *)sub_24A01EE44();
  v14 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v8, sel_expressionForFunction_arguments_, v13, v14);

  objc_msgSend(v10, sel_setExpression_, v15);
  objc_msgSend(v10, sel_setExpressionResultType_, 300);
  objc_msgSend(v6, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A0208F0;
  v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v18 = (void *)sub_24A01EE44();
  v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

  v20 = 0x6C6562616CLL;
  *(_QWORD *)(v16 + 32) = v19;
  v59[0] = v16;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v21 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v21);

  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24A0208B0;
  v23 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 32) = 0x6C6562616CLL;
  *(_QWORD *)(v22 + 40) = 0xE500000000000000;
  v24 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToGroupBy_, v24);

  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v25 + 56) = v23;
  *(_QWORD *)(v25 + 32) = 0x6C6562616CLL;
  *(_QWORD *)(v25 + 40) = 0xE500000000000000;
  *(_QWORD *)(v25 + 88) = sub_249F990DC(0, &qword_2544CABD8);
  *(_QWORD *)(v25 + 64) = v10;
  v26 = v6;
  v27 = v10;
  v28 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v28);

  if (a1)
    objc_msgSend(v6, sel_setPredicate_, a1);
  v29 = *(void **)(a2 + 16);
  sub_249F990DC(0, &qword_2544CABC8);
  v30 = v29;
  v31 = sub_24A01F198();

  if (v31 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v32 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v32)
  {
    v51 = v27;
    v52 = v26;
    if (v32 >= 1)
    {
      v33 = 0;
      while (1)
      {
        v34 = (v31 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x24BD071F4](v33, v31)
            : *(id *)(v31 + 8 * v33 + 32);
        v26 = v34;
        *(_QWORD *)&v57 = v20;
        *((_QWORD *)&v57 + 1) = 0xE500000000000000;
        v35 = objc_msgSend(v34, sel___swift_objectForKeyedSubscript_, sub_24A01F474());
        swift_unknownObjectRelease();
        if (v35)
        {
          sub_24A01F21C();
          swift_unknownObjectRelease();
        }
        else
        {
          v57 = 0u;
          v58 = 0u;
        }
        sub_249F98C10((uint64_t)&v57, (uint64_t)v59, &qword_2544CAF40);
        if (v60)
        {
          if ((swift_dynamicCast() & 1) == 0)
            goto LABEL_29;
          *(_QWORD *)&v57 = 0x746E756F63;
          *((_QWORD *)&v57 + 1) = 0xE500000000000000;
          v36 = objc_msgSend(v26, sel___swift_objectForKeyedSubscript_, sub_24A01F474(), v51);
          swift_unknownObjectRelease();
          if (v36)
          {
            sub_24A01F21C();
            swift_unknownObjectRelease();
          }
          else
          {
            v57 = 0u;
            v58 = 0u;
          }
          sub_249F98C10((uint64_t)&v57, (uint64_t)v59, &qword_2544CAF40);
          if (v60)
            break;
        }

        sub_249F990A0((uint64_t)v59, &qword_2544CAF40);
LABEL_9:
        if (v32 == ++v33)
        {

          swift_bridgeObjectRelease();
          v26 = v52;
          goto LABEL_38;
        }
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        v27 = a3;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v59[0] = *a3;
        v38 = v59[0];
        *a3 = 0x8000000000000000;
        v20 = sub_249F8B27C(v56);
        v40 = *(_QWORD *)(v38 + 16);
        v41 = (v39 & 1) == 0;
        v42 = v40 + v41;
        if (__OFADD__(v40, v41))
        {
          __break(1u);
          goto LABEL_40;
        }
        v43 = v39;
        if (*(_QWORD *)(v38 + 24) >= v42)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v46 = (_QWORD *)v59[0];
            if ((v39 & 1) == 0)
              goto LABEL_27;
          }
          else
          {
            sub_249FC20E0();
            v46 = (_QWORD *)v59[0];
            if ((v43 & 1) == 0)
              goto LABEL_27;
          }
        }
        else
        {
          sub_249FBA388(v42, isUniquelyReferenced_nonNull_native);
          v44 = sub_249F8B27C(v56);
          if ((v43 & 1) != (v45 & 1))
            goto LABEL_43;
          v20 = v44;
          v46 = (_QWORD *)v59[0];
          if ((v43 & 1) == 0)
          {
LABEL_27:
            v46[(v20 >> 6) + 8] |= 1 << v20;
            v47 = 8 * v20;
            *(_QWORD *)(v46[6] + v47) = v56;
            *(_QWORD *)(v46[7] + v47) = v56;
            v48 = v46[2];
            v49 = __OFADD__(v48, 1);
            v50 = v48 + 1;
            if (v49)
            {
              __break(1u);
              goto LABEL_42;
            }
            v46[2] = v50;
            goto LABEL_33;
          }
        }
        *(_QWORD *)(v46[7] + 8 * v20) = v56;
LABEL_33:
        *a3 = v46;

        swift_bridgeObjectRelease();
        v20 = 0x6C6562616CLL;
        goto LABEL_9;
      }
LABEL_29:

      goto LABEL_9;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    sub_24A01F48C();
    __break(1u);
  }
  else
  {

    swift_bridgeObjectRelease();
LABEL_38:

  }
}

uint64_t sub_249FCCB28(void *a1)
{
  uint64_t v1;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v11;
  int v12;
  _QWORD v13[6];
  uint64_t v14;
  unsigned __int8 v15;

  v14 = 0;
  v15 = 1;
  v3 = *(void **)(v1 + 16);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a1;
  v4[3] = &v14;
  v4[4] = v1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_249FE1BD8;
  *(_QWORD *)(v5 + 24) = v4;
  v13[4] = sub_249FCA5C8;
  v13[5] = v5;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_249F87210;
  v13[3] = &block_descriptor_113;
  v6 = _Block_copy(v13);
  v7 = a1;
  v8 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v14;
    v12 = v15;
    swift_release();
    if (v12)
      return 0;
    else
      return v11;
  }
  return result;
}

void sub_249FCCC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if (a1)
    objc_msgSend(v8, sel_setPredicate_, a1);
  v9 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexTag();
  v10 = v9;
  v11 = sub_24A01F18C();

  *(_QWORD *)a2 = v11;
  *(_BYTE *)(a2 + 8) = 0;
}

uint64_t sub_249FCCD90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  int v9;
  _QWORD v10[6];
  uint64_t v11;
  unsigned __int8 v12;

  v11 = 0;
  v12 = 1;
  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v11;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_249FE1B94;
  *(_QWORD *)(v3 + 24) = v2;
  v10[4] = sub_249FCA5C8;
  v10[5] = v3;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_249F87210;
  v10[3] = &block_descriptor_103;
  v4 = _Block_copy(v10);
  v5 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v11;
    v9 = v12;
    swift_release();
    if (v9)
      return 0;
    else
      return v8;
  }
  return result;
}

void sub_249FCCEEC(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;

  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_24A01EE44();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v7 = (void *)sub_24A01F09C();
  objc_msgSend(v6, sel_setPredicate_, v7);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v8 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 32) = 0x6C6562616CLL;
  *(_QWORD *)(v8 + 40) = 0xE500000000000000;
  v10 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v10);

  objc_msgSend(v6, sel_setReturnsDistinctResults_, 1);
  objc_msgSend(v6, sel_setResultType_, 2);
  v11 = *(void **)(a2 + 16);
  sub_249F990DC(0, &qword_2544CABC8);
  v12 = v11;
  v13 = sub_24A01F198();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_24A01F3CC();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_249FCD13C(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  _QWORD v12[6];
  uint64_t v13;
  unsigned __int8 v14;

  v2 = v1;
  v13 = 0;
  v14 = 1;
  v4 = *(void **)(v2 + 16);
  v5 = swift_allocObject();
  *(_WORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = &v13;
  *(_QWORD *)(v5 + 32) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_249FE1B78;
  *(_QWORD *)(v6 + 24) = v5;
  v12[4] = sub_249FCA5C8;
  v12[5] = v6;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_249F87210;
  v12[3] = &block_descriptor_93;
  v7 = _Block_copy(v12);
  v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v13;
    v11 = v14;
    swift_release();
    if (v11)
      return 0;
    else
      return v10;
  }
  return result;
}

void sub_249FCD2A0(__int16 a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
  v11 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  *(_WORD *)(v9 + 32) = a1;
  v12 = (void *)sub_24A01F09C();
  objc_msgSend(v8, sel_setPredicate_, v12);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v13 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 32) = 0x6C6562616CLL;
  *(_QWORD *)(v13 + 40) = 0xE500000000000000;
  v15 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setPropertiesToFetch_, v15);

  objc_msgSend(v8, sel_setReturnsDistinctResults_, 1);
  objc_msgSend(v8, sel_setResultType_, 2);
  v16 = *(void **)(a3 + 16);
  sub_249F990DC(0, &qword_2544CABC8);
  v17 = v16;
  v18 = sub_24A01F198();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_24A01F3CC();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  *(_QWORD *)a2 = v19;
  *(_BYTE *)(a2 + 8) = 0;
}

uint64_t sub_249FCD52C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  int v9;
  _QWORD v10[6];
  uint64_t v11;
  unsigned __int8 v12;

  v11 = 0;
  v12 = 1;
  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v11;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_249FE1B60;
  *(_QWORD *)(v3 + 24) = v2;
  v10[4] = sub_249FCA5C8;
  v10[5] = v3;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_249F87210;
  v10[3] = &block_descriptor_83;
  v4 = _Block_copy(v10);
  v5 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v11;
    v9 = v12;
    swift_release();
    if (v9)
      return 0;
    else
      return v8;
  }
  return result;
}

void sub_249FCD688(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;

  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_24A01EE44();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A0208C0;
  v8 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v7 + 64) = v8;
  *(_WORD *)(v7 + 32) = 1;
  v9 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v7 + 96) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v7 + 104) = v9;
  *(_BYTE *)(v7 + 72) = 2;
  v10 = (void *)sub_24A01F09C();
  objc_msgSend(v6, sel_setPredicate_, v10);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v11 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 32) = 0x746176726573626FLL;
  *(_QWORD *)(v11 + 40) = 0xEB000000006E6F69;
  v13 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v13);

  objc_msgSend(v6, sel_setReturnsDistinctResults_, 1);
  v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  v15 = v14;
  v16 = sub_24A01F198();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_24A01F3CC();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  *(_QWORD *)a1 = v17;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_249FCD90C(__int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  _QWORD aBlock[6];
  uint64_t v19;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  v19 = MEMORY[0x24BEE4AF8];
  v10 = *(void **)(v3 + 16);
  v11 = swift_allocObject();
  *(_WORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = v9;
  *(_QWORD *)(v11 + 48) = v3;
  *(_QWORD *)(v11 + 56) = &v19;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_249FE1B18;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_73;
  v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v14 = v9;
  swift_retain();
  swift_retain();
  v15 = v10;
  swift_release();
  objc_msgSend(v15, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = v19;
    swift_release();
    return v17;
  }
  return result;
}

id sub_249FCDADC(__int16 a1, uint64_t a2, id a3, uint64_t a4, unint64_t a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint32_t *p_align;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24A0208F0;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208C0;
  v13 = MEMORY[0x24BEE3F30];
  v14 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v12 + 64) = v14;
  *(_WORD *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_WORD *)(v12 + 72) = a1;
  *(_QWORD *)(v11 + 32) = sub_24A01F09C();
  v45 = v11;
  sub_24A01EFA0();
  p_align = (uint32_t *)&unk_24A020000;
  v16 = MEMORY[0x24BEE0D00];
  if (!a3)
    goto LABEL_4;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v17 + 56) = v16;
  *(_QWORD *)(v17 + 64) = sub_249FE1970();
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  swift_bridgeObjectRetain();
  a3 = (id)sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_33;
  while (1)
  {
    sub_24A01EFD0();
    sub_24A01EFA0();

LABEL_4:
    swift_bridgeObjectRetain();
    v18 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v18);

    objc_msgSend((id)a4, sel_setPredicate_, v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = *((_OWORD *)p_align + 139);
    *(_QWORD *)(v20 + 56) = v16;
    *(_QWORD *)(v20 + 32) = 0x746176726573626FLL;
    *(_QWORD *)(v20 + 40) = 0xEB000000006E6F69;
    v21 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    objc_msgSend((id)a4, sel_setPropertiesToFetch_, v21);

    objc_msgSend((id)a4, sel_setReturnsDistinctResults_, 1);
    v22 = *(void **)(a5 + 16);
    type metadata accessor for VUIndexTag();
    v23 = v22;
    a5 = sub_24A01F198();

    if (a5 >> 62)
      break;
    a4 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a4)
      goto LABEL_35;
LABEL_6:
    v44 = MEMORY[0x24BEE4AF8];
    result = (id)sub_249F8CCDC(0, a4 & ~(a4 >> 63), 0);
    if (a4 < 0)
    {
      __break(1u);
LABEL_37:
      __break(1u);
      return result;
    }
    v25 = 0;
    v26 = v44;
    v16 = a5 & 0xC000000000000001;
    p_align = &stru_251B6CFE8.align;
    while (a4 != v25)
    {
      if (v16)
        v27 = (id)MEMORY[0x24BD071F4](v25, a5);
      else
        v27 = *(id *)(a5 + 8 * v25 + 32);
      v28 = v27;
      result = objc_msgSend(v27, sel_observation, v43);
      if (!result)
        goto LABEL_37;
      v29 = result;
      v30 = objc_msgSend(result, sel_mapping);

      if (v30)
      {
        v31 = (uint64_t)objc_msgSend(v30, sel_label);

        v28 = v30;
      }
      else
      {
        v31 = -1;
      }

      v33 = *(_QWORD *)(v44 + 16);
      v32 = *(_QWORD *)(v44 + 24);
      a3 = (id)(v33 + 1);
      if (v33 >= v32 >> 1)
        sub_249F8CCDC(v32 > 1, v33 + 1, 1);
      ++v25;
      *(_QWORD *)(v44 + 16) = a3;
      v34 = v44 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v31;
      *(_BYTE *)(v34 + 40) = 0;
      if (a4 == v25)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_33:
    sub_24A01EFAC();
  }
  swift_bridgeObjectRetain();
  a4 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (a4)
    goto LABEL_6;
LABEL_35:
  swift_bridgeObjectRelease();
  v26 = MEMORY[0x24BEE4AF8];
LABEL_20:
  v35 = sub_249FC70C4(v26);
  swift_bridgeObjectRelease();
  v36 = sub_249FB5B00(v35);
  swift_bridgeObjectRelease();
  v37 = v36[2];
  if (v37)
  {
    swift_retain();
    v38 = v36 + 5;
    v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((*v38 & 1) == 0)
      {
        v40 = *((_QWORD *)v38 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v39 = sub_249F8A300(0, v39[2] + 1, 1, v39);
        v42 = v39[2];
        v41 = v39[3];
        if (v42 >= v41 >> 1)
          v39 = sub_249F8A300((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
        v39[2] = v42 + 1;
        v39[v42 + 4] = v40;
      }
      v38 += 16;
      --v37;
    }
    while (v37);
    swift_release();
  }
  else
  {
    v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_release();
  swift_bridgeObjectRelease();
  *v43 = v39;
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_249FCE074(__int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  int v13;
  _QWORD v14[6];
  uint64_t v15;
  unsigned __int8 v16;

  v3 = v2;
  v15 = 0;
  v16 = 1;
  v6 = *(void **)(v3 + 16);
  v7 = swift_allocObject();
  *(_WORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = &v15;
  *(_QWORD *)(v7 + 40) = v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_249FE1AC4;
  *(_QWORD *)(v8 + 24) = v7;
  v14[4] = sub_249FCA5C8;
  v14[5] = v8;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_249F87210;
  v14[3] = &block_descriptor_63;
  v9 = _Block_copy(v14);
  v10 = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWait_, v9);

  _Block_release(v9);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v15;
    v13 = v16;
    swift_release();
    if (v13)
      return 0;
    else
      return v12;
  }
  return result;
}

void sub_249FCE1F0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;

  v8 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v9 = (void *)sub_24A01EE44();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v11 + 16) = xmmword_24A0208C0;
  v13 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  *(_WORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFB88);
  *(_QWORD *)(v11 + 104) = sub_249F98C68((unint64_t *)&unk_2578FFB90, &qword_2578FFB88, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v11 + 72) = a2;
  swift_bridgeObjectRetain();
  v14 = (void *)sub_24A01F09C();
  objc_msgSend(v10, sel_setPredicate_, v14);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v15 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 32) = 0x6C6562616CLL;
  *(_QWORD *)(v15 + 40) = 0xE500000000000000;
  v17 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v17);

  objc_msgSend(v10, sel_setReturnsDistinctResults_, 1);
  objc_msgSend(v10, sel_setResultType_, 2);
  v18 = *(void **)(a4 + 16);
  sub_249F990DC(0, &qword_2544CABC8);
  v19 = v18;
  v20 = sub_24A01F198();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_24A01F3CC();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  *(_QWORD *)a3 = v21;
  *(_BYTE *)(a3 + 8) = 0;
}

uint64_t sub_249FCE4C8@<X0>(__int16 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  void *v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(_QWORD *@<X8>);
  uint64_t result;
  _QWORD v62[2];
  id v63;
  uint64_t **v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  id v68;
  char *v69;
  char *v70;
  void (*v71)(_QWORD *@<X8>);
  uint64_t *v72;
  char *v73;
  id v74;
  __int128 v75;
  uint64_t *v76;

  isUniquelyReferenced_nonNull_native = (uint64_t)v4;
  v64 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v9);
  v65 = (void (*)(uint64_t, char *, uint64_t))((char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_24A01EBA4();
  v12 = *(_QWORD *)(v11 - 8);
  v66 = v11;
  v67 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v73 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v70 = (char *)v62 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v69 = (char *)v62 - v17;
  v18 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v19 = (void *)sub_24A01EE44();
  v20 = objc_msgSend(v18, sel_initWithEntityName_, v19);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v21 = swift_allocObject();
  v75 = xmmword_24A0208C0;
  *(_OWORD *)(v21 + 16) = xmmword_24A0208C0;
  v22 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v21 + 64) = v22;
  *(_WORD *)(v21 + 32) = a1;
  v23 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v21 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v21 + 104) = v23;
  *(_QWORD *)(v21 + 72) = a2;
  v24 = (void *)sub_24A01F09C();
  objc_msgSend(v20, sel_setPredicate_, v24);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v75;
  v26 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v25 + 32) = 0x7465737361;
  *(_QWORD *)(v25 + 40) = 0xE500000000000000;
  *(_QWORD *)(v25 + 88) = v26;
  *(_QWORD *)(v25 + 56) = v26;
  *(_QWORD *)(v25 + 64) = 0x696669746E656469;
  *(_QWORD *)(v25 + 72) = 0xEA00000000007265;
  v27 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setPropertiesToFetch_, v27);

  v28 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  v29 = v28;
  v30 = sub_24A01F198();
  if (v4)
  {

    isUniquelyReferenced_nonNull_native = 0;
LABEL_3:
    v31 = MEMORY[0x24BEE4AF8];
    goto LABEL_5;
  }
  v32 = (uint64_t *)v30;

  v31 = (unint64_t)v32;
  if (!v32)
    goto LABEL_3;
LABEL_5:
  v33 = v65;
  v34 = v66;
  v35 = v67;
  if (v31 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v36 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_7;
  }
  else
  {
    v36 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v36)
    {
LABEL_7:
      v62[1] = isUniquelyReferenced_nonNull_native;
      v63 = v20;
      v71 = 0;
      *(_QWORD *)&v75 = v31 & 0xC000000000000001;
      v37 = (uint64_t *)MEMORY[0x24BEE4B00];
      v38 = 4;
      v72 = (uint64_t *)v31;
      v74 = (id)v36;
      while (1)
      {
        isUniquelyReferenced_nonNull_native = v38 - 4;
        if ((_QWORD)v75)
          v39 = (id)MEMORY[0x24BD071F4](v38 - 4, v31);
        else
          v39 = *(id *)(v31 + 8 * v38);
        v40 = v39;
        v20 = (id)(v38 - 3);
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v41 = objc_msgSend(v39, sel_asset);
        if (!v41)
          break;
        v42 = v41;
        v43 = v70;
        sub_24A01EB98();

        v44 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v45 = v43;
        v31 = (unint64_t)v72;
        v44((char *)v33, v45, v34);
        (*(void (**)(void (*)(uint64_t, char *, uint64_t), _QWORD, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v34);
        if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
          goto LABEL_9;
        v46 = v69;
        v44(v69, (char *)v33, v34);
        v33 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 16);
        v47 = (uint64_t)v73;
        v33((uint64_t)v73, v46, v34);
        v68 = objc_msgSend(v40, sel_identifier);
        sub_249FC7728((uint64_t)v71);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v76 = v37;
        v31 = (unint64_t)v37;
        v35 = sub_249F8B20C(v47);
        v49 = v37[2];
        v50 = (v48 & 1) == 0;
        v51 = v49 + v50;
        if (__OFADD__(v49, v50))
          goto LABEL_30;
        v52 = v48;
        if (v37[3] >= v51)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v31 = (unint64_t)&v76;
            sub_249FC14E0();
          }
        }
        else
        {
          sub_249FB9024(v51, isUniquelyReferenced_nonNull_native);
          v31 = (unint64_t)v76;
          v53 = sub_249F8B20C((uint64_t)v73);
          if ((v52 & 1) != (v54 & 1))
          {
            result = sub_24A01F48C();
            __break(1u);
            return result;
          }
          v35 = v53;
        }
        v37 = v76;
        swift_bridgeObjectRelease();
        if ((v52 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          v34 = v66;
        }
        else
        {
          v37[(v35 >> 6) + 8] |= 1 << v35;
          v55 = v37[6] + *(_QWORD *)(v67 + 72) * v35;
          swift_bridgeObjectRetain();
          v34 = v66;
          v33(v55, v73, v66);
          *(_QWORD *)(v37[7] + 8 * v35) = MEMORY[0x24BEE4B08];
          v56 = v37[2];
          v57 = __OFADD__(v56, 1);
          v58 = v56 + 1;
          if (v57)
            goto LABEL_31;
          v37[2] = v58;
        }
        swift_bridgeObjectRelease();
        sub_249F8BD0C((uint64_t *)&v76, (uint64_t)v68);

        v35 = v67;
        v59 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        v59((uint64_t)v73, v34);
        v59((uint64_t)v69, v34);
        v71 = sub_249FCEB3C;
        v33 = v65;
        v31 = (unint64_t)v72;
LABEL_10:
        ++v38;
        if (v20 == v74)
        {

          swift_bridgeObjectRelease();
          v60 = v71;
          goto LABEL_34;
        }
      }
      (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t, uint64_t, uint64_t))(v35 + 56))(v33, 1, 1, v34);
LABEL_9:

      sub_249F990A0((uint64_t)v33, &qword_2544CAD70);
      goto LABEL_10;
    }
  }

  swift_bridgeObjectRelease();
  v60 = 0;
  v37 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_34:
  result = sub_249FC7728((uint64_t)v60);
  *v64 = v37;
  return result;
}

void sub_249FCEB3C(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4B08];
}

void sub_249FCEB4C(__int16 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_24A01EE44();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208C0;
  v13 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v12 + 64) = v13;
  *(_WORD *)(v12 + 32) = a1;
  v14 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v12 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 72) = a2;
  v15 = (void *)sub_24A01F09C();
  objc_msgSend(v11, sel_setPredicate_, v15);

  objc_msgSend(v11, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v16 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 32) = 0x7465737361;
  *(_QWORD *)(v16 + 40) = 0xE500000000000000;
  v18 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setPropertiesToFetch_, v18);

  objc_msgSend(v11, sel_setReturnsDistinctResults_, 1);
  v19 = *(id *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA3D0);
  v20 = sub_24A01F198();
  if (v4)
  {

    v21 = 0;
  }
  else
  {
    v22 = v20;

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_24A01F3CC();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

    }
  }
  *a4 = v21;
}

uint64_t sub_249FCEDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  id v35;
  void *v36;
  void *v37;
  id v38;
  char *v39;
  void (**v40)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  char *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  void (**v59)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v60;
  unsigned int v61;
  char *v62;
  void *v63;
  uint64_t v64;
  id v65;
  void (**v66)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v67;
  unsigned int v68;
  char *v69;
  id v70;
  void *v71;
  unsigned __int8 v72;
  void (*v73)(char *, uint64_t);
  id v74;
  uint64_t inited;
  void **v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  BOOL v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id *v103;
  void *v104;
  id v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  void (*v107)(char *, uint64_t);
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t i;
  id v134;
  void *v135;
  unsigned __int8 v136;
  id v137;
  void *v138;
  unsigned int v139;
  id v140;
  id v141;
  void *v142;
  uint64_t v143;
  id *v144;
  void *v145;
  id v146;
  id v147;
  NSObject *v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  id v152;
  NSObject *v153;
  _QWORD *v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  void *v159;
  id v160;
  id v161;
  id v162;
  _QWORD *v163;
  uint64_t v165;
  void (*v166)(char *, uint64_t, uint64_t);
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  id v180;
  char *v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  void (*v183)(char *, uint64_t);
  char *v184;
  void (**v185)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD v194[6];
  uint64_t v195;
  __int128 aBlock;
  __int128 v197;
  void (*v198)(uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;

  v190 = a1;
  v200 = *MEMORY[0x24BDAC8D0];
  v170 = sub_24A01EA18();
  v168 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v169 = (char *)&v165 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v176 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v178 = (uint64_t *)((char *)&v165 - v7);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v167 = (char *)&v165 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v177 = (uint64_t)&v165 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v189 = (char *)&v165 - v12;
  v186 = sub_24A01EAA8();
  v185 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v186 - 8);
  v13 = MEMORY[0x24BDAC7A8](v186);
  v181 = (char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v171 = (char *)&v165 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v174 = (char *)&v165 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v175 = (char *)&v165 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v179 = (char *)&v165 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v184 = (char *)&v165 - v23;
  v183 = (void (*)(char *, uint64_t))sub_24A01F120();
  v182 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v183 - 1);
  MEMORY[0x24BDAC7A8](v183);
  v25 = (char *)&v165 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_24A01F108();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v26);
  v28 = sub_24A01EDE4();
  MEMORY[0x24BDAC7A8](v28);
  v191 = v1;
  *(_QWORD *)(v1 + 24) = 128;
  v188 = v1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_logger;
  sub_24A01ED9C();
  v29 = OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_lockQueue;
  v180 = (id)sub_249F990DC(0, (unint64_t *)&unk_2544CAEC0);
  sub_24A01EDD8();
  *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
  sub_249FA2B24((unint64_t *)&unk_2544CAEB0, v27, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAE90);
  sub_249F98C68(&qword_2544CAE98, &qword_2544CAE90, MEMORY[0x24BEE12C8]);
  sub_24A01F228();
  (*((void (**)(char *, _QWORD, void (*)(char *, uint64_t)))v182 + 13))(v25, *MEMORY[0x24BEE5750], v183);
  v30 = v191;
  v31 = sub_24A01F150();
  v173 = v29;
  *(_QWORD *)(v30 + v29) = v31;
  v32 = v30 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_signposter;
  sub_24A01ED3C();
  v33 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v30 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v30 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore__tokenEmbeddingsCache) = v33;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v35 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v36 = (void *)sub_24A01EE44();
  v37 = (void *)sub_24A01EE44();
  v38 = objc_msgSend(v35, sel_URLForResource_withExtension_, v36, v37);

  if (!v38)
  {
    ((void (**)(char *, uint64_t, uint64_t, uint64_t))v185)[7](v189, 1, 1, v186);
    goto LABEL_66;
  }
  v172 = v32;
  v180 = v35;
  v39 = v179;
  sub_24A01EA60();

  v40 = v185;
  v41 = (void (*)(char *, char *, uint64_t))v185[4];
  v42 = v189;
  v43 = v186;
  v41(v189, v39, v186);
  v44 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v40[7];
  v44(v42, 0, 1, v43);
  v45 = (unsigned int (*)(char *, uint64_t, uint64_t))v40[6];
  if (v45(v42, 1, v43) == 1)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
  }
  v41(v184, v42, v43);
  v46 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v47 = (void *)sub_24A01EA30();
  v48 = objc_msgSend(v46, sel_initWithContentsOfURL_, v47);

  v49 = v190;
  if (!v48)
    goto LABEL_67;
  v50 = objc_allocWithZone(MEMORY[0x24BDBB700]);
  v51 = (char *)v48;
  v52 = (void *)sub_24A01EE44();
  v189 = (char *)objc_msgSend(v50, sel_initWithName_managedObjectModel_, v52, v51);

  v179 = v51;
  v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB740]), sel_init);
  v54 = v49;
  v55 = v177;
  sub_249F9905C(v49, v177, (uint64_t *)&unk_2544CAD60);
  if (v45((char *)v55, 1, v43) == 1)
  {
    v44(v167, 1, 1, v43);
    (*(void (**)(char *, _QWORD, uint64_t))(v168 + 104))(v169, *MEMORY[0x24BDCD7A0], v170);
    v56 = v175;
    sub_24A01EA84();
    sub_249F990A0(v55, (uint64_t *)&unk_2544CAD60);
  }
  else
  {
    v56 = v175;
    v41(v175, (char *)v55, v43);
  }
  v57 = v191;
  v58 = (void *)sub_24A01EA30();
  v59 = v185;
  v183 = (void (*)(char *, uint64_t))v185[1];
  v183(v56, v43);
  objc_msgSend(v53, sel_setURL_, v58);

  v60 = (uint64_t)v178;
  sub_249F9905C(v54, (uint64_t)v178, (uint64_t *)&unk_2544CAD60);
  v61 = v45((char *)v60, 1, v43);
  v182 = v45;
  v166 = (void (*)(char *, uint64_t, uint64_t))v41;
  if (v61 == 1)
  {
    sub_249F990A0(v60, (uint64_t *)&unk_2544CAD60);
  }
  else
  {
    v62 = v174;
    v41(v174, (char *)v60, v43);
    v63 = (void *)objc_opt_self();
    v64 = v43;
    v65 = objc_msgSend(v63, sel_defaultManager);
    v66 = v59;
    sub_24A01EA78();
    v67 = (void *)sub_24A01EE44();
    swift_bridgeObjectRelease();
    v68 = objc_msgSend(v65, sel_fileExistsAtPath_, v67);

    v69 = v171;
    ((void (*)(char *, char *, uint64_t))v66[2])(v171, v62, v64);
    if (v68)
    {
      v70 = objc_msgSend(v63, sel_defaultManager);
      sub_24A01EA78();
      v71 = (void *)sub_24A01EE44();
      swift_bridgeObjectRelease();
      v72 = objc_msgSend(v70, sel_isWritableFileAtPath_, v71);

      v73 = v183;
      v183(v69, v64);
      v43 = v64;
      if ((v72 & 1) == 0)
      {
        v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 1);
        objc_msgSend(v53, sel_setOption_forKey_, v74, *MEMORY[0x24BDBB550]);

      }
    }
    else
    {
      v73 = v183;
      v183(v69, v64);
      v43 = v64;
    }
    v73(v174, v43);
    v45 = v182;
    v54 = v190;
  }
  if (v45((char *)v54, 1, v43) == 1)
  {
    *(_BYTE *)(v57 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_historySupport) = 0;
  }
  else
  {
    *(_BYTE *)(v57 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_historySupport) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAF28);
    inited = swift_initStackObject();
    v76 = (void **)MEMORY[0x24BDBB4C0];
    *(_OWORD *)(inited + 16) = xmmword_24A0208B0;
    v77 = *v76;
    *(_QWORD *)(inited + 32) = v77;
    *(_QWORD *)(inited + 40) = &unk_251B678C8;
    v78 = v77;
    sub_249F75FB4(inited);
    type metadata accessor for NSPersistentHistoryTrackingOptionKey(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAE88);
    sub_249FA2B24((unint64_t *)&unk_2544CAEE0, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_24A020864);
    v79 = (void *)sub_24A01EDF0();
    swift_bridgeObjectRelease();
    objc_msgSend(v53, sel_setOption_forKey_, v79, *MEMORY[0x24BDBB4C8]);

  }
  v80 = v189;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_24A0208F0;
  *(_QWORD *)(v81 + 32) = v53;
  *(_QWORD *)&aBlock = v81;
  sub_24A01EFA0();
  sub_249F990DC(0, (unint64_t *)&unk_2544CAED0);
  v82 = v53;
  v83 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_setPersistentStoreDescriptions_, v83);

  v84 = v82;
  v85 = sub_24A01ED90();
  v86 = sub_24A01F0CC();
  v87 = os_log_type_enabled(v85, v86);
  v185 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v84;
  if (v87)
  {
    v88 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v89;
    *(_DWORD *)v88 = 136315394;
    v90 = objc_msgSend(v84, sel_isReadOnly);
    v91 = v90 == 0;
    if (v90)
      v92 = 0x6C6E6F2D64616572;
    else
      v92 = 0x6972772D64616572;
    if (v91)
      v93 = 0xEA00000000006574;
    else
      v93 = 0xE900000000000079;
    v195 = sub_249F8AAE8(v92, v93, (uint64_t *)&aBlock);
    sub_24A01F1F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 12) = 2080;
    v94 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v95 = objc_msgSend(v94, sel_processName);

    v96 = sub_24A01EE68();
    v98 = v97;

    v54 = v190;
    v99 = v96;
    v57 = v191;
    v195 = sub_249F8AAE8(v99, v98, (uint64_t *)&aBlock);
    v80 = v189;
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F70000, v85, v86, "Loading persistent store as %s from %s", (uint8_t *)v88, 0x16u);
    swift_arrayDestroy();
    v100 = v89;
    v43 = v186;
    MEMORY[0x24BD07950](v100, -1, -1);
    MEMORY[0x24BD07950](v88, -1, -1);

  }
  else
  {

  }
  v101 = (uint64_t)v176;
  v102 = swift_allocObject();
  *(_QWORD *)(v102 + 16) = 0;
  v103 = (id *)(v102 + 16);
  v198 = sub_249FE29F4;
  v199 = v102;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v197 = sub_249FD06F0;
  *((_QWORD *)&v197 + 1) = &block_descriptor_159;
  v104 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v80, sel_loadPersistentStoresWithCompletionHandler_, v104);
  _Block_release(v104);
  swift_beginAccess();
  v105 = *v103;
  v106 = (unsigned int (*)(char *, uint64_t, uint64_t))*v103;
  swift_release();
  sub_249F9905C(v54, v101, (uint64_t *)&unk_2544CAD60);
  if (v182((char *)v101, 1, v43) == 1)
  {
    sub_249F990A0(v101, (uint64_t *)&unk_2544CAD60);
    v107 = v183;
    if (!v105)
      goto LABEL_60;
    goto LABEL_55;
  }
  v166(v181, v101, v43);
  if (v105)
  {
    v108 = v105;
    v182 = v106;
    v109 = objc_msgSend(v106, sel_domain);
    v110 = sub_24A01EE68();
    v112 = v111;

    v113 = sub_24A01EE68();
    if (v112)
    {
      if (v110 == v113 && v112 == v114)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_45;
      }
      v115 = sub_24A01F45C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v115 & 1) != 0)
      {
LABEL_45:
        v122 = sub_24A01ED90();
        v123 = sub_24A01F0E4();
        if (os_log_type_enabled(v122, v123))
        {
          v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v124 = 0;
          _os_log_impl(&dword_249F70000, v122, v123, "Error: index store is corrupted - resetting", v124, 2u);
          MEMORY[0x24BD07950](v124, -1, -1);
        }

        v178 = v194;
        v194[0] = sub_24A01EA78();
        v194[1] = v125;
        v126 = sub_24A01EA78();
        *(_QWORD *)&aBlock = 1835561773;
        *((_QWORD *)&aBlock + 1) = 0xE400000000000000;
        v192 = v126;
        v193 = v127;
        swift_bridgeObjectRetain();
        v192 = sub_24A01EF28();
        v193 = v128;
        sub_24A01EEB0();
        swift_bridgeObjectRelease();
        v194[2] = v192;
        v194[3] = v193;
        v129 = sub_24A01EA78();
        *(_QWORD *)&aBlock = 1818326829;
        *((_QWORD *)&aBlock + 1) = 0xE400000000000000;
        v192 = v129;
        v193 = v130;
        swift_bridgeObjectRetain();
        v192 = sub_24A01EF28();
        v193 = v131;
        sub_24A01EEB0();
        swift_bridgeObjectRelease();
        v194[4] = v192;
        v194[5] = v193;
        v132 = (void *)objc_opt_self();
        for (i = 0; i != 48; i += 16)
        {
          swift_bridgeObjectRetain();
          v134 = objc_msgSend(v132, sel_defaultManager);
          v135 = (void *)sub_24A01EE44();
          v136 = objc_msgSend(v134, sel_fileExistsAtPath_, v135);

          if ((v136 & 1) != 0)
          {
            v137 = objc_msgSend(v132, sel_defaultManager);
            v138 = (void *)sub_24A01EE44();
            swift_bridgeObjectRelease();
            *(_QWORD *)&aBlock = 0;
            v139 = objc_msgSend(v137, sel_removeItemAtPath_error_, v138, &aBlock);

            if (v139)
            {
              v140 = (id)aBlock;
            }
            else
            {
              v141 = (id)aBlock;
              v142 = (void *)sub_24A01EA00();

              swift_willThrow();
              v187 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_arrayDestroy();
        v143 = swift_allocObject();
        *(_QWORD *)(v143 + 16) = 0;
        v144 = (id *)(v143 + 16);
        v198 = sub_249FE29F4;
        v199 = v143;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v197 = sub_249FD06F0;
        *((_QWORD *)&v197 + 1) = &block_descriptor_165;
        v145 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v80 = v189;
        objc_msgSend(v189, sel_loadPersistentStoresWithCompletionHandler_, v145);
        _Block_release(v145);
        swift_beginAccess();
        v105 = *v144;
        v146 = *v144;
        swift_release();
        v43 = v186;
        v107 = v183;
        v183(v181, v186);

        v57 = v191;
        v54 = v190;
        if (!v105)
          goto LABEL_60;
        goto LABEL_55;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v116 = objc_msgSend(v182, sel_userInfo);
    v117 = sub_24A01EDFC();

    v118 = sub_24A01EE68();
    v80 = v189;
    if (*(_QWORD *)(v117 + 16))
    {
      v120 = sub_249F8B0F8(v118, v119);
      v105 = v108;
      if ((v121 & 1) != 0)
      {
        sub_249F93A3C(*(_QWORD *)(v117 + 56) + 32 * v120, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v197 = 0u;
      }
      v107 = v183;
    }
    else
    {
      aBlock = 0u;
      v197 = 0u;
      v107 = v183;
      v105 = v108;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v197 + 1))
    {
      sub_249F990A0((uint64_t)&aBlock, &qword_2544CAF40);
      goto LABEL_45;
    }
  }
  else
  {
    sub_24A01EE68();
    swift_bridgeObjectRelease();
    aBlock = 0u;
    v197 = 0u;
    v107 = v183;
  }
  sub_249F990A0((uint64_t)&aBlock, &qword_2544CAF40);
  v107(v181, v43);
  if (!v105)
  {
LABEL_60:
    v158 = objc_msgSend(v80, sel_newBackgroundContext);
    *(_QWORD *)(v57 + 16) = v158;
    v159 = (void *)objc_opt_self();
    v160 = v158;
    v161 = objc_msgSend(v159, sel_mergeByPropertyObjectTrumpMergePolicy);
    objc_msgSend(v160, sel_setMergePolicy_, v161);

    v162 = *(id *)(v57 + 16);
    v163 = v187;
    sub_24A01F180();
    if (v163)
    {
      swift_release();

      v107(v184, v43);
    }
    else
    {

      v107(v184, v43);
    }
    sub_249F990A0(v54, (uint64_t *)&unk_2544CAD60);
    return v57;
  }
LABEL_55:
  v147 = v105;
  v148 = v105;
  v149 = sub_24A01ED90();
  v150 = sub_24A01F0E4();
  if (os_log_type_enabled(v149, v150))
  {
    v151 = (uint8_t *)swift_slowAlloc();
    v187 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v151 = 138412290;
    v192 = (uint64_t)v148;
    v152 = v147;
    v153 = v148;
    v57 = v191;
    v43 = v186;
    sub_24A01F1F8();
    v154 = v187;
    *v187 = v152;

    v54 = v190;
    _os_log_impl(&dword_249F70000, v149, v150, "%@", v151, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF530);
    swift_arrayDestroy();
    v107 = v183;
    MEMORY[0x24BD07950](v154, -1, -1);
    MEMORY[0x24BD07950](v151, -1, -1);
  }
  else
  {

    v149 = v148;
  }

  sub_249F74AF4();
  swift_allocError();
  *v155 = 0;
  swift_willThrow();

  v107(v184, v43);
  sub_249F990A0(v54, (uint64_t *)&unk_2544CAD60);

  v156 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 8))(v188, v156);

  v157 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 8))(v172, v157);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for VUIndexStore();
  swift_deallocPartialClassInstance();
  return v57;
}

void sub_249FD0690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;

  if (a2)
  {
    v4 = sub_24A01E9F4();
    swift_beginAccess();
    v5 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v4;

  }
}

void sub_249FD06F0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void sub_249FD0764(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  int v29;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v10 = objc_msgSend((id)objc_opt_self(), sel_fetchRequest);
  if (!v10)
  {
    v23 = sub_24A01ED90();
    v24 = sub_24A01F0E4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_249F70000, v23, v24, "Cannot create a NSPersistentHistoryChange resquest", v25, 2u);
      MEMORY[0x24BD07950](v25, -1, -1);
    }

    goto LABEL_15;
  }
  v11 = v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_fetchHistoryAfterToken_, a2);
  objc_msgSend(v12, sel_setResultType_, 4);
  if ((a4 & 1) == 0)
  {
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v13 = swift_allocObject();
    v14 = MEMORY[0x24BEE4008];
    *(_OWORD *)(v13 + 16) = xmmword_24A0208B0;
    v15 = MEMORY[0x24BEE4060];
    *(_QWORD *)(v13 + 56) = v14;
    *(_QWORD *)(v13 + 64) = v15;
    *(_QWORD *)(v13 + 32) = a3;
    v16 = (void *)sub_24A01F09C();
    objc_msgSend(v11, sel_setPredicate_, v16);

    objc_msgSend(v12, sel_setFetchRequest_, v11);
  }
  v17 = *(void **)(a1 + 16);
  *(_QWORD *)&v31 = 0;
  v18 = objc_msgSend(v17, sel_executeRequest_error_, v12, &v31);
  v19 = (void *)v31;
  if (!v18)
  {
    v26 = (id)v31;
    v27 = (void *)sub_24A01EA00();

    swift_willThrow();
LABEL_13:

    v31 = 0u;
    v32 = 0u;
LABEL_14:
    sub_249F990A0((uint64_t)&v31, &qword_2544CAF40);
LABEL_15:
    v28 = 0;
    goto LABEL_16;
  }
  v20 = v18;
  objc_opt_self();
  v21 = (void *)swift_dynamicCastObjCClass();
  v22 = v19;
  if (!v21)
  {

    goto LABEL_13;
  }
  if (objc_msgSend(v21, sel_result))
  {
    sub_24A01F21C();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v30, 0, sizeof(v30));
  }
  sub_249F98C10((uint64_t)v30, (uint64_t)&v31, &qword_2544CAF40);
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAB78);
  v29 = swift_dynamicCast();
  v28 = *(_QWORD *)&v30[0];
  if (!v29)
    v28 = 0;
LABEL_16:
  *a5 = v28;
}

void sub_249FD0AD4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(void **)(a1 + 16);
  v9[0] = 0;
  v5 = objc_msgSend(v4, sel_existingObjectWithID_error_, a2, v9);
  v6 = v9[0];
  if (!v5)
  {
    v7 = v6;
    v8 = (void *)sub_24A01EA00();

    swift_willThrow();
  }
  *a3 = v5;
}

uint64_t sub_249FD0B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t inited;
  void *v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  __int128 v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint32_t *p_align;
  void *v26;
  id v27;
  char v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  __int128 v52;
  unint64_t v53;
  char *v54;
  id v55[8];

  v1 = v0;
  v55[7] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_24A01EB5C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_historySupport) == 1)
  {
    v51 = (char *)&v48 - v8;
    v9 = sub_249FCBC58(0, 0, 1);
    result = sub_249FD0FB4(-2592800);
    if ((v10 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (v9 <= 1000)
        v11 = 100;
      else
        v11 = 20;
      sub_24A01EB38();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24A020920;
      v13 = (void *)objc_opt_self();
      sub_24A01EB50();
      v14 = (void *)sub_24A01EB2C();
      v15 = *(void (**)(char *, uint64_t))(v3 + 8);
      v50 = v2;
      v15(v6, v2);
      v16 = objc_msgSend(v13, sel_deleteHistoryBeforeDate_whenHistoryPercentageOfStoreIsGreaterThan_, v14, v11);

      *(_QWORD *)(inited + 32) = v16;
      v17 = (void *)sub_24A01EB2C();
      v18 = objc_msgSend(v13, sel_deleteHistoryBeforeDate_, v17);

      *(_QWORD *)(inited + 40) = v18;
      v55[0] = (id)inited;
      sub_24A01EFA0();
      v20 = v55[0];
      v21 = (unint64_t)v55[0] & 0xC000000000000001;
      if (((unint64_t)v55[0] & 0xC000000000000001) == 0
        && *(_QWORD *)(((unint64_t)v55[0] & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
      }
      v49 = (uint64_t (*)(char *, uint64_t))v15;
      v22 = 0;
      v23 = 0;
      v24 = v1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_logger;
      v54 = (char *)v55[0] + 32;
      p_align = &stru_251B6CFE8.align;
      *(_QWORD *)&v19 = 138412290;
      v52 = v19;
      v53 = (unint64_t)v55[0] & 0xC000000000000001;
      do
      {
        v28 = v22;
        if (v21)
          v29 = (id)MEMORY[0x24BD071F4](v23, v20);
        else
          v29 = *(id *)&v54[8 * v23];
        v30 = v29;
        v31 = *(void **)(v1 + 16);
        v55[0] = 0;
        v32 = objc_msgSend(v31, *((SEL *)p_align + 468), v30, v55);
        if (v32)
        {
          v26 = v32;
          v27 = v55[0];

        }
        else
        {
          v33 = v55[0];
          v34 = (void *)sub_24A01EA00();

          swift_willThrow();
          v35 = v34;
          v36 = v34;
          v37 = sub_24A01ED90();
          v38 = sub_24A01F0E4();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = v20;
            v40 = v1;
            v41 = swift_slowAlloc();
            v42 = v24;
            v43 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v41 = v52;
            v44 = v34;
            v45 = _swift_stdlib_bridgeErrorToNSError();
            *(_QWORD *)(v41 + 4) = v45;
            *v43 = v45;

            _os_log_impl(&dword_249F70000, v37, v38, "Could not purge history: %@", (uint8_t *)v41, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF530);
            swift_arrayDestroy();
            v46 = v43;
            v24 = v42;
            MEMORY[0x24BD07950](v46, -1, -1);
            v47 = v41;
            v1 = v40;
            v20 = v39;
            v21 = v53;
            MEMORY[0x24BD07950](v47, -1, -1);

          }
          else
          {

          }
          p_align = (_DWORD *)(&stru_251B6CFE8 + 24);
        }
        v22 = 1;
        v23 = 1;
      }
      while ((v28 & 1) == 0);
      swift_bridgeObjectRelease();
      return v49(v51, v50);
    }
  }
  return result;
}

uint64_t sub_249FD0FB4(uint64_t result)
{
  double v1;

  v1 = (double)result;
  if ((double)result >= 9.22337204e18)
  {
    *(double *)&result = 0.0;
    return result;
  }
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v1 == result)
    *(double *)&result = (double)result;
  else
    *(double *)&result = 0.0;
  return result;
}

uint64_t sub_249FD1014(__int16 a1, int a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t result;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;

  v12 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v13 = (void *)sub_24A01EE44();
  v56 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  v61 = MEMORY[0x24BEE4AF8];
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v14 = swift_allocObject();
  if ((a1 & 0x100) != 0)
  {
    v16 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v14 + 16) = xmmword_24A0208C0;
    v17 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v14 + 56) = v16;
    *(_QWORD *)(v14 + 64) = v17;
    *(_QWORD *)(v14 + 32) = 2;
    *(_QWORD *)(v14 + 96) = v16;
    *(_QWORD *)(v14 + 104) = v17;
    *(_QWORD *)(v14 + 72) = 63;
  }
  else
  {
    *(_OWORD *)(v14 + 16) = xmmword_24A0208B0;
    v15 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v14 + 64) = v15;
    *(_QWORD *)(v14 + 32) = a1;
  }
  sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24A01EFAC();
  sub_24A01EFD0();
  sub_24A01EFA0();
  if ((a2 & 0x10000) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v18 = swift_allocObject();
    v19 = MEMORY[0x24BEE3F30];
    *(_OWORD *)(v18 + 16) = xmmword_24A0208B0;
    v20 = MEMORY[0x24BEE3F78];
    *(_QWORD *)(v18 + 56) = v19;
    *(_QWORD *)(v18 + 64) = v20;
    *(_WORD *)(v18 + 32) = a2;
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
  }
  if ((a4 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_24A0208B0;
    v22 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v21 + 64) = v22;
    *(_QWORD *)(v21 + 32) = a3;
  }
  sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24A01EFAC();
  sub_24A01EFD0();
  sub_24A01EFA0();
  v23 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v23);

  objc_msgSend(v56, sel_setPredicate_, v24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v25 = swift_allocObject();
  v26 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v25 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v25 + 56) = v26;
  *(_QWORD *)(v25 + 32) = 0x696669746E656469;
  *(_QWORD *)(v25 + 40) = 0xEA00000000007265;
  v27 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setPropertiesToFetch_, v27);

  v28 = (void *)sub_24A01EF70();
  objc_msgSend(v56, sel_setRelationshipKeyPathsForPrefetching_, v28);

  v29 = *(void **)(a5 + 16);
  type metadata accessor for VUIndexObservation();
  v30 = v29;
  isUniquelyReferenced_nonNull_native = sub_24A01F198();

  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v32 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_16;
LABEL_41:

    return swift_bridgeObjectRelease();
  }
  v32 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v32)
    goto LABEL_41;
LABEL_16:
  v58 = isUniquelyReferenced_nonNull_native;
  v59 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v33 = 4;
  v57 = v32;
  while (1)
  {
    if (v59)
      v34 = (id)MEMORY[0x24BD071F4](v33 - 4, isUniquelyReferenced_nonNull_native);
    else
      v34 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v33);
    v35 = v34;
    v36 = v33 - 3;
    if (__OFADD__(v33 - 4, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v37 = objc_msgSend(v34, sel_identifier);
    v38 = objc_msgSend(v35, sel_mapping);
    if (v38)
    {
      v39 = v38;
      v40 = (uint64_t)objc_msgSend(v38, sel_label);

    }
    else
    {
      v40 = -1;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41 = (_QWORD *)*a6;
    v60 = (_QWORD *)*a6;
    *a6 = 0x8000000000000000;
    v43 = sub_249F8B27C((uint64_t)v37);
    v44 = v41[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      goto LABEL_38;
    v47 = v42;
    if (v41[3] < v46)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v50 = v60;
      if ((v42 & 1) != 0)
        goto LABEL_17;
    }
    else
    {
      sub_249FC20E0();
      v50 = v60;
      if ((v47 & 1) != 0)
      {
LABEL_17:
        *(_QWORD *)(v50[7] + 8 * v43) = v40;
        goto LABEL_18;
      }
    }
LABEL_33:
    v50[(v43 >> 6) + 8] |= 1 << v43;
    v51 = 8 * v43;
    *(_QWORD *)(v50[6] + v51) = v37;
    *(_QWORD *)(v50[7] + v51) = v40;
    v52 = v50[2];
    v53 = __OFADD__(v52, 1);
    v54 = v52 + 1;
    if (v53)
      goto LABEL_39;
    v50[2] = v54;
LABEL_18:
    *a6 = v50;

    swift_bridgeObjectRelease();
    ++v33;
    isUniquelyReferenced_nonNull_native = v58;
    if (v36 == v57)
      goto LABEL_41;
  }
  sub_249FBA388(v46, isUniquelyReferenced_nonNull_native);
  v48 = sub_249F8B27C((uint64_t)v37);
  if ((v47 & 1) == (v49 & 1))
  {
    v43 = v48;
    v50 = v60;
    if ((v47 & 1) != 0)
      goto LABEL_17;
    goto LABEL_33;
  }
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FD1700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint32_t *p_align;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t result;
  void *v56;
  uint64_t v57;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  *(_QWORD *)(v9 + 64) = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v9 + 32) = a1;
  v57 = a1;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_24A01F09C();
  objc_msgSend(v8, sel_setPredicate_, v10);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v11 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 32) = 0x696669746E656469;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  v13 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setPropertiesToFetch_, v13);

  v14 = (void *)sub_24A01EF70();
  objc_msgSend(v8, sel_setRelationshipKeyPathsForPrefetching_, v14);

  v15 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  v16 = v15;
  v56 = v8;
  v17 = sub_24A01F198();
  if (v3)
  {

LABEL_3:
    v18 = MEMORY[0x24BEE4AF8];
    goto LABEL_5;
  }
  v18 = v17;

  if (!v18)
    goto LABEL_3;
LABEL_5:
  if (v18 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v19 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (v19)
  {
    v21 = v18 & 0xC000000000000001;
    v22 = 4;
    p_align = &stru_251B6CFE8.align;
    v60 = v19;
    v61 = v18;
    v59 = v18 & 0xC000000000000001;
    do
    {
      if (v21)
        v24 = (id)MEMORY[0x24BD071F4](v22 - 4, v18);
      else
        v24 = *(id *)(v18 + 8 * v22);
      v25 = v24;
      v26 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v27 = objc_msgSend(v24, *((SEL *)p_align + 396));
      if (v27)
      {
        v28 = v27;
        v29 = v19;
        v30 = v18;
        v31 = objc_msgSend(v27, sel_label);

        v62 = v31;
        if (v31 == (id)-1)
        {

          v18 = v30;
          v19 = v29;
          v26 = v22 - 3;
        }
        else
        {
          v32 = objc_msgSend(v25, sel_identifier);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v18 = sub_249F8B27C((uint64_t)v32);
          v35 = v20[2];
          v36 = (v34 & 1) == 0;
          v37 = v35 + v36;
          if (__OFADD__(v35, v36))
            goto LABEL_42;
          v38 = v34;
          if (v20[3] >= v37)
          {
            v26 = v22 - 3;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_249FC20E0();
          }
          else
          {
            sub_249FBA388(v37, isUniquelyReferenced_nonNull_native);
            v39 = sub_249F8B27C((uint64_t)v32);
            v26 = v22 - 3;
            if ((v38 & 1) != (v40 & 1))
            {
              result = sub_24A01F48C();
              __break(1u);
              return result;
            }
            v18 = v39;
          }
          p_align = (_DWORD *)(&stru_251B6CFE8 + 24);
          if ((v38 & 1) != 0)
          {
            *(_QWORD *)(v20[7] + 8 * v18) = v62;
          }
          else
          {
            v20[(v18 >> 6) + 8] |= 1 << v18;
            v41 = 8 * v18;
            *(_QWORD *)(v20[6] + v41) = v32;
            *(_QWORD *)(v20[7] + v41) = v62;
            v42 = v20[2];
            v43 = __OFADD__(v42, 1);
            v44 = v42 + 1;
            if (v43)
              goto LABEL_43;
            v20[2] = v44;
          }

          swift_bridgeObjectRelease();
          v19 = v60;
          v18 = v61;
          v21 = v59;
        }
      }
      else
      {

      }
      ++v22;
    }
    while (v26 != v19);
  }
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v57 + 16);
  if (v45)
  {
    v63 = MEMORY[0x24BEE4AF8];
    sub_249F8CA3C(0, v45, 0);
    v46 = v63;
    v47 = (uint64_t *)(v57 + 32);
    do
    {
      if (v20[2] && (v48 = sub_249F8B27C(*v47), (v49 & 1) != 0))
      {
        v50 = 0;
        v51 = *(_QWORD *)(v20[7] + 8 * v48);
      }
      else
      {
        v51 = 0;
        v50 = 1;
      }
      v53 = *(_QWORD *)(v63 + 16);
      v52 = *(_QWORD *)(v63 + 24);
      if (v53 >= v52 >> 1)
        sub_249F8CA3C(v52 > 1, v53 + 1, 1);
      *(_QWORD *)(v63 + 16) = v53 + 1;
      v54 = v63 + 16 * v53;
      *(_QWORD *)(v54 + 32) = v51;
      *(_BYTE *)(v54 + 40) = v50;
      ++v47;
      --v45;
    }
    while (v45);

  }
  else
  {

    v46 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v46;
  return swift_bridgeObjectRelease();
}

uint64_t sub_249FD1C90(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  _QWORD v12[6];
  uint64_t v13;
  unsigned __int8 v14;

  v2 = v1;
  v13 = 0;
  v14 = 1;
  v4 = *(void **)(v2 + 16);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 17) = HIBYTE(a1) & 1;
  *(_QWORD *)(v5 + 24) = &v13;
  *(_QWORD *)(v5 + 32) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_249FE1A6C;
  *(_QWORD *)(v6 + 24) = v5;
  v12[4] = sub_249FCA5C8;
  v12[5] = v6;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_249F87210;
  v12[3] = &block_descriptor_53;
  v7 = _Block_copy(v12);
  v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v13;
    v11 = v14;
    swift_release();
    if (v11)
      return 0;
    else
      return v10;
  }
  return result;
}

void sub_249FD1DFC(__int16 a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  if ((a1 & 0x100) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
    v10 = MEMORY[0x24BEE42B0];
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE4260];
    *(_QWORD *)(v9 + 64) = v10;
    *(_BYTE *)(v9 + 32) = a1;
  }
  v11 = (void *)sub_24A01F09C();
  objc_msgSend(v8, sel_setPredicate_, v11);

  v12 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  v13 = v12;
  v14 = sub_24A01F18C();

  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = 0;
}

uint64_t sub_249FD1FB8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  _QWORD aBlock[6];
  uint64_t v16;

  v4 = v3;
  v16 = MEMORY[0x24BEE4AF8];
  v8 = *(void **)(v4 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_BYTE *)(v9 + 24) = a2 & 1;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = &v16;
  *(_QWORD *)(v9 + 48) = v4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_249F98D88;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_143;
  v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v12 = v8;
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v16;
    swift_release();
    return v14;
  }
  return result;
}

uint64_t sub_249FD2138(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;

  v10 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v11 = (void *)sub_24A01EE44();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  if ((a2 & 1) == 0)
  {
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24A0208B0;
    v14 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v13 + 64) = v14;
    *(_QWORD *)(v13 + 32) = a1;
    v15 = (void *)sub_24A01F09C();
    objc_msgSend(v12, sel_setPredicate_, v15);

  }
  if (a3)
  {
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_24A0208B0;
    *(_QWORD *)(v16 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
    *(_QWORD *)(v16 + 64) = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
    *(_QWORD *)(v16 + 32) = a3;
    swift_bridgeObjectRetain();
    v17 = (void *)sub_24A01F09C();
    objc_msgSend(v12, sel_setPredicate_, v17);

  }
  v18 = *(void **)(a5 + 16);
  type metadata accessor for VUIndexObservation();
  v19 = v18;
  v20 = sub_24A01F198();

  *a4 = v20;
  return swift_bridgeObjectRelease();
}

void sub_249FD2380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, void (*a9)(void))
{
  uint64_t v9;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t i;
  id v27;
  void *v28;

  v16 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v17 = (void *)sub_24A01EE44();
  v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);

  objc_msgSend(v18, sel_setPredicate_, a1);
  if (a2)
  {
    sub_249F990DC(0, &qword_2544CAC48);
    v19 = (void *)sub_24A01EF70();
    objc_msgSend(v18, sel_setSortDescriptors_, v19);

  }
  if (a3)
  {
    sub_249FF1130(a3);
    v20 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setPropertiesToFetch_, v20);

  }
  if ((a5 & 1) == 0)
    objc_msgSend(v18, sel_setFetchLimit_, a4);
  if ((a7 & 1) == 0)
    objc_msgSend(v18, sel_setFetchOffset_, a6);
  v21 = *(void **)(a8 + 16);
  type metadata accessor for VUIndexObservation();
  v22 = v21;
  v23 = sub_24A01F198();
  if (v9)
  {

    return;
  }
  v24 = v23;

  if (!(v24 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25)
      goto LABEL_13;
LABEL_20:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v25 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_20;
LABEL_13:
  if (v25 >= 1)
  {
    for (i = 0; i != v25; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x24BD071F4](i, v24);
      else
        v27 = *(id *)(v24 + 8 * i + 32);
      v28 = v27;
      a9();

    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_249FD25E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v30;

  v8 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v9 = (void *)sub_24A01EE44();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24A0208C0;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 32) = 0x696669746E656469;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v11 + 88) = v12;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = 0x746E656D6F6DLL;
  *(_QWORD *)(v11 + 72) = 0xE600000000000000;
  v13 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v13);

  v14 = (void *)sub_24A01EF70();
  objc_msgSend(v10, sel_setRelationshipKeyPathsForPrefetching_, v14);

  if (a2)
  {
    sub_249F990DC(0, &qword_2544CAC48);
    v15 = (void *)sub_24A01EF70();
    objc_msgSend(v10, sel_setSortDescriptors_, v15);

  }
  v16 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  v17 = v16;
  v18 = sub_24A01F198();
  if (v4)
  {

    return;
  }
  v19 = v18;

  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease();

    v22 = MEMORY[0x24BEE4AF8];
LABEL_18:
    *a4 = v22;
    return;
  }
  swift_bridgeObjectRetain();
  v20 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_17;
LABEL_7:
  v30 = MEMORY[0x24BEE4AF8];
  sub_249F8C9C8(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v28 = v10;
    v21 = 0;
    v22 = v30;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x24BD071F4](v21, v19);
      else
        v23 = *(id *)(v19 + 8 * v21 + 32);
      v24 = v23;
      v25 = objc_msgSend(v23, sel_identifier);

      v27 = *(_QWORD *)(v30 + 16);
      v26 = *(_QWORD *)(v30 + 24);
      if (v27 >= v26 >> 1)
        sub_249F8C9C8(v26 > 1, v27 + 1, 1);
      ++v21;
      *(_QWORD *)(v30 + 16) = v27 + 1;
      *(_QWORD *)(v30 + 8 * v27 + 32) = v25;
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();

    goto LABEL_18;
  }
  __break(1u);
}

void sub_249FD2918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, id), uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  int64_t v24;
  void *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);

  v27 = a6;
  v28 = a7;
  v13 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v14 = (void *)sub_24A01EE44();
  v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  if (a1)
    objc_msgSend(v15, sel_setPredicate_, a1, v27, v28);
  sub_249FF1130(a2);
  v16 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setPropertiesToFetch_, v16);

  v17 = (void *)sub_24A01EF70();
  objc_msgSend(v15, sel_setRelationshipKeyPathsForPrefetching_, v17);

  objc_msgSend(v15, sel_setFetchBatchSize_, a3);
  v18 = *(void **)(a4 + 16);
  type metadata accessor for VUIndexObservation();
  v19 = v18;
  v20 = sub_24A01F198();
  if (v7)
  {

    return;
  }
  v21 = v20;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_7;
LABEL_19:
    __break(1u);
    return;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!a3)
    goto LABEL_19;
LABEL_7:
  v23 = v22 >= 0;
  if (a3 > 0)
    v23 = v22 < 1;
  if (!v23)
  {
    v24 = 0;
    do
    {
      v25 = (void *)MEMORY[0x24BD07458]();
      sub_249FD2B98(v24, a3, v21, a5, v27, a4, v28);
      if (__OFADD__(v24, a3))
        v24 = ((v24 + a3) >> 63) ^ 0x8000000000000000;
      else
        v24 += a3;
      objc_autoreleasePoolPop(v25);
      v26 = v22 >= v24;
      if (a3 > 0)
        v26 = v24 >= v22;
    }
    while (!v26);
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_249FD2B98(int64_t a1, uint64_t a2, unint64_t a3, void (*a4)(id, id), uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t (*v25)(_QWORD);
  uint64_t result;
  void *v27;
  id v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    v8 = a1;
    v30 = a6;
    v7 = a3 >> 62;
    if (!(a3 >> 62))
    {
      v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= v10)
        v12 = a1 + a2;
      else
        v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12 < a1)
        goto LABEL_50;
      if (v11 >= a1)
        goto LABEL_8;
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
  }
  if (v9 < 0)
    v11 = v9;
  else
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
  v25 = a7;
  swift_bridgeObjectRetain();
  v12 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (v12 >= v10)
    v12 = v10;
  if (v12 < v8)
    goto LABEL_50;
  swift_bridgeObjectRetain();
  v11 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  a7 = v25;
  if (v11 < v8)
    goto LABEL_49;
LABEL_8:
  if (v8 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v29 = a7;
  if (v7)
  {
    swift_bridgeObjectRetain();
    v11 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v11 < v12)
    goto LABEL_52;
  if (v12 < 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((v9 & 0xC000000000000001) != 0 && v12 != v8)
  {
    if (v12 <= (unint64_t)v8)
      goto LABEL_63;
    type metadata accessor for VUIndexObservation();
    v13 = v8;
    do
    {
      v14 = v13 + 1;
      sub_24A01F318();
      v13 = v14;
    }
    while (v12 != v14);
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    v7 = sub_24A01F3D8();
    v11 = v15;
    v8 = v16;
    v12 = v17;
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_23;
  }
  else
  {
    v7 = v9 & 0xFFFFFFFFFFFFFF8;
    v11 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
    v12 = (2 * v12) | 1;
    swift_bridgeObjectRetain();
    if ((v12 & 1) == 0)
      goto LABEL_23;
  }
  sub_24A01F468();
  swift_unknownObjectRetain_n();
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v18 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v12 >> 1, v8))
    goto LABEL_64;
  if (v19 != ((unint64_t)v12 >> 1) - v8)
    goto LABEL_65;
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
    {
LABEL_54:
      v7 = sub_24A01F3CC();
      if (!v7)
        goto LABEL_55;
    }
    else
    {
      v7 = *(_QWORD *)(v8 + 16);
      if (!v7)
        goto LABEL_55;
    }
    if (v7 >= 1)
      break;
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_unknownObjectRelease();
LABEL_23:
    v8 = sub_249FB5C04(v7, v11, v8, v12);
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x24BD071F4](i, v8);
    else
      v21 = *(id *)(v8 + 8 * i + 32);
    v22 = v21;
    v23 = objc_msgSend(v21, sel_mapping);
    if (v23)
    {
      v24 = v23;
      a4(objc_msgSend(v22, sel_identifier), v23);

      v22 = v24;
    }

  }
LABEL_55:
  swift_release();
  result = (uint64_t)objc_msgSend(*(id *)(v30 + 16), sel_hasChanges);
  if ((result & 1) != 0)
  {
    v27 = *(void **)(v30 + 16);
    v32[0] = 0;
    if (!objc_msgSend(v27, sel_save_, v32))
    {
      v28 = v32[0];
      sub_24A01EA00();

      return swift_willThrow();
    }
    result = (uint64_t)v32[0];
  }
  if (v29)
    return v29(result);
  return result;
}

void sub_249FD2F98(uint64_t a1, unsigned __int8 a2, void (*a3)(id))
{
  sub_249FD32D0(a2, a3);
}

void sub_249FD2FC4(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBA8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v11 = (void *)sub_24A01EE44();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24A0208B0;
  v14 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 32) = a1;
  v15 = (void *)sub_24A01F09C();
  objc_msgSend(v12, sel_setPredicate_, v15);

  v16 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v17 = v16;
  v18 = sub_24A01F198();

  if (v3)
  {

    return;
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_5;
LABEL_10:
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a2 + 16));
    objc_msgSend(v21, sel_setType_, a1);
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_5:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x24BD071F4](0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v19 = *(id *)(v18 + 32);
  }
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = v20;
LABEL_11:
  v23 = objc_msgSend(v21, sel_lastUpdated);
  if (v23)
  {
    v24 = v23;
    sub_24A01EB44();

    v25 = sub_24A01EB5C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 0, 1, v25);
  }
  else
  {
    v26 = sub_24A01EB5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
  }
  sub_249F98AB8((uint64_t)v9, a3, &qword_2578FFBA8);

}

void sub_249FD32D0(unsigned __int8 a1, void (*a2)(id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v4 = v2;
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v11 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = a1;
  v12 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v12);

  v13 = *(void **)(v4 + 16);
  type metadata accessor for VUIndexSubset();
  v14 = v13;
  v15 = sub_24A01F198();

  if (v3)
    goto LABEL_11;
  if (!(v15 >> 62))
  {
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v4 + 16));
    objc_msgSend(v18, sel_setType_, a1);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v19 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_9;
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24BD071F4](0, v15);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_7:
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = v17;
LABEL_10:
    a2(v18);

    v9 = v18;
LABEL_11:

    return;
  }
  __break(1u);
}

void sub_249FD352C(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  sub_249FD3564(a1, a2, (SEL *)&selRef_staleObservations, a3);
}

void sub_249FD3548(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  sub_249FD3564(a1, a2, (SEL *)&selRef_staleTags, a3);
}

void sub_249FD3564(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, SEL *a3@<X2>, unsigned __int8 *a4@<X8>)
{
  void *v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;

  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_24A01EE44();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208B0;
  v13 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 64) = v13;
  *(_QWORD *)(v12 + 32) = a1;
  v14 = (void *)sub_24A01F09C();
  objc_msgSend(v11, sel_setPredicate_, v14);

  v15 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v16 = v15;
  v17 = sub_24A01F198();
  if (v4)
  {

LABEL_3:
    v18 = 1;
LABEL_10:
    *a4 = v18;
    return;
  }
  v19 = v17;

  if (!(v19 >> 62))
  {
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_12:

    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v22 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_12;
LABEL_6:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v20 = (id)MEMORY[0x24BD071F4](0, v19);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v19 + 32);
LABEL_9:
    v21 = v20;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v21, *a3);

    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_249FD379C(__int16 a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  char v27;

  v26 = 0;
  v27 = 1;
  v3 = *(void **)(v1 + 16);
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 17) = HIBYTE(a1) & 1;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(v4 + 32) = &v26;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_249FE1A04;
  *(_QWORD *)(v5 + 24) = v4;
  v24 = sub_249FCA5C8;
  v25 = v5;
  v6 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v21 = 1107296256;
  v22 = sub_249F87210;
  v23 = &block_descriptor_33_0;
  v7 = _Block_copy(&aBlock);
  v8 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v27 != 1)
    {
LABEL_8:
      v15 = v26;
      swift_release();
      return v15;
    }
    v16 = 0u;
    v17 = 0u;
    v10 = *(void **)(v1 + 16);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v1;
    v11[3] = &v16;
    v11[4] = 0x6E6F6973726576;
    v11[5] = 0xE700000000000000;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_249F98A9C;
    *(_QWORD *)(v12 + 24) = v11;
    v24 = sub_249FCA5C8;
    v25 = v12;
    aBlock = v6;
    v21 = 1107296256;
    v22 = sub_249F87210;
    v23 = &block_descriptor_43;
    v13 = _Block_copy(&aBlock);
    swift_retain();
    v14 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_performBlockAndWait_, v13, v16, v17);

    _Block_release(v13);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v14 & 1) == 0)
    {
      sub_249F98C10((uint64_t)&v16, (uint64_t)v18, &qword_2544CAF40);
      swift_release();
      if (v19)
      {
        if (swift_dynamicCast())
        {
          v26 = aBlock;
          v27 = 0;
        }
      }
      else
      {
        sub_249F990A0((uint64_t)v18, &qword_2544CAF40);
      }
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

void sub_249FD3A9C(__int16 a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  signed int v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if ((a1 & 0x100) == 0)
  {
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
    v10 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v9 + 64) = v10;
    *(_QWORD *)(v9 + 32) = a1;
    v11 = (void *)sub_24A01F09C();
    objc_msgSend(v8, sel_setPredicate_, v11);

  }
  v12 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v21 = v12;
  v13 = sub_24A01F198();

  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_5;
LABEL_21:

LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v14 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_21;
LABEL_5:
  if (v14 >= 1)
  {
    v22 = v8;
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x24BD071F4](i, v13);
      else
        v19 = *(id *)(v13 + 8 * i + 32);
      v20 = v19;
      if ((int)objc_msgSend(v19, sel_version, v22) >= 1)
      {
        if (*(_BYTE *)(a3 + 8))
          v16 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v16 = *(_QWORD *)a3;
        v17 = objc_msgSend(v20, sel_version);

        v18 = v17;
        if (v16 < v17)
          v18 = v16;
        *(_QWORD *)a3 = v18;
        *(_BYTE *)(a3 + 8) = 0;
      }
      else
      {

      }
    }

    goto LABEL_22;
  }
  __break(1u);
}

void sub_249FD3D44(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v14 = (void *)sub_24A01EE44();
  v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A0208B0;
  v17 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = a1;
  v18 = (void *)sub_24A01F09C();
  objc_msgSend(v15, sel_setPredicate_, v18);

  v19 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v20 = v19;
  v21 = sub_24A01F198();
  if (v3)
  {

LABEL_3:
    v22 = sub_24A01EB5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v12, 1, 1, v22);
    v23 = 0;
LABEL_4:
    sub_24A01EB20();

    sub_249F990A0((uint64_t)v12, &qword_2578FFBA8);
    return;
  }
  v24 = v21;

  if (!(v24 >> 62))
  {
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v30 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v30)
    goto LABEL_17;
LABEL_7:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v25 = (id)MEMORY[0x24BD071F4](0, v24);
  }
  else
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v25 = *(id *)(v24 + 32);
  }
  v23 = v25;
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_3;
  v26 = objc_msgSend(v23, sel_lastUpdated);
  if (v26)
  {
    v27 = v26;
    sub_24A01EB44();

    v28 = sub_24A01EB5C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 0, 1, v28);
  }
  else
  {
    v28 = sub_24A01EB5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
  }
  sub_249F98C10((uint64_t)v10, (uint64_t)v12, &qword_2578FFBA8);
  sub_24A01EB5C();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v28) == 1)
    goto LABEL_4;

  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(a3, v12, v28);
}

void sub_249FD40BC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA2D0);
  *(_QWORD *)(v10 + 64) = sub_249F98C68((unint64_t *)&qword_2544CA2D8, &qword_2544CA2D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v10 + 32) = a1;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v11);

  v12 = (void *)sub_24A01EF70();
  objc_msgSend(v9, sel_setRelationshipKeyPathsForPrefetching_, v12);

  v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  v14 = v13;
  v15 = sub_24A01F198();
  if (v3)
  {

  }
  else
  {
    v16 = v15;

    a3(v16);
    swift_bridgeObjectRelease();

  }
}

void sub_249FD42D0(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  unint64_t *v36;
  unint64_t v37;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v12 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = a1;
  v13 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v13);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v14 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 32) = 0x726573624F79656BLL;
  *(_QWORD *)(v14 + 40) = 0xEF736E6F69746176;
  v16 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setPropertiesToFetch_, v16);

  objc_msgSend(v9, sel_setFetchLimit_, 1);
  v17 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v18 = v17;
  v19 = sub_24A01F198();
  if (v3)
  {

    v20 = 0;
  }
  else
  {
    v23 = v19;

    if (v23 >> 62)
      goto LABEL_27;
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_17;
LABEL_28:
    swift_bridgeObjectRelease();
    v20 = 0;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  v21 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_24:
        swift_bridgeObjectRelease();

        v25 = MEMORY[0x24BEE4AF8];
LABEL_25:
        *a3 = v25;
        return;
      }
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v22)
        goto LABEL_24;
    }
    v37 = MEMORY[0x24BEE4AF8];
    v23 = (unint64_t)&v37;
    sub_249F8C9C8(0, v22 & ~(v22 >> 63), 0);
    if ((v22 & 0x8000000000000000) == 0)
    {
      v35 = v9;
      v36 = a3;
      v24 = 0;
      v25 = v37;
      do
      {
        if ((v21 & 0xC000000000000001) != 0)
          v26 = (id)MEMORY[0x24BD071F4](v24, v21);
        else
          v26 = *(id *)(v21 + 8 * v24 + 32);
        v27 = v26;
        v28 = objc_msgSend(v26, sel_integerValue);

        v37 = v25;
        v30 = *(_QWORD *)(v25 + 16);
        v29 = *(_QWORD *)(v25 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_249F8C9C8(v29 > 1, v30 + 1, 1);
          v25 = v37;
        }
        ++v24;
        *(_QWORD *)(v25 + 16) = v30 + 1;
        *(_QWORD *)(v25 + 8 * v30 + 32) = v28;
      }
      while (v22 != v24);
      swift_bridgeObjectRelease();

      a3 = v36;
      goto LABEL_25;
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v34 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (!v34)
      goto LABEL_28;
LABEL_17:
    if ((v23 & 0xC000000000000001) == 0)
      break;
    v31 = (id)MEMORY[0x24BD071F4](0, v23);
LABEL_20:
    v20 = v31;
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v20, sel_keyObservations);
    if (v32)
    {
      v33 = v32;
      v37 = 0;
      sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
      sub_24A01EF7C();

      v21 = v37;
      if (v37)
        continue;
    }
    goto LABEL_3;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v31 = *(id *)(v23 + 32);
    goto LABEL_20;
  }
  __break(1u);
}

void sub_249FD473C(unint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  unint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  char v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  _BYTE *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  _BYTE *v60;
  unint64_t v61;
  __int128 v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v60 = a3;
  v5 = sub_24A01EB5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBB0);
  MEMORY[0x24BDAC7A8](v58);
  v65 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBA8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v66 = (uint64_t)&v56 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v56 - v17;
  v19 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v20 = (void *)sub_24A01EE44();
  v21 = objc_msgSend(v19, sel_initWithEntityName_, v20);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v22 = swift_allocObject();
  v62 = xmmword_24A0208B0;
  v23 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v22 + 16) = xmmword_24A0208B0;
  v24 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = v24;
  v61 = a1;
  *(_QWORD *)(v22 + 32) = a1;
  v25 = (void *)sub_24A01F09C();
  objc_msgSend(v21, sel_setPredicate_, v25);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v26 = swift_allocObject();
  v27 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v26 + 16) = v62;
  *(_QWORD *)(v26 + 56) = v27;
  strcpy((char *)(v26 + 32), "snapshotDate");
  *(_BYTE *)(v26 + 45) = 0;
  *(_WORD *)(v26 + 46) = -5120;
  v28 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setPropertiesToFetch_, v28);

  objc_msgSend(v21, sel_setFetchLimit_, 1);
  *(_QWORD *)&v62 = a2;
  v29 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v30 = v29;
  v59 = v21;
  v31 = v63;
  v32 = sub_24A01F198();
  v64 = v18;
  if (v31)
  {

    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v33(v18, 1, 1, v5);
    v34 = v6;
    v35 = v5;
    v36 = v66;
  }
  else
  {
    v37 = v32;

    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      v38 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v39 = (uint64_t)v16;
    v35 = v5;
    v36 = v66;
    if (v38)
    {
      if ((v37 & 0xC000000000000001) != 0)
      {
        v40 = (id)MEMORY[0x24BD071F4](0, v37);
      }
      else
      {
        if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v40 = *(id *)(v37 + 32);
      }
      v41 = v40;
      swift_bridgeObjectRelease();
      v42 = objc_msgSend(v41, sel_snapshotDate);

      if (v42)
      {
        sub_24A01EB44();

        v34 = v6;
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v33((char *)v39, 0, 1, v35);
      }
      else
      {
        v34 = v6;
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v33((char *)v39, 1, 1, v35);
      }
      sub_249F98C10(v39, (uint64_t)v64, &qword_2578FFBA8);
    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = v6;
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v33(v64, 1, 1, v35);
    }
  }
  v33((char *)v36, 1, 1, v35);
  v43 = HIBYTE(v61);
  if ((int)HIBYTE(v61) > 5)
  {
    if ((_DWORD)v43 == 6)
    {
      v44 = 6;
      goto LABEL_22;
    }
    if ((_DWORD)v43 == 63)
    {
      v44 = 63;
      goto LABEL_22;
    }
LABEL_20:
    v44 = 0;
    goto LABEL_22;
  }
  if ((_DWORD)v43 != 2)
    goto LABEL_20;
  v44 = 2;
LABEL_22:
  sub_249FD2FC4(v44, v62, v36);
  v45 = (uint64_t)v57;
  v46 = (uint64_t)v64;
  v47 = v65;
  v48 = v65 + *(int *)(v58 + 48);
  v49 = &qword_2578FFBA8;
  sub_249F9905C((uint64_t)v64, v65, &qword_2578FFBA8);
  sub_249F9905C(v66, v48, &qword_2578FFBA8);
  v50 = v34;
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v51(v47, 1, v35) == 1)
  {
    sub_249F990A0(v46, &qword_2578FFBA8);

    if (v51(v48, 1, v35) == 1)
    {
      v52 = -1;
    }
    else
    {
      v49 = &qword_2578FFBB0;
      v52 = 0;
    }
  }
  else
  {
    sub_249F9905C(v47, v45, &qword_2578FFBA8);
    if (v51(v48, 1, v35) == 1)
    {
      sub_249F990A0((uint64_t)v64, &qword_2578FFBA8);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v35);
      v52 = 0;
      v49 = &qword_2578FFBB0;
    }
    else
    {
      v53 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v56, v48, v35);
      sub_249FA2B24(&qword_2578FFBB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v52 = sub_24A01EE38();

      v54 = *(void (**)(char *, uint64_t))(v50 + 8);
      v54(v53, v35);
      v49 = &qword_2578FFBA8;
      sub_249F990A0((uint64_t)v64, &qword_2578FFBA8);
      v54((char *)v45, v35);
    }
  }
  v55 = v60;
  sub_249F990A0(v65, v49);
  *v55 = v52 & 1;
  sub_249F990A0(v66, &qword_2578FFBA8);
}

void sub_249FD4E00(unint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  unsigned __int8 v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  void *v26;
  id v27[3];

  v27[2] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_24A01EE44();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v7 = swift_allocObject();
  v8 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v7 + 16) = xmmword_24A0208B0;
  v9 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = (void *)sub_24A01F09C();
  objc_msgSend(v6, sel_setPredicate_, v10);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v11 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v11 + 56) = v12;
  strcpy((char *)(v11 + 32), "snapshotDate");
  *(_BYTE *)(v11 + 45) = 0;
  *(_WORD *)(v11 + 46) = -5120;
  v13 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v13);

  objc_msgSend(v6, sel_setFetchLimit_, 1);
  v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v15 = v14;
  v16 = sub_24A01F198();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = (void *)sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (!v17)
      goto LABEL_7;
  }
  else
  {
    v17 = *(void **)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v17)
      goto LABEL_7;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x24BD071F4](0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v18 = *(id *)(v16 + 32);
  }
  v17 = v18;
LABEL_7:
  swift_bridgeObjectRelease();
  v19 = HIBYTE(a1);
  if ((int)HIBYTE(a1) <= 5)
  {
    if ((_DWORD)v19 == 2)
    {
      v20 = v17;
      v21 = 2;
      goto LABEL_15;
    }
LABEL_13:
    v20 = v17;
    v21 = 0;
    goto LABEL_15;
  }
  if ((_DWORD)v19 != 6)
  {
    if ((_DWORD)v19 == 63)
    {
      v20 = v17;
      v21 = 63;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v20 = v17;
  v21 = 6;
LABEL_15:
  sub_249FE258C(v21, a2, v17);

  v22 = *(void **)(a2 + 16);
  v27[0] = 0;
  v23 = objc_msgSend(v22, sel_save_, v27, 1, 2);
  v24 = v27[0];
  if (v23)
  {

  }
  else
  {
    v25 = v24;
    v26 = (void *)sub_24A01EA00();

    swift_willThrow();
  }
}

void sub_249FD5198(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v4 = sub_24A01EB5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBA8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = objc_msgSend(a1, sel_lastUpdated);
    if (v11)
    {
      v12 = v11;
      sub_24A01EB44();

      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        v13 = 0;
      }
      else
      {
        v13 = (void *)sub_24A01EB2C();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
      v13 = 0;
    }
    objc_msgSend(a2, sel_setSnapshotDate_, v13);

  }
}

void sub_249FD530C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  unsigned __int8 v24;
  uint64_t v25;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v12 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = a1;
  v13 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v13);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v14 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v14 + 56) = v15;
  strcpy((char *)(v14 + 32), "isOverridden");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  v16 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setPropertiesToFetch_, v16);

  objc_msgSend(v9, sel_setFetchLimit_, 1);
  v17 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v18 = v17;
  v19 = sub_24A01F198();
  if (v3)
  {

LABEL_3:
    *(_QWORD *)a3 = 0;
    *(_WORD *)(a3 + 8) = 1;
    return;
  }
  v20 = v19;

  if (!(v20 >> 62))
  {
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_13:

    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v25 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_13;
LABEL_6:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x24BD071F4](0, v20);
  }
  else
  {
    if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v21 = *(id *)(v20 + 32);
  }
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = v22;
  if (!objc_msgSend(v23, sel_selectedObservation))
  {

    goto LABEL_3;
  }
  *(_QWORD *)a3 = objc_msgSend(v23, sel_selectedObservation);
  *(_BYTE *)(a3 + 8) = 0;
  v24 = objc_msgSend(v23, sel_isOverridden);

  *(_BYTE *)(a3 + 9) = v24;
}

void sub_249FD5624(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_24A01EE44();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v12 + 16) = xmmword_24A0208B0;
  v14 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 32) = a1;
  v15 = (void *)sub_24A01F09C();
  objc_msgSend(v11, sel_setPredicate_, v15);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v16 + 32) = 0xD000000000000013;
  *(_QWORD *)(v16 + 40) = 0x800000024A023740;
  v17 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setPropertiesToFetch_, v17);

  objc_msgSend(v11, sel_setFetchLimit_, 1);
  v18 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v19 = v18;
  v20 = sub_24A01F198();
  if (v4)
  {

    return;
  }
  v21 = v20;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v21 & 0xC000000000000001) != 0)
    {
      v22 = (id)MEMORY[0x24BD071F4](0, v21);
    }
    else
    {
      if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        __break(1u);
      v22 = *(id *)(v21 + 32);
    }
    v23 = v22;
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setSelectedObservation_, a3);
    objc_msgSend(v23, sel_setIsOverridden_, a4 & 1);

    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v25 = *(void **)(a2 + 16);
  v28[0] = 0;
  if ((objc_msgSend(v25, sel_save_, v28, 1, 2) & 1) != 0)
  {
    v26 = v28[0];
  }
  else
  {
    v27 = v28[0];
    sub_24A01EA00();

    swift_willThrow();
  }

}

uint64_t (*sub_249FD596C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_249FD59B0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  void *v33;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  dispatch_queue_t v40;
  uint64_t v41;
  char *v42;
  uint64_t aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = v5;
  v38 = a2;
  v41 = sub_24A01EBA4();
  v39 = *(_QWORD *)(v41 - 8);
  v11 = *(_QWORD *)(v39 + 64);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a3;
  if (a5)
  {
    LOWORD(v49) = a3;
    aBlock = sub_24A01F444();
    v44 = v12;
    sub_24A01EEBC();
    v13 = a4;
    sub_24A01EEBC();
    v14 = aBlock;
    v15 = v44;
  }
  else
  {
    v13 = a4;
    LOWORD(aBlock) = a3;
    v14 = sub_24A01F444();
    v15 = v16;
  }
  v17 = *(NSObject **)(v6 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_lockQueue);
  v18 = MEMORY[0x24BDAC7A8](v14);
  *(&v36 - 4) = v6;
  *(&v36 - 3) = v18;
  v36 = v18;
  *(&v36 - 2) = v15;
  *(&v36 - 1) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBC8);
  v40 = v17;
  v19 = sub_24A01F138();
  if (v50)
  {
    v20 = v49;
    swift_bridgeObjectRelease();
    return v20;
  }
  MEMORY[0x24BDAC7A8](v19);
  *(&v36 - 6) = a1;
  *((_WORD *)&v36 - 20) = v37;
  *((_WORD *)&v36 - 19) = v38;
  *(&v36 - 4) = v6;
  *(&v36 - 3) = v13;
  *(&v36 - 2) = a5;
  v22 = v21;
  sub_24A01F180();

  v20 = aBlock;
  v23 = v44;
  v24 = (uint64_t)v45;
  v25 = v39;
  v26 = a1;
  v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v42, v26, v41);
  v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v29 = (char *)swift_allocObject();
  v30 = v36;
  *((_QWORD *)v29 + 2) = v6;
  *((_QWORD *)v29 + 3) = v30;
  *((_QWORD *)v29 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v29[v28], v42, v27);
  v31 = (uint64_t *)&v29[(v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8];
  *v31 = v20;
  v31[1] = v23;
  v31[2] = v24;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_249FE28BC;
  *(_QWORD *)(v32 + 24) = v29;
  v47 = sub_249FCA5C8;
  v48 = v32;
  aBlock = MEMORY[0x24BDAC760];
  v44 = 1107296256;
  v45 = sub_249F87210;
  v46 = &block_descriptor_133;
  v33 = _Block_copy(&aBlock);
  swift_retain();
  sub_249FE291C(v20, v23, v24);
  swift_retain();
  swift_release();
  dispatch_sync(v40, v33);
  _Block_release(v33);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return v20;
  __break(1u);
  return result;
}

uint64_t sub_249FD5D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore__tokenEmbeddingsCache);
  result = swift_beginAccess();
  v11 = *v9;
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_249F8B0F8(a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249FA38A4(a4, v14, a5);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  return result;
}

void sub_249FD5E00(__int16 a1@<W1>, __int16 a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v43;

  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_24A01EE44();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208D0;
  v13 = sub_24A01EB74();
  v15 = v14;
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 64) = sub_249FE1970();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  v17 = MEMORY[0x24BEE3F30];
  v18 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v12 + 96) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v12 + 104) = v18;
  *(_WORD *)(v12 + 72) = a1;
  *(_QWORD *)(v12 + 136) = v17;
  *(_QWORD *)(v12 + 144) = v18;
  *(_WORD *)(v12 + 112) = a2;
  v19 = (void *)sub_24A01F09C();
  objc_msgSend(v11, sel_setPredicate_, v19);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_24A0208D0;
  *(_QWORD *)(v20 + 32) = 0x6E69646465626D65;
  *(_QWORD *)(v20 + 40) = 0xE900000000000067;
  *(_QWORD *)(v20 + 56) = v16;
  *(_QWORD *)(v20 + 64) = 0x6570616873;
  *(_QWORD *)(v20 + 72) = 0xE500000000000000;
  *(_QWORD *)(v20 + 120) = v16;
  *(_QWORD *)(v20 + 88) = v16;
  *(_QWORD *)(v20 + 96) = 0x6E6F697369766572;
  *(_QWORD *)(v20 + 104) = 0xE800000000000000;
  v21 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setPropertiesToFetch_, v21);

  objc_msgSend(v11, sel_setFetchLimit_, 1);
  v22 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexToken();
  v23 = v22;
  v24 = sub_24A01F198();
  if (v43)
  {

LABEL_26:
    *a6 = 0;
    a6[1] = 0;
    a6[2] = 0;
    return;
  }
  v25 = v24;

  if (!(v25 >> 62))
  {
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_25:

    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v39 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v39)
    goto LABEL_25;
LABEL_5:
  if ((v25 & 0xC000000000000001) != 0)
  {
    v26 = (id)MEMORY[0x24BD071F4](0, v25);
  }
  else
  {
    if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v26 = *(id *)(v25 + 32);
  }
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = v27;
  v29 = objc_msgSend(v28, sel_revision);
  if (!v29)
  {
    if (!a5)
      goto LABEL_17;
LABEL_22:

    goto LABEL_23;
  }
  v30 = v29;
  v31 = sub_24A01EE68();
  v33 = v32;

  if (!a5)
  {

    swift_bridgeObjectRelease();
LABEL_23:

    goto LABEL_26;
  }
  if (v31 == a4 && v33 == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v34 = sub_24A01F45C();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
    goto LABEL_22;
LABEL_17:
  v35 = objc_msgSend(v28, sel_shape);
  if (!v35)
    goto LABEL_22;
  v36 = v35;
  v37 = objc_msgSend(v28, sel_embedding);
  if (!v37)
  {

    goto LABEL_22;
  }
  v38 = v37;
  sub_24A01EAFC();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *a6 = 0;
    a6[1] = 0;
    a6[2] = 0;
  }
}

uint64_t sub_249FD6280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v20)();
  void (*v21)(_QWORD *);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  _BYTE v30[32];

  v27 = a6;
  v28 = a7;
  v26 = a4;
  v11 = sub_24A01EBA4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore__tokenEmbeddingsCache;
  swift_beginAccess();
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 16);
  swift_bridgeObjectRetain();
  if (v16)
  {
    swift_bridgeObjectRetain();
    sub_249F8B0F8(a2, a3);
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v18 = sub_249F7636C(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29[0] = *(_QWORD *)v15;
  *(_QWORD *)v15 = 0x8000000000000000;
  sub_249FC05A4(v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v15 = v29[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_6:
  swift_bridgeObjectRetain();
  v20 = sub_249FD596C();
  v21 = sub_24A0076A4(v29, a2, a3);
  if (*v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
    v24 = v27;
    v23 = v28;
    sub_249FE291C(a5, v27, v28);
    sub_249FA4850(a5, v24, v23, (uint64_t)v14);
  }
  ((void (*)(_QWORD *, _QWORD))v21)(v29, 0);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(_BYTE *, _QWORD))v20)(v30, 0);
}

uint64_t sub_249FD6488(int a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  _QWORD v12[6];
  uint64_t v13;
  unsigned __int8 v14;

  v2 = v1;
  v13 = 0;
  v14 = 1;
  v4 = *(void **)(v2 + 16);
  v5 = swift_allocObject();
  *(_WORD *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 18) = BYTE2(a1) & 1;
  *(_QWORD *)(v5 + 24) = &v13;
  *(_QWORD *)(v5 + 32) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_249FE19D8;
  *(_QWORD *)(v6 + 24) = v5;
  v12[4] = sub_249FCA5C8;
  v12[5] = v6;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_249F87210;
  v12[3] = &block_descriptor_23;
  v7 = _Block_copy(v12);
  v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v13;
    v11 = v14;
    swift_release();
    if (v11)
      return 0;
    else
      return v10;
  }
  return result;
}

void sub_249FD65F4(int a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if ((a1 & 0x10000) == 0)
  {
    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v9 = swift_allocObject();
    v10 = MEMORY[0x24BEE3F30];
    *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
    v11 = MEMORY[0x24BEE3F78];
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = v11;
    *(_WORD *)(v9 + 32) = a1;
    v12 = (void *)sub_24A01F09C();
    objc_msgSend(v8, sel_setPredicate_, v12);

  }
  v13 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexToken();
  v14 = v13;
  v15 = sub_24A01F18C();

  *(_QWORD *)a2 = v15;
  *(_BYTE *)(a2 + 8) = 0;
}

void sub_249FD677C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE4008];
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v12 = MEMORY[0x24BEE4060];
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = a1;
  v13 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v13);

  objc_msgSend(v9, sel_setFetchLimit_, 1);
  v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexCachedEntity();
  v15 = v14;
  v16 = sub_24A01F198();

  if (v3)
  {

    return;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v16 & 0xC000000000000001) != 0)
    {
      v17 = (id)MEMORY[0x24BD071F4](0, v16);
    }
    else
    {
      if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        __break(1u);
      v17 = *(id *)(v16 + 32);
    }
    v18 = v17;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a2 + 16));
LABEL_11:
  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v27 = a1;
    v28[0] = (id)MEMORY[0x24BEE4AF8];
    sub_24A01F360();
    v21 = (uint64_t *)(a3 + 32);
    do
    {
      v22 = *v21++;
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v22);
      sub_24A01F33C();
      sub_24A01F36C();
      sub_24A01F378();
      sub_24A01F348();
      --v20;
    }
    while (v20);
    a1 = v27;
  }
  sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
  v23 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setKeyObservations_, v23);

  objc_msgSend(v18, sel_setLabel_, a1);
  v24 = *(void **)(a2 + 16);
  v28[0] = 0;
  if ((objc_msgSend(v24, sel_save_, v28) & 1) != 0)
  {
    v25 = v28[0];
  }
  else
  {
    v26 = v28[0];
    sub_24A01EA00();

    swift_willThrow();
  }

}

void sub_249FD6B24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];
  dispatch_queue_t v38;

  v36 = a8;
  v9 = v8;
  v33 = a4;
  v34 = a2;
  v31 = a1;
  v14 = sub_24A01EBA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(dispatch_queue_t *)(v9 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_lockQueue);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v30 = a3;
  v18(v17, a3, v14);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v9;
  v32 = a5;
  *(_WORD *)(v20 + 24) = a5;
  v35 = a6;
  *(_QWORD *)(v20 + 32) = a6;
  *(_QWORD *)(v20 + 40) = a7;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v19, v17, v14);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_249FE18F0;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_249FCA5C8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_13;
  v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v38, v22);
  _Block_release(v22);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  v23 = swift_release();
  if ((a5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v23);
    *(&v29 - 8) = v30;
    *((_WORD *)&v29 - 28) = v32;
    *((_WORD *)&v29 - 27) = v33;
    v24 = v31;
    *(&v29 - 6) = v9;
    *(&v29 - 5) = v24;
    v25 = v35;
    *(&v29 - 4) = v34;
    *(&v29 - 3) = v25;
    v26 = v36;
    *(&v29 - 2) = a7;
    *(&v29 - 1) = v26;
    v28 = v27;
    sub_24A01F180();
    swift_release();

  }
}

uint64_t sub_249FD6DA4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  void (*v11)(_QWORD *);
  _QWORD *v12;
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[3];

  if (a4)
  {
    LOWORD(v14[0]) = a2;
    v15 = sub_24A01F444();
    v16 = v6;
    sub_24A01EEBC();
    sub_24A01EEBC();
    v8 = v15;
    v7 = v16;
  }
  else
  {
    LOWORD(v15) = a2;
    v8 = sub_24A01F444();
    v7 = v9;
  }
  v10 = sub_249FD596C();
  v11 = sub_24A0076A4(v14, v8, v7);
  if (*v12)
  {
    sub_249FB8198(a5, (uint64_t)v17);
    ((void (*)(_QWORD *, _QWORD))v11)(v14, 0);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, _QWORD))v10)(&v15, 0);
    return sub_249FCA428(v17[0], v17[1], v17[2]);
  }
  else
  {
    ((void (*)(_QWORD *, _QWORD))v11)(v14, 0);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, _QWORD))v10)(&v15, 0);
  }
}

void sub_249FD6EE4(uint64_t a1, __int16 a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  __int16 v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v12 = (void *)sub_24A01EE44();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A0208D0;
  v15 = sub_24A01EB74();
  v17 = v16;
  *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v14 + 64) = sub_249FE1970();
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v17;
  v18 = MEMORY[0x24BEE3F30];
  v19 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v14 + 96) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v14 + 104) = v19;
  v20 = a2;
  *(_WORD *)(v14 + 72) = a2;
  *(_QWORD *)(v14 + 136) = v18;
  *(_QWORD *)(v14 + 144) = v19;
  v21 = a3;
  *(_WORD *)(v14 + 112) = a3;
  v22 = (void *)sub_24A01F09C();
  objc_msgSend(v13, sel_setPredicate_, v22);

  objc_msgSend(v13, sel_setFetchLimit_, 1);
  v23 = a4;
  v24 = *(void **)(a4 + 16);
  type metadata accessor for VUIndexToken();
  v25 = v24;
  v26 = sub_24A01F198();

  if (v39)
  {

  }
  else
  {
    v27 = v20;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v28)
    {
      if ((v26 & 0xC000000000000001) != 0)
      {
        v29 = (id)MEMORY[0x24BD071F4](0, v26);
      }
      else
      {
        if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
          __break(1u);
        v29 = *(id *)(v26 + 32);
      }
      v30 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v23 + 16));
    }
    v31 = (void *)sub_24A01EAF0();
    objc_msgSend(v30, sel_setEmbedding_, v31);

    v32 = (void *)sub_24A01EB80();
    objc_msgSend(v30, sel_setTag_, v32);

    objc_msgSend(v30, sel_setClient_, v21);
    objc_msgSend(v30, sel_setVersion_, v27);
    if (a8)
      v33 = (void *)sub_24A01EE44();
    else
      v33 = 0;
    objc_msgSend(v30, sel_setRevision_, v33, 0);

    sub_249F990DC(0, (unint64_t *)&qword_2544CAD40);
    v34 = (void *)sub_24A01EF70();
    objc_msgSend(v30, sel_setShape_, v34);

    v35 = *(void **)(v23 + 16);
    v40[0] = 0;
    if ((objc_msgSend(v35, sel_save_, v40) & 1) != 0)
    {
      v36 = v40[0];

    }
    else
    {
      v37 = v40[0];
      sub_24A01EA00();

      swift_willThrow();
    }
  }
}

id sub_249FD730C(int64_t a1, unint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  id v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  void *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  void *v42;
  id v44;
  char *v45;
  uint64_t v46;
  int64_t v47;
  objc_class *ObjCClassFromMetadata;
  unint64_t v49;
  unint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  void *v57;
  id v58[2];

  v58[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_24A01EE44();
  v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, *(_QWORD *)(a1 + 16));

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_attributesByName);

    sub_249F990DC(0, &qword_2578FFBF8);
    v7 = (_BYTE *)sub_24A01EDFC();

  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v8, *(_QWORD *)(a1 + 16));

  if (v9)
  {
    v10 = objc_msgSend(v9, sel_attributesByName);

    sub_249F990DC(0, &qword_2578FFBF8);
    v54 = sub_24A01EDFC();

  }
  else
  {
    v54 = 0;
  }
  v11 = a2;
  if (a2 >> 62)
    goto LABEL_69;
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v12)
  {
    while (1)
    {
      type metadata accessor for VUIndexObservation();
      v13 = 0;
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      v49 = v11 & 0xC000000000000001;
      v45 = (char *)(v11 + 32);
      v46 = v11 & 0xFFFFFFFFFFFFFF8;
      v55 = v7 + 64;
      v52 = v54 + 64;
      v47 = a1;
      while (1)
      {
        if (v49)
        {
          v15 = (id)MEMORY[0x24BD071F4](v13, v11);
        }
        else
        {
          if (v13 >= *(_QWORD *)(v46 + 16))
            goto LABEL_68;
          v15 = *(id *)&v45[8 * v13];
        }
        v57 = v15;
        v16 = __OFADD__(v13, 1);
        v17 = v13 + 1;
        if (v16)
          goto LABEL_67;
        v51 = v17;
        v56 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithContext_, *(_QWORD *)(a1 + 16));
        if (!v7)
        {
          __break(1u);
LABEL_74:
          __break(1u);
        }
        v18 = 1 << v7[32];
        if (v18 < 64)
          v19 = ~(-1 << v18);
        else
          v19 = -1;
        v20 = v19 & *((_QWORD *)v7 + 8);
        v21 = (unint64_t)(v18 + 63) >> 6;
        v11 = (unint64_t)v7;
        swift_bridgeObjectRetain();
        v22 = 0;
        while (1)
        {
          if (v20)
          {
            v23 = __clz(__rbit64(v20));
            v20 &= v20 - 1;
            v24 = v23 | (v22 << 6);
            v7 = (_BYTE *)v11;
            goto LABEL_23;
          }
          v28 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          v7 = (_BYTE *)v11;
          if (v28 >= v21)
            goto LABEL_39;
          v29 = *(_QWORD *)&v55[8 * v28];
          ++v22;
          if (!v29)
          {
            v22 = v28 + 1;
            if (v28 + 1 >= v21)
              goto LABEL_39;
            v29 = *(_QWORD *)&v55[8 * v22];
            if (!v29)
            {
              v22 = v28 + 2;
              if (v28 + 2 >= v21)
                goto LABEL_39;
              v29 = *(_QWORD *)&v55[8 * v22];
              if (!v29)
                break;
            }
          }
LABEL_38:
          v20 = (v29 - 1) & v29;
          v24 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_23:
          v7 = *(_BYTE **)(*((_QWORD *)v7 + 6) + 16 * v24 + 8);
          swift_bridgeObjectRetain();
          v25 = (void *)sub_24A01EE44();
          v26 = objc_msgSend(v57, sel_valueForKey_, v25);

          v27 = (void *)sub_24A01EE44();
          swift_bridgeObjectRelease();
          objc_msgSend(v56, sel_setValue_forKey_, v26, v27);
          swift_unknownObjectRelease();

        }
        v30 = v28 + 3;
        if (v30 < v21)
        {
          v29 = *(_QWORD *)&v55[8 * v30];
          if (!v29)
          {
            while (1)
            {
              v22 = v30 + 1;
              if (__OFADD__(v30, 1))
                break;
              if (v22 >= v21)
                goto LABEL_39;
              v29 = *(_QWORD *)&v55[8 * v22];
              ++v30;
              if (v29)
                goto LABEL_38;
            }
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          v22 = v30;
          goto LABEL_38;
        }
LABEL_39:
        swift_release();
        v31 = objc_msgSend(v57, sel_mapping);
        if (v31)
          break;
LABEL_11:

        v11 = a2;
        v13 = v51;
        if (v51 == v12)
          goto LABEL_70;
      }
      v32 = v31;
      type metadata accessor for VUIndexMapping();
      v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a1 + 16));
      if (!v54)
        goto LABEL_74;
      v33 = 1 << *(_BYTE *)(v54 + 32);
      if (v33 < 64)
        v34 = ~(-1 << v33);
      else
        v34 = -1;
      v35 = v34 & *(_QWORD *)(v54 + 64);
      v53 = (unint64_t)(v33 + 63) >> 6;
      swift_bridgeObjectRetain();
      a1 = 0;
      while (2)
      {
        if (v35)
        {
          v35 &= v35 - 1;
LABEL_46:
          swift_bridgeObjectRetain();
          v36 = (void *)sub_24A01EE44();
          v37 = objc_msgSend(v32, sel_valueForKey_, v36);

          v38 = (void *)sub_24A01EE44();
          swift_bridgeObjectRelease();
          objc_msgSend(v7, sel_setValue_forKey_, v37, v38);
          swift_unknownObjectRelease();

          continue;
        }
        break;
      }
      v39 = a1 + 1;
      if (__OFADD__(a1, 1))
        goto LABEL_64;
      if (v39 >= v53)
        break;
      v40 = *(_QWORD *)(v52 + 8 * v39);
      ++a1;
      if (v40)
        goto LABEL_61;
      a1 = v39 + 1;
      if (v39 + 1 >= v53)
        break;
      v40 = *(_QWORD *)(v52 + 8 * a1);
      if (v40)
        goto LABEL_61;
      a1 = v39 + 2;
      if (v39 + 2 >= v53)
        break;
      v40 = *(_QWORD *)(v52 + 8 * a1);
      if (v40)
      {
LABEL_61:
        v35 = (v40 - 1) & v40;
        goto LABEL_46;
      }
      v41 = v39 + 3;
      if (v41 >= v53)
        break;
      v40 = *(_QWORD *)(v52 + 8 * v41);
      if (v40)
      {
        a1 = v41;
        goto LABEL_61;
      }
      while (1)
      {
        a1 = v41 + 1;
        if (__OFADD__(v41, 1))
          break;
        if (a1 >= v53)
          goto LABEL_10;
        v40 = *(_QWORD *)(v52 + 8 * a1);
        ++v41;
        if (v40)
          goto LABEL_61;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      swift_bridgeObjectRetain();
      v12 = sub_24A01F3CC();
      if (!v12)
        goto LABEL_70;
    }
LABEL_10:
    swift_release();
    v14 = v7;
    objc_msgSend(v56, sel_setMapping_, v14);

    a1 = v47;
    v7 = (_BYTE *)v11;
    goto LABEL_11;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = *(void **)(a1 + 16);
  v58[0] = 0;
  if ((objc_msgSend(v42, sel_save_, v58) & 1) != 0)
    return v58[0];
  v44 = v58[0];
  sub_24A01EA00();

  return (id)swift_willThrow();
}

void sub_249FD7A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X11 }
}

void sub_249FD7A9C(uint64_t a1)
{
  id v1;
  id v2;

  MEMORY[0x24BDAC7A8](a1);
  v2 = v1;
  sub_24A01F180();

}

void sub_249FD7B6C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint32_t *p_align;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint32_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  unsigned __int8 v56;
  void *v57;
  uint64_t v58;
  Class v59;
  objc_class *ObjCClassFromMetadata;
  uint64_t i;
  id v63[2];

  v63[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v9 = (void *)sub_24A01EE44();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE4260];
  *(_OWORD *)(v11 + 16) = xmmword_24A0208B0;
  v13 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  v56 = a1;
  *(_BYTE *)(v11 + 32) = a1;
  v14 = (void *)sub_24A01F09C();
  objc_msgSend(v10, sel_setPredicate_, v14);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24A0208F0;
  v16 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v17 = (void *)sub_24A01EE44();
  v18 = objc_msgSend(v16, sel_initWithKey_ascending_, v17, 1);

  *(_QWORD *)(v15 + 32) = v18;
  v63[0] = (id)v15;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v19 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v19);

  v20 = *(void **)(a2 + 16);
  v21 = type metadata accessor for VUIndexPartition();
  v22 = v20;
  v55 = v21;
  v23 = sub_24A01F198();
  if (v4)
  {

    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v24 = v23;

    v57 = v10;
    v59 = (Class)(v24 >> 62);
    if (v24 >> 62)
      goto LABEL_19;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (i = a2; v25; i = a2)
    {
      if (v25 < 1)
        goto LABEL_45;
      v26 = 0;
      v27 = v24 & 0xC000000000000001;
      p_align = &stru_251B6CFE8.align;
      v58 = a4;
      while (1)
      {
        if (v27)
          v30 = (id)MEMORY[0x24BD071F4](v26, v24);
        else
          v30 = *(id *)(v24 + 8 * v26 + 32);
        v31 = v30;
        if ((int)objc_msgSend(v30, *((SEL *)p_align + 431), v55) >= a3)
        {
          v29 = *(id *)(a2 + 16);
          objc_msgSend(v29, sel_deleteObject_, v31);
          goto LABEL_7;
        }
        v32 = (int)objc_msgSend(v31, *((SEL *)p_align + 431));
        v33 = v32 * a4;
        if ((unsigned __int128)(v32 * (__int128)a4) >> 64 != (v32 * a4) >> 63)
          break;
        if (__OFADD__(v33, a4))
          goto LABEL_17;
        if (v33 + a4 < v33)
          goto LABEL_18;
        v34 = sub_24A01EAE4();
        v35 = v27;
        v36 = v25;
        v37 = v24;
        v38 = p_align;
        v40 = v39;
        v29 = (id)sub_24A01EAF0();
        v41 = v34;
        a2 = i;
        v42 = v40;
        p_align = v38;
        v24 = v37;
        v25 = v36;
        v27 = v35;
        a4 = v58;
        sub_249F92358(v41, v42);
        objc_msgSend(v31, sel_setCentroid_, v29);
LABEL_7:
        ++v26;

        if (v25 == v26)
          goto LABEL_20;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      v25 = sub_24A01F3CC();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (v59)
    {
      swift_bridgeObjectRetain();
      v43 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v43 < a3)
    {
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      if (v43 <= 0x80000000)
        v44 = 0x80000000;
      else
        v44 = v43;
      v45 = v43;
      while (1)
      {
        v46 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithContext_, *(_QWORD *)(a2 + 16));
        v47 = v45 * a4;
        if ((unsigned __int128)(v45 * (__int128)a4) >> 64 != (v45 * a4) >> 63)
          break;
        ++v45;
        if ((unsigned __int128)(v45 * (__int128)a4) >> 64 != (v45 * a4) >> 63)
          goto LABEL_41;
        if (v45 * a4 < v47)
          goto LABEL_42;
        v48 = sub_24A01EAE4();
        v50 = v49;
        v51 = (void *)sub_24A01EAF0();
        sub_249F92358(v48, v50);
        objc_msgSend(v46, sel_setCentroid_, v51);

        if (v43 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_43;
        if (v45 - 1 == v44)
          goto LABEL_44;
        objc_msgSend(v46, sel_setPartition_, v45 - 1);
        objc_msgSend(v46, sel_setType_, v56);

        a2 = i;
        if (v45 == a3)
          goto LABEL_34;
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
    }
LABEL_34:
    if (objc_msgSend(*(id *)(a2 + 16), sel_hasChanges, v55))
    {
      v52 = *(void **)(a2 + 16);
      v63[0] = 0;
      if (objc_msgSend(v52, sel_save_, v63))
      {
        v53 = v63[0];
      }
      else
      {
        v54 = v63[0];
        sub_24A01EA00();

        swift_willThrow();
      }

    }
    else
    {

    }
  }
}

uint64_t sub_249FD8188@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A0208B0;
  v10 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v9 + 32) = a1;
  v11 = (void *)sub_24A01F09C();
  objc_msgSend(v8, sel_setPredicate_, v11);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A0208F0;
  v13 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v14 = (void *)sub_24A01EE44();
  v15 = objc_msgSend(v13, sel_initWithKey_ascending_, v14, 1);

  *(_QWORD *)(v12 + 32) = v15;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v16 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v16);

  v17 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexPartition();
  v18 = v17;
  v36 = v8;
  v19 = sub_24A01F198();
  if (v3)
  {

    v20 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v20 = v19;
  }

  if (a1 == 6)
    v21 = 3072;
  else
    v21 = 512;
  v22 = v20 >> 62;
  if (v20 >> 62)
    goto LABEL_24;
  v23 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = v21 * v23;
    if ((unsigned __int128)(v21 * (__int128)v23) >> 64 != (v21 * v23) >> 63)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    v25 = sub_24A006BCC(result);
    v27 = v26;
    v37 = v25;
    v38 = v26;
    if (v22)
      break;
    v28 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v28)
      goto LABEL_21;
LABEL_12:
    v22 = v20 & 0xC000000000000001;
    v21 = 4;
    while (1)
    {
      v29 = v22 ? (id)MEMORY[0x24BD071F4](v21 - 4, v20) : *(id *)(v20 + 8 * v21);
      v30 = v29;
      v31 = v21 - 3;
      if (__OFADD__(v21 - 4, 1))
        break;
      result = (uint64_t)objc_msgSend(v29, sel_centroid);
      if (!result)
        goto LABEL_26;
      v32 = (void *)result;
      v33 = sub_24A01EAFC();
      v35 = v34;

      sub_24A01EB08();
      sub_249F92358(v33, v35);

      ++v21;
      if (v31 == v28)
      {

        result = swift_bridgeObjectRelease();
        v25 = v37;
        v27 = v38;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v23 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v28 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (v28)
    goto LABEL_12;
LABEL_21:

  result = swift_bridgeObjectRelease();
LABEL_22:
  *a3 = v25;
  a3[1] = v27;
  return result;
}

void sub_249FD855C(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53[3];

  v53[2] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v10 + 64) = v11;
  *(_WORD *)(v10 + 32) = 1;
  v12 = MEMORY[0x24BEE4260];
  v13 = MEMORY[0x24BEE42B0];
  *(_OWORD *)(v10 + 16) = xmmword_24A0208C0;
  *(_QWORD *)(v10 + 96) = v12;
  *(_QWORD *)(v10 + 104) = v13;
  *(_BYTE *)(v10 + 72) = a1;
  v14 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v14);

  v15 = (void *)sub_24A01EF70();
  objc_msgSend(v9, sel_setRelationshipKeyPathsForPrefetching_, v15);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A020F10;
  v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v18 = (void *)sub_24A01EE44();
  v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v21 = (void *)sub_24A01EE44();
  v22 = objc_msgSend(v20, sel_initWithKey_ascending_, v21, 1);

  *(_QWORD *)(v16 + 40) = v22;
  v23 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v24 = (void *)sub_24A01EE44();
  v25 = objc_msgSend(v23, sel_initWithKey_ascending_, v24, 1);

  *(_QWORD *)(v16 + 48) = v25;
  v26 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v27 = (void *)sub_24A01EE44();
  v28 = objc_msgSend(v26, sel_initWithKey_ascending_, v27, 1);

  *(_QWORD *)(v16 + 56) = v28;
  v53[0] = (id)v16;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v29 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setSortDescriptors_, v29);

  v30 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  v31 = v30;
  v32 = sub_24A01F198();
  if (v3)
  {

    return;
  }
  v33 = v32;

  v52 = MEMORY[0x24BEE4B08];
  v51 = v9;
  v50 = a2;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_24A01F3CC();
    if (v34)
    {
LABEL_5:
      if (v34 < 1)
      {
        __break(1u);
      }
      else
      {
        v35 = 0;
        while (1)
        {
          v37 = (v33 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x24BD071F4](v35, v33)
              : *(id *)(v33 + 8 * v35 + 32);
          v38 = v37;
          v39 = objc_msgSend(v37, sel_observation);
          if (!v39)
            break;
          v40 = v39;
          v41 = objc_msgSend(v39, sel_client);

          v42 = objc_msgSend(v38, sel_observation);
          if (!v42)
            goto LABEL_25;
          v43 = v42;
          v44 = objc_msgSend(v42, sel_mapping);

          if (v44)
          {
            v36 = (uint64_t)objc_msgSend(v44, sel_label);

          }
          else
          {
            v36 = -1;
          }
          ++v35;
          objc_msgSend(v38, sel_setResolved_, sub_249F8C744((uint64_t)v53, (uint64_t)v41, v36) & 1);

          if (v34 == v35)
            goto LABEL_17;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_5;
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  if ((objc_msgSend(*(id *)(v50 + 16), sel_hasChanges) & 1) == 0)
  {

    v46 = a3;
    goto LABEL_21;
  }
  v45 = *(void **)(v50 + 16);
  v53[0] = 0;
  v46 = a3;
  if (objc_msgSend(v45, sel_save_, v53))
  {
    v47 = v53[0];

LABEL_21:
    v48 = *(_QWORD *)(v52 + 16);
    swift_bridgeObjectRelease();
    *v46 = v48;
    return;
  }
  v49 = v53[0];
  sub_24A01EA00();

  swift_willThrow();
  swift_bridgeObjectRelease();
}

uint64_t sub_249FD8AF8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v2 = v1;
  v12 = MEMORY[0x24BEE4AF8];
  v4 = *(void **)(v2 + 16);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v5 + 32) = &v12;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_249FE181C;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_249FC76E4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F87210;
  aBlock[3] = &block_descriptor_2;
  v7 = _Block_copy(aBlock);
  v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

id sub_249FD8C54(char a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  id result;
  char v51;
  void *v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t *v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;

  v77 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FF778);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v80 = (id *)((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = sub_24A01EBA4();
  v76 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v78 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)&v69 - v11;
  v12 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v13 = (void *)sub_24A01EE44();
  v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE4260];
  *(_OWORD *)(v15 + 16) = xmmword_24A0208B0;
  v17 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v17;
  *(_BYTE *)(v15 + 32) = a1;
  v18 = (void *)sub_24A01F09C();
  objc_msgSend(v14, sel_setPredicate_, v18);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A020920;
  v20 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v21 = (void *)sub_24A01EE44();
  v22 = objc_msgSend(v20, sel_initWithKey_ascending_, v21, 1);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v24 = (void *)sub_24A01EE44();
  v25 = objc_msgSend(v23, sel_initWithKey_ascending_, v24, 1);

  *(_QWORD *)(v19 + 40) = v25;
  v83 = v19;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v26 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSortDescriptors_, v26);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_24A0208C0;
  v28 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v27 + 32) = 1701869940;
  *(_QWORD *)(v27 + 40) = 0xE400000000000000;
  *(_QWORD *)(v27 + 88) = v28;
  *(_QWORD *)(v27 + 56) = v28;
  *(_QWORD *)(v27 + 64) = 1684632949;
  *(_QWORD *)(v27 + 72) = 0xE400000000000000;
  v29 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setPropertiesToFetch_, v29);

  v30 = (void *)sub_24A01EF70();
  objc_msgSend(v14, sel_setRelationshipKeyPathsForPrefetching_, v30);

  v31 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  v32 = v31;
  v69 = v14;
  v33 = sub_24A01F198();

  if (!(v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_3;
LABEL_21:

    return (id)swift_bridgeObjectRelease();
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v34 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v34)
    goto LABEL_21;
LABEL_3:
  v71 = v34;
  v72 = v33 & 0xC000000000000001;
  v35 = 4;
  v70 = v33;
  while (1)
  {
    if (v72)
      v36 = (id)MEMORY[0x24BD071F4](v35 - 4, v33);
    else
      v36 = *(id *)(v33 + 8 * v35);
    v37 = v36;
    if (__OFADD__(v35 - 4, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    v38 = objc_msgSend(v36, sel_observation);
    if (!v38)
      break;
    v39 = v38;
    v79 = v35 - 3;
    v40 = objc_msgSend(v38, sel_identifier);

    v41 = objc_msgSend(v37, sel_uuid);
    if (!v41)
      goto LABEL_26;
    v42 = v41;
    v43 = v78;
    sub_24A01EB98();

    v44 = v76;
    v45 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
    v47 = v81;
    v46 = v82;
    v45(v81, v43, v82);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v48(v47, 0, 1, v46);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
    result = (id)v49(v47, 1, v46);
    if ((_DWORD)result == 1)
      goto LABEL_27;
    result = objc_msgSend(v37, sel_type);
    if (result > 2)
      goto LABEL_28;
    v51 = (char)result;
    result = objc_msgSend(v37, sel_observation);
    if (!result)
      goto LABEL_29;
    v52 = result;
    v53 = objc_msgSend(result, sel_asset);

    if (v53)
    {
      v54 = v78;
      sub_24A01EB98();

      v55 = (uint64_t)v73;
      v56 = v82;
      v45(v73, v54, v82);
      v48((char *)v55, 0, 1, v56);
      v57 = v49((char *)v55, 1, v56) == 1;
    }
    else
    {
      v57 = 1;
      v55 = (uint64_t)v73;
      v56 = v82;
      v48(v73, 1, 1, v82);
    }
    sub_249F990A0(v55, &qword_2544CAD70);
    v58 = (char *)v80 + *(int *)(v75 + 48);
    *v80 = v40;
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578FFB78);
    v60 = *(int *)(v59 + 48);
    v61 = *(int *)(v59 + 64);
    v45(v58, v81, v56);
    v58[v60] = v51;
    v58[v61] = v57;
    v62 = v77;
    v63 = *v77;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v62 = v63;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v63 = sub_249F8A414(0, *(_QWORD *)(v63 + 16) + 1, 1, v63);
      *v77 = v63;
    }
    v65 = v71;
    v66 = v79;
    v68 = *(_QWORD *)(v63 + 16);
    v67 = *(_QWORD *)(v63 + 24);
    if (v68 >= v67 >> 1)
    {
      v63 = sub_249F8A414(v67 > 1, v68 + 1, 1, v63);
      *v77 = v63;
    }
    *(_QWORD *)(v63 + 16) = v68 + 1;
    sub_249F98C10((uint64_t)v80, v63+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v68, &qword_2578FF778);

    ++v35;
    v33 = v70;
    if (v66 == v65)
      goto LABEL_21;
  }
  __break(1u);
LABEL_26:
  result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v81, 1, 1, v82);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249FD93FC@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  unint64_t v41;
  void (*v42)(void);
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  char *v52;
  uint64_t v53;
  int v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;

  v81 = sub_24A01EBA4();
  v79 = *(_QWORD *)(v81 - 8);
  v7 = MEMORY[0x24BDAC7A8](v81);
  v75 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v77 = (char *)&v68 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v71 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v68 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v76 = (char *)&v68 - v15;
  v16 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v17 = (void *)sub_24A01EE44();
  v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v19 = swift_allocObject();
  v20 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v19 + 16) = xmmword_24A0208B0;
  v21 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v19 + 56) = v20;
  *(_QWORD *)(v19 + 64) = v21;
  *(_WORD *)(v19 + 32) = a1;
  v22 = (void *)sub_24A01F09C();
  objc_msgSend(v18, sel_setPredicate_, v22);

  v23 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  v24 = v23;
  v70 = v18;
  v25 = sub_24A01F198();
  if (v3)
  {

    v69 = 0;
LABEL_3:
    v26 = MEMORY[0x24BEE4AF8];
    goto LABEL_5;
  }
  v26 = v25;
  v69 = 0;

  if (!v26)
    goto LABEL_3;
LABEL_5:
  if (v26 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    v27 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_7;
LABEL_43:

    result = swift_bridgeObjectRelease();
    v28 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_44:
    *(_QWORD *)a3 = v28;
    return result;
  }
  v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v27)
    goto LABEL_43;
LABEL_7:
  v68 = a3;
  v74 = v26 & 0xC000000000000001;
  v28 = (_QWORD *)MEMORY[0x24BEE4B00];
  a3 = 4;
  v72 = v26;
  v73 = v27;
  while (1)
  {
    if (v74)
      v32 = (id)MEMORY[0x24BD071F4](a3 - 4, v26);
    else
      v32 = *(id *)(v26 + 8 * a3);
    v33 = v32;
    if (__OFADD__(a3 - 4, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v34 = objc_msgSend(v32, sel_observation);
    if (!v34)
      break;
    v35 = v34;
    v80 = a3 - 3;
    v36 = objc_msgSend(v34, sel_mapping);

    if (v36)
    {
      v37 = (uint64_t)objc_msgSend(v36, sel_label);

    }
    else
    {
      v37 = -1;
    }
    v38 = v33;
    v39 = objc_msgSend(v33, sel_uuid, v68);
    if (!v39)
      goto LABEL_46;
    v40 = v39;
    sub_24A01EB98();

    v41 = v79;
    v42 = *(void (**)(void))(v79 + 32);
    v43 = v78;
    v44 = v81;
    v42();
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v45(v43, 0, 1, v44);
    v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v46(v43, 1, v44) == 1)
      goto LABEL_47;
    v47 = (uint64_t)v76;
    v42();
    v45((char *)v47, 0, 1, v44);
    if (v46((char *)v47, 1, v44) == 1)
    {
      sub_249F990A0(v47, &qword_2544CAD70);
      v48 = sub_249F8B27C(v37);
      if ((v49 & 1) != 0)
      {
        v50 = v48;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v82 = v28;
        v31 = v81;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_249FC1AFC();
          v28 = v82;
        }
        v52 = v71;
        ((void (*)(char *, unint64_t, uint64_t))v42)(v71, v28[7] + *(_QWORD *)(v79 + 72) * v50, v31);
        sub_249FBE420(v50, (uint64_t)v28);
        swift_bridgeObjectRelease();
        v30 = (uint64_t)v52;
        v29 = 0;
      }
      else
      {
        v29 = 1;
        v30 = (uint64_t)v71;
        v31 = v81;
      }
      v45((char *)v30, v29, 1, v31);
      sub_249F990A0(v30, &qword_2544CAD70);

      goto LABEL_10;
    }
    v53 = v47;
    v26 = v79;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v75, v53, v44);
    v54 = swift_isUniquelyReferenced_nonNull_native();
    v82 = v28;
    v56 = sub_249F8B27C(v37);
    v57 = v28[2];
    v58 = (v55 & 1) == 0;
    v59 = v57 + v58;
    if (__OFADD__(v57, v58))
      goto LABEL_40;
    v60 = v55;
    if (v28[3] >= v59)
    {
      if ((v54 & 1) != 0)
      {
        v63 = v82;
        if ((v55 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        sub_249FC1AFC();
        v63 = v82;
        if ((v60 & 1) == 0)
          goto LABEL_35;
      }
    }
    else
    {
      sub_249FB9A08(v59, v54);
      v61 = sub_249F8B27C(v37);
      if ((v60 & 1) != (v62 & 1))
        goto LABEL_48;
      v56 = v61;
      v63 = v82;
      if ((v60 & 1) == 0)
      {
LABEL_35:
        v63[(v56 >> 6) + 8] |= 1 << v56;
        *(_QWORD *)(v63[6] + 8 * v56) = v37;
        ((void (*)(unint64_t, char *, uint64_t))v42)(v63[7] + *(_QWORD *)(v26 + 72) * v56, v75, v81);
        v64 = v63[2];
        v65 = __OFADD__(v64, 1);
        v66 = v64 + 1;
        if (v65)
          goto LABEL_41;
        v63[2] = v66;
        goto LABEL_37;
      }
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 40))(v63[7] + *(_QWORD *)(v26 + 72) * v56, v75, v81);
LABEL_37:
    v28 = v82;

    swift_bridgeObjectRelease();
LABEL_10:
    v26 = v72;
    ++a3;
    if (v80 == v73)
    {

      result = swift_bridgeObjectRelease();
      a3 = v68;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_46:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, 1, 1, v81);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_24A01F48C();
  __break(1u);
  return result;
}

uint64_t sub_249FD9A84@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, unsigned int (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void (**v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  id v53;
  void *v54;
  unsigned __int16 v55;
  id v56;
  void *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, unint64_t);
  uint64_t v61;
  char *v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;

  v74 = a5;
  v78 = a4;
  LODWORD(v6) = a3;
  v70 = a1;
  v71 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC20);
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v81 = (uint64_t *)((char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t)&v69 - v14;
  v16 = sub_24A01EBA4();
  v80 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v73 = (char *)&v69 - v19;
  v20 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v21 = (void *)sub_24A01EE44();
  v72 = objc_msgSend(v20, sel_initWithEntityName_, v21);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24A0208F0;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  *(_QWORD *)(v22 + 32) = sub_24A01F09C();
  v83 = v22;
  sub_24A01EFA0();
  v23 = (unint64_t)&unk_24A020000;
  if ((a2 & 1) != 0)
    goto LABEL_4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24A0208B0;
  v25 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v24 + 64) = v25;
  *(_QWORD *)(v24 + 32) = v70;
  v26 = (id)sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_37;
  while (1)
  {
    sub_24A01EFD0();
    sub_24A01EFA0();

LABEL_4:
    if ((v6 & 0x10000) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
      v27 = swift_allocObject();
      v28 = MEMORY[0x24BEE3F30];
      *(_OWORD *)(v27 + 16) = *(_OWORD *)(v23 + 2224);
      v29 = MEMORY[0x24BEE3F78];
      *(_QWORD *)(v27 + 56) = v28;
      *(_QWORD *)(v27 + 64) = v29;
      *(_WORD *)(v27 + 32) = v6;
      v30 = (id)sub_24A01F09C();
      MEMORY[0x24BD06E34]();
      if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24A01EFAC();
      sub_24A01EFD0();
      sub_24A01EFA0();

    }
    sub_249F9905C((uint64_t)v78, v15, &qword_2544CAD70);
    v31 = (void (**)(char *, uint64_t, uint64_t))v80;
    v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v78(v15, 1, v16) == 1)
    {
      sub_249F990A0(v15, &qword_2544CAD70);
    }
    else
    {
      v32 = v73;
      v31[4](v73, v15, v16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = *(_OWORD *)(v23 + 2224);
      v23 = (unint64_t)v31;
      v34 = sub_24A01EB74();
      v36 = v35;
      *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v33 + 64) = sub_249FE1970();
      *(_QWORD *)(v33 + 32) = v34;
      *(_QWORD *)(v33 + 40) = v36;
      v37 = (id)sub_24A01F09C();
      MEMORY[0x24BD06E34]();
      if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24A01EFAC();
      sub_24A01EFD0();
      sub_24A01EFA0();

      (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v16);
    }
    swift_bridgeObjectRetain();
    v38 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    v39 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v38);

    v26 = v72;
    objc_msgSend(v72, sel_setPredicate_, v39);

    v40 = *(void **)(v74 + 16);
    type metadata accessor for VUIndexTag();
    v41 = v40;
    v42 = (void *)v75;
    v43 = sub_24A01F198();
    if (v42)
    {

      v44 = MEMORY[0x24BEE4AF8];
LABEL_40:

      result = swift_bridgeObjectRelease();
      *v71 = v44;
      return result;
    }
    v6 = v43;

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      if (!v15)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        v44 = MEMORY[0x24BEE4AF8];
        v26 = v72;
        goto LABEL_40;
      }
    }
    else
    {
      v15 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v15)
        goto LABEL_39;
    }
    v70 = 0;
    v82 = MEMORY[0x24BEE4AF8];
    sub_249F8CD1C(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
      break;
    v45 = 0;
    v74 = v15;
    v75 = v6 & 0xC000000000000001;
    v44 = v82;
    v73 = (char *)v6;
    while (v15 != v45)
    {
      if (v75)
        v46 = (id)MEMORY[0x24BD071F4](v45, v6);
      else
        v46 = *(id *)(v6 + 8 * v45 + 32);
      v47 = v46;
      v48 = objc_msgSend(v46, sel_observation);
      if (!v48)
        goto LABEL_42;
      v49 = v48;
      v50 = objc_msgSend(v48, sel_mapping);

      if (v50)
      {
        v51 = (uint64_t)objc_msgSend(v50, sel_label);

      }
      else
      {
        v51 = -1;
      }
      v6 = v16;
      v52 = v81;
      *v81 = v51;
      v53 = objc_msgSend(v47, sel_observation);
      if (!v53)
        goto LABEL_43;
      v54 = v53;
      v16 = (uint64_t)v13;
      v55 = (unsigned __int16)objc_msgSend(v53, sel_client);

      *((_WORD *)v52 + 4) = v55;
      v56 = objc_msgSend(v47, sel_uuid);
      if (!v56)
        goto LABEL_44;
      v57 = v56;
      v58 = v79;
      sub_24A01EB98();

      v59 = v80;
      v60 = *(void (**)(uint64_t, char *, unint64_t))(v80 + 32);
      v61 = v16;
      v62 = v58;
      v13 = (char *)v16;
      v16 = v6;
      v60(v61, v62, v6);
      (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v59 + 56))(v13, 0, 1, v6);
      result = ((uint64_t (*)(char *, uint64_t, unint64_t))v78)(v13, 1, v6);
      v15 = v74;
      if ((_DWORD)result == 1)
        goto LABEL_45;
      v64 = (uint64_t)v81;
      v65 = *(int *)(v77 + 80);
      v60((uint64_t)v81 + *(int *)(v77 + 64), v13, v16);
      v66 = objc_msgSend(v47, sel_type);

      *(_BYTE *)(v64 + v65) = v66 == 0;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v82 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_249F8CD1C(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = v82;
      }
      v23 = *(_QWORD *)(v44 + 16);
      v68 = *(_QWORD *)(v44 + 24);
      v26 = (id)(v23 + 1);
      if (v23 >= v68 >> 1)
      {
        sub_249F8CD1C(v68 > 1, v23 + 1, 1);
        v44 = v82;
      }
      ++v45;
      *(_QWORD *)(v44 + 16) = v26;
      sub_249F98C10(v64, v44+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v23, &qword_2544CAC20);
      v6 = (unint64_t)v73;
      if (v15 == v45)
      {
        swift_bridgeObjectRelease();
        v26 = v72;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_37:
    sub_24A01EFAC();
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v80 + 56))(v16, 1, 1, v6);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_249FDA340@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t p_align;
  uint32_t *v32;
  uint32_t *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  void *v52;
  id v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  int v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  id v81;
  float v82;
  float v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;

  v86 = a9;
  v17 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v18 = (void *)sub_24A01EE44();
  v91 = objc_msgSend(v17, sel_initWithEntityName_, v18);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAF30);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A020920;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v20 = swift_allocObject();
  v21 = MEMORY[0x24BEE1768];
  v22 = MEMORY[0x24BEE17F0];
  *(_OWORD *)(v20 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v20 + 56) = v21;
  *(_QWORD *)(v20 + 64) = v22;
  *(_QWORD *)(v20 + 32) = a1;
  *(_QWORD *)(v19 + 32) = sub_24A01F09C();
  *(_QWORD *)(v19 + 40) = sub_24A01F09C();
  sub_24A01EFA0();
  v93 = v19;
  if ((a2 & 1) != 0)
  {
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
  }
  if ((a3 & 1) != 0)
  {
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
  }
  if ((a4 & 0x10000) != 0)
  {
    v23 = a5;
    if ((a5 & 0x100000000) != 0)
      goto LABEL_11;
LABEL_16:
    v25 = swift_allocObject();
    v26 = MEMORY[0x24BEE14E8];
    *(_OWORD *)(v25 + 16) = xmmword_24A0208B0;
    v27 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v25 + 56) = v26;
    *(_QWORD *)(v25 + 64) = v27;
    *(_DWORD *)(v25 + 32) = v23;
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
    if ((a6 & 0x100000000) != 0)
      goto LABEL_22;
    goto LABEL_19;
  }
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v24 + 64) = v22;
  *(_QWORD *)(v24 + 32) = (__int16)a4;
  sub_24A01F09C();
  MEMORY[0x24BD06E34]();
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24A01EFAC();
  sub_24A01EFD0();
  sub_24A01EFA0();
  v23 = a5;
  if ((a5 & 0x100000000) == 0)
    goto LABEL_16;
LABEL_11:
  if ((a6 & 0x100000000) == 0)
  {
LABEL_19:
    v28 = swift_allocObject();
    v29 = MEMORY[0x24BEE14E8];
    *(_OWORD *)(v28 + 16) = xmmword_24A0208B0;
    v30 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v28 + 56) = v29;
    *(_QWORD *)(v28 + 64) = v30;
    *(_DWORD *)(v28 + 32) = a6;
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24A01EFAC();
    sub_24A01EFD0();
    sub_24A01EFA0();
  }
LABEL_22:
  p_align = (unint64_t)&stru_251B6CFE8.align;
  v32 = &stru_251B6CFE8.align;
  v33 = &stru_251B6CFE8.align;
  if ((a7 & 1) == 0)
    goto LABEL_29;
  v34 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v35 = (void *)sub_24A01EE44();
  v36 = objc_msgSend(v34, sel_initWithEntityName_, v35);

  swift_bridgeObjectRetain();
  v37 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), (SEL)&VUIndexObservation__metaData.weak_ivar_lyt + 7, v37);

  objc_msgSend(v36, (SEL)&VUIndexTag__metaData.name, v38);
  v39 = (void *)sub_24A01EF70();
  objc_msgSend(v36, sel_setRelationshipKeyPathsForPrefetching_, v39);

  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24A0208F0;
  v41 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v42 = (void *)sub_24A01EE44();
  v43 = objc_msgSend(v41, sel_initWithKey_ascending_, v42, 0);

  *(_QWORD *)(v40 + 32) = v43;
  sub_24A01EFA0();
  sub_249F990DC(0, &qword_2544CAC48);
  v44 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setSortDescriptors_, v44);

  v45 = *(void **)(a8 + 16);
  type metadata accessor for VUIndexObservation();
  v46 = v45;
  v47 = sub_24A01F18C();
  if (v90)
  {

    v90 = 0;
    v32 = &stru_251B6CFE8.align;
    p_align = (unint64_t)&stru_251B6CFE8.align;
    goto LABEL_29;
  }
  v48 = v47;

  objc_msgSend(v36, sel_setFetchLimit_, 1);
  if (v48 >= 0)
    v49 = v48;
  else
    v49 = v48 + 1;
  objc_msgSend(v36, sel_setFetchOffset_, v49 >> 1, v86);
  v50 = *(id *)(a8 + 16);
  v51 = sub_24A01F198();

  p_align = 0x251B6D000;
  v90 = 0;
  if (v51 >> 62)
    goto LABEL_64;
  v78 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v78)
    {

      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    if ((v51 & 0xC000000000000001) != 0)
    {
      v79 = (id)MEMORY[0x24BD071F4](0, v51);
    }
    else
    {
      if (!*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_67:
        sub_24A01EFAC();
        goto LABEL_58;
      }
      v79 = *(id *)(v51 + 32);
    }
    v80 = v79;
    swift_bridgeObjectRelease();
    v81 = objc_msgSend(v80, sel_mapping);

    if (!v81)
      goto LABEL_59;
    objc_msgSend(v81, sel_density);
    v83 = v82;

    if (v83 <= -1.0)
      goto LABEL_59;
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_24A0208B0;
    v85 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE14E8];
    *(_QWORD *)(v84 + 64) = v85;
    *(float *)(v84 + 32) = v83;
    sub_24A01F09C();
    MEMORY[0x24BD06E34]();
    if (*(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_67;
LABEL_58:
    sub_24A01EFD0();
    sub_24A01EFA0();
LABEL_59:

LABEL_61:
    v32 = (_DWORD *)(&stru_251B6CFE8 + 24);
LABEL_29:
    v51 = v93;
    swift_bridgeObjectRetain();
    v52 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    v53 = objc_msgSend((id)objc_opt_self(), *(SEL *)(p_align + 3344), v52);

    v54 = (const char *)*((_QWORD *)v32 + 438);
    v36 = v91;
    objc_msgSend(v91, v54, v53);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_24A0208C0;
    v56 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v55 + 32) = 0x696669746E656469;
    *(_QWORD *)(v55 + 40) = 0xEA00000000007265;
    *(_QWORD *)(v55 + 88) = v56;
    *(_QWORD *)(v55 + 56) = v56;
    *(_QWORD *)(v55 + 64) = 0x7974696C617571;
    *(_QWORD *)(v55 + 72) = 0xE700000000000000;
    v57 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    objc_msgSend(v91, sel_setPropertiesToFetch_, v57);

    v58 = *(_QWORD *)(a10 + 16);
    if (v58)
    {
      sub_24A01F360();
      v59 = a10 + 40;
      do
      {
        v60 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
        swift_bridgeObjectRetain();
        v61 = (void *)sub_24A01EE44();
        swift_bridgeObjectRelease();
        objc_msgSend(v60, *((SEL *)v33 + 430), v61, 0);

        sub_24A01F33C();
        sub_24A01F36C();
        sub_24A01F378();
        sub_24A01F348();
        v59 += 16;
        --v58;
      }
      while (v58);
      v36 = v91;
    }
    sub_249F990DC(0, &qword_2544CAC48);
    v62 = (void *)sub_24A01EF70();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setSortDescriptors_, v62);

    objc_msgSend(v36, sel_setFetchLimit_, a11);
    objc_msgSend(v36, sel_setFetchOffset_, a12);
    v63 = *(void **)(a8 + 16);
    type metadata accessor for VUIndexObservation();
    v64 = v63;
    v65 = sub_24A01F198();
    v33 = (uint32_t *)v90;
    if (v90)
    {

      return swift_bridgeObjectRelease();
    }
    p_align = v65;

    if (p_align >> 62)
    {
      swift_bridgeObjectRetain();
      v67 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = *(_QWORD *)((p_align & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v90 = 0;
    if (!v67)
    {

      v69 = MEMORY[0x24BEE4AF8];
      goto LABEL_48;
    }
    v92 = MEMORY[0x24BEE4AF8];
    sub_249F8CD48(0, v67 & ~(v67 >> 63), 0);
    if ((v67 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    v78 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  v68 = 0;
  v69 = v92;
  do
  {
    if ((p_align & 0xC000000000000001) != 0)
      v70 = (id)MEMORY[0x24BD071F4](v68, p_align);
    else
      v70 = *(id *)(p_align + 8 * v68 + 32);
    v71 = v70;
    v72 = objc_msgSend(v70, sel_identifier, v86);
    objc_msgSend(v71, sel_quality);
    v74 = v73;

    v76 = *(_QWORD *)(v92 + 16);
    v75 = *(_QWORD *)(v92 + 24);
    if (v76 >= v75 >> 1)
      sub_249F8CD48(v75 > 1, v76 + 1, 1);
    ++v68;
    *(_QWORD *)(v92 + 16) = v76 + 1;
    v77 = v92 + 16 * v76;
    *(_QWORD *)(v77 + 32) = v72;
    *(_DWORD *)(v77 + 40) = v74;
  }
  while (v67 != v68);

LABEL_48:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v86 = v69;
  return result;
}

void sub_249FDAFB8(_QWORD *a1@<X0>, char a2@<W1>, id a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, unint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, char a20,uint64_t a21,char a22)
{
  uint64_t v22;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  void *v57;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(_BYTE *, uint64_t, uint64_t);
  void *v63;
  _BYTE *v64;
  void *v65;
  _BYTE *v66;
  unsigned __int8 v67;
  double v68;
  double v69;
  uint64_t v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  id v80;
  void *v81;
  unint64_t v82;
  id v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  _BYTE *v88;
  uint64_t v89;
  _BOOL4 v91;
  _BYTE v92[12];
  unsigned int v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  int v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  __int128 v104;
  unint64_t v105;

  v101 = a7;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v103 = &v92[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v32);
  v102 = &v92[-v34];
  if ((a2 & 1) == 0)
  {
    v99 = a8;
    v35 = objc_allocWithZone(MEMORY[0x24BDBB678]);
    v36 = (void *)sub_24A01EE44();
    v37 = objc_msgSend(v35, sel_initWithEntityName_, v36);

    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v38 = swift_allocObject();
    v39 = MEMORY[0x24BEE1768];
    v40 = MEMORY[0x24BEE17F0];
    *(_OWORD *)(v38 + 16) = xmmword_24A0208C0;
    *(_QWORD *)(v38 + 56) = v39;
    *(_QWORD *)(v38 + 64) = v40;
    *(_QWORD *)(v38 + 32) = a1;
    v41 = MEMORY[0x24BEE3F78];
    *(_QWORD *)(v38 + 96) = MEMORY[0x24BEE3F30];
    *(_QWORD *)(v38 + 104) = v41;
    *(_WORD *)(v38 + 72) = (_WORD)a3;
    v42 = (void *)sub_24A01F09C();
    objc_msgSend(v37, sel_setPredicate_, v42);

    objc_msgSend(v37, sel_setFetchLimit_, 1);
    v43 = *(void **)(a4 + 16);
    type metadata accessor for VUIndexObservation();
    v44 = v43;
    v45 = sub_24A01F198();
    if (v22)
    {

      return;
    }
    v55 = v45;

    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      v84 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      a8 = v99;
      if (v84)
        goto LABEL_13;
    }
    else
    {
      a8 = v99;
      if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        v97 = a9;
        v100 = (int)a3;
        if ((v55 & 0xC000000000000001) != 0)
        {
          v56 = (id)MEMORY[0x24BD071F4](0, v55);
        }
        else
        {
          if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_68;
          }
          v56 = *(id *)(v55 + 32);
        }
        a3 = v56;

        swift_bridgeObjectRelease();
LABEL_17:
        v98 = a4;
        v95 = a8 >> 60;
        if (a8 >> 60 == 15)
          v57 = 0;
        else
          v57 = (void *)sub_24A01EAF0();
        v99 = a14;
        objc_msgSend(a3, sel_setEmbedding_, v57);

        v94 = a11 >> 60;
        if (a11 >> 60 == 15)
          v58 = 0;
        else
          v58 = (void *)sub_24A01EAF0();
        objc_msgSend(a3, sel_setContextualEmbedding_, v58);

        v96 = a1;
        objc_msgSend(a3, sel_setIdentifier_, a1);
        v101 = a12;
        v93 = a12;
        objc_msgSend(a3, sel_setType_);
        v59 = v102;
        sub_249F9905C(a13, (uint64_t)v102, &qword_2544CAD70);
        v60 = sub_24A01EBA4();
        v61 = *(_QWORD *)(v60 - 8);
        v62 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48);
        v63 = 0;
        if (v62(v59, 1, v60) != 1)
        {
          v63 = (void *)sub_24A01EB80();
          (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v59, v60);
        }
        LODWORD(v104) = a18;
        objc_msgSend(a3, sel_setMoment_, v63);

        v64 = v103;
        sub_249F9905C(v99, (uint64_t)v103, &qword_2544CAD70);
        if (v62(v64, 1, v60) == 1)
        {
          v65 = 0;
        }
        else
        {
          v66 = v64;
          v65 = (void *)sub_24A01EB80();
          (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v66, v60);
        }
        objc_msgSend(a3, sel_setAsset_, v65);

        if (a15 == 3)
          v67 = 2;
        else
          v67 = a15;
        objc_msgSend(a3, sel_setSource_, v67);
        LODWORD(v68) = a16;
        if ((a16 & 0x100000000) != 0)
          *(float *)&v68 = 1.0;
        objc_msgSend(a3, sel_setConfidence_, v68);
        LODWORD(v69) = a17;
        if ((a17 & 0x100000000) != 0)
          *(float *)&v69 = 1.0;
        objc_msgSend(a3, sel_setQuality_, v69);
        objc_msgSend(a3, sel_setIsPrimary_, v104 & 1);
        objc_msgSend(a3, sel_setClient_, (__int16)v100);
        type metadata accessor for VUIndexMapping();
        v70 = v98;
        v71 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v98 + 16));
        objc_msgSend(a3, sel_setMapping_, v71);

        v72 = objc_allocWithZone(MEMORY[0x24BDBB678]);
        v73 = (void *)sub_24A01EE44();
        v37 = objc_msgSend(v72, sel_initWithEntityName_, v73);

        sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
        v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_24A0208B0;
        v75 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v74 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v74 + 64) = v75;
        *(_QWORD *)(v74 + 32) = v101;
        v76 = (void *)sub_24A01F09C();
        objc_msgSend(v37, sel_setPredicate_, v76);

        v77 = *(void **)(v70 + 16);
        type metadata accessor for VUIndexSubset();
        v78 = v77;
        v79 = sub_24A01F198();
        if (v22)
        {

LABEL_37:
          return;
        }
        v55 = v79;

        if (v55 >> 62)
        {
          swift_bridgeObjectRetain();
          v89 = sub_24A01F3CC();
          swift_bridgeObjectRelease();
          a9 = v96;
          if (v89)
          {
LABEL_40:
            if ((v55 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              v80 = *(id *)(v55 + 32);
              goto LABEL_43;
            }
LABEL_68:
            v80 = (id)MEMORY[0x24BD071F4](0, v55);
LABEL_43:
            v81 = v80;
            v82 = v94;
            swift_bridgeObjectRelease();
            v83 = v81;
LABEL_51:
            v91 = v95 < 0xF || v82 > 0xE;
            if ((a20 & 1) == 0 && v91)
              objc_msgSend(v83, sel_setEmbeddingRevision_, a19);
            if (v82 <= 0xE && (a22 & 1) == 0)
              objc_msgSend(v83, sel_setContextualEmbeddingRevision_, a21);
            if ((v104 & 1) != 0)
              objc_msgSend(v83, sel_setStaleObservations_, 1);

            *v97 = a9;
            return;
          }
        }
        else
        {
          a9 = v96;
          if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_40;
        }
        swift_bridgeObjectRelease();
        v83 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), (SEL)&selRef_expressionForFunction_arguments_, *(_QWORD *)(v98 + 16));
        objc_msgSend(v83, sel_setType_, v93);
        v82 = v94;
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    v85 = sub_24A01ED90();
    v86 = sub_24A01F0E4();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v87 = 134217984;
      v105 = (unint64_t)a1;
      sub_24A01F1F8();
      _os_log_impl(&dword_249F70000, v85, v86, "Unable to update embedding: no existing embedding available for %ld", v87, 0xCu);
      MEMORY[0x24BD07950](v87, -1, -1);
    }

    sub_249F74AF4();
    swift_allocError();
    *v88 = 2;
    swift_willThrow();
    goto LABEL_37;
  }
  v100 = (int)a3;
  v97 = a9;
  if ((a6 & 1) == 0)
  {
LABEL_10:
    type metadata accessor for VUIndexObservation();
    a3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a4 + 16));
    a1 = a5;
    goto LABEL_17;
  }
  v99 = a8;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v104 = xmmword_24A0208B0;
  while (1)
  {
    do
    {
      v105 = 0;
      MEMORY[0x24BD07968](&v105, 8);
    }
    while (((0x7FFFFFFFFFFFFFFELL * v105) & 0xFFFFFFFFFFFFFFFCLL) == 0);
    a5 = (_QWORD *)(((v105 * (unsigned __int128)0x7FFFFFFFFFFFFFFEuLL) >> 64) + 1);
    v46 = objc_allocWithZone(MEMORY[0x24BDBB678]);
    v47 = (void *)sub_24A01EE44();
    v48 = objc_msgSend(v46, sel_initWithEntityName_, v47);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v104;
    *(_QWORD *)(v49 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v49 + 64) = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v49 + 32) = a5;
    v50 = (void *)sub_24A01F09C();
    objc_msgSend(v48, sel_setPredicate_, v50);

    objc_msgSend(v48, sel_setFetchLimit_, 1);
    v51 = *(void **)(a4 + 16);
    type metadata accessor for VUIndexObservation();
    v52 = v51;
    v53 = sub_24A01F18C();
    if (v22)
      break;
    v54 = v53;

    if (!v54)
    {
      a8 = v99;
      goto LABEL_10;
    }
  }

}

void sub_249FDBA58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v11 = (void *)sub_24A01EE44();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v13 + 16) = xmmword_24A0208B0;
  v15 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a1;
  v16 = (void *)sub_24A01F09C();
  objc_msgSend(v12, sel_setPredicate_, v16);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0208C0;
  v18 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v17 + 32) = 0x6E69646465626D65;
  *(_QWORD *)(v17 + 40) = 0xE900000000000067;
  *(_QWORD *)(v17 + 88) = v18;
  *(_QWORD *)(v17 + 56) = v18;
  *(_QWORD *)(v17 + 64) = 0x7465737361;
  *(_QWORD *)(v17 + 72) = 0xE500000000000000;
  v19 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPropertiesToFetch_, v19);

  objc_msgSend(v12, sel_setFetchLimit_, 1);
  v20 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  v21 = v20;
  v22 = sub_24A01F198();
  if (v3)
  {

    *(_OWORD *)a3 = xmmword_24A020F20;
    v23 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBC0) + 48);
    v24 = sub_24A01EBA4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    return;
  }
  v25 = v22;

  if (!(v25 >> 62))
  {
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_16:

    swift_bridgeObjectRelease();
    *(_OWORD *)a3 = xmmword_24A020F20;
    v39 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBC0) + 48);
    v40 = sub_24A01EBA4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
    return;
  }
  swift_bridgeObjectRetain();
  v38 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v38)
    goto LABEL_16;
LABEL_5:
  if ((v25 & 0xC000000000000001) != 0)
  {
    v26 = (id)MEMORY[0x24BD071F4](0, v25);
  }
  else
  {
    if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v26 = *(id *)(v25 + 32);
  }
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v27, sel_embedding);
  if (v28)
  {
    v29 = v28;
    v30 = sub_24A01EAFC();
    v32 = v31;

  }
  else
  {
    v30 = 0;
    v32 = 0xF000000000000000;
  }
  *(_QWORD *)a3 = v30;
  *(_QWORD *)(a3 + 8) = v32;
  v33 = objc_msgSend(v27, sel_asset);
  if (v33)
  {
    v34 = v33;
    sub_24A01EB98();

    v35 = sub_24A01EBA4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v9, 0, 1, v35);
  }
  else
  {

    v36 = sub_24A01EBA4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
  }
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBC0);
  sub_249F98C10((uint64_t)v9, a3 + *(int *)(v37 + 48), &qword_2544CAD70);
}

void sub_249FDBEB8(_QWORD *a1, char a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;

  v4 = v3;
  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A0208D0;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  v12 = sub_249FCA8A0((void (*)(char *, char *))sub_249FDC06C, 0, v9, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v11);
  *(_QWORD *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAE88);
  *(_QWORD *)(v8 + 64) = sub_249F98C68(&qword_2578FFB70, &qword_2544CAE88, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v8 + 32) = v12;
  v13 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v8 + 96) = MEMORY[0x24BEE4260];
  *(_QWORD *)(v8 + 104) = v13;
  v14 = MEMORY[0x24BEE3F30];
  *(_BYTE *)(v8 + 72) = a2;
  v15 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v8 + 136) = v14;
  *(_QWORD *)(v8 + 144) = v15;
  *(_WORD *)(v8 + 112) = a3;
  v17 = (void *)sub_24A01F09C();
  v16 = *(id *)(v4 + 16);
  sub_24A01F180();

}

uint64_t sub_249FDC06C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A01EB74();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_249FDC0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t p_align;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  unint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  void *i;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  int64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;

  v5 = 0x24BDBB000uLL;
  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  p_align = (uint64_t)&stru_251B6CFE8.align;
  v9 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  objc_msgSend(v9, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC70);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208C0;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 32) = 1701869940;
  *(_QWORD *)(v10 + 40) = 0xE400000000000000;
  *(_QWORD *)(v10 + 88) = v11;
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = 0x72616D6972507369;
  *(_QWORD *)(v10 + 72) = 0xE900000000000079;
  v12 = (void *)sub_24A01EF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setPropertiesToFetch_, v12);

  v78 = MEMORY[0x24BEE4B08];
  v77 = MEMORY[0x24BEE4B08];
  v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  v14 = v13;
  v15 = sub_24A01F198();
  if (v2)
  {

    return;
  }
  v16 = v15;
  v75 = a2;

  if (v16 >> 62)
    goto LABEL_22;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = v9; v17; i = v9)
  {
    p_align = 4;
    while (1)
    {
      v18 = (v16 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24BD071F4](p_align - 4, v16)
          : *(id *)(v16 + 8 * p_align);
      v19 = v18;
      v9 = (id)(p_align - 3);
      if (__OFADD__(p_align - 4, 1))
        break;
      if ((objc_msgSend(v18, sel_isPrimary) & 1) != 0)
      {
        v20 = (uint64_t)objc_msgSend(v19, sel_type);
        if ((v20 & 0x80000000) != 0 || v20 >= 0x100)
          goto LABEL_93;
        sub_249F8C888(&v76, v20);
      }
      v21 = objc_msgSend(v19, sel_tags);
      if (v21)
      {
        v22 = v21;
        v5 = (uint64_t)objc_msgSend(v21, sel_count);

        if (v5 >= 1)
        {
          v23 = (uint64_t)objc_msgSend(v19, sel_type);
          if ((v23 & 0x80000000) != 0 || v23 >= 0x100)
            goto LABEL_93;
          sub_249F8C888(&v76, v23);
        }
      }
      objc_msgSend(*(id *)(v75 + 16), sel_deleteObject_, v19);

      ++p_align;
      if (v9 == (id)v17)
      {
        swift_bridgeObjectRelease();
        v24 = v78;
        v5 = 0x24BDBB000;
        p_align = 0x251B6D000;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    v17 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x24BEE4B08];
LABEL_24:
  v25 = 0;
  v71 = v24 + 56;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & *(_QWORD *)(v24 + 56);
  v73 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v31 = v30 | (v25 << 6);
      goto LABEL_42;
    }
    v32 = __OFADD__(v25++, 1);
    if (v32)
      goto LABEL_88;
    if (v25 >= v73)
      break;
    v33 = *(_QWORD *)(v71 + 8 * v25);
    if (!v33)
    {
      v34 = v25 + 1;
      if (v25 + 1 >= v73)
        break;
      v33 = *(_QWORD *)(v71 + 8 * v34);
      if (!v33)
      {
        v34 = v25 + 2;
        if (v25 + 2 >= v73)
          break;
        v33 = *(_QWORD *)(v71 + 8 * v34);
        if (!v33)
        {
          v34 = v25 + 3;
          if (v25 + 3 >= v73)
            break;
          v33 = *(_QWORD *)(v71 + 8 * v34);
          if (!v33)
          {
            while (1)
            {
              v25 = v34 + 1;
              if (__OFADD__(v34, 1))
                goto LABEL_91;
              if (v25 >= v73)
                goto LABEL_55;
              v33 = *(_QWORD *)(v71 + 8 * v25);
              ++v34;
              if (v33)
                goto LABEL_41;
            }
          }
        }
      }
      v25 = v34;
    }
LABEL_41:
    v28 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v25 << 6);
LABEL_42:
    v35 = v24;
    v36 = *(unsigned __int8 *)(*(_QWORD *)(v24 + 48) + v31);
    v37 = objc_allocWithZone(*(Class *)(v5 + 1656));
    v38 = (void *)sub_24A01EE44();
    v39 = objc_msgSend(v37, *(SEL *)(p_align + 3496), v38);

    sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_24A0208B0;
    *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v40 + 64) = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v40 + 32) = v36;
    v41 = (void *)sub_24A01F09C();
    objc_msgSend(v39, sel_setPredicate_, v41);

    v42 = *(void **)(v75 + 16);
    type metadata accessor for VUIndexSubset();
    v43 = v42;
    v44 = sub_24A01F198();

    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      if (!v47)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v75 + 16));
        objc_msgSend(v29, sel_setType_, v36);
        goto LABEL_28;
      }
    }
    else if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_27;
    }
    if ((v44 & 0xC000000000000001) != 0)
    {
      v45 = (id)MEMORY[0x24BD071F4](0, v44);
    }
    else
    {
      if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      v45 = *(id *)(v44 + 32);
    }
    v46 = v45;
    swift_bridgeObjectRelease();
    v29 = v46;
LABEL_28:
    objc_msgSend(v29, sel_setStaleObservations_, 1);

    v5 = 0x24BDBB000uLL;
    p_align = (uint64_t)&stru_251B6CFE8.align;
    v24 = v35;
  }
LABEL_55:
  swift_release();
  v48 = 0;
  v49 = v77;
  v72 = v77 + 56;
  v50 = 1 << *(_BYTE *)(v77 + 32);
  v51 = -1;
  if (v50 < 64)
    v51 = ~(-1 << v50);
  v52 = v51 & *(_QWORD *)(v77 + 56);
  v74 = (unint64_t)(v50 + 63) >> 6;
  while (2)
  {
    if (v52)
    {
      v54 = __clz(__rbit64(v52));
      v52 &= v52 - 1;
      v55 = v54 | (v48 << 6);
      goto LABEL_73;
    }
    v32 = __OFADD__(v48++, 1);
    if (v32)
      goto LABEL_90;
    if (v48 >= v74)
    {
LABEL_86:

      swift_release();
      return;
    }
    v56 = *(_QWORD *)(v72 + 8 * v48);
    if (v56)
    {
LABEL_72:
      v52 = (v56 - 1) & v56;
      v55 = __clz(__rbit64(v56)) + (v48 << 6);
LABEL_73:
      v58 = *(unsigned __int8 *)(*(_QWORD *)(v49 + 48) + v55);
      v59 = objc_allocWithZone(*(Class *)(v5 + 1656));
      v60 = (void *)sub_24A01EE44();
      v61 = objc_msgSend(v59, *(SEL *)(p_align + 3496), v60);

      sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_24A0208B0;
      *(_QWORD *)(v62 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v62 + 64) = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v62 + 32) = v58;
      v63 = (void *)sub_24A01F09C();
      objc_msgSend(v61, sel_setPredicate_, v63);

      v64 = *(void **)(v75 + 16);
      type metadata accessor for VUIndexSubset();
      v65 = v64;
      v66 = sub_24A01F198();

      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        v69 = sub_24A01F3CC();
        swift_bridgeObjectRelease();
        if (v69)
          goto LABEL_75;
      }
      else if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_75:
        if ((v66 & 0xC000000000000001) != 0)
        {
          v67 = (id)MEMORY[0x24BD071F4](0, v66);
        }
        else
        {
          if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_89;
          v67 = *(id *)(v66 + 32);
        }
        v68 = v67;
        swift_bridgeObjectRelease();
        v53 = v68;
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      v53 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v75 + 16));
      objc_msgSend(v53, sel_setType_, v58);
LABEL_59:
      objc_msgSend(v53, sel_setStaleTags_, 1);

      v5 = 0x24BDBB000uLL;
      p_align = (uint64_t)&stru_251B6CFE8.align;
      continue;
    }
    break;
  }
  v57 = v48 + 1;
  if (v48 + 1 >= v74)
    goto LABEL_86;
  v56 = *(_QWORD *)(v72 + 8 * v57);
  if (v56)
    goto LABEL_71;
  v57 = v48 + 2;
  if (v48 + 2 >= v74)
    goto LABEL_86;
  v56 = *(_QWORD *)(v72 + 8 * v57);
  if (v56)
    goto LABEL_71;
  v57 = v48 + 3;
  if (v48 + 3 >= v74)
    goto LABEL_86;
  v56 = *(_QWORD *)(v72 + 8 * v57);
  if (v56)
  {
LABEL_71:
    v48 = v57;
    goto LABEL_72;
  }
  while (1)
  {
    v48 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    if (v48 >= v74)
      goto LABEL_86;
    v56 = *(_QWORD *)(v72 + 8 * v48);
    ++v57;
    if (v56)
      goto LABEL_72;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  sub_24A01F3B4();
  __break(1u);
}

void sub_249FDCB1C(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v63 - v8;
  v10 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v11 = (void *)sub_24A01EE44();
  v12 = (uint64_t)objc_msgSend(v10, sel_initWithEntityName_, v11);

  v13 = sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24A0208C0;
  v16 = sub_24A01EB74();
  v18 = v17;
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 64) = sub_249FE1970();
  v19 = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  v20 = v13;
  v21 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v15 + 96) = v19;
  *(_QWORD *)(v15 + 104) = v21;
  *(_WORD *)(v15 + 72) = a2;
  v22 = (void *)sub_24A01F09C();
  objc_msgSend((id)v12, sel_setPredicate_, v22);

  v23 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexTag();
  v24 = v23;
  v25 = v73;
  v26 = sub_24A01F198();
  v27 = v25;

  if (v25)
  {

    return;
  }
  v66 = v14;
  v67 = v20;
  v73 = a3;
  v68 = v26;
  if (v26 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v28 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v28)
      goto LABEL_5;
LABEL_37:

    swift_bridgeObjectRelease();
    return;
  }
  v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v28)
    goto LABEL_37;
LABEL_5:
  v64 = v27;
  v65 = (id)v12;
  v29 = v68;
  v71 = v28;
  v72 = v68 & 0xC000000000000001;
  v12 = 4;
  do
  {
    v27 = v12 - 4;
    if (v72)
      v31 = (id)MEMORY[0x24BD071F4](v12 - 4, v29);
    else
      v31 = *(id *)(v29 + 8 * v12);
    v32 = v31;
    v33 = v12 - 3;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v34 = objc_msgSend(v31, sel_observation);
    v35 = v34;
    if (v34)
    {
      v70 = objc_msgSend(v34, sel_type);

    }
    else
    {
      v70 = 0;
    }
    v36 = objc_msgSend(v32, sel_observation);
    if (v36)
    {
      v37 = v36;
      v38 = objc_msgSend(v36, sel_asset);

      if (v38)
      {
        v39 = (uint64_t)v69;
        sub_24A01EB98();

        v40 = sub_24A01EBA4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
      }
      else
      {
        v40 = sub_24A01EBA4();
        v39 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v69, 1, 1, v40);
      }
      sub_249F98C10(v39, (uint64_t)v9, &qword_2544CAD70);
      sub_24A01EBA4();
      v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v9, 1, v40);
      v29 = v68;
      if (v42 != 1)
      {
        sub_249F990A0((uint64_t)v9, &qword_2544CAD70);
        v30 = *(id *)(v73 + 16);
        objc_msgSend(v30, sel_deleteObject_, v32);
        goto LABEL_7;
      }
    }
    else
    {
      v41 = sub_24A01EBA4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v9, 1, 1, v41);
    }
    sub_249F990A0((uint64_t)v9, &qword_2544CAD70);
    v43 = *(id *)(v73 + 16);
    v44 = objc_msgSend(v32, sel_observation);
    if (!v44)
      goto LABEL_43;
    v30 = v44;
    objc_msgSend(v43, sel_deleteObject_, v44);

LABEL_7:
    ++v12;
  }
  while (v33 != v71);
  swift_bridgeObjectRelease();
  if (!v35)
  {

    return;
  }
  v45 = v65;
  v46 = v70;
  if ((v70 & 0x80000000) == 0)
  {
    v47 = v73;
    if (v70 < 0x100)
    {
      v48 = objc_allocWithZone(MEMORY[0x24BDBB678]);
      v49 = (void *)sub_24A01EE44();
      v50 = objc_msgSend(v48, sel_initWithEntityName_, v49);

      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_24A0208B0;
      v52 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v51 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v51 + 64) = v52;
      *(_QWORD *)(v51 + 32) = (unsigned __int16)v46;
      v53 = (void *)sub_24A01F09C();
      objc_msgSend(v50, sel_setPredicate_, v53);

      v54 = *(void **)(v47 + 16);
      type metadata accessor for VUIndexSubset();
      v55 = v54;
      v56 = v64;
      v57 = sub_24A01F198();
      if (v56)
      {

        return;
      }
      v58 = v57;

      if (!(v58 >> 62))
      {
        if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_31;
LABEL_39:
        swift_bridgeObjectRelease();
        v61 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v47 + 16));
        objc_msgSend(v61, sel_setType_, v46);
LABEL_40:
        objc_msgSend(v61, sel_setStaleTags_, 1);

        return;
      }
      swift_bridgeObjectRetain();
      v62 = sub_24A01F3CC();
      swift_bridgeObjectRelease();
      if (!v62)
        goto LABEL_39;
LABEL_31:
      if ((v58 & 0xC000000000000001) != 0)
      {
        v59 = (id)MEMORY[0x24BD071F4](0, v58);
        goto LABEL_34;
      }
      if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v59 = *(id *)(v58 + 32);
LABEL_34:
        v60 = v59;
        swift_bridgeObjectRelease();
        v61 = v60;
        goto LABEL_40;
      }
      __break(1u);
LABEL_43:
      __break(1u);
    }
  }
  sub_24A01F3B4();
  __break(1u);
}

unsigned __int16 *sub_249FDD288@<X0>(unsigned __int16 *result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = *result;
  if (v2 >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_249FDD2A0(uint64_t a1, _QWORD *a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t p_align;
  char *v38;
  char *v39;
  void *v40;
  uint32_t *v41;
  char *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _BYTE *v47;
  int v48;
  uint32_t *v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  char v66;
  void (*v67)(char *, uint64_t);
  unsigned int v68;
  unsigned int v69;
  id v70;
  void *v71;
  _QWORD *v72;
  id v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  id v100;

  v96 = a5;
  v97 = a4;
  v99 = a3;
  v98 = sub_24A01EBA4();
  v93 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v90 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFBE0);
  MEMORY[0x24BDAC7A8](v92);
  v94 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v91 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v83 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v83 - v15;
  v17 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v18 = (void *)sub_24A01EE44();
  v19 = objc_msgSend(v17, sel_initWithEntityName_, v18);

  v20 = sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v22 = swift_allocObject();
  v23 = MEMORY[0x24BEE1768];
  v95 = xmmword_24A0208B0;
  *(_OWORD *)(v22 + 16) = xmmword_24A0208B0;
  v24 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = v24;
  *(_QWORD *)(v22 + 32) = a1;
  v25 = (void *)sub_24A01F09C();
  objc_msgSend(v19, sel_setPredicate_, v25);

  v26 = (void *)sub_24A01EF70();
  objc_msgSend(v19, sel_setRelationshipKeyPathsForPrefetching_, v26);

  objc_msgSend(v19, sel_setFetchLimit_, 1);
  v27 = (void *)a2[2];
  type metadata accessor for VUIndexObservation();
  v28 = v27;
  v29 = v100;
  v30 = sub_24A01F198();
  v100 = v29;
  if (v29)
  {

    return;
  }
  v31 = v30;
  v88 = a2;
  v89 = v14;
  v84 = v16;
  v85 = v21;
  v86 = v20;
  v87 = v19;
  v32 = v98;

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = v32;
  v35 = v100;
  v36 = v89;
  p_align = v99;
  if (v33)
  {
    if ((v31 & 0xC000000000000001) != 0)
    {
      v38 = (char *)MEMORY[0x24BD071F4](0, v31);
    }
    else
    {
      if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_44;
      }
      v38 = (char *)*(id *)(v31 + 32);
    }
    v39 = v38;
    swift_bridgeObjectRelease();
    v40 = (void *)sub_249FDDD6C();
    v41 = (_DWORD *)(&stru_251B6CFE8 + 24);
    v42 = v39;
    if (!v40)
    {
      p_align = p_align;
      goto LABEL_16;
    }
    v43 = v40;
    if (p_align == 1)
    {

      p_align = 1;
LABEL_16:
      type metadata accessor for VUIndexTag();
      v34 = (uint64_t)v88;
      v43 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v88[2]);
      objc_msgSend(v43, sel_setObservation_, v39);
      objc_msgSend(v43, sel_setResolved_, 0);

      LOBYTE(v48) = v96;
      v49 = (_DWORD *)(&stru_251B6CFE8 + 24);
      v50 = p_align;
      goto LABEL_31;
    }
    v99 = p_align;
    v51 = objc_msgSend(v40, sel_uuid);
    v98 = (uint64_t)v39;
    if (v51)
    {
      v52 = v51;
      v53 = (uint64_t)v84;
      sub_24A01EB98();

      v54 = v93;
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
      v55(v53, 0, 1, v34);
    }
    else
    {
      v54 = v93;
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
      v53 = (uint64_t)v84;
      v55((uint64_t)v84, 1, 1, v34);
    }
    v56 = v92;
    (*(void (**)(id, uint64_t, uint64_t))(v54 + 16))(v36, v97, v34);
    v55((uint64_t)v36, 0, 1, v34);
    v57 = v94;
    v58 = v94 + *(int *)(v56 + 48);
    sub_249F9905C(v53, v94, &qword_2544CAD70);
    sub_249F9905C((uint64_t)v36, v58, &qword_2544CAD70);
    v59 = v53;
    v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (v60(v57, 1, v34) == 1)
    {
      sub_249F990A0((uint64_t)v36, &qword_2544CAD70);
      sub_249F990A0(v59, &qword_2544CAD70);
      v61 = v60(v58, 1, v34);
      v42 = (char *)v98;
      v48 = v96;
      v49 = (_DWORD *)(&stru_251B6CFE8 + 24);
      v35 = v100;
      v41 = (_DWORD *)(&stru_251B6CFE8 + 24);
      if (v61 == 1)
      {
        sub_249F990A0(v94, &qword_2544CAD70);
        v34 = (uint64_t)v88;
LABEL_27:
        v68 = objc_msgSend(v43, *((SEL *)v41 + 406));
        v50 = v99;
        if (v68 == v99)
        {
          v69 = objc_msgSend(v43, sel_isPrimary);
          v50 = v99;
          if (((v69 ^ v48) & 1) == 0)
          {
            v36 = v43;
            v70 = v87;
LABEL_47:

            return;
          }
        }
LABEL_31:
        p_align = (uint64_t)&stru_251B6CFE8.align;
        objc_msgSend(v43, sel_setType_, v50);
        v71 = (void *)sub_24A01EB80();
        objc_msgSend(v43, sel_setUuid_, v71);

        objc_msgSend(v43, sel_setIsPrimary_, v48 & 1);
        v72 = objc_msgSend(v42, *((SEL *)v41 + 406));
        if ((v72 & 0x80000000) != 0 || (a2 = v72, v100 = v43, v72 >= 0x100))
        {
LABEL_50:
          sub_24A01F3B4();
          __break(1u);
          return;
        }
        v14 = v42;
        v73 = objc_allocWithZone(MEMORY[0x24BDBB678]);
        v74 = (void *)sub_24A01EE44();
        v36 = objc_msgSend(v73, *((SEL *)v49 + 437), v74);

        v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = v95;
        *(_QWORD *)(v75 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v75 + 64) = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v75 + 32) = (unsigned __int16)a2;
        v76 = (void *)sub_24A01F09C();
        objc_msgSend(v36, sel_setPredicate_, v76);

        v77 = *(void **)(v34 + 16);
        type metadata accessor for VUIndexSubset();
        v78 = v77;
        v79 = sub_24A01F198();
        if (v35)
        {

          return;
        }
        v33 = v79;

        if (!(v33 >> 62))
        {
          if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_37:
            if ((v33 & 0xC000000000000001) != 0)
            {
              v81 = (id)MEMORY[0x24BD071F4](0, v33);
              v80 = v100;
              goto LABEL_40;
            }
            v80 = v100;
            if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v81 = *(id *)(v33 + 32);
LABEL_40:
              swift_bridgeObjectRelease();
              v42 = (char *)v81;
LABEL_46:
              objc_msgSend(v42, sel_setStaleTags_, 1);

              v70 = v42;
              goto LABEL_47;
            }
            __break(1u);
            goto LABEL_50;
          }
LABEL_45:
          swift_bridgeObjectRelease();
          v42 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v34 + 16));
          objc_msgSend(v42, *(SEL *)(p_align + 3632), a2);
          v80 = v100;
          goto LABEL_46;
        }
LABEL_44:
        swift_bridgeObjectRetain();
        v82 = sub_24A01F3CC();
        swift_bridgeObjectRelease();
        if (v82)
          goto LABEL_37;
        goto LABEL_45;
      }
    }
    else
    {
      v62 = v91;
      sub_249F9905C(v57, v91, &qword_2544CAD70);
      v63 = v60(v58, 1, v34);
      v35 = v100;
      v41 = &stru_251B6CFE8.align;
      if (v63 != 1)
      {
        v64 = v93;
        v65 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v90, v58, v34);
        sub_249FA2B24(&qword_2578FF760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v66 = sub_24A01EE38();
        v67 = *(void (**)(char *, uint64_t))(v64 + 8);
        v67(v65, v34);
        sub_249F990A0((uint64_t)v89, &qword_2544CAD70);
        sub_249F990A0((uint64_t)v84, &qword_2544CAD70);
        v67((char *)v62, v34);
        sub_249F990A0(v57, &qword_2544CAD70);
        v34 = (uint64_t)v88;
        v42 = (char *)v98;
        v48 = v96;
        v49 = &stru_251B6CFE8.align;
        if ((v66 & 1) != 0)
          goto LABEL_27;
LABEL_30:
        v50 = v99;
        goto LABEL_31;
      }
      sub_249F990A0((uint64_t)v89, &qword_2544CAD70);
      sub_249F990A0((uint64_t)v84, &qword_2544CAD70);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v62, v34);
      v42 = (char *)v98;
      LOBYTE(v48) = v96;
      v49 = (_DWORD *)(&stru_251B6CFE8 + 24);
    }
    sub_249F990A0(v94, &qword_2578FFBE0);
    v34 = (uint64_t)v88;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  v44 = sub_24A01ED90();
  v45 = sub_24A01F0E4();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_249F70000, v44, v45, "Unable to find observation for given identifier", v46, 2u);
    MEMORY[0x24BD07950](v46, -1, -1);
  }

  sub_249F74AF4();
  swift_allocError();
  *v47 = 2;
  swift_willThrow();

}

uint64_t sub_249FDDD6C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;

  v1 = objc_msgSend(v0, sel_tags);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_allObjects);

  v4 = sub_24A01EF88();
  v5 = sub_249FF0EE8(v4);
  swift_bridgeObjectRelease();
  if (!v5)
    return 0;
  v16 = MEMORY[0x24BEE4AF8];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_16;
LABEL_5:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x24BD071F4](i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    if (objc_msgSend(v8, sel_type) == 1)
    {

    }
    else
    {
      sub_24A01F33C();
      sub_24A01F36C();
      sub_24A01F378();
      sub_24A01F348();
    }
  }
  swift_bridgeObjectRelease();
  v10 = v16;
LABEL_17:
  swift_bridgeObjectRetain();
  if ((v10 & 0x8000000000000000) != 0 || (v11 = (_QWORD *)v10, (v10 & 0x4000000000000000) != 0))
  {
    v11 = sub_249FB56A8(v10);
    swift_release();
  }
  v16 = (unint64_t)v11;
  sub_249FCAB7C((uint64_t *)&v16);
  swift_release();
  v5 = v16;
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v16 + 16))
      goto LABEL_22;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v14 = sub_24A01F3CC();
  swift_release();
  if (!v14)
  {
LABEL_28:
    swift_release();
    return 0;
  }
LABEL_22:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_32:
    v12 = (id)MEMORY[0x24BD071F4](0, v5);
    goto LABEL_25;
  }
  if (*(_QWORD *)(v5 + 16))
  {
    v12 = *(id *)(v5 + 32);
LABEL_25:
    v13 = v12;
    swift_release();
    return (uint64_t)v13;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_249FDDFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;

  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_24A01EE44();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v12 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = a1;
  v13 = (void *)sub_24A01F09C();
  objc_msgSend(v8, sel_setPredicate_, v13);

  objc_msgSend(v8, sel_setFetchLimit_, 1);
  v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  v15 = v14;
  v16 = sub_24A01F198();
  if (v2)
  {

    v8 = v15;
LABEL_3:

    return;
  }
  v17 = v16;

  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_21:
    swift_bridgeObjectRelease();
    v28 = sub_24A01ED90();
    v29 = sub_24A01F0E4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_249F70000, v28, v29, "Unable to find observation for given identifier", v30, 2u);
      MEMORY[0x24BD07950](v30, -1, -1);
    }

    sub_249F74AF4();
    swift_allocError();
    *v31 = 2;
    swift_willThrow();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v27 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_21;
LABEL_6:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x24BD071F4](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    v18 = *(id *)(v17 + 32);
  }
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v19, sel_tags);
  if (!v20
    || (v21 = v20,
        v22 = objc_msgSend(v20, sel_allObjects),
        v21,
        v23 = sub_24A01EF88(),
        v22,
        v17 = sub_249FF0EE8(v23),
        swift_bridgeObjectRelease(),
        !v17))
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v44 = v19;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_26;
  }
  else
  {
    v3 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      goto LABEL_26;
  }
  if (v3 < 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0)
      v25 = (id)MEMORY[0x24BD071F4](i, v17);
    else
      v25 = *(id *)(v17 + 8 * i + 32);
    v26 = v25;
    objc_msgSend(*(id *)(a2 + 16), sel_deleteObject_, v25);

  }
LABEL_26:
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v19, sel_type);
  if ((v32 & 0x80000000) != 0)
    goto LABEL_41;
  v9 = (uint64_t)v32;
  v33 = MEMORY[0x24BEE1768];
  if (v32 >= 0x100)
    goto LABEL_41;
  v34 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v35 = (void *)sub_24A01EE44();
  v3 = (uint64_t)objc_msgSend(v34, sel_initWithEntityName_, v35);

  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24A0208B0;
  *(_QWORD *)(v36 + 56) = v33;
  *(_QWORD *)(v36 + 64) = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v36 + 32) = (unsigned __int16)v9;
  v37 = (void *)sub_24A01F09C();
  objc_msgSend((id)v3, sel_setPredicate_, v37);

  v38 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v39 = v38;
  v17 = sub_24A01F198();

  if (v17 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v43 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v43)
      goto LABEL_30;
LABEL_37:
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a2 + 16));
    objc_msgSend(v42, sel_setType_, v9);
    v40 = v44;
    goto LABEL_38;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_37;
LABEL_30:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v41 = (id)MEMORY[0x24BD071F4](0, v17);
    v40 = v44;
    goto LABEL_33;
  }
  v40 = v44;
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v41 = *(id *)(v17 + 32);
LABEL_33:
    swift_bridgeObjectRelease();
    v42 = v41;
LABEL_38:
    objc_msgSend(v42, sel_setStaleTags_, 1);

    return;
  }
  __break(1u);
LABEL_41:
  sub_24A01F3B4();
  __break(1u);
}

void sub_249FDE6A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_24A01EBA4();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_24A01EE44();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  v12 = a1;
  v13 = *(void **)(a1 + 16);
  type metadata accessor for VUIndexTag();
  v14 = v13;
  v15 = sub_24A01F198();
  if (v1)
  {

    return;
  }
  v16 = v15;
  v35 = v11;
  v36 = v5;
  v34 = 0;
  v37 = v12;

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    v19 = v36;
    v18 = v37;
    if (v17)
      goto LABEL_5;
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v19 = v36;
    v18 = v37;
    if (v17)
    {
LABEL_5:
      if (v17 < 1)
        __break(1u);
      v20 = 0;
      v39 = v16 & 0xC000000000000001;
      do
      {
        if (v39)
          v23 = (id)MEMORY[0x24BD071F4](v20, v16);
        else
          v23 = *(id *)(v16 + 8 * v20 + 32);
        v24 = v23;
        objc_msgSend(*(id *)(v18 + 16), sel_deleteObject_, v23);
        v25 = objc_msgSend(v24, sel_observation);
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, sel_asset);
          if (v27)
          {
            v28 = v27;
            sub_24A01EB98();

            v29 = v38;
            (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v8, v19, v3);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v3);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v3) != 1)
            {

              sub_249F990A0((uint64_t)v8, &qword_2544CAD70);
              v18 = v37;
              goto LABEL_10;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v8, 1, 1, v3);
          }
          sub_249F990A0((uint64_t)v8, &qword_2544CAD70);
          v21 = v37;
          v22 = *(id *)(v37 + 16);
          objc_msgSend(v22, sel_deleteObject_, v26);

          v18 = v21;
          v19 = v36;
        }

LABEL_10:
        ++v20;
      }
      while (v17 != v20);
    }
  }
  swift_bridgeObjectRelease();
  v30 = v35;
  if ((objc_msgSend(*(id *)(v18 + 16), sel_hasChanges) & 1) == 0)
    goto LABEL_22;
  v31 = *(void **)(v18 + 16);
  v40[0] = 0;
  if (objc_msgSend(v31, sel_save_, v40))
  {
    v32 = v40[0];
LABEL_22:

    return;
  }
  v33 = v40[0];
  sub_24A01EA00();

  swift_willThrow();
}

void sub_249FDEA68(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  int64_t v53;
  int64_t v54;
  uint64_t v55;
  __int128 v56;
  _OWORD v57[2];
  id v58;
  uint64_t v59;
  _QWORD v60[6];

  v2 = 0;
  v60[4] = *MEMORY[0x24BDAC8D0];
  while (1)
  {
    v3 = objc_allocWithZone(MEMORY[0x24BDBB678]);
    swift_bridgeObjectRetain();
    v4 = (void *)sub_24A01EE44();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

    objc_msgSend(v5, sel_setIncludesPropertyValues_, 0);
    v6 = *(void **)(a1 + 16);
    sub_249F990DC(0, &qword_2578FFBE8);
    v7 = v6;
    v8 = sub_24A01F198();
    if (v55)
    {
      swift_arrayDestroy();

      return;
    }
    v9 = v8;

    v55 = 0;
    if (v9 >> 62)
      break;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_6;
LABEL_2:
    ++v2;

    swift_bridgeObjectRelease_n();
    if (v2 == 6)
    {
      swift_arrayDestroy();
      v14 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
      if (!v14)
      {
LABEL_26:
        v18 = 0;
        goto LABEL_27;
      }
      v15 = v14;
      v16 = objc_msgSend(v14, sel_persistentStores);

      sub_249F990DC(0, &qword_2544CAEA8);
      v9 = sub_24A01EF88();

      if (v9 >> 62)
        goto LABEL_24;
      if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_25;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
  v10 = sub_24A01F3CC();
  if (!v10)
    goto LABEL_2;
LABEL_6:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x24BD071F4](i, v9);
      else
        v12 = *(id *)(v9 + 8 * i + 32);
      v13 = v12;
      objc_msgSend(*(id *)(a1 + 16), sel_deleteObject_, v12);

    }
    goto LABEL_2;
  }
  __break(1u);
LABEL_24:
  swift_bridgeObjectRetain();
  v21 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
LABEL_18:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_75:
    v17 = (id)MEMORY[0x24BD071F4](0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
    }
    v17 = *(id *)(v9 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = (id *)objc_msgSend(v18, sel_metadata);
  if (v19)
  {
    v9 = (unint64_t)v19;
    v20 = sub_24A01EDFC();

    goto LABEL_28;
  }
LABEL_27:
  v20 = sub_249F76514(MEMORY[0x24BEE4AF8]);
LABEL_28:
  v50 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(v20 + 64);
  v54 = 0;
  v53 = (unint64_t)(v22 + 63) >> 6;
  v51 = v18;
  v52 = v20;
  while (2)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v25 | (v54 << 6);
      goto LABEL_35;
    }
    v29 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_75;
    }
    if (v29 >= v53)
      goto LABEL_53;
    v30 = *(_QWORD *)(v50 + 8 * v29);
    if (!v30)
    {
      v31 = v54 + 2;
      ++v54;
      if (v29 + 1 < v53)
      {
        v30 = *(_QWORD *)(v50 + 8 * v31);
        if (v30)
        {
LABEL_42:
          v29 = v31;
          goto LABEL_39;
        }
        v54 = v29 + 1;
        if (v29 + 2 < v53)
        {
          v30 = *(_QWORD *)(v50 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_39;
          }
          v31 = v29 + 3;
          v54 = v29 + 2;
          if (v29 + 3 < v53)
          {
            v30 = *(_QWORD *)(v50 + 8 * v31);
            if (v30)
              goto LABEL_42;
            while (1)
            {
              v29 = v31 + 1;
              if (__OFADD__(v31, 1))
                goto LABEL_77;
              if (v29 >= v53)
                break;
              v30 = *(_QWORD *)(v50 + 8 * v29);
              ++v31;
              if (v30)
                goto LABEL_39;
            }
            v54 = v53 - 1;
          }
        }
      }
LABEL_53:
      v24 = 0;
      memset(v57, 0, sizeof(v57));
      v56 = 0u;
      goto LABEL_54;
    }
LABEL_39:
    v24 = (v30 - 1) & v30;
    v26 = __clz(__rbit64(v30)) + (v29 << 6);
    v54 = v29;
LABEL_35:
    v27 = *(_QWORD *)(v20 + 56);
    v28 = (_QWORD *)(*(_QWORD *)(v20 + 48) + 16 * v26);
    v9 = v28[1];
    *(_QWORD *)&v56 = *v28;
    *((_QWORD *)&v56 + 1) = v9;
    sub_249F93A3C(v27 + 32 * v26, (uint64_t)v57);
    swift_bridgeObjectRetain();
LABEL_54:
    sub_249F98C10((uint64_t)&v56, (uint64_t)&v58, &qword_2578FFBF0);
    v32 = v59;
    if (v59)
    {
      v33 = (uint64_t)v58;
      if ((sub_249FDF23C() & 1) != 0)
      {
        if (v18)
        {
          v34 = v18;
          v35 = objc_msgSend(v34, sel_metadata);
          if (!v35)
            goto LABEL_78;
          v36 = v35;
          v37 = sub_24A01EDFC();

          sub_249FB7DDC(v33, v32, &v56);
          sub_249F990A0((uint64_t)&v56, &qword_2544CAF40);
          if (v37)
          {
            v9 = sub_24A01EDF0();
            swift_bridgeObjectRelease();
          }
          else
          {
            v9 = 0;
          }
          objc_msgSend(v34, sel_setMetadata_, v9);
          swift_bridgeObjectRelease();

          v18 = v51;
          v20 = v52;
        }
        else
        {
          swift_bridgeObjectRelease();
          v56 = 0u;
          v57[0] = 0u;
          sub_249F990A0((uint64_t)&v56, &qword_2544CAF40);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v60);
      continue;
    }
    break;
  }
  swift_release();
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_historySupport) & 1) != 0)
  {
    v38 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend(v38, sel_currentPersistentHistoryTokenFromStores_, 0);

    }
    else
    {
      v40 = 0;
    }
    v41 = objc_msgSend((id)objc_opt_self(), sel_deleteHistoryBeforeToken_, v40);

    v42 = *(void **)(a1 + 16);
    v58 = 0;
    v43 = objc_msgSend(v42, sel_executeRequest_error_, v41, &v58);
    if (v43)
    {
      v44 = v43;
      v45 = v58;

      goto LABEL_69;
    }
    v49 = v58;
    sub_24A01EA00();

    swift_willThrow();
  }
  else
  {
LABEL_69:
    v46 = *(void **)(a1 + 16);
    v58 = 0;
    if ((objc_msgSend(v46, sel_save_, &v58) & 1) != 0)
    {
      v47 = v58;
    }
    else
    {
      v48 = v58;
      sub_24A01EA00();

      swift_willThrow();
    }
  }

}

uint64_t sub_249FDF23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_24A01EEC8();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_24A01EEC8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_24A01F45C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_24A01EEC8();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_24A01EEC8();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_249FDF3A0()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  NSObject *v15;
  os_signpost_type_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint8_t *v22;
  id *v23;
  id *v24;
  id v25;
  NSObject *v26;
  _BYTE *v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  _BYTE *v34;
  uint64_t v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  id *v38;
  _BYTE v39[4];
  int v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _BYTE *v45;
  id *v46;

  v2 = v1;
  v3 = sub_24A01ED54();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_24A01ED24();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v45 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v39[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v39[-v12];
  v46 = v0;
  v14 = (char *)v0 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_signposter;
  sub_24A01ED30();
  sub_24A01ED0C();
  v15 = sub_24A01ED30();
  v16 = sub_24A01F174();
  v17 = sub_24A01F1E0();
  v44 = v14;
  if ((v17 & 1) != 0)
  {
    v18 = *(char **)(v6 + 16);
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v18)(v11, v13, v5);
    v19 = v5;
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    v21 = sub_24A01ED18();
    _os_signpost_emit_with_name_impl(&dword_249F70000, v15, v16, v21, "flush", "", v20, 2u);
    v22 = v20;
    v5 = v19;
    v2 = v1;
    MEMORY[0x24BD07950](v22, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {

    v18 = *(char **)(v6 + 16);
  }
  v23 = v46;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v18)(v11, v13, v5);
  sub_24A01ED78();
  swift_allocObject();
  sub_24A01ED6C();
  v24 = *(id **)(v6 + 8);
  ((void (*)(_BYTE *, uint64_t))v24)(v13, v5);
  v25 = v23[2];
  sub_24A01F180();

  if (v2)
    return swift_release();
  v46 = v24;
  v26 = sub_24A01ED30();
  v27 = v45;
  sub_24A01ED60();
  v28 = sub_24A01F168();
  if ((sub_24A01F1E0() & 1) == 0)
  {

    ((void (*)(_BYTE *, uint64_t))v46)(v27, v5);
    return swift_release();
  }
  v40 = v28;
  v44 = v18;
  swift_retain();
  v29 = v41;
  sub_24A01ED84();
  swift_release();
  v31 = v42;
  v30 = v43;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v42 + 88))(v29, v43) == *MEMORY[0x24BEE7810])
  {
    v32 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v29, v30);
    v32 = "";
  }
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v44)(v11, v27, v5);
  v34 = v27;
  v35 = v5;
  v36 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v36 = 0;
  v37 = sub_24A01ED18();
  _os_signpost_emit_with_name_impl(&dword_249F70000, v26, (os_signpost_type_t)v40, v37, "flush", v32, v36, 2u);
  MEMORY[0x24BD07950](v36, -1, -1);

  v38 = v46;
  ((void (*)(_BYTE *, uint64_t))v46)(v34, v35);
  swift_release();
  return ((uint64_t (*)(_BYTE *, uint64_t))v38)(v11, v35);
}

id sub_249FDF764(uint64_t a1)
{
  void *v1;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + 16);
  v4[0] = 0;
  if (objc_msgSend(v1, sel_save_, v4))
    return v4[0];
  v3 = v4[0];
  sub_24A01EA00();

  return (id)swift_willThrow();
}

uint64_t sub_249FDF808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_logger;
  v2 = sub_24A01EDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_signposter;
  v4 = sub_24A01ED48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_249FDF8B8()
{
  return type metadata accessor for VUIndexStore();
}

uint64_t type metadata accessor for VUIndexStore()
{
  uint64_t result;

  result = qword_2544CC190;
  if (!qword_2544CC190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249FDF8FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24A01EDA8();
  if (v1 <= 0x3F)
  {
    result = sub_24A01ED48();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_249FDF9B8(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint32_t *p_align;
  unsigned int v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  void *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_24A01EBA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v32 - v12;
  v14 = *a1;
  v15 = *a2;
  p_align = &stru_251B6CFE8.align;
  v17 = objc_msgSend(v14, sel_type);
  if (v17 != objc_msgSend(v15, sel_type))
  {
    v31 = objc_msgSend(v14, sel_type);
    v30 = v31 < (int)objc_msgSend(v15, sel_type);
    return v30 & 1;
  }
  v18 = objc_msgSend(v14, sel_uuid);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    goto LABEL_13;
  }
  v19 = v18;
  sub_24A01EB98();

  v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v20(v13, v7, v4);
  p_align = *(uint32_t **)(v5 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))p_align)(v13, 0, 1, v4);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v21(v13, 1, v4) == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v32 = sub_24A01EB74();
  v33 = v22;
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v13, v4);
  v24 = objc_msgSend(v15, sel_uuid);
  if (!v24)
  {
LABEL_14:
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))p_align)(v11, 1, 1, v4);
    goto LABEL_15;
  }
  v25 = v24;
  sub_24A01EB98();

  v20(v11, v7, v4);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))p_align)(v11, 0, 1, v4);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v11, 1, v4);
  if ((_DWORD)result != 1)
  {
    v27 = sub_24A01EB74();
    v29 = v28;
    v23(v11, v4);
    if (v32 == v27 && v33 == v29)
    {
      swift_bridgeObjectRelease_n();
      v30 = 0;
    }
    else
    {
      v30 = sub_24A01F45C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return v30 & 1;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_249FDFC84()
{
  sub_24A01F4EC();
  sub_24A01F510();
  sub_24A01F4F8();
  return sub_24A01F528();
}

uint64_t sub_249FDFCE0()
{
  sub_24A01F510();
  return sub_24A01F4F8();
}

uint64_t sub_249FDFD1C()
{
  sub_24A01F4EC();
  sub_24A01F510();
  sub_24A01F4F8();
  return sub_24A01F528();
}

BOOL sub_249FDFD74(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

void sub_249FDFDA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t p_align;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  int v33;
  int v34;
  id *v35;
  signed int v36;
  signed int v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  unint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  id v51;
  void *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  id v82;
  void *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  signed int v91;
  unsigned int v92;
  void *v93;
  signed int v94;
  void *v95;
  char *v96;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  char v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  _QWORD *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void **v165;
  uint64_t v166;
  char *v167;
  char *v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  char *v174;
  uint64_t v175;
  id v176;
  void *v177;
  void *v178;
  uint64_t v179;

  v3 = v1;
  v5 = sub_24A01EBA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v174 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v168 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v152 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v158 = (char *)&v152 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v159 = (char *)&v152 - v16;
  v17 = a1[1];
  v18 = sub_24A01F438();
  if (v18 >= v17)
  {
    if (v17 < 0)
      goto LABEL_161;
    if (v17)
      sub_249FE0AE8(0, v17, 1, a1);
  }
  else
  {
    if (v17 >= 0)
      v19 = v17;
    else
      v19 = v17 + 1;
    if (v17 < -1)
    {
LABEL_177:
      sub_24A01F3B4();
      __break(1u);
      return;
    }
    v156 = v18;
    v167 = v13;
    v163 = v17;
    v153 = a1;
    if (v17 < 2)
    {
      v23 = (char *)MEMORY[0x24BEE4AF8];
      v179 = MEMORY[0x24BEE4AF8];
      v22 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v17 != 1)
      {
        v100 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v100 < 2)
          goto LABEL_136;
        goto LABEL_123;
      }
    }
    else
    {
      v20 = v19 >> 1;
      type metadata accessor for VUIndexTag();
      v21 = sub_24A01EFC4();
      *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      v22 = (void **)((v21 & 0xFFFFFFFFFFFFFF8) + 32);
      v179 = v21;
    }
    v165 = v22;
    v24 = 0;
    v25 = *a1;
    v154 = *a1 + 16;
    v155 = v25 - 8;
    v23 = (char *)MEMORY[0x24BEE4AF8];
    p_align = 0x251B6D000;
    v160 = v5;
    v169 = v6;
    v170 = v25;
    v26 = v163;
LABEL_13:
    v27 = v24;
    v28 = v24 + 1;
    v164 = v24;
    if (v24 + 1 >= v26)
      goto LABEL_41;
    v157 = v23;
    v29 = *(void **)(v25 + 8 * v28);
    v177 = *(void **)(v25 + 8 * v24);
    v30 = v177;
    v178 = v29;
    v31 = v29;
    v32 = v30;
    v33 = sub_249FDF9B8(&v178, &v177);
    if (!v3)
    {
      v34 = v33;

      v28 = v27 + 2;
      if (v27 + 2 < v163)
      {
        v35 = (id *)(v154 + 8 * v27);
        v5 = v163;
        v162 = 0;
        LODWORD(v171) = v34;
        do
        {
          v175 = v28;
          v38 = *(v35 - 1);
          v39 = *v35;
          v40 = v38;
          LODWORD(v38) = objc_msgSend(v39, sel_type);
          if ((_DWORD)v38 == objc_msgSend(v40, sel_type))
          {
            v176 = v40;
            v41 = objc_msgSend(v39, sel_uuid);
            if (!v41)
              goto LABEL_172;
            v42 = v41;
            v173 = v39;
            v43 = v174;
            sub_24A01EB98();

            v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v45 = v159;
            v5 = v160;
            v44(v159, v43, v160);
            v46 = v6;
            v6 = *(_QWORD *)(v6 + 56);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v6)(v45, 0, 1, v5);
            v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
            if (v47(v45, 1, v5) == 1)
              goto LABEL_173;
            v48 = sub_24A01EB74();
            v172 = v49;
            v50 = *(void (**)(char *, uint64_t))(v46 + 8);
            v50(v45, v5);
            v51 = objc_msgSend(v176, sel_uuid);
            if (!v51)
              goto LABEL_174;
            v52 = v51;
            v53 = v174;
            sub_24A01EB98();

            v54 = v158;
            v44(v158, v53, v5);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v6)(v54, 0, 1, v5);
            if (v47(v54, 1, v5) == 1)
              goto LABEL_175;
            v55 = v54;
            v56 = sub_24A01EB74();
            v58 = v57;
            v50(v55, v5);
            v59 = v176;
            if (v48 == v56 && v172 == v58)
            {

              swift_bridgeObjectRelease_n();
              v3 = v162;
              v5 = v163;
              v6 = v169;
              v27 = v164;
              v34 = v171;
              if ((v171 & 1) != 0)
              {
                v23 = v157;
                v5 = v160;
                v25 = v170;
                p_align = 0x251B6D000;
                v28 = v175;
                if (v175 < v164)
                  goto LABEL_162;
                goto LABEL_35;
              }
            }
            else
            {
              v60 = sub_24A01F45C();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v34 = v171;
              v61 = v171 ^ v60;
              v3 = v162;
              v5 = v163;
              v6 = v169;
              v27 = v164;
              if ((v61 & 1) != 0)
              {
LABEL_29:
                v23 = v157;
                v5 = v160;
                v25 = v170;
                p_align = 0x251B6D000;
                v28 = v175;
                if ((v34 & 1) != 0)
                  goto LABEL_34;
                goto LABEL_41;
              }
            }
          }
          else
          {
            v36 = objc_msgSend(v39, sel_type);
            v37 = objc_msgSend(v40, sel_type);

            v3 = v162;
            if (((v34 ^ (v36 >= v37)) & 1) == 0)
              goto LABEL_29;
          }
          v28 = v175 + 1;
          ++v35;
        }
        while (v5 != v175 + 1);
        v28 = v5;
        v23 = v157;
        v5 = v160;
        v25 = v170;
        p_align = 0x251B6D000;
        if ((v34 & 1) == 0)
          goto LABEL_41;
        goto LABEL_34;
      }
      v23 = v157;
      if ((v34 & 1) != 0)
      {
LABEL_34:
        if (v28 < v27)
          goto LABEL_162;
LABEL_35:
        if (v27 < v28)
        {
          v62 = (uint64_t *)(v155 + 8 * v28);
          v63 = v28;
          v64 = v27;
          v65 = (uint64_t *)(v25 + 8 * v27);
          do
          {
            if (v64 != --v63)
            {
              if (!v25)
                goto LABEL_171;
              v66 = *v65;
              *v65 = *v62;
              *v62 = v66;
            }
            ++v64;
            --v62;
            ++v65;
          }
          while (v64 < v63);
        }
      }
LABEL_41:
      if (v28 >= v163)
        goto LABEL_68;
      if (__OFSUB__(v28, v27))
        goto LABEL_160;
      if (v28 - v27 >= v156)
        goto LABEL_68;
      if (__OFADD__(v27, v156))
        goto LABEL_163;
      v67 = v163;
      if (v27 + v156 < v163)
        v67 = v27 + v156;
      if (v67 >= v27)
      {
        if (v28 == v67)
          goto LABEL_68;
        v157 = v23;
        v162 = v3;
        v68 = v155 + 8 * v28;
        v161 = v67;
LABEL_53:
        v175 = v28;
        v70 = *(void **)(v25 + 8 * v28);
        v71 = v27;
        v166 = v68;
        while (1)
        {
          v72 = *(void **)v68;
          v73 = v70;
          v74 = v72;
          LODWORD(v72) = objc_msgSend(v73, *(SEL *)(p_align + 3248));
          if ((_DWORD)v72 == objc_msgSend(v74, *(SEL *)(p_align + 3248)))
          {
            v176 = v74;
            v173 = v73;
            v75 = objc_msgSend(v73, sel_uuid);
            if (!v75)
              goto LABEL_168;
            v76 = v75;
            v77 = v174;
            sub_24A01EB98();

            v78 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v79 = v167;
            v78(v167, v77, v5);
            p_align = *(_QWORD *)(v6 + 56);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))p_align)(v79, 0, 1, v5);
            v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
            if (v80(v79, 1, v5) == 1)
              goto LABEL_169;
            v171 = sub_24A01EB74();
            v172 = v81;
            v6 = *(_QWORD *)(v6 + 8);
            ((void (*)(char *, uint64_t))v6)(v79, v5);
            v82 = objc_msgSend(v176, sel_uuid);
            if (!v82)
              goto LABEL_166;
            v83 = v82;
            v84 = v174;
            sub_24A01EB98();

            v85 = v168;
            v78(v168, v84, v5);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))p_align)(v85, 0, 1, v5);
            if (v80(v85, 1, v5) == 1)
              goto LABEL_167;
            v86 = v85;
            v87 = sub_24A01EB74();
            v89 = v88;
            ((void (*)(char *, uint64_t))v6)(v86, v5);
            if (v171 == v87 && v172 == v89)
            {

              swift_bridgeObjectRelease_n();
              v6 = v169;
              v25 = v170;
              p_align = (uint64_t)&stru_251B6CFE8.align;
LABEL_51:
              v69 = v175;
LABEL_52:
              v28 = v69 + 1;
              v68 = v166 + 8;
              v27 = v164;
              if (v28 != v161)
                goto LABEL_53;
              v28 = v161;
              v3 = v162;
              v23 = v157;
LABEL_68:
              if (v28 < v27)
                goto LABEL_156;
              v96 = v23;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v175 = v28;
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                v23 = v96;
              else
                v23 = sub_24A012ABC(0, *((_QWORD *)v96 + 2) + 1, 1, v96);
              v99 = *((_QWORD *)v23 + 2);
              v98 = *((_QWORD *)v23 + 3);
              v100 = v99 + 1;
              if (v99 >= v98 >> 1)
                v23 = sub_24A012ABC((char *)(v98 > 1), v99 + 1, 1, v23);
              *((_QWORD *)v23 + 2) = v100;
              v5 = (uint64_t)(v23 + 32);
              v101 = &v23[16 * v99 + 32];
              v102 = v175;
              *(_QWORD *)v101 = v27;
              *((_QWORD *)v101 + 1) = v102;
              if (v99)
              {
LABEL_74:
                v6 = v100 - 1;
                if (v100 >= 4)
                {
                  v107 = v5 + 16 * v100;
                  v108 = *(_QWORD *)(v107 - 64);
                  v109 = *(_QWORD *)(v107 - 56);
                  v113 = __OFSUB__(v109, v108);
                  v110 = v109 - v108;
                  if (v113)
                    goto LABEL_144;
                  v112 = *(_QWORD *)(v107 - 48);
                  v111 = *(_QWORD *)(v107 - 40);
                  v113 = __OFSUB__(v111, v112);
                  v105 = v111 - v112;
                  v106 = v113;
                  if (v113)
                    goto LABEL_145;
                  v114 = v100 - 2;
                  v115 = (uint64_t *)(v5 + 16 * (v100 - 2));
                  v117 = *v115;
                  v116 = v115[1];
                  v113 = __OFSUB__(v116, v117);
                  v118 = v116 - v117;
                  if (v113)
                    goto LABEL_147;
                  v113 = __OFADD__(v105, v118);
                  v119 = v105 + v118;
                  if (v113)
                    goto LABEL_150;
                  if (v119 >= v110)
                  {
                    v137 = (uint64_t *)(v5 + 16 * v6);
                    v139 = *v137;
                    v138 = v137[1];
                    v113 = __OFSUB__(v138, v139);
                    v140 = v138 - v139;
                    if (v113)
                      goto LABEL_154;
                    v130 = v105 < v140;
                  }
                  else
                  {
LABEL_87:
                    if ((v106 & 1) != 0)
                      goto LABEL_146;
                    v114 = v100 - 2;
                    v120 = (uint64_t *)(v5 + 16 * (v100 - 2));
                    v122 = *v120;
                    v121 = v120[1];
                    v123 = __OFSUB__(v121, v122);
                    v124 = v121 - v122;
                    v125 = v123;
                    if (v123)
                      goto LABEL_149;
                    v126 = (uint64_t *)(v5 + 16 * v6);
                    v128 = *v126;
                    v127 = v126[1];
                    v113 = __OFSUB__(v127, v128);
                    v129 = v127 - v128;
                    if (v113)
                      goto LABEL_152;
                    if (__OFADD__(v124, v129))
                      goto LABEL_153;
                    if (v124 + v129 < v105)
                      goto LABEL_99;
                    v130 = v105 < v129;
                  }
                  if (v130)
                    v6 = v114;
                }
                else
                {
                  if (v100 == 3)
                  {
                    v104 = *((_QWORD *)v23 + 4);
                    v103 = *((_QWORD *)v23 + 5);
                    v113 = __OFSUB__(v103, v104);
                    v105 = v103 - v104;
                    v106 = v113;
                    goto LABEL_87;
                  }
                  v131 = *((_QWORD *)v23 + 4);
                  v132 = *((_QWORD *)v23 + 5);
                  v113 = __OFSUB__(v132, v131);
                  v124 = v132 - v131;
                  v125 = v113;
LABEL_99:
                  if ((v125 & 1) != 0)
                    goto LABEL_148;
                  v133 = (uint64_t *)(v5 + 16 * v6);
                  v135 = *v133;
                  v134 = v133[1];
                  v113 = __OFSUB__(v134, v135);
                  v136 = v134 - v135;
                  if (v113)
                    goto LABEL_151;
                  if (v136 < v124)
                    goto LABEL_116;
                }
                v141 = v6 - 1;
                if (v6 - 1 >= v100)
                {
                  __break(1u);
LABEL_141:
                  __break(1u);
LABEL_142:
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
                  break;
                }
                if (!v25)
                  goto LABEL_170;
                v142 = v23;
                v143 = v25;
                v144 = (uint64_t *)(v5 + 16 * v141);
                v145 = *v144;
                v146 = (_QWORD *)(v5 + 16 * v6);
                p_align = v146[1];
                sub_249FE0E84((id *)(v143 + 8 * *v144), (id *)(v143 + 8 * *v146), (id *)(v143 + 8 * p_align), v165);
                if (v3)
                  goto LABEL_136;
                if (p_align < v145)
                  goto LABEL_141;
                if (v6 > *((_QWORD *)v142 + 2))
                  goto LABEL_142;
                *v144 = v145;
                *(_QWORD *)(v5 + 16 * v141 + 8) = p_align;
                v147 = *((_QWORD *)v142 + 2);
                if (v6 >= v147)
                  goto LABEL_143;
                v100 = v147 - 1;
                memmove((void *)(v5 + 16 * v6), v146 + 2, 16 * (v147 - 1 - v6));
                v23 = v142;
                *((_QWORD *)v142 + 2) = v147 - 1;
                v25 = v170;
                p_align = 0x251B6D000;
                if (v147 <= 2)
                  goto LABEL_116;
                goto LABEL_74;
              }
              v100 = 1;
LABEL_116:
              v26 = v163;
              v24 = v175;
              v5 = v160;
              v6 = v169;
              if (v175 >= v163)
              {
                v22 = v165;
                if (v100 < 2)
                {
LABEL_136:
                  swift_bridgeObjectRelease();
                  goto LABEL_137;
                }
LABEL_123:
                v148 = *v153;
                while (1)
                {
                  v6 = v100 - 2;
                  if (v100 < 2)
                    goto LABEL_155;
                  if (!v148)
                    goto LABEL_176;
                  v5 = v100 - 1;
                  p_align = (uint64_t)v23;
                  v149 = *(_QWORD *)&v23[16 * v6 + 32];
                  v150 = *(_QWORD *)&v23[16 * v100 + 24];
                  sub_249FE0E84((id *)(v148 + 8 * v149), (id *)(v148 + 8 * *(_QWORD *)&v23[16 * v100 + 16]), (id *)(v148 + 8 * v150), v22);
                  if (v3)
                    goto LABEL_136;
                  if (v150 < v149)
                    goto LABEL_157;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    p_align = (uint64_t)sub_24A012ED4(p_align);
                  if (v6 >= *(_QWORD *)(p_align + 16))
                    goto LABEL_158;
                  v151 = (_QWORD *)(p_align + 32 + 16 * v6);
                  *v151 = v149;
                  v151[1] = v150;
                  v6 = *(_QWORD *)(p_align + 16);
                  if (v100 > v6)
                    goto LABEL_159;
                  memmove((void *)(p_align + 32 + 16 * v5), (const void *)(p_align + 32 + 16 * v100), 16 * (v6 - v100));
                  v23 = (char *)p_align;
                  *(_QWORD *)(p_align + 16) = v6 - 1;
                  v100 = v6 - 1;
                  if (v6 <= 2)
                    goto LABEL_136;
                }
              }
              goto LABEL_13;
            }
            v90 = sub_24A01F45C();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6 = v169;
            v25 = v170;
            p_align = 0x251B6D000;
            if ((v90 & 1) == 0)
              goto LABEL_51;
          }
          else
          {
            v91 = objc_msgSend(v73, *(SEL *)(p_align + 3248));
            v92 = objc_msgSend(v74, *(SEL *)(p_align + 3248));
            v93 = v73;
            v94 = v92;

            if (v91 >= v94)
              goto LABEL_51;
          }
          v69 = v175;
          if (!v25)
            goto LABEL_165;
          v95 = *(void **)v68;
          v70 = *(void **)(v68 + 8);
          *(_QWORD *)v68 = v70;
          *(_QWORD *)(v68 + 8) = v95;
          v68 -= 8;
          if (v69 == ++v71)
            goto LABEL_52;
        }
      }
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))p_align)(v168, 1, 1, v5);
LABEL_167:
      __break(1u);
LABEL_168:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v167, 1, 1, v5);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v159, 1, 1, v160);
LABEL_173:
      __break(1u);
LABEL_174:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v6)(v158, 1, 1, v5);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
      goto LABEL_177;
    }
    swift_bridgeObjectRelease();

LABEL_137:
    *(_QWORD *)((v179 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24A01EFA0();
    swift_bridgeObjectRelease();
  }
}

void sub_249FE0AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  unsigned int v20;
  id v21;
  void *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unsigned int (*v26)(char *, uint64_t, id);
  void *v27;
  void (*v28)(char *, id);
  id v29;
  void *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  char v38;
  signed int v39;
  void *v40;
  signed int v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  char *v56;
  id v57;

  v45 = a1;
  v50 = sub_24A01EBA4();
  v7 = *(_QWORD **)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v56 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v43 - v12;
  v44 = a2;
  if (a3 != a2)
  {
    v13 = (_QWORD *)*a4;
    v14 = *a4 + 8 * a3 - 8;
    v47 = (_QWORD *)*a4;
    v48 = v7;
LABEL_6:
    v15 = (void *)v13[a3];
    v16 = v45;
    v46 = v14;
    v52 = a3;
    while (1)
    {
      v17 = *(void **)v14;
      v18 = v15;
      v19 = v17;
      v20 = objc_msgSend(v18, sel_type);
      if (v20 == objc_msgSend(v19, sel_type))
      {
        v57 = v19;
        v55 = v18;
        v21 = objc_msgSend(v18, sel_uuid);
        if (!v21)
          goto LABEL_21;
        v22 = v21;
        v23 = v56;
        sub_24A01EB98();

        v24 = (void (*)(char *, char *, uint64_t))v7[4];
        v18 = (id)v50;
        v25 = v51;
        v24(v51, v23, v50);
        v13 = (_QWORD *)v7[7];
        ((void (*)(char *, _QWORD, uint64_t, id))v13)(v25, 0, 1, v18);
        v26 = (unsigned int (*)(char *, uint64_t, id))v7[6];
        if (v26(v25, 1, v18) == 1)
          goto LABEL_22;
        v53 = sub_24A01EB74();
        v54 = v27;
        v28 = (void (*)(char *, id))v7[1];
        v28(v25, v18);
        v29 = objc_msgSend(v57, sel_uuid);
        if (!v29)
          goto LABEL_23;
        v30 = v29;
        v31 = v56;
        sub_24A01EB98();

        v32 = v49;
        v24(v49, v31, (uint64_t)v18);
        ((void (*)(char *, _QWORD, uint64_t, id))v13)(v32, 0, 1, v18);
        if (v26(v32, 1, v18) == 1)
          goto LABEL_24;
        v33 = v32;
        v34 = sub_24A01EB74();
        v36 = v35;
        v28(v33, v18);
        v18 = v54;
        v37 = v55;
        if (v53 == v34 && v54 == v36)
        {

          swift_bridgeObjectRelease_n();
          a3 = v52;
          v13 = v47;
          v7 = v48;
LABEL_5:
          ++a3;
          v14 = v46 + 8;
          if (a3 == v44)
            return;
          goto LABEL_6;
        }
        v38 = sub_24A01F45C();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v52;
        v13 = v47;
        v7 = v48;
        if ((v38 & 1) == 0)
          goto LABEL_5;
      }
      else
      {
        v39 = objc_msgSend(v18, sel_type);
        v40 = v19;
        v41 = objc_msgSend(v19, sel_type);

        if (v39 >= v41)
          goto LABEL_5;
      }
      if (!v13)
        break;
      v42 = *(void **)v14;
      v15 = *(void **)(v14 + 8);
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v42;
      v14 -= 8;
      if (a3 == ++v16)
        goto LABEL_5;
    }
    __break(1u);
LABEL_21:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7])(v51, 1, 1, v50);
LABEL_22:
    __break(1u);
LABEL_23:
    ((void (*)(char *, uint64_t, uint64_t, id))v13)(v49, 1, 1, v18);
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_249FE0E84(id *a1, id *a2, id *a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint32_t *p_align;
  void *v27;
  id v28;
  id v29;
  unsigned int v30;
  id v31;
  void *v32;
  char *v33;
  _QWORD *v34;
  void (*v35)(char *, char *, id *);
  char *v36;
  unsigned int (*v37)(char *, uint64_t, id *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, id *);
  id v42;
  void *v43;
  char *v44;
  id *v45;
  id *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint32_t *v50;
  signed int v51;
  signed int v52;
  id *v53;
  char v54;
  id *v55;
  uint32_t *v56;
  id *v57;
  void *v58;
  void *v59;
  char *v60;
  id v61;
  void *v62;
  char *v63;
  _QWORD *v64;
  void (*v65)(char *, char *, id *);
  char *v66;
  unsigned int (*v67)(char *, uint64_t, id *);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, id *);
  id v71;
  void *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  signed int v79;
  unsigned int v80;
  id *v81;
  signed int v82;
  char v83;
  uint32_t *v84;
  uint64_t result;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void **v90;
  uint32_t *v91;
  id *v92;
  uint64_t v93;
  id *v94;
  char *v95;
  id *v96;
  uint32_t *v97;
  id *v98;
  id v99;
  char *v100;
  void **v101;
  uint32_t *v102;
  void **v103;
  id *v104;

  v8 = sub_24A01EBA4();
  v9 = *(_QWORD *)(v8 - 8);
  v92 = (id *)v8;
  v93 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v100 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAD70);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v87 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v88 = (char *)&v86 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v94 = (id *)((char *)&v86 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)&v86 - v18;
  v19 = (char *)a2 - (char *)a1;
  v20 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v20 = (char *)a2 - (char *)a1;
  v21 = v20 >> 3;
  v22 = a2;
  v23 = (char *)a3 - (char *)a2;
  v24 = v23 / 8;
  v104 = a1;
  v101 = a4;
  v103 = a4;
  if (v20 >> 3 < v23 / 8)
  {
    if (v19 < -7)
      goto LABEL_70;
    if (v101 != a1 || &a1[v21] <= v101)
      memmove(v101, a1, 8 * v21);
    v25 = &v101[v21];
    v102 = (uint32_t *)v25;
    if (v19 >= 8 && v22 < a3)
    {
      p_align = &stru_251B6CFE8.align;
      v90 = v25;
      v91 = (uint32_t *)a3;
      while (1)
      {
        v27 = *v101;
        v28 = *v22;
        v29 = v27;
        v30 = objc_msgSend(v28, *((SEL *)p_align + 406));
        if (v30 == objc_msgSend(v29, *((SEL *)p_align + 406)))
        {
          v99 = v29;
          v97 = (uint32_t *)v28;
          v31 = objc_msgSend(v28, sel_uuid);
          if (!v31)
            goto LABEL_64;
          v32 = v31;
          v96 = a1;
          v33 = v100;
          sub_24A01EB98();

          a3 = v92;
          v34 = (_QWORD *)v93;
          v35 = *(void (**)(char *, char *, id *))(v93 + 32);
          v36 = v95;
          v35(v95, v33, v92);
          p_align = (uint32_t *)v34[7];
          ((void (*)(char *, _QWORD, uint64_t, id *))p_align)(v36, 0, 1, a3);
          v37 = (unsigned int (*)(char *, uint64_t, id *))v34[6];
          if (v37(v36, 1, a3) == 1)
            goto LABEL_65;
          v98 = v22;
          v38 = sub_24A01EB74();
          v40 = v39;
          v41 = (void (*)(char *, id *))v34[1];
          v41(v36, a3);
          v42 = objc_msgSend(v99, sel_uuid);
          if (!v42)
            goto LABEL_66;
          v43 = v42;
          v44 = v100;
          sub_24A01EB98();

          v45 = v94;
          v35((char *)v94, v44, a3);
          ((void (*)(id *, _QWORD, uint64_t, id *))p_align)(v45, 0, 1, a3);
          if (v37((char *)v45, 1, a3) == 1)
            goto LABEL_67;
          v46 = v45;
          v47 = sub_24A01EB74();
          v49 = v48;
          v41((char *)v46, a3);
          v50 = v97;
          v22 = v98;
          if (v38 == v47 && v40 == v49)
          {

            swift_bridgeObjectRelease_n();
            a1 = v96;
            v25 = v90;
            a3 = (id *)v91;
LABEL_25:
            if (a1 != v101)
              *a1 = *v101;
            v103 = ++v101;
            v53 = v22;
            goto LABEL_29;
          }
          v54 = sub_24A01F45C();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v96;
          v25 = v90;
          a3 = (id *)v91;
          if ((v54 & 1) == 0)
            goto LABEL_25;
        }
        else
        {
          v51 = objc_msgSend(v28, *((SEL *)p_align + 406));
          v52 = objc_msgSend(v29, *((SEL *)p_align + 406));

          if (v51 >= v52)
            goto LABEL_25;
        }
        v53 = v22 + 1;
        if (a1 >= v22 && a1 < v53)
        {
          p_align = (_DWORD *)(&stru_251B6CFE8 + 24);
          if (a1 != v22)
            *a1 = *v22;
          goto LABEL_30;
        }
        *a1 = *v22;
LABEL_29:
        p_align = (_DWORD *)(&stru_251B6CFE8 + 24);
LABEL_30:
        v104 = ++a1;
        if (v101 < v25)
        {
          v22 = v53;
          if (v53 < a3)
            continue;
        }
        break;
      }
    }
LABEL_61:
    sub_24A012BB8((void **)&v104, (const void **)&v103, &v102);
    return 1;
  }
  if (v23 < -7)
    goto LABEL_70;
  if (v101 != v22 || &v22[v24] <= v101)
    memmove(v101, v22, 8 * v24);
  p_align = (uint32_t *)&v101[v24];
  v102 = p_align;
  v104 = v22;
  if (v23 < 8 || a1 >= v22)
    goto LABEL_61;
  v55 = a3 - 1;
  v56 = &stru_251B6CFE8.align;
  v57 = v22;
  v96 = a1;
  while (1)
  {
    v99 = v55 + 1;
    v58 = (void *)*((_QWORD *)p_align - 1);
    v97 = p_align - 2;
    v59 = *(v57 - 1);
    v94 = v57 - 1;
    a3 = v58;
    v60 = v59;
    LODWORD(v59) = objc_msgSend(a3, *((SEL *)v56 + 406));
    if ((_DWORD)v59 != objc_msgSend(v60, *((SEL *)v56 + 406)))
    {
      v79 = objc_msgSend(a3, *((SEL *)v56 + 406));
      v80 = objc_msgSend(v60, *((SEL *)v56 + 406));
      v81 = a3;
      v82 = v80;

      if (v79 < v82)
        goto LABEL_49;
      goto LABEL_54;
    }
    v95 = v60;
    v90 = a3;
    v91 = p_align;
    v61 = objc_msgSend(a3, sel_uuid);
    if (!v61)
      break;
    v62 = v61;
    v63 = v100;
    sub_24A01EB98();

    a3 = v92;
    v64 = (_QWORD *)v93;
    v65 = *(void (**)(char *, char *, id *))(v93 + 32);
    v66 = v88;
    v65(v88, v63, v92);
    p_align = (uint32_t *)v64[7];
    ((void (*)(char *, _QWORD, uint64_t, id *))p_align)(v66, 0, 1, a3);
    v67 = (unsigned int (*)(char *, uint64_t, id *))v64[6];
    if (v67(v66, 1, a3) == 1)
      goto LABEL_63;
    v98 = v22;
    v68 = sub_24A01EB74();
    v89 = v69;
    v70 = (void (*)(char *, id *))v64[1];
    v70(v66, a3);
    v71 = objc_msgSend(v95, sel_uuid);
    if (!v71)
      goto LABEL_68;
    v72 = v71;
    v73 = v100;
    sub_24A01EB98();

    v74 = v87;
    v65(v87, v73, a3);
    ((void (*)(char *, _QWORD, uint64_t, id *))p_align)(v74, 0, 1, a3);
    if (v67(v74, 1, a3) == 1)
      goto LABEL_69;
    v75 = v74;
    v76 = sub_24A01EB74();
    v78 = v77;
    v70(v75, a3);
    v22 = v98;
    v56 = (_DWORD *)(&stru_251B6CFE8 + 24);
    if (v68 == v76 && v89 == v78)
    {

      swift_bridgeObjectRelease_n();
      a1 = v96;
      p_align = v91;
    }
    else
    {
      v83 = sub_24A01F45C();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v96;
      p_align = v91;
      if ((v83 & 1) != 0)
      {
LABEL_49:
        v57 = v94;
        if (v99 != v22 || v55 >= v22)
          *v55 = *v94;
        v104 = v57;
        goto LABEL_59;
      }
    }
LABEL_54:
    v84 = v97;
    v102 = v97;
    if (v99 < p_align || v55 >= (id *)p_align || v99 != p_align)
      *v55 = *(id *)v97;
    v57 = v22;
    p_align = v84;
LABEL_59:
    if (p_align > (uint32_t *)v101)
    {
      --v55;
      v22 = v57;
      if (v57 > a1)
        continue;
    }
    goto LABEL_61;
  }
  (*(void (**)(char *, uint64_t, uint64_t, id *))(v93 + 56))(v88, 1, 1, v92);
LABEL_63:
  __break(1u);
LABEL_64:
  (*(void (**)(char *, uint64_t, uint64_t, id *))(v93 + 56))(v95, 1, 1, v92);
LABEL_65:
  __break(1u);
LABEL_66:
  ((void (*)(id *, uint64_t, uint64_t, id *))p_align)(v94, 1, 1, a3);
LABEL_67:
  __break(1u);
LABEL_68:
  ((void (*)(char *, uint64_t, uint64_t, id *))p_align)(v87, 1, 1, a3);
LABEL_69:
  __break(1u);
LABEL_70:
  result = sub_24A01F408();
  __break(1u);
  return result;
}

void (*sub_249FE16EC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_249FE176C(v6, a2, a3);
  return sub_249FE1740;
}

void sub_249FE1740(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_249FE176C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24BD071F4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_249FE17D8;
  }
  __break(1u);
  return result;
}

void sub_249FE17D8(id *a1)
{

}

id sub_249FE17E0()
{
  uint64_t v0;

  return sub_249FDF764(v0);
}

uint64_t sub_249FE17F8()
{
  swift_release();
  return swift_deallocObject();
}

id sub_249FE181C()
{
  uint64_t v0;

  return sub_249FD8C54(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_249FE1828()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_249FE1850()
{
  uint64_t v0;

  sub_249FD7B6C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_249FE1874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_249FE18F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A01EBA4() - 8) + 80);
  return sub_249FD6DA4(*(_QWORD *)(v0 + 16), *(_WORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_249FE1928()
{
  return swift_deallocObject();
}

void sub_249FE1938()
{
  uint64_t v0;

  sub_249FD6EE4(*(_QWORD *)(v0 + 16), *(_WORD *)(v0 + 24), *(_WORD *)(v0 + 26), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

unint64_t sub_249FE1970()
{
  unint64_t result;

  result = qword_2544CA240;
  if (!qword_2544CA240)
  {
    result = MEMORY[0x24BD078A8](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2544CA240);
  }
  return result;
}

uint64_t sub_249FE19B4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_249FE19D8()
{
  uint64_t v0;

  sub_249FD65F4(*(unsigned __int16 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 18) << 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_249FE19F4()
{
  return swift_deallocObject();
}

void sub_249FE1A04()
{
  uint64_t v0;

  sub_249FD3A9C(*(unsigned __int8 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 17) << 8), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_249FE1A20()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1A30()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249FE1A5C()
{
  return swift_deallocObject();
}

void sub_249FE1A6C()
{
  uint64_t v0;

  sub_249FD1DFC(*(unsigned __int8 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 17) << 8), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_249FE1A88()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1A98()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_249FE1AC4()
{
  uint64_t v0;

  sub_249FCE1F0(*(_WORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_249FE1AD4()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1AE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

id sub_249FE1B18()
{
  uint64_t v0;

  return sub_249FCDADC(*(_WORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD **)(v0 + 56));
}

uint64_t sub_249FE1B2C()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1B3C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_249FE1B60()
{
  uint64_t v0;

  sub_249FCD688(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249FE1B68()
{
  return swift_deallocObject();
}

void sub_249FE1B78()
{
  uint64_t v0;

  sub_249FCD2A0(*(_WORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_249FE1B84()
{
  return swift_deallocObject();
}

void sub_249FE1B94()
{
  uint64_t v0;

  sub_249FCCEEC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_249FE1B9C()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1BAC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_249FE1BD8()
{
  uint64_t *v0;

  sub_249FCCC98(v0[2], v0[3], v0[4]);
}

uint64_t sub_249FE1BE4()
{
  return swift_deallocObject();
}

uint64_t sub_249FE1BF4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FE1C20()
{
  return swift_deallocObject();
}

uint64_t *sub_249FE1C30(unsigned __int8 a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t *a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  id v32;
  id v33;
  uint64_t v34;
  _BYTE *v35;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v43;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;

  v16 = v14;
  if (a4 >> 60 != 15)
    __asm { BR              X11 }
  if (a8 >> 60 != 15)
    __asm { BR              X12 }
  if (a4 >> 60 != 15 && (a6 & 1) == 0)
  {
    v20 = (uint64_t *)(v14 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
    swift_beginAccess();
    v21 = *v20;
    if (*(_QWORD *)(v21 + 16))
    {
      v22 = sub_249F8B0C4(a1);
      if ((v23 & 1) != 0)
      {
        v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22) + 24);
        if (v24 && v24 != a5)
        {
          v37 = sub_24A01ED90();
          v38 = sub_24A01F0E4();
          if (!os_log_type_enabled(v37, v38))
            goto LABEL_26;
          v40 = swift_slowAlloc();
          *(_DWORD *)v40 = 134218240;
          a3 = &v45;
          sub_24A01F1F8();
          *(_WORD *)(v40 + 12) = 2048;
          sub_24A01F1F8();
          _os_log_impl(&dword_249F70000, v37, v38, "Unable to add embedding: provided embedding revision (%ld) does not match the current embedding revision (%ld)", (uint8_t *)v40, 0x16u);
          v34 = v40;
LABEL_25:
          MEMORY[0x24BD07950](v34, -1, -1);
LABEL_26:

          sub_249F74AF4();
          swift_allocError();
          *v35 = 1;
          swift_willThrow();
          return a3;
        }
      }
    }
  }
  if (a8 >> 60 != 15 && (a10 & 1) == 0)
  {
    v26 = (uint64_t *)(v16 + OBJC_IVAR____TtC19VisualUnderstanding12VUIndexStore_parameters);
    swift_beginAccess();
    v27 = *v26;
    if (*(_QWORD *)(v27 + 16))
    {
      v28 = sub_249F8B0C4(a1);
      if ((v29 & 1) != 0)
      {
        v30 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v28) + 32);
        if (v30 && v30 != a9)
        {
          v37 = sub_24A01ED90();
          v41 = sub_24A01F0E4();
          if (!os_log_type_enabled(v37, v41))
            goto LABEL_26;
          v43 = swift_slowAlloc();
          *(_DWORD *)v43 = 134218240;
          a3 = &v47;
          sub_24A01F1F8();
          *(_WORD *)(v43 + 12) = 2048;
          v46 = v30;
          sub_24A01F1F8();
          _os_log_impl(&dword_249F70000, v37, v41, "Unable to add embedding: provided contextual embedding revision (%ld) does not match the current embedding revision (%ld)", (uint8_t *)v43, 0x16u);
          v34 = v43;
          goto LABEL_25;
        }
      }
    }
  }
  MEMORY[0x24BDAC7A8](a14);
  a3 = (uint64_t *)v32;
  sub_24A01F180();

  if (!v15)
  {
    a3 = v46;
    v33 = *(id *)(v16 + 16);
    sub_24A01F180();

  }
  return a3;
}

void sub_249FE2248(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249FDAFB8(*(_QWORD **)(v1 + 16), *(_BYTE *)(v1 + 24), (id)*(unsigned __int16 *)(v1 + 26), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_BYTE *)(v1 + 112), *(unsigned int *)(v1 + 116) | ((unint64_t)*(unsigned __int8 *)(v1 + 120) << 32), *(unsigned int *)(v1 + 124) | ((unint64_t)*(unsigned __int8 *)(v1 + 128) << 32), *(_BYTE *)(v1 + 129), *(_QWORD *)(v1 + 136),
    *(_BYTE *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_BYTE *)(v1 + 160));
}

void sub_249FE2300(unsigned __int8 a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  id i;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v11 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = a1;
  v12 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v12);

  v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v14 = v13;
  v15 = sub_24A01F198();

  if (v3)
  {
    v16 = v9;
    goto LABEL_11;
  }
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_24A01F3CC();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a2 + 16));
    objc_msgSend(v16, sel_setType_, a1);
    v19 = a3[2];
    if (!v19)
      goto LABEL_14;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_5:
  if ((v15 & 0xC000000000000001) != 0)
    goto LABEL_16;
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  for (i = *(id *)(v15 + 32); ; i = (id)MEMORY[0x24BD071F4](0, v15))
  {
    v18 = i;
    swift_bridgeObjectRelease();
    v16 = v18;
    v19 = a3[2];
    if (!v19)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_9:
    objc_msgSend(v16, sel_setEmbeddingRevision_, a3[4]);
    if (v19 != 1)
      break;
LABEL_15:
    __break(1u);
LABEL_16:
    ;
  }
  objc_msgSend(v16, sel_setContextualEmbeddingRevision_, a3[5]);

LABEL_11:
}

void sub_249FE258C(unsigned __int8 a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_24A01EE44();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_249F990DC(0, (unint64_t *)&qword_2544CACD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544CACE0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A0208B0;
  v11 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = a1;
  v12 = (void *)sub_24A01F09C();
  objc_msgSend(v9, sel_setPredicate_, v12);

  v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  v14 = v13;
  v15 = sub_24A01F198();

  if (v3)
    goto LABEL_11;
  if (!(v15 >> 62))
  {
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a2 + 16));
    objc_msgSend(v18, sel_setType_, a1);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v19 = sub_24A01F3CC();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_9;
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24BD071F4](0, v15);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_7:
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = v17;
LABEL_10:
    sub_249FD5198(v18, a3);

    v9 = v18;
LABEL_11:

    return;
  }
  __break(1u);
}

uint64_t sub_249FE27DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_249FD5D18(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_249FE27F8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_249FD5E00(*(_WORD *)(v1 + 24), *(_WORD *)(v1 + 26), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_249FE2820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_24A01EBA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4 + 16))
  {
    sub_249F92358(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_249FE28BC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  char *v3;

  v1 = *(_QWORD *)(sub_24A01EBA4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (char *)v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_249FD6280(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, *(_QWORD *)v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2));
}

uint64_t sub_249FE290C()
{
  return swift_deallocObject();
}

uint64_t sub_249FE291C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_249F93CE0(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249FE2948()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FE2974()
{
  return swift_deallocObject();
}

uint64_t sub_249FE2984()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_249FE29B0()
{
  uint64_t v0;

  sub_249FCBDD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_249FE29C0()
{
  return swift_deallocObject();
}

uint64_t sub_249FE29D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_249FE29F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_249FD0690(a1, a2, v2);
}

ValueMetadata *type metadata accessor for VUIndexStore.ClientLabel()
{
  return &type metadata for VUIndexStore.ClientLabel;
}

uint64_t storeEnumTagSinglePayload for VUIndexStore.TagType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249FE2A58 + 4 * byte_24A020F35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249FE2A8C + 4 * byte_24A020F30[v4]))();
}

uint64_t sub_249FE2A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FE2A94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249FE2A9CLL);
  return result;
}

uint64_t sub_249FE2AA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249FE2AB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249FE2AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FE2ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUIndexStore.TagType()
{
  return &type metadata for VUIndexStore.TagType;
}

unint64_t sub_249FE2ADC()
{
  unint64_t result;

  result = qword_2578FFC68;
  if (!qword_2578FFC68)
  {
    result = MEMORY[0x24BD078A8](&unk_24A021014, &type metadata for VUIndexStore.TagType);
    atomic_store(result, (unint64_t *)&qword_2578FFC68);
  }
  return result;
}

unint64_t sub_249FE2B24()
{
  unint64_t result;

  result = qword_2578FFC70;
  if (!qword_2578FFC70)
  {
    result = MEMORY[0x24BD078A8](&unk_24A02103C, &type metadata for VUIndexStore.ClientLabel);
    atomic_store(result, (unint64_t *)&qword_2578FFC70);
  }
  return result;
}

uint64_t sub_249FE2C00(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000017;
  else
    v3 = 0xD000000000000013;
  if (v2)
    v4 = 0x800000024A021C90;
  else
    v4 = 0x800000024A021CB0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000017;
  else
    v5 = 0xD000000000000013;
  if ((a2 & 1) != 0)
    v6 = 0x800000024A021CB0;
  else
    v6 = 0x800000024A021C90;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_24A01F45C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_249FE2CA8()
{
  sub_24A01F4EC();
  sub_24A01EE98();
  swift_bridgeObjectRelease();
  return sub_24A01F528();
}

uint64_t sub_249FE2D2C()
{
  sub_24A01F4EC();
  sub_24A01EE98();
  swift_bridgeObjectRelease();
  return sub_24A01F528();
}

unint64_t VUPluginType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0xD000000000000013;
}

VisualUnderstanding::VUPluginType_optional __swiftcall VUPluginType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  VisualUnderstanding::VUPluginType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_24A01F420();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static VUPluginType.allCases.getter()
{
  return &unk_251B67A18;
}

uint64_t sub_249FE2E58(char *a1, char *a2)
{
  return sub_249FE2C00(*a1, *a2);
}

unint64_t sub_249FE2E68()
{
  unint64_t result;

  result = qword_2578FFC80;
  if (!qword_2578FFC80)
  {
    result = MEMORY[0x24BD078A8](&protocol conformance descriptor for VUPluginType, &type metadata for VUPluginType);
    atomic_store(result, (unint64_t *)&qword_2578FFC80);
  }
  return result;
}

uint64_t sub_249FE2EAC()
{
  return sub_249FE2CA8();
}

uint64_t sub_249FE2EB4()
{
  sub_24A01EE98();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249FE2F14()
{
  return sub_249FE2D2C();
}

VisualUnderstanding::VUPluginType_optional sub_249FE2F1C(Swift::String *a1)
{
  return VUPluginType.init(rawValue:)(*a1);
}

void sub_249FE2F28(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000017;
  else
    v2 = 0xD000000000000013;
  v3 = 0x800000024A021C90;
  if (*v1)
    v3 = 0x800000024A021CB0;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_249FE2F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578FFC88;
  if (!qword_2578FFC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578FFC90);
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578FFC88);
  }
  return result;
}

void sub_249FE2FBC(_QWORD *a1@<X8>)
{
  *a1 = &unk_251B67B20;
}

uint64_t storeEnumTagSinglePayload for VUPluginType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249FE3018 + 4 * byte_24A0210B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249FE304C + 4 * byte_24A0210B0[v4]))();
}

uint64_t sub_249FE304C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FE3054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249FE305CLL);
  return result;
}

uint64_t sub_249FE3068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249FE3070);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249FE3074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249FE307C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VUPluginType()
{
  return &type metadata for VUPluginType;
}

uint64_t dispatch thunk of VUPlugin.init(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of VUPlugin.update(progressHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_249FE30B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;

  v7 = v0 + 2;
  result = swift_beginAccess();
  v9 = v0[2];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v10 - 2;
    v12 = v10 - 1;
    if (v10 < 2)
      v11 = v10 - 1;
    v13 = v11 >> 1;
    if (v13 < (unint64_t)v10)
      goto LABEL_10;
LABEL_5:
    __break(1u);
LABEL_6:
    v14 = &v0[v2];
    v14[4] = v4;
    *((_DWORD *)v14 + 10) = v6;
    v15 = *v7 + v3 * 8;
    *(_QWORD *)(v15 + 32) = v12;
    *(_DWORD *)(v15 + 40) = v5;
    while (1)
    {
      result = swift_endAccess();
      v16 = v1 - 1;
      if (v1 < 1)
        v16 = v1;
      v13 = v16 >> 1;
      v9 = *v7;
      v10 = *(_QWORD *)(*v7 + 16);
      v12 = v1;
      if (v13 >= v10)
        goto LABEL_5;
LABEL_10:
      if (v12 >= v10)
        break;
      v1 = v13;
      v2 = 2 * v13;
      v3 = 2 * v12;
      if (*(float *)(v9 + 32 + 16 * v12 + 8) >= *(float *)(v9 + 32 + 16 * v13 + 8))
        return result;
      result = swift_beginAccess();
      if (v1 != v12)
      {
        v0 = (_QWORD *)*v7;
        v17 = *(_QWORD *)(*v7 + 16);
        if (v1 >= v17)
          goto LABEL_19;
        if (v12 >= v17)
          goto LABEL_20;
        v18 = &v0[v2 + 4];
        v12 = *v18;
        v5 = *((_DWORD *)v18 + 2);
        v19 = &v0[v3 + 4];
        v4 = *v19;
        v6 = *((_DWORD *)v19 + 2);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v7 = v0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v0 = sub_24A006B90(v0);
          *v7 = v0;
        }
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_249FE322C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  char isUniquelyReferenced_nonNull_native;

  v1 = (uint64_t *)(v0 + 16);
  result = swift_beginAccess();
  v3 = 0;
  v4 = 0;
  while (1)
  {
    v7 = v3 | 1;
    v8 = *v1;
    v9 = *(_QWORD *)(*v1 + 16);
    if ((v3 | 1) >= v9)
      return result;
    v10 = v3 + 2;
    if (__OFADD__(v3, 2))
      goto LABEL_21;
    if (v10 < v9)
    {
      if (v10 < 0)
        goto LABEL_24;
      if (v3 < 0)
        goto LABEL_25;
      if (*(float *)(v8 + 32 + 16 * v10 + 8) < *(float *)(v8 + 32 + 16 * v7 + 8))
        v7 = v3 + 2;
    }
    if (v4 >= v9)
      goto LABEL_22;
    if (v7 >= v9)
      goto LABEL_23;
    v11 = 2 * v4;
    v12 = 2 * v7;
    if (*(float *)(v8 + 32 + 16 * v4 + 8) < *(float *)(v8 + 32 + 16 * v7 + 8))
      return result;
    result = swift_beginAccess();
    if (v4 != v7)
    {
      v13 = (_QWORD *)*v1;
      v14 = *(_QWORD *)(*v1 + 16);
      if (v4 >= v14)
        goto LABEL_26;
      if (v7 >= v14)
        goto LABEL_27;
      v15 = &v13[v11 + 4];
      v16 = *v15;
      v17 = *((_DWORD *)v15 + 2);
      v18 = &v13[v12 + 4];
      v19 = *v18;
      v20 = *((_DWORD *)v18 + 2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v1 = (uint64_t)v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v13 = sub_24A006B90(v13);
        *v1 = (uint64_t)v13;
      }
      v5 = &v13[v11];
      v5[4] = v19;
      *((_DWORD *)v5 + 10) = v20;
      v6 = *v1 + v12 * 8;
      *(_QWORD *)(v6 + 32) = v16;
      *(_DWORD *)(v6 + 40) = v17;
    }
    result = swift_endAccess();
    v3 = 2 * v7;
    v4 = v7;
    if ((uint64_t)(v7 + 0x4000000000000000) < 0)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
  }
}

uint64_t sub_249FE33D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MinHeap()
{
  return objc_opt_self();
}

uint64_t sub_249FE3420()
{
  return swift_initClassMetadata2();
}

uint64_t sub_249FE3488@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  __int128 aBlock;
  uint64_t (*v48)(uint64_t);
  void *v49;
  uint64_t (*v50)();
  _QWORD *v51;
  uint64_t v52;

  v35 = a7;
  *(_QWORD *)&v39 = a6;
  v38 = a5;
  v37 = a4;
  v36 = a3;
  v41 = a9;
  v12 = sub_24A01EDCC();
  v42 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_24A01EDE4();
  v15 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  v18 = swift_allocObject();
  v19 = (uint64_t *)(v18 + 16);
  v44 = a2;
  v45 = &v52;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA2C0);
  sub_24A01F138();
  v20 = *(_QWORD *)(v18 + 16);
  v40 = a8;
  if (v20)
  {
    v50 = sub_249FE3AAC;
    v51 = a2;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v48 = sub_24A007D98;
    v49 = &block_descriptor_9;
    v21 = _Block_copy(&aBlock);
    swift_retain();
    sub_24A01EDD8();
    v46 = MEMORY[0x24BEE4AF8];
    sub_249FE3A18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA298);
    sub_249FE3A60();
    sub_24A01F228();
    MEMORY[0x24BD07014](0, v17, v14, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v43);
  }
  else
  {
    sub_24A003378(v36, v37, v38, v39, v35 & 1, (uint64_t)&aBlock);
    v39 = aBlock;
    v22 = v48;
    sub_249FCA398(*(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), *(_QWORD *)(v18 + 32));
    *(_OWORD *)(v18 + 16) = v39;
    *(_QWORD *)(v18 + 32) = v22;
    sub_24A01EDC0();
    v23 = v52;
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a2;
    v24[3] = v23;
    v24[4] = v18;
    v50 = sub_249FE39EC;
    v51 = v24;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v48 = sub_24A007D98;
    v49 = &block_descriptor_3;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_24A01EDD8();
    MEMORY[0x24BD07014](0, v17, v14, v25);
    _Block_release(v25);
    *(_QWORD *)&v39 = *(_QWORD *)(v15 + 8);
    v26 = v43;
    ((void (*)(char *, uint64_t))v39)(v17, v43);
    v27 = *(void (**)(char *, uint64_t))(v42 + 8);
    v27(v14, v12);
    swift_release();
    v42 = a2[8];
    v50 = sub_249FE3A10;
    v51 = a2;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v48 = sub_24A007D98;
    v49 = &block_descriptor_6;
    v28 = _Block_copy(&aBlock);
    swift_retain();
    sub_24A01EDD8();
    v46 = MEMORY[0x24BEE4AF8];
    sub_249FE3A18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CA298);
    sub_249FE3A60();
    sub_24A01F228();
    MEMORY[0x24BD07014](0, v17, v14, v28);
    _Block_release(v28);
    v27(v14, v12);
    ((void (*)(char *, uint64_t))v39)(v17, v26);
  }
  swift_release();
  result = swift_beginAccess();
  v30 = *v19;
  if (*v19)
  {
    v32 = *(_QWORD *)(v18 + 24);
    v31 = *(_QWORD *)(v18 + 32);
    swift_bridgeObjectRetain();
    sub_249F93CE0(v32, v31);
    swift_release();
    result = swift_release();
    v33 = v41;
    *v41 = v30;
    v33[1] = v32;
    v33[2] = v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249FE3914()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_249FE3948()
{
  sub_249FE3914();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcurrentCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConcurrentCache);
}

uint64_t sub_249FE3974()
{
  _QWORD *v0;

  if (v0[2])
  {
    swift_bridgeObjectRelease();
    sub_249F92358(v0[3], v0[4]);
  }
  return swift_deallocObject();
}

uint64_t sub_249FE39A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_24A000D18(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_249FE39C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249FE39EC()
{
  uint64_t v0;

  return sub_24A001080(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_249FE3A10()
{
  uint64_t v0;

  return sub_24A001374(v0);
}

unint64_t sub_249FE3A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544CA290;
  if (!qword_2544CA290)
  {
    v1 = sub_24A01EDCC();
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2544CA290);
  }
  return result;
}

unint64_t sub_249FE3A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544CA2A0;
  if (!qword_2544CA2A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544CA298);
    result = MEMORY[0x24BD078A8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2544CA2A0);
  }
  return result;
}

uint64_t sub_249FE3AAC()
{
  uint64_t v0;

  return sub_24A00138C(v0);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BD07854](a1, v6, a5);
}

void sub_249FE3AF0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544CAC60);
    v2 = (_QWORD *)sub_24A01F3FC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_249FCA390();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_249F8B0F8(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_249FE3D90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CABE0);
    v2 = (_QWORD *)sub_24A01F3FC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v6 = &v38;
  v7 = &v40;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v9 = &qword_2578FFD20;
  v10 = 0x24BDBFF98uLL;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_35;
  if (v19 >= v32)
    goto LABEL_32;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v34 + 1;
  if (!v20)
  {
    v21 = v34 + 2;
    if (v34 + 2 >= v32)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    if (!v20)
    {
      v21 = v34 + 3;
      if (v34 + 3 >= v32)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v21);
      if (!v20)
      {
        v21 = v34 + 4;
        if (v34 + 4 >= v32)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            v20 = *(_QWORD *)(v33 + 8 * v22);
            if (v20)
            {
              v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v32)
                break;
              v20 = *(_QWORD *)(v33 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_249FCA390();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = v21;
  v35 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v36 = *v23;
    v37 = v23[1];
    sub_249F990DC(0, v9);
    swift_bridgeObjectRetain();
    v25 = v24;
    swift_dynamicCast();
    sub_249F989B0(v6, v7);
    sub_249F989B0(v7, v41);
    sub_249F989B0(v41, &v39);
    result = sub_249F8B0F8(v36, v37);
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = v10;
      v15 = v9;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v36;
      v16[1] = v37;
      v9 = v15;
      v10 = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      result = (unint64_t)sub_249F989B0(&v39, v17);
      v5 = v35;
      if (!v35)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v2[6] + 16 * result);
    *v28 = v36;
    v28[1] = v37;
    result = (unint64_t)sub_249F989B0(&v39, (_OWORD *)(v2[7] + 32 * result));
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v35;
    if (!v35)
      goto LABEL_11;
LABEL_10:
    v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_249FE410C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  char v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  char v38;
  id v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  _BYTE *v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v5 = v4;
  v6 = v3;
  v10 = sub_24A01EAA8();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v3 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
  swift_bridgeObjectRetain_n();
  v14 = sub_24A01ED90();
  v15 = sub_24A01F0D8();
  v16 = os_log_type_enabled(v14, v15);
  v50 = v12;
  v51 = a1;
  if (v16)
  {
    v46[1] = v13;
    v17 = swift_slowAlloc();
    v47 = v4;
    v18 = a2;
    v19 = (uint8_t *)v17;
    v20 = swift_slowAlloc();
    *(_QWORD *)&v53 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    v55 = sub_249F8AAE8(v18, a3, (uint64_t *)&v53);
    sub_24A01F1F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_249F70000, v14, v15, "Loading model %s for personalization...", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD07950](v20, -1, -1);
    v21 = v19;
    a2 = v18;
    v5 = v47;
    MEMORY[0x24BD07950](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v22 = (uint64_t *)(v6 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_cache);
  swift_beginAccess();
  v23 = *v22;
  if (*(_QWORD *)(*v22 + 16))
  {
    swift_bridgeObjectRetain();
    v24 = sub_249F8B0F8(0xD000000000000015, 0x800000024A023BE0);
    if ((v25 & 1) != 0)
    {
      sub_249F93A3C(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v53);
    }
    else
    {
      v53 = 0u;
      v54 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v54 + 1))
    {
      sub_249F990A0((uint64_t)&v53, &qword_2544CAF40);
      goto LABEL_12;
    }
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  sub_249F990A0((uint64_t)&v53, &qword_2544CAF40);
  *((_QWORD *)&v54 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFD48);
  *(_QWORD *)&v53 = MEMORY[0x24BEE4B00];
  swift_beginAccess();
  sub_249FA3E70((uint64_t)&v53, 0xD000000000000015, 0x800000024A023BE0);
  swift_endAccess();
LABEL_12:
  v26 = *v22;
  if (!*(_QWORD *)(*v22 + 16))
  {
    v53 = 0u;
    v54 = 0u;
LABEL_23:
    sub_249F990A0((uint64_t)&v53, &qword_2544CAF40);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v27 = sub_249F8B0F8(0xD000000000000015, 0x800000024A023BE0);
  if ((v28 & 1) != 0)
  {
    sub_249F93A3C(*(_QWORD *)(v26 + 56) + 32 * v27, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v54 + 1))
    goto LABEL_23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFD48);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    v52 = 0;
    goto LABEL_25;
  }
  if (v52)
  {
    if (*(_QWORD *)(v52 + 16))
    {
      swift_bridgeObjectRetain();
      sub_249F8B0F8(a2, a3);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
LABEL_30:
        v36 = v52;
        if (!v52)
          goto LABEL_38;
        goto LABEL_34;
      }
    }
  }
LABEL_25:
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  objc_msgSend(v31, sel_setComputeUnits_, 0);
  if (!v52)
    goto LABEL_33;
  sub_249F990DC(0, &qword_2578FFD50);
  v32 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, v51, v49);
  v33 = v31;
  v34 = sub_249FEF704(v32, (uint64_t)v33);

  if (!v5)
  {
    swift_bridgeObjectRetain();
    if (v34)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v53 = v52;
      v52 = 0x8000000000000000;
      sub_249FBF100((uint64_t)v34, a2, a3, isUniquelyReferenced_nonNull_native);
      v52 = v53;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v31 = (id)sub_249FB7DD0(a2, a3);

    swift_bridgeObjectRelease();
LABEL_33:

    v36 = v52;
    if (!v52)
    {
LABEL_38:
      swift_bridgeObjectRetain_n();
      v41 = sub_24A01ED90();
      v42 = sub_24A01F0E4();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        *(_QWORD *)&v53 = v44;
        *(_DWORD *)v43 = 136315138;
        swift_bridgeObjectRetain();
        v56 = sub_249F8AAE8(a2, a3, (uint64_t *)&v53);
        sub_24A01F1F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_249F70000, v41, v42, "Cannot load model %s for token personalization", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD07950](v44, -1, -1);
        MEMORY[0x24BD07950](v43, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_249F74AF4();
      swift_allocError();
      *v45 = 9;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
LABEL_34:
    if (*(_QWORD *)(v36 + 16))
    {
      swift_bridgeObjectRetain();
      v37 = sub_249F8B0F8(a2, a3);
      if ((v38 & 1) != 0)
      {
        v39 = *(id *)(*(_QWORD *)(v36 + 56) + 8 * v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v39;
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_38;
  }

  return swift_bridgeObjectRelease();
}

NSObject *sub_249FE479C(uint64_t a1, unint64_t a2)
{
  NSObject *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAD60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A01EAA8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)&v29 - v13;
  type metadata accessor for VUGallery(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v32 = a1;
  v33 = a2;
  v16 = (void *)sub_24A01EE44();
  v17 = (void *)sub_24A01EE44();
  v18 = objc_msgSend(v15, sel_URLForResource_withExtension_, v16, v17);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_7;
  }
  sub_24A01EA60();

  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_7:
    sub_249F990A0((uint64_t)v7, (uint64_t *)&unk_2544CAD60);
    v23 = v33;
    swift_bridgeObjectRetain_n();
    v2 = sub_24A01ED90();
    v24 = sub_24A01F0E4();
    if (os_log_type_enabled(v2, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v35 = v26;
      *(_DWORD *)v25 = 136315138;
      swift_bridgeObjectRetain();
      v34 = sub_249F8AAE8(v32, v23, &v35);
      sub_24A01F1F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249F70000, v2, v24, "Cannot find model %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD07950](v26, -1, -1);
      MEMORY[0x24BD07950](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_249F74AF4();
    swift_allocError();
    *v27 = 9;
    swift_willThrow();
    return v2;
  }
  v20 = (uint64_t)v30;
  v19(v30, v7, v8);
  v21 = v31;
  v22 = sub_249FE410C(v20, v32, v33);
  if (!v21)
    v2 = v22;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v8);
  return v2;
}

uint64_t sub_249FE4B50(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _BYTE *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[4];
  _BYTE v55[40];
  uint64_t v56;

  v5 = sub_24A01EBEC();
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_24A01EC10();
  v7 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A01EAA8();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - v13;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFCB8);
  v42 = *(_QWORD *)(v49 - 8);
  v15 = MEMORY[0x24BDAC7A8](v49);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  v20 = *a2;
  sub_249F93A3C(a1, (uint64_t)v51);
  LOBYTE(v53) = v20;
  if (v20 == 2)
  {
    if (swift_dynamicCast() && v55[0] == 4)
    {
      v21 = v50;
      v22 = sub_249FE479C(0xD000000000000019, 0x800000024A023B80);
      if (!v21)
      {
        v2 = (uint64_t)v22;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
        return v2;
      }
LABEL_15:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
      return v2;
    }
    goto LABEL_16;
  }
  if (v20 != 1)
  {
LABEL_16:
    v2 += OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
    sub_249F93A3C(a1, (uint64_t)v55);
    v24 = sub_24A01ED90();
    v25 = sub_24A01F0E4();
    if (os_log_type_enabled(v24, v25))
    {
      v2 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v56 = v26;
      *(_DWORD *)v2 = 136315394;
      sub_249F93A3C((uint64_t)v55, (uint64_t)v54);
      v27 = sub_24A01EE74();
      v54[0] = sub_249F8AAE8(v27, v28, &v56);
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
      *(_WORD *)(v2 + 12) = 2080;
      LOBYTE(v54[0]) = v20;
      v29 = sub_24A01EE74();
      v54[0] = sub_249F8AAE8(v29, v30, &v56);
      sub_24A01F1F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249F70000, v24, v25, "No model for available for %s, %s", (uint8_t *)v2, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24BD07950](v26, -1, -1);
      MEMORY[0x24BD07950](v2, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
    }
    sub_249F74AF4();
    swift_allocError();
    *v31 = 5;
    swift_willThrow();
    sub_249F990A0((uint64_t)v51, &qword_2578FFD40);
    return v2;
  }
  if (!swift_dynamicCast())
  {
LABEL_12:
    if (swift_dynamicCast() && v55[0] - 1 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
      sub_24A01EBB0();
      v2 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v51, v52);
      v23 = v50;
      sub_24A01EBF8();
      if (!v23)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
        v37 = v49;
        v38 = sub_24A01EBD4();
        v39 = (uint64_t)v41;
        MEMORY[0x24BD06AD4](v38);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
        v51[0] = 0;
        v51[1] = 0xE000000000000000;
        sub_24A01F2F4();
        swift_bridgeObjectRelease();
        v51[0] = 0xD00000000000001DLL;
        v51[1] = 0x800000024A023BA0;
        v40 = v46;
        sub_24A01EBC8();
        sub_24A01EBE0();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v48);
        sub_24A01EEBC();
        swift_bridgeObjectRelease();
        v2 = sub_249FE410C(v39, v51[0], v51[1]);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v44);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v37);
        return v2;
      }
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  if (v55[0] && v55[0] != 3)
  {
    if (v55[0] == 4)
    {
      v2 = (uint64_t)sub_249FE479C(0xD00000000000001ALL, 0x800000024A023BC0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
      return v2;
    }
    goto LABEL_12;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
  sub_24A01EBBC();
  v2 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v51, v52);
  v33 = v50;
  sub_24A01EBF8();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
  if (!v33)
  {
    v34 = v49;
    v35 = sub_24A01EBD4();
    MEMORY[0x24BD06AD4](v35);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
    v51[0] = 0;
    v51[1] = 0xE000000000000000;
    sub_24A01F2F4();
    swift_bridgeObjectRelease();
    strcpy((char *)v51, "face2word_ota_");
    HIBYTE(v51[1]) = -18;
    v36 = v46;
    sub_24A01EBC8();
    sub_24A01EBE0();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
    sub_24A01EEBC();
    swift_bridgeObjectRelease();
    v2 = sub_249FE410C((uint64_t)v14, v51[0], v51[1]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v34);
  }
  return v2;
}

uint64_t VUGallery.keyModalities(for:client:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  char *v29;
  NSObject *v30;
  os_signpost_type_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  uint8_t *v38;
  _QWORD *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  char *v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  _BYTE *v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  const char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v4 = v2;
  v75 = (_QWORD *)sub_24A01EBA4();
  v7 = *(v75 - 1);
  MEMORY[0x24BDAC7A8](v75);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A01ED54();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_24A01ED24();
  v67 = *(_QWORD *)(v73 - 8);
  v12 = MEMORY[0x24BDAC7A8](v73);
  v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)&v62 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v74 = (char *)&v62 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CAC08);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (const char *)*a2;
  v21 = *(_QWORD *)(v4 + 24);
  v76 = v4;
  v71 = v20;
  v77 = (char)v20;
  v78 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544CA248);
  v69 = v21;
  sub_24A01F138();
  v68 = v3;
  v22 = v80;
  v23 = *(_QWORD *)(v80 + 16);
  v24 = type metadata accessor for VUGallery.TagView(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (v23)
  {
    sub_249FEEED8(v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), (uint64_t)v19);
    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v19, v26, 1, v24);
  swift_bridgeObjectRelease();
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24);
  v28 = v75;
  if (v27 == 1)
  {
    sub_249F990A0((uint64_t)v19, (uint64_t *)&unk_2544CAC08);
  }
  else
  {
    v25 = *(_QWORD *)&v19[*(int *)(v24 + 28)];
    sub_249FEEF1C((uint64_t)v19);
    if (v25 != -1)
    {
      sub_24A01ED30();
      v29 = v74;
      sub_24A01ED0C();
      v30 = sub_24A01ED30();
      v31 = sub_24A01F174();
      v32 = sub_24A01F1E0();
      v63 = v25;
      if ((v32 & 1) != 0)
      {
        v33 = v67;
        v75 = *(_QWORD **)(v67 + 16);
        v35 = v72;
        v34 = v73;
        ((void (*)(char *, char *, uint64_t))v75)(v72, v29, v73);
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        v37 = sub_24A01ED18();
        _os_signpost_emit_with_name_impl(&dword_249F70000, v30, v31, v37, "keyModalities", "", v36, 2u);
        v38 = v36;
        v29 = v74;
        MEMORY[0x24BD07950](v38, -1, -1);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
        v39 = v75;
      }
      else
      {

        v33 = v67;
        v39 = *(_QWORD **)(v67 + 16);
        v35 = v72;
        v34 = v73;
      }
      v75 = v39;
      ((void (*)(char *, char *, uint64_t))v39)(v35, v29, v34);
      sub_24A01ED78();
      swift_allocObject();
      sub_24A01ED6C();
      v45 = *(uint64_t (**)(char *, uint64_t))(v33 + 8);
      v46 = v45(v29, v34);
      MEMORY[0x24BDAC7A8](v46);
      v47 = v63;
      *(&v62 - 2) = v4;
      *(&v62 - 1) = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578FFC98);
      sub_24A01F138();
      v25 = v80;
      v48 = sub_24A01ED30();
      v49 = v70;
      sub_24A01ED60();
      v50 = sub_24A01F168();
      if ((sub_24A01F1E0() & 1) != 0)
      {
        LODWORD(v74) = v50;
        swift_retain();
        v51 = v64;
        sub_24A01ED84();
        swift_release();
        v53 = v65;
        v52 = v66;
        if ((*(unsigned int (**)(char *, uint64_t))(v65 + 88))(v51, v66) == *MEMORY[0x24BEE7810])
        {
          v54 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
          v54 = "";
        }
        v71 = v54;
        v56 = v72;
        v55 = v73;
        ((void (*)(char *, char *, uint64_t))v75)(v72, v49, v73);
        v57 = v49;
        v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v58 = 0;
        v59 = sub_24A01ED18();
        _os_signpost_emit_with_name_impl(&dword_249F70000, v48, (os_signpost_type_t)v74, v59, "keyModalities", v71, v58, 2u);
        MEMORY[0x24BD07950](v58, -1, -1);

        v45(v57, v55);
        swift_release();
        v45(v56, v55);
      }
      else
      {

        v45(v49, v34);
        swift_release();
      }
      return v25;
    }
  }
  (*(void (**)(char *, uint64_t, _QWORD *))(v7 + 16))(v9, a1, v28);
  v40 = sub_24A01ED90();
  v41 = sub_24A01F0E4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v80 = swift_slowAlloc();
    *(_DWORD *)v42 = 136315394;
    v43 = sub_24A01EB74();
    v79 = sub_249F8AAE8(v43, v44, &v80);
    sub_24A01F1F8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v7 + 8))(v9, v28);
    *(_WORD *)(v42 + 12) = 2080;
    __asm { BR              X9 }
  }

  (*(void (**)(char *, _QWORD *))(v7 + 8))(v9, v28);
  sub_249F74AF4();
  swift_allocError();
  *v60 = 3;
  swift_willThrow();
  return v25;
}

