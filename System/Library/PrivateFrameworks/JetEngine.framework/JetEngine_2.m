uint64_t sub_19CDB0BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t *a5@<X5>, uint64_t (*a6)(uint64_t *, uint64_t)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t started;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  char v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_signpost_id_t v46;
  uint64_t v47;
  uint8_t *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  char *v53;
  os_signpost_type_t v54;
  char *v55;
  uint64_t v56;
  const char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint8_t *v61;
  os_signpost_id_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[5];
  _QWORD v88[5];
  char v89;
  uint64_t v90;

  v76 = (char *)a7;
  v81 = a2;
  v82 = a3;
  v14 = sub_19CFDF1E8();
  v78 = *(_QWORD *)(v14 - 8);
  v79 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v77 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_19CFDF1AC();
  v17 = *(_QWORD *)(v85 - 8);
  v19 = MEMORY[0x1E0C80A78](v85, v18);
  v84 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19, v21);
  v24 = (char *)&v65 - v23;
  MEMORY[0x1E0C80A78](v22, v25);
  v27 = (char *)&v65 - v26;
  v83 = a4;
  sub_19CCF8C5C(a1, (uint64_t)v88, a4);
  if ((v89 & 1) != 0)
    return a6(v88, a8);
  v73 = a6;
  v29 = (void (*)(uint64_t))v88[0];
  v80 = v88[1];
  v30 = __swift_instantiateConcreteTypeFromMangledName(a5);
  started = type metadata accessor for StartUpPerformanceEvent();
  v69 = v30;
  if (v30 == started)
  {
    v70 = 0;
  }
  else
  {
    type metadata accessor for BaseObjectGraph();
    v32 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v87[0] = v32;
    swift_retain();
    swift_task_localValuePush();
    v33 = swift_bridgeObjectRetain();
    v70 = sub_19CD49828(v33);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
  }
  v72 = a8;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v34 = sub_19CFDF1DC();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v36 = sub_19CFDF1C4();
  v37 = sub_19CFDFE84();
  v38 = sub_19CFDFF2C();
  v71 = a1;
  v75 = v17;
  if ((v38 & 1) != 0)
  {
    v66 = a9;
    v74 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v39 = v24;
    v40 = v24;
    v41 = v85;
    v74(v40, v27, v85);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v68 = v29;
    v44 = v43;
    v87[0] = v43;
    v67 = v35;
    *(_DWORD *)v42 = 136315138;
    v90 = sub_19CD37070((uint64_t)v76, v66, v87);
    v45 = v41;
    sub_19CFDFFC8();
    v46 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v36, v37, v46, "MakeLazyDependency", "object=%s", v42, 0xCu);
    swift_arrayDestroy();
    v47 = v44;
    v29 = v68;
    MEMORY[0x1A1ADBE9C](v47, -1, -1);
    v48 = v42;
    a1 = v71;
    MEMORY[0x1A1ADBE9C](v48, -1, -1);

    v24 = v39;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v39, v45);
    v49 = v74;
  }
  else
  {

    v49 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v45 = v85;
  }
  v76 = v27;
  v74 = v49;
  v49(v24, v27, v45);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  v50 = v80;
  swift_retain();
  v51 = v86;
  sub_19CDA69AC(v29, v50, v81, v82);
  v86 = v51;
  sub_19CCECFE4(a1, v83);
  swift_release();
  v52 = sub_19CFDF1C4();
  v53 = v84;
  sub_19CFDF1F4();
  v54 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    swift_retain();
    v55 = v77;
    sub_19CFDF218();
    swift_release();
    v56 = v78;
    if ((*(unsigned int (**)(char *, uint64_t))(v78 + 88))(v55, v79) == *MEMORY[0x1E0DF2190])
    {
      v57 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v79);
      v57 = "";
    }
    v60 = v84;
    v45 = v85;
    v74(v24, v84, v85);
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    v62 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v52, v54, v62, "MakeLazyDependency", v57, v61, 2u);
    MEMORY[0x1A1ADBE9C](v61, -1, -1);

    v59 = *(void (**)(char *, uint64_t))(v75 + 8);
    v59(v60, v45);
    v59(v24, v45);
    a1 = v71;
  }
  else
  {

    v58 = v53;
    v59 = *(void (**)(char *, uint64_t))(v75 + 8);
    v59(v58, v45);
  }
  v63 = v72;
  v64 = (uint64_t)v76;
  if (v70)
  {
    v90 = v69;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v90);
    swift_release();
    swift_release();
    swift_release_n();
    v59((char *)v64, v45);
  }
  else
  {
    v59(v76, v45);
    swift_release();
    swift_release();
  }
  sub_19CCD5B84((uint64_t)v87, a1);
  *(_BYTE *)(a1 + 40) = 1;
  return v73(v87, v63);
}

__n128 sub_19CDB1254@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __n128 result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  void (*v33)(ValueMetadata *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_signpost_type_t v38;
  char v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  os_signpost_id_t v43;
  uint64_t v44;
  uint8_t *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  char *v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint8_t *v60;
  os_signpost_id_t v61;
  const char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  ValueMetadata *v87;
  _OWORD v88[5];
  _OWORD v89[5];
  char v90;
  uint64_t v91;

  v81 = a3;
  v80 = a2;
  v6 = sub_19CFDF278();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v79 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF1E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v77 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDF1AC();
  v85 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v82 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v68 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v86 = (char *)&v68 - v23;
  sub_19CCF8C5C(a1, (uint64_t)v89, &qword_1EE43DE68);
  if (v90 == 1)
  {
    v24 = v89[3];
    v25 = v89[4];
    *(_OWORD *)(a4 + 32) = v89[2];
    *(_OWORD *)(a4 + 48) = v24;
    *(_OWORD *)(a4 + 64) = v25;
    result = (__n128)v89[1];
    *(_OWORD *)a4 = v89[0];
    *(__n128 *)(a4 + 16) = result;
  }
  else
  {
    v68 = v11;
    v69 = v10;
    v74 = a4;
    v83 = *((_QWORD *)&v89[0] + 1);
    v72 = *(void (**)(uint64_t))&v89[0];
    type metadata accessor for BaseObjectGraph();
    v27 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    *(_QWORD *)&v88[0] = v27;
    swift_retain();
    swift_task_localValuePush();
    v28 = swift_bridgeObjectRetain();
    v29 = sub_19CD49828(v28);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v29
      && ((v30 = swift_conformsToProtocol2()) != 0 ? (v31 = v30) : (v31 = 0),
          v30 ? (v32 = &type metadata for JetPackAssetSession.Configuration) : (v32 = 0),
          v32))
    {
      v33 = *(void (**)(ValueMetadata *, uint64_t))(v31 + 8);
      swift_retain();
      v33(v32, v31);
      v34 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      swift_release();
    }
    else
    {
      v34 = 0;
    }
    v84 = v34;
    v78 = v14;
    v35 = v86;
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v70 = v7;
    v71 = v6;
    v36 = sub_19CFDF1DC();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v37 = sub_19CFDF1C4();
    v38 = sub_19CFDFE84();
    v39 = sub_19CFDFF2C();
    v75 = a1;
    v73 = v29;
    if ((v39 & 1) != 0)
    {
      v76 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      v40 = v78;
      v76(v20, v35, v78);
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      *(_QWORD *)&v88[0] = v42;
      *(_DWORD *)v41 = 136315138;
      v87 = (ValueMetadata *)sub_19CD37070(0x72756769666E6F43, 0xED00006E6F697461, (uint64_t *)v88);
      a1 = v75;
      sub_19CFDFFC8();
      v43 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v37, v38, v43, "MakeLazyDependency", "object=%s", v41, 0xCu);
      swift_arrayDestroy();
      v44 = v42;
      v29 = v73;
      MEMORY[0x1A1ADBE9C](v44, -1, -1);
      v45 = v41;
      v35 = v86;
      MEMORY[0x1A1ADBE9C](v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v20, v40);
      v46 = v76;
    }
    else
    {

      v46 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      v40 = v78;
    }
    v76 = v46;
    v46(v20, v35, v40);
    sub_19CFDF20C();
    swift_allocObject();
    sub_19CFDF200();
    v47 = v83;
    swift_retain();
    v48 = v91;
    sub_19CDA69AC(v72, v47, v80, v81);
    v91 = v48;
    sub_19CCECFE4(a1, &qword_1EE43DE68);
    swift_release();
    v49 = sub_19CFDF1C4();
    v50 = v82;
    sub_19CFDF1F4();
    v51 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      LODWORD(v81) = v51;
      swift_retain();
      v52 = v77;
      sub_19CFDF218();
      swift_release();
      v53 = v68;
      v54 = v69;
      if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v52, v69) == *MEMORY[0x1E0DF2190])
      {
        v55 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
        v55 = "";
      }
      v57 = v50;
      v58 = v50;
      v59 = v78;
      v76(v20, v57, v78);
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      v61 = sub_19CFDF194();
      v62 = v55;
      v40 = v59;
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v49, (os_signpost_type_t)v81, v61, "MakeLazyDependency", v62, v60, 2u);
      MEMORY[0x1A1ADBE9C](v60, -1, -1);

      v56 = *(void (**)(char *, uint64_t))(v85 + 8);
      v56(v58, v59);
      v56(v20, v59);
      a1 = v75;
      v29 = v73;
    }
    else
    {

      v56 = *(void (**)(char *, uint64_t))(v85 + 8);
      v56(v50, v40);
    }
    if (v84)
    {
      v63 = v70;
      v64 = v79;
      v65 = v71;
      (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v79, *MEMORY[0x1E0CCE198], v71);
      swift_retain();
      sub_19CFDF2A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    }
    if (v29)
    {
      v87 = &type metadata for JetPackAssetSession.Configuration;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v87);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v56(v86, v40);
    }
    else
    {
      v56(v86, v40);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19CD60F34((uint64_t)v88, a1);
    *(_BYTE *)(a1 + 80) = 1;
    v66 = v88[3];
    v67 = v74;
    *(_OWORD *)(v74 + 32) = v88[2];
    *(_OWORD *)(v67 + 48) = v66;
    *(_OWORD *)(v67 + 64) = v88[4];
    result = (__n128)v88[1];
    *(_OWORD *)v67 = v88[0];
    *(__n128 *)(v67 + 16) = result;
  }
  return result;
}

uint64_t sub_19CDB1ACC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_signpost_type_t v46;
  char v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  os_signpost_id_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  char *v56;
  os_signpost_type_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(_QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v78 = a7;
  v79 = a8;
  v85 = a3;
  v86 = a4;
  v84 = a2;
  v13 = sub_19CFDF278();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v83 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_19CFDF1E8();
  v81 = *(_QWORD *)(v17 - 8);
  v82 = v17;
  MEMORY[0x1E0C80A78](v17, v18);
  v80 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = a5;
  v91 = a5(0);
  MEMORY[0x1E0C80A78](v91, v20);
  v22 = (char *)&v70 - v21;
  v92 = sub_19CFDF1AC();
  v94 = *(_QWORD *)(v92 - 8);
  v24 = MEMORY[0x1E0C80A78](v92, v23);
  v89 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24, v26);
  v29 = (char *)&v70 - v28;
  MEMORY[0x1E0C80A78](v27, v30);
  v95 = (char *)&v70 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(a6);
  MEMORY[0x1E0C80A78](v32, v33);
  v35 = (char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = a1;
  v87 = a6;
  sub_19CCF8C5C(a1, (uint64_t)v35, a6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = v35;
  }
  else
  {
    v77 = a9;
    v71 = *(void (**)(uint64_t))v35;
    v90 = *((_QWORD *)v35 + 1);
    type metadata accessor for BaseObjectGraph();
    v36 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v99 = v36;
    swift_retain();
    swift_task_localValuePush();
    v37 = swift_bridgeObjectRetain();
    v38 = sub_19CD49828(v37);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v38)
    {
      v39 = v91;
      v40 = swift_conformsToProtocol2();
      if (v40)
        v41 = v40;
      else
        v41 = 0;
      if (!v40)
        v39 = 0;
      if (v39)
      {
        v42 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        swift_retain();
        v42(v39, v41);
        v39 = sub_19CCCCA74();
        swift_release();
        swift_retain();
        sub_19CFDF29C();
        swift_release();
      }
    }
    else
    {
      v39 = 0;
    }
    v88 = v39;
    v72 = v38;
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v73 = v32;
    v74 = v14;
    v75 = v13;
    v43 = sub_19CFDF1DC();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v44 = v95;
    sub_19CFDF17C();
    v45 = sub_19CFDF1C4();
    v46 = sub_19CFDFE84();
    v47 = sub_19CFDFF2C();
    v76 = v22;
    if ((v47 & 1) != 0)
    {
      v84 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      v48 = v92;
      v84(v29, v44, v92);
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v99 = v50;
      *(_DWORD *)v49 = 136315138;
      v98 = sub_19CD37070(v78, v79, &v99);
      v22 = v76;
      sub_19CFDFFC8();
      v51 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v45, v46, v51, "MakeLazyDependency", "object=%s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A1ADBE9C](v50, -1, -1);
      v44 = v95;
      MEMORY[0x1A1ADBE9C](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v29, v48);
      v52 = v84;
    }
    else
    {

      v52 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      v48 = v92;
    }
    v84 = v52;
    v52(v29, v44, v48);
    sub_19CFDF20C();
    swift_allocObject();
    sub_19CFDF200();
    v53 = v90;
    swift_retain();
    v54 = v97;
    sub_19CDA69AC(v71, v53, v85, v86);
    v97 = v54;
    sub_19CCECFE4(v93, v87);
    swift_release();
    v55 = sub_19CFDF1C4();
    v56 = v89;
    sub_19CFDF1F4();
    v57 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      swift_retain();
      v58 = v80;
      sub_19CFDF218();
      swift_release();
      v60 = v81;
      v59 = v82;
      if ((*(unsigned int (**)(char *, uint64_t))(v81 + 88))(v58, v82) == *MEMORY[0x1E0DF2190])
      {
        v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
        v61 = "";
      }
      v48 = v92;
      v84(v29, v56, v92);
      v63 = v56;
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      v65 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v55, v57, v65, "MakeLazyDependency", v61, v64, 2u);
      MEMORY[0x1A1ADBE9C](v64, -1, -1);

      v62 = *(void (**)(char *, uint64_t))(v94 + 8);
      v62(v63, v48);
      v62(v29, v48);
      v22 = v76;
    }
    else
    {

      v62 = *(void (**)(char *, uint64_t))(v94 + 8);
      v62(v56, v48);
    }
    v66 = v75;
    v67 = v74;
    if (v88)
    {
      v68 = v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v83, *MEMORY[0x1E0CCE198], v75);
      swift_retain();
      sub_19CFDF2A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v66);
    }
    if (v72)
    {
      v99 = v91;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)(&v99);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v62(v95, v48);
    }
    else
    {
      v62(v95, v48);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19CCFECEC((uint64_t)v22, v93, v96);
    swift_storeEnumTagMultiPayload();
    a9 = v77;
  }
  return sub_19CCFE8AC((uint64_t)v22, a9, v96);
}

double sub_19CDB22B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  void (*v32)(ValueMetadata *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  char v38;
  uint8_t *v39;
  uint64_t v40;
  os_signpost_id_t v41;
  uint64_t v42;
  uint8_t *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  void (*v54)(char *, uint64_t);
  const char *v55;
  char *v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  _OWORD v87[2];
  __int128 v88;
  uint64_t v89;
  char v90;
  ValueMetadata *v91;

  v77 = a3;
  v76 = a2;
  v6 = sub_19CFDF278();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF1E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v74 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDF1AC();
  v81 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v80 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v64 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v82 = (char *)&v64 - v23;
  sub_19CCF8C5C(a1, (uint64_t)v87, &qword_1EE43DE28);
  if (v90 == 1)
  {
    v24 = v87[1];
    *(_OWORD *)a4 = v87[0];
    *(_OWORD *)(a4 + 16) = v24;
    result = *(double *)&v88;
    *(_OWORD *)(a4 + 32) = v88;
    *(_QWORD *)(a4 + 48) = v89;
  }
  else
  {
    v66 = v11;
    v67 = v10;
    v72 = (_OWORD *)a4;
    v78 = *((_QWORD *)&v87[0] + 1);
    v69 = *(void (**)(uint64_t))&v87[0];
    type metadata accessor for BaseObjectGraph();
    v26 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    *(_QWORD *)&v84[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    v27 = swift_bridgeObjectRetain();
    v28 = sub_19CD49828(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v28
      && ((v29 = swift_conformsToProtocol2()) != 0 ? (v30 = v29) : (v30 = 0),
          v29 ? (v31 = &type metadata for DiskJetPackLoader) : (v31 = 0),
          v31))
    {
      v32 = *(void (**)(ValueMetadata *, uint64_t))(v30 + 8);
      swift_retain();
      v32(v31, v30);
      v33 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      swift_release();
    }
    else
    {
      v33 = 0;
    }
    v79 = v33;
    v68 = v9;
    v71 = v6;
    v34 = v82;
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v35 = sub_19CFDF1DC();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v36 = sub_19CFDF1C4();
    v37 = sub_19CFDFE84();
    v38 = sub_19CFDFF2C();
    v70 = v28;
    if ((v38 & 1) != 0)
    {
      v73 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
      v73(v20, v34, v14);
      v64 = v14;
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)&v84[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v91 = (ValueMetadata *)sub_19CD37070(0xD000000000000011, 0x800000019D06D8C0, (uint64_t *)v84);
      v14 = v64;
      sub_19CFDFFC8();
      v41 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v36, v37, v41, "MakeLazyDependency", "object=%s", v39, 0xCu);
      swift_arrayDestroy();
      v42 = v40;
      v28 = v70;
      MEMORY[0x1A1ADBE9C](v42, -1, -1);
      v43 = v39;
      v34 = v82;
      MEMORY[0x1A1ADBE9C](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v14);
      v44 = v73;
    }
    else
    {

      v44 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    }
    v73 = v44;
    v44(v20, v34, v14);
    sub_19CFDF20C();
    swift_allocObject();
    sub_19CFDF200();
    v45 = v78;
    swift_retain();
    v46 = v83;
    sub_19CDA69AC(v69, v45, v76, v77);
    v83 = v46;
    sub_19CCECFE4(a1, &qword_1EE43DE28);
    swift_release();
    v47 = sub_19CFDF1C4();
    v48 = v80;
    sub_19CFDF1F4();
    v49 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      LODWORD(v77) = v49;
      swift_retain();
      v50 = v74;
      sub_19CFDF218();
      swift_release();
      v51 = v66;
      v52 = v67;
      v53 = (*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v50, v67) == *MEMORY[0x1E0DF2190];
      v65 = a1;
      if (v53)
      {
        v55 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
        v55 = "";
      }
      v56 = v80;
      v73(v20, v80, v14);
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      v58 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v47, (os_signpost_type_t)v77, v58, "MakeLazyDependency", v55, v57, 2u);
      MEMORY[0x1A1ADBE9C](v57, -1, -1);

      v54 = *(void (**)(char *, uint64_t))(v81 + 8);
      v54(v56, v14);
      v54(v20, v14);
      a1 = v65;
      v28 = v70;
    }
    else
    {

      v54 = *(void (**)(char *, uint64_t))(v81 + 8);
      v54(v48, v14);
    }
    v59 = v71;
    if (v79)
    {
      v60 = v75;
      v61 = v68;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v68, *MEMORY[0x1E0CCE198], v71);
      swift_retain();
      sub_19CFDF2A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    }
    if (v28)
    {
      v91 = &type metadata for DiskJetPackLoader;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v91);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v54(v82, v14);
    }
    else
    {
      v54(v82, v14);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19CCD6834((uint64_t)v84, a1);
    *(_BYTE *)(a1 + 56) = 1;
    v62 = v84[1];
    v63 = v72;
    *v72 = v84[0];
    v63[1] = v62;
    result = *(double *)&v85;
    v63[2] = v85;
    *((_QWORD *)v63 + 6) = v86;
  }
  return result;
}

double sub_19CDB2AB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  void (*v32)(ValueMetadata *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  char v38;
  uint8_t *v39;
  uint64_t v40;
  os_signpost_id_t v41;
  uint64_t v42;
  uint8_t *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  void (*v54)(char *, uint64_t);
  const char *v55;
  char *v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  _OWORD v87[2];
  __int128 v88;
  uint64_t v89;
  char v90;
  ValueMetadata *v91;

  v77 = a3;
  v76 = a2;
  v6 = sub_19CFDF278();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF1E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v74 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDF1AC();
  v81 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v80 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v64 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v82 = (char *)&v64 - v23;
  sub_19CCF8C5C(a1, (uint64_t)v87, &qword_1EE43DE18);
  if (v90 == 1)
  {
    v24 = v87[1];
    *(_OWORD *)a4 = v87[0];
    *(_OWORD *)(a4 + 16) = v24;
    result = *(double *)&v88;
    *(_OWORD *)(a4 + 32) = v88;
    *(_QWORD *)(a4 + 48) = v89;
  }
  else
  {
    v66 = v11;
    v67 = v10;
    v72 = (_OWORD *)a4;
    v78 = *((_QWORD *)&v87[0] + 1);
    v69 = *(void (**)(uint64_t))&v87[0];
    type metadata accessor for BaseObjectGraph();
    v26 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    *(_QWORD *)&v84[0] = v26;
    swift_retain();
    swift_task_localValuePush();
    v27 = swift_bridgeObjectRetain();
    v28 = sub_19CD49828(v27);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v28
      && ((v29 = swift_conformsToProtocol2()) != 0 ? (v30 = v29) : (v30 = 0),
          v29 ? (v31 = &type metadata for InMemoryJetPackLoader) : (v31 = 0),
          v31))
    {
      v32 = *(void (**)(ValueMetadata *, uint64_t))(v30 + 8);
      swift_retain();
      v32(v31, v30);
      v33 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      swift_release();
    }
    else
    {
      v33 = 0;
    }
    v79 = v33;
    v68 = v9;
    v71 = v6;
    v34 = v82;
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v35 = sub_19CFDF1DC();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v36 = sub_19CFDF1C4();
    v37 = sub_19CFDFE84();
    v38 = sub_19CFDFF2C();
    v70 = v28;
    if ((v38 & 1) != 0)
    {
      v73 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
      v73(v20, v34, v14);
      v64 = v14;
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)&v84[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v91 = (ValueMetadata *)sub_19CD37070(0xD000000000000015, 0x800000019D06D8A0, (uint64_t *)v84);
      v14 = v64;
      sub_19CFDFFC8();
      v41 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v36, v37, v41, "MakeLazyDependency", "object=%s", v39, 0xCu);
      swift_arrayDestroy();
      v42 = v40;
      v28 = v70;
      MEMORY[0x1A1ADBE9C](v42, -1, -1);
      v43 = v39;
      v34 = v82;
      MEMORY[0x1A1ADBE9C](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v14);
      v44 = v73;
    }
    else
    {

      v44 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    }
    v73 = v44;
    v44(v20, v34, v14);
    sub_19CFDF20C();
    swift_allocObject();
    sub_19CFDF200();
    v45 = v78;
    swift_retain();
    v46 = v83;
    sub_19CDA69AC(v69, v45, v76, v77);
    v83 = v46;
    sub_19CCECFE4(a1, &qword_1EE43DE18);
    swift_release();
    v47 = sub_19CFDF1C4();
    v48 = v80;
    sub_19CFDF1F4();
    v49 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      LODWORD(v77) = v49;
      swift_retain();
      v50 = v74;
      sub_19CFDF218();
      swift_release();
      v51 = v66;
      v52 = v67;
      v53 = (*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v50, v67) == *MEMORY[0x1E0DF2190];
      v65 = a1;
      if (v53)
      {
        v55 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
        v55 = "";
      }
      v56 = v80;
      v73(v20, v80, v14);
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      v58 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v47, (os_signpost_type_t)v77, v58, "MakeLazyDependency", v55, v57, 2u);
      MEMORY[0x1A1ADBE9C](v57, -1, -1);

      v54 = *(void (**)(char *, uint64_t))(v81 + 8);
      v54(v56, v14);
      v54(v20, v14);
      a1 = v65;
      v28 = v70;
    }
    else
    {

      v54 = *(void (**)(char *, uint64_t))(v81 + 8);
      v54(v48, v14);
    }
    v59 = v71;
    if (v79)
    {
      v60 = v75;
      v61 = v68;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v68, *MEMORY[0x1E0CCE198], v71);
      swift_retain();
      sub_19CFDF2A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    }
    if (v28)
    {
      v91 = &type metadata for InMemoryJetPackLoader;
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v91);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      v54(v82, v14);
    }
    else
    {
      v54(v82, v14);
      swift_release();
      swift_release();
      swift_release();
    }
    sub_19CCD6780((uint64_t)v84, a1);
    *(_BYTE *)(a1 + 56) = 1;
    v62 = v84[1];
    v63 = v72;
    *v72 = v84[0];
    v63[1] = v62;
    result = *(double *)&v85;
    v63[2] = v85;
    *((_QWORD *)v63 + 6) = v86;
  }
  return result;
}

uint64_t sub_19CDB32B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD **__return_ptr, uint64_t);
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  ValueMetadata *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_signpost_type_t v31;
  char v32;
  uint64_t v33;
  uint8_t *v34;
  ValueMetadata *v35;
  os_signpost_id_t v36;
  ValueMetadata *v37;
  uint8_t *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void (*v41)(_QWORD **__return_ptr, uint64_t);
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char v45;
  NSObject *v46;
  char *v47;
  char v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint8_t *v56;
  os_signpost_id_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  const char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  void (*v70)(_QWORD **__return_ptr, uint64_t);
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  ValueMetadata *v77;

  v5 = v4;
  v68 = a3;
  v69 = (_QWORD *)a4;
  v7 = sub_19CFDF1E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDF1AC();
  v75 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v59 - v16;
  MEMORY[0x1E0C80A78](v15, v18);
  v21 = (char *)&v59 - v20;
  v22 = *(void (**)(_QWORD **__return_ptr, uint64_t))a1;
  v23 = *(_QWORD *)(a1 + 8);
  v24 = *(unsigned __int8 *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 17) & 1) != 0)
    return *(_QWORD *)a1;
  v60 = v8;
  v61 = v7;
  v66 = v19;
  v70 = v22;
  v72 = v24;
  type metadata accessor for BaseObjectGraph();
  v71 = v23;
  swift_retain();
  v26 = (ValueMetadata *)static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v77 = v26;
  swift_retain();
  swift_task_localValuePush();
  v27 = swift_bridgeObjectRetain();
  v63 = sub_19CD49828(v27);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v28 = sub_19CFDF1DC();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v62 = v29;
  v30 = sub_19CFDF1C4();
  v31 = sub_19CFDFE84();
  v32 = sub_19CFDFF2C();
  v73 = v11;
  v67 = v21;
  if ((v32 & 1) != 0)
  {
    v33 = v75;
    v64 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    v64(v17, v21, v11);
    v74 = v4;
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = (ValueMetadata *)swift_slowAlloc();
    v77 = v35;
    *(_DWORD *)v34 = 136315138;
    v76 = sub_19CD37070(0xD000000000000038, 0x800000019D06D740, (uint64_t *)&v77);
    v5 = v74;
    sub_19CFDFFC8();
    v36 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v30, v31, v36, "MakeLazyDependency", "object=%s", v34, 0xCu);
    swift_arrayDestroy();
    v37 = v35;
    v21 = v67;
    MEMORY[0x1A1ADBE9C](v37, -1, -1);
    v38 = v34;
    v11 = v73;
    MEMORY[0x1A1ADBE9C](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v11);
    v39 = v64;
  }
  else
  {

    v39 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  }
  v64 = v39;
  v39(v17, v21, v11);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  v40 = v71;
  swift_retain();
  v41 = v70;
  v42 = sub_19CDA6C4C(v70, v40, v68, (uint64_t)v69);
  v68 = v43;
  v69 = v42;
  v45 = v44;
  sub_19CDB58CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
  sub_19CDB58CC((uint64_t)v41, v40, v72, 0);
  v46 = sub_19CFDF1C4();
  v47 = v66;
  sub_19CFDF1F4();
  LODWORD(v62) = sub_19CFDFE78();
  v48 = sub_19CFDFF2C();
  v74 = v5;
  if ((v48 & 1) != 0)
  {
    swift_retain();
    v49 = v65;
    sub_19CFDF218();
    swift_release();
    v51 = v60;
    v50 = v61;
    if ((*(unsigned int (**)(const char *, uint64_t))(v60 + 88))(v49, v61) == *MEMORY[0x1E0DF2190])
    {
      v52 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(const char *, uint64_t))(v51 + 8))(v49, v50);
      v52 = "";
    }
    v65 = v52;
    v54 = v66;
    v55 = v73;
    v64(v17, v66, v73);
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    v57 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v46, (os_signpost_type_t)v62, v57, "MakeLazyDependency", v65, v56, 2u);
    MEMORY[0x1A1ADBE9C](v56, -1, -1);

    v53 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v53((uint64_t)v54, v55);
    v53((uint64_t)v17, v55);
  }
  else
  {

    v53 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v53((uint64_t)v47, v11);
  }
  if (v63)
  {
    v77 = &type metadata for IntentDispatchOptions.BadOrderingCanary;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v77);
    swift_release();
    swift_release();
    sub_19CDB58CC((uint64_t)v70, v71, v72, 0);
    swift_release();
    v53((uint64_t)v67, v73);
  }
  else
  {
    v53((uint64_t)v67, v73);
    sub_19CDB58CC((uint64_t)v70, v71, v72, 0);
    swift_release();
  }
  v58 = v68;
  result = (uint64_t)v69;
  *(_QWORD *)a1 = v69;
  *(_QWORD *)(a1 + 8) = v58;
  *(_BYTE *)(a1 + 16) = v45;
  *(_BYTE *)(a1 + 17) = 1;
  return result;
}

uint64_t sub_19CDB38C4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_19CDB38E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDB390C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_19CDB3940()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13[6];
  unint64_t v14;
  unint64_t v15;

  sub_19CCE5204(0, &qword_1ECEB24A8);
  v13[3] = 0;
  v13[4] = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v13[0] = 0xD000000000000015;
  v13[1] = 0x800000019D06DAA0;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v14 = 0xD000000000000015;
  v15 = 0x800000019D06DAA0;
  if (*(_QWORD *)(sub_19CDA71F4(*(_QWORD *)(v0 + 16)) + 16))
  {
    v13[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDD0);
    sub_19CDB75C4();
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, " Did you mean ");
    HIBYTE(v13[1]) = -18;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
  }
  else
  {
    swift_bridgeObjectRelease();
    v1 = swift_bridgeObjectRetain();
    v2 = sub_19CDFDD88(v1);
    swift_bridgeObjectRelease();
    v13[0] = (uint64_t)v2;
    swift_retain();
    sub_19CF52948(v13);
    swift_release();
    v3 = *(_QWORD *)(v13[0] + 16);
    if (v3)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      sub_19CD3C8F8(0, v3, 0);
      v4 = 0;
      v5 = v12;
      do
      {
        v13[0] = 60;
        v13[1] = 0xE100000000000000;
        sub_19CFE0A90();
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CFDF698();
        v6 = v13[0];
        v7 = v13[1];
        v9 = *(_QWORD *)(v12 + 16);
        v8 = *(_QWORD *)(v12 + 24);
        if (v9 >= v8 >> 1)
          sub_19CD3C8F8(v8 > 1, v9 + 1, 1);
        ++v4;
        *(_QWORD *)(v12 + 16) = v9 + 1;
        v10 = v12 + 16 * v9;
        *(_QWORD *)(v10 + 32) = v6;
        *(_QWORD *)(v10 + 40) = v7;
      }
      while (v3 != v4);
      swift_release();
    }
    else
    {
      swift_release();
      v5 = MEMORY[0x1E0DEE9D8];
    }
    v13[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD05BA0((unint64_t *)&qword_1ECEB32D8, &qword_1ECEB32D0, MEMORY[0x1E0DEAF20]);
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, " Candidates: ");
    HIWORD(v13[1]) = -4864;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_19CDB3D70(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

_QWORD *assignWithCopy for JetEngineBootstrap.URLProtocolHandler(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JetEngineBootstrap.URLProtocolHandler(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetEngineBootstrap.URLProtocolHandler(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JetEngineBootstrap.URLProtocolHandler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_19CDB3FAC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43DB80);
}

void type metadata accessor for SignpostComponent(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43DB88);
}

void type metadata accessor for MediaActivityType(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DB90);
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_19CDB4034(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 152))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_19CDB4090(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

void type metadata accessor for __sFILE(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43BEA8);
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43DBA0);
}

void type metadata accessor for AMSMediaArtworkCropStyle(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43DBA8);
}

void type metadata accessor for AMSMediaArtworkFormat(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DBB0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43D328);
}

uint64_t sub_19CDB416C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_19CDB418C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DBC0);
}

uint64_t getEnumTagSinglePayload for MonotonicTime(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MonotonicTime(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_19CD16B60(a1, qword_1EE436EF8);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DBD0);
}

void type metadata accessor for PropertyListFormat(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DBE0);
}

void type metadata accessor for CFRunLoopTimer(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DBF0);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for CachePolicy(uint64_t a1)
{
  sub_19CD16B60(a1, qword_1EE43BF78);
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43DC00);
}

uint64_t sub_19CDB4298(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19[6];
  uint64_t v20;
  uint64_t v21;

  v19[3] = 0;
  v19[4] = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v19[0] = a1;
  v19[1] = a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v20 = a1;
  v21 = a2;
  if (*(_QWORD *)(a3(*(_QWORD *)(v3 + 16)) + 16))
  {
    v19[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDD0);
    sub_19CDB75C4();
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v19, " Did you mean ");
    HIBYTE(v19[1]) = -18;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = swift_bridgeObjectRetain();
    v8 = sub_19CDFDD88(v7);
    swift_bridgeObjectRelease();
    v19[0] = (uint64_t)v8;
    swift_retain();
    sub_19CF52948(v19);
    swift_release();
    v9 = *(_QWORD *)(v19[0] + 16);
    if (v9)
    {
      v18 = MEMORY[0x1E0DEE9D8];
      sub_19CD3C8F8(0, v9, 0);
      v10 = 0;
      v11 = v18;
      do
      {
        v19[0] = 60;
        v19[1] = 0xE100000000000000;
        sub_19CFE0A90();
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CFDF698();
        v12 = v19[0];
        v13 = v19[1];
        v15 = *(_QWORD *)(v18 + 16);
        v14 = *(_QWORD *)(v18 + 24);
        if (v15 >= v14 >> 1)
          sub_19CD3C8F8(v14 > 1, v15 + 1, 1);
        ++v10;
        *(_QWORD *)(v18 + 16) = v15 + 1;
        v16 = v18 + 16 * v15;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v13;
      }
      while (v9 != v10);
      swift_release();
    }
    else
    {
      swift_release();
      v11 = MEMORY[0x1E0DEE9D8];
    }
    v19[0] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD05BA0((unint64_t *)&qword_1ECEB32D8, &qword_1ECEB32D0, MEMORY[0x1E0DEAF20]);
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    strcpy((char *)v19, " Candidates: ");
    HIWORD(v19[1]) = -4864;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_19CDB4668()
{
  return sub_19CDB4298(0xD000000000000033, 0x800000019D06DA00, sub_19CDA7944);
}

uint64_t sub_19CDB468C()
{
  return sub_19CDB4298(0xD000000000000024, 0x800000019D06D9D0, sub_19CDA7CE0);
}

uint64_t sub_19CDB46B0()
{
  return sub_19CDB4298(0xD000000000000034, 0x800000019D06D8E0, sub_19CDA8078);
}

uint64_t sub_19CDB46D4()
{
  return sub_19CDB4298(0xD00000000000002DLL, 0x800000019D06D800, (uint64_t (*)(_QWORD))sub_19CDA8414);
}

uint64_t sub_19CDB46F8(uint64_t a1, uint64_t a2)
{
  return sub_19CDB5058(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEA950]);
}

uint64_t sub_19CDB470C(uint64_t a1, uint64_t a2)
{
  return sub_19CDB5058(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_19CDB4728()
{
  return sub_19CFE097C();
}

uint64_t sub_19CDB4730(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  char v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1A1ADABAC](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_DWORD *)a2 = v4;
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_19CDB4780(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_19CFE0994();
  *(_DWORD *)a2 = 0;
  *(_BYTE *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_19CDB47D4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_19CFE09A0();
  *a1 = result;
  return result;
}

_QWORD *sub_19CDB47F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_19CDB480C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_19CFDF560();
  *a2 = 0;
  return result;
}

uint64_t sub_19CDB4880(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_19CFDF56C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_19CDB48FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_19CFDF578();
  v2 = sub_19CFDF554();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_19CDB493C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_19CDB4948(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_19CDB4954(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_19CDB4968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1ADBD7C](&unk_19D051DF8, a3);
  return sub_19CFDF134();
}

uint64_t sub_19CDB49B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1ADBD7C](&unk_19D05195C, a3);
  return sub_19CFDF134();
}

uint64_t sub_19CDB4A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_19CFDF578();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19CDB4A28()
{
  sub_19CCC5C88((unint64_t *)&qword_1EE43E0B8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_19D052230);
  sub_19CCC5C88((unint64_t *)&unk_1EE43E0C0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_19D051FC4);
  return sub_19CFE040C();
}

uint64_t sub_19CDB4AAC()
{
  sub_19CCC5C88(&qword_1EE43DD40, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_19D0517DC);
  sub_19CCC5C88(&qword_1EE43DD48, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_19D05177C);
  return sub_19CFE040C();
}

uint64_t sub_19CDB4B30()
{
  return sub_19CCC5C88(&qword_1EE43DC70, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_19D051740);
}

uint64_t sub_19CDB4B5C()
{
  return sub_19CCC5C88(&qword_1EE43DC78, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_19D051714);
}

uint64_t sub_19CDB4B88()
{
  return sub_19CCC5C88(&qword_1EE43B640, (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey, (uint64_t)&unk_19D0517B0);
}

uint64_t sub_19CDB4BB4()
{
  sub_19CCC5C88(&qword_1EE43DD30, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkFormat, (uint64_t)&unk_19D051A50);
  sub_19CCC5C88(&qword_1EE43DD38, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkFormat, (uint64_t)&unk_19D0519F0);
  return sub_19CFE040C();
}

uint64_t sub_19CDB4C38()
{
  sub_19CCC5C88(&qword_1EE43DD20, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkCropStyle, (uint64_t)&unk_19D051BA8);
  sub_19CCC5C88(&qword_1EE43DD28, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkCropStyle, (uint64_t)&unk_19D051B48);
  return sub_19CFE040C();
}

_DWORD *sub_19CDB4CBC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_19CDB4CCC()
{
  sub_19CCC5C88(&qword_1EE43DD10, (uint64_t (*)(uint64_t))type metadata accessor for SignpostComponent, (uint64_t)&unk_19D051D68);
  sub_19CCC5C88(&qword_1EE43DD18, (uint64_t (*)(uint64_t))type metadata accessor for SignpostComponent, (uint64_t)&unk_19D051D08);
  return sub_19CFE040C();
}

uint64_t sub_19CDB4D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_19CFDF554();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_19CDB4DA4()
{
  sub_19CCC5C88(&qword_1EE43E0A8, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkColorKind, (uint64_t)&unk_19D052138);
  sub_19CCC5C88(&qword_1EE43E0B0, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkColorKind, (uint64_t)&unk_19D0520D8);
  return sub_19CFE040C();
}

uint64_t sub_19CDB4E28(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D051DF8, a1);
  return sub_19CFDF14C();
}

uint64_t sub_19CDB4E64()
{
  MEMORY[0x1A1ADBD7C](&unk_19D051DF8);
  return sub_19CFDF140();
}

uint64_t sub_19CDB4EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CDB4F74(a1, a2, a3, (uint64_t)&unk_19D051DF8);
}

uint64_t sub_19CDB4EB8()
{
  return sub_19CCC5C88(&qword_1EE43D320, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_19D0518EC);
}

uint64_t sub_19CDB4EE4(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D05195C, a1);
  return sub_19CFDF14C();
}

uint64_t sub_19CDB4F20()
{
  MEMORY[0x1A1ADBD7C](&unk_19D05195C);
  return sub_19CFDF140();
}

uint64_t sub_19CDB4F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CDB4F74(a1, a2, a3, (uint64_t)&unk_19D05195C);
}

uint64_t sub_19CDB4F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19CFE08C8();
  MEMORY[0x1A1ADBD7C](a4, a2);
  sub_19CFDF140();
  return sub_19CFE0910();
}

uint64_t sub_19CDB4FD4()
{
  return sub_19CCC5C88(&qword_1EE43D318, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_19D051918);
}

uint64_t sub_19CDB5000()
{
  return sub_19CCC5C88(&qword_1EE43DC80, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkFormat, (uint64_t)&unk_19D0519B4);
}

uint64_t sub_19CDB502C()
{
  return sub_19CCC5C88(&qword_1EE43DC88, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkFormat, (uint64_t)&unk_19D051988);
}

uint64_t sub_19CDB5058(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_19CFDF578();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19CDB5094()
{
  sub_19CFDF578();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDB50D4()
{
  uint64_t v0;

  sub_19CFDF578();
  sub_19CFE08C8();
  sub_19CFDF650();
  v0 = sub_19CFE0910();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CDB5144()
{
  return sub_19CFE09AC();
}

uint64_t sub_19CDB514C()
{
  return sub_19CFE08EC();
}

void sub_19CDB5174()
{
  JUMPOUT(0x1A1ADAAD4);
}

uint64_t sub_19CDB5180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_19CFDF578();
  v2 = v1;
  if (v0 == sub_19CFDF578() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_19CDB5208()
{
  return sub_19CCC5C88(&qword_1EE43DC90, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkFormat, (uint64_t)&unk_19D051A24);
}

uint64_t sub_19CDB5234()
{
  return sub_19CCC5C88(&qword_1EE43DC98, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkCropStyle, (uint64_t)&unk_19D051B0C);
}

uint64_t sub_19CDB5260()
{
  return sub_19CCC5C88(&qword_1EE43DCA0, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkCropStyle, (uint64_t)&unk_19D051AE0);
}

uint64_t sub_19CDB528C()
{
  return sub_19CCC5C88(&qword_1EE43DCA8, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkCropStyle, (uint64_t)&unk_19D051B7C);
}

uint64_t sub_19CDB52B8()
{
  return sub_19CCC5C88(&qword_1EE43DCB0, (uint64_t (*)(uint64_t))type metadata accessor for SignpostComponent, (uint64_t)&unk_19D051CCC);
}

uint64_t sub_19CDB52E4()
{
  return sub_19CCC5C88(&qword_1EE43DCB8, (uint64_t (*)(uint64_t))type metadata accessor for SignpostComponent, (uint64_t)&unk_19D051CA0);
}

uint64_t sub_19CDB5310()
{
  return sub_19CCC5C88((unint64_t *)&unk_1EE43DCC0, (uint64_t (*)(uint64_t))type metadata accessor for SignpostComponent, (uint64_t)&unk_19D051D3C);
}

uint64_t sub_19CDB533C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;

  result = sub_19CDB58DC(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    return sub_19CCEA360(result);
  }
  return result;
}

unint64_t sub_19CDB5370()
{
  unint64_t result;

  result = qword_1EE43DCE0;
  if (!qword_1EE43DCE0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059088, &type metadata for DependencyCycleError);
    atomic_store(result, (unint64_t *)&qword_1EE43DCE0);
  }
  return result;
}

void (*sub_19CDB53B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD **__return_ptr, uint64_t)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD **__return_ptr, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  char v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  os_signpost_id_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  char *v39;
  char *v40;
  const char *v41;
  uint64_t v42;
  int v43;
  int v44;
  const char *v45;
  void (*v46)(uint64_t, uint64_t);
  char *v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  const char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(_QWORD **__return_ptr, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v5 = v4;
  v63 = a3;
  v8 = sub_19CFDF1E8();
  v59 = *(const char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  v58 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_19CFDF1AC();
  v11 = *(_QWORD *)(v65 - 8);
  v13 = MEMORY[0x1E0C80A78](v65, v12);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v51 - v16;
  MEMORY[0x1E0C80A78](v15, v18);
  v21 = (char *)&v51 - v20;
  v22 = *(void (**)(_QWORD **__return_ptr, uint64_t))a1;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return *(void (**)(_QWORD **__return_ptr, uint64_t))a1;
  v52 = v8;
  v60 = v19;
  v24 = qword_1EE43B4E8;
  v64 = *(_QWORD *)(a1 + 8);
  swift_retain();
  if (v24 != -1)
    swift_once();
  v54 = a4;
  v25 = sub_19CFDF1DC();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v53 = v26;
  v27 = sub_19CFDF1C4();
  v28 = sub_19CFDFE84();
  v29 = sub_19CFDFF2C();
  v61 = v11;
  v62 = v22;
  if ((v29 & 1) != 0)
  {
    v57 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    LODWORD(v55) = v28;
    v30 = v65;
    v57(v17, v21, v65);
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v56 = v5;
    v33 = v32;
    v67 = v32;
    *(_DWORD *)v31 = 136315138;
    v66 = sub_19CD37070(0xD000000000000017, 0x800000019D06D720, &v67);
    v22 = v62;
    sub_19CFDFFC8();
    v34 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v27, (os_signpost_type_t)v55, v34, "MakeLazyDependency", "object=%s", v31, 0xCu);
    swift_arrayDestroy();
    v35 = v33;
    v5 = v56;
    MEMORY[0x1A1ADBE9C](v35, -1, -1);
    MEMORY[0x1A1ADBE9C](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v30);
    v36 = v57;
  }
  else
  {

    v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v30 = v65;
  }
  v55 = v21;
  v57 = v36;
  v36(v17, v21, v30);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  v37 = v64;
  swift_retain();
  v23 = sub_19CDA6AF0(v22, v37, v63, v54);
  sub_19CCFC05C();
  sub_19CCFC05C();
  v38 = sub_19CFDF1C4();
  v39 = v60;
  sub_19CFDF1F4();
  LODWORD(v63) = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    swift_retain();
    v40 = v58;
    sub_19CFDF218();
    swift_release();
    v41 = v59;
    v42 = v52;
    v43 = (*((uint64_t (**)(char *, uint64_t))v59 + 11))(v40, v52);
    v44 = *MEMORY[0x1E0DF2190];
    v56 = v5;
    if (v43 == v44)
    {
      v45 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v41 + 1))(v40, v42);
      v45 = "";
    }
    v59 = v45;
    v47 = v60;
    v30 = v65;
    v57(v17, v60, v65);
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    v49 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v38, (os_signpost_type_t)v63, v49, "MakeLazyDependency", v59, v48, 2u);
    MEMORY[0x1A1ADBE9C](v48, -1, -1);

    v46 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v46((uint64_t)v47, v30);
    v46((uint64_t)v17, v30);
  }
  else
  {

    v46 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v46((uint64_t)v39, v30);
  }
  v46((uint64_t)v55, v30);
  sub_19CCFC05C();
  swift_release();
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return (void (*)(_QWORD **__return_ptr, uint64_t))v23;
}

uint64_t sub_19CDB58CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_19CDB58DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(_QWORD **__return_ptr, uint64_t);
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_signpost_type_t v38;
  char v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  os_signpost_id_t v45;
  os_signpost_type_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(_QWORD **__return_ptr, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  NSObject *v54;
  char *v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  void (*v61)(uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  void (*v88)(_QWORD **__return_ptr, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v86 = a3;
  v87 = (_QWORD *)a4;
  v85 = a2;
  v6 = sub_19CFDF278();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v84 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF1E8();
  v81 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v80 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF1AC();
  v90 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)v72 - v18;
  MEMORY[0x1E0C80A78](v17, v20);
  v23 = (char *)v72 - v22;
  v24 = *(void (**)(_QWORD **__return_ptr, uint64_t))a1;
  v25 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return *(_QWORD *)a1;
  v74 = v10;
  v82 = v21;
  v88 = v24;
  v89 = v4;
  v76 = v6;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  v27 = static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v92 = v27;
  swift_retain();
  swift_task_localValuePush();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_19CD49828(v28);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  v78 = v29;
  if (v29)
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43B580);
    v31 = swift_conformsToProtocol2();
    if (v31)
      v32 = v31;
    else
      v32 = 0;
    if (v31)
      v33 = v30;
    else
      v33 = 0;
    if (v33)
    {
      v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      swift_retain();
      v34(v33, v32);
      v33 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      swift_release();
    }
  }
  else
  {
    v33 = 0;
  }
  v77 = v33;
  v75 = v7;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v35 = sub_19CFDF1DC();
  v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v37 = sub_19CFDF1C4();
  v38 = sub_19CFDFE84();
  v39 = sub_19CFDFF2C();
  v83 = v23;
  v85 = v25;
  if ((v39 & 1) != 0)
  {
    v79 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    v79(v19, v23, v13);
    v40 = swift_slowAlloc();
    v72[1] = v36;
    v73 = v13;
    v41 = (uint8_t *)v40;
    v42 = swift_slowAlloc();
    v92 = v42;
    *(_DWORD *)v41 = 136315138;
    v91 = sub_19CD37070(0xD00000000000001ELL, 0x800000019D06DA80, &v92);
    v25 = v85;
    v43 = v19;
    v44 = v89;
    sub_19CFDFFC8();
    v45 = sub_19CFDF194();
    v46 = v38;
    v47 = v44;
    v19 = v43;
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v37, v46, v45, "MakeLazyDependency", "object=%s", v41, 0xCu);
    swift_arrayDestroy();
    v48 = v42;
    v23 = v83;
    MEMORY[0x1A1ADBE9C](v48, -1, -1);
    v13 = v73;
    MEMORY[0x1A1ADBE9C](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v43, v13);
    v49 = v79;
  }
  else
  {

    v47 = v89;
    v49 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  }
  v79 = v49;
  v49(v19, v23, v13);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  swift_retain();
  v50 = v88;
  v51 = v47;
  v52 = sub_19CDA6850(v88, v25, v86, (uint64_t)v87);
  v86 = v53;
  v87 = v52;
  sub_19CDB76E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_19CDB76E8((uint64_t)v50, v25, 0);
  v54 = sub_19CFDF1C4();
  v55 = v82;
  sub_19CFDF1F4();
  LODWORD(v73) = sub_19CFDFE78();
  v56 = sub_19CFDFF2C();
  v89 = v51;
  if ((v56 & 1) != 0)
  {
    swift_retain();
    v57 = v80;
    sub_19CFDF218();
    swift_release();
    v58 = v81;
    v59 = v74;
    if ((*(unsigned int (**)(char *, uint64_t))(v81 + 88))(v57, v74) == *MEMORY[0x1E0DF2190])
    {
      v60 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
      v60 = "";
    }
    v62 = v82;
    v79(v19, v82, v13);
    v63 = v13;
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v54, (os_signpost_type_t)v73, v65, "MakeLazyDependency", v60, v64, 2u);
    v66 = v64;
    v13 = v63;
    MEMORY[0x1A1ADBE9C](v66, -1, -1);

    v61 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v61((uint64_t)v62, v63);
    v61((uint64_t)v19, v63);
    v25 = v85;
    if (!v77)
      goto LABEL_28;
  }
  else
  {

    v61 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v61((uint64_t)v55, v13);
    if (!v77)
      goto LABEL_28;
  }
  v67 = v75;
  v68 = v76;
  v69 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v84, *MEMORY[0x1E0CCE198], v76);
  swift_retain();
  sub_19CFDF2A8();
  swift_release();
  v70 = *(void (**)(char *, uint64_t))(v67 + 8);
  v25 = v85;
  v70(v69, v68);
LABEL_28:
  if (v78)
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43B580);
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v92);
    swift_release();
    swift_release();
    sub_19CDB76E8((uint64_t)v88, v25, 0);
    swift_release();
    swift_release();
    v61((uint64_t)v83, v13);
  }
  else
  {
    v61((uint64_t)v83, v13);
    swift_release();
    sub_19CDB76E8((uint64_t)v88, v25, 0);
    swift_release();
  }
  v71 = v86;
  result = (uint64_t)v87;
  *(_QWORD *)a1 = v87;
  *(_QWORD *)(a1 + 8) = v71;
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

void (*sub_19CDB6028(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(void (*)(_QWORD **__return_ptr, uint64_t), uint64_t, _QWORD)))(_QWORD **__return_ptr, uint64_t)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  void (*v26)(_QWORD **__return_ptr, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  _BYTE *v38;
  void (*v39)(void (*)(_QWORD **__return_ptr, uint64_t), uint64_t, _QWORD);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  char v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void (*)(_QWORD **__return_ptr, uint64_t), uint64_t, _QWORD);
  unint64_t v48;
  os_signpost_id_t v49;
  uint64_t v50;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(_QWORD **__return_ptr, uint64_t);
  uint64_t v55;
  NSObject *v56;
  int v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  void (*v62)(uint64_t, uint64_t);
  _BYTE *v63;
  uint64_t v64;
  uint8_t *v65;
  os_signpost_id_t v66;
  void (*v67)(void (*)(_QWORD **__return_ptr, uint64_t), uint64_t, _QWORD);
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE v72[4];
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD **__return_ptr, uint64_t);
  uint64_t v89;
  void (*v90)(void (*)(_QWORD **__return_ptr, uint64_t), uint64_t, _QWORD);
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t ObjectType;

  v90 = a7;
  v85 = a3;
  v86 = a4;
  v9 = sub_19CFDF278();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v84 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_19CFDF1E8();
  v82 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v81 = &v72[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_19CFDF1AC();
  v92 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = &v72[-v21];
  MEMORY[0x1E0C80A78](v20, v23);
  v93 = &v72[-v25];
  v26 = (void (*)(_QWORD **__return_ptr, uint64_t))*a1;
  if ((a1[2] & 1) != 0)
    return (void (*)(_QWORD **__return_ptr, uint64_t))*a1;
  v74 = v13;
  v83 = v24;
  v88 = v26;
  v28 = a1[1];
  v78 = sub_19CCE5204(0, a5);
  type metadata accessor for BaseObjectGraph();
  v87 = v28;
  swift_retain();
  v29 = static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  ObjectType = v29;
  swift_retain();
  swift_task_localValuePush();
  v30 = swift_bridgeObjectRetain();
  v31 = sub_19CD49828(v30);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  v79 = v31;
  if (v31
    && ((v32 = v78, (v33 = swift_conformsToProtocol2()) != 0) ? (v34 = v33) : (v34 = 0),
        v33 ? (v35 = v32) : (v35 = 0),
        v35))
  {
    v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    swift_retain();
    v36(v35, v34);
    v37 = sub_19CCCCA74();
    swift_release();
    swift_retain();
    sub_19CFDF29C();
    swift_release();
  }
  else
  {
    v37 = 0;
  }
  v91 = v37;
  v38 = v93;
  v39 = v90;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v40 = sub_19CFDF1DC();
  v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v77 = v41;
  v42 = sub_19CFDF1C4();
  v73 = sub_19CFDFE84();
  v43 = sub_19CFDFF2C();
  v89 = v16;
  v75 = v10;
  v76 = v9;
  if ((v43 & 1) != 0)
  {
    v80 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v92 + 16);
    v80(v22, v38, v16);
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    ObjectType = v45;
    *(_DWORD *)v44 = 136315138;
    v46 = sub_19CFE0A90();
    v47 = v39;
    v95 = sub_19CD37070(v46, v48, &ObjectType);
    sub_19CFDFFC8();
    swift_bridgeObjectRelease();
    v49 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v42, (os_signpost_type_t)v73, v49, "MakeLazyDependency", "object=%s", v44, 0xCu);
    swift_arrayDestroy();
    v50 = v45;
    v38 = v93;
    MEMORY[0x1A1ADBE9C](v50, -1, -1);
    v16 = v89;
    MEMORY[0x1A1ADBE9C](v44, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v22, v16);
    v51 = v80;
  }
  else
  {

    v51 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v92 + 16);
    v47 = v39;
  }
  v52 = v83;
  v80 = v51;
  v51(v22, v38, v16);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  v53 = v87;
  swift_retain();
  v54 = v88;
  v55 = v94;
  v27 = sub_19CDA6AF0(v88, v53, v85, v86);
  v94 = v55;
  v47((void (*)(_QWORD **__return_ptr, uint64_t))*a1, a1[1], *((unsigned __int8 *)a1 + 16));
  v47(v54, v53, 0);
  v56 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v57 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    LODWORD(v86) = v57;
    swift_retain();
    v58 = v81;
    sub_19CFDF218();
    swift_release();
    v59 = v82;
    v60 = v74;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v82 + 88))(v58, v74) == *MEMORY[0x1E0DF2190])
    {
      v61 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v59 + 8))(v58, v60);
      v61 = "";
    }
    v63 = v52;
    v64 = v89;
    v80(v22, v63, v89);
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    v66 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v56, (os_signpost_type_t)v86, v66, "MakeLazyDependency", v61, v65, 2u);
    MEMORY[0x1A1ADBE9C](v65, -1, -1);

    v62 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v62((uint64_t)v83, v64);
    v62((uint64_t)v22, v64);
  }
  else
  {

    v62 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v62((uint64_t)v52, v16);
  }
  v67 = v90;
  if (v91)
  {
    v69 = v75;
    v68 = v76;
    v70 = v84;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v75 + 104))(v84, *MEMORY[0x1E0CCE198], v76);
    swift_retain();
    sub_19CFDF2A8();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v70, v68);
  }
  if (v79)
  {
    ObjectType = swift_getObjectType();
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
    swift_release();
    swift_release();
    v67(v88, v87, 0);
    swift_release();
    swift_release();
    v62((uint64_t)v93, v89);
  }
  else
  {
    v62((uint64_t)v93, v89);
    swift_release();
    v67(v88, v87, 0);
    swift_release();
  }
  *a1 = v27;
  a1[1] = 0;
  *((_BYTE *)a1 + 16) = 1;
  return (void (*)(_QWORD **__return_ptr, uint64_t))v27;
}

uint64_t *sub_19CDB6770(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, unint64_t a7, void (*a8)(uint64_t *, uint64_t, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  char v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  os_signpost_id_t v51;
  void (*v52)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t, _QWORD);
  NSObject *v57;
  _BYTE *v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  void (*v64)(_BYTE *, uint64_t);
  _BYTE *v65;
  _BYTE *v66;
  uint8_t *v67;
  os_signpost_id_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  _BYTE v73[4];
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v83;
  unint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void (*v95)(uint64_t *, uint64_t, _QWORD);
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v95 = a8;
  v83 = a6;
  v84 = a7;
  v87 = a3;
  v88 = a4;
  v10 = sub_19CFDF278();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = &v73[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_19CFDF1E8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v85 = &v73[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_19CFDF1AC();
  v94 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v91 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22, v23);
  v90 = &v73[-v24];
  MEMORY[0x1E0C80A78](v25, v26);
  v96 = &v73[-v27];
  v28 = *a1;
  if (((_BYTE)a1[2] & 1) != 0)
    return *a1;
  v76 = v16;
  v77 = v15;
  v93 = v28;
  v79 = v10;
  v30 = a1[1];
  type metadata accessor for BaseObjectGraph();
  v92 = (uint64_t)v30;
  swift_retain();
  v31 = static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v99 = v31;
  swift_retain();
  swift_task_localValuePush();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_19CD49828(v32);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  if (v33
    && ((v34 = a5(0), (v35 = swift_conformsToProtocol2()) != 0) ? (v36 = v35) : (v36 = 0),
        v35 ? (v37 = v34) : (v37 = 0),
        v37))
  {
    v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    swift_retain();
    v38(v37, v36);
    v39 = sub_19CCCCA74();
    swift_release();
    swift_retain();
    sub_19CFDF29C();
    swift_release();
  }
  else
  {
    v39 = 0;
  }
  v40 = v96;
  v80 = v33;
  v81 = v11;
  v78 = v14;
  v86 = v19;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v41 = sub_19CFDF1DC();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v43 = sub_19CFDF1C4();
  v44 = sub_19CFDFE84();
  v45 = sub_19CFDFF2C();
  v89 = v39;
  if ((v45 & 1) != 0)
  {
    v75 = v42;
    v46 = v94;
    v82 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v94 + 16);
    v47 = v90;
    v48 = v86;
    v82(v90, v40, v86);
    v74 = v44;
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v99 = v50;
    *(_DWORD *)v49 = 136315138;
    v98 = sub_19CD37070(v83, v84, &v99);
    sub_19CFDFFC8();
    v51 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v43, (os_signpost_type_t)v74, v51, "MakeLazyDependency", "object=%s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v50, -1, -1);
    v40 = v96;
    MEMORY[0x1A1ADBE9C](v49, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v47, v48);
    v52 = v82;
  }
  else
  {

    v52 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v94 + 16);
    v48 = v86;
    v47 = v90;
  }
  v82 = v52;
  v52(v47, v40, v48);
  sub_19CFDF20C();
  swift_allocObject();
  sub_19CFDF200();
  v53 = v92;
  swift_retain();
  v54 = v93;
  v55 = v97;
  v29 = sub_19CDA6AF0((void (*)(_QWORD **__return_ptr, uint64_t))v93, v53, v87, v88);
  v97 = v55;
  v56 = v95;
  v95(*a1, (uint64_t)a1[1], *((unsigned __int8 *)a1 + 16));
  v56(v54, v53, 0);
  v57 = sub_19CFDF1C4();
  v58 = v91;
  sub_19CFDF1F4();
  v59 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    LODWORD(v90) = v59;
    swift_retain();
    v60 = v85;
    sub_19CFDF218();
    swift_release();
    v61 = v76;
    v62 = v77;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v76 + 88))(v60, v77) == *MEMORY[0x1E0DF2190])
    {
      v63 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v60, v62);
      v63 = "";
    }
    v48 = v86;
    v82(v47, v58, v86);
    v65 = v47;
    v66 = v58;
    v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v67 = 0;
    v68 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v57, (os_signpost_type_t)v90, v68, "MakeLazyDependency", v63, v67, 2u);
    MEMORY[0x1A1ADBE9C](v67, -1, -1);

    v64 = *(void (**)(_BYTE *, uint64_t))(v94 + 8);
    v64(v66, v48);
    v64(v65, v48);
  }
  else
  {

    v64 = *(void (**)(_BYTE *, uint64_t))(v94 + 8);
    v64(v58, v48);
  }
  v69 = v81;
  if (v89)
  {
    v70 = v78;
    v71 = v79;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v81 + 104))(v78, *MEMORY[0x1E0CCE198], v79);
    swift_retain();
    sub_19CFDF2A8();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v70, v71);
  }
  if (v80)
  {
    v99 = *v29;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v99);
    swift_release();
    swift_release();
    v95(v93, v92, 0);
    swift_release();
    swift_release();
    v64(v96, v48);
  }
  else
  {
    v64(v96, v48);
    swift_release();
    v95(v93, v92, 0);
    swift_release();
  }
  *a1 = v29;
  a1[1] = 0;
  *((_BYTE *)a1 + 16) = 1;
  return v29;
}

uint64_t *sub_19CDB6EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD **__return_ptr, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  os_signpost_id_t v45;
  uint64_t v46;
  uint8_t *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  char *v62;
  uint8_t *v63;
  os_signpost_id_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(_QWORD **__return_ptr, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v80 = a3;
  v81 = a4;
  v5 = sub_19CFDF278();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF1E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v79 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDF1AC();
  v85 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v82 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v69 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v87 = (char *)&v69 - v23;
  v24 = *(void (**)(_QWORD **__return_ptr, uint64_t))a1;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return *(uint64_t **)a1;
  v71 = v11;
  v72 = v10;
  v84 = v24;
  v75 = v5;
  v26 = *(_QWORD *)(a1 + 8);
  type metadata accessor for BaseObjectGraph();
  v83 = v26;
  swift_retain();
  v27 = static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v90 = v27;
  swift_retain();
  swift_task_localValuePush();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_19CD49828(v28);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  if (v29
    && ((v30 = type metadata accessor for PageRenderMetricsPresenter(), (v31 = swift_conformsToProtocol2()) != 0)
      ? (v32 = v31)
      : (v32 = 0),
        v31 ? (v33 = v30) : (v33 = 0),
        v33))
  {
    v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    swift_retain();
    v34(v33, v32);
    v35 = sub_19CCCCA74();
    swift_release();
    swift_retain();
    sub_19CFDF29C();
    swift_release();
  }
  else
  {
    v35 = 0;
  }
  v86 = v35;
  v78 = v29;
  v73 = v9;
  v74 = v6;
  v36 = v87;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v37 = sub_19CFDF1DC();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v76 = v38;
  v39 = sub_19CFDF1C4();
  v40 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v41 = v85;
    v77 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
    v77(v20, v36, v14);
    v42 = swift_slowAlloc();
    v70 = v14;
    v43 = (uint8_t *)v42;
    v44 = swift_slowAlloc();
    v90 = v44;
    *(_DWORD *)v43 = 136315138;
    v89 = sub_19CD37070(0xD00000000000001ALL, 0x800000019D06D780, &v90);
    sub_19CFDFFC8();
    v45 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v39, v40, v45, "MakeLazyDependency", "object=%s", v43, 0xCu);
    swift_arrayDestroy();
    v46 = v44;
    v36 = v87;
    MEMORY[0x1A1ADBE9C](v46, -1, -1);
    v47 = v43;
    v14 = v70;
    MEMORY[0x1A1ADBE9C](v47, -1, -1);

    v48 = v77;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v14);
  }
  else
  {

    v48 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  }
  v49 = v82;
  v48(v20, v36, v14);
  sub_19CFDF20C();
  swift_allocObject();
  v50 = sub_19CFDF200();
  v51 = v83;
  swift_retain();
  v52 = v88;
  v25 = sub_19CDA6AF0(v84, v51, v80, v81);
  v88 = v52;
  sub_19CCFC05C();
  v53 = (char *)v50;
  sub_19CCFC05C();
  v54 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  LODWORD(v81) = sub_19CFDFE78();
  v55 = sub_19CFDFF2C();
  v82 = v53;
  if ((v55 & 1) != 0)
  {
    v77 = v48;
    swift_retain();
    v56 = v79;
    sub_19CFDF218();
    swift_release();
    v58 = v71;
    v57 = v72;
    if ((*(unsigned int (**)(char *, uint64_t))(v71 + 88))(v56, v72) == *MEMORY[0x1E0DF2190])
    {
      v59 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v57);
      v59 = "";
    }
    v77(v20, v49, v14);
    v61 = v20;
    v62 = v49;
    v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v63 = 0;
    v64 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v54, (os_signpost_type_t)v81, v64, "MakeLazyDependency", v59, v63, 2u);
    MEMORY[0x1A1ADBE9C](v63, -1, -1);

    v60 = *(void (**)(char *, uint64_t))(v85 + 8);
    v60(v62, v14);
    v60(v61, v14);
  }
  else
  {

    v60 = *(void (**)(char *, uint64_t))(v85 + 8);
    v60(v49, v14);
  }
  if (v86)
  {
    v65 = v73;
    v66 = v74;
    v67 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v73, *MEMORY[0x1E0CCE198], v75);
    swift_retain();
    sub_19CFDF2A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
  }
  if (v78)
  {
    v90 = *v25;
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)(&v90);
    swift_release();
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    v60(v87, v14);
  }
  else
  {
    v60(v87, v14);
    swift_release();
    sub_19CCFC05C();
    swift_release();
  }
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return v25;
}

uint64_t sub_19CDB75B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_19CDB75C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE43DDD8;
  if (!qword_1EE43DDD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43DDD0);
    v2 = sub_19CD05BA0(&qword_1EE43DDE0, (uint64_t *)&unk_1EE43DDE8, MEMORY[0x1E0DEAF20]);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC850], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43DDD8);
  }
  return result;
}

uint64_t sub_19CDB7640(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CDB767C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SentryConfiguration(a2, a1);
  return a2;
}

void sub_19CDB76B8(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_19CDB76C8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_release();
}

uint64_t sub_19CDB76D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_19CD60178(a1, a2);
  else
    return swift_release();
}

uint64_t sub_19CDB76E8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_19CCE9F48(a1);
  else
    return swift_release();
}

uint64_t sub_19CDB76F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDB772C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C48
                                                                                     + dword_1EE442C48))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CDB77C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDB77EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDB7810(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEBE148(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CDB7818()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CDB7844(void *a1)
{
  sub_19CF4C8B0(a1);
}

uint64_t sub_19CDB784C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_19CDB7884(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442B68
                                                                                     + dword_1EE442B68))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CDB7918(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19CDB7948(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CDB7978(uint64_t result)
{
  if (result != 1)
    return sub_19CCE9F48(result);
  return result;
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43CD88);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43E040);
}

void type metadata accessor for JEBrotliDecoderResult(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43B6E8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43E050);
}

void type metadata accessor for AMSMediaArtworkColorKind(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43E058);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_19CD16B60(a1, &qword_1EE43E060);
}

void type metadata accessor for __sbuf(uint64_t a1)
{
  sub_19CD16B60(a1, (unint64_t *)&unk_1EE43E068);
}

uint64_t sub_19CDB7A14()
{
  return sub_19CCC5C88(&qword_1EE43E078, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_19D051F88);
}

uint64_t sub_19CDB7A40()
{
  return sub_19CCC5C88(&qword_1EE43E080, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_19D051F5C);
}

uint64_t sub_19CDB7A6C()
{
  return sub_19CCC5C88(&qword_1EE43E088, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkColorKind, (uint64_t)&unk_19D05209C);
}

uint64_t sub_19CDB7A98()
{
  return sub_19CCC5C88(&qword_1EE43E090, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkColorKind, (uint64_t)&unk_19D052070);
}

uint64_t sub_19CDB7AC4()
{
  return sub_19CCC5C88(&qword_1EE43E098, (uint64_t (*)(uint64_t))type metadata accessor for AMSMediaArtworkColorKind, (uint64_t)&unk_19D05210C);
}

uint64_t sub_19CDB7AF0()
{
  return sub_19CCC5C88(&qword_1EE43E0A0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_19D051FF8);
}

unint64_t static ComponentKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  v3 = sub_19CDB7F78(v2, &qword_1EE43E1B8);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19CDB7B9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB05B0);
    v2 = sub_19CFE03B8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_19CD433C0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_19CD433C0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_19CD433C0(v36, v37);
    sub_19CD433C0(v37, &v33);
    result = sub_19CFE0094();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_19CD433C0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_19CDB88CC();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_19CDB7F60(uint64_t a1)
{
  return sub_19CDB7F78(a1, &qword_1EE43E1A8);
}

unint64_t sub_19CDB7F6C(uint64_t a1)
{
  return sub_19CDB7F78(a1, &qword_1EE43E1B0);
}

unint64_t sub_19CDB7F78(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t i;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E1A0);
    v3 = (_QWORD *)sub_19CFE03B8();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v26 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v25)
    goto LABEL_32;
  v13 = *(_QWORD *)(v26 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v25)
      goto LABEL_32;
    v13 = *(_QWORD *)(v26 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v25)
        goto LABEL_32;
      v13 = *(_QWORD *)(v26 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v25)
          goto LABEL_32;
        v13 = *(_QWORD *)(v26 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v25)
          {
            v13 = *(_QWORD *)(v26 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v25)
                break;
              v13 = *(_QWORD *)(v26 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_19CDB88CC();
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v6 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F58);
    swift_dynamicCast();
    result = sub_19CD23A50(v18, v17);
    v19 = result;
    if ((v20 & 1) != 0)
    {
      v9 = (uint64_t *)(v3[6] + 16 * result);
      result = swift_bridgeObjectRelease();
      *v9 = v18;
      v9[1] = v17;
      *(_QWORD *)(v3[7] + 8 * v19) = v28;
      if (!v6)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v21 = (uint64_t *)(v3[6] + 16 * result);
    *v21 = v18;
    v21[1] = v17;
    *(_QWORD *)(v3[7] + 8 * result) = v28;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_34;
    v3[2] = v24;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_19CDB8250(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 *v6;
  unint64_t result;
  int64_t i;
  __int128 *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  __int128 v32;
  __int128 v33[2];
  __int128 v34[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E190);
    v2 = (_QWORD *)sub_19CFE03B8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v30 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = (__int128 *)v31;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v14 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v14 >= v29)
    goto LABEL_32;
  v15 = *(_QWORD *)(v30 + 8 * v14);
  v16 = i + 1;
  if (!v15)
  {
    v16 = i + 2;
    if (i + 2 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v30 + 8 * v16);
    if (!v15)
    {
      v16 = i + 3;
      if (i + 3 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v30 + 8 * v16);
      if (!v15)
      {
        v16 = i + 4;
        if (i + 4 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v30 + 8 * v16);
        if (!v15)
        {
          v17 = i + 5;
          if (i + 5 < v29)
          {
            v15 = *(_QWORD *)(v30 + 8 * v17);
            if (v15)
            {
              v16 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v16 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_36;
              if (v16 >= v29)
                break;
              v15 = *(_QWORD *)(v30 + 8 * v16);
              ++v17;
              if (v15)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_19CDB88CC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v15 - 1) & v15;
  v13 = __clz(__rbit64(v15)) + (v16 << 6);
  for (i = v16; ; v13 = v12 | (i << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v13);
    v31[3] = sub_19CDB88D4();
    v31[4] = sub_19CDB8910();
    v31[0] = v21;
    sub_19CCD14C4(v6, (uint64_t)v33);
    sub_19CCD14C4(v33, (uint64_t)v34);
    sub_19CCD14C4(v34, (uint64_t)&v32);
    swift_bridgeObjectRetain();
    v22 = v21;
    result = sub_19CD3FD1C(v20, v19);
    v23 = result;
    if ((v24 & 1) != 0)
    {
      v9 = v6;
      v10 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v10 = v20;
      v10[1] = v19;
      v6 = v9;
      v11 = v2[7] + 40 * v23;
      __swift_destroy_boxed_opaque_existential_1Tm(v11);
      result = sub_19CCD14C4(&v32, v11);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v25 = (uint64_t *)(v2[6] + 16 * result);
    *v25 = v20;
    v25[1] = v19;
    result = sub_19CCD14C4(&v32, v2[7] + 40 * result);
    v26 = v2[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_34;
    v2[2] = v28;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v12 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t static ComponentKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  __int128 v28;
  _QWORD v29[5];
  uint64_t v30[5];
  uint64_t v31[3];
  __int128 v32;
  uint64_t v33;

  v7 = dynamic_cast_existential_2_conditional(a1);
  if (v7)
  {
    v10 = v7;
    v11 = v8;
    v12 = v9;
    sub_19CCD5B84((uint64_t)a2, (uint64_t)v30);
    *(_QWORD *)&v32 = v10;
    *((_QWORD *)&v32 + 1) = v11;
    v33 = v12;
    __swift_allocate_boxed_opaque_existential_2Tm(v31);
    sub_19CFDFB90();
    if (v3)
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v31);
LABEL_7:
    v28 = v32;
    v22 = v32;
    v23 = __swift_project_boxed_opaque_existential_1(v31, v32);
    *(_OWORD *)(a3 + 24) = v28;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a3);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_2Tm, v23, v22);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  }
  v14 = dynamic_cast_existential_2_conditional(a1);
  if (v14)
  {
    v17 = v14;
    v18 = v15;
    v19 = v16;
    sub_19CCD5B84((uint64_t)a2, (uint64_t)v29);
    result = JSONObject.init(from:)(v29, v30);
    if (v3)
      return result;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v20 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v20);
    v21 = *(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t))(v19 + 8);
    *(_QWORD *)&v32 = v17;
    *((_QWORD *)&v32 + 1) = v18;
    v33 = v19;
    __swift_allocate_boxed_opaque_existential_2Tm(v31);
    v21(v30, v29, v17, v19);
    goto LABEL_7;
  }
  v25 = sub_19CFE01B4();
  swift_allocError();
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
  *v27 = a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19CFE09B8();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v31[0] = 60;
  v31[1] = 0xE100000000000000;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE019C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
  return swift_willThrow();
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1A1ADBE9CLL);
  return result;
}

uint64_t dispatch thunk of static ComponentKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_19CDB88CC()
{
  return swift_release();
}

unint64_t sub_19CDB88D4()
{
  unint64_t result;

  result = qword_1EE43C2B8;
  if (!qword_1EE43C2B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE43C2B8);
  }
  return result;
}

unint64_t sub_19CDB8910()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE43E198;
  if (!qword_1EE43E198)
  {
    v1 = sub_19CDB88D4();
    result = MEMORY[0x1A1ADBD7C](&unk_19D065C50, v1);
    atomic_store(result, (unint64_t *)&qword_1EE43E198);
  }
  return result;
}

uint64_t sub_19CDB8958(OpaqueJSString *a1)
{
  const JSChar *CharactersPtr;
  const JSChar *v3;
  size_t Length;
  size_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 aBlock;
  __int128 v19;
  void (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  CharactersPtr = JSStringGetCharactersPtr(a1);
  if (CharactersPtr)
  {
    v3 = CharactersPtr;
    Length = JSStringGetLength(a1);
    if (Length)
    {
      v5 = Length;
      JSStringRetain(a1);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = a1;
      v7 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      v20 = sub_19CDB8F30;
      v21 = v6;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v19 = sub_19CDB8ED8;
      *((_QWORD *)&v19 + 1) = &block_descriptor;
      v8 = _Block_copy(&aBlock);
      swift_release();
      v9 = objc_msgSend(v7, sel_initWithCharactersNoCopy_length_deallocator_, v3, v5, v8);
      _Block_release(v8);
      v10 = sub_19CFDF578();

    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v11 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v13 = swift_allocObject();
    v14 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v22[3] = v14;
    v22[0] = 0xD000000000000026;
    v22[1] = 0x800000019D06DB30;
    aBlock = 0u;
    v19 = 0u;
    v15 = v11;
    sub_19CD40658((uint64_t)v22, (uint64_t)&aBlock);
    *(_BYTE *)(v13 + 64) = 0;
    v16 = v19;
    *(_OWORD *)(v13 + 32) = aBlock;
    *(_OWORD *)(v13 + 48) = v16;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)&aBlock = v15;
    LOBYTE(v22[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)v22);

    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_19CDB8B78(OpaqueJSString *a1, void (*a2)(uint64_t, unint64_t))
{
  const JSChar *CharactersPtr;
  uint64_t v5;
  size_t Length;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[4];

  CharactersPtr = JSStringGetCharactersPtr(a1);
  if (CharactersPtr)
  {
    v5 = (uint64_t)CharactersPtr;
    Length = JSStringGetLength(a1);
    return sub_19CDB8D0C(v5, Length, a2);
  }
  else
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v8 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v10 = swift_allocObject();
    v11 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
    v16[3] = v11;
    v16[0] = 0xD000000000000026;
    v16[1] = 0x800000019D06DB30;
    v14 = 0u;
    v15 = 0u;
    v12 = v8;
    sub_19CD40658((uint64_t)v16, (uint64_t)&v14);
    *(_BYTE *)(v10 + 64) = 0;
    v13 = v15;
    *(_OWORD *)(v10 + 32) = v14;
    *(_OWORD *)(v10 + 48) = v13;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)&v14 = v12;
    LOBYTE(v16[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)v16);

    swift_bridgeObjectRelease();
    return ((uint64_t (*)(_QWORD, unint64_t))a2)(0, 0xC000000000000000);
  }
}

uint64_t sub_19CDB8D0C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  _QWORD v18[2];
  void (*v19)(uint64_t, unint64_t);

  v7 = sub_19CFDEE10();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return ((uint64_t (*)(_QWORD, unint64_t))a3)(0, 0xC000000000000000);
  if (a2 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v18[1] = v3;
    v19 = a3;
    v13 = 2 * a2;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v12, *MEMORY[0x1E0CB00C8], v7);
    sub_19CFDEE04();
    if (v13)
    {
      sub_19CFDEBD0();
      swift_allocObject();
      swift_retain();
      v14 = sub_19CFDEB88();
      v13 = sub_19CD17D04(v14, v13);
      v16 = v15;
      swift_release();
    }
    else
    {
      v17 = (void (*)(uint64_t, _QWORD))sub_19CFDEE04();
      v17(a1, 0);
      swift_release();
      swift_release();
      v16 = 0xC000000000000000;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v19(v13, v16);
    return sub_19CD3BE18(v13, v16);
  }
  return result;
}

uint64_t sub_19CDB8ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_19CDB8F20()
{
  return swift_deallocObject();
}

void sub_19CDB8F30()
{
  uint64_t v0;

  JSStringRelease(*(JSStringRef *)(v0 + 16));
}

uint64_t LocalPreferences.__allocating_init(bundleIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  v1 = sub_19CFDF554();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  return v0;
}

uint64_t LocalPreferences.__allocating_init(bundleIdentifier:cacheEnabled:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v5 = swift_allocObject();
  sub_19CCDD984(v4, a3);
  return v5;
}

BOOL LocalPreferences.isValueForced(forKey:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __CFString *v4;
  int IsForced;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v4 = (__CFString *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  IsForced = CFPreferencesAppValueIsForced(v4, *(CFStringRef *)(v1 + 16));

  return IsForced != 0;
}

uint64_t sub_19CDB9070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(void))(a2 + 8))();
  v2 = sub_19CFDF554();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_19CDB90A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[32];
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;

  sub_19CCD5B84(a3, (uint64_t)v16);
  sub_19CD40794(a1, (uint64_t)v15);
  v5 = *a2;
  v6 = v17;
  v7 = v18;
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  v9 = MEMORY[0x1E0C80A78](v8, v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, double))(v12 + 16))(v11, v9);
  sub_19CDB9884((uint64_t)v15, (uint64_t)v11, v5, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

uint64_t LocalPreferences.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  v8 = MEMORY[0x1E0C80A78](v7, v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  sub_19CDB9884(a1, (uint64_t)v10, v2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

void (*LocalPreferences.subscript.modify(_QWORD *a1, _QWORD *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;

  v5 = malloc(0x98uLL);
  *a1 = v5;
  v6 = v5 + 10;
  v5[18] = v2;
  sub_19CCD5B84((uint64_t)a2, (uint64_t)v5);
  LocalPreferences.subscript.getter(a2, v6);
  return sub_19CDB9268;
}

void sub_19CDB9268(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    sub_19CD40794(*a1 + 80, v2 + 112);
    sub_19CCD14C4((__int128 *)v2, v2 + 40);
    v5 = *(_QWORD *)(v2 + 64);
    v6 = *(_QWORD *)(v2 + 72);
    v7 = __swift_mutable_project_boxed_opaque_existential_1(v2 + 40, v5);
    v8 = MEMORY[0x1E0C80A78](v7, v7);
    v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v11 + 16))(v10, v8);
    sub_19CDB9884(v2 + 112, (uint64_t)v10, v4, v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 40);
    sub_19CD3F190(v3);
  }
  else
  {
    v12 = *(_QWORD *)(v2 + 144);
    v13 = *(_QWORD *)(v2 + 24);
    v14 = *(_QWORD *)(v2 + 32);
    v15 = __swift_mutable_project_boxed_opaque_existential_1(*a1, v13);
    v16 = MEMORY[0x1E0C80A78](v15, v15);
    v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v19 + 16))(v18, v16);
    sub_19CDB9884(v3, (uint64_t)v18, v12, v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  free((void *)v2);
}

void LocalPreferences.removeValue(forKey:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __CFString *key;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  key = (__CFString *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  CFPreferencesSetAppValue(key, 0, *(CFStringRef *)(v1 + 16));

}

Swift::Void __swiftcall LocalPreferences.synchronize()()
{
  uint64_t v0;

  CFPreferencesAppSynchronize(*(CFStringRef *)(v0 + 16));
}

id sub_19CDB9560()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19CDB95A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  char v10;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_19CD3FD1C(a2, a3);
    if ((v9 & 1) != 0)
      v10 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v8);
    else
      v10 = 0;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  *a4 = v10;
  return result;
}

uint64_t sub_19CDB9620@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  uint64_t v14;

  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a2, a3);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *a1;
    v14 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CE19184();
      v12 = v14;
    }
    swift_bridgeObjectRelease();
    v13 = *(_BYTE *)(*(_QWORD *)(v12 + 56) + v8);
    sub_19CDD3C08(v8, v12);
    *a1 = v12;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 2;
  }
  *a4 = v13;
  return result;
}

uint64_t sub_19CDB9700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  v8 = MEMORY[0x1E0C80A78](v7, v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  sub_19CDB9884(a1, (uint64_t)v10, v2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

void (*sub_19CDB97A4(_QWORD *a1, _QWORD *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = LocalPreferences.subscript.modify(v4, a2);
  return sub_19CDB97F0;
}

void sub_19CDB97F0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_19CDB981C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __CFString *v5;

  v2 = v1;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (__CFString *)sub_19CDB9070(v3, v4);
  CFPreferencesSetAppValue(v5, 0, *(CFStringRef *)(v2 + 16));

}

uint64_t sub_19CDB987C()
{
  uint64_t v0;

  return CFPreferencesAppSynchronize(*(CFStringRef *)(v0 + 16));
}

uint64_t sub_19CDB9884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  __CFString *v13;
  const void *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a4 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 32))(v12, v10);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  v13 = (__CFString *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3370);
  v14 = (const void *)sub_19CFDFF50();
  CFPreferencesSetAppValue(v13, v14, *(CFStringRef *)(a3 + 16));

  swift_unknownObjectRelease();
  sub_19CD3F190(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a4);
}

double sub_19CDB9978@<D0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  return LocalPreferences.subscript.getter(a1, a2);
}

uint64_t sub_19CDB99A0()
{
  return 0;
}

uint64_t method lookup function for LocalPreferences()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalPreferences.__allocating_init(bundleIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_19CDB99C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  if (a2)
  {
    v6 = result;
    if (a4 && *(_QWORD *)(a4 + 16))
    {
      v7 = (id)*MEMORY[0x1E0CB2CB8];
      v8 = sub_19CE12138(v7);
      if ((v9 & 1) != 0)
      {
        sub_19CD436B0(*(_QWORD *)(a4 + 56) + 32 * v8, (uint64_t)&v13);
      }
      else
      {
        v13 = 0u;
        v14 = 0u;
      }

    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3370);
    if (swift_dynamicCast())
      v10 = v12;
    else
      v10 = 0;
    if (swift_weakLoadStrong())
    {
      type metadata accessor for LocalPreferences.CacheValue();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      swift_unknownObjectRetain();
      sub_19CD4373C(v11, v6, a2);
      swift_release();
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_19CDB9AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43E0B8;
  if (!qword_1EE43E0B8)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x1A1ADBD7C](&unk_19D052230, v1);
    atomic_store(result, (unint64_t *)&qword_1EE43E0B8);
  }
  return result;
}

uint64_t CommonNetworkObservation.__allocating_init(name:object:scheduler:body:)(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  v10 = swift_allocObject();
  sub_19CCD5B84(a3, v10 + 16);
  *(_QWORD *)(v10 + 56) = a4;
  *(_QWORD *)(v10 + 64) = a5;
  v11 = (void *)objc_opt_self();
  swift_retain();
  v12 = objc_msgSend(v11, sel_defaultCenter);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  swift_retain();
  v13 = a1;
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v10, sel_networkStateDidChange_, v13, sub_19CFE0688());

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);

  swift_release();
  return v10;
}

uint64_t CommonNetworkObservation.init(name:object:scheduler:body:)(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = sub_19CDBA16C(a1, a2, a3, a4, a5);

  swift_release();
  return v6;
}

uint64_t CommonNetworkObservation.deinit()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

Swift::Void __swiftcall CommonNetworkObservation.invalidate()()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

}

uint64_t CommonNetworkObservation.__deallocating_deinit()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19CDB9DDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  sub_19CFDEA5C();
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE43E1D0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v18 + 1))
      {
        sub_19CCD14C4(&v17, (uint64_t)v20);
        v1 = v0[5];
        v2 = v0[6];
        __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
        v4 = v0[7];
        v3 = v0[8];
        sub_19CCD5B84((uint64_t)v20, (uint64_t)&v17);
        v5 = swift_allocObject();
        *(_QWORD *)(v5 + 16) = v4;
        *(_QWORD *)(v5 + 24) = v3;
        sub_19CCD14C4(&v17, v5 + 32);
        v6 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v2 + 8);
        swift_retain();
        v6(sub_19CD17118, v5, v1, v2);
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      }
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB3370);
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
  }
  sub_19CCECFE4((uint64_t)&v17, &qword_1EE43E1C8);
  if (qword_1EE43D680 != -1)
    swift_once();
  sub_19CFE0A6C();
  v7 = v21;
  v8 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D052350;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  swift_unknownObjectRetain();
  sub_19CCF4C08(v10 + 32);
  *(_QWORD *)(v9 + 32) = v10;
  v11 = swift_allocObject();
  v12 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
  v16 = v12;
  v15[0] = 0xD000000000000034;
  v15[1] = 0x800000019D06DDD0;
  v17 = 0u;
  v18 = 0u;
  sub_19CD40658((uint64_t)v15, (uint64_t)&v17);
  *(_BYTE *)(v11 + 64) = 0;
  v13 = v18;
  *(_OWORD *)(v11 + 32) = v17;
  *(_OWORD *)(v11 + 48) = v13;
  *(_QWORD *)(v9 + 40) = v11;
  Logger.error(_:)(v9, v7, v8);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

void sub_19CDBA110()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v1);

}

uint64_t sub_19CDBA16C(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v11;
  id v12;
  id v13;

  sub_19CCD5B84(a3, v5 + 16);
  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  v11 = (void *)objc_opt_self();
  swift_retain();
  v12 = objc_msgSend(v11, sel_defaultCenter);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  swift_retain();
  v13 = a1;
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v5, sel_networkStateDidChange_, v13, sub_19CFE0688());

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return v5;
}

uint64_t type metadata accessor for CommonNetworkObservation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CommonNetworkObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CommonNetworkObservation.__allocating_init(name:object:scheduler:body:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19CDBA2B0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return swift_deallocObject();
}

_QWORD *assignWithCopy for ClientBuildTypeFieldProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ClientBuildTypeFieldProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientBuildTypeFieldProvider(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientBuildTypeFieldProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientBuildTypeFieldProvider()
{
  return &type metadata for ClientBuildTypeFieldProvider;
}

uint64_t sub_19CDBA400()
{
  uint64_t result;
  char v1;

  result = os_variant_has_internal_content();
  if ((_DWORD)result)
    v1 = 1;
  else
    v1 = 3;
  byte_1EE43CA88 = v1;
  return result;
}

uint64_t sub_19CDBA430(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v7 = v6;
  if (!a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v6 + 16))
    return swift_bridgeObjectRelease();
  v8 = sub_19CD3FD1C(0x707954746E657665, 0xE900000000000065);
  if ((v9 & 1) == 0)
    return swift_bridgeObjectRelease();
  sub_19CD436B0(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v14);
  if ((swift_dynamicCast() & 1) == 0)
    return swift_bridgeObjectRelease();
  v10 = sub_19CD0BB80(v12, v13, a3);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_9:
    if (qword_1EE43C848 != -1)
      swift_once();
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_19CDBA638(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_19CDBA430(a1, a2, *v2);
}

uint64_t sub_19CDBA654()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19CDBA69C()
{
  return 1;
}

uint64_t sub_19CDBA6A4()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDBA6E4()
{
  return sub_19CFE08D4();
}

uint64_t sub_19CDBA708()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CDBA754(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_19CDBA764()
{
  return sub_19CFE08D4();
}

uint64_t sub_19CDBA788()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CDBA7CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19CDBA754(*a1, *a2);
}

uint64_t sub_19CDBA7D8()
{
  return sub_19CDBA788();
}

uint64_t sub_19CDBA7E0()
{
  return sub_19CDBA764();
}

uint64_t sub_19CDBA7E8()
{
  sub_19CFE08C8();
  sub_19CDBA764();
  return sub_19CFE0910();
}

uint64_t sub_19CDBA824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v2 + 56) == 1)
  {
    v5 = *(_QWORD *)(v2 + 40);
    v6 = *(_QWORD *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), v5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  }
  else
  {
    sub_19CDBAADC();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_19CDBA8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v2 + 56) == 1)
  {
    v5 = *(_QWORD *)(v2 + 40);
    v6 = *(_QWORD *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), v5);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5, v6);
  }
  else
  {
    sub_19CDBAADC();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_19CDBA96C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PackageDataBlobFormatWriter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackageDataBlobFormatWriter);
}

uint64_t sub_19CDBA99C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDBA9E8 + 4 * byte_19D052405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDBAA1C + 4 * byte_19D052400[v4]))();
}

uint64_t sub_19CDBAA1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDBAA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDBAA2CLL);
  return result;
}

uint64_t sub_19CDBAA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDBAA40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDBAA44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDBAA4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for PackageDataBlobFormatWriter.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackageDataBlobFormatWriter.State);
}

void sub_19CDBAA64()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CDBAA74(uint64_t a1, uint64_t a2)
{
  return sub_19CDBA824(a1, a2);
}

uint64_t sub_19CDBAA88(uint64_t a1, uint64_t a2)
{
  return sub_19CDBA8C8(a1, a2);
}

uint64_t sub_19CDBAA9C(uint64_t a1, uint64_t a2)
{
  return sub_19CDBAA74(a1, a2);
}

uint64_t sub_19CDBAABC(uint64_t a1, uint64_t a2)
{
  return sub_19CDBAA88(a1, a2);
}

unint64_t sub_19CDBAADC()
{
  unint64_t result;

  result = qword_1EE43E2D8;
  if (!qword_1EE43E2D8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0525CC, &type metadata for PackageDataBlobFormatWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE43E2D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PackageDataBlobFormatWriterError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CDBAB60 + 4 * byte_19D05240A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CDBAB80 + 4 * byte_19D05240F[v4]))();
}

_BYTE *sub_19CDBAB60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CDBAB80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDBAB88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDBAB90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDBAB98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDBABA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PackageDataBlobFormatWriterError()
{
  return &type metadata for PackageDataBlobFormatWriterError;
}

unint64_t sub_19CDBABC0()
{
  unint64_t result;

  result = qword_1EE43E2E0;
  if (!qword_1EE43E2E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0525A4, &type metadata for PackageDataBlobFormatWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE43E2E0);
  }
  return result;
}

id JSValue.init<each A, B>(in:function:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id result;
  id v18;
  _QWORD v19[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = swift_allocateMetadataPack();
  v14[4] = a6;
  v14[5] = swift_allocateWitnessTablePack();
  v14[6] = a8;
  v14[7] = a2;
  v14[8] = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_19CDBB800;
  *(_QWORD *)(v15 + 24) = v14;
  v19[4] = sub_19CD1535C;
  v19[5] = v15;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_19CD15324;
  v19[3] = &block_descriptor_0;
  v16 = _Block_copy(v19);
  swift_retain();
  swift_release();
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v16, a1);
  if (result)
  {
    v18 = result;

    swift_release();
    _Block_release(v16);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_19CDBAD6C(uint64_t a1, uint64_t a2, _DWORD *a3, void (*a4)(char *, __n128), _QWORD *a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  char *v20;
  unint64_t v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id result;
  id v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(char *, __n128);
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  _DWORD *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;

  v15 = (unint64_t)a3;
  v65 = a1;
  v16 = (_QWORD *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  v17 = 8 * a6;
  if (a6 == 1)
  {
    TupleTypeMetadata = *v16;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1, a2);
    v20 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a6)
    {
      v21 = 0;
      if (a6 < 4)
        goto LABEL_9;
      if ((unint64_t)(v20 - (char *)v16) < 0x20)
        goto LABEL_9;
      v21 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      v22 = (__int128 *)(v16 + 2);
      v23 = v20 + 16;
      v24 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 4;
      }
      while (v24);
      if (v21 != a6)
      {
LABEL_9:
        v26 = a6 - v21;
        v27 = v21;
        v28 = &v20[8 * v21];
        v29 = &v16[v27];
        do
        {
          v30 = *v29++;
          *(_QWORD *)v28 = v30;
          v28 += 8;
          --v26;
        }
        while (v26);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v15 = (unint64_t)a3;
  }
  v61 = TupleTypeMetadata;
  v57 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata, a2);
  v68 = (char *)&v50 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = &v50;
  v56 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v32, v33);
  v58 = (char *)&v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = &v50;
  v37.n128_f64[0] = MEMORY[0x1E0C80A78](v35, v36);
  v67 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a6)
  {
LABEL_36:
    v49 = v58;
    a9 = (uint64_t)a5;
    a4(v67, v37);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v68, v61);
    if (!v10)
    {
      a9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 16))(v65, a8, a10);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v49, a8);
    }
    return (id)a9;
  }
  v52 = a4;
  v53 = a8;
  v51 = a5;
  v54 = &v50;
  if (v15 >> 62)
  {
LABEL_41:
    v63 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v39 = sub_19CFE0394();
  }
  else
  {
    v63 = v15 & 0xFFFFFFFFFFFFFF8;
    v39 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v40 = 0;
  v41 = 0;
  v64 = v15 & 0xC000000000000001;
  v55 = v15;
  v62 = (_DWORD *)(v15 + 32);
  v66 = a9 & 0xFFFFFFFFFFFFFFFELL;
  v15 = v61 + 32;
  while (1)
  {
    if (v41 == v39)
    {
      result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, v65);
      v41 = v39;
      if (!result)
      {
        __break(1u);
        return result;
      }
      goto LABEL_23;
    }
    if (v64)
      break;
    if ((v41 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v41 >= *(_QWORD *)(v63 + 16))
      goto LABEL_40;
    v43 = *(id *)&v62[2 * v41];
    v44 = __OFADD__(v41++, 1);
    if (v44)
      goto LABEL_31;
LABEL_23:
    if (a6 == 1)
      v45 = 0;
    else
      v45 = *(_DWORD *)v15;
    a5 = v16;
    v46 = v16[v40];
    v47 = &v68[v45];
    a9 = v46;
    (*(void (**)(void))(*(_QWORD *)(v66 + 8 * v40) + 8))();
    if (v10)
      goto LABEL_32;
    *(_QWORD *)&v67[8 * v40++] = v47;
    v15 += 16;
    v16 = a5;
    if (a6 == v40)
    {
      swift_bridgeObjectRelease();
      a4 = v52;
      a8 = v53;
      a5 = v51;
      goto LABEL_36;
    }
  }
  MEMORY[0x1A1ADA390](v41, v55);
  v44 = __OFADD__(v41++, 1);
  if (!v44)
    goto LABEL_23;
LABEL_31:
  __break(1u);
LABEL_32:
  swift_bridgeObjectRelease();
  if (v40)
  {
    a9 = (uint64_t)(a5 - 1);
    v48 = v67 - 8;
    do
    {
      (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a9 + 8 * v40) - 8) + 8))(*(_QWORD *)&v48[8 * v40]);
      --v40;
    }
    while (v40);
  }
  return (id)a9;
}

id JSValue.init<each A>(in:function:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id result;
  id v12;
  _QWORD v13[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a4;
  v8[3] = swift_allocateMetadataPack();
  v8[4] = swift_allocateWitnessTablePack();
  v8[5] = a2;
  v8[6] = a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_19CDBB854;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_19CD157A4;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_19CD15324;
  v13[3] = &block_descriptor_13;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v10, a1);
  if (result)
  {
    v12 = result;

    swift_release();
    _Block_release(v10);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_19CDBB318(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(char *), _QWORD *a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v8;
  _QWORD *v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata;
  char *v15;
  unint64_t v16;
  __int128 *v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  id result;
  id v36;
  BOOL v37;
  int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(char *);
  uint64_t *v45;
  uint64_t *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char *v55;

  v43 = a5;
  v44 = a4;
  v52 = a1;
  v12 = (_QWORD *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  v13 = 8 * a6;
  if (a6 == 1)
  {
    TupleTypeMetadata = *v12;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1, a2);
    v15 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a6)
    {
      v16 = 0;
      if (a6 < 4)
        goto LABEL_9;
      if ((unint64_t)(v15 - (char *)v12) < 0x20)
        goto LABEL_9;
      v16 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      v17 = (__int128 *)(v12 + 2);
      v18 = v15 + 16;
      v19 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v20 = *v17;
        *(v18 - 1) = *(v17 - 1);
        *v18 = v20;
        v17 += 2;
        v18 += 2;
        v19 -= 4;
      }
      while (v19);
      if (v16 != a6)
      {
LABEL_9:
        v21 = a6 - v16;
        v22 = v16;
        v23 = &v15[8 * v16];
        v24 = &v12[v22];
        do
        {
          v25 = *v24++;
          *(_QWORD *)v23 = v25;
          v23 += 8;
          --v21;
        }
        while (v21);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  v46 = &v41;
  MEMORY[0x1E0C80A78](TupleTypeMetadata, a2);
  v55 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = &v41;
  MEMORY[0x1E0C80A78](v27, v28);
  v54 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (void *)a3;
  v48 = v29;
  v42 = v30;
  if (a6)
  {
    v53 = v12;
    if (a3 >> 62)
    {
LABEL_44:
      v50 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v31 = sub_19CFE0394();
    }
    else
    {
      v50 = a3 & 0xFFFFFFFFFFFFFF8;
      v31 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v32 = 0;
    v33 = 0;
    v51 = a3 & 0xC000000000000001;
    v49 = a3 + 32;
    a3 = a8 & 0xFFFFFFFFFFFFFFFELL;
    v34 = (_DWORD *)(v48 + 32);
    while (1)
    {
      if (v33 == v31)
      {
        result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, v52);
        v33 = v31;
        if (!result)
        {
          __break(1u);
          goto LABEL_45;
        }
      }
      else if (v51)
      {
        MEMORY[0x1A1ADA390](v33, v47);
        v37 = __OFADD__(v33++, 1);
        if (v37)
          goto LABEL_31;
      }
      else
      {
        if ((v33 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        if (v33 >= *(_QWORD *)(v50 + 16))
          goto LABEL_43;
        v36 = *(id *)(v49 + 8 * v33);
        v37 = __OFADD__(v33++, 1);
        if (v37)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
      }
      v38 = a6 == 1 ? 0 : *v34;
      v39 = &v55[v38];
      a8 = v53[v32];
      (*(void (**)(void))(*(_QWORD *)(a3 + 8 * v32) + 8))();
      if (v8)
        break;
      *(_QWORD *)&v54[8 * v32++] = v39;
      v34 += 4;
      if (a6 == v32)
        goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    if (v32)
    {
      a8 = (unint64_t)(v53 - 1);
      v40 = v54 - 8;
      do
      {
        (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a8 + 8 * v32) - 8) + 8))(*(_QWORD *)&v40[8 * v32]);
        --v32;
      }
      while (v32);
    }
    return (id)a8;
  }
LABEL_32:
  swift_bridgeObjectRetain();
LABEL_33:
  a8 = (unint64_t)v43;
  v44(v54);
  if (v8)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v48);
    return (id)a8;
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v48);
  a8 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, v52);
  result = v47;
  if (a8)
  {
    swift_bridgeObjectRelease();
    return (id)a8;
  }
LABEL_45:
  __break(1u);
  return result;
}

id JSValue.function(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;

  v7 = objc_msgSend(v4, sel_isObject);
  if (!(_DWORD)v7)
    return v7;
  result = objc_msgSend(v4, sel_context);
  if (result)
  {
    v9 = result;
    v10 = _sSo7JSValueC9JetEngineE12makeFunction2in5whereABSo9JSContextC_AbH_ABSayABGtKctFZ_0((uint64_t)result, a3, a4);

    swift_bridgeObjectRetain();
    v11 = v10;
    v12 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setValue_forProperty_, v11, v12);

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CDBB7DC()
{
  swift_release();
  return swift_deallocObject();
}

id sub_19CDBB800(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v3;

  return sub_19CDBAD6C(a1, a2, a3, *(void (**)(char *, __n128))(v3 + 56), *(_QWORD **)(v3 + 64), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t sub_19CDBB830()
{
  swift_release();
  return swift_deallocObject();
}

id sub_19CDBB854(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_19CDBB318(a1, a2, a3, *(void (**)(char *))(v3 + 40), *(_QWORD **)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_19CDBB874()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDBB898@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v4 + 16))(*a1, *a2, *a3);
  if (!v5)
    *a4 = result;
  return result;
}

uint64_t DeepLinkIntentImplementation.init(dispatching:routes:)@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = a1();
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t DeepLinkIntentImplementation.init<>(routes:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = a1();
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t DeepLinkIntentImplementation.intentKind.getter(uint64_t a1)
{
  return sub_19CDBC1EC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t DeepLinkIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t matched;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[23] = a3;
  v5[24] = a4;
  v5[21] = a1;
  v5[22] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E2F8);
  v5[25] = swift_task_alloc();
  matched = type metadata accessor for URLExpression.MatchResult();
  v5[26] = matched;
  v5[27] = *(_QWORD *)(matched - 8);
  v5[28] = swift_task_alloc();
  v8 = sub_19CFDEDE0();
  v5[29] = v8;
  v5[30] = *(_QWORD *)(v8 - 8);
  v5[31] = swift_task_alloc();
  v9 = *(_QWORD *)(a4 + 16);
  v5[32] = v9;
  v5[33] = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v11 = *v4;
  v5[34] = v10;
  v5[35] = v11;
  return swift_task_switch();
}

uint64_t sub_19CDBBA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  int *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 264) + 16))(v1, *(_QWORD *)(v0 + 176), v3);
  Dependency.init<A>(satisfying:with:)(v3, v1, v3, (_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 288) = sub_19CD0CDB8((uint64_t *)(v0 + 16));
  sub_19CD4C098(v0 + 16);
  v4 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 296) = v4;
  if (v4)
  {
    v29 = (_OWORD *)(v0 + 56);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 24);
    *(_QWORD *)(v0 + 304) = v5;
    v31 = v5;
    v30 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 312) = v30;
    v6 = swift_bridgeObjectRetain();
    v7 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 320) = v7;
      v8 = *(_QWORD *)(v0 + 248);
      v32 = *(_QWORD *)(v0 + 256);
      v33 = *(_QWORD *)(v0 + 216);
      v9 = *(_QWORD *)(v0 + 200);
      v34 = *(_QWORD *)(v0 + 208);
      v10 = (_QWORD *)(v6 + 48 * v7);
      v11 = (void *)v10[4];
      *(_QWORD *)(v0 + 328) = v11;
      v12 = (void *)v10[5];
      *(_QWORD *)(v0 + 336) = v12;
      v13 = (void *)v10[6];
      *(_QWORD *)(v0 + 344) = v13;
      v14 = v10[7];
      *(_QWORD *)(v0 + 352) = v14;
      v15 = (int *)v10[8];
      *(_QWORD *)(v0 + 360) = v10[9];
      v16 = v11;
      v17 = v12;
      v18 = v13;
      swift_bridgeObjectRetain();
      swift_retain();
      v30(v32, v31);
      *(_QWORD *)(v0 + 136) = v16;
      *(_QWORD *)(v0 + 144) = v17;
      *(_QWORD *)(v0 + 152) = v18;
      *(_QWORD *)(v0 + 160) = v14;
      URLExpression.match(_:)(v8, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v9, 1, v34) != 1)
      {
        sub_19CDBC2B4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
        v35 = (int *)((char *)v15 + *v15);
        v24 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 368) = v24;
        *v24 = v0;
        v24[1] = sub_19CDBBD5C;
        return ((uint64_t (*)(_OWORD *, _QWORD, _QWORD))v35)(v29, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 288));
      }
      sub_19CCECFE4(*(_QWORD *)(v0 + 200), &qword_1EE43E2F8);
      *v29 = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      *(_QWORD *)(v0 + 88) = 0;
      v20 = *(void **)(v0 + 336);
      v19 = *(void **)(v0 + 344);
      v21 = *(void **)(v0 + 328);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));

      swift_bridgeObjectRelease();
      swift_release();
      v28 = v0 + 96;
      sub_19CDBC224((uint64_t)v29, v0 + 96);
      if (*(_QWORD *)(v0 + 120))
      {
        v26 = *(_QWORD *)(v0 + 168);
        swift_bridgeObjectRelease();
        swift_release();
        sub_19CCECFE4(v28, qword_1EE43E300);
        sub_19CDBC26C((uint64_t)v29, v26);
        goto LABEL_11;
      }
      v22 = *(_QWORD *)(v0 + 296);
      v23 = *(_QWORD *)(v0 + 320) + 1;
      sub_19CCECFE4((uint64_t)v29, qword_1EE43E300);
      sub_19CCECFE4(v28, qword_1EE43E300);
      if (v23 == v22)
        break;
      v7 = *(_QWORD *)(v0 + 320) + 1;
      v30 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      v31 = *(_QWORD *)(v0 + 304);
      v6 = *(_QWORD *)(v0 + 280);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  v27 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v27 + 32) = 0;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBBD5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CDBBDC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  int *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int *v30;

  v1 = v0 + 56;
  sub_19CDBC2F8(*(_QWORD *)(v0 + 224));
  v24 = (_OWORD *)(v0 + 56);
  while (1)
  {
    v3 = *(void **)(v0 + 336);
    v2 = *(void **)(v0 + 344);
    v4 = *(void **)(v0 + 328);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));

    swift_bridgeObjectRelease();
    swift_release();
    sub_19CDBC224(v1, v0 + 96);
    if (*(_QWORD *)(v0 + 120))
    {
      v19 = *(_QWORD *)(v0 + 168);
      swift_bridgeObjectRelease();
      swift_release();
      sub_19CCECFE4(v0 + 96, qword_1EE43E300);
      sub_19CDBC26C(v1, v19);
LABEL_8:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 320) + 1;
    sub_19CCECFE4(v1, qword_1EE43E300);
    sub_19CCECFE4(v0 + 96, qword_1EE43E300);
    if (v6 == v5)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v20 = *(_QWORD *)(v0 + 168);
      *(_QWORD *)(v20 + 32) = 0;
      *(_OWORD *)v20 = 0u;
      *(_OWORD *)(v20 + 16) = 0u;
      goto LABEL_8;
    }
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v8 = *(_QWORD *)(v0 + 320) + 1;
    *(_QWORD *)(v0 + 320) = v8;
    v26 = *(_QWORD *)(v0 + 304);
    v27 = v7;
    v9 = *(_QWORD *)(v0 + 248);
    v25 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 200);
    v28 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 208);
    v11 = (_QWORD *)(*(_QWORD *)(v0 + 280) + 48 * v8);
    v12 = (void *)v11[4];
    *(_QWORD *)(v0 + 328) = v12;
    v13 = (void *)v11[5];
    *(_QWORD *)(v0 + 336) = v13;
    v14 = (void *)v11[6];
    *(_QWORD *)(v0 + 344) = v14;
    v15 = v11[7];
    *(_QWORD *)(v0 + 352) = v15;
    v23 = (int *)v11[8];
    *(_QWORD *)(v0 + 360) = v11[9];
    v16 = v12;
    v17 = v13;
    v18 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    v27(v25, v26);
    *(_QWORD *)(v0 + 136) = v16;
    *(_QWORD *)(v0 + 144) = v17;
    *(_QWORD *)(v0 + 152) = v18;
    *(_QWORD *)(v0 + 160) = v15;
    URLExpression.match(_:)(v9, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v10, 1, v29) != 1)
      break;
    sub_19CCECFE4(*(_QWORD *)(v0 + 200), &qword_1EE43E2F8);
    v1 = v0 + 56;
    *v24 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
  }
  sub_19CDBC2B4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
  v30 = (int *)((char *)v23 + *v23);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v22;
  *v22 = v0;
  v22[1] = sub_19CDBBD5C;
  return ((uint64_t (*)(_OWORD *, _QWORD, _QWORD))v30)(v24, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 288));
}

uint64_t sub_19CDBC08C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 344);
  v3 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 232);
  sub_19CDBC2F8(*(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBC168(uint64_t a1)
{
  return sub_19CDBC1EC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_19CDBC174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return DeepLinkIntentImplementation.perform(_:objectGraph:)(a1, a2, a3, a4);
}

uint64_t sub_19CDBC1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)(a2 + 8) + 24))(&v3);
  return v3;
}

uint64_t sub_19CDBC224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43E300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDBC26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43E300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDBC2B4(uint64_t a1, uint64_t a2)
{
  uint64_t matched;

  matched = type metadata accessor for URLExpression.MatchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 32))(a2, a1, matched);
  return a2;
}

uint64_t sub_19CDBC2F8(uint64_t a1)
{
  uint64_t matched;

  matched = type metadata accessor for URLExpression.MatchResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 8))(a1, matched);
  return a1;
}

uint64_t sub_19CDBC334(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
}

uint64_t type metadata accessor for DeepLinkIntentImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeepLinkIntentImplementation);
}

Swift::Double __swiftcall JSONTimeUnit.timeInterval(byConverting:)(Swift::Double byConverting)
{
  _BYTE *v1;

  if (*v1)
    return byConverting / 1000.0;
  return byConverting;
}

Swift::Double __swiftcall JSONTimeUnit.value(byConverting:)(Swift::Double byConverting)
{
  _BYTE *v1;

  if (*v1)
    return byConverting * 1000.0;
  return byConverting;
}

BOOL static JSONTimeUnit.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONTimeUnit.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JSONTimeUnit.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t _s9JetEngine0A18PackageWriterErrorO9hashValueSivg_0()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDBC454()
{
  return sub_19CFE08D4();
}

uint64_t sub_19CDBC47C()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CDBC4C0()
{
  unint64_t result;

  result = qword_1EE43E390;
  if (!qword_1EE43E390)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONTimeUnit, &type metadata for JSONTimeUnit);
    atomic_store(result, (unint64_t *)&qword_1EE43E390);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JSONTimeUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDBC550 + 4 * byte_19D05266D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDBC584 + 4 * byte_19D052668[v4]))();
}

uint64_t sub_19CDBC584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDBC58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDBC594);
  return result;
}

uint64_t sub_19CDBC5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDBC5A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDBC5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDBC5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDBC5C0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19CDBC5E4()
{
  if (qword_1ECEB0AC8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_19CDBC624()
{
  type metadata accessor for MetricsPipeline.CallingOutActor();
  return sub_19CFE00D0();
}

BOOL static MetricsPipeline.FlushBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MetricsPipeline.FlushBehavior.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t MetricsPipeline.FlushBehavior.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t MetricsPipeline.Configuration.init(bag:linter:anonymousTopics:recorder:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v9 = *a1;
  *(_OWORD *)(a5 + 136) = 0u;
  *(_OWORD *)(a5 + 152) = 0u;
  *(_QWORD *)(a5 + 168) = 0;
  *(_QWORD *)a5 = v9;
  sub_19CCD5B84(a2, a5 + 8);
  *(_QWORD *)(a5 + 48) = a3;
  v10 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  *(_QWORD *)(a5 + 80) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
  *(_QWORD *)(a5 + 88) = &protocol witness table for ACAccountStore;
  *(_QWORD *)(a5 + 56) = v10;
  *(_QWORD *)(a5 + 96) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  *(_QWORD *)(a5 + 104) = &type metadata for StandardMetricsFieldsBuilder;
  *(_QWORD *)(a5 + 112) = &protocol witness table for StandardMetricsFieldsBuilder;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_19CD5A098(MEMORY[0x1E0DEE9D8]);
  v13 = sub_19CD5A0AC(v11);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  *(_QWORD *)(a5 + 120) = v12;
  *(_QWORD *)(a5 + 128) = v13;
  return sub_19CCD14C4(a4, a5 + 176);
}

uint64_t *MetricsPipeline.Configuration.withAccountProvider(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CD5F180(v2, a2);
  return __swift_assign_boxed_opaque_existential_1((uint64_t *)(a2 + 56), a1);
}

void MetricsPipeline.Configuration.withBundle(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CD5F180(v2, a2);
  objc_storeStrong((id *)(a2 + 96), a1);
}

uint64_t MetricsPipeline.Configuration.withBuilderType(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_19CD5F180(v3, a3);
  *(_QWORD *)(a3 + 104) = a1;
  *(_QWORD *)(a3 + 112) = a2;
  return result;
}

uint64_t MetricsPipeline.Configuration.withAggregator(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  sub_19CD5F180(v2, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 120) = v4;
  *(_QWORD *)(a2 + 128) = v5;
  return result;
}

uint64_t MetricsPipeline.Configuration.withTreatmentFilter(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CD5F180(v2, a2);
  sub_19CCECFE4(a2 + 136, &qword_1ECEB11E8);
  return sub_19CCD5B84(a1, a2 + 136);
}

uint64_t MetricsPipeline.init(builderType:aggregator:linter:recorder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _BYTE v13[40];
  _BYTE v14[40];
  __int128 v15;

  v15 = *a3;
  sub_19CCD5B84(a4, (uint64_t)v14);
  sub_19CCD5B84(a5, (uint64_t)v13);
  v12 = 0;
  MetricsPipeline.init(builderType:aggregator:linter:recorder:bag:)(a1, a2, &v15, (uint64_t)v14, (uint64_t)v13, &v12, a6);
  __swift_destroy_boxed_opaque_existential_1Tm(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a4);
}

void MetricsPipeline.flushBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 176);
}

uint64_t MetricsPipeline.withFlushBehavior(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t result;

  v4 = *a1;
  result = sub_19CD50F74(v2, a2);
  *(_BYTE *)(a2 + 176) = v4;
  return result;
}

uint64_t static MetricsPipeline.unstable_scheduleBarrier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v4 = sub_19CFDF2D8();
  v15[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF308();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB1750 != -1)
    swift_once();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_1;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_19CFDF2F0();
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v12, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v15[0] + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t sub_19CDBCC24()
{
  return swift_task_switch();
}

uint64_t sub_19CDBCC38()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBCC6C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_19CDBCCE4;
  *(_QWORD *)(v0 + 288) = swift_continuation_init();
  *(_BYTE *)(v0 + 360) = 1;
  sub_19CDBDCE8();
  sub_19CCECFE4(v0 + 288, &qword_1EE43D300);
  return swift_continuation_await();
}

uint64_t sub_19CDBCCE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 936) = v1;
  if (v1)
    swift_willThrow();
  else
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CDBCD60()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CDBCD9C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBCDD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v5;
  __int128 v6;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 800) + 16) & 1) == 0 || (*(_BYTE *)(v0 + 281) & 1) != 0)
  {
    v5 = *(_OWORD **)(v0 + 776);
    v6 = *(_OWORD *)(v0 + 912);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
    *v5 = v6;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = *(_QWORD **)(v0 + 792);
    v2 = v1[17];
    v3 = v1[18];
    __swift_project_boxed_opaque_existential_1(v1 + 14, v2);
    *(_QWORD *)(v0 + 944) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
    return swift_task_switch();
  }
}

uint64_t sub_19CDBCE84()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CDBCED8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBCF0C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 95;
  v0[2] = v0;
  v0[3] = sub_19CDBCF88;
  v0[26] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 26);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBE050();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB06F0);
  return swift_continuation_await();
}

uint64_t sub_19CDBCF88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 952) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 960) = *(_QWORD *)(v1 + 760);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CDBD00C()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  Swift::String v14;
  _OWORD *v15;
  __int128 v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v1 = (__int128 *)(v0 + 488);
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 960);
  v3 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v18 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0x2064656873756C66;
  v6._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  *(_QWORD *)(v0 + 624) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v0 + 600) = v2;
  sub_19CCF8C5C(v0 + 600, v0 + 568, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  sub_19CD1A39C(v0 + 568, v0 + 488, &qword_1ECEB3370);
  *(_BYTE *)(v0 + 520) = 0;
  v7 = *(_OWORD *)(v0 + 504);
  v19 = *v1;
  v20 = v7;
  v21 = *(_BYTE *)(v0 + 520);
  v8 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_19CD40918((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v10 + 1;
  v11 = &v8[5 * v10];
  v12 = v19;
  v13 = v20;
  *((_BYTE *)v11 + 64) = v21;
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  v18 = v8;
  sub_19CCECFE4(v0 + 600, &qword_1ECEB3370);
  v14._object = (void *)0x800000019D06DFD0;
  v14._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)&v19 = v5;
  LOBYTE(v18) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  v15 = *(_OWORD **)(v0 + 776);
  v17 = *(_OWORD *)(v0 + 912);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  *v15 = v17;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBD24C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  _OWORD *v18;
  __int128 v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v1 = (__int128 *)(v0 + 528);
  swift_release();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v21 = sub_19CD40918(0, 44, 0, MEMORY[0x1E0DEE9D8]);
  v5._object = (void *)0x800000019D06DFA0;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  v6 = *(_QWORD *)(v0 + 696);
  v7 = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 656) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 632));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19CCF8C5C(v0 + 632, v0 + 664, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  sub_19CD1A39C(v0 + 664, v0 + 528, &qword_1ECEB3370);
  *(_BYTE *)(v0 + 560) = 0;
  v9 = *(_OWORD *)(v0 + 544);
  v22 = *v1;
  v23 = v9;
  v24 = *(_BYTE *)(v0 + 560);
  v10 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v21[2] + 1, 1, v21);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v13 = *(void **)(v0 + 952);
  v10[2] = v12 + 1;
  v14 = &v10[5 * v12];
  v15 = v22;
  v16 = v23;
  *((_BYTE *)v14 + 64) = v24;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  v21 = v10;
  sub_19CCECFE4(v0 + 632, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v3 + 32) = v10;
  *(_QWORD *)&v22 = v4;
  LOBYTE(v21) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v21);
  swift_bridgeObjectRelease();

  v18 = *(_OWORD **)(v0 + 776);
  v20 = *(_OWORD *)(v0 + 912);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  *v18 = v20;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19CDBD4C8(void *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[32];
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[4];
  _QWORD *v23;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v23 = sub_19CD40918(0, 44, 0, MEMORY[0x1E0DEE9D8]);
  v5._object = (void *)0x800000019D06DF70;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  v22[3] = v21;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v20, v21);
  sub_19CCF8C5C((uint64_t)v22, (uint64_t)v16, &qword_1ECEB3370);
  v14 = 0u;
  v15 = 0u;
  sub_19CD1A39C((uint64_t)v16, (uint64_t)&v14, &qword_1ECEB3370);
  v19 = 0;
  v17 = v14;
  v18 = v15;
  v7 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_19CD40918(0, v7[2] + 1, 1, v7);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_19CD40918((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  v10 = &v7[5 * v9];
  v11 = v17;
  v12 = v18;
  *((_BYTE *)v10 + 64) = v19;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  v23 = v7;
  sub_19CCECFE4((uint64_t)v22, &qword_1ECEB3370);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(_QWORD *)(v3 + 32) = v23;
  *(_QWORD *)&v17 = v4;
  LOBYTE(v14) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  swift_bridgeObjectRelease();
  sub_19CEB9E30(a1);
}

uint64_t MetricsPipeline.process(_:using:)(uint64_t a1, __int128 *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 184) = v3;
  v5 = *a2;
  *(_BYTE *)(v4 + 153) = *((_BYTE *)a2 + 16);
  v6 = *(__int128 *)((char *)a2 + 24);
  *(_OWORD *)(v4 + 192) = v5;
  *(_OWORD *)(v4 + 208) = v6;
  v7 = *a3;
  *(_QWORD *)(v4 + 224) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(v4 + 232) = v7;
  return swift_task_switch();
}

uint64_t sub_19CDBD724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_BYTE *)(v0 + 153);
  v4 = *(_OWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 192);
  v7 = v3;
  v8 = v4;
  v9 = v2;
  v10 = v1;
  *(_QWORD *)(v0 + 240) = MetricsPipeline.process(_:using:)((uint64_t)&v6, &v10);
  return swift_task_switch();
}

uint64_t sub_19CDBD78C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CDBD808;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD1929C();
  sub_19CCECFE4(v1, &qword_1ECEB0B50);
  return swift_continuation_await();
}

uint64_t sub_19CDBD808()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 248) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_OWORD *)*(_QWORD *)(v1 + 176) = *(_OWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_19CDBD880()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDBD8B4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MetricsPipeline.builderType.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_19CDBD8F0()
{
  sub_19CCD447C();
}

void sub_19CDBD914()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBD984()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[184];

  sub_19CCF8C5C(v3, (uint64_t)v12, &qword_1EE43E4D0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED5820(0, v2[2] + 1, 1, v2);
  v6 = v2[2];
  v5 = v2[3];
  if (v6 >= v5 >> 1)
    v2 = sub_19CED5820((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
  v2[2] = v6 + 1;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v6 + 4], &qword_1EE43E4D0);
  v7 = *(void **)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  v11 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(v4 + 24) = 0;
  sub_19CDC30E0(v7, v8, v9, v10, v11);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBDB14()
{
  sub_19CDBDE9C();
}

void sub_19CDBDB38()
{
  uint64_t v0;
  _BYTE v1[48];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE437360);
  __asm { BR              X10 }
}

void sub_19CDBDBA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDB34(v37);

}

void sub_19CDBDCE8()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBDD44()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[152];

  sub_19CCF8C5C(v3, (uint64_t)v12, &qword_1EE43D300);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED5ABC(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v5 = v2[3];
  v6 = v4 + 1;
  if (v4 >= v5 >> 1)
  {
    v9 = v2;
    v10 = v2[2];
    v11 = sub_19CED5ABC((_QWORD *)(v5 > 1), v4 + 1, 1, v9);
    v4 = v10;
    v2 = v11;
  }
  v2[2] = v6;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v4 + 4], &qword_1EE43D300);
  v7 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v8 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC2EE0(v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBDE78()
{
  sub_19CDBDE9C();
}

void sub_19CDBDE9C()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBDF10()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t (*v4)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  char v9;
  _BYTE v10[184];

  sub_19CCF8C5C(v5, (uint64_t)v10, v3);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = v4(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  if (v7 >= v6 >> 1)
    v2 = v4(v6 > 1, v7 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v7 + 1;
  sub_19CCC290C((uint64_t)v10, v2 + 80 * v7 + 32, v3);
  v8 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v9 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC3118(v8, v9);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBE050()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBE0AC()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[152];

  sub_19CCF8C5C(v3, (uint64_t)v12, (uint64_t *)&unk_1ECEB06F0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED5BDC(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v5 = v2[3];
  v6 = v4 + 1;
  if (v4 >= v5 >> 1)
  {
    v9 = v2;
    v10 = v2[2];
    v11 = sub_19CED5BDC((_QWORD *)(v5 > 1), v4 + 1, 1, v9);
    v4 = v10;
    v2 = v11;
  }
  v2[2] = v6;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v4 + 4], (uint64_t *)&unk_1ECEB06F0);
  v7 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v8 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC2EE0(v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBE1E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for MTMetricsIdentifier();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E3B0);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v0[2] + 16));
  v9 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v9, (uint64_t)v8, (uint64_t *)&unk_1EE43E3B0);
  v10 = (char *)sub_19CDBE300 + 4 * byte_19D052720[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDBE300(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDBDC(v22);

}

void sub_19CDBE460(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v12 = a1;
  v2 = sub_19CFDE90C();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E0);
  MEMORY[0x1E0C80A78](v4, v5);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v12 - v8;
  os_unfair_lock_lock((os_unfair_lock_t)(v1[2] + 16));
  v10 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v10, (uint64_t)v9, &qword_1ECEB15E0);
  v11 = (char *)sub_19CDBE580 + 4 * byte_19D052724[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDBE580(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDC30(v22);

}

void sub_19CDBE6E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v12 = a1;
  v2 = sub_19CFDEDE0();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v4, v5);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v12 - v8;
  os_unfair_lock_lock((os_unfair_lock_t)(v1[2] + 16));
  v10 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v10, (uint64_t)v9, &qword_1ECEB2418);
  v11 = (char *)sub_19CDBE800 + 4 * byte_19D052728[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDBE800(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDC84(v22);

}

void sub_19CDBE960()
{
  uint64_t v0;
  _BYTE v1[48];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE440CB0);
  __asm { BR              X10 }
}

void sub_19CDBE9D0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDCA0(v37);

}

void sub_19CDBEB10()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBEB70()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  _BYTE v9[168];

  sub_19CCF8C5C(v3, (uint64_t)v9, &qword_1EE43E3F0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED5FAC(0, v2[2] + 1, 1, v2);
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
    v2 = sub_19CED5FAC((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
  v2[2] = v5 + 1;
  sub_19CCC290C((uint64_t)v9, (uint64_t)&v2[10 * v5 + 4], &qword_1EE43E3F0);
  v6 = *(void **)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = 0;
  v8 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = 0;
  sub_19CDC2CA4(v6, v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBECC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for JSSource();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B90);
  MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v0[2] + 16));
  v9 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v9, (uint64_t)v8, &qword_1EE436B90);
  v10 = (char *)sub_19CDBEDE0 + 4 * byte_19D052734[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDBEDE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDCBC(v22);

}

void sub_19CDBEF40()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBEFAC()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  void *v9;
  char v10;
  _BYTE v11[184];

  sub_19CCF8C5C(v3, (uint64_t)v11, &qword_1ECEB0920);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED5FD4(0, v2[2] + 1, 1, v2);
  v6 = v2[2];
  v5 = v2[3];
  if (v6 >= v5 >> 1)
    v2 = sub_19CED5FD4((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
  v2[2] = v6 + 1;
  sub_19CCC290C((uint64_t)v11, (uint64_t)&v2[10 * v6 + 4], &qword_1ECEB0920);
  v7 = *(void **)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  v10 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(v4 + 16) = 0;
  sub_19CDC2F04(v7, v8, v9, v10);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBF124()
{
  sub_19CCD447C();
}

void sub_19CDBF148()
{
  uint64_t v0;
  _BYTE v1[48];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, &qword_1EE43E480);
  __asm { BR              X10 }
}

void sub_19CDBF1B8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDD64(v37);

}

void sub_19CDBF2F8()
{
  sub_19CD23300();
}

void sub_19CDBF31C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for PageIntentInstrumentation();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E498);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v0[2] + 16));
  v9 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v9, (uint64_t)v8, &qword_1EE43E498);
  v10 = (char *)sub_19CDBF438 + 4 * byte_19D05274C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDBF438(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDD9C(v22);

}

void sub_19CDBF598()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBF5F4()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[152];

  sub_19CCF8C5C(v3, (uint64_t)v12, &qword_1EE439CD0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED604C(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v5 = v2[3];
  v6 = v4 + 1;
  if (v4 >= v5 >> 1)
  {
    v9 = v2;
    v10 = v2[2];
    v11 = sub_19CED604C((_QWORD *)(v5 > 1), v4 + 1, 1, v9);
    v4 = v10;
    v2 = v11;
  }
  v2[2] = v6;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v4 + 4], &qword_1EE439CD0);
  v7 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v8 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC2EE0(v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBF72C()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBF788()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[152];

  sub_19CCF8C5C(v3, (uint64_t)v12, &qword_1EE43BE60);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED6060(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v5 = v2[3];
  v6 = v4 + 1;
  if (v4 >= v5 >> 1)
  {
    v9 = v2;
    v10 = v2[2];
    v11 = sub_19CED6060((_QWORD *)(v5 > 1), v4 + 1, 1, v9);
    v4 = v10;
    v2 = v11;
  }
  v2[2] = v6;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v4 + 4], &qword_1EE43BE60);
  v7 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v8 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC2EE0(v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBF8C0()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBF944(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_unfair_lock_t lock, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  _QWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  os_unfair_lock_s *v75;
  _BYTE v76[304];

  sub_19CCF8C5C(v74, (uint64_t)v76, (uint64_t *)&unk_1ECEB03A0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v57 = sub_19CED6074(0, v57[2] + 1, 1, v57);
  v61 = v57[2];
  v60 = v57[3];
  if (v61 >= v60 >> 1)
    v57 = sub_19CED6074((_QWORD *)(v60 > 1), v61 + 1, 1, v57);
  v57[2] = v61 + 1;
  sub_19CCC290C((uint64_t)v76, (uint64_t)&v57[10 * v61 + 4], (uint64_t *)&unk_1ECEB03A0);
  v62 = *(void **)(v59 + 24);
  v63 = *(_QWORD *)(v59 + 32);
  v64 = *(_QWORD *)(v59 + 40);
  v65 = *(_QWORD *)(v59 + 48);
  v66 = *(_QWORD *)(v59 + 56);
  v67 = *(_QWORD *)(v59 + 64);
  v68 = *(_QWORD *)(v59 + 72);
  v69 = *(_QWORD *)(v59 + 80);
  v70 = *(_OWORD *)(v59 + 88);
  v71 = *(_QWORD *)(v59 + 104);
  v72 = *(_QWORD *)(v59 + 112);
  v73 = *(_BYTE *)(v59 + 120);
  *(_QWORD *)(v59 + 24) = v57;
  *v58 = 0u;
  v58[1] = 0u;
  v58[2] = 0u;
  v58[3] = 0u;
  v58[4] = 0u;
  *(_OWORD *)((char *)v58 + 73) = 0u;
  sub_19CDC2E30(v62, v63, v64, v65, v66, v67, v68, v69, v70, *((uint64_t *)&v70 + 1), v71, v72, v73);
  os_unfair_lock_unlock(v75);
}

void sub_19CDBFB74()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBFBD0()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[152];

  sub_19CCF8C5C(v3, (uint64_t)v12, &qword_1EE43BB60);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED63E0(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v5 = v2[3];
  v6 = v4 + 1;
  if (v4 >= v5 >> 1)
  {
    v9 = v2;
    v10 = v2[2];
    v11 = sub_19CED63E0((_QWORD *)(v5 > 1), v4 + 1, 1, v9);
    v4 = v10;
    v2 = v11;
  }
  v2[2] = v6;
  sub_19CCC290C((uint64_t)v12, (uint64_t)&v2[10 * v4 + 4], &qword_1EE43BB60);
  v7 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v8 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CDC2EE0(v7, v8);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBFD0C()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDBFD84()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[200];

  sub_19CCF8C5C(v3, (uint64_t)v14, (uint64_t *)&unk_1ECEB0180);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED63F4(0, v2[2] + 1, 1, v2);
  v6 = v2[2];
  v5 = v2[3];
  if (v6 >= v5 >> 1)
    v2 = sub_19CED63F4((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
  v2[2] = v6 + 1;
  sub_19CCC290C((uint64_t)v14, (uint64_t)&v2[10 * v6 + 4], (uint64_t *)&unk_1ECEB0180);
  v7 = *(void **)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(_QWORD *)(v1 + 56);
  v12 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 24) = v2;
  *v4 = 0u;
  v4[1] = 0u;
  v13 = *(_BYTE *)(v1 + 72);
  *(_OWORD *)((char *)v4 + 25) = 0u;
  sub_19CCEC56C(v7, v8, v9, v10, v11, v12, v13);
  os_unfair_lock_unlock(v0);
}

void sub_19CDBFF30()
{
  sub_19CDBDE9C();
}

void sub_19CDBFF54()
{
  uint64_t v0;
  _BYTE v1[48];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE43E470);
  __asm { BR              X10 }
}

void sub_19CDBFFC4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDE60(v37);

}

void sub_19CDC0104()
{
  sub_19CD1E44C();
}

void sub_19CDC0128()
{
  uint64_t v0;
  _BYTE v1[88];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE43E450);
  __asm { BR              X10 }
}

void sub_19CDC01A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, char a18, uint64_t a19, __int128 a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  os_unfair_lock_s *v40;
  void *v41;

  os_unfair_lock_unlock(v40);
  sub_19CEBDEB4(v41);

}

void sub_19CDC02F0()
{
  uint64_t v0;
  _BYTE v1[48];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE43E460);
  __asm { BR              X10 }
}

void sub_19CDC0360(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDED0(v37);

}

void sub_19CDC04A0()
{
  sub_19CDBDE9C();
}

void sub_19CDC04C4()
{
  sub_19CCD447C();
}

void sub_19CDC04E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for JetPackAsset(0);
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E410);
  MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v0[2] + 16));
  v9 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v9, (uint64_t)v8, (uint64_t *)&unk_1EE43E410);
  v10 = (char *)sub_19CDC0604 + 4 * byte_19D05277C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDC0604(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDF40(v22);

}

void sub_19CDC0764()
{
  uint64_t v0;
  _BYTE v1[64];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE43E430);
  __asm { BR              X10 }
}

void sub_19CDC07D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 a21,__int128 a22,__int128 a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDF5C(v37);

}

void sub_19CDC092C()
{
  uint64_t v0;
  _BYTE v1[64];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  sub_19CCF8C5C(v0 + 24, (uint64_t)v1, (uint64_t *)&unk_1EE43E420);
  __asm { BR              X10 }
}

void sub_19CDC09A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 a21,__int128 a22,__int128 a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  os_unfair_lock_s *v36;
  void *v37;

  os_unfair_lock_unlock(v36);
  sub_19CEBDF94(v37);

}

void sub_19CDC0AF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for JSPackageIndex();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  os_unfair_lock_lock((os_unfair_lock_t)(v0[2] + 16));
  v9 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v9, (uint64_t)v8, (uint64_t *)&unk_1EE43E400);
  v10 = (char *)sub_19CDC0C10 + 4 * byte_19D05278C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_19CDC0C10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  os_unfair_lock_s *v20;
  void **v21;
  void *v22;

  v22 = *v21;
  os_unfair_lock_unlock(v20);
  sub_19CEBDFB0(v22);

}

void sub_19CDC0D70()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDC0DD0()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  _BYTE v9[168];

  sub_19CCF8C5C(v3, (uint64_t)v9, &qword_1EE440CF0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED69B4(0, v2[2] + 1, 1, v2);
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
    v2 = sub_19CED69B4((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
  v2[2] = v5 + 1;
  sub_19CCC290C((uint64_t)v9, (uint64_t)&v2[10 * v5 + 4], &qword_1EE440CF0);
  v6 = *(void **)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = 0;
  v8 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = 0;
  sub_19CDC2D90(v6, v7, v8, (void (*)(id))sub_19CD3BE18);
  os_unfair_lock_unlock(v0);
}

void sub_19CDC0F48()
{
  sub_19CDBDE9C();
}

void sub_19CDC0F6C()
{
  sub_19CD1E44C();
}

void sub_19CDC0F90()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDC0FFC()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[184];

  sub_19CCF8C5C(v3, (uint64_t)v11, &qword_1EE4371B0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED6A18(0, v2[2] + 1, 1, v2);
  v6 = v2[2];
  v5 = v2[3];
  if (v6 >= v5 >> 1)
    v2 = sub_19CED6A18((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
  v2[2] = v6 + 1;
  sub_19CCC290C((uint64_t)v11, (uint64_t)&v2[10 * v6 + 4], &qword_1EE4371B0);
  v7 = *(void **)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  v10 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(v4 + 16) = 0;
  sub_19CDC2CE0(v7, v8, v9, v10);
  os_unfair_lock_unlock(v0);
}

void sub_19CDC1178()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDC11D8()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  _BYTE v9[168];

  sub_19CCF8C5C(v3, (uint64_t)v9, &qword_1EE436F88);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED6A2C(0, v2[2] + 1, 1, v2);
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
    v2 = sub_19CED6A2C((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
  v2[2] = v5 + 1;
  sub_19CCC290C((uint64_t)v9, (uint64_t)&v2[10 * v5 + 4], &qword_1EE436F88);
  v6 = *(void **)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = 0;
  v8 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = 0;
  sub_19CDC2D90(v6, v7, v8, (void (*)(id))sub_19CDC2D38);
  os_unfair_lock_unlock(v0);
}

void sub_19CDC1350()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_19CDC13BC()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[184];

  sub_19CCF8C5C(v3, (uint64_t)v11, (uint64_t *)&unk_1EE43E3C0);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED6CD4(0, v2[2] + 1, 1, v2);
  v6 = v2[2];
  v5 = v2[3];
  if (v6 >= v5 >> 1)
    v2 = sub_19CED6CD4((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
  v2[2] = v6 + 1;
  sub_19CCC290C((uint64_t)v11, (uint64_t)&v2[10 * v6 + 4], (uint64_t *)&unk_1EE43E3C0);
  v7 = *(void **)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  v10 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(v4 + 16) = 0;
  sub_19CDC2C40(v7, v8, v9, v10);
  os_unfair_lock_unlock(v0);
}

void sub_19CDC1544()
{
  sub_19CD1DEA0();
}

void sub_19CDC1568()
{
  sub_19CCD447C();
}

uint64_t sub_19CDC158C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v24;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_19CFE08C8();
    v4 = *a1;
    v31 = a1[1];
    sub_19CFE08E0();
    if (v31)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    v5 = a1[2];
    v6 = a1[3];
    v8 = a1[5];
    v7 = a1[6];
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    sub_19CFE08E0();
    if (v7)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    v9 = sub_19CFE0910();
    v10 = -1 << *(_BYTE *)(a2 + 32);
    v11 = v9 & ~v10;
    v12 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v29 = v4;
      v30 = v7;
      v28 = v8;
      v13 = ~v10;
      v14 = *(_QWORD *)(a2 + 48);
      v15 = v31;
      do
      {
        v16 = (uint64_t *)(v14 + 56 * v11);
        v18 = *v16;
        v17 = v16[1];
        v20 = v16[5];
        v19 = v16[6];
        if (v16[2] != v5 || v16[3] != v6)
        {
          v22 = sub_19CFE06A0();
          v15 = v31;
          if ((v22 & 1) == 0)
            goto LABEL_9;
        }
        if (v17)
        {
          if (!v15)
            goto LABEL_9;
          if (v18 != v29 || v17 != v15)
          {
            v24 = sub_19CFE06A0();
            v15 = v31;
            if ((v24 & 1) == 0)
              goto LABEL_9;
          }
        }
        else if (v15)
        {
          goto LABEL_9;
        }
        if (v19)
        {
          if (v30)
          {
            if (v20 == v28 && v19 == v30)
              return 1;
            v26 = sub_19CFE06A0();
            v15 = v31;
            if ((v26 & 1) != 0)
              return 1;
          }
        }
        else if (!v30)
        {
          return 1;
        }
LABEL_9:
        v11 = (v11 + 1) & v13;
      }
      while (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_19CDC17B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  char v13;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_19CFDEDE0();
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]), v7 = sub_19CFDF4C4(), v8 = -1 << *(_BYTE *)(a2 + 32), v9 = v7 & ~v8, ((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    v10 = ~v8;
    v11 = *(_QWORD *)(v16 + 72);
    v12 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    do
    {
      v12(v6, *(_QWORD *)(a2 + 48) + v11 * v9, v3);
      sub_19CCC5C88((unint64_t *)&qword_1ECEB29E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v13 = sub_19CFDF548();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v3);
      if ((v13 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_19CDC193C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v10[40];

  if (*(_QWORD *)(a2 + 16)
    && (v4 = sub_19CFE0094(),
        v5 = -1 << *(_BYTE *)(a2 + 32),
        v6 = v4 & ~v5,
        ((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    v7 = ~v5;
    do
    {
      sub_19CD23A14(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v10);
      v8 = MEMORY[0x1A1ADA2C4](v10, a1);
      sub_19CD20334((uint64_t)v10);
      if ((v8 & 1) != 0)
        break;
      v6 = (v6 + 1) & v7;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_19CDC1A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;

  v7 = *v3;
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  v8 = sub_19CFE0910();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v11 = *(_QWORD *)(v7 + 48);
  v12 = (_QWORD *)(v11 + 16 * v10);
  v13 = *v12 == a1 && v12[1] == a2;
  if (!v13 && (sub_19CFE06A0() & 1) == 0)
  {
    v20 = ~v9;
    do
    {
      v10 = (v10 + 1) & v20;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_18;
      v21 = (_QWORD *)(v11 + 16 * v10);
      v22 = *v21 == a1 && v21[1] == a2;
    }
    while (!v22 && (sub_19CFE06A0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v3;
  v23 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_19CE844D0();
    v15 = v23;
  }
  v16 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v10);
  v18 = *v16;
  v17 = v16[1];
  *a3 = v18;
  a3[1] = v17;
  sub_19CDC1E04(v10);
  *v3 = v23;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDC1BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, MEMORY[0x1E0CAFFF8]);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, v11, MEMORY[0x1E0CB0018]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_19CFDF4C4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_19CCC5C88((unint64_t *)&qword_1ECEB29E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v19 = sub_19CFDF548();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CE8482C();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_19CDC1FC8(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

unint64_t sub_19CDC1E04(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v10 = sub_19CFE0910();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_19CDC1FC8(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_19CFDEDE0();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_19CFE007C();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        v16 = sub_19CFDF4C4();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
}

uint64_t sub_19CDC2244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CD50888;
  v9[1] = v7;
  v9[2] = sub_19CDC30D8;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0B50);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CDC2374()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CDC2398()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  if (*(_QWORD *)(v0 + 120))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_19CDC2424()
{
  unint64_t result;

  result = qword_1EE43BCD0;
  if (!qword_1EE43BCD0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsError, &type metadata for MetricsError);
    atomic_store(result, (unint64_t *)&qword_1EE43BCD0);
  }
  return result;
}

unint64_t sub_19CDC246C()
{
  unint64_t result;

  result = qword_1EE43E3A8;
  if (!qword_1EE43E3A8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsPipeline.FlushBehavior, &type metadata for MetricsPipeline.FlushBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE43E3A8);
  }
  return result;
}

uint64_t assignWithCopy for MetricsPipeline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  v4 = *(_QWORD *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 96) = v4;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 72);
    v6 = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  return a1;
}

uint64_t storeEnumTagSinglePayload for MetricsPipeline.FlushBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDC2620 + 4 * byte_19D0527AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDC2654 + 4 * byte_19D0527A8[v4]))();
}

uint64_t sub_19CDC2654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC265C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDC2664);
  return result;
}

uint64_t sub_19CDC2670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDC2678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDC267C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC2684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsPipeline.FlushBehavior()
{
  return &type metadata for MetricsPipeline.FlushBehavior;
}

uint64_t assignWithCopy for MetricsPipeline.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  v4 = *(void **)(a2 + 96);
  v5 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v4;
  v6 = v4;

  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 160);
  if (!*(_QWORD *)(a1 + 160))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 160) = v7;
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 136, a2 + 136);
      goto LABEL_8;
    }
LABEL_7:
    v8 = *(_OWORD *)(a2 + 136);
    v9 = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v8;
    *(_OWORD *)(a1 + 152) = v9;
    goto LABEL_8;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 136);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for MetricsPipeline.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 96);
  v6 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;

  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 160))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 136);
  v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 176);
  v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPipeline.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsPipeline.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for MetricsPipeline.Steps(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  v4 = *(_QWORD *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 96) = v4;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 72, a2 + 72);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 72);
    v6 = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v5;
    *(_OWORD *)(a1 + 88) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t assignWithTake for MetricsPipeline.Steps(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 96))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPipeline.Steps(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsPipeline.Steps(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPipeline.Steps()
{
  return &type metadata for MetricsPipeline.Steps;
}

uint64_t sub_19CDC2C14()
{
  return sub_19CCC5C88((unint64_t *)&unk_1ECEB0AD8, (uint64_t (*)(uint64_t))type metadata accessor for MetricsPipeline.CallingOutActor, (uint64_t)&unk_19D0528EC);
}

void sub_19CDC2C40(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19CDC2CA4(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19CDC2CE0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
      sub_19CDC2D38((uint64_t)a1);
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19CDC2D38(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CDC2D64(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_19CDC2D90(id a1, uint64_t a2, char a3, void (*a4)(id))
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      a4(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t *sub_19CDC2DC8(uint64_t *a1)
{
  destroy for DiskJetPackLoader(a1);
  return a1;
}

uint64_t *sub_19CDC2DFC(uint64_t *a1)
{
  destroy for DiskJetPackLoader(a1);
  return a1;
}

void sub_19CDC2E30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19CDC2EE0(void *a1, char a2)
{
  if (a2 == 3 || a2 == 2)
  {

  }
  else if (!a2)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_19CDC2F04(void *a1, unint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      sub_19CD3BE18((uint64_t)a1, a2);

      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19CDC2F5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  if (*(_QWORD *)(v0 + 152))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CDC2FD8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDC300C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C10
                                                                                     + dword_1EE442C10))(a1, v4, v5, v6, v7, v8);
}

void sub_19CDC30A0(void *a1)
{
  sub_19CDBD4C8(a1);
}

uint64_t sub_19CDC30A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CDC30D8(void *a1)
{
  sub_19CF4C8D0(a1);
}

void sub_19CDC30E0(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      sub_19CD60178((uint64_t)a1, a2);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void sub_19CDC3118(id a1, char a2)
{
  switch(a2)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19CDC3150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_19CDC31A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19CDC3214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19CDC3280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19CDC32EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19CDC3358(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDC3434 + 4 * byte_19D052918[v17 - 1]))();
}

void sub_19CDC34B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_19CDC36B0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDC36F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static JSONBridgingType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONBridgingType.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JSONBridgingType.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDC37C4()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE43E4E8 = result;
  return result;
}

uint64_t sub_19CDC37F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];

  v5 = *a2;
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)v27);
  sub_19CCF8C5C((uint64_t)v27, (uint64_t)v24, &qword_1ECEB1328);
  v6 = v25;
  if (v25)
  {
    v7 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    v10 = v9;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    sub_19CD3E3F8((uint64_t)v27);
    if (v10)
    {
      v11 = v8 == 0x63697373616C63 && v10 == 0xE700000000000000;
      if (v11 || (sub_19CFE06A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = 0;
        v13 = 0;
LABEL_9:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E518);
        v14 = swift_allocObject();
        *(_DWORD *)(v14 + 24) = 0;
        *(_QWORD *)(v14 + 16) = v12;
        result = sub_19CD3E3F8(a1);
        *(_BYTE *)a3 = v13;
        *(_QWORD *)(a3 + 8) = v14;
        return result;
      }
      if (v8 == 0x746365726964 && v10 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v19 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
LABEL_19:
        JSONObject.subscript.getter(0x736C65646F6DLL, 0xE600000000000000, (uint64_t)v27);
        sub_19CCF8C5C((uint64_t)v27, (uint64_t)v24, &qword_1ECEB1328);
        v20 = v25;
        if (v25)
        {
          v21 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
          sub_19CD3E3F8((uint64_t)v27);
          if ((v22 & 1) == 0)
          {
            JSONObject.subscript.getter(0x736C65646F6DLL, 0xE600000000000000, (uint64_t)v27);
            v23 = sub_19CF45D18((uint64_t)v27, v5);
            v12 = sub_19CE0877C(v23);
            swift_bridgeObjectRelease();
            v13 = 1;
            goto LABEL_9;
          }
        }
        else
        {
          sub_19CCECFE4((uint64_t)v24, &qword_1ECEB1328);
          sub_19CD3E3F8((uint64_t)v27);
        }
        swift_bridgeObjectRelease();
        v12 = 0;
        v13 = 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v27);
  }
  swift_bridgeObjectRelease();
  sub_19CDC5494();
  swift_allocError();
  *(_OWORD *)v16 = xmmword_19D052960;
  v17 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v16 + 16) = 0x40000001E3DD40C0uLL;
  *(_QWORD *)(v16 + 24) = v17;
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

void sub_19CDC3B00(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  id v8;
  char v9;
  char v10;

  if (*(_BYTE *)v2 == 1)
  {
    v5 = *(_QWORD *)(v2 + 8);
    v6 = (os_unfair_lock_s *)(v5 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
    v7 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v6);
    if (v7)
    {
      v8 = a1;
      v9 = sub_19CDC6284(v7, (uint64_t)v8, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_19CDC627C);
      swift_bridgeObjectRelease();

      v10 = v9 & 1;
    }
    else
    {
      v10 = 1;
    }
  }
  else
  {
    v10 = 0;
  }
  *a2 = v10;
}

uint64_t sub_19CDC3BB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDC37F8(a1, a2, a3);
}

uint64_t sub_19CDC3BC4(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  unint64_t v8;
  uint64_t result;
  unint64_t v10;

  v4 = *a1;
  v5 = (uint64_t *)(a3 + 16);
  v6 = (os_unfair_lock_s *)(a3 + 24);
  v7 = (os_unfair_lock_s *)(a3 + 24);
  if ((v4 & 1) != 0)
  {
    os_unfair_lock_lock(v7);
    sub_19CDC3D1C(v5, a2, &v10);
  }
  else
  {
    os_unfair_lock_lock(v7);
    sub_19CDC3C6C(v5, a2, &v10);
  }
  os_unfair_lock_unlock(v6);
  v8 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E4F0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v8;
  return result;
}

uint64_t sub_19CDC3C6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t result;

  v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E510);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_19CE6A7F4(inited, v5);
  swift_setDeallocating();
  result = swift_arrayDestroy();
  *a3 = v7;
  return result;
}

uint64_t sub_19CDC3D1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v6[6];
  uint64_t v7;

  v6[5] = a2;
  v7 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_19CE88C10(v6, a2);
  swift_bridgeObjectRelease();
  result = swift_arrayDestroy();
  *a3 = v7;
  return result;
}

void sub_19CDC3DB0(void *a1@<X1>, _BYTE *a2@<X8>)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = a1;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_19CDC6284(v4, (uint64_t)v3, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_19CDC659C);
  swift_bridgeObjectRelease();

  *a2 = v5 & 1;
}

void sub_19CDC3E28(_BYTE *a1@<X8>)
{
  os_unfair_lock_s **v1;
  os_unfair_lock_s *v3;
  char v4;

  v3 = *v1 + 6;
  os_unfair_lock_lock(v3);
  sub_19CDC61DC(&v4);
  os_unfair_lock_unlock(v3);
  *a1 = v4;
}

uint64_t JSONBridgingConfiguration.init(asPartOf:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unint64_t v21[3];
  _QWORD v22[4];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  if (qword_1ECEB1330 != -1)
    swift_once();
  *(_QWORD *)&v23 = a1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  v4 = swift_bridgeObjectRetain();
  sub_19CD082CC(v4, (void (**)(uint64_t))&v26);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if ((_QWORD)v26)
  {
    if (qword_1EE43D610 != -1)
      swift_once();
    v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_dictionaryForKey_, qword_1EE43E4E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437338);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v5;
    v6[3] = sub_19CF94D04;
    v6[4] = 0;
    swift_unknownObjectRelease();
    sub_19CDC44E4((uint64_t)v6, &v23);
    swift_release();
    if (*((_QWORD *)&v24 + 1) == 1)
    {
      sub_19CCECFE4((uint64_t)&v23, &qword_1EE43C2D8);
      if (qword_1EE439F20 != -1)
        swift_once();
      sub_19CFE0A6C();
      v7 = *((_QWORD *)&v27 + 1);
      v8 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v10 = swift_allocObject();
      v11 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
      v22[3] = v11;
      v22[0] = 0xD000000000000030;
      v22[1] = 0x800000019D06E030;
      v23 = 0u;
      v24 = 0u;
      sub_19CD40658((uint64_t)v22, (uint64_t)&v23);
      *(_BYTE *)(v10 + 64) = 0;
      v12 = v24;
      *(_OWORD *)(v10 + 32) = v23;
      *(_OWORD *)(v10 + 48) = v12;
      *(_QWORD *)(v9 + 32) = v10;
      Logger.info(_:)(v9, v7, v8);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E4F0);
      v13 = swift_allocObject();
      *(_DWORD *)(v13 + 24) = 0;
      *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEE9E8];
      swift_unknownObjectRelease();
      result = swift_release();
      v17 = 0;
      v18 = 0;
    }
    else
    {
      v26 = v23;
      v27 = v24;
      v28 = v25;
      *(_QWORD *)&v23 = a1;
      swift_retain();
      swift_task_localValuePush();
      v15 = swift_bridgeObjectRetain();
      sub_19CD33F84(v15, (void (**)(uint64_t))&v23);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      v16 = v23;
      if (!(_QWORD)v23)
        v16 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
      sub_19CD3E448((uint64_t)&v26, (uint64_t)&v23);
      sub_19CD3E448((uint64_t)&v23, (uint64_t)v22);
      v21[0] = v16;
      sub_19CDC37F8((uint64_t)v22, (uint64_t *)v21, (uint64_t)&v19);
      v17 = v19;
      v18 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E4F0);
      v13 = swift_allocObject();
      *(_DWORD *)(v13 + 24) = 0;
      *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEE9E8];
      sub_19CD3E3F8((uint64_t)&v23);
      swift_release();
      swift_unknownObjectRelease();
      result = sub_19CD3E3F8((uint64_t)&v26);
    }
    *a2 = v17;
    a2[1] = v18;
    a2[2] = v13;
  }
  else
  {
    sub_19CDB468C();
    result = sub_19CFE0340();
    __break(1u);
  }
  return result;
}

_QWORD *sub_19CDC44E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return (*(_QWORD *(**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 96))(a2);
}

uint64_t sub_19CDC4754(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)a1 + 96))(&v2);
  return v2;
}

void sub_19CDC49C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  id v6;
  unsigned __int8 v7;
  void *v8;
  id v9;

  v5 = (void *)sub_19CFDF554();
  v6 = objc_msgSend(a4, sel_valueForProperty_, v5);

  if (!v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (objc_msgSend(v6, sel_isUndefined))
  {

    return;
  }
  v7 = objc_msgSend(v6, sel_isNull);

  if ((v7 & 1) == 0)
  {
    v8 = (void *)sub_19CFDF554();
    v9 = objc_msgSend(a4, sel_valueForProperty_, v8);

    if (v9)
    {
      sub_19CDC4AE4(v9);

      return;
    }
    goto LABEL_8;
  }
}

BOOL sub_19CDC4AE4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  int v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  unsigned __int8 v15;
  id v16;
  unsigned int v17;
  void *v18;
  uint64_t v19;
  char v20;
  char v22;
  unsigned int v23;

  v4 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 16);
  if ((objc_msgSend(a1, sel_isString) & 1) != 0)
  {
    if ((v5 & 1) != 0)
      return 0;
    swift_bridgeObjectRetain();
    if (objc_msgSend(a1, sel_isString))
    {
      v6 = objc_msgSend(a1, sel_toString);
      if (v6)
      {
        v7 = v6;
        v8 = sub_19CFDF578();
        v10 = v9;

        if ((void *)v8 == v4 && v3 == v10)
        {
          sub_19CDC5828(v4, v3, 0);
          swift_bridgeObjectRelease();
          return 1;
        }
        v22 = sub_19CFE06A0();
        sub_19CDC5828(v4, v3, 0);
        swift_bridgeObjectRelease();
        return (v22 & 1) != 0;
      }
    }
    v18 = v4;
    v19 = v3;
    v20 = 0;
LABEL_21:
    sub_19CDC5828(v18, v19, v20);
    return 0;
  }
  if ((objc_msgSend(a1, sel_isNumber) & 1) != 0)
  {
    if (!v5)
      return 0;
    v12 = v4;
    if (objc_msgSend(a1, sel_isNumber))
    {
      v13 = objc_msgSend(a1, sel_toNumber);
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, sel_isEqualToNumber_, v12);
        v11 = 1;
        sub_19CDC5828(v4, v3, 1);

        if ((v15 & 1) != 0)
          return v11;
        return 0;
      }
    }
    v18 = v4;
    v19 = v3;
    v20 = 1;
    goto LABEL_21;
  }
  if ((objc_msgSend(a1, sel_isArray) & 1) != 0)
    return 0;
  if ((objc_msgSend(a1, sel_isBoolean) & 1) == 0)
  {
    if ((objc_msgSend(a1, sel_isNull) & 1) == 0)
      JSValue.isJSONObject.getter();
    return 0;
  }
  if (!v5)
    return 0;
  v16 = v4;
  v17 = objc_msgSend(a1, sel_isBoolean) ? objc_msgSend(a1, sel_toBool) : 2;
  v23 = objc_msgSend(v16, sel_BOOLValue);
  v11 = 1;
  sub_19CDC5828(v4, v3, 1);
  if (v17 == 2 || ((((v17 & 1) == 0) ^ v23) & 1) == 0)
    return 0;
  return v11;
}

uint64_t sub_19CDC4D54()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_19CFE08C8();
  sub_19CDC54D8((uint64_t)v3, v1);
  return sub_19CFE0910();
}

uint64_t sub_19CDC4D98(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CDC54D8(a1, *v1);
}

uint64_t sub_19CDC4DA0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_19CFE08C8();
  sub_19CDC54D8((uint64_t)v3, v1);
  return sub_19CFE0910();
}

uint64_t sub_19CDC4DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_19CDC5838(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_19CDC4E08(uint64_t *a1, uint64_t *a2)
{
  sub_19CDD11AC(*a1, *a2);
}

uint64_t JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease();
  sub_19CCF8C5C(a1, (uint64_t)v15, &qword_1ECEB1328);
  v4 = v16;
  if (v16)
  {
    v5 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v8)
    {
      v9 = 0;
LABEL_8:
      result = sub_19CD3E3F8(a1);
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      *(_BYTE *)(a2 + 16) = v9;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
  }
  sub_19CCF8C5C(a1, (uint64_t)v15, &qword_1ECEB1328);
  v10 = v16;
  if (v16)
  {
    v11 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v6)
    {
      v8 = 0;
      v9 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
  }
  sub_19CDC5494();
  swift_allocError();
  v13 = MEMORY[0x1E0DEE9D8];
  *v14 = &type metadata for JSONBridgingConfiguration.PropertyDescriptor;
  v14[1] = v13;
  v14[2] = 0;
  v14[3] = 0;
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

void JSONBridgingConfiguration.PropertyDescriptor.hash(into:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_19CFE08D4();
    v3 = v1;
    sub_19CFDFEFC();
    sub_19CDC5828(v1, v2, 1);
  }
  else
  {
    sub_19CFE08D4();
    sub_19CFDF650();
  }
}

uint64_t JSONBridgingConfiguration.PropertyDescriptor.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_19CFE08C8();
  sub_19CFE08D4();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_19CFDFEFC();
    sub_19CDC5828(v1, v2, 1);
  }
  else
  {
    sub_19CFDF650();
  }
  return sub_19CFE0910();
}

uint64_t sub_19CDC50A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_19CFE08C8();
  sub_19CFE08D4();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_19CFDFEFC();
    sub_19CDC5828(v1, v2, 1);
  }
  else
  {
    sub_19CFDF650();
  }
  return sub_19CFE0910();
}

void sub_19CDC513C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_19CFE08D4();
    v3 = v1;
    sub_19CFDFEFC();
    sub_19CDC5828(v1, v2, 1);
  }
  else
  {
    sub_19CFE08D4();
    sub_19CFDF650();
  }
}

uint64_t sub_19CDC51BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_19CFE08C8();
  sub_19CFE08D4();
  if ((v3 & 1) != 0)
  {
    v4 = v1;
    sub_19CFDFEFC();
    sub_19CDC5828(v1, v2, 1);
  }
  else
  {
    sub_19CFDF650();
  }
  return sub_19CFE0910();
}

uint64_t sub_19CDC524C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)(a1, a2);
}

uint64_t JSONBridgingConfiguration.withBridgingType(_:for:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  v7 = *v3;
  v6 = v3[1];
  v8 = v3[2];
  v11 = *a1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_19CDC3BC4(&v11, a2, v8);
  swift_release();
  result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v6;
  a3[2] = v9;
  return result;
}

JetEngine::JSONBridgingType __swiftcall JSONBridgingConfiguration.jsonBridgingType(for:)(JSValue a1)
{
  _BYTE *v1;
  uint64_t v2;
  Class isa;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  objc_class *v9;
  char v11;

  isa = a1.super.isa;
  v4 = v1;
  v5 = *(_QWORD *)(v2 + 8);
  if (v5)
  {
    if ((*(_BYTE *)v2 & 1) != 0)
    {
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
      v8 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
      if (v8)
      {
        v9 = isa;
        v6 = sub_19CDC6284(v8, (uint64_t)v9, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_19CDC627C);
        swift_release();
        swift_bridgeObjectRelease();

      }
      else
      {
        LOBYTE(a1.super.isa) = swift_release();
        v6 = 1;
      }
    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    v7 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 24);
    os_unfair_lock_lock(v7);
    sub_19CDC3DB0(isa, &v11);
    os_unfair_lock_unlock(v7);
    v6 = v11;
  }
  *v4 = v6 & 1;
  return (JetEngine::JSONBridgingType)a1.super.isa;
}

BOOL sub_19CDC53FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_19CDC5410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[40];

  v5 = (uint64_t)(a4 + 2);
  *a4 = a1;
  a4[1] = a2;
  sub_19CD3E448(a3, (uint64_t)v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)((uint64_t)v7, v5);
  if (v4)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_19CDC5494()
{
  unint64_t result;

  result = qword_1EE43CDC0;
  if (!qword_1EE43CDC0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE43CDC0);
  }
  return result;
}

uint64_t sub_19CDC54D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  uint64_t v20;

  v20 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v19 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_20;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v19)
      goto LABEL_22;
    v13 = *(_QWORD *)(v20 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v19)
        goto LABEL_22;
      v13 = *(_QWORD *)(v20 + 8 * v8);
      if (!v13)
        break;
    }
LABEL_19:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_20:
    v15 = *(_QWORD *)(a2 + 56) + 24 * v11;
    v16 = *(void **)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_BYTE *)(v15 + 16);
    swift_bridgeObjectRetain();
    sub_19CDC5EF4(v16, v17, v18);
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    sub_19CFE08D4();
    if ((v18 & 1) != 0)
    {
      v9 = v16;
      sub_19CFDFEFC();
      sub_19CDC5828(v16, v17, 1);
    }
    else
    {
      sub_19CFDF650();
    }
    sub_19CDC5828(v16, v17, v18);
    result = sub_19CFE0910();
    v7 ^= result;
  }
  v14 = v12 + 2;
  if (v14 >= v19)
  {
LABEL_22:
    swift_release();
    return sub_19CFE08D4();
  }
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v19)
      goto LABEL_22;
    v13 = *(_QWORD *)(v20 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t _s9JetEngine25JSONBridgingConfigurationV18PropertyDescriptorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      sub_19CD5956C();
      v4 = 1;
      sub_19CDC5EF4(v5, v6, 1);
      sub_19CDC5EF4(v2, v3, 1);
      v8 = sub_19CFDFEF0();
      v7 = 1;
      goto LABEL_13;
    }
LABEL_5:
    sub_19CDC5EF4(*(void **)a2, *(_QWORD *)(a2 + 8), v7);
    sub_19CDC5EF4(v2, v3, v4);
    v8 = 0;
    goto LABEL_13;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_5;
  if (v2 == v5 && v3 == v6)
    v8 = 1;
  else
    v8 = sub_19CFE06A0();
  sub_19CDC5EF4(v5, v6, 0);
  sub_19CDC5EF4(v2, v3, 0);
  v4 = 0;
  v7 = 0;
LABEL_13:
  sub_19CDC5828(v2, v3, v4);
  sub_19CDC5828(v5, v6, v7);
  return v8 & 1;
}

void sub_19CDC5828(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_19CDC5838(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v3 = v2;
  v5 = *a2;
  JSONObject.dictionary.getter((uint64_t)&v14);
  if (*((_QWORD *)&v15 + 1))
  {
    v17[0] = v14;
    v17[1] = v15;
    v18 = v16;
    v6 = sub_19CDC61F4((uint64_t)v17, (uint64_t)&v14);
    MEMORY[0x1E0C80A78](v6, v7);
    v13[2] = v5;
    v8 = *((_QWORD *)&v15 + 1);
    v9 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    v3 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, _QWORD *@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t))(v9 + 48))(sub_19CDC6230, v13, MEMORY[0x1E0DEA968], &type metadata for JSONBridgingConfiguration.PropertyDescriptor, MEMORY[0x1E0DEA978], v8, v9);
    sub_19CDC6248((uint64_t)&v14);
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    sub_19CDC6248((uint64_t)v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v14, &qword_1EE43C1C8);
    sub_19CDC5494();
    swift_allocError();
    v10 = MEMORY[0x1E0DEE9D8];
    *v11 = &type metadata for JSONBridgingConfiguration.ModelDescriptor;
    v11[1] = v10;
    v11[2] = 0;
    v11[3] = 0;
    swift_willThrow();
    sub_19CD3E3F8(a1);
  }
  return v3;
}

void sub_19CDC59C0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  _QWORD v21[2];
  char v22;
  uint64_t (*v23)(uint64_t, uint64_t, _QWORD *);

  v23 = a2;
  v19 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v6 << 6);
LABEL_5:
    v9 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v10 = *v9;
    v11 = v9[1];
    v12 = *(_QWORD *)(a1 + 56) + 24 * v8;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    v21[0] = *(_QWORD *)v12;
    v13 = (void *)v21[0];
    v21[1] = v14;
    v22 = v15;
    swift_bridgeObjectRetain();
    sub_19CDC5EF4(v13, v14, v15);
    LOBYTE(v10) = v23(v10, v11, v21);
    swift_bridgeObjectRelease();
    sub_19CDC5828(v13, v14, v15);
    if ((v10 & 1) == 0)
      goto LABEL_22;
  }
  v16 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v16 >= v20)
    goto LABEL_22;
  v17 = *(_QWORD *)(v19 + 8 * v16);
  ++v6;
  if (v17)
    goto LABEL_21;
  v6 = v16 + 1;
  if (v16 + 1 >= v20)
    goto LABEL_22;
  v17 = *(_QWORD *)(v19 + 8 * v6);
  if (v17)
    goto LABEL_21;
  v6 = v16 + 2;
  if (v16 + 2 >= v20)
    goto LABEL_22;
  v17 = *(_QWORD *)(v19 + 8 * v6);
  if (v17)
    goto LABEL_21;
  v6 = v16 + 3;
  if (v16 + 3 >= v20)
    goto LABEL_22;
  v17 = *(_QWORD *)(v19 + 8 * v6);
  if (v17)
    goto LABEL_21;
  v18 = v16 + 4;
  if (v18 >= v20)
  {
LABEL_22:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v19 + 8 * v18);
  v6 = v18;
  if (v17)
  {
LABEL_21:
    v5 = (v17 - 1) & v17;
    v8 = __clz(__rbit64(v17)) + (v6 << 6);
    goto LABEL_5;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v20)
      goto LABEL_22;
    v17 = *(_QWORD *)(v19 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_19CDC5BE8()
{
  unint64_t result;

  result = qword_1EE43E4F8;
  if (!qword_1EE43E4F8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONBridgingType, &type metadata for JSONBridgingType);
    atomic_store(result, (unint64_t *)&qword_1EE43E4F8);
  }
  return result;
}

unint64_t sub_19CDC5C30()
{
  unint64_t result;

  result = qword_1EE43E500;
  if (!qword_1EE43E500)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONBridgingConfiguration.PropertyDescriptor, &type metadata for JSONBridgingConfiguration.PropertyDescriptor);
    atomic_store(result, (unint64_t *)&qword_1EE43E500);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JSONBridgingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDC5CC0 + 4 * byte_19D052975[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDC5CF4 + 4 * byte_19D052970[v4]))();
}

uint64_t sub_19CDC5CF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC5CFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDC5D04);
  return result;
}

uint64_t sub_19CDC5D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDC5D18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDC5D1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC5D24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingType()
{
  return &type metadata for JSONBridgingType;
}

uint64_t dispatch thunk of JSONBridgingConfigurationProvider.jsonBridgingType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for JSONBridgingConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t _s9JetEngine25JSONBridgingConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONBridgingConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONBridgingConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONBridgingConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration()
{
  return &type metadata for JSONBridgingConfiguration;
}

id sub_19CDC5EF4(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void destroy for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1)
{
  sub_19CDC5828(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9JetEngine25JSONBridgingConfigurationV18PropertyDescriptorOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CDC5EF4(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CDC5EF4(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CDC5828(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CDC5828(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONBridgingConfiguration.PropertyDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONBridgingConfiguration.PropertyDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CDC6094(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_19CDC609C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.PropertyDescriptor()
{
  return &type metadata for JSONBridgingConfiguration.PropertyDescriptor;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.ClientConfiguration()
{
  return &type metadata for JSONBridgingConfiguration.ClientConfiguration;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONBridgingConfiguration.BagConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.BagConfiguration()
{
  return &type metadata for JSONBridgingConfiguration.BagConfiguration;
}

ValueMetadata *type metadata accessor for JSONBridgingConfiguration.ModelDescriptor()
{
  return &type metadata for JSONBridgingConfiguration.ModelDescriptor;
}

unint64_t sub_19CDC6198()
{
  unint64_t result;

  result = qword_1EE43E508;
  if (!qword_1EE43E508)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D052B54, &type metadata for JSONBridgingConfiguration.ModelDescriptor);
    atomic_store(result, (unint64_t *)&qword_1EE43E508);
  }
  return result;
}

void sub_19CDC61DC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_19CDC3DB0(*(void **)(v1 + 16), a1);
}

uint64_t sub_19CDC61F4(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CDC6230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_19CDC5410(a1, a2, a3, a4);
}

uint64_t sub_19CDC6248(uint64_t a1)
{
  _s19DeepLinkDestinationVwxx();
  return a1;
}

void sub_19CDC627C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_19CDC49C0(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_19CDC6284(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;

  v17 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v18 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
      break;
    if (v9 >= v18)
      goto LABEL_25;
    v14 = *(_QWORD *)(v17 + 8 * v9);
    if (!v14)
    {
      v15 = v9 + 1;
      if (v9 + 1 >= v18)
        goto LABEL_25;
      v14 = *(_QWORD *)(v17 + 8 * v15);
      if (!v14)
      {
        v15 = v9 + 2;
        if (v9 + 2 >= v18)
          goto LABEL_25;
        v14 = *(_QWORD *)(v17 + 8 * v15);
        if (!v14)
        {
          v15 = v9 + 3;
          if (v9 + 3 >= v18)
            goto LABEL_25;
          v14 = *(_QWORD *)(v17 + 8 * v15);
          if (!v14)
          {
            v15 = v9 + 4;
            if (v9 + 4 >= v18)
            {
LABEL_25:
              v16 = 0;
              goto LABEL_26;
            }
            v14 = *(_QWORD *)(v17 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v9 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v9 >= v18)
                  goto LABEL_25;
                v14 = *(_QWORD *)(v17 + 8 * v9);
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
          }
        }
      }
      v9 = v15;
    }
LABEL_19:
    v6 = (v14 - 1) & v14;
LABEL_5:
    MEMORY[0x1E0C80A78](result, v8);
    v10 = swift_bridgeObjectRetain();
    sub_19CDC59C0(v10, a3);
    v12 = v11;
    result = swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      v16 = 1;
LABEL_26:
      swift_release();
      return v16;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for JSONValueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CDC64D0 + 4 * byte_19D05297F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CDC6504 + 4 * byte_19D05297A[v4]))();
}

uint64_t sub_19CDC6504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC650C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDC6514);
  return result;
}

uint64_t sub_19CDC6520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDC6528);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CDC652C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC6534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSONValueType()
{
  return &type metadata for JSONValueType;
}

unint64_t sub_19CDC6554()
{
  unint64_t result;

  result = qword_1EE43E520;
  if (!qword_1EE43E520)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D052C4C, &type metadata for JSONValueType);
    atomic_store(result, (unint64_t *)&qword_1EE43E520);
  }
  return result;
}

uint64_t sub_19CDC65CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CDC65F0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

double static AutomationSemantics.shelf(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t inited;
  double result;
  double v8[5];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a1, (uint64_t)v8);
  sub_19CD4C788(0, (uint64_t)v8, (uint64_t *)(inited + 32));
  sub_19CD40794(a2, (uint64_t)v8);
  sub_19CD4C788(1, (uint64_t)v8, (uint64_t *)(inited + 64));
  *(_QWORD *)&v8[0] = &unk_1E3DD00E0;
  *(_QWORD *)&v8[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD4C984(inited);
  result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

uint64_t static AutomationSemantics.shelfItem(itemKind:impressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  _QWORD v17[4];

  v6 = *a3;
  v5 = a3[1];
  v8 = a3[2];
  v7 = a3[3];
  if (a2)
  {
    v10 = a2;
  }
  else
  {
    v11 = a3[7];
    if (*(_QWORD *)(v11 + 16)
      && (v12 = sub_19CD3FD1C(0x6973736572706D69, 0xEE00657079546E6FLL), (v13 & 1) != 0)
      && (sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)v17), swift_dynamicCast()))
    {
      v10 = *((_QWORD *)&v15 + 1);
      a1 = v15;
    }
    else
    {
      v10 = 0xEB000000006D6574;
      a1 = 0x49636972656E6567;
    }
  }
  v17[3] = MEMORY[0x1E0DEA968];
  v17[0] = v8;
  v17[1] = v7;
  if (v5)
  {
    *((_QWORD *)&v16 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v15 = v6;
    *((_QWORD *)&v15 + 1) = v5;
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)(a1, v10, (uint64_t)v17, (uint64_t)&v15, a4);
  swift_bridgeObjectRelease();
  sub_19CD3F190((uint64_t)&v15);
  return sub_19CD3F190((uint64_t)v17);
}

uint64_t static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = AutomationSemantics.Subcomponent.rawValue.getter();
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(v6, v7, a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.Subcomponent.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CDC68FC + 4 * byte_19D052CC0[*v0]))(0x7369747265766461, 0xED0000746E656D65);
}

uint64_t sub_19CDC68FC()
{
  return 0x6B726F77747261;
}

uint64_t sub_19CDC6914()
{
  return 0x6567646162;
}

uint64_t sub_19CDC6928()
{
  return 2036625250;
}

uint64_t sub_19CDC6938()
{
  return 1702125924;
}

uint64_t sub_19CDC6948()
{
  return 0x7470697263736564;
}

uint64_t sub_19CDC6968()
{
  return 0x7265746C6966;
}

uint64_t sub_19CDC697C()
{
  return 0x7265746F6F66;
}

uint64_t sub_19CDC6990()
{
  return 0x676E6964616568;
}

uint64_t sub_19CDC69A8()
{
  return 1852793705;
}

uint64_t sub_19CDC69B8()
{
  return 0x6C6562616CLL;
}

uint64_t sub_19CDC69CC()
{
  return 0x70756B636F6CLL;
}

uint64_t sub_19CDC69E0()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_19CDC69FC()
{
  return 0x616964656DLL;
}

uint64_t sub_19CDC6A10()
{
  return 1701667182;
}

uint64_t sub_19CDC6A20()
{
  return 0x747542726566666FLL;
}

uint64_t sub_19CDC6A44()
{
  return 0x62614C726566666FLL;
}

uint64_t sub_19CDC6A64()
{
  return 0x4C6C616E6964726FLL;
}

uint64_t sub_19CDC6A84()
{
  return 0x7061726761726170;
}

uint64_t sub_19CDC6AA4()
{
  return 0x656C746974627573;
}

uint64_t sub_19CDC6ABC()
{
  return 0x656E696C676174;
}

uint64_t sub_19CDC6AD4()
{
  return 1954047348;
}

uint64_t sub_19CDC6AE4()
{
  return 0x656C746974;
}

uint64_t sub_19CDC6AF8()
{
  return 0x616D49656C746974;
}

uint64_t sub_19CDC6B14()
{
  return 0x6F65646976;
}

uint64_t sub_19CDC6B28()
{
  return 0x6C6C4177656976;
}

uint64_t AutomationSemantics.Subcomponent.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;
  char v5;

  v2 = sub_19CFE07F0();
  result = swift_bridgeObjectRelease();
  v4 = 0;
  v5 = 8;
  switch(v2)
  {
    case 0:
      goto LABEL_10;
    case 1:
      v4 = 1;
      goto LABEL_10;
    case 2:
      v4 = 2;
      goto LABEL_10;
    case 3:
      v4 = 3;
      goto LABEL_10;
    case 4:
      v4 = 4;
      goto LABEL_10;
    case 5:
      v4 = 5;
      goto LABEL_10;
    case 6:
      v4 = 6;
      goto LABEL_10;
    case 7:
      v4 = 7;
LABEL_10:
      v5 = v4;
      break;
    case 8:
      break;
    case 9:
      v5 = 9;
      break;
    case 10:
      v5 = 10;
      break;
    case 11:
      v5 = 11;
      break;
    case 12:
      v5 = 12;
      break;
    case 13:
      v5 = 13;
      break;
    case 14:
      v5 = 14;
      break;
    case 15:
      v5 = 15;
      break;
    case 16:
      v5 = 16;
      break;
    case 17:
      v5 = 17;
      break;
    case 18:
      v5 = 18;
      break;
    case 19:
      v5 = 19;
      break;
    case 20:
      v5 = 20;
      break;
    case 21:
      v5 = 21;
      break;
    case 22:
      v5 = 22;
      break;
    case 23:
      v5 = 23;
      break;
    case 24:
      v5 = 24;
      break;
    case 25:
      v5 = 25;
      break;
    default:
      v5 = 26;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_19CDC6C84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19CE814AC(*a1, *a2);
}

uint64_t sub_19CDC6C90()
{
  sub_19CFE08C8();
  AutomationSemantics.Subcomponent.rawValue.getter();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CDC6CF4()
{
  AutomationSemantics.Subcomponent.rawValue.getter();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDC6D44()
{
  sub_19CFE08C8();
  AutomationSemantics.Subcomponent.rawValue.getter();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CDC6DA4@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.Subcomponent.init(rawValue:)(a1);
}

uint64_t sub_19CDC6DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AutomationSemantics.Subcomponent.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19CDC6DD4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_19CED5080(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[8 * v9 + 4];
  if (a1 + 32 < v10 + (v8 << 6) && v10 < a1 + 32 + (v8 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC6F28(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_19CED5974(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC7070(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_19CD418EC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC71CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_19CD53AAC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC7324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_19CD4D730(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC7474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_5;
      goto LABEL_18;
    }
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_19CED518C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = v3[3] >> 1;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v2 && v10 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC75DC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_19CED6E30(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDC7730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_19CD2B57C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

unint64_t sub_19CDC7884()
{
  unint64_t result;

  result = qword_1EE43E538;
  if (!qword_1EE43E538)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AutomationSemantics.Subcomponent, &type metadata for AutomationSemantics.Subcomponent);
    atomic_store(result, (unint64_t *)&qword_1EE43E538);
  }
  return result;
}

uint64_t _s12SubcomponentOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SubcomponentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_19CDC79A4 + 4 * byte_19D052CF9[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_19CDC79D8 + 4 * byte_19D052CF4[v4]))();
}

uint64_t sub_19CDC79D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC79E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDC79E8);
  return result;
}

uint64_t sub_19CDC79F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDC79FCLL);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_19CDC7A00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC7A08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.Subcomponent()
{
  return &type metadata for AutomationSemantics.Subcomponent;
}

uint64_t URLJetPackAssetRequest.init(url:sourcePolicy:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for URLJetPackAssetRequest();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t URLJetPackAssetRequest._sourcePolicy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for URLJetPackAssetRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t URLJetPackAssetRequest._cacheKey.getter()
{
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  return sub_19CFE0598();
}

uint64_t URLJetPackAssetRequest.hash(into:)()
{
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_19CFDF4D0();
  type metadata accessor for URLJetPackAssetRequest();
  return sub_19CFE08D4();
}

uint64_t URLJetPackAssetRequest.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_19CFDF4D0();
  type metadata accessor for URLJetPackAssetRequest();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDC7BF4()
{
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  return sub_19CFE0598();
}

uint64_t sub_19CDC7C3C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_19CDC7C4C()
{
  sub_19CFE08C8();
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_19CFDF4D0();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDC7CD4()
{
  sub_19CFDEDE0();
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_19CFDF4D0();
  return sub_19CFE08D4();
}

uint64_t sub_19CDC7D44(uint64_t a1)
{
  uint64_t result;

  result = sub_19CCC5C88(&qword_1ECEB0B30, (uint64_t (*)(uint64_t))type metadata accessor for URLJetPackAssetRequest, (uint64_t)&protocol conformance descriptor for URLJetPackAssetRequest);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t assignWithCopy for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for URLJetPackAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_19CDC7E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_19CDC7F0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

void static AutomationSemantics.tabContainer()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCF9F8;
  a1[1] = v1;
}

unint64_t Bag.Stubs.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t Bag.Stubs.withArray(_:forKey:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[4];

  v3 = *v1;
  v4 = sub_19CFDF854();
  v10[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB1710);
  v10[0] = v4;
  *a1 = v3;
  v5 = sub_19CFDF578();
  v7 = v6;
  sub_19CD436B0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withBool(_:forKey:)@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[32];
  _QWORD v11[4];

  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a1 & 1);
  v11[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  v11[0] = v5;
  *a2 = v4;
  v6 = sub_19CFDF578();
  v8 = v7;
  sub_19CD436B0((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withDouble(_:forKey:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[32];
  _QWORD v11[4];

  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a2);
  v11[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  v11[0] = v5;
  *a1 = v4;
  v6 = sub_19CFDF578();
  v8 = v7;
  sub_19CD436B0((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withInteger(_:forKey:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[32];
  _QWORD v11[4];

  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v11[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  v11[0] = v5;
  *a2 = v4;
  v6 = sub_19CFDF578();
  v8 = v7;
  sub_19CD436B0((uint64_t)v11, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v10, v6, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t Bag.Stubs.withString(_:forKey:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[4];

  v3 = *v1;
  v4 = sub_19CFDF554();
  v10[3] = sub_19CCE5204(0, &qword_1ECEB24D0);
  v10[0] = v4;
  *a1 = v3;
  v5 = sub_19CFDF578();
  v7 = v6;
  sub_19CD436B0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withURL(_:forKey:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[4];

  v3 = *v1;
  v4 = sub_19CFDED2C();
  v10[3] = sub_19CCE5204(0, &qword_1EE43E548);
  v10[0] = v4;
  *a1 = v3;
  v5 = sub_19CFDF578();
  v7 = v6;
  sub_19CD436B0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t Bag.Stubs.withDictionary(_:forKey:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[4];

  v3 = *v1;
  v4 = sub_19CFDF3B0();
  v10[3] = sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  v10[0] = v4;
  *a1 = v3;
  v5 = sub_19CFDF578();
  v7 = v6;
  sub_19CD436B0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_19CD13C70((uint64_t)v9, v5, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

void Bag.init(mockProfile:stubs:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD v17[2];
  id v18[4];

  v17[0] = a1;
  v18[3] = *(id *)MEMORY[0x1E0C80C00];
  v1 = sub_19CFDEF84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC40]), sel_init);
  v7 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setData_, v7);

  sub_19CFDEEE8();
  v8 = (void *)sub_19CFDEF0C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  objc_msgSend(v6, sel_setExpirationDate_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  objc_msgSend(v6, sel_setProcessInfo_, v9);

  v10 = (void *)sub_19CFDF554();
  objc_msgSend(v6, sel_setProfile_, v10);

  v11 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setProfileVersion_, v11);

  v18[0] = 0;
  v12 = objc_msgSend(v6, sel_buildWithError_, v18);
  if (v12)
  {
    v13 = v12;
    v14 = v18[0];

    *(_QWORD *)v17[0] = v13;
  }
  else
  {
    v15 = v18[0];
    v16 = sub_19CFDEC9C();

    swift_willThrow();
    v18[0] = 0;
    v18[1] = (id)0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    v17[1] = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    sub_19CFE02E0();
    sub_19CFE0340();
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for Bag.Stubs()
{
  return &type metadata for Bag.Stubs;
}

id sub_19CDC8958(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;
  id v6;
  void *v7;

  v4 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine8ProxyBag_bag];
  v5 = a1;
  v6 = objc_msgSend(v4, *a3);
  sub_19CFDF578();

  v7 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_19CDC8B2C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  return objc_autoreleaseReturnValue(objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                                           + OBJC_IVAR____TtC9JetEngine8ProxyBag_bag), *a4)));
}

id sub_19CDC8B84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxyBag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProxyBag()
{
  return objc_opt_self();
}

uint64_t sub_19CDC8BE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_19CDC8C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19CF3B098(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_19CDC8C10(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_19CDC8C8C(a1);
  if (!v2)
    *a2 = v4 & 1;
}

__n128 sub_19CDC8C3C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_19CDC8E24(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

void sub_19CDC8C8C(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = objc_msgSend(a1, sel_toString);
  if (!v2)
  {
LABEL_14:
    sub_19CDC98D8();
    swift_allocError();
    v11 = v10;
    v12 = a1;
    JSError.init(badValue:expected:)(v12, v11);
    swift_willThrow();

    return;
  }
  v3 = v2;
  v4 = sub_19CFDF578();
  v6 = v5;

  v7 = v4 == 0x64692D6D616461 && v6 == 0xE700000000000000;
  if (v7 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return;
  }
  if (v4 != 0x692D656C646E7562 || v6 != 0xE900000000000064)
  {
    v9 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {

      return;
    }
    goto LABEL_14;
  }

  swift_bridgeObjectRelease();
}

void sub_19CDC8E24(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  char **v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unsigned __int8 v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  unint64_t v42;
  char **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  int v53;
  void *v54;
  id v55;
  unsigned __int8 v56;
  void *v57;
  id v58;
  unsigned __int8 v59;
  void *v60;
  id v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  char v68;
  uint64_t v69;
  void *v70;
  id v71;
  signed int v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v3 = v2;
  v6 = (void *)sub_19CFDF554();
  v7 = objc_msgSend(a1, sel_valueForProperty_, v6);

  if (!v7)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v8 = &selRef_removeObserver_;
  if (!objc_msgSend(v7, sel_isString)
    || (v9 = objc_msgSend(v7, sel_toString)) == 0)
  {

    v22 = (void *)sub_19CFDF554();
    v23 = objc_msgSend(a1, sel_valueForProperty_, v22);

    if (!v23)
    {
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(v23, v24);
    swift_willThrow();
LABEL_14:

    return;
  }
  v10 = v9;
  v11 = sub_19CFDF578();
  v13 = v12;

  swift_bridgeObjectRetain();
  v14 = (void *)sub_19CFDF554();
  v15 = objc_msgSend(a1, sel_valueForProperty_, v14);

  if (!v15)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (!objc_msgSend(v15, sel_isString)
    || (v16 = objc_msgSend(v15, sel_toString)) == 0)
  {
    swift_bridgeObjectRelease();

    v25 = (void *)sub_19CFDF554();
    v26 = objc_msgSend(a1, sel_valueForProperty_, v25);

    if (!v26)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(v26, v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v17 = v16;
  v87 = v11;
  v86 = sub_19CFDF578();
  v19 = v18;

  swift_bridgeObjectRetain();
  v20 = (void *)sub_19CFDF554();
  v21 = objc_msgSend(a1, sel_valueForProperty_, v20);

  if (!v21)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (objc_msgSend(v21, sel_isUndefined))
  {

    v93 = MEMORY[0x1E0DEE9D8];
    goto LABEL_36;
  }
  v28 = objc_msgSend(v21, sel_isNull);

  v93 = MEMORY[0x1E0DEE9D8];
  if ((v28 & 1) == 0)
  {
    v84 = a2;
    v29 = (void *)sub_19CFDF554();
    v30 = objc_msgSend(a1, sel_valueForProperty_, v29);

    if (!v30)
    {
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v31 = (void *)sub_19CFDF554();
    v32 = objc_msgSend(v30, sel_valueForProperty_, v31);

    if (!v32)
    {
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v82 = v19;
    v83 = v13;
    v33 = objc_msgSend(v32, sel_toUInt32);

    v34 = (unint64_t)sub_19CF9F684(0, v33, v30);
    if (v34 >> 62)
      goto LABEL_72;
    for (i = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_19CFE0394())
    {
      a2 = v84;
      if (!i)
      {
        swift_bridgeObjectRelease();
        v93 = MEMORY[0x1E0DEE9D8];
        v19 = v82;
        v13 = v83;
        goto LABEL_36;
      }
      v95 = MEMORY[0x1E0DEE9D8];
      sub_19CD3C8F8(0, i & ~(i >> 63), 0);
      if (i < 0)
        break;
      v36 = 0;
      v37 = v95;
      v90 = a1;
      v91 = v34 & 0xC000000000000001;
      v88 = v3;
      while (i != v36)
      {
        v94 = v37;
        if (v91)
          v38 = (id)MEMORY[0x1A1ADA390](v36, v34);
        else
          v38 = *(id *)(v34 + 8 * v36 + 32);
        v39 = v38;
        if (!objc_msgSend(v38, v8[13])
          || (v40 = objc_msgSend(v39, sel_toString)) == 0)
        {
          sub_19CDC98D8();
          swift_allocError();
          v51 = v50;
          v52 = v39;
          JSError.init(badValue:expected:)(v52, v51);
          swift_willThrow();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          v53 = 0;
          goto LABEL_68;
        }
        v41 = v40;
        v42 = v34;
        v43 = v8;
        v44 = sub_19CFDF578();
        v46 = v45;

        v37 = v94;
        v48 = *(_QWORD *)(v94 + 16);
        v47 = *(_QWORD *)(v94 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_19CD3C8F8(v47 > 1, v48 + 1, 1);
          v37 = v94;
        }
        ++v36;
        *(_QWORD *)(v37 + 16) = v48 + 1;
        v49 = v37 + 16 * v48;
        *(_QWORD *)(v49 + 32) = v44;
        *(_QWORD *)(v49 + 40) = v46;
        v8 = v43;
        v34 = v42;
        v3 = v88;
        a1 = v90;
        if (i == v36)
        {
          v93 = v37;
          swift_bridgeObjectRelease();
          v19 = v82;
          v13 = v83;
          a2 = v84;
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_72:
      ;
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_36:
  v54 = (void *)sub_19CFDF554();
  v55 = objc_msgSend(a1, sel_valueForProperty_, v54);

  if (!v55)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (objc_msgSend(v55, sel_isUndefined))
  {

LABEL_40:
    v92 = 0;
    goto LABEL_41;
  }
  v56 = objc_msgSend(v55, sel_isNull);

  if ((v56 & 1) != 0)
    goto LABEL_40;
  v66 = (void *)sub_19CFDF554();
  v67 = objc_msgSend(a1, sel_valueForProperty_, v66);

  if (!v67)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  sub_19CDC8C8C(v67);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  v92 = v68 & 1;
LABEL_41:
  v57 = (void *)sub_19CFDF554();
  v58 = objc_msgSend(a1, sel_valueForProperty_, v57);

  if (!v58)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (objc_msgSend(v58, sel_isUndefined))
  {

LABEL_45:
    v89 = 1;
    goto LABEL_46;
  }
  v59 = objc_msgSend(v58, sel_isNull);

  if ((v59 & 1) != 0)
    goto LABEL_45;
  v69 = a2;
  v70 = (void *)sub_19CFDF554();
  v71 = objc_msgSend(a1, sel_valueForProperty_, v70);

  if (!v71)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (objc_msgSend(v71, sel_isNumber))
  {
    v72 = objc_msgSend(v71, sel_toInt32);

    v89 = v72;
    a2 = v69;
LABEL_46:
    v60 = (void *)sub_19CFDF554();
    v61 = objc_msgSend(a1, sel_valueForProperty_, v60);

    if (v61)
    {
      if (objc_msgSend(v61, sel_isUndefined))
      {
        v62 = v19;

LABEL_51:
        v64 = 0;
        v65 = 0;
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)a2 = v87;
        *(_QWORD *)(a2 + 8) = v13;
        *(_QWORD *)(a2 + 16) = v86;
        *(_QWORD *)(a2 + 24) = v62;
        *(_QWORD *)(a2 + 32) = v93;
        *(_BYTE *)(a2 + 40) = v92;
        *(_QWORD *)(a2 + 48) = v89;
        *(_QWORD *)(a2 + 56) = v64;
        *(_QWORD *)(a2 + 64) = v65;
        return;
      }
      v63 = objc_msgSend(v61, sel_isNull);

      if (v63)
      {
        v62 = v19;

        goto LABEL_51;
      }
      v85 = a2;
      v73 = (void *)sub_19CFDF554();
      v74 = objc_msgSend(a1, sel_valueForProperty_, v73);

      if (v74)
      {
        if (objc_msgSend(v74, v8[13]))
        {
          v75 = objc_msgSend(v74, sel_toString);
          if (v75)
          {
            v76 = v75;
            v62 = v19;
            v64 = sub_19CFDF578();
            v65 = v77;

            a2 = v85;
            goto LABEL_52;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v78 = (void *)sub_19CFDF554();
        v79 = objc_msgSend(a1, sel_valueForProperty_, v78);

        if (v79)
          goto LABEL_66;
        goto LABEL_87;
      }
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    goto LABEL_81;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v80 = (void *)sub_19CFDF554();
  v79 = objc_msgSend(a1, sel_valueForProperty_, v80);

  if (!v79)
  {
LABEL_88:
    __break(1u);
    return;
  }
LABEL_66:
  sub_19CDC98D8();
  swift_allocError();
  JSError.init(badValue:expected:)(v79, v81);
  swift_willThrow();
LABEL_67:

  v53 = 1;
LABEL_68:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53)
    swift_bridgeObjectRelease();
}

unint64_t sub_19CDC98D8()
{
  unint64_t result;

  result = qword_1EE43B6E0;
  if (!qword_1EE43B6E0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSError, &type metadata for JSError);
    atomic_store(result, (unint64_t *)&qword_1EE43B6E0);
  }
  return result;
}

uint64_t destroy for LookupRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LookupRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LookupRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LookupRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LookupRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LookupRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LookupRequest()
{
  return &type metadata for LookupRequest;
}

uint64_t storeEnumTagSinglePayload for LookupRequest.IdentifierType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDC9BE4 + 4 * byte_19D052EFD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDC9C18 + 4 * asc_19D052EF8[v4]))();
}

uint64_t sub_19CDC9C18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC9C20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDC9C28);
  return result;
}

uint64_t sub_19CDC9C34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDC9C3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDC9C40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDC9C48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LookupRequest.IdentifierType()
{
  return &type metadata for LookupRequest.IdentifierType;
}

unint64_t sub_19CDC9C68()
{
  unint64_t result;

  result = qword_1EE43E558;
  if (!qword_1EE43E558)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D052F74, &type metadata for LookupRequest.IdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EE43E558);
  }
  return result;
}

unint64_t static LintMetricsEventIntent.kind.getter()
{
  return 0xD000000000000017;
}

JetEngine::LintMetricsEventIntent __swiftcall LintMetricsEventIntent.init(fields:)(JetEngine::LintMetricsEventIntent fields)
{
  JetEngine::LintMetricsEventIntent *v1;

  v1->fields._rawValue = fields.fields._rawValue;
  return fields;
}

uint64_t LintMetricsEventIntent.fields.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t LintMetricsEventIntent.jsRepresentation(in:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t result;
  uint64_t v12;

  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E560);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 0x73646C656966;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v12 = v5;
  swift_bridgeObjectRetain();
  v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v8 = sub_19CFE0808();
  v9 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v8, v7, v12);
  swift_unknownObjectRelease();

  *(_QWORD *)(inited + 48) = v9;
  v10 = sub_19CE106D8(inited);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E568);
  result = sub_19CDC9DE8();
  a2[4] = result;
  *a2 = v10;
  return result;
}

unint64_t sub_19CDC9DE8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE43E570;
  if (!qword_1EE43E570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43E568);
    v2 = sub_19CCE2634();
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> [A : B], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43E570);
  }
  return result;
}

JSValue __swiftcall LintMetricsEventIntent.makeValue(in:)(JSContext in)
{
  void *v2;
  JSValue result;
  Class isa;
  objc_class *v5;
  id v6;
  id v7;
  void *v8;

  v2 = (void *)objc_opt_self();
  result.super.isa = (Class)objc_msgSend(v2, sel_valueWithNewObjectInContext_, in.super.isa);
  if (result.super.isa)
  {
    isa = result.super.isa;
    swift_bridgeObjectRetain();
    v5 = in.super.isa;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    v6 = objc_msgSend(v2, sel_valueWithObject_inContext_, sub_19CFE0808(), v5);
    swift_unknownObjectRelease();

    if (v6)
    {
      v7 = v6;
      v8 = (void *)sub_19CFDF554();
      -[objc_class setValue:forProperty:](isa, sel_setValue_forProperty_, v7, v8);

      return (JSValue)isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_UNKNOWN **sub_19CDC9F60()
{
  return &protocol witness table for LintedMetricsEvent;
}

void sub_19CDC9F6C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x800000019D06E3D0;
}

unint64_t sub_19CDC9F8C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return LintMetricsEventIntent.jsRepresentation(in:)(a1, a2);
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent()
{
  return &type metadata for LintMetricsEventIntent;
}

void sub_19CDC9FB4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = JEGestaltGetSystemVersion();
  v1 = sub_19CFDF578();
  v3 = v2;

  qword_1EE465AC8 = 0x6A2E7972746E6573;
  unk_1EE465AD0 = 0xEA00000000007465;
  qword_1EE465AD8 = v1;
  unk_1EE465AE0 = v3;
}

_QWORD *assignWithCopy for SentrySDK(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SentrySDK(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SentrySDK()
{
  return &type metadata for SentrySDK;
}

uint64_t sub_19CDCA0DC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6973726576;
  else
    return 1701667182;
}

uint64_t sub_19CDCA110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDCA6A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CDCA134()
{
  return 0;
}

void sub_19CDCA140(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CDCA14C()
{
  sub_19CDCA30C();
  return sub_19CFE0A48();
}

uint64_t sub_19CDCA174()
{
  sub_19CDCA30C();
  return sub_19CFE0A54();
}

uint64_t sub_19CDCA19C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436ED0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDCA30C();
  sub_19CFE0A24();
  v15 = 0;
  sub_19CFE0538();
  if (!v5)
  {
    v14 = 1;
    sub_19CFE0538();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_19CDCA2C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_19CDCA350(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_19CDCA2F0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CDCA19C(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_19CDCA30C()
{
  unint64_t result;

  result = qword_1EE436E60;
  if (!qword_1EE436E60)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05315C, &type metadata for SentrySDK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E60);
  }
  return result;
}

uint64_t sub_19CDCA350(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E578);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDCA30C();
  sub_19CFE09E8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_19CFE0490();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_19CFE0490();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t storeEnumTagSinglePayload for SentrySDK.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDCA548 + 4 * byte_19D05300D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDCA57C + 4 * asc_19D053008[v4]))();
}

uint64_t sub_19CDCA57C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDCA584(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDCA58CLL);
  return result;
}

uint64_t sub_19CDCA598(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDCA5A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDCA5A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDCA5AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SentrySDK.CodingKeys()
{
  return &type metadata for SentrySDK.CodingKeys;
}

unint64_t sub_19CDCA5CC()
{
  unint64_t result;

  result = qword_1EE43E580;
  if (!qword_1EE43E580)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053134, &type metadata for SentrySDK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E580);
  }
  return result;
}

unint64_t sub_19CDCA614()
{
  unint64_t result;

  result = qword_1EE436E70;
  if (!qword_1EE436E70)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0530A4, &type metadata for SentrySDK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E70);
  }
  return result;
}

unint64_t sub_19CDCA65C()
{
  unint64_t result;

  result = qword_1EE436E68;
  if (!qword_1EE436E68)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0530CC, &type metadata for SentrySDK.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E68);
  }
  return result;
}

uint64_t sub_19CDCA6A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t JetPackAsset.Metadata.etag.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.etag.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.etag.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.lastModified.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.lastModified.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.lastModified.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.revalidatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  v4 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JetPackAsset.Metadata.revalidatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  v4 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JetPackAsset.Metadata.revalidatedAt.modify())(_QWORD)
{
  type metadata accessor for JetPackAsset.Metadata(0);
  return nullsub_1;
}

__n128 JetPackAsset.Metadata.osVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unint64_t v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 28));
  v4 = v3[1].n128_u64[0];
  v5 = v3[1].n128_u8[8];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  return result;
}

__n128 JetPackAsset.Metadata.osVersion.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 28));
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*JetPackAsset.Metadata.osVersion.modify())(_QWORD)
{
  type metadata accessor for JetPackAsset.Metadata(0);
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.buildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetPackAsset.Metadata.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*JetPackAsset.Metadata.buildNumber.modify())(_QWORD)
{
  type metadata accessor for JetPackAsset.Metadata(0);
  return nullsub_1;
}

uint64_t JetPackAsset.Metadata.policy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  result = type metadata accessor for JetPackAsset.Metadata(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  v9 = v4[4];
  LOBYTE(v4) = *((_BYTE *)v4 + 40);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = (_BYTE)v4;
  return result;
}

uint64_t JetPackAsset.Metadata.policy.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a1[4];
  v7 = *((_BYTE *)a1 + 40);
  result = type metadata accessor for JetPackAsset.Metadata(0);
  v9 = v1 + *(int *)(result + 36);
  *(_QWORD *)v9 = v2;
  *(_BYTE *)(v9 + 8) = v3;
  *(_QWORD *)(v9 + 16) = v4;
  *(_BYTE *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_BYTE *)(v9 + 40) = v7;
  return result;
}

uint64_t (*JetPackAsset.Metadata.policy.modify())(_QWORD)
{
  type metadata accessor for JetPackAsset.Metadata(0);
  return nullsub_1;
}

uint64_t sub_19CDCAB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDCBF90(a1, a2);
  *a3 = result;
  return result;
}

void sub_19CDCABA4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_19CDCABB0()
{
  sub_19CD60510();
  return sub_19CFE0A48();
}

uint64_t sub_19CDCABD8()
{
  sub_19CD60510();
  return sub_19CFE0A54();
}

uint64_t JetPackAsset.Metadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0C00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CD60510();
  sub_19CFE0A24();
  LOBYTE(v21) = 0;
  sub_19CFE04FC();
  if (!v2)
  {
    LOBYTE(v21) = 1;
    sub_19CFE04FC();
    v10 = type metadata accessor for JetPackAsset.Metadata(0);
    LOBYTE(v21) = 2;
    sub_19CFDEF84();
    sub_19CCC5220(&qword_1ECEB07F8, MEMORY[0x1E0CB0890]);
    sub_19CFE0568();
    v11 = (__int128 *)(v3 + *(int *)(v10 + 28));
    v12 = *((_QWORD *)v11 + 2);
    v13 = *((_BYTE *)v11 + 24);
    v21 = *v11;
    v22 = v12;
    v23 = v13;
    v26 = 3;
    sub_19CDCAE70();
    sub_19CFE052C();
    LOBYTE(v21) = 4;
    sub_19CFE04FC();
    v14 = (uint64_t *)(v3 + *(int *)(v10 + 36));
    v15 = *v14;
    v16 = *((_BYTE *)v14 + 8);
    v17 = v14[2];
    v18 = *((_BYTE *)v14 + 24);
    v19 = v14[4];
    LOBYTE(v14) = *((_BYTE *)v14 + 40);
    *(_QWORD *)&v21 = v15;
    BYTE8(v21) = v16;
    v22 = v17;
    v23 = v18;
    v24 = v19;
    v25 = (char)v14;
    v26 = 5;
    sub_19CDCAEB4();
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_19CDCAE70()
{
  unint64_t result;

  result = qword_1ECEB0A88;
  if (!qword_1ECEB0A88)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackAsset.OSVersion, &type metadata for JetPackAsset.OSVersion);
    atomic_store(result, (unint64_t *)&qword_1ECEB0A88);
  }
  return result;
}

unint64_t sub_19CDCAEB4()
{
  unint64_t result;

  result = qword_1ECEB0A38;
  if (!qword_1ECEB0A38)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackAsset.Policy, &type metadata for JetPackAsset.Policy);
    atomic_store(result, (unint64_t *)&qword_1ECEB0A38);
  }
  return result;
}

uint64_t sub_19CDCAEF8(_QWORD *a1)
{
  return JetPackAsset.Metadata.encode(to:)(a1);
}

uint64_t JetPackAsset.OSVersion.majorVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t JetPackAsset.OSVersion.minorVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t JetPackAsset.OSVersion.patchVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

BOOL static JetPackAsset.OSVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_19CDCAF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDCC258(a1, a2);
  *a3 = result;
  return result;
}

void sub_19CDCAF78(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_19CDCAF84()
{
  sub_19CD60398();
  return sub_19CFE0A48();
}

uint64_t sub_19CDCAFAC()
{
  sub_19CD60398();
  return sub_19CFE0A54();
}

uint64_t JetPackAsset.OSVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0C08);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 8);
  v11[0] = *(_QWORD *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CD60398();
  sub_19CFE0A24();
  v14 = 0;
  sub_19CFE055C();
  if (!v2)
  {
    v13 = 1;
    sub_19CFE055C();
    v12 = 2;
    sub_19CFE055C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CDCB120(_QWORD *a1)
{
  return JetPackAsset.OSVersion.encode(to:)(a1);
}

BOOL sub_19CDCB134(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t JetPackAsset.Policy.maxAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t JetPackAsset.Policy.maxAge.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.maxAge.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Policy.nonBlockingRevalidateAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t JetPackAsset.Policy.nonBlockingRevalidateAge.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.nonBlockingRevalidateAge.modify())()
{
  return nullsub_1;
}

uint64_t JetPackAsset.Policy.evictAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t JetPackAsset.Policy.evictAge.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JetPackAsset.Policy.evictAge.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CDCB1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDCC3E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CDCB20C()
{
  sub_19CD6065C();
  return sub_19CFE0A48();
}

uint64_t sub_19CDCB234()
{
  sub_19CD6065C();
  return sub_19CFE0A54();
}

uint64_t JetPackAsset.Policy.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0BF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v8;
  v11[1] = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CD6065C();
  sub_19CFE0A24();
  v18 = 0;
  v9 = v14;
  sub_19CFE0514();
  if (!v9)
  {
    v17 = 1;
    sub_19CFE0514();
    v16 = 2;
    sub_19CFE0514();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_19CDCB3D0(_QWORD *a1)
{
  return JetPackAsset.Policy.encode(to:)(a1);
}

uint64_t JetPackAsset.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JetPackAsset(0) + 20);
  return sub_19CD60418(v3, a1);
}

unint64_t JetPackAsset.cacheID.getter()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for JetPackAsset(0) + 24));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t JetPackAsset.cacheKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *assignWithCopy for JetPackAsset(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (uint64_t *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(uint64_t *)((char *)a2 + v6);
  v7[1] = *(uint64_t *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  v10 = v9[6];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = v9[7];
  v15 = (_OWORD *)((char *)v7 + v14);
  v16 = &v8[v14];
  v17 = *(_OWORD *)(v16 + 9);
  *v15 = *(_OWORD *)v16;
  *(_OWORD *)((char *)v15 + 9) = v17;
  v18 = v9[8];
  v19 = (_QWORD *)((char *)v7 + v18);
  v20 = &v8[v18];
  *v19 = *(_QWORD *)v20;
  v19[1] = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v9[9];
  v22 = (char *)v7 + v21;
  v23 = &v8[v21];
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  v25 = *((_QWORD *)v23 + 2);
  v22[24] = v23[24];
  *((_QWORD *)v22 + 2) = v25;
  v26 = *((_QWORD *)v23 + 4);
  v22[40] = v23[40];
  *((_QWORD *)v22 + 4) = v26;
  v27 = a3[6];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  LODWORD(v26) = *(_DWORD *)v29;
  v28[4] = v29[4];
  *(_DWORD *)v28 = v26;
  v30 = a3[7];
  v31 = (uint64_t *)((char *)a1 + v30);
  v32 = (uint64_t *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JetPackAsset(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (_OWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *v8 = *(_OWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  v12 = v11[6];
  v13 = (char *)v8 + v12;
  v14 = v9 + v12;
  v15 = sub_19CFDEF84();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v11[7];
  v17 = (_OWORD *)((char *)v8 + v16);
  v18 = (_OWORD *)(v9 + v16);
  *v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v18 + 9);
  *(_OWORD *)((char *)v8 + v11[8]) = *(_OWORD *)(v9 + v11[8]);
  v19 = v11[9];
  v20 = (_OWORD *)((char *)v8 + v19);
  v21 = (_OWORD *)(v9 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_OWORD *)((char *)v20 + 25) = *(_OWORD *)((char *)v21 + 25);
  v23 = a3[6];
  v24 = a3[7];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t assignWithTake for JetPackAsset(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for JetPackAsset.Metadata(0);
  v13 = v12[6];
  v14 = (char *)v8 + v13;
  v15 = v9 + v13;
  v16 = sub_19CFDEF84();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v12[7];
  v18 = (_OWORD *)((char *)v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  *v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  v20 = v12[8];
  v21 = (_QWORD *)((char *)v8 + v20);
  v22 = (uint64_t *)(v9 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = v12[9];
  v26 = (char *)v8 + v25;
  v27 = v9 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = *(_BYTE *)(v27 + 8);
  *((_QWORD *)v26 + 2) = *(_QWORD *)(v27 + 16);
  v26[24] = *(_BYTE *)(v27 + 24);
  v26[40] = *(_BYTE *)(v27 + 40);
  *((_QWORD *)v26 + 4) = *(_QWORD *)(v27 + 32);
  v28 = a3[6];
  v29 = a3[7];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = (_QWORD *)(a1 + v29);
  v33 = (uint64_t *)(a2 + v29);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CDCB884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for JetPackAsset.Metadata(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_19CDCB900(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for JetPackAsset.Metadata(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackAsset.Metadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_19CFDEF84();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (_OWORD *)((char *)v4 + v14);
    v17 = (_OWORD *)((char *)a2 + v14);
    *v16 = *v17;
    *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v17 + 9);
    v18 = (uint64_t *)((char *)v4 + v15);
    v19 = (uint64_t *)((char *)a2 + v15);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[9];
    v22 = (_OWORD *)((char *)v4 + v21);
    v23 = (_OWORD *)((char *)a2 + v21);
    *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *assignWithCopy for JetPackAsset.Metadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = *(_OWORD *)((char *)v12 + 9);
  *v11 = *v12;
  *(_OWORD *)((char *)v11 + 9) = v13;
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  v18[8] = v19[8];
  *(_QWORD *)v18 = v20;
  v21 = *((_QWORD *)v19 + 2);
  v18[24] = v19[24];
  *((_QWORD *)v18 + 2) = v21;
  v22 = *((_QWORD *)v19 + 4);
  v18[40] = v19[40];
  *((_QWORD *)v18 + 4) = v22;
  return a1;
}

_OWORD *initializeWithTake for JetPackAsset.Metadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_OWORD *)((char *)a2 + v11);
  v14 = *(_OWORD *)((char *)a2 + v11 + 9);
  v15 = (_OWORD *)((char *)a1 + v11);
  *v15 = v13;
  *(_OWORD *)((char *)v15 + 9) = v14;
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v16 = a3[9];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  *(_OWORD *)((char *)v17 + 25) = *(_OWORD *)((char *)v18 + 25);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  return a1;
}

_QWORD *assignWithTake for JetPackAsset.Metadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_OWORD *)((char *)a1 + v12);
  v15 = (_OWORD *)((char *)a2 + v12);
  *v14 = *v15;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v15 + 9);
  v16 = (_QWORD *)((char *)a1 + v13);
  v17 = (_QWORD *)((char *)a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  v21[24] = v22[24];
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  v21[40] = v22[40];
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAsset.Metadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDCBD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackAsset.Metadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDCBDEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JetPackAsset.Policy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JetPackAsset.Policy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

unint64_t sub_19CDCBEBC()
{
  unint64_t result;

  result = qword_1EE43E588;
  if (!qword_1EE43E588)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05349C, &type metadata for JetPackAsset.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E588);
  }
  return result;
}

unint64_t sub_19CDCBF04()
{
  unint64_t result;

  result = qword_1EE43E590;
  if (!qword_1EE43E590)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053554, &type metadata for JetPackAsset.OSVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E590);
  }
  return result;
}

unint64_t sub_19CDCBF4C()
{
  unint64_t result;

  result = qword_1EE43E598;
  if (!qword_1EE43E598)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05360C, &type metadata for JetPackAsset.Policy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E598);
  }
  return result;
}

uint64_t sub_19CDCBF90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1734440037 && a2 == 0xE400000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646F4D7473616CLL && a2 == 0xEC00000064656966 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6164696C61766572 && a2 == 0xED00007441646574 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D754E646C697562 && a2 == 0xEB00000000726562 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7963696C6F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_19CDCC258(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726556726F6A616DLL && a2 == 0xEC0000006E6F6973;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556726F6E696DLL && a2 == 0xEC0000006E6F6973 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265566863746170 && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_19CDCC3E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65674178616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000019D06E4A0 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567417463697665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

__n128 AutomationSemantics._id.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*AutomationSemantics._id.modify())()
{
  return nullsub_1;
}

BOOL static AutomationSemantics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  return (sub_19CDCC618(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0 && (sub_19CDCC6DC(v2, v3) & 1) != 0;
}

BOOL sub_19CDCC5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  return (sub_19CDCC618(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0 && (sub_19CDCC6DC(v2, v3) & 1) != 0;
}

uint64_t sub_19CDCC618(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_19CFE06A0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_19CFE06A0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_19CDCC6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v6 = *(i - 1);
      v5 = *i;
      v8 = *(v3 - 1);
      v7 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_19CFE06A0() & 1) == 0)
        break;
      if (v5)
      {
        if (!v7)
          return 0;
        v10 = v6 == v8 && v5 == v7;
        if (!v10 && (sub_19CFE06A0() & 1) == 0)
          return 0;
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

_QWORD *assignWithCopy for MetricsFieldsAggregator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MetricsFieldsAggregator(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CDCC844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    for (i = 0; ; i += 64)
    {
      v5 = *(_QWORD *)(a1 + i + 48);
      v6 = *(_QWORD *)(a1 + i + 56);
      v7 = *(_BYTE *)(a1 + i + 72);
      v8 = *(_BYTE *)(a1 + i + 88);
      v9 = *(_QWORD *)(a2 + i + 48);
      v10 = *(_QWORD *)(a2 + i + 56);
      v17 = *(_QWORD *)(a2 + i + 64);
      v18 = *(_QWORD *)(a1 + i + 64);
      v11 = *(unsigned __int8 *)(a2 + i + 72);
      v15 = *(_QWORD *)(a2 + i + 80);
      v16 = *(_QWORD *)(a1 + i + 80);
      v12 = *(unsigned __int8 *)(a2 + i + 88);
      if ((*(_QWORD *)(a1 + i + 32) != *(_QWORD *)(a2 + i + 32) || *(_QWORD *)(a1 + i + 40) != *(_QWORD *)(a2 + i + 40))
        && (sub_19CFE06A0() & 1) == 0)
      {
        break;
      }
      if ((v5 != v9 || v6 != v10) && (sub_19CFE06A0() & 1) == 0)
        break;
      if ((v7 & 1) != 0)
      {
        if (!v11)
          return 0;
      }
      else
      {
        if (v18 == v17)
          v13 = v11;
        else
          v13 = 1;
        if ((v13 & 1) != 0)
          return 0;
      }
      if ((v8 & 1) != 0)
      {
        if (!v12)
          return 0;
      }
      else
      {
        if (v16 == v15)
          v4 = v12;
        else
          v4 = 1;
        if ((v4 & 1) != 0)
          return 0;
      }
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

id MediaArtworkSourceConfiguration.format.getter()
{
  id *v0;

  return *v0;
}

void MediaArtworkSourceConfiguration.format.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*MediaArtworkSourceConfiguration.format.modify())()
{
  return nullsub_1;
}

uint64_t MediaArtworkSourceConfiguration.quality.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t MediaArtworkSourceConfiguration.quality.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*MediaArtworkSourceConfiguration.quality.modify())()
{
  return nullsub_1;
}

id MediaArtworkSourceConfiguration.cropStyle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void MediaArtworkSourceConfiguration.cropStyle.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*MediaArtworkSourceConfiguration.cropStyle.modify())()
{
  return nullsub_1;
}

double MediaArtworkSourceConfiguration.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void MediaArtworkSourceConfiguration.size.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*MediaArtworkSourceConfiguration.size.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CDCCA58()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFDFB78();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0;
}

BOOL _s9JetEngine31MediaArtworkSourceConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  double v4;
  double v5;
  uint64_t v6;
  int v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _BOOL8 result;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v5 = *(double *)(a1 + 32);
  v4 = *(double *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v9 = *(double *)(a2 + 32);
  v8 = *(double *)(a2 + 40);
  v10 = sub_19CFDF578();
  v12 = v11;
  if (v10 == sub_19CFDF578() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    if ((v3 & 1) != 0)
      goto LABEL_7;
LABEL_10:
    if (v2 == v6)
      v17 = v7;
    else
      v17 = 1;
    if ((v17 & 1) != 0)
      return 0;
    goto LABEL_14;
  }
  v15 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v15 & 1) == 0)
    return result;
  if ((v3 & 1) == 0)
    goto LABEL_10;
LABEL_7:
  if (!v7)
    return 0;
LABEL_14:
  v18 = sub_19CFDF578();
  v20 = v19;
  if (v18 == sub_19CFDF578() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v22 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v22 & 1) == 0)
      return result;
  }
  return v4 == v8 && v5 == v9;
}

void destroy for MediaArtworkSourceConfiguration(id *a1)
{

}

uint64_t initializeWithCopy for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = v3;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for MediaArtworkSourceConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkRoute(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkRoute(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaArtworkSourceConfiguration()
{
  return &type metadata for MediaArtworkSourceConfiguration;
}

uint64_t JetpackMetadata.fileVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void JetpackMetadata.compression.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 9);
  *a1 = *(_BYTE *)(v1 + 8);
  a1[1] = v2;
}

void JetpackMetadata.encryption.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 11);
  *a1 = *(_BYTE *)(v1 + 10);
  a1[1] = v2;
}

void JetpackMetadata.serialization.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 12);
}

uint64_t JetpackMetadata.signature.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_19CDCCEB4(v2, v3, v4);
}

uint64_t sub_19CDCCEB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 15)
    return sub_19CD3BE5C(a2, a3);
  return result;
}

uint64_t JetpackMetadata.versionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JetpackMetadata.keyIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t destroy for JetpackMetadata(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1 >> 60 != 15)
    sub_19CD3BE18(*(_QWORD *)(a1 + 24), v1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(_QWORD *)(a2 + 32);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
    sub_19CD3BE5C(v5, v4);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v4;
  }
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = a1 + 16;
  v5 = (__int128 *)(a2 + 16);
  if (*(_QWORD *)(a1 + 32) >> 60 == 15)
  {
    if (*(_QWORD *)(a2 + 32) >> 60 == 15)
    {
      v6 = *v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)v4 = v6;
    }
    else
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v8 = *(_QWORD *)(a2 + 24);
      v9 = *(_QWORD *)(a2 + 32);
      sub_19CD3BE5C(v8, v9);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v9;
    }
  }
  else if (*(_QWORD *)(a2 + 32) >> 60 == 15)
  {
    sub_19CDCD0F4(a1 + 16);
    v7 = *((_QWORD *)v5 + 2);
    *(_OWORD *)v4 = *v5;
    *(_QWORD *)(v4 + 16) = v7;
  }
  else
  {
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    sub_19CD3BE5C(v10, v11);
    v12 = *(_QWORD *)(a1 + 24);
    v13 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    sub_19CD3BE18(v12, v13);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19CDCD0F4(uint64_t a1)
{
  destroy for JetpackSignature(a1);
  return a1;
}

uint64_t assignWithTake for JetpackMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = a1 + 16;
  v5 = a2 + 16;
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v7;
      sub_19CD3BE18(v8, v6);
      goto LABEL_6;
    }
    sub_19CDCD0F4(a1 + 16);
  }
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v5 + 16);
LABEL_6:
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetpackMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackMetadata()
{
  return &type metadata for JetpackMetadata;
}

uint64_t MulticastDelegate.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  return v0;
}

uint64_t MulticastDelegate.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  return v0;
}

uint64_t sub_19CDCD33C()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_addObject_, sub_19CFE0688());
  return swift_unknownObjectRelease();
}

uint64_t sub_19CDCD380()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_allObjects);
  v3 = sub_19CFDF86C();

  if (v3 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (!__OFSUB__(v4--, 1))
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1A1ADA390](v4, v3);
LABEL_11:
        swift_unknownObjectRetain();
        v7 = sub_19CFE0688();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v6 == v7)
          objc_msgSend(v1, sel_removeObject_, v6);
        swift_unknownObjectRelease();
        if (!v4)
          return swift_bridgeObjectRelease();
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_14;
        if (v4 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v6 = *(_QWORD *)(v3 + 32 + 8 * v4);
          swift_unknownObjectRetain();
          goto LABEL_11;
        }
LABEL_15:
        __break(1u);
LABEL_16:
        swift_bridgeObjectRetain();
        v4 = sub_19CFE0394();
        swift_bridgeObjectRelease();
        if (!v4)
          return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDCD4EC(void (*a1)(char *))
{
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;

  v26 = a1;
  v2 = *((_QWORD *)*v1 + 10);
  v3 = sub_19CFDFF5C();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v22 - v5;
  v7 = *(_QWORD *)(v2 - 8);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v1[2], sel_allObjects, v10);
  v14 = MEMORY[0x1E0DEE9B0];
  v15 = sub_19CFDF86C();

  if (v15 >> 62)
    goto LABEL_17;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v16)
  {
    v22 = v15 + 32;
    v23 = v15 & 0xFFFFFFFFFFFFFF8;
    v14 += 8;
    while (!__OFSUB__(v16--, 1))
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = MEMORY[0x1A1ADA390](v16, v15);
      }
      else
      {
        if ((v16 & 0x8000000000000000) != 0)
          goto LABEL_15;
        if (v16 >= *(_QWORD *)(v23 + 16))
          goto LABEL_16;
        v18 = *(_QWORD *)(v22 + 8 * v16);
        swift_unknownObjectRetain();
      }
      v27 = v18;
      swift_unknownObjectRetain();
      v19 = swift_dynamicCast();
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      if (v19)
      {
        v20(v6, 0, 1, v2);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v6, v2);
        v26(v12);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v2);
        if (!v16)
          return swift_bridgeObjectRelease();
      }
      else
      {
        v20(v6, 1, 1, v2);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
        if (!v16)
          return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v16 = sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t MulticastDelegate.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MulticastDelegate.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_19CDCD798()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MulticastDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MulticastDelegate);
}

uint64_t method lookup function for MulticastDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MulticastDelegate.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MulticastDelegate.add(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MulticastDelegate.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MulticastDelegate.invoke(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_19CDCD820()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void **)(v0 + 16);
  v7 = *(_BYTE *)(v0 + 96);
  swift_unknownObjectRelease();

  sub_19CD5C6BC(v5, v4, v3, v1, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static NSURLSessionConfiguration.appleServices(forProcess:withBag:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_19CDCD8B8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id static AMSURLSession.forJetEngineStorefront(with:for:usingProtocol:)(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;

  v3 = *a1;
  v5 = *a3;
  v4 = a3[1];
  v6 = a3[2];
  v7 = a3[3];
  v8 = objc_msgSend((id)objc_opt_self(), sel_ams_configurationWithProcessInfo_bag_, a2, *a1);
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithConfiguration_, v8);

  if (v4)
  {
    if (v4 == 1)
    {
      v4 = 0;
      v6 = 0;
      v7 = 0;
      v10 = 2;
      v5 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = 0;
    }
  }
  else
  {
    v10 = 2;
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v12 = sub_19CCD7D5C((uint64_t)v11, v3);

  sub_19CD5C6BC(v5, v4, v6, v7, v10);
  objc_msgSend(v9, sel_setProtocolHandler_, v12);
  swift_unknownObjectRelease();
  objc_msgSend(v9, sel_setResponseDecoder_, 0);
  return v9;
}

uint64_t sub_19CDCDA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 1)
    return swift_retain();
  if (!a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AppleServicesURLProtocol(uint64_t a1)
{
  return sub_19CD5C6BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_19CDCDA7C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_19CDCDA7C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_19CD5C6BC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppleServicesURLProtocol(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_19CD5C6BC(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesURLProtocol(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesURLProtocol(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CDCDC8C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_19CDCDCA4()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_19CDCDCF4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C616974696E6924;
  else
    return 0x746E65746E6924;
}

uint64_t sub_19CDCDD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1ADBD7C](&unk_19D053A20, a3);
  return sub_19CFE0760();
}

uint64_t sub_19CDCDD80(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D053A20, a1);
  return sub_19CFDF818();
}

uint64_t sub_19CDCDDCC()
{
  MEMORY[0x1A1ADBD7C](&unk_19D053A20);
  return sub_19CFDF830();
}

uint64_t sub_19CDCDE1C()
{
  MEMORY[0x1A1ADBD7C](&unk_19D053A20);
  return sub_19CFDF824();
}

uint64_t sub_19CDCDE6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDCDCA4();
  *a1 = result;
  return result;
}

uint64_t sub_19CDCDEA0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19CDCDCF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19CDCDED0()
{
  char *v0;

  return sub_19CDCDCF4(*v0);
}

uint64_t sub_19CDCDEE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDCDCA4();
  *a1 = result;
  return result;
}

uint64_t sub_19CDCDF08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDCF35C();
  *a1 = result;
  return result;
}

uint64_t sub_19CDCDF30(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D053AC0, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CDCDF64(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D053AC0, a1);
  return sub_19CFE0A54();
}

uint64_t static SidepackedIntent.kind.getter()
{
  return 0x6361706564697324;
}

uint64_t SidepackedIntent._canonicalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CCD5B84(v2 + *(int *)(a1 + 28), a2);
}

uint64_t SidepackedIntent.init(initial:resolveUsing:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for SidepackedIntent(0, a3, v7, v8) + 28);
  return sub_19CCD14C4(a2, v9);
}

uint64_t type metadata accessor for SidepackedIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SidepackedIntent);
}

uint64_t static SidepackedIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  v9 = type metadata accessor for SidepackedIntent(255, a2, a3, a4);
  v10 = sub_19CFDFF5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v25 - v13;
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v25 - v18;
  sub_19CDCE198(a1, a2, a3, a4, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v20 = *(_QWORD *)(a2 - 8);
    v21 = 1;
    v22 = v26;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, v9);
    v20 = *(_QWORD *)(a2 - 8);
    v23 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v26, v19, a2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v9);
    v21 = 0;
    v22 = v23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v22, v21, 1, a2);
}

uint64_t sub_19CDCE198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, double);
  int v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64[2];
  uint64_t v65;

  v58 = a2;
  v59 = a5;
  v7 = type metadata accessor for SidepackedIntent(255, a2, a3, a4);
  v57 = sub_19CFDFF5C();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57, v8);
  v54 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v51 - v12;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v51 - v20;
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27, v28);
  v31 = (char *)&v51 - v30;
  v33 = *(void (**)(char *, uint64_t, uint64_t, double))(v32 + 16);
  v56 = a1;
  v33(v21, a1, a3, v29);
  v34 = swift_dynamicCast();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if (!v34)
  {
    v52 = v22;
    v53 = v26;
    v35(v13, 1, 1, v7);
    v38 = *(void (**)(char *, uint64_t))(v55 + 8);
    v39 = v57;
    v38(v13, v57);
    ((void (*)(char *, uint64_t, uint64_t))v33)(v17, v56, a3);
    v40 = v58;
    type metadata accessor for AnyIntentModel(0, v58, v41, v42);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v64[0] = v61;
      v64[1] = v62;
      v65 = v63;
      sub_19CCD14C4(v64, (uint64_t)&v61);
      v60 = v40;
      swift_getExtendedExistentialTypeMetadata();
      v43 = v54;
      v44 = swift_dynamicCast();
      v37 = v59;
      if ((v44 & 1) != 0)
      {
        v35(v43, 0, 1, v7);
        v45 = v53;
        v46 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
        v46(v53, v43, v7);
        v46(v37, v45, v7);
        goto LABEL_6;
      }
      v35(v43, 1, 1, v7);
      v38(v43, v39);
    }
    else
    {
      v49 = sub_19CFDFF5C();
      v61 = 0u;
      v62 = 0u;
      v63 = 0;
      (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(&v61, v49);
      v37 = v59;
    }
    v47 = v37;
    v48 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v47, v48, 1, v7);
  }
  v35(v13, 0, 1, v7);
  v36 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v36(v31, v13, v7);
  v37 = v59;
  v36(v59, v31, v7);
LABEL_6:
  v47 = v37;
  v48 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v47, v48, 1, v7);
}

uint64_t static SidepackedIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a3;
  v36 = a5;
  v37 = a6;
  v34 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_19CFDFF5C();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v32 - v11;
  v15 = type metadata accessor for SidepackedIntent(255, a2, v13, v14);
  v16 = sub_19CFDFF5C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v32 - v19;
  v21 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v32 - v24;
  sub_19CDCE198(a1, a2, v35, v36, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
    v27 = v37;
  }
  else
  {
    v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v20, v15);
    static Continuous._unwrapOnlyElement<A>(of:)((uint64_t)v25, AssociatedTypeWitness, a2, v34, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v15);
    v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, AssociatedTypeWitness) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v28, v12, AssociatedTypeWitness);
      v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v27 = v28;
      v30 = 0;
      return v26(v27, v30, 1, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v27 = v28;
  }
  v30 = 1;
  return v26(v27, v30, 1, AssociatedTypeWitness);
}

void sub_19CDCE6EC(_QWORD *a1@<X8>)
{
  *a1 = 0x6361706564697324;
  a1[1] = 0xEB0000000064656BLL;
}

uint64_t SidepackedIntent<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[2];
  _QWORD v52[5];
  uint64_t v53[6];
  uint64_t v54;

  v44 = a3;
  v43 = a4;
  v42 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v45 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SidepackedIntent.CodingKeys(255, v7, v8, v9);
  MEMORY[0x1A1ADBD7C](&unk_19D053AC0, v10);
  v49 = sub_19CFE04D8();
  v46 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49, v11);
  v13 = (char *)&v39 - v12;
  v47 = (void *)a2;
  v16 = type metadata accessor for SidepackedIntent(0, a2, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v39 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v48 = v13;
  v21 = v50;
  sub_19CFE09E8();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v40 = v17;
  v41 = v20;
  v50 = v16;
  v22 = v47;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v23 = sub_19CFE09DC();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v23);
  v24 = v53[0];
  LOBYTE(v51[0]) = 0;
  v26 = v48;
  v25 = v49;
  sub_19CFE043C();
  v27 = v26;
  JSONObject.init(from:)(v52, v53);
  v39 = a1;
  sub_19CD3E448((uint64_t)v53, (uint64_t)v51);
  v54 = v24;
  AnyIntentModel.init(deserializing:using:)((uint64_t)v51, &v54, v22, (uint64_t)v52);
  v30 = type metadata accessor for AnyIntentModel(0, (uint64_t)v22, v28, v29);
  AnyIntentModel._canonicalized.getter(v30, v31, v32, (uint64_t)v51);
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v52, v30);
  v33 = v50;
  v34 = v41;
  sub_19CCD14C4(v51, (uint64_t)&v41[*(int *)(v50 + 28)]);
  LOBYTE(v52[0]) = 1;
  v35 = v45;
  sub_19CFE04B4();
  v36 = v46;
  sub_19CD3E3F8((uint64_t)v53);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v25);
  (*(void (**)(char *, char *, void *))(v42 + 32))(v34, v35, v22);
  v37 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v43, v34, v33);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v34, v33);
}

uint64_t type metadata accessor for SidepackedIntent.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SidepackedIntent.CodingKeys);
}

uint64_t sub_19CDCEACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return SidepackedIntent<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t SidepackedIntent<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, __int128 *, _QWORD *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  _BYTE v28[40];
  uint64_t v29;

  v26 = a5;
  v9 = *(a3 - 1);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v12;
  JSONObject.subscript.getter(0x6C616974696E6924, 0xE800000000000000, (uint64_t)v28);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v27[0] = v13;
  v14 = *(void (**)(_BYTE *, __int128 *, _QWORD *, uint64_t))(a4 + 8);
  swift_bridgeObjectRetain();
  v14(v28, v27, a3, a4);
  if (v5)
  {
    sub_19CD3E3F8(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v26;
    (*(void (**)(uint64_t, char *, _QWORD *))(v9 + 32))(v26, v11, a3);
    JSONObject.subscript.getter(0x746E65746E6924, 0xE700000000000000, (uint64_t)v27);
    swift_bridgeObjectRelease();
    v29 = v13;
    AnyIntentModel.init(deserializing:using:)((uint64_t)v27, &v29, a3, (uint64_t)v28);
    v19 = type metadata accessor for AnyIntentModel(0, (uint64_t)a3, v17, v18);
    AnyIntentModel._canonicalized.getter(v19, v20, v21, (uint64_t)v27);
    sub_19CD3E3F8(a1);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v28, v19);
    v24 = type metadata accessor for SidepackedIntent(0, (uint64_t)a3, v22, v23);
    return sub_19CCD14C4(v27, v16 + *(int *)(v24 + 28));
  }
}

uint64_t sub_19CDCECB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return SidepackedIntent<>.init(deserializing:using:)(a1, a2, *(_QWORD **)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t sub_19CDCECD4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CDCED48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_19CDCEE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return __swift_destroy_boxed_opaque_existential_1Tm((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_19CDCEE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_19CDCEEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_19CDCEF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_19CDCEF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_19CDCEFE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_19CDCF05C + 4 * byte_19D0538A0[v10]))();
  }
}

void sub_19CDCF0E0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_19CDCF1D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x19CDCF258);
}

void sub_19CDCF1DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19CDCF1E4);
  JUMPOUT(0x19CDCF258);
}

void sub_19CDCF228()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x19CDCF258);
}

void sub_19CDCF230()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x19CDCF258);
}

uint64_t sub_19CDCF238(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x19CDCF244);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x19CDCF258);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_19CDCF270(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDCF2BC + 4 * byte_19D0538B4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDCF2F0 + 4 * byte_19D0538AF[v4]))();
}

uint64_t sub_19CDCF2F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDCF2F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDCF300);
  return result;
}

uint64_t sub_19CDCF30C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDCF314);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDCF318(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDCF320(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_19CDCF32C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CDCF33C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CDCF34C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CDCF35C()
{
  return 2;
}

uint64_t ScalarDictionary.Value.rawValue.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_19CDCF384 + 4 * byte_19D053B40[*(unsigned __int8 *)(v0 + 16)]))();
}

void sub_19CDCF384(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)a1 = v1 & 1;
}

void sub_19CDCF39C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  a1[3] = MEMORY[0x1E0DEB418];
  *a1 = v1;
}

uint64_t ScalarDictionary.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  swift_bridgeObjectRelease();
  JSONObject.dictionary.getter((uint64_t)&v12);
  if (*((_QWORD *)&v13 + 1))
  {
    v15[0] = v12;
    v15[1] = v13;
    v5 = v14;
    v16 = v14;
    v6 = *((_QWORD *)&v13 + 1);
    __swift_project_boxed_opaque_existential_1(v15, *((uint64_t *)&v13 + 1));
    v7 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t))(v5 + 48))(sub_19CDCF568, 0, MEMORY[0x1E0DEA968], &type metadata for ScalarDictionary.Value, MEMORY[0x1E0DEA978], v6, v5);
    sub_19CD3E3F8(a1);
    result = sub_19CDC6248((uint64_t)v15);
    if (!v2)
      *a2 = v7;
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v12, &qword_1EE43C1C8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    sub_19CDC5494();
    *(_QWORD *)(v9 + 32) = swift_allocError();
    *(_OWORD *)v10 = xmmword_19D053CC0;
    *(_QWORD *)(v10 + 16) = 0x20000001E3DCDBB8uLL;
    *(_QWORD *)(v10 + 24) = 0;
    swift_allocError();
    *v11 = &type metadata for ScalarDictionary;
    v11[1] = v9;
    v11[2] = 0;
    v11[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  return result;
}

uint64_t sub_19CDCF568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unsigned __int8 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unsigned __int8 v19;

  sub_19CCF8C5C(a3, (uint64_t)v15, &qword_1ECEB1328);
  v8 = v16;
  if (v16)
  {
    v9 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 136))(&v18, v8, v9);
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if (v4)
      return result;
    v11 = v19;
    if (v19 != 255)
    {
      v12 = v18;
      *(_QWORD *)a4 = a1;
      *(_QWORD *)(a4 + 8) = a2;
      *(_OWORD *)(a4 + 16) = v12;
      *(_BYTE *)(a4 + 32) = v11;
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
  }
  sub_19CDC5494();
  swift_allocError();
  *v13 = a1;
  v13[1] = a2;
  v14 = MEMORY[0x1E0DEE9D8];
  v13[2] = 0x40000001E3DCDBB8uLL;
  v13[3] = v14;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t ScalarDictionary.init(tryDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v5 = *a2;
  JSONObject.dictionary.getter((uint64_t)&v13);
  if (*((_QWORD *)&v14 + 1))
  {
    v16 = v13;
    v17 = v14;
    v18 = v15;
    MEMORY[0x1E0C80A78](v6, v7);
    v12[2] = v5;
    v8 = *((_QWORD *)&v17 + 1);
    v9 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    v10 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t))(v9 + 48))(sub_19CDD5B00, v12, MEMORY[0x1E0DEA968], &type metadata for ScalarDictionary.Value, MEMORY[0x1E0DEA978], v8, v9);
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    result = sub_19CDC6248((uint64_t)&v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v13, &qword_1EE43C1C8);
    result = sub_19CD3E3F8(a1);
    v10 = MEMORY[0x1E0DEE9E0];
  }
  *a3 = v10;
  return result;
}

Swift::Bool __swiftcall ScalarDictionary.contains(_:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  char v4;
  char v5;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    object = a1._object;
    countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    sub_19CD3FD1C(countAndFlagsBits, (uint64_t)object);
    v5 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_19CDCF824@<X0>(uint64_t *a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  v5 = ScalarDictionary.subscript.getter(v3, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t ScalarDictionary.subscript.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9[2];
  char v10;

  if (a1 == 2)
  {
    sub_19CDD2A78(a2, a3, (uint64_t)v9);
    sub_19CDD5B18(v9[0], v9[1], v10);
  }
  else
  {
    v6 = a1 & 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_19CE16FE8(v6, 0, 0, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v9[0];
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t (*ScalarDictionary.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;

  v4 = (char *)(a1 + 3);
  a1[1] = a3;
  a1[2] = (uint64_t)v3;
  *a1 = a2;
  v5 = *v3;
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_19CD3FD1C(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v5 + 56) + 24 * v8;
      v11 = *(_QWORD *)v10;
      v12 = *(_QWORD *)(v10 + 8);
      v13 = *(unsigned __int8 *)(v10 + 16);
      sub_19CCDB788(*(_QWORD *)v10, v12, *(_BYTE *)(v10 + 16));
      swift_bridgeObjectRelease();
      if (!v13)
      {
        v14 = v11 & 1;
        goto LABEL_7;
      }
      sub_19CD5EAF0(v11, v12, v13);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v14 = 2;
LABEL_7:
  *v4 = v14;
  return sub_19CDCFA1C;
}

uint64_t sub_19CDCFA1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 24);
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v3, v2, v1);
}

uint64_t ScalarDictionary.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19CDCFD38(a1, a2, a3, a4, 1);
}

{
  return sub_19CDCFD38(a1, a2, a3, a4, 2);
}

void (*ScalarDictionary.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *v3;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v9 = sub_19CD3FD1C(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v12 = 0;
    v15 = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v8 + 56) + 24 * v9;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19CCDB788(*(_QWORD *)v11, v13, *(_BYTE *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 1)
  {
    sub_19CD5EAF0(v12, v13, v14);
    goto LABEL_7;
  }
  v15 = 0;
LABEL_8:
  *v7 = v12;
  *((_BYTE *)v7 + 8) = v15;
  return sub_19CDCFBFC;
}

{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *v3;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v9 = sub_19CD3FD1C(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v12 = 0;
    v15 = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v8 + 56) + 24 * v9;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19CCDB788(*(_QWORD *)v11, v13, *(_BYTE *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 2)
  {
    sub_19CD5EAF0(v12, v13, v14);
    goto LABEL_7;
  }
  v15 = 0;
LABEL_8:
  *v7 = v12;
  *((_BYTE *)v7 + 8) = v15;
  return sub_19CDCFEE0;
}

void sub_19CDCFBFC(uint64_t **a1, uint64_t a2)
{
  sub_19CDCFEEC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

uint64_t sub_19CDCFCB8@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;

  v5 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  v7 = a2(v5, v6);
  v9 = v8;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v7;
  *(_BYTE *)(a3 + 8) = v9 & 1;
  return result;
}

uint64_t sub_19CDCFD38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12[2];
  char v13;

  if ((a2 & 1) != 0)
  {
    sub_19CDD2A78(a3, a4, (uint64_t)v12);
    sub_19CDD5B18(v12[0], v12[1], v13);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12[0] = *v5;
    *v5 = 0x8000000000000000;
    sub_19CE16FE8(a1, 0, a5, a3, a4, isUniquelyReferenced_nonNull_native);
    *v5 = v12[0];
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_19CDCFEE0(uint64_t **a1, uint64_t a2)
{
  sub_19CDCFEEC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

void sub_19CDCFEEC(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = (*a1)[3];
  v6 = (*a1)[2];
  v7 = **a1;
  v8 = *((unsigned __int8 *)*a1 + 8);
  swift_bridgeObjectRetain();
  a3(v7, v8, v6, v5);
  free(v4);
}

uint64_t sub_19CDD0000@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  v5 = ScalarDictionary.subscript.getter(v3, v4);
  v7 = v6;
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t sub_19CDD006C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v5, v6, v3, v4);
}

uint64_t ScalarDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11[2];
  char v12;

  if (a2)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_19CE16FE8(a1, a2, 3, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v11[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CDD2A78(a3, a4, (uint64_t)v11);
    sub_19CDD5B18(v11[0], v11[1], v12);
  }
  return swift_bridgeObjectRelease();
}

void (*ScalarDictionary.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *v3;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v9 = sub_19CD3FD1C(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 + 56) + 24 * v9;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(unsigned __int8 *)(v11 + 16);
  sub_19CCDB788(*(_QWORD *)v11, v13, *(_BYTE *)(v11 + 16));
  swift_bridgeObjectRelease();
  if (v14 != 3)
  {
    sub_19CD5EAF0(v12, v13, v14);
LABEL_6:
    v12 = 0;
    v13 = 0;
  }
  *v7 = v12;
  v7[1] = v13;
  return sub_19CDD0260;
}

void sub_19CDD0260(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = (*a1)[3];
  v6 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ScalarDictionary.subscript.setter(v3, v4, v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    ScalarDictionary.subscript.setter(v3, v4, v6, v5);
  }
  free(v2);
}

uint64_t ScalarDictionary.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CE18FAC();
      v12 = v15;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    v14 = *(_BYTE *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(_BYTE *)(a3 + 16) = v14;
    sub_19CDD3A14(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = -1;
  }
  return result;
}

uint64_t ScalarDictionary.merge(_:uniquingKeysWith:)(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, id *, uint64_t *))
{
  uint64_t *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v4 = *a1;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  *v2 = 0x8000000000000000;
  sub_19CDD54FC(v4, (uint64_t)sub_19CDD58F8, 0, isUniquelyReferenced_nonNull_native, a2);
  *v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t ScalarDictionary.merging(_:uniquingKeysWith:)@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, id *, uint64_t *)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  v7 = *a1;
  v8 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19CDD54FC(v7, (uint64_t)sub_19CDD58F8, 0, isUniquelyReferenced_nonNull_native, a2);
  result = swift_bridgeObjectRelease();
  if (v4)
    return swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

void sub_19CDD0534(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((unsigned __int8 *)a1 + 32);
  swift_bridgeObjectRetain();
  sub_19CCDB788(v5, v6, v7);
  sub_19CD5EAF0(v5, v6, v7);
  *a2 = v4;
  a2[1] = v3;
  swift_bridgeObjectRetain();
  sub_19CCDB788(v5, v6, v7);
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

void sub_19CDD05BC()
{
  uint64_t v0;
  char v1;

  *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v0 + 16) = v1 & 1;
}

uint64_t ScalarDictionary.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v15;

  v3 = *v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, a1);
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x19CDD0A4CLL);
  }
  v5 = v4;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v3 + 64);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_19;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 72);
    v11 = 1;
    if (v10)
      goto LABEL_18;
    v11 = 2;
    if (v15 <= 2)
      goto LABEL_20;
    v10 = *(_QWORD *)(v3 + 80);
    if (v10)
      goto LABEL_18;
    v11 = 3;
    if (v15 <= 3)
      goto LABEL_20;
    v10 = *(_QWORD *)(v3 + 88);
    if (v10)
    {
LABEL_18:
      v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_19:
      __asm { BR              X9 }
    }
    v12 = 4;
    if (v15 > 4)
    {
      v10 = *(_QWORD *)(v3 + 96);
      if (v10)
      {
        v11 = 4;
        goto LABEL_18;
      }
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          JUMPOUT(0x19CDD0A38);
        }
        if (v11 >= v15)
          break;
        v10 = *(_QWORD *)(v3 + 64 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_18;
      }
    }
  }
LABEL_20:
  swift_release();
  result = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
  a2[3] = result;
  a2[4] = &protocol witness table for JSValue;
  *a2 = v5;
  return result;
}

JSValue __swiftcall ScalarDictionary.makeValue(in:)(JSContext in)
{
  uint64_t *v1;

  return (JSValue)sub_19CDD0B38((uint64_t)in.super.isa, *v1);
}

__int128 *sub_19CDD0B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[32];
  _QWORD v22[4];
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  *(_QWORD *)&v19 = a2;
  ScalarDictionary.jsRepresentation(in:)(a1, &v24);
  if (v2)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v6 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
    v8 = v6;
    v23 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v9._countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6E0);
    v22[0] = &type metadata for ScalarDictionary;
    sub_19CCF8C5C((uint64_t)v22, (uint64_t)v21, &qword_1ECEB3370);
    v19 = 0u;
    v20 = 0u;
    sub_19CD40658((uint64_t)v21, (uint64_t)&v19);
    LOBYTE(v26) = 0;
    v24 = v19;
    v25 = v20;
    v10 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[5 * v12];
    v14 = v24;
    v15 = v25;
    *((_BYTE *)v13 + 64) = v26;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    v23 = v10;
    sub_19CCECFE4((uint64_t)v22, &qword_1ECEB3370);
    v16._object = (void *)0x800000019D06E590;
    v16._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(_QWORD *)(v7 + 32) = v23;
    *(_QWORD *)&v24 = v8;
    LOBYTE(v19) = 1;
    v18 = &v24;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v19);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v4 = *((_QWORD *)&v25 + 1);
    v5 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
    v18 = (__int128 *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
  }
  return v18;
}

uint64_t static ScalarDictionary.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_19CDD0DBC(*a1, *a2);
}

uint64_t sub_19CDD0DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  char v19;
  int64_t v21;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 64);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v21 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
LABEL_20:
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v11 = *v10;
      v12 = v10[1];
      v13 = *(_QWORD *)(a1 + 56) + 24 * v6;
      v14 = *(_QWORD *)v13;
      v15 = *(_QWORD *)(v13 + 8);
      v16 = *(_BYTE *)(v13 + 16);
      swift_bridgeObjectRetain();
      sub_19CCDB788(v14, v15, v16);
      v17 = sub_19CD3FD1C(v11, v12);
      v19 = v18;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        __asm { BR              X8 }
      sub_19CD5EAF0(v14, v15, v16);
      return 0;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_19;
      v8 = 2;
      if ((unint64_t)(v4 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if ((unint64_t)(v4 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_20;
      }
      v9 = 4;
      if (v21 > 4)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 4;
          goto LABEL_19;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x19CDD119CLL);
          }
          if (v8 >= v21)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_19;
        }
      }
    }
    return 1;
  }
  return 0;
}

void sub_19CDD11AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  char v29;
  void *v30;
  uint64_t v31;
  char v32;
  id v34;
  uint64_t v35;
  int64_t v36;
  int64_t v38;

  if (a1 == a2)
    return;
  v2 = a2;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v35 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v36 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v38 = v4;
    v9 = v8 | (v4 << 6);
LABEL_23:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(v3 + 56) + 24 * v9;
    v19 = *(void **)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    swift_bridgeObjectRetain();
    sub_19CDC5EF4(v19, v18, v20);
    v21 = sub_19CD3FD1C(v15, v16);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_39;
    v24 = v2;
    v25 = *(_QWORD *)(v2 + 56) + 24 * v21;
    v27 = *(void **)v25;
    v26 = *(_QWORD *)(v25 + 8);
    v28 = *(_BYTE *)(v25 + 16);
    if ((v28 & 1) != 0)
    {
      if ((v20 & 1) == 0)
      {
        v34 = v27;
LABEL_38:
        v20 = v28 ^ 1;
        sub_19CDC5828(v27, v26, v28);
LABEL_39:
        sub_19CDC5828(v19, v18, v20);
        return;
      }
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB1F20);
      sub_19CDC5EF4(v27, v26, 1);
      sub_19CDC5EF4(v27, v26, 1);
      sub_19CDC5EF4(v19, v18, 1);
      v29 = sub_19CFDFEF0();
      sub_19CDC5828(v27, v26, 1);
      sub_19CDC5828(v19, v18, 1);
      sub_19CDC5828(v27, v26, 1);
      v30 = v19;
      v31 = v18;
      v32 = 1;
LABEL_33:
      sub_19CDC5828(v30, v31, v32);
      v2 = v24;
      v3 = a1;
      v4 = v38;
      if ((v29 & 1) == 0)
        return;
    }
    else
    {
      if ((v20 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
      if (v27 != v19 || v26 != v18)
      {
        v29 = sub_19CFE06A0();
        swift_bridgeObjectRetain();
        sub_19CDC5828(v27, v26, 0);
        v30 = v19;
        v31 = v18;
        v32 = 0;
        goto LABEL_33;
      }
      swift_bridgeObjectRetain();
      sub_19CDC5828(v19, v18, 0);
      sub_19CDC5828(v19, v18, 0);
      v2 = v24;
      v3 = a1;
      v4 = v38;
    }
  }
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v10 >= v36)
    return;
  v11 = *(_QWORD *)(v35 + 8 * v10);
  v12 = v4 + 1;
  if (v11)
    goto LABEL_22;
  v12 = v10 + 1;
  if (v10 + 1 >= v36)
    return;
  v11 = *(_QWORD *)(v35 + 8 * v12);
  if (v11)
    goto LABEL_22;
  v12 = v10 + 2;
  if (v10 + 2 >= v36)
    return;
  v11 = *(_QWORD *)(v35 + 8 * v12);
  if (v11)
  {
LABEL_22:
    v7 = (v11 - 1) & v11;
    v38 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    goto LABEL_23;
  }
  v13 = v10 + 3;
  if (v13 >= v36)
    return;
  v11 = *(_QWORD *)(v35 + 8 * v13);
  if (v11)
  {
    v12 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v36)
      return;
    v11 = *(_QWORD *)(v35 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_22;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_19CDD151C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_19CD3FD1C(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_19CFE06A0();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_19CDD1720@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return ScalarDictionary.init(deserializing:using:)(a1, a2);
}

uint64_t sub_19CDD1734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = ScalarDictionary.init(tryDeserializing:using:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_19CDD1768@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return ScalarDictionary.jsRepresentation(in:)(a1, a2);
}

__int128 *sub_19CDD177C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  __int128 *v4;

  v3 = *v1;
  swift_bridgeObjectRetain();
  v4 = sub_19CE0349C(a1, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_19CDD17C0(uint64_t *a1, uint64_t *a2)
{
  return sub_19CDD0DBC(*a1, *a2);
}

uint64_t ScalarDictionary.Value.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    v5 = sub_19CFE06B8() & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void ScalarDictionary.Value.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __asm { BR              X9 }
}

uint64_t sub_19CDD1A88()
{
  uint64_t v1[15];

  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_19CFE0718();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
}

uint64_t sub_19CDD1B74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScalarDictionary.Value.init(from:)(a1, a2);
}

void sub_19CDD1B88(_QWORD *a1)
{
  ScalarDictionary.Value.encode(to:)(a1);
}

uint64_t ScalarDictionary.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6B8);
    sub_19CDD5B70(&qword_1EE43E6C0, (uint64_t (*)(void))sub_19CDD5B2C, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_19CFE06DC();
    v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ScalarDictionary.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _QWORD v6[5];

  sub_19CCD5B84(a1, (uint64_t)v6);
  v4 = sub_19CDD1CF4(v6);
  result = __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_19CDD1CF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  _BYTE v62[40];
  unint64_t v63;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x1E0DEE9E0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v7, (uint64_t)v62);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDD5ED8();
  sub_19CFE09E8();
  v48 = v3;
  v49 = a1;
  v55 = v6;
  v8 = sub_19CFE04C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6B8);
  sub_19CFDF404();
  v50 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v55, v2);
    sub_19CCECFE4((uint64_t)v62, qword_1EE43A238);
    v46 = v63;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    return v46;
  }
  v10 = (unsigned __int8 *)(v50 + 48);
  v51 = v2;
  while (1)
  {
    v12 = *((_QWORD *)v10 - 2);
    v11 = *((_QWORD *)v10 - 1);
    v13 = *v10;
    if (v13 == 1)
    {
      swift_bridgeObjectRetain_n();
      v14 = v12;
      v15 = v11;
    }
    else
    {
      v59 = *((_QWORD *)v10 - 2);
      v14 = sub_19CFE0598();
      v15 = v16;
    }
    v56 = (_QWORD *)v12;
    v57 = v11;
    v58 = v13;
    sub_19CDD5B2C();
    sub_19CFE04B4();
    v54 = v15;
    sub_19CDD5F1C(v12, v11, v13);
    v17 = v63;
    if (v61 == 255)
    {
      swift_bridgeObjectRetain();
      v29 = sub_19CD3FD1C(v14, v54);
      v31 = v30;
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
      {
        v32 = v63;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56 = (_QWORD *)v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19CE18FAC();
          v32 = (uint64_t)v56;
        }
        swift_bridgeObjectRelease();
        v34 = *(_QWORD *)(v32 + 56) + 24 * v29;
        v36 = *(_QWORD *)v34;
        v35 = *(_QWORD *)(v34 + 8);
        v37 = *(_BYTE *)(v34 + 16);
        sub_19CDD3A14(v29, v32);
        v63 = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19CD5EAF0(v36, v35, v37);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      goto LABEL_3;
    }
    v53 = v61;
    v18 = v60;
    v52 = v59;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v56 = (_QWORD *)v17;
    v63 = 0x8000000000000000;
    v20 = v54;
    v22 = sub_19CD3FD1C(v14, v54);
    v23 = *(_QWORD *)(v17 + 16);
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (*(_QWORD *)(v17 + 24) >= v25)
    {
      if ((v19 & 1) == 0)
        sub_19CE18FAC();
    }
    else
    {
      sub_19CD460C4(v25, v19);
      v27 = sub_19CD3FD1C(v14, v20);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_27;
      v22 = v27;
    }
    v38 = v53;
    v39 = v56;
    if ((v26 & 1) != 0)
    {
      v40 = v56[7] + 24 * v22;
      sub_19CD5EAF0(*(_QWORD *)v40, *(_QWORD *)(v40 + 8), *(_BYTE *)(v40 + 16));
      *(_QWORD *)v40 = v52;
      *(_QWORD *)(v40 + 8) = v18;
      *(_BYTE *)(v40 + 16) = v38;
    }
    else
    {
      v56[(v22 >> 6) + 8] |= 1 << v22;
      v41 = (uint64_t *)(v39[6] + 16 * v22);
      *v41 = v14;
      v41[1] = v20;
      v42 = v39[7] + 24 * v22;
      *(_QWORD *)v42 = v52;
      *(_QWORD *)(v42 + 8) = v18;
      *(_BYTE *)(v42 + 16) = v38;
      v43 = v39[2];
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
        goto LABEL_26;
      v39[2] = v45;
      swift_bridgeObjectRetain();
    }
    v63 = (unint64_t)v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v51;
LABEL_3:
    v10 += 24;
    if (!--v9)
      goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t ScalarDictionary.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6B8);
  sub_19CDD5B70(&qword_1EE43E6D0, (uint64_t (*)(void))sub_19CDD5BE4, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_19CFE073C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t ScalarDictionary._partiallyEncode(to:)(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CDD23A0(a1, *v1);
}

uint64_t sub_19CDD23A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t i;
  unint64_t v15;
  BOOL v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _BYTE v38[48];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4372B8);
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDD5ED8();
  sub_19CFE0A24();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  v28 = a2 + 64;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v29 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v31)
  {
    if (v12)
    {
      v30 = (v12 - 1) & v12;
      v31 = i;
      v15 = __clz(__rbit64(v12)) | (i << 6);
      goto LABEL_17;
    }
    v16 = __OFADD__(i, 1);
    v17 = i + 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v17 >= v29)
      goto LABEL_22;
    v18 = *(_QWORD *)(v28 + 8 * v17);
    if (!v18)
      break;
LABEL_16:
    v30 = (v18 - 1) & v18;
    v31 = v17;
    v15 = __clz(__rbit64(v18)) + (v17 << 6);
LABEL_17:
    v20 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v15);
    v21 = *v20;
    v22 = v20[1];
    v23 = *(_QWORD *)(a2 + 56) + 24 * v15;
    v24 = *(_QWORD *)(v23 + 8);
    v26 = *(_BYTE *)(v23 + 16);
    v35 = *(_QWORD *)v23;
    v25 = v35;
    v36 = v24;
    v37 = v26;
    v32 = v21;
    v33 = v22;
    v34 = 1;
    sub_19CCDB788(v35, v24, v26);
    sub_19CDD5BE4();
    swift_bridgeObjectRetain();
    sub_19CFE0568();
    swift_bridgeObjectRelease();
    result = sub_19CD5EAF0(v25, v24, v26);
    v12 = v30;
  }
  v19 = v17 + 1;
  if (v17 + 1 >= v29)
    goto LABEL_22;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v17 + 2;
  if (v17 + 2 >= v29)
    goto LABEL_22;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v17 + 3;
  if (v17 + 3 >= v29)
  {
LABEL_22:
    swift_release();
    sub_19CCECFE4((uint64_t)v38, qword_1EE43A238);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v4);
  }
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v17 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v29)
      goto LABEL_22;
    v18 = *(_QWORD *)(v28 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_19CDD275C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ScalarDictionary.init(from:)(a1, a2);
}

uint64_t sub_19CDD2770(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6B8);
  sub_19CDD5B70(&qword_1EE43E6D0, (uint64_t (*)(void))sub_19CDD5BE4, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_19CFE073C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t sub_19CDD2840@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _QWORD v6[5];

  sub_19CCD5B84(a1, (uint64_t)v6);
  v4 = sub_19CDD1CF4(v6);
  result = __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_19CDD2890(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CDD23A0(a1, *v1);
}

double sub_19CDD2898@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;
  _OWORD v12[2];

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_19CD20240(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE18490();
      v9 = v11;
    }
    sub_19CD20334(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_19CD433C0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), v12);
    sub_19CDD35C4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    sub_19CD433C0(v12, a2);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_19CDD297C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_19CD2258C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE18D70();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_19CFE0310();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_19CD433C0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_19CDD3790(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_19CDD2A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE18FAC();
      v12 = v15;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    v14 = *(_BYTE *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(_BYTE *)(a3 + 16) = v14;
    sub_19CDD3A14(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = -1;
  }
  return result;
}

double sub_19CDD2B68@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDD2B90(a1, a2, sub_19CCED700, (void (*)(void))sub_19CD10EB8, a3);
}

double sub_19CDD2B7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDD2B90(a1, a2, sub_19CCED700, (void (*)(void))sub_19CD10EAC, a3);
}

double sub_19CDD2B90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  double result;
  uint64_t v17;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = a3(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v17 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v17;
    }
    swift_bridgeObjectRelease();
    sub_19CCD14C4((__int128 *)(*(_QWORD *)(v15 + 56) + 40 * v12), a5);
    sub_19CDD3DE0(v12, v15);
    *v8 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CDD2C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CCED700(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v20 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE1A1AC();
      v12 = v20;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 48 * v8;
    v14 = *(_QWORD *)v13;
    v19 = *(_OWORD *)(v13 + 8);
    v15 = *(_QWORD *)(v13 + 24);
    v16 = *(_QWORD *)(v13 + 32);
    v17 = *(_BYTE *)(v13 + 40);
    sub_19CDD41C0(v8, v12);
    *v4 = v12;
    result = swift_bridgeObjectRelease();
    v18 = v19;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0uLL;
  }
  *(_QWORD *)a3 = v14;
  *(_OWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = v16;
  *(_BYTE *)(a3 + 40) = v17;
  return result;
}

double sub_19CDD2DB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDD3124(a1, a2, (void (*)(unint64_t, uint64_t))sub_19CCD14C4, (void (*)(void))sub_19CE1A56C, a3);
}

uint64_t sub_19CDD2DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE1A58C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for JetPackAsset(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_19CCFDB04(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_19CDD475C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for JetPackAsset(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

double sub_19CDD2EF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  double result;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE1A98C();
      v11 = v15;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 40 * v8;
    v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v13;
    *(_QWORD *)(a3 + 32) = *(_QWORD *)(v12 + 32);
    sub_19CDD3DE0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CDD2FF0(uint64_t a1)
{
  return sub_19CD1256C(a1, (uint64_t (*)(void))sub_19CE1C1EC, (void (*)(uint64_t, uint64_t))sub_19CDD4958, (void (*)(void))sub_19CE1AB80);
}

double sub_19CDD300C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  double result;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_19CE1AEE4();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + (v8 << 6);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_QWORD *)(a3 + 16) = v13;
    *(_QWORD *)(a3 + 24) = v14;
    v15 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v15;
    sub_19CDD4AEC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_19CDD3110@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDD3124(a1, a2, (void (*)(unint64_t, uint64_t))sub_19CCD14C4, (void (*)(void))sub_19CE1B0F4, a3);
}

double sub_19CDD3124@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  double result;
  uint64_t v17;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_19CD3FD1C(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v17 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v17;
    }
    swift_bridgeObjectRelease();
    a3(*(_QWORD *)(v15 + 56) + 40 * v12, a5);
    sub_19CDD3DE0(v12, v15);
    *v8 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CDD3230(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_19CD20240(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_19CE1B2F4();
    v7 = v10;
  }
  sub_19CD20334(*(_QWORD *)(v7 + 48) + 40 * v4);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_19CDD4CC8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_19CDD3308(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_19CD2A4AC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_19CE1BC60();
    v7 = v10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_19CDD4E90(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_19CDD33F0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v10 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD35C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CD23A14(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_19CFE0094();
        result = sub_19CD20334((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_19CDD3790(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_19CFE0310();
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v12 = sub_19CFE007C();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (v12 + 1) & v11;
      v13 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v14 = v11;
      do
      {
        v15 = v8;
        v16 = v13;
        v17 = v13 * v10;
        v18 = v14;
        v34(v7, *(_QWORD *)(a2 + 48) + v13 * v10, v4);
        v19 = sub_19CFDF4C4();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v35)
        {
          if (v20 >= v35 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v8 = v15;
            if (v16 * a1 < v17
              || (v13 = v16, *(_QWORD *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v17 + v16)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v16;
              v14 = v18;
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v35 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v8 = v15;
        v13 = v16;
LABEL_5:
        v10 = (v10 + 1) & v14;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_19CDD3A14(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v10 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, v3 = v6, !v18))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD3C08(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v9 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_BYTE *)(v14 + v3);
          v16 = (_BYTE *)(v14 + v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD3DE0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v11 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD3FC8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_19CFE08C8();
        sub_19CFE08D4();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_19CFDF650();
        }
        v10 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_13:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD41C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  BOOL v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v11 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (__int128 *)(v16 + 48 * v3);
          v18 = (__int128 *)(v16 + 48 * v6);
          if (48 * v3 < (uint64_t)(48 * v6) || v17 >= v18 + 3 || (v19 = v3 == v6, v3 = v6, !v19))
          {
            v9 = *v18;
            v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *v17 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD43B4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v9 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD4588(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v9 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD475C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v9 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for JetPackAsset(0) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD4958(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_19CFE08BC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD4AEC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v12 = sub_19CFE0910();
        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (__int128 *)(v17 + (v3 << 6));
          v19 = (__int128 *)(v17 + (v6 << 6));
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 4))
          {
            v9 = *v19;
            v10 = v19[1];
            v11 = v19[3];
            v18[2] = v19[2];
            v18[3] = v11;
            *v18 = v9;
            v18[1] = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD4CC8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _BYTE v27[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CD23A14(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v27);
        v9 = sub_19CFE0094();
        result = sub_19CD20334((uint64_t)v27);
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= (uint64_t)v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(a2 + 48);
            v14 = v13 + 40 * v3;
            v15 = (__int128 *)(v13 + 40 * v6);
            if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
            {
              v16 = *v15;
              v17 = v15[1];
              *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
              *(_OWORD *)v14 = v16;
              *(_OWORD *)(v14 + 16) = v17;
            }
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_OWORD *)(v18 + 16 * v3);
            v20 = (_OWORD *)(v18 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= (uint64_t)v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19CDD4E90(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CFE007C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v28 = v4;
      v29 = (result + 1) & v7;
      do
      {
        v8 = *(_QWORD *)(a2 + 48) + 56 * v6;
        v9 = *(_QWORD *)(v8 + 8);
        v10 = *(_QWORD *)(v8 + 48);
        sub_19CFE08C8();
        sub_19CFE08E0();
        swift_bridgeObjectRetain();
        if (v9)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_19CFDF650();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        swift_bridgeObjectRelease();
        sub_19CFE08E0();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_19CFDF650();
          swift_bridgeObjectRelease();
        }
        v4 = v28;
        v11 = sub_19CFE0910();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v29)
        {
          if (v12 < v29)
            goto LABEL_5;
        }
        else if (v12 >= v29)
        {
          goto LABEL_16;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_16:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = v13 + 56 * v3;
          v15 = (__int128 *)(v13 + 56 * v6);
          if (v3 != v6 || v14 >= (unint64_t)v15 + 56)
          {
            v16 = *v15;
            v17 = v15[1];
            v18 = v15[2];
            *(_QWORD *)(v14 + 48) = *((_QWORD *)v15 + 6);
            *(_OWORD *)(v14 + 16) = v17;
            *(_OWORD *)(v14 + 32) = v18;
            *(_OWORD *)v14 = v16;
          }
          v19 = *(_QWORD *)(a2 + 56);
          v20 = (_QWORD *)(v19 + 8 * v3);
          v21 = (_QWORD *)(v19 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
          {
            *v20 = *v21;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v28 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_19CDD5158(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_OWORD *__return_ptr, id *, _OWORD *), uint64_t a6)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _OWORD *v31;
  id v32;
  id v34[4];
  _OWORD v35[2];
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v8 = v6;
  v48 = a6;
  v10 = -1 << *(_BYTE *)(a1 + 32);
  v11 = ~v10;
  v12 = *(_QWORD *)(a1 + 64);
  v13 = -v10;
  v41 = a1;
  v42 = a1 + 64;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v43 = v11;
  v44 = 0;
  v45 = v14 & v12;
  v46 = a2;
  v47 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE2412C(&v39);
  v15 = *((_QWORD *)&v39 + 1);
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    swift_release();
    return;
  }
  while (1)
  {
    v21 = v39;
    v37 = v39;
    v38 = v15;
    sub_19CD433C0(&v40, v36);
    v22 = *(_QWORD **)v8;
    v24 = sub_19CD3FD1C(v21, v15);
    v25 = v22[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      sub_19CFE082C();
      __break(1u);
      goto LABEL_26;
    }
    v28 = v23;
    if (v22[3] < v27)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_19CD141BC();
      if ((v28 & 1) != 0)
        goto LABEL_16;
    }
LABEL_6:
    v16 = *(_QWORD **)v8;
    *(_QWORD *)(*(_QWORD *)v8 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v17 = (uint64_t *)(v16[6] + 16 * v24);
    *v17 = v21;
    v17[1] = v15;
    sub_19CD433C0(v36, (_OWORD *)(v16[7] + 32 * v24));
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_24;
    v16[2] = v20;
LABEL_8:
    sub_19CE2412C(&v39);
    v15 = *((_QWORD *)&v39 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v39 + 1))
      goto LABEL_20;
  }
  sub_19CD13ED8(v27, a4 & 1);
  v29 = sub_19CD3FD1C(v21, v15);
  if ((v28 & 1) != (v30 & 1))
    goto LABEL_25;
  v24 = v29;
  if ((v28 & 1) == 0)
    goto LABEL_6;
LABEL_16:
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)v8 + 56) + 32 * v24, (uint64_t)v34);
  a5(v35, v34, v36);
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    swift_bridgeObjectRelease();
    v31 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)v8 + 56) + 32 * v24);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    sub_19CD433C0(v35, v31);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  v34[0] = v7;
  v32 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    swift_release();

    return;
  }
LABEL_26:
  *(_QWORD *)&v35[0] = 0;
  *((_QWORD *)&v35[0] + 1) = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

void sub_19CDD54FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *__return_ptr, id *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  uint64_t v46;
  void *v48;
  id v49[2];
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = v5;
  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v64 = a1;
  v65 = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v66 = v9;
  v67 = 0;
  v68 = v12 & v10;
  v69 = a2;
  v70 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE249DC((uint64_t)&v59);
  v13 = v60;
  if (!v60)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    swift_release();
    return;
  }
  v46 = v5;
  while (1)
  {
    v21 = v59;
    v23 = v61;
    v22 = v62;
    v57 = v59;
    v58 = v13;
    v24 = v63;
    v54 = v61;
    v55 = v62;
    v56 = v63;
    v25 = *(_QWORD **)v6;
    v71 = v13;
    v27 = sub_19CD3FD1C(v59, v13);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_19CFE082C();
      __break(1u);
      goto LABEL_27;
    }
    v31 = v26;
    if (v25[3] < v30)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v26 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_19CE18FAC();
      if ((v31 & 1) != 0)
        goto LABEL_16;
    }
LABEL_6:
    v14 = *(_QWORD **)v6;
    *(_QWORD *)(*(_QWORD *)v6 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v15 = (uint64_t *)(v14[6] + 16 * v27);
    v16 = v71;
    *v15 = v21;
    v15[1] = v16;
    v17 = v14[7] + 24 * v27;
    *(_QWORD *)v17 = v23;
    *(_QWORD *)(v17 + 8) = v22;
    *(_BYTE *)(v17 + 16) = v24;
    v18 = v14[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_25;
    v14[2] = v20;
LABEL_8:
    sub_19CE249DC((uint64_t)&v59);
    v13 = v60;
    a4 = 1;
    if (!v60)
      goto LABEL_20;
  }
  sub_19CD460C4(v30, a4 & 1);
  v32 = sub_19CD3FD1C(v21, v71);
  if ((v31 & 1) != (v33 & 1))
    goto LABEL_26;
  v27 = v32;
  if ((v31 & 1) == 0)
    goto LABEL_6;
LABEL_16:
  v34 = *(_QWORD **)v6;
  v35 = *(_QWORD *)(*(_QWORD *)v6 + 56);
  v36 = 24 * v27;
  v37 = v35 + 24 * v27;
  v38 = *(void **)v37;
  v39 = *(void **)(v37 + 8);
  v40 = *(_BYTE *)(v37 + 16);
  v49[0] = v38;
  v49[1] = v39;
  v50 = v40;
  sub_19CCDB788((uint64_t)v38, (uint64_t)v39, v40);
  a5(&v51, v49, &v54);
  if (!v48)
  {
    v48 = 0;
    sub_19CD5EAF0((uint64_t)v38, (uint64_t)v39, v40);
    sub_19CD5EAF0(v23, v22, v24);
    swift_bridgeObjectRelease();
    v41 = v34[7] + v36;
    v42 = v51;
    v43 = v52;
    v44 = v53;
    sub_19CD5EAF0(*(_QWORD *)v41, *(_QWORD *)(v41 + 8), *(_BYTE *)(v41 + 16));
    *(_QWORD *)v41 = v42;
    *(_QWORD *)(v41 + 8) = v43;
    *(_BYTE *)(v41 + 16) = v44;
    v6 = v46;
    goto LABEL_8;
  }
  sub_19CD5EAF0((uint64_t)v38, (uint64_t)v39, v40);
  v49[0] = v48;
  v45 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CD5EAF0(v54, v55, v56);
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    swift_release();

    return;
  }
LABEL_27:
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CDD58F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  v6 = *((_BYTE *)a1 + 32);
  *(_BYTE *)(a2 + 32) = v6;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  swift_bridgeObjectRetain();
  return sub_19CCDB788(v4, v5, v6);
}

void _s9JetEngine16ScalarDictionaryV5ValueO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_19CDD5984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  char v6;

  if (v5)
  {
    sub_19CCDB788(v0, v1, v5);
    sub_19CD5EAF0(v2, v3, v4);
    sub_19CD5EAF0(v0, v1, v5);
    v6 = 0;
  }
  else
  {
    sub_19CD5EAF0(v2, v3, 0);
    sub_19CD5EAF0(v0, v1, 0);
    v6 = ((v2 & 1) == 0) ^ v0;
  }
  return v6 & 1;
}

uint64_t sub_19CDD5B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_19CD468D4(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_19CDD5B18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_19CD5EAF0(a1, a2, a3);
  return a1;
}

unint64_t sub_19CDD5B2C()
{
  unint64_t result;

  result = qword_1EE43E6C8;
  if (!qword_1EE43E6C8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ScalarDictionary.Value, &type metadata for ScalarDictionary.Value);
    atomic_store(result, (unint64_t *)&qword_1EE43E6C8);
  }
  return result;
}

uint64_t sub_19CDD5B70(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43E6B8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1A1ADBD7C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19CDD5BE4()
{
  unint64_t result;

  result = qword_1EE43E6D8;
  if (!qword_1EE43E6D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ScalarDictionary.Value, &type metadata for ScalarDictionary.Value);
    atomic_store(result, (unint64_t *)&qword_1EE43E6D8);
  }
  return result;
}

uint64_t sub_19CDD5C2C(char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  swift_bridgeObjectRetain();
  return ScalarDictionary.subscript.setter(v5, v3, v4);
}

uint64_t sub_19CDD5C70()
{
  return 0;
}

uint64_t sub_19CDD5C80@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19CDCFCB8(a1, ScalarDictionary.subscript.getter, a2);
}

uint64_t sub_19CDD5C9C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

uint64_t sub_19CDD5CA8()
{
  return 0;
}

uint64_t sub_19CDD5CB8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19CDCFCB8(a1, ScalarDictionary.subscript.getter, a2);
}

uint64_t sub_19CDD5CD4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))ScalarDictionary.subscript.setter);
}

uint64_t keypath_set_2Tm(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a3;
  v7 = a3[1];
  v8 = *a1;
  v9 = *((unsigned __int8 *)a1 + 8);
  swift_bridgeObjectRetain();
  return a5(v8, v9, v6, v7);
}

uint64_t sub_19CDD5D38()
{
  return 0;
}

uint64_t sub_19CDD5D50()
{
  return 0;
}

uint64_t sub_19CDD5D64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CCDB788(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScalarDictionary.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CCDB788(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CD5EAF0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScalarDictionary.Value(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CD5EAF0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScalarDictionary.Value(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScalarDictionary.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CDD5ED0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

unint64_t sub_19CDD5ED8()
{
  unint64_t result;

  result = qword_1EE4371E0;
  if (!qword_1EE4371E0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for OpenCodingKey, &type metadata for OpenCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE4371E0);
  }
  return result;
}

uint64_t sub_19CDD5F1C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t dispatch thunk of LocalizedStrings.string(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t initializeWithCopy for MetricsSamplingLottery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsSamplingLottery(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for MetricsSamplingLottery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsSamplingLottery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsSamplingLottery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CDD60D4(uint64_t a1, uint64_t a2)
{
  return sub_19CD1C1C4(a1, a2, &qword_1EE43E720, MEMORY[0x1E0DEBB98], &qword_1EE43E728);
}

uint64_t sub_19CDD60F0(uint64_t a1, uint64_t a2)
{
  return sub_19CCBE944(a1, a2, &qword_1EE43E708, &qword_1EE43E710, &qword_1EE43E718);
}

uint64_t sub_19CDD610C(uint64_t a1, uint64_t a2)
{
  return sub_19CCBE944(a1, a2, &qword_1EE43E6F8, &qword_1ECEB0750, &qword_1EE43E700);
}

uint64_t sub_19CDD6128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDEF84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = qword_1ECEB2920;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_19CD1C1C4(v12, v13, qword_1EE43B298, MEMORY[0x1E0DEB070], &qword_1EE43E6E8);
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v17(v6, 1, 1, v7);
  }
  else
  {
    sub_19CFDEED0();
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v17(v6, 0, 1, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_19CCECFE4((uint64_t)v6, (uint64_t *)&unk_1ECEB2040);
    v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    sub_19CFDEF00();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v18 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(a1, v18, 1, v7);
}

uint64_t sub_19CDD632C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  os_unfair_lock_s *v4;
  int v5;
  char v6;
  unsigned __int8 v8;

  v2 = *v0;
  v1 = v0[1];
  if (qword_1ECEB1958 != -1)
    swift_once();
  v3 = (char *)off_1ECEB1948 + 16;
  v4 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19CD3EA18(v3, &v8);
  os_unfair_lock_unlock(v4);
  v5 = v8;
  swift_release();
  if (v5 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0)
      return 0;
  }
  else if ((v5 & 1) == 0)
  {
    return 0;
  }
  if (qword_1ECEB2920 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v6 = sub_19CD1A8A8(v2, v1);
  swift_bridgeObjectRelease();
  if (v6 == 2)
    return 0;
  return v6 & 1;
}

uint64_t sub_19CDD6458()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  double v29;
  BOOL v30;
  CFStringRef *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  __CFString *v36;
  const void *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  double v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v6);
  v40 = (char *)&v38 - v7;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v38 - v10;
  v12 = sub_19CFDEF84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v38 - v19;
  v21 = *v0;
  v23 = *((_QWORD *)v0 + 2);
  v22 = *((_QWORD *)v0 + 3);
  v24 = v0[4];
  v25 = *((_QWORD *)v0 + 5);
  v41 = *((_QWORD *)v0 + 1);
  *(double *)&v42 = v21;
  *((_QWORD *)&v42 + 1) = v41;
  *(_QWORD *)&v43 = v23;
  *((_QWORD *)&v43 + 1) = v22;
  v44 = v24;
  v45 = v25;
  if ((sub_19CDD632C() & 1) == 0)
  {
    if (v24 <= 0.0)
      return 0;
    if (v24 < 1.0)
    {
      *(double *)&v42 = v21;
      *((_QWORD *)&v42 + 1) = v41;
      *(_QWORD *)&v43 = v23;
      *((_QWORD *)&v43 + 1) = v22;
      v44 = v24;
      v45 = v25;
      sub_19CDD6128((uint64_t)v11);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v39(v11, 1, v12) == 1)
      {
        sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1ECEB2040);
        v26 = (uint64_t)v40;
        goto LABEL_7;
      }
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v11, v12);
      sub_19CFDEF78();
      v27 = sub_19CFDEF18();
      v28 = *(void (**)(char *, uint64_t))(v13 + 8);
      v28(v16, v12);
      v28(v20, v12);
      v26 = (uint64_t)v40;
      if ((v27 & 1) == 0)
      {
LABEL_7:
        v29 = (double)sub_19CEC001C(0x20000000000001uLL) * 1.11022302e-16 + 0.0;
        if (fabs(v29))
          v30 = v29 > v24;
        else
          v30 = 1;
        if (!v30)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_19CFDEF78();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
          if (qword_1ECEB2920 != -1)
            swift_once();
          v32 = (CFStringRef *)off_1ECEB26E8;
          sub_19CCF8C5C(v26, (uint64_t)v4, (uint64_t *)&unk_1ECEB2040);
          v33 = v39(v4, 1, v12);
          swift_bridgeObjectRetain();
          if (v33 == 1)
          {
            sub_19CCECFE4((uint64_t)v4, (uint64_t *)&unk_1ECEB2040);
            v42 = 0u;
            v43 = 0u;
          }
          else
          {
            sub_19CFDEEDC();
            v35 = v34;
            (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
            *((_QWORD *)&v43 + 1) = MEMORY[0x1E0DEB070];
            *(_QWORD *)&v42 = v35;
          }
          swift_bridgeObjectRetain();
          v36 = (__CFString *)sub_19CFDF554();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3370);
          v37 = (const void *)sub_19CFDFF50();
          CFPreferencesSetAppValue(v36, v37, v32[2]);

          swift_unknownObjectRelease();
          sub_19CCECFE4((uint64_t)&v42, &qword_1ECEB3370);
          swift_bridgeObjectRelease_n();
          sub_19CCECFE4(v26, (uint64_t *)&unk_1ECEB2040);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        return 0;
      }
    }
  }
  return 1;
}

unint64_t sub_19CDD67F4()
{
  unint64_t result;

  result = qword_1EE4372D8;
  if (!qword_1EE4372D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LocalizationError, &type metadata for LocalizationError);
    atomic_store(result, (unint64_t *)&qword_1EE4372D8);
  }
  return result;
}

uint64_t sub_19CDD6838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];
  _BYTE v14[40];

  sub_19CDD6A08((uint64_t)v14);
  if (!v0)
  {
    JSONObject.subscript.getter(0x74616D726F66, 0xE600000000000000, (uint64_t)v13);
    sub_19CCF8C5C((uint64_t)v13, (uint64_t)v10, &qword_1ECEB1328);
    v2 = v11;
    if (v11)
    {
      v3 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      sub_19CD3E3F8((uint64_t)v13);
      if ((v4 & 1) == 0)
      {
        JSONObject.subscript.getter(0x74616D726F66, 0xE600000000000000, (uint64_t)v13);
        sub_19CCF8C5C((uint64_t)v13, (uint64_t)v10, &qword_1ECEB1328);
        v1 = v11;
        if (v11)
        {
          v5 = v12;
          __swift_project_boxed_opaque_existential_1(v10, v11);
          v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v1, v5);
          v7 = v6;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
          sub_19CD3E3F8((uint64_t)v13);
          if (v7)
          {
            sub_19CD3E3F8((uint64_t)v14);
            return v1;
          }
        }
        else
        {
          sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
          sub_19CD3E3F8((uint64_t)v13);
        }
        sub_19CDD67F4();
        swift_allocError();
        *(_QWORD *)v9 = 0;
        *(_QWORD *)(v9 + 8) = 0;
        *(_BYTE *)(v9 + 16) = 0;
        swift_willThrow();
        sub_19CD3E3F8((uint64_t)v14);
        return v1;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
      sub_19CD3E3F8((uint64_t)v13);
    }
    sub_19CD3E3F8((uint64_t)v14);
    return 0x6C6E692F6E6F736ALL;
  }
  return v1;
}

uint64_t sub_19CDD6A08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  JSONObject.subscript.getter(0x69747265706F7270, 0xEA00000000007365, (uint64_t)v7);
  JSONObject.subscript.getter(0x617A696C61636F6CLL, 0xED0000736E6F6974, a1);
  sub_19CD3E3F8((uint64_t)v7);
  sub_19CCF8C5C(a1, (uint64_t)v7, &qword_1ECEB1328);
  v2 = v8;
  if (!v8)
  {
    sub_19CCECFE4((uint64_t)v7, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v3 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  if ((v4 & 1) != 0)
  {
LABEL_5:
    sub_19CDD67F4();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_19D04BBA0;
    *(_BYTE *)(v6 + 16) = 4;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  return result;
}

_BYTE *sub_19CDD6B44()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];
  _BYTE v12[40];

  sub_19CDD6A08((uint64_t)v12);
  if (!v1)
  {
    v0 = v12;
    JSONObject.subscript.getter(1752457584, 0xE400000000000000, (uint64_t)v11);
    sub_19CCF8C5C((uint64_t)v11, (uint64_t)v8, &qword_1ECEB1328);
    v2 = v9;
    if (v9)
    {
      v3 = v10;
      __swift_project_boxed_opaque_existential_1(v8, v9);
      v0 = (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
      v5 = v4;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      sub_19CD3E3F8((uint64_t)v11);
      if (v5)
      {
        sub_19CD3E3F8((uint64_t)v12);
        return v0;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v8, &qword_1ECEB1328);
      sub_19CD3E3F8((uint64_t)v11);
    }
    sub_19CDD67F4();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_19D053D40;
    *(_BYTE *)(v6 + 16) = 4;
    swift_willThrow();
    sub_19CD3E3F8((uint64_t)v12);
  }
  return v0;
}

uint64_t LocalizedStringsBundle.fetchLanguages()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t LocalizedStringsBundle.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CDD6C98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19CDD6CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CDD6CCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_19CDD6F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_19CDD6F74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x19CDD7158);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_19CDD717C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_19CDD6F14((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_19CDD7250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v20;

  v10 = sub_19CFDEBA0();
  if (v10)
  {
    v11 = sub_19CFDEBC4();
    if (__OFSUB__(a1, v11))
    {
LABEL_15:
      __break(1u);
      JUMPOUT(0x19CDD7304);
    }
    v10 += a1 - v11;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_19CFDEBB8();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v10 + v15;
  if (v10)
    v17 = v16;
  else
    v17 = 0;
  sub_19CDD6F14(v10, v17, a4, a5);
  if (!v5)
    v18 = v20;
  return v18 & 1;
}

uint64_t sub_19CDD7334()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CDD7358()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *assignWithCopy for LocalizedStringsBundle(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for LocalizedStringsBundle(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t initializeWithCopy for LanguageStringsContainerWrapper(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for LanguageStringsContainerWrapper(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LanguageStringsContainerWrapper(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LanguageStringsContainerWrapper()
{
  return &type metadata for LanguageStringsContainerWrapper;
}

uint64_t sub_19CDD74F8(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[3];

  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = a2;
  v8._object = a3;
  JetPackPath.init(_:)(v8);
  v14[0] = v14[2];
  v9 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16))(v14, v6, v7);
  v11 = v10;
  swift_bridgeObjectRelease();
  if (!v3 && v11 >> 60 == 15)
  {
    sub_19CDD67F4();
    swift_allocError();
    *(_QWORD *)v12 = a2;
    *(_QWORD *)(v12 + 8) = a3;
    *(_BYTE *)(v12 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_19CDD75F0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t dispatch thunk of Intent.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_19CDD761C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CDD7688(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_19CDD76F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_19CDD7728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_19CDD7758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_19CDD7788(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDD7838 + 4 * byte_19D053DC0[(v7 - 1)]))();
}

void sub_19CDD7888(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _IntentAsJSIntentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentAsJSIntentModel);
}

_UNKNOWN **sub_19CDD7A44()
{
  return &off_1E3DD7DC8;
}

uint64_t sub_19CDD7A50(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A1ADBD7C](&unk_19D053E54);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19CDD7A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_19CDD7AFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v14;
  _BYTE v15[40];
  uint64_t v16;

  v14 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v8);
  v10 = &v15[-v9 - 8];
  v11 = *a2;
  sub_19CD3E448(a1, (uint64_t)v15);
  v16 = v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_BYTE *, uint64_t *, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v15, &v16, AssociatedTypeWitness, AssociatedConformanceWitness);
  result = sub_19CD3E3F8(a1);
  if (!v3)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v14, v10, AssociatedTypeWitness);
  return result;
}

uint64_t sub_19CDD7C18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CDD7AFC(a1, a2, a3);
}

uint64_t sub_19CDD7C34(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_19CDD7C40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) + 24))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_19CDD7C58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CDD7CD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19CDD7D68(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_19CDD7DB4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDD7E0C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDD7E64(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDD7EBC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDD7F14(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_19CDD8054(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _UncheckedSendableIntentReturnType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _UncheckedSendableIntentReturnType);
}

uint64_t getEnumTagSinglePayload for PackageCompressionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PackageCompressionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CDD8310 + 4 * byte_19D053EC5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CDD8344 + 4 * byte_19D053EC0[v4]))();
}

uint64_t sub_19CDD8344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDD834C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDD8354);
  return result;
}

uint64_t sub_19CDD8360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDD8368);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CDD836C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDD8374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PackageCompressionError()
{
  return &type metadata for PackageCompressionError;
}

unint64_t sub_19CDD8394()
{
  unint64_t result;

  result = qword_1EE43E758[0];
  if (!qword_1EE43E758[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053F28, &type metadata for PackageCompressionError);
    atomic_store(result, qword_1EE43E758);
  }
  return result;
}

void sub_19CDD83D8()
{
  sub_19CFE0340();
  __break(1u);
}

void sub_19CDD8420()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CDD8468()
{
  return swift_deallocClassInstance();
}

uint64_t sub_19CDD8478()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 128) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_19CDD84A8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 128) + 8) + 24))(a1, *(_QWORD *)(*(_QWORD *)v1 + 120));
}

uint64_t sub_19CDD84DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 120) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_19CDD84F8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 120) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t AnyIntent.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t result;

  type metadata accessor for SpecializedIntentBox(0, a2, a3, a3);
  v6 = swift_allocObject();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 120) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 136), a1);
  *a4 = v6;
  return result;
}

uint64_t type metadata accessor for SpecializedIntentBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SpecializedIntentBox);
}

uint64_t AnyIntent.kind.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

JSValue __swiftcall AnyIntent.makeValue(in:)(JSContext in)
{
  uint64_t v1;

  return (JSValue)(*(uint64_t (**)(Class))(**(_QWORD **)v1 + 104))(in.super.isa);
}

uint64_t sub_19CDD85FC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_19CDD860C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for IntentBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentBox);
}

uint64_t type metadata accessor for AnyIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyIntent);
}

uint64_t sub_19CDD8658()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDD8664(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t *sub_19CDD868C(uint64_t a1)
{
  swift_allocObject();
  return sub_19CD3D06C(a1);
}

uint64_t sub_19CDD86C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = *a1;
  v7 = type metadata accessor for Promise.State(0, *(_QWORD *)(*a1 + 80), a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v14 - v10;
  v12 = (uint64_t)a1 + *(_QWORD *)(v6 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  LOBYTE(v12) = swift_getEnumCaseMultiPayload() != 0;
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  *a4 = v12;
  return result;
}

void sub_19CDD87A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *a1;
  v6 = type metadata accessor for Promise.State(0, *(_QWORD *)(*a1 + 80), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v13 - v9;
  v11 = (uint64_t)a1 + *(_QWORD *)(v5 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = (char *)sub_19CDD8860 + 4 * byte_19D054070[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_19CDD8860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *v4 = *v6;
  v7 = type metadata accessor for Result(0, v5, a3, a4);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
}

uint64_t Promise.invalidate(_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;
  char *v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _BYTE v31[80];

  v6 = *(_QWORD *)(*v4 + 80);
  v7 = type metadata accessor for Promise.State(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (uint64_t *)&v31[-v14 - 8];
  v16 = (os_unfair_lock_s *)(v4[2] + 16);
  os_unfair_lock_lock(v16);
  v17 = (char *)v4 + *(_QWORD *)(*v4 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(v15, v17, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v19 = *v15;
    *v11 = a1;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    v20 = a1;
    (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 40))(v17, v11, v7);
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    v23 = type metadata accessor for Promise.Observer(0, v6, v21, v22);
    if (!MEMORY[0x1A1AD9B44](v19, v23))
      return swift_bridgeObjectRelease();
    v24 = 0;
    for (i = v19 + 32; ; i += 80)
    {
      v26 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v26 & 1) == 0)
        break;
      v27 = *(_QWORD *)(v23 - 8);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 16))(v31, i, v23);
      v28 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_12;
      sub_19CD459E8(a1, v23);
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v31, v23);
      ++v24;
      if (v28 == MEMORY[0x1A1AD9B44](v19, v23))
        return swift_bridgeObjectRelease();
    }
    sub_19CFE0160();
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 3)
  {
LABEL_13:
    result = sub_19CFE0340();
    __break(1u);
    return result;
  }
  os_unfair_lock_unlock(v16);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v15, v7);
}

uint64_t sub_19CDD8BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_19CFDF998();
  }
  return swift_task_switch();
}

uint64_t sub_19CDD8C30()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_19CDD8C8C;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_19CDD8C8C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19CDD8CE0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDD8D0C()
{
  swift_release();
  return swift_deallocObject();
}

void (*Promise.makeCompletionAdapter()())(uint64_t a1, void *a2)
{
  swift_retain();
  return sub_19CDD91E4;
}

void sub_19CDD8D60(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];

  v29[1] = a3;
  v5 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v29 - v12;
  v16 = type metadata accessor for Result(0, v5, v14, v15);
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)v29 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v18);
  v21 = a2;
  Result.init(from:orElse:)(v13, a2, v5, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *(void **)v20;
    Promise.reject(_:)(*(void **)v20, v22, v23, v24);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v20, v5);
    Promise.resolve(_:)((uint64_t)v8, v26, v27, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void (*Promise<A>.makeCompletionAdapter()())(char a1, id a2)
{
  swift_retain();
  return sub_19CDD91EC;
}

void sub_19CDD8F10(char a1, id a2)
{
  id v3;

  if ((a1 & 1) != 0 || !a2)
  {
    sub_19CFBA2F4();
  }
  else
  {
    v3 = a2;
    sub_19CEBA094(a2);

  }
}

void (*Promise<A>.makeCompletionAdapter()())(void *a1)
{
  swift_retain();
  return sub_19CDD91F4;
}

void sub_19CDD8F8C(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = a1;
    sub_19CEBA094(a1);

  }
  else
  {
    sub_19CFBA2F4();
  }
}

uint64_t *static Promise.resolved(toValue:)(uint64_t a1)
{
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = MEMORY[0x1E0C80A78](a1, a1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v3, v1);
  return Promise.__allocating_init(value:)((uint64_t)v3, v5, v6, v7);
}

uint64_t *static Promise.resolved(toError:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v5;
  id v6;

  v5 = Promise.__allocating_init(error:)((uint64_t)a1, a2, a3, a4);
  v6 = a1;
  return v5;
}

uint64_t Promise.always(perform:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Promise.always(on:perform:)(a3, a1, a2);
}

uint64_t *Promise.replace<A>(on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for Promise(0, a4, a3, a4);
  v8 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v7);
  return Promise.flatMap<A>(on:_:)(a1, a2, a3, v7, v8);
}

uint64_t sub_19CDD90E8()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CDD90F4()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CDD9100()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CDD910C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  uint64_t *v3;

  return sub_19CDD86C4(v3, a1, a2, a3);
}

_QWORD *sub_19CDD9124@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_19CDD9160()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return swift_deallocObject();
}

uint64_t sub_19CDD9194()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDD91B8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_19CDD91E4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_19CDD8D60(a1, a2, v2);
}

void sub_19CDD91EC(char a1, id a2)
{
  sub_19CDD8F10(a1, a2);
}

void sub_19CDD91F4(void *a1)
{
  sub_19CDD8F8C(a1);
}

uint64_t method lookup function for Promise()
{
  return swift_lookUpClassMethod();
}

id *sub_19CDD9208(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  id *result;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    switch(*((_BYTE *)a2 + v5))
    {
      case 0:
        *a1 = *a2;
        *((_BYTE *)a1 + v5) = 0;
        swift_bridgeObjectRetain();
        break;
      case 1:
        (*(void (**)(id *))(v4 + 16))(a1);
        *((_BYTE *)v3 + v5) = 1;
        break;
      case 2:
        v11 = *a2;
        v12 = *a2;
        *v3 = v11;
        *((_BYTE *)v3 + v5) = 2;
        break;
      case 3:
        v13 = *a2;
        v14 = *a2;
        *v3 = v13;
        *((_BYTE *)v3 + v5) = 3;
        break;
      default:
        if (v5 <= 3)
          v10 = v5;
        else
          v10 = 4;
        __asm { BR              X13 }
        return result;
    }
  }
  return v3;
}

id *sub_19CDD9374(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id *result;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    switch(*((_BYTE *)a1 + v7))
    {
      case 0:
        swift_bridgeObjectRelease();
        break;
      case 1:
        (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
        break;
      case 2:
      case 3:

        break;
      default:
        if (v7 <= 3)
          v8 = v7;
        else
          v8 = 4;
        __asm { BR              X12 }
        return result;
    }
    switch(*((_BYTE *)a2 + v7))
    {
      case 0:
        *a1 = *a2;
        *((_BYTE *)a1 + v7) = 0;
        swift_bridgeObjectRetain();
        return a1;
      case 1:
        (*(void (**)(id *, id *, uint64_t))(v6 + 16))(a1, a2, v5);
        v10 = 1;
        goto LABEL_23;
      case 2:
        v11 = *a2;
        v12 = v11;
        *a1 = v11;
        v10 = 2;
        goto LABEL_23;
      case 3:
        v13 = *a2;
        v14 = v13;
        *a1 = v13;
        v10 = 3;
LABEL_23:
        *((_BYTE *)a1 + v7) = v10;
        break;
      default:
        if (v7 <= 3)
          v9 = v7;
        else
          v9 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

_QWORD *sub_19CDD9568(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *result;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  switch(*((_BYTE *)a2 + v5))
  {
    case 0:
      v7 = 0;
      *a1 = *a2;
      break;
    case 1:
      (*(void (**)(_QWORD *))(v4 + 32))(a1);
      v7 = 1;
      break;
    case 2:
      *a1 = *a2;
      v7 = 2;
      break;
    case 3:
      *a1 = *a2;
      v7 = 3;
      break;
    default:
      if (v5 <= 3)
        v6 = v5;
      else
        v6 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v5) = v7;
  return a1;
}

uint64_t sub_19CDD9670(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 4)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 253);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDD9734 + 4 * byte_19D0540C0[(v4 - 1)]))();
}

void sub_19CDD9780(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v8 = a2 - 253;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_19CDD9928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 4u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDD9970 + 4 * byte_19D0540CE[v3]))();
}

void sub_19CDD99B8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 3)
  {
    v5 = a2 - 4;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 4;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 4;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_19CDD9A80(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 72);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
    {
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    v5 = *(unsigned __int8 *)(a2 + 72);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(_BYTE *)(a1 + 72) = v6;
  }
  return a1;
}

uint64_t sub_19CDD9B2C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_19CDD9B68(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 57) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CDD9BB8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 72);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_19CDD9BD4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 72) = a2;
  return result;
}

void sub_19CDD9C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_19CDD87A0(v4, a2, a3, a4);
}

uint64_t sub_19CDD9C18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_19CDD9C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19CDD9CA4()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CDD9CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_19CDD9D30()
{
  sub_19CFE0340();
  __break(1u);
}

void sub_19CDD9D78()
{
  sub_19CFE0340();
  __break(1u);
}

void sub_19CDD9DC0()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CDD9E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(_QWORD *)(v6 + 136), v3, v4);
  return sub_19CFDF5E4();
}

BOOL static EventSubscription.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t EventSubscription.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t EventSubscription.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = sub_19CFE0A90();
  v2 = sub_19CFDF698();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 96))(v2);
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v4;
}

uint64_t EventSubscription.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CDD9F88()
{
  sub_19CFE08C8();
  EventSubscription.hash(into:)();
  return sub_19CFE0910();
}

void sub_19CDD9FC0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

_QWORD *sub_19CDD9FD4()
{
  _QWORD *v0;
  uint64_t v1;

  v0 = (_QWORD *)swift_allocObject();
  type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), v1);
  v0[2] = sub_19CFDF8B4();
  return v0;
}

uint64_t sub_19CDDA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v8[56];

  v6 = type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, a1, v6);
  swift_beginAccess();
  sub_19CFDF938();
  sub_19CFDF908();
  return swift_endAccess();
}

uint64_t sub_19CDDA0B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t TransientStateStore.__allocating_init(isConcurrent:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  TransientStateStore.init(isConcurrent:)(a1, v3, v4, v5);
  return v2;
}

uint64_t *sub_19CDDA110(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_allocObject();
  return sub_19CDDA158(a1, a2, v4, v5);
}

uint64_t *sub_19CDDA158(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *v4;
  if ((a1 & 1) != 0)
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  else
    v6 = 0;
  v4[2] = (uint64_t)v6;
  v7 = *(_QWORD *)(v5 + 80);
  v8 = type metadata accessor for StatePath(0, v7, a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
  v9 = *(_QWORD *)(v5 + 88);
  v16 = v9;
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v8, &v16);
  v10 = sub_19CFE034C();
  swift_bridgeObjectRelease();
  v4[3] = v10;
  type metadata accessor for TransientStateStore.Transaction(0, v7, v9, v11);
  v4[4] = sub_19CFDF8B4();
  *((_BYTE *)v4 + 40) = 1;
  v12 = sub_19CFDF938();
  type metadata accessor for AsyncEvent(0, v12, v13, v14);
  v4[6] = AsyncEvent.__allocating_init()();
  return v4;
}

BOOL TransientStateStore.isConcurrent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) != 0;
}

uint64_t TransientStateStore.onChange.getter()
{
  sub_19CDDD138();
  return swift_retain();
}

void sub_19CDDA2A4(void (*a1)(id)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  id v5;

  v4 = *(void **)(v2 + 16);
  if (v4)
  {
    sub_19CDDD9EC();
    v5 = v4;
    withLock<A, B>(_:_:)(v5, a1);

  }
  else
  {
    a1(a2);
  }
}

void TransientStateStore.currentState<A>(at:)(_QWORD *a1@<X8>)
{
  sub_19CDDA2A4((void (*)(id))sub_19CDDD140, a1);
}

uint64_t sub_19CDDA38C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *boxed_opaque_existential_2Tm;
  void *v37;
  uint64_t v38;
  Swift::String v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  Swift::String v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  Swift::String v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  Swift::String v63;
  void *v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t MetatypeMetadata;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[3];
  _QWORD *v85;
  char v86[8];
  uint64_t v87;

  v10 = *a1;
  v72 = (_QWORD *)sub_19CFDFF5C();
  v70 = (_QWORD *)*(v72 - 1);
  MEMORY[0x1E0C80A78](v72, v11);
  v67 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v65 - v15;
  v68 = a1 + 3;
  swift_beginAccess();
  v71 = a1;
  v17 = a1[3];
  v78[0] = a2;
  v20 = type metadata accessor for StatePath(0, *(_QWORD *)(v10 + 80), v18, v19);
  swift_bridgeObjectRetain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
  v87 = *(_QWORD *)(v10 + 88);
  v22 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v20, &v87);
  v23 = v17;
  v24 = v20;
  MEMORY[0x1A1AD96C4](&v80, v78, v23, v20, v21, v22);
  v73 = a2;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v81 + 1))
  {
    sub_19CCECFE4((uint64_t)&v80, qword_1EE43B648);
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  }
  v69 = a5;
  sub_19CCD14C4(&v80, (uint64_t)v86);
  swift_endAccess();
  sub_19CCD5B84((uint64_t)v86, (uint64_t)&v80);
  v25 = swift_dynamicCast();
  v26 = *(_QWORD *)(a3 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if ((v25 & 1) != 0)
  {
    v27(v16, 0, 1, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v69, v16, a3);
  }
  v66 = a3;
  v65 = v27;
  v27(v16, 1, 1, a3);
  v29 = (_QWORD *)v70[1];
  ((void (*)(char *, _QWORD *))v29)(v16, v72);
  v30 = v24;
  if ((v71[5] & 1) != 0)
  {
    sub_19CCD5B84((uint64_t)v86, (uint64_t)v78);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v70 = v29;
      v80 = v74;
      v81 = v75;
      v82 = v76;
      v31 = v73;
      v83 = v77;
      v84[0] = v73;
      swift_beginAccess();
      sub_19CFDF464();
      sub_19CFDF3E0();
      swift_endAccess();
      sub_19CCECFE4((uint64_t)&v74, qword_1EE43B648);
      sub_19CDDD940((uint64_t)&v80, (uint64_t)&v74);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9C8);
      v32 = v67;
      v33 = v66;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v65(v32, 0, 1, v33);
        v34 = v69;
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v69, v32, v33);
        v35 = *(_QWORD *)(a4 + 8);
        *((_QWORD *)&v75 + 1) = v33;
        *(_QWORD *)&v76 = v35;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v74);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v26 + 16))(boxed_opaque_existential_2Tm, v34, v33);
        v84[0] = v31;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_19CFDF4AC();
        swift_endAccess();
        sub_19CDDDA40((uint64_t)&v80);
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
      }
      v65(v32, 1, 1, v33);
      sub_19CDDDA40((uint64_t)&v80);
      ((void (*)(char *, _QWORD *))v70)(v32, v72);
    }
    else
    {
      v77 = 0;
      v76 = 0u;
      v75 = 0u;
      v74 = 0u;
      sub_19CCECFE4((uint64_t)&v74, &qword_1EE43E9D8);
    }
  }
  if (qword_1EE43BE78 != -1)
    swift_once();
  v37 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_19D052350;
  v72 = v37;
  v85 = sub_19CD40918(0, 15, 0, MEMORY[0x1E0DEE9D8]);
  v39._countAndFlagsBits = 0x7461206574617453;
  v39._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  MetatypeMetadata = v30;
  v78[0] = v73;
  sub_19CD40794((uint64_t)v78, (uint64_t)v84);
  v75 = 0u;
  v74 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v84, (uint64_t)&v74);
  LOBYTE(v82) = 0;
  v80 = v74;
  v81 = v75;
  v40 = v85;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v42 = v66;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v40 = sub_19CD40918(0, v40[2] + 1, 1, v40);
  v44 = v40[2];
  v43 = v40[3];
  if (v44 >= v43 >> 1)
    v40 = sub_19CD40918((_QWORD *)(v43 > 1), v44 + 1, 1, v40);
  v40[2] = v44 + 1;
  v45 = &v40[5 * v44];
  v46 = v80;
  v47 = v81;
  *((_BYTE *)v45 + 64) = v82;
  *((_OWORD *)v45 + 2) = v46;
  *((_OWORD *)v45 + 3) = v47;
  v85 = v40;
  sub_19CCECFE4((uint64_t)v78, &qword_1ECEB3370);
  v48._countAndFlagsBits = 544106784;
  v48._object = (void *)0xE400000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v48);
  swift_unknownObjectRetain();
  sub_19CCF4C08((uint64_t)&v80);
  v49 = v85;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v49 = sub_19CD40918(0, v49[2] + 1, 1, v49);
  v51 = v49[2];
  v50 = v49[3];
  if (v51 >= v50 >> 1)
    v49 = sub_19CD40918((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
  v49[2] = v51 + 1;
  v52 = &v49[5 * v51];
  v53 = v80;
  v54 = v81;
  *((_BYTE *)v52 + 64) = v82;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  v85 = v49;
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *(_QWORD *)(v38 + 32) = v85;
  v85 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v56._object = (void *)0x800000019D06E5E0;
  v56._countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v56);
  MetatypeMetadata = swift_getMetatypeMetadata();
  v78[0] = v42;
  sub_19CD40794((uint64_t)v78, (uint64_t)v84);
  v75 = 0u;
  v74 = 0u;
  sub_19CD40658((uint64_t)v84, (uint64_t)&v74);
  LOBYTE(v82) = 0;
  v80 = v74;
  v81 = v75;
  v57 = v85;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v57 = sub_19CD40918(0, v57[2] + 1, 1, v57);
  v59 = v57[2];
  v58 = v57[3];
  if (v59 >= v58 >> 1)
    v57 = sub_19CD40918((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
  v57[2] = v59 + 1;
  v60 = &v57[5 * v59];
  v61 = v80;
  v62 = v81;
  *((_BYTE *)v60 + 64) = v82;
  *((_OWORD *)v60 + 2) = v61;
  *((_OWORD *)v60 + 3) = v62;
  v85 = v57;
  sub_19CCECFE4((uint64_t)v78, &qword_1ECEB3370);
  v63._countAndFlagsBits = 0;
  v63._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  *(_QWORD *)(v38 + 40) = v85;
  v64 = v72;
  *(_QWORD *)&v80 = v72;
  LOBYTE(v74) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v38, (JetEngine::LogMessageLevel)&v74);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(v42, a4);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
}

void sub_19CDDAC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[64];

  v6 = type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v7, a1, v6);
  __asm { BR              X10 }
}

uint64_t sub_19CDDACBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[7];
  uint64_t v9;
  _BYTE v10[240];

  v3 = *(_QWORD *)(v2 - 144);
  sub_19CCD14C4((__int128 *)(v2 - 136), (uint64_t)v10);
  sub_19CCD5B84((uint64_t)v10, (uint64_t)&v9);
  v8[3] = v3;
  swift_beginAccess();
  v6 = type metadata accessor for StatePath(255, v1, v4, v5);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43C2E0);
  v8[0] = v0;
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v6, v8);
  sub_19CFDF464();
  sub_19CFDF4AC();
  swift_endAccess();
  v9 = v3;
  sub_19CFDF938();
  sub_19CFDF908();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_19CDDB2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = *v4;
  v9 = a1;
  type metadata accessor for StatePath(255, *(_QWORD *)(v6 + 80), a3, a4);
  v7 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v7);
  result = sub_19CFDFC5C();
  if ((result & 1) == 0)
  {
    v9 = a1;
    return AsyncEvent.post(_:)((uint64_t)&v9);
  }
  return result;
}

uint64_t sub_19CDDB370(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  type metadata accessor for TransientStateStore.Transaction(255, v4, *(_QWORD *)(v3 + 88), v5);
  v6 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF20], v6);
  sub_19CFDF4E8();
  if (v16)
  {
    sub_19CDDA024(a2, v7, v8, v9);
    return swift_release();
  }
  else
  {
    type metadata accessor for StatePath(0, v4, v8, v9);
    v16 = sub_19CFDF398();
    sub_19CDDAC48(a2, (uint64_t)&v16, v11, v12);
    sub_19CDDB2E8(v16, v13, v14, v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t TransientStateStore.updateState(at:to:)(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[48];
  _QWORD *v9;
  uint64_t *v10;

  v3 = *v2;
  v7 = *a1;
  sub_19CCD5B84(a2, (uint64_t)v8);
  v8[40] = 0;
  swift_bridgeObjectRetain();
  v9 = v2;
  v10 = &v7;
  sub_19CDDA2A4((void (*)(id))sub_19CDDDA28, MEMORY[0x1E0DEE9C0]);
  v5 = type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v4);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v7, v5);
}

uint64_t TransientStateStore.removeState(at:recursively:)(_QWORD *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v3 = *v2;
  v8[0] = *a1;
  if ((a2 & 1) != 0)
    v4 = 2;
  else
    v4 = 1;
  v9 = v4;
  swift_bridgeObjectRetain();
  v10 = v2;
  v11 = v8;
  sub_19CDDA2A4((void (*)(id))sub_19CDDDA28, MEMORY[0x1E0DEE9C0]);
  v6 = type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v5);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v8, v6);
}

Swift::Void __swiftcall TransientStateStore.removeAllState()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD v4[3];
  char v5;
  _OWORD *v6;

  v1 = *v0;
  memset(v4, 0, sizeof(v4));
  v5 = 3;
  v6 = v4;
  sub_19CDDA2A4((void (*)(id))sub_19CDDDA28, MEMORY[0x1E0DEE9C0]);
  v3 = type metadata accessor for TransientStateStore.Change(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v4, v3);
}

void TransientStateStore.performTransaction<A>(postingChanges:_:)(_QWORD *a1@<X8>)
{
  sub_19CDDA2A4((void (*)(id))sub_19CDDD168, a1);
}

uint64_t sub_19CDDB654(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[56];
  _QWORD *v30;
  uint64_t v31;

  v26 = a4;
  v27 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v28 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  type metadata accessor for TransientStateStore.Transaction(0, v28, v27, a4);
  v6 = sub_19CDD9FD4();
  v30 = v6;
  swift_beginAccess();
  v7 = sub_19CFDF938();
  swift_retain();
  sub_19CFDF908();
  v8 = swift_endAccess();
  a2(v8);
  if (v4)
  {
    swift_release();
    swift_beginAccess();
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF20], v7);
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v7);
    sub_19CFDFCB0();
    swift_endAccess();
    swift_release();
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF20], v7);
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v7);
    sub_19CFDFCB0();
    swift_endAccess();
    swift_release();
    type metadata accessor for StatePath(0, v28, v10, v11);
    v31 = sub_19CFDF398();
    swift_beginAccess();
    v12 = v6[2];
    v14 = type metadata accessor for TransientStateStore.Change(0, v28, v27, v13);
    v15 = swift_bridgeObjectRetain();
    if (MEMORY[0x1A1AD9B44](v15, v14))
    {
      v16 = 0;
      v17 = v12 + 32;
      while (1)
      {
        v18 = sub_19CFDF8D8();
        sub_19CFDF890();
        if ((v18 & 1) == 0)
          break;
        v19 = *(_QWORD *)(v14 - 8);
        result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(v29, v17, v14);
        v22 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_12;
        sub_19CDDAC48((uint64_t)v29, (uint64_t)&v31, v20, v21);
        (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v29, v14);
        ++v16;
        v17 += 56;
        if (v22 == MEMORY[0x1A1AD9B44](v12, v14))
          goto LABEL_8;
      }
      result = sub_19CFE0160();
      __break(1u);
LABEL_12:
      __break(1u);
    }
    else
    {
LABEL_8:
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        sub_19CDDB2E8(v31, v23, v24, v25);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_19CDDB94C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7275636E6F437369 && a2 == 0xEC000000746E6572;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_19CDDBA4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365756C6176;
  else
    return 0x7275636E6F437369;
}

BOOL sub_19CDDBA88()
{
  return TransientStateStore.isConcurrent.getter();
}

uint64_t sub_19CDDBAAC()
{
  sub_19CDDD138();
  return swift_retain();
}

void sub_19CDDBACC(_QWORD *a1@<X8>)
{
  TransientStateStore.currentState<A>(at:)(a1);
}

uint64_t sub_19CDDBAEC(uint64_t *a1, uint64_t a2)
{
  return TransientStateStore.updateState(at:to:)(a1, a2);
}

uint64_t sub_19CDDBB0C(_QWORD *a1, char a2)
{
  return TransientStateStore.removeState(at:recursively:)(a1, a2);
}

void sub_19CDDBB2C()
{
  TransientStateStore.removeAllState()();
}

void sub_19CDDBB4C(_QWORD *a1@<X8>)
{
  TransientStateStore.performTransaction<A>(postingChanges:_:)(a1);
}

BOOL sub_19CDDBB6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19CDBA754(*a1, *a2);
}

uint64_t sub_19CDDBB84()
{
  return sub_19CDBA788();
}

uint64_t sub_19CDDBB98()
{
  return sub_19CDBA764();
}

uint64_t sub_19CDDBBAC()
{
  sub_19CFE08C8();
  sub_19CDBA764();
  return sub_19CFE0910();
}

uint64_t sub_19CDDBBF4()
{
  char *v0;

  return sub_19CDDBA4C(*v0);
}

uint64_t sub_19CDDBC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDDB94C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CDDBC38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDCF35C();
  *a1 = result;
  return result;
}

uint64_t sub_19CDDBC68(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0545B0, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CDDBC9C(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0545B0, a1);
  return sub_19CFE0A54();
}

id static TransientStateStore<>.registerForCoding(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;

  if (qword_1EE43D618 != -1)
    swift_once();
  v8 = (void *)qword_1EE43E8F8;
  objc_msgSend((id)qword_1EE43E8F8, sel_lock);
  sub_19CDDC6AC(a1, a2, a3, a4);
  return objc_msgSend(v8, sel_unlock);
}

void TransientStateStore<>.init(from:)()
{
  _s10CodingKeysOMa();
}

_QWORD *sub_19CDDBDC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  MEMORY[0x1A1ADBD7C](&unk_19D0545B0, a1);
  v4 = sub_19CFE04D8();
  *(_QWORD *)(v3 - 168) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v27 - v7;
  v9 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v10 = *(_QWORD *)(v3 - 160);
  sub_19CFE09E8();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    v11 = *(_QWORD *)(v3 - 192);
    v12 = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 160) = v2;
    *(_QWORD *)(v3 - 208) = v1;
    *(_BYTE *)(v3 - 112) = 0;
    v14 = *(_QWORD *)(v3 - 176);
    v13 = *(_QWORD *)(v3 - 168);
    v15 = v8;
    v16 = sub_19CFE049C();
    v19 = type metadata accessor for StatePath(255, v12, v17, v18);
    *(_QWORD *)(v3 - 72) = v11;
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v19, v3 - 72);
    v20 = sub_19CFDF464();
    *(_BYTE *)(v3 - 113) = 1;
    *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v3 - 128) = v14;
    v21 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v19, v3 - 136);
    v22 = sub_19CDDD194();
    *(_QWORD *)(v3 - 152) = v21;
    *(_QWORD *)(v3 - 144) = v22;
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA0D8], v20, v3 - 152);
    sub_19CFE04B4();
    v24 = *(_QWORD *)(v3 - 112);
    v25 = swift_allocObject();
    v9 = sub_19CDDA158(v16 & 1, v24, v25, v26);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v13);
    __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v3 - 160));
  }
  return v9;
}

void TransientStateStore<>.encode(to:)()
{
  sub_19CDDA2A4((void (*)(id))sub_19CDDD1D8, MEMORY[0x1E0DEE9C0]);
}

void sub_19CDDC00C()
{
  _s10CodingKeysOMa();
}

uint64_t sub_19CDDC058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[96];

  *(_QWORD *)(v4 - 224) = MEMORY[0x1A1ADBD7C](&unk_19D0545B0, a1);
  v5 = sub_19CFE0574();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v35[-v8];
  swift_beginAccess();
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v3 + 32);
  type metadata accessor for TransientStateStore.Transaction(255, v1, v2, v10);
  v11 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v11);
  if ((sub_19CFDFC5C() & 1) != 0)
  {
    *(_QWORD *)(v4 - 256) = v2;
    *(_QWORD *)(v4 - 248) = v6;
    v13 = *(_QWORD *)(v4 - 216);
    v12 = *(_QWORD **)(v4 - 208);
    *(_QWORD *)(v4 - 240) = v5;
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    v14 = *(_QWORD *)(v4 - 240);
    sub_19CFE0A24();
    *(_BYTE *)(v4 - 144) = 0;
    v15 = *(_QWORD *)(v4 - 200);
    sub_19CFE0544();
    if (v15)
    {
      return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 248) + 8))(v9, v14);
    }
    else
    {
      *(_QWORD *)(v4 - 200) = v9;
      v21 = swift_beginAccess();
      *(_QWORD *)(v4 - 208) = v35;
      MEMORY[0x1E0C80A78](v21, v22);
      *(_QWORD *)&v35[-32] = v1;
      *(_QWORD *)&v35[-24] = v13;
      v23 = v13;
      v24 = *(_QWORD *)(v4 - 232);
      v25 = *(_QWORD *)(v4 - 256);
      *(_QWORD *)&v35[-16] = v24;
      *(_QWORD *)&v35[-8] = v25;
      v28 = type metadata accessor for StatePath(0, v1, v26, v27);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
      *(_QWORD *)(v4 - 72) = v25;
      MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v28, v4 - 72);
      v29 = sub_19CFDF410();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 - 152) = v29;
      *(_BYTE *)(v4 - 153) = 1;
      v30 = sub_19CFDF464();
      *(_QWORD *)(v4 - 176) = v23;
      *(_QWORD *)(v4 - 168) = v24;
      v31 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v28, v4 - 176);
      v32 = sub_19CDDD9A8();
      *(_QWORD *)(v4 - 192) = v31;
      *(_QWORD *)(v4 - 184) = v32;
      MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA0B8], v30, v4 - 192);
      v33 = *(_QWORD *)(v4 - 240);
      v34 = *(_QWORD *)(v4 - 200);
      sub_19CFE0568();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 248) + 8))(v34, v33);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v17 = sub_19CFE01D8();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
    v19[3] = type metadata accessor for TransientStateStore(0, v1, v2, v20);
    *v19 = v3;
    swift_retain();
    sub_19CFE019C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC4B0], v17);
    return swift_willThrow();
  }
}

uint64_t sub_19CDDC40C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v18[3];
  uint64_t v19;
  char v20[40];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  sub_19CCD5B84((uint64_t)a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_19CCECFE4((uint64_t)v18, &qword_1EE43E9D0);
    sub_19CFE01D8();
    swift_allocError();
    v14 = v13;
    v24 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
    v15 = a1[3];
    v16 = __swift_project_boxed_opaque_existential_1(a1, v15);
    v14[3] = v15;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v14);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_2Tm, v16, v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BF20);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_19D0522A0;
    *(_QWORD *)&v21 = a2;
    *((_QWORD *)&v21 + 1) = a3;
    v22 = a4;
    v23 = a5;
    _s10CodingKeysOMa();
  }
  sub_19CDDD920(v18, (uint64_t)&v21);
  return sub_19CDDD920(&v21, a6);
}

void sub_19CDDC608()
{
  TransientStateStore<>.init(from:)();
}

uint64_t sub_19CDDC620(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void sub_19CDDC634()
{
  TransientStateStore<>.encode(to:)();
}

id sub_19CDDC658()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  qword_1EE43E8F8 = (uint64_t)result;
  return result;
}

void *sub_19CDDC688()
{
  void *result;

  result = (void *)sub_19CE107EC(MEMORY[0x1E0DEE9D8]);
  off_1EE43E900 = result;
  return result;
}

uint64_t sub_19CDDC6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  void *v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B0);
  v8 = sub_19CFDF5FC();
  v10 = v9;
  if (qword_1EE43D620 != -1)
    swift_once();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = off_1EE43E900;
  off_1EE43E900 = (_UNKNOWN *)0x8000000000000000;
  v12 = sub_19CE8AAFC(a1, a2, a3, a4, v8, v10, isUniquelyReferenced_nonNull_native);
  off_1EE43E900 = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v12)
    v13 = v12 == a1;
  else
    v13 = 1;
  if (v13)
    return swift_bridgeObjectRelease();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CDDC85C()
{
  _BYTE *v0;

  if (*v0)
    return 1702060386;
  else
    return 0x656D614E65707974;
}

uint64_t sub_19CDDC890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CDDDC08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CDDC8B4()
{
  sub_19CDDD890();
  return sub_19CFE0A48();
}

uint64_t sub_19CDDC8DC()
{
  sub_19CDDD890();
  return sub_19CFE0A54();
}

uint64_t sub_19CDDC904@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _OWORD v34[3];
  uint64_t v35;
  char v36;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E990);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDDD890();
  sub_19CFE09E8();
  if (!v2)
  {
    v28 = v5;
    v9 = v29;
    LOBYTE(v30) = 0;
    v10 = sub_19CFE0490();
    v13 = v12;
    v25 = v10;
    v26 = v8;
    if (qword_1EE43D618 != -1)
      swift_once();
    v14 = (void *)qword_1EE43E8F8;
    objc_msgSend((id)qword_1EE43E8F8, sel_lock, v25);
    if (qword_1EE43D620 != -1)
      swift_once();
    swift_beginAccess();
    v15 = off_1EE43E900;
    v16 = *((_QWORD *)off_1EE43E900 + 2);
    v27 = 0u;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_19CD3FD1C(v25, v13);
      if ((v18 & 1) != 0)
      {
        v19 = v15[7] + 32 * v17;
        v20 = *(_QWORD *)v19;
        v21 = *(_QWORD *)(v19 + 8);
        v27 = *(_OWORD *)(v19 + 16);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    v20 = 0;
    v21 = 0;
LABEL_13:
    swift_endAccess();
    objc_msgSend(v14, sel_unlock);
    if (v20)
    {
      swift_bridgeObjectRelease();
      v36 = 1;
      v31 = v20;
      v32 = v21;
      v33 = v27;
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v30);
      sub_19CFE04D8();
      v22 = v26;
      sub_19CFE04B4();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v4);
      sub_19CDDD920(&v30, (uint64_t)v34);
      v24 = v34[1];
      *(_OWORD *)v9 = v34[0];
      *(_OWORD *)(v9 + 16) = v24;
      *(_OWORD *)(v9 + 32) = v34[2];
      *(_QWORD *)(v9 + 48) = v35;
    }
    else
    {
      *(_QWORD *)&v30 = 0;
      *((_QWORD *)&v30 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      LOBYTE(v30) = 1;
      sub_19CFE01B4();
      swift_allocError();
      sub_19CDDD8D4();
      v23 = v26;
      sub_19CFE0190();
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v4);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CDDCCD8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DynamicType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  unint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = sub_19CDDD890();
  v34 = v8;
  sub_19CFE0A24();
  sub_19CDDD940((uint64_t)v2, (uint64_t)&v39);
  __swift_project_boxed_opaque_existential_1(&v39, v41);
  DynamicType = swift_getDynamicType();
  v10 = v43;
  v35 = v42;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
  v36 = DynamicType;
  v37 = v35;
  v38 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B0);
  v11 = sub_19CFDF5FC();
  v13 = v12;
  if (qword_1EE43D618 != -1)
    swift_once();
  v14 = (void *)qword_1EE43E8F8;
  objc_msgSend((id)qword_1EE43E8F8, sel_lock);
  if (qword_1EE43D620 != -1)
    swift_once();
  swift_beginAccess();
  v15 = off_1EE43E900;
  v16 = *((_QWORD *)off_1EE43E900 + 2);
  v44 = v5;
  if (!v16)
    goto LABEL_11;
  swift_bridgeObjectRetain();
  v17 = sub_19CD3FD1C(v11, v13);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_endAccess();
    objc_msgSend(v14, sel_unlock);
    goto LABEL_12;
  }
  v19 = *(_QWORD *)(v15[7] + 32 * v17);
  swift_bridgeObjectRelease();
  swift_endAccess();
  objc_msgSend(v14, sel_unlock);
  if (!v19)
  {
LABEL_12:
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    v39 = 0xD000000000000029;
    v40 = 0x800000019D06E860;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    v23 = sub_19CFE01D8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
    v26 = v4;
    v27 = v2[3];
    v28 = __swift_project_boxed_opaque_existential_1(v2, v27);
    v25[3] = v27;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v25);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(boxed_opaque_existential_2Tm, v28, v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BF20);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_19D0522A0;
    v31 = v33;
    *(_QWORD *)(v30 + 56) = &type metadata for StatefulCodingThunk.CodingKeys;
    *(_QWORD *)(v30 + 64) = v31;
    *(_BYTE *)(v30 + 32) = 0;
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC4B0], v23);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v34, v26);
  }
  LOBYTE(v39) = 0;
  v20 = v34;
  v21 = v32[1];
  sub_19CFE0538();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    LOBYTE(v39) = 1;
    sub_19CFE0574();
    sub_19CFE0568();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v20, v4);
  }
}

uint64_t sub_19CDDD110@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CDDC904(a1, a2);
}

uint64_t sub_19CDDD124(_QWORD *a1)
{
  return sub_19CDDCCD8(a1);
}

uint64_t sub_19CDDD138()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_19CDDD140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CDDA38C(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t type metadata accessor for TransientStateStore.Change(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransientStateStore.Change);
}

uint64_t sub_19CDDD168()
{
  uint64_t v0;

  return sub_19CDDB654(*(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

void _s10CodingKeysOMa()
{
  JUMPOUT(0x1A1ADBCC8);
}

unint64_t sub_19CDDD194()
{
  unint64_t result;

  result = qword_1EE43E908[0];
  if (!qword_1EE43E908[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054588, &type metadata for StatefulCodingThunk);
    atomic_store(result, qword_1EE43E908);
  }
  return result;
}

void sub_19CDDD1D8()
{
  sub_19CDDC00C();
}

uint64_t method lookup function for TransientStateStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransientStateStore.__allocating_init(isConcurrent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t initializeWithCopy for StatefulCodingThunk(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for StatefulCodingThunk(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_3(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_3(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      result[6] = a2[6];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for StatefulCodingThunk(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for StatefulCodingThunk()
{
  return &type metadata for StatefulCodingThunk;
}

uint64_t sub_19CDDD43C(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 3)
    v2 = *(_DWORD *)result + 3;
  if (v2 == 2 || v2 == 1)
    return swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 8);
  }
  return result;
}

uint64_t sub_19CDDD4A0(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v8;

  v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2 || v3 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 48) = v3;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = a2 + 8;
    v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v5;
    v6 = v5;
    v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain();
    v7(a1 + 8, v4, v6);
    *(_BYTE *)(a1 + 48) = 0;
  }
  return a1;
}

uint64_t sub_19CDDD564(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    }
    v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2 || v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 48) = v5;
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      v11 = a2[2];
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)a1 = v9;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = (uint64_t)a2 + 8;
      v7 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
      swift_bridgeObjectRetain();
      v8(a1 + 8, v6, v7);
      *(_BYTE *)(a1 + 48) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_19CDDD69C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    switch(v5)
    {
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = 2;
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = 1;
        break;
      case 0u:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      default:
        v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v7 = *(_BYTE *)(a2 + 48);
        break;
    }
    *(_BYTE *)(a1 + 48) = v7;
  }
  return a1;
}

uint64_t sub_19CDDD790(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_19CDDD7CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CDDD81C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_19CDDD838(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

void sub_19CDDD860()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CDDD870()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CDDD880()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

unint64_t sub_19CDDD890()
{
  unint64_t result;

  result = qword_1EE43E998;
  if (!qword_1EE43E998)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0546B8, &type metadata for StatefulCodingThunk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E998);
  }
  return result;
}

unint64_t sub_19CDDD8D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43E9A0;
  if (!qword_1EE43E9A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43E990);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DED060], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43E9A0);
  }
  return result;
}

uint64_t sub_19CDDD920(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_19CDDD940(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  v4 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_19CDDD98C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_19CDDC40C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_19CDDD9A8()
{
  unint64_t result;

  result = qword_1EE43E9C0;
  if (!qword_1EE43E9C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054550, &type metadata for StatefulCodingThunk);
    atomic_store(result, (unint64_t *)&qword_1EE43E9C0);
  }
  return result;
}

unint64_t sub_19CDDD9EC()
{
  unint64_t result;

  result = qword_1ECEB1700;
  if (!qword_1ECEB1700)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECEB1700);
  }
  return result;
}

uint64_t sub_19CDDDA28()
{
  uint64_t v0;

  return sub_19CDDB370(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_19CDDDA40(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return a1;
}

uint64_t _s9JetEngine19StatefulCodingThunkV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDDDAB0 + 4 * byte_19D0542D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDDDAE4 + 4 * byte_19D0542D0[v4]))();
}

uint64_t sub_19CDDDAE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDDDAEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDDDAF4);
  return result;
}

uint64_t sub_19CDDDB00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDDDB08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDDDB0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDDDB14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatefulCodingThunk.CodingKeys()
{
  return &type metadata for StatefulCodingThunk.CodingKeys;
}

unint64_t sub_19CDDDB34()
{
  unint64_t result;

  result = qword_1EE43E9E0;
  if (!qword_1EE43E9E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054690, &type metadata for StatefulCodingThunk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E9E0);
  }
  return result;
}

unint64_t sub_19CDDDB7C()
{
  unint64_t result;

  result = qword_1EE43E9E8;
  if (!qword_1EE43E9E8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054600, &type metadata for StatefulCodingThunk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E9E8);
  }
  return result;
}

unint64_t sub_19CDDDBC4()
{
  unint64_t result;

  result = qword_1EE43E9F0;
  if (!qword_1EE43E9F0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054628, &type metadata for StatefulCodingThunk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43E9F0);
  }
  return result;
}

uint64_t sub_19CDDDC08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E65707974 && a2 == 0xE800000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702060386 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_19CDDDCEC()
{
  id v0;
  id v1;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37B8]), sel_init);
  v1 = objc_allocWithZone((Class)type metadata accessor for MetricsInspectorScanner());
  result = sub_19CDDDD3C(v0);
  qword_1EE465CE0 = (uint64_t)result;
  return result;
}

id sub_19CDDDD3C(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_serviceBrowser] = a1;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3740]);
  v5 = v1;
  v6 = a1;
  v7 = objc_msgSend(v4, sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_stateLock] = v7;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices] = MEMORY[0x1E0DEE9D8];

  v13.receiver = v5;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(v6, sel_scheduleInRunLoop_forMode_, v9, *MEMORY[0x1E0C99860]);

  v10 = (void *)sub_19CFDF554();
  v11 = (void *)sub_19CFDF554();
  objc_msgSend(v6, sel_searchForServicesOfType_inDomain_, v10, v11);

  return v8;
}

id sub_19CDDDEB4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  objc_class *ObjectType;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = *(void **)&v0[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_serviceBrowser];
  objc_msgSend(v1, sel_stop);
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_mainRunLoop);
  v5 = *MEMORY[0x1E0C99860];
  objc_msgSend(v3, sel_removeFromRunLoop_forMode_, v4, *MEMORY[0x1E0C99860]);

  v6 = &v0[OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices];
  swift_beginAccess();
  v7 = *(_QWORD *)v6;
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    v15.receiver = v0;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_dealloc);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_19CFE0394();
  v8 = (uint64_t)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1A1ADA390](v10, v7);
      else
        v11 = *(id *)(v7 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      objc_msgSend(v11, sel_stop);
      v13 = objc_msgSend(v2, sel_mainRunLoop);
      objc_msgSend(v12, sel_removeFromRunLoop_forMode_, v13, v5);

    }
    while (v8 != v10);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CDDE100()
{
  uint64_t v0;
  void *v1;
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_stateLock);
  objc_msgSend(v1, sel_lock);
  v2 = (unint64_t *)(v0 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  v3 = *v2;
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    v19 = v1;
    if (v4)
      goto LABEL_3;
LABEL_17:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v19, sel_unlock);
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain_n();
  result = sub_19CFE0394();
  v4 = result;
  v19 = v1;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1A1ADA390](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_hostName, v19);
      if (v10)
      {
        v11 = v10;
        v12 = sub_19CFDF578();
        v14 = v13;

        v15 = objc_msgSend(v9, sel_port);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_19CED4E20(0, v7[2] + 1, 1, v7);
        v17 = v7[2];
        v16 = v7[3];
        if (v17 >= v16 >> 1)
          v7 = sub_19CED4E20((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
        v7[2] = v17 + 1;
        v18 = &v7[3 * v17];
        v18[4] = v12;
        v18[5] = v14;
        v18[6] = v15;
      }
      else
      {

      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CDDE394(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  id v10;
  _QWORD *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  id v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD v31[4];
  _QWORD *v32;

  v4 = objc_msgSend(a1, sel_name);
  v5 = sub_19CFDF578();
  v7 = v6;

  if (v5 == 0xD00000000000001FLL && v7 == 0x800000019D06EAD0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return result;
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(a1, sel_scheduleInRunLoop_forMode_, v10, *MEMORY[0x1E0C99860]);

  objc_msgSend(a1, sel_resolveWithTimeout_, 30.0);
  v11 = (_QWORD *)(a2 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  v12 = a1;
  MEMORY[0x1A1AD9A6C]();
  if (*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_19CFDF8A8();
  sub_19CFDF8E4();
  sub_19CFDF878();
  swift_endAccess();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v13 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  v32 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v16._countAndFlagsBits = 0xD000000000000018;
  v16._object = (void *)0x800000019D06EAF0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  v31[3] = sub_19CCE5204(0, (unint64_t *)&qword_1EE43EAE0);
  v31[0] = v12;
  sub_19CD40794((uint64_t)v31, (uint64_t)v27);
  v25 = 0u;
  v26 = 0u;
  v17 = v12;
  sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
  v30 = 2;
  v28 = v25;
  v29 = v26;
  v18 = v32;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
  v18[2] = v20 + 1;
  v21 = &v18[5 * v20];
  v22 = v28;
  v23 = v29;
  *((_BYTE *)v21 + 64) = v30;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v23;
  v32 = v18;
  sub_19CD3F190((uint64_t)v31);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  *(_QWORD *)(v14 + 32) = v32;
  *(_QWORD *)&v28 = v15;
  LOBYTE(v25) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDDE78C(uint64_t a1, void *a2)
{
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  Swift::String v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[32];
  __int128 v27;
  __int128 v28;
  char v29;
  _QWORD v30[4];
  _QWORD *v31;

  v3 = (unint64_t *)(a1 + OBJC_IVAR____TtC9JetEngine23MetricsInspectorScanner_foundServices);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  sub_19CDF29EC((uint64_t)a2, v4);
  v6 = v5;
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    objc_msgSend(a2, sel_stop);
    v10 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    objc_msgSend(a2, sel_removeFromRunLoop_forMode_, v10, *MEMORY[0x1E0C99860]);

    swift_beginAccess();
    v11 = (void *)sub_19CF7EFB0(v6);
    swift_endAccess();

    if (qword_1ECEB31D8 != -1)
      swift_once();
    v12 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v14 = v12;
    v31 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
    v15._object = (void *)0x800000019D06EAB0;
    v15._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v30[3] = sub_19CCE5204(0, (unint64_t *)&qword_1EE43EAE0);
    v30[0] = a2;
    sub_19CD40794((uint64_t)v30, (uint64_t)v26);
    v24 = 0u;
    v25 = 0u;
    v16 = a2;
    sub_19CD40658((uint64_t)v26, (uint64_t)&v24);
    v29 = 2;
    v27 = v24;
    v28 = v25;
    v17 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_19CD40918(0, v17[2] + 1, 1, v17);
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v17 = sub_19CD40918((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v17[2] = v19 + 1;
    v20 = &v17[5 * v19];
    v21 = v27;
    v22 = v28;
    *((_BYTE *)v20 + 64) = v29;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    v31 = v17;
    sub_19CD3F190((uint64_t)v30);
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(_QWORD *)(v13 + 32) = v31;
    *(_QWORD *)&v27 = v14;
    LOBYTE(v24) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v24);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MetricsInspectorScanner()
{
  return objc_opt_self();
}

uint64_t sub_19CDDEE4C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  Swift::String v12;
  __int128 v14;
  __int128 v15;
  _BYTE v16[32];
  __int128 v17;
  __int128 v18;
  char v19;
  _QWORD v20[4];
  _QWORD *v21;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v21 = sub_19CD40918(0, 50, 0, MEMORY[0x1E0DEE9D8]);
  v5._object = (void *)0x800000019D06EB10;
  v5._countAndFlagsBits = 0xD000000000000031;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43EAF0);
  v20[0] = a1;
  sub_19CD40794((uint64_t)v20, (uint64_t)v16);
  v14 = 0u;
  v15 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v16, (uint64_t)&v14);
  v19 = 0;
  v17 = v14;
  v18 = v15;
  v6 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_19CD40918(0, v6[2] + 1, 1, v6);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_19CD40918((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[5 * v8];
  v10 = v17;
  v11 = v18;
  *((_BYTE *)v9 + 64) = v19;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  v21 = v6;
  sub_19CD3F190((uint64_t)v20);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  *(_QWORD *)(v3 + 32) = v21;
  *(_QWORD *)&v17 = v4;
  LOBYTE(v14) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDDF028(void *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  id v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];
  __int128 v18;
  __int128 v19;
  char v20;
  _QWORD v21[4];
  _QWORD *v22;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v22 = sub_19CD40918(0, 36, 0, MEMORY[0x1E0DEE9D8]);
  v5._object = (void *)0x800000019D06EA80;
  v5._countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  v21[3] = sub_19CCE5204(0, (unint64_t *)&qword_1EE43EAE0);
  v21[0] = a1;
  sub_19CD40794((uint64_t)v21, (uint64_t)v17);
  v15 = 0u;
  v16 = 0u;
  v6 = a1;
  sub_19CD40658((uint64_t)v17, (uint64_t)&v15);
  v20 = 2;
  v18 = v15;
  v19 = v16;
  v7 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_19CD40918(0, v7[2] + 1, 1, v7);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_19CD40918((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  v10 = &v7[5 * v9];
  v11 = v18;
  v12 = v19;
  *((_BYTE *)v10 + 64) = v20;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  v22 = v7;
  sub_19CD3F190((uint64_t)v21);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(_QWORD *)(v3 + 32) = v22;
  *(_QWORD *)&v18 = v4;
  LOBYTE(v15) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDDF214(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  id v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  Swift::String v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  Swift::String v23;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD v31[3];
  uint64_t v32;
  _QWORD *v33;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v4 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D052350;
  v6 = v4;
  v33 = sub_19CD40918(0, 46, 0, MEMORY[0x1E0DEE9D8]);
  v7._object = (void *)0x800000019D06EA50;
  v7._countAndFlagsBits = 0xD00000000000002CLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  v32 = sub_19CCE5204(0, (unint64_t *)&qword_1EE43EAE0);
  v31[0] = a1;
  sub_19CD40794((uint64_t)v31, (uint64_t)v27);
  v25 = 0u;
  v26 = 0u;
  v8 = a1;
  sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
  v30 = 2;
  v28 = v25;
  v29 = v26;
  v9 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v9[2] + 1, 1, v9);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[5 * v11];
  v13 = v28;
  v14 = v29;
  *((_BYTE *)v12 + 64) = v30;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  v33 = v9;
  sub_19CD3F190((uint64_t)v31);
  v15._countAndFlagsBits = 44;
  v15._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(_QWORD *)(v5 + 32) = v33;
  v33 = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
  v16._countAndFlagsBits = 0x203A6E6F73616572;
  v16._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43EAF0);
  v31[0] = a2;
  sub_19CD40794((uint64_t)v31, (uint64_t)v27);
  v25 = 0u;
  v26 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
  v30 = 0;
  v28 = v25;
  v29 = v26;
  v17 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_19CD40918(0, v17[2] + 1, 1, v17);
  v19 = v17[2];
  v18 = v17[3];
  if (v19 >= v18 >> 1)
    v17 = sub_19CD40918((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
  v17[2] = v19 + 1;
  v20 = &v17[5 * v19];
  v21 = v28;
  v22 = v29;
  *((_BYTE *)v20 + 64) = v30;
  *((_OWORD *)v20 + 2) = v21;
  *((_OWORD *)v20 + 3) = v22;
  v33 = v17;
  sub_19CD3F190((uint64_t)v31);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  *(_QWORD *)(v5 + 40) = v33;
  *(_QWORD *)&v28 = v6;
  LOBYTE(v25) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v25);

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EmptyLocalizedStrings()
{
  return &type metadata for EmptyLocalizedStrings;
}

uint64_t sub_19CDDF52C()
{
  return 0;
}

uint64_t sub_19CDDF538()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19CDDF544()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_19CDDF574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_19CDDF5D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CDDF65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for MapPreferenceMigrationRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapPreferenceMigrationRule);
}

_QWORD *sub_19CDDF6C4@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = result[1];
  v6 = *a2;
  v7 = a2[1];
  *a5 = *result;
  a5[1] = v5;
  a5[2] = v6;
  a5[3] = v7;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t sub_19CDDF6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t ObjectType;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _UNKNOWN **v62;
  uint64_t v63;

  v48 = a4;
  v49 = a3;
  v9 = *(_QWORD *)(a5 + 24);
  v10 = sub_19CFDFF5C();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v45 = (char *)&v41 - v12;
  v53 = v9;
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v57 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a5 + 16);
  v56 = sub_19CFDFF5C();
  v17 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56, v18);
  v20 = (char *)&v41 - v19;
  v21 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v58 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v5;
  v26 = v5[1];
  v41 = v5[2];
  v42 = v5[3];
  v27 = (void (*)(char *))v5[4];
  v54 = v5[5];
  v55 = v27;
  ObjectType = swift_getObjectType();
  v43 = v25;
  v59 = v25;
  v60 = v26;
  v29 = v21;
  swift_bridgeObjectRetain();
  v44 = ObjectType;
  v51 = a1;
  v52 = a2;
  Preferences.subscript.getter(&v59, ObjectType, v16, a2, (uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v16) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v56);
  v31 = v58;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v58, v20, v16);
  v32 = v57;
  v33 = v63;
  v55(v31);
  if (v33)
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v31, v16);
  v63 = swift_getObjectType();
  v34 = v50;
  v35 = (uint64_t)v45;
  v36 = v53;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v45, v32, v53);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v36);
  v59 = v41;
  v60 = v42;
  swift_bridgeObjectRetain();
  sub_19CEC2C48(v35, &v59, v63, v36, v48);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v35, v47);
  v61 = type metadata accessor for PreferenceKey(0, v16, v37, v38);
  v62 = &protocol witness table for PreferenceKey<A>;
  v59 = v43;
  v60 = v26;
  v39 = v52;
  v40 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v52 + 32);
  swift_bridgeObjectRetain();
  v40(&v59, v44, v39);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v36);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v58, v16);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
}

uint64_t sub_19CDDFA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CDDF6DC(a1, a2, a3, a4, a5);
}

void AnyIntentModel.init(deserializing:using:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(__int128 *, uint64_t *, uint64_t, uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t ExtendedExistentialTypeMetadata;
  uint64_t v44;
  __int128 *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(__int128 *, _QWORD *, uint64_t, uint64_t);
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  __int128 v88;
  ValueMetadata *v89;
  unint64_t v90;
  uint64_t v91[3];
  __int128 v92;
  uint64_t v93;
  __int128 v94[2];
  id v95[3];
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  _QWORD v101[2];
  uint64_t v102;

  v84 = a4;
  v7 = sub_19CFE01B4();
  *(_QWORD *)&v83 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v82 - v13;
  v15 = *a2;
  v102 = a1;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v95);
  sub_19CDE0324((uint64_t)v95, (uint64_t)v91);
  v16 = v92;
  if ((_QWORD)v92)
  {
    v17 = *((_QWORD *)&v92 + 1);
    __swift_project_boxed_opaque_existential_1(v91, v92);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v91);
    sub_19CD3E3F8((uint64_t)v95);
    if (v20)
      goto LABEL_6;
  }
  else
  {
    sub_19CDE036C((uint64_t)v91);
    sub_19CD3E3F8((uint64_t)v95);
  }
  v18 = static StaticIntent.kind.getter();
  v20 = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  if (v18 == static StaticIntent.kind.getter() && v20 == v22)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    v26 = sub_19CDE07EC((uint64_t)a3, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for StaticIntent);
    if (!v26)
    {
      swift_bridgeObjectRelease();
      v38 = type metadata accessor for StaticIntent(0, (uint64_t)a3, v36, v37);
LABEL_20:
      v39 = v38;
LABEL_21:
      sub_19CDC5494();
      swift_allocError();
      v40 = MEMORY[0x1E0DEE9D8];
      *v41 = v39;
      v41[1] = v40;
      v41[2] = 0;
      v41[3] = 0;
LABEL_22:
      swift_willThrow();
      v42 = v102;
LABEL_31:
      sub_19CD3E3F8(v42);
      return;
    }
    goto LABEL_16;
  }
  v24 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_15;
  if (v18 == static SidepackedIntent.kind.getter() && v20 == v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v46 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    v26 = sub_19CDE07EC((uint64_t)a3, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for SidepackedIntent);
    if (!v26)
    {
      swift_bridgeObjectRelease();
      v38 = type metadata accessor for SidepackedIntent(0, (uint64_t)a3, v47, v48);
      goto LABEL_20;
    }
LABEL_16:
    v29 = v26;
    v30 = v27;
    v31 = v28;
    v32 = v102;
    sub_19CD3E448(v102, (uint64_t)v94);
    v87 = v15;
    v33 = *(void (**)(__int128 *, uint64_t *, uint64_t, uint64_t))(v30 + 8);
    v96 = v29;
    *(_QWORD *)&v97 = v30;
    *((_QWORD *)&v97 + 1) = v31;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v95);
    v34 = v85;
    v33(v94, &v87, v29, v30);
    if (v34)
    {
      v35 = v32;
LABEL_18:
      sub_19CD3E3F8(v35);
      __swift_deallocate_boxed_opaque_existential_2((uint64_t)v95);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE43EB90);
    v87 = (uint64_t)a3;
    ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_19CDC5494();
      swift_allocError();
      v49 = MEMORY[0x1E0DEE9D8];
      *v50 = ExtendedExistentialTypeMetadata;
      v50[1] = v49;
      v50[2] = 0;
      v50[3] = 0;
      swift_willThrow();
      v42 = v32;
      goto LABEL_31;
    }
    v44 = v32;
LABEL_25:
    sub_19CD3E3F8(v44);
    sub_19CCD14C4(v94, (uint64_t)v91);
    v45 = (__int128 *)v91;
LABEL_26:
    sub_19CCD14C4(v45, v84);
    return;
  }
  swift_bridgeObjectRetain();
  sub_19CF8EC64(0xD00000000000001FLL, 0x800000019D06EBD0, v15, (uint64_t)v95);
  swift_bridgeObjectRelease();
  if (!v95[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v59 = 0xD00000000000001FLL;
    v59[1] = 0x800000019D06EBD0;
    v59[2] = 0x20000001E3DC94D8uLL;
    v59[3] = 0;
    goto LABEL_22;
  }
  v51 = sub_19CEEFE50(v18, v20);
  v53 = v52;
  v39 = v51;
  swift_bridgeObjectRelease();
  if (!v39)
  {
    swift_bridgeObjectRelease();
    v62 = type metadata accessor for AnyIntentModel(0, (uint64_t)a3, v60, v61) | 0x6000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *v63 = v18;
    v63[1] = v20;
    v63[2] = v62;
    v63[3] = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v99 = v39;
  *((_QWORD *)&v99 + 1) = v53;
  v95[0] = a3;
  swift_getExtendedExistentialTypeMetadata();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EB78);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v54 = v87;
    v83 = v88;
    v55 = v102;
    sub_19CD3E448(v102, (uint64_t)v94);
    v101[0] = v15;
    v56 = v83;
    v57 = *(void (**)(__int128 *, _QWORD *, uint64_t, uint64_t))(v83 + 8);
    v96 = v54;
    v97 = v83;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v95);
    v58 = v85;
    v57(v94, v101, v54, v56);
    if (v58)
    {
      v35 = v55;
      goto LABEL_18;
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE43EB90);
    v101[0] = a3;
    v71 = swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_19CDC5494();
      swift_allocError();
      v74 = MEMORY[0x1E0DEE9D8];
      *v75 = v71;
      v75[1] = v74;
      v75[2] = 0;
      v75[3] = 0;
      swift_willThrow();
      v42 = v55;
      goto LABEL_31;
    }
    v44 = v55;
    goto LABEL_25;
  }
  v101[0] = v39;
  v101[1] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EB80);
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v64 = v100;
  v82 = v99;
  sub_19CD3E448(v102, (uint64_t)v95);
  v91[0] = v15;
  v65 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v91);
  v66 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v97 + 1) = v65;
  v98 = MEMORY[0x1E0DEE9D8];
  v89 = &type metadata for _JSONObjectDecoder;
  v90 = sub_19CD21828();
  v87 = swift_allocObject();
  sub_19CD21778((uint64_t)v95, v87 + 16);
  v92 = v82;
  v93 = v64;
  __swift_allocate_boxed_opaque_existential_2Tm(v91);
  v67 = v82;
  v68 = v85;
  sub_19CFDFB90();
  v69 = v68;
  if (v68)
  {
    sub_19CD21708((uint64_t)v95);
    __swift_deallocate_boxed_opaque_existential_2((uint64_t)v91);
    v70 = v102;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EB88);
    v86 = a3;
    v72 = swift_getExtendedExistentialTypeMetadata();
    v73 = swift_dynamicCast();
    v70 = v102;
    if ((v73 & 1) != 0)
    {
      sub_19CD3E3F8(v102);
      sub_19CD21708((uint64_t)v95);
      sub_19CCD14C4((__int128 *)&v87, (uint64_t)v94);
      v45 = v94;
      goto LABEL_26;
    }
    sub_19CDC5494();
    v69 = (void *)swift_allocError();
    *v76 = v72;
    v76[1] = v66;
    v76[2] = 0;
    v76[3] = 0;
    swift_willThrow();
    sub_19CD21708((uint64_t)v95);
  }
  v95[0] = v69;
  v77 = v69;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if (swift_dynamicCast())
  {

    v78 = v83;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v10, v14, v7);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
    v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v79 + 32) = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v80, v10, v7);
    sub_19CDC5494();
    swift_allocError();
    *v81 = v67;
    v81[1] = v79;
    v81[2] = 0;
    v81[3] = 0;
    swift_willThrow();
    sub_19CD3E3F8(v70);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v7);
  }
  else
  {
    sub_19CD3E3F8(v70);
  }

}

uint64_t sub_19CDE0324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDE036C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1328);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AnyIntentModel._canonicalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[40];

  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for SidepackedIntent(0, v6, a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v16[-v10 - 8];
  sub_19CCD5B84((uint64_t)v4, (uint64_t)v16);
  v15 = v6;
  swift_getExtendedExistentialTypeMetadata();
  if (!swift_dynamicCast())
    return sub_19CCD5B84((uint64_t)v4, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v12 = v4[3];
  v13 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
}

uint64_t AnyIntentModel.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v9 = type metadata accessor for SidepackedIntent(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a3 - 8);
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v17);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v23 = a3;
    v24 = a4;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v22);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(boxed_opaque_existential_2Tm, a1, a3);
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 40))(&v22, a3, a4);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a3);
  }
  return sub_19CCD14C4(&v22, a5);
}

uint64_t AnyIntentModel.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  v9 = MEMORY[0x1E0C80A78](v8, v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v11, v9);
  AnyIntentModel.init<A>(_:)((uint64_t)v11, a2, v6, v7, a3);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t AnyIntentModel.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

uint64_t AnyIntentModel.kind.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t AnyIntentModel._canonicalIntentModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v6;

  v6 = *(_OWORD *)(v1 + 24);
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)v1, v6);
  *(_OWORD *)(a1 + 24) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a1);
  return (*(uint64_t (**)(uint64_t *, _QWORD *, _QWORD))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v3, v6);
}

uint64_t AnyIntentModel.debugDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v5;
  uint64_t v6[3];
  __int128 v7;
  uint64_t v8;
  unint64_t v9;

  v8 = 0;
  v9 = 0xE000000000000000;
  v5 = *(_OWORD *)(v0 + 3);
  v1 = v0[3];
  v2 = __swift_project_boxed_opaque_existential_1(v0, v1);
  v7 = v5;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v6);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(boxed_opaque_existential_2Tm, v2, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A960);
  sub_19CFE02E0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v8;
}

uint64_t sub_19CDE07EC(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;

  v2 = a2(0, a1);
  return dynamic_cast_existential_2_conditional(v2);
}

uint64_t type metadata accessor for AnyIntentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyIntentModel);
}

void sub_19CDE083C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  AnyIntentModel.init(deserializing:using:)(a1, a2, *(void **)(a3 + 16), a4);
}

uint64_t sub_19CDE0854()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *_s19DeepLinkDestinationVwca(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t _s19DeepLinkDestinationVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t _s19DeepLinkDestinationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CDE0934()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CDE09AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_19CDE0A6C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_19CDE0AB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_19CDE0B20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_19CDE0B98(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_19CDE0BE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_19CDE0C50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDE0D24 + 4 * byte_19D054890[(v9 - 1)]))();
}

void sub_19CDE0D94(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for SetPreferenceMigrationRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SetPreferenceMigrationRule);
}

uint64_t sub_19CDE0F98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  char *v8;

  v7 = a1[1];
  *a5 = *a1;
  a5[1] = v7;
  v8 = (char *)a5 + *(int *)(type metadata accessor for SetPreferenceMigrationRule(0, a3, a3, a4) + 28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a2, a3);
}

uint64_t sub_19CDE0FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CDE1010(a3, a4, a5);
}

uint64_t sub_19CDE1010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18[2];

  v17 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_19CFDFF5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&ObjectType - v9;
  ObjectType = swift_getObjectType();
  v12 = *v3;
  v11 = v3[1];
  v13 = (char *)v3 + *(int *)(a3 + 28);
  v14 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v13, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v5);
  v18[0] = v12;
  v18[1] = v11;
  swift_bridgeObjectRetain();
  sub_19CEC2C48((uint64_t)v10, v18, ObjectType, v5, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_19CDE1118(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  int v4;
  char v5;
  __int128 v7;
  _BYTE v8[8];
  _QWORD v9[16];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v9[15] = MEMORY[0x1E0DEE9D8];
    sub_19CD1EC40(0, v1, 0);
    v3 = sub_19CD1EE04(a1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if ((*(_QWORD *)(a1 + 64 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v4)
      {
        v5 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v3);
        sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)v9);
        v8[0] = v5;
        sub_19CD436B0((uint64_t)v9, (uint64_t)&v7 + 8);
        sub_19CCECFE4((uint64_t)v8, &qword_1EE43EC40);
        __asm { BR              X11 }
      }
LABEL_10:
      __break(1u);
      JUMPOUT(0x19CDE14CCLL);
    }
    __break(1u);
    goto LABEL_10;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19CDE14F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  char v25;
  id v26;
  unint64_t v27;
  char v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  unint64_t v34;
  char v35;
  uint64_t v36;
  id v38;
  int v39;
  unint64_t v40;
  char v41;
  char v42;
  int *v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  int v47;
  id v48;
  id v49;
  id v50;
  id v51[2];
  _BYTE v52[40];
  __int128 v53;
  __int128 v54;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)&v44 - v10;
  v12 = sub_19CFDEF84();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)&v44 - v19;
  strcpy((char *)v51, "idString");
  BYTE1(v51[1]) = 0;
  WORD1(v51[1]) = 0;
  HIDWORD(v51[1]) = -402653184;
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v21 = sub_19CD20240((uint64_t)v52), (v22 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  sub_19CD20334((uint64_t)v52);
  if (!*((_QWORD *)&v54 + 1))
    goto LABEL_18;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  v23 = v51[1];
  v50 = v51[0];
  v51[0] = (id)0x657079546469;
  v51[1] = (id)0xE600000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v24 = sub_19CD20240((uint64_t)v52), (v25 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  sub_19CD20334((uint64_t)v52);
  if (!*((_QWORD *)&v54 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
LABEL_32:
    v36 = type metadata accessor for MTMetricsIdentifier();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a2, 1, 1, v36);
  }
  sub_19CD16BB8();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v49 = v51[0];
  v26 = objc_msgSend(v51[0], sel_integerValue);
  if (v26 == (id)1)
  {
    v47 = 1;
    goto LABEL_21;
  }
  if (v26 != (id)2)
  {
    swift_bridgeObjectRelease();

    goto LABEL_31;
  }
  v47 = 0;
LABEL_21:
  strcpy((char *)v51, "effectiveDate");
  HIWORD(v51[1]) = -4864;
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v27 = sub_19CD20240((uint64_t)v52), (v28 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v27, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  sub_19CD20334((uint64_t)v52);
  v48 = v23;
  if (!*((_QWORD *)&v54 + 1))
  {
    sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_35;
  }
  v29 = swift_dynamicCast();
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v30(v11, v29 ^ 1u, 1, v12);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v31(v11, 1, v12) == 1)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1ECEB2040);
    goto LABEL_32;
  }
  v45 = v31;
  v46 = v30;
  v32 = v11;
  v33 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v33(v20, v32, v12);
  strcpy((char *)v51, "expirationDate");
  HIBYTE(v51[1]) = -18;
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16))
  {
    v34 = sub_19CD20240((uint64_t)v52);
    if ((v35 & 1) != 0)
    {
      sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v34, (uint64_t)&v53);
    }
    else
    {
      v53 = 0u;
      v54 = 0u;
    }
    v38 = v48;
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
    v38 = v48;
  }
  sub_19CD20334((uint64_t)v52);
  if (!*((_QWORD *)&v54 + 1))
  {
    sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
    v46(v8, 1, 1, v12);
    goto LABEL_45;
  }
  v39 = swift_dynamicCast();
  v46(v8, v39 ^ 1u, 1, v12);
  if (v45(v8, 1, v12) == 1)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    sub_19CCECFE4((uint64_t)v8, (uint64_t *)&unk_1ECEB2040);
    goto LABEL_32;
  }
  v33(v17, v8, v12);
  strcpy((char *)&v53, "isSynchronized");
  HIBYTE(v53) = -18;
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v40 = sub_19CD20240((uint64_t)v52), (v41 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v40, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }

  swift_bridgeObjectRelease();
  sub_19CD20334((uint64_t)v52);
  if (*((_QWORD *)&v54 + 1))
  {
    if (swift_dynamicCast())
      v42 = (char)v51[0];
    else
      v42 = 2;
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
    v42 = 2;
  }
  v43 = (int *)type metadata accessor for MTMetricsIdentifier();
  v33((char *)(a2 + v43[6]), v20, v12);
  v33((char *)(a2 + v43[7]), v17, v12);
  *(_BYTE *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v50;
  *(_QWORD *)(a2 + 16) = v38;
  *(_BYTE *)(a2 + v43[8]) = v42;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v43 - 1) + 56))(a2, 0, 1, v43);
}

uint64_t sub_19CDE1BA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CDE1BD4 + 4 * byte_19D054900[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_19CDE1BD4()
{
  return 0x656D695474696177;
}

uint64_t sub_19CDE1BEC()
{
  return 0x6C6F506568636163;
}

uint64_t sub_19CDE1C0C()
{
  return 0x7465736572;
}

uint64_t sub_19CDE1C20()
{
  return 0x676E697473697865;
}

uint64_t sub_19CDE1C40()
{
  return 0x74696157636E7973;
}

unint64_t sub_19CDE1C60()
{
  return 0xD000000000000012;
}

void sub_19CDE1C80(char *a1)
{
  sub_19CE80BBC(*a1);
}

void sub_19CDE1C8C()
{
  char *v0;

  sub_19CD1F530(0, *v0);
}

void sub_19CDE1C98(uint64_t a1)
{
  char *v1;

  sub_19CE114B8(a1, *v1);
}

void sub_19CDE1CA0(uint64_t a1)
{
  char *v1;

  sub_19CD1F530(a1, *v1);
}

uint64_t sub_19CDE1CA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDE35C0();
  *a1 = result;
  return result;
}

uint64_t sub_19CDE1CD4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19CDE1BA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_QWORD *sub_19CDE1CFC(uint64_t *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v3 = *a1;
  v2[2] = objc_msgSend(objc_allocWithZone((Class)JESoftLinkedMTStandardIDService), sel_initWithAMSBag_, v3);
  v2[3] = v3;
  v2[4] = 0;
  return v2;
}

uint64_t sub_19CDE1D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v9;
  unsigned __int8 v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D054B60;
  v10 = 0;
  *(_QWORD *)(v6 + 32) = sub_19CDE2020(a1, a2, &v10, a3);
  v9 = 1;
  *(_QWORD *)(v6 + 40) = sub_19CDE2020(a1, a2, &v9, a3);
  sub_19CFDF878();
  v7 = sub_19CF2D5A8(v6, sub_19CDE1E2C, 0);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_19CDE1E2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC18);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v25 = v2;
    v26 = a2;
    v28 = MEMORY[0x1E0DEE9D8];
    v27 = v9;
    sub_19CE4A304(0, v12, 0);
    v14 = v27;
    v13 = v28;
    v15 = *(_QWORD *)(type metadata accessor for MTMetricsIdentifier() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(_QWORD *)(v15 + 72);
    do
    {
      v18 = &v11[*(int *)(v14 + 48)];
      sub_19CDE26B4(v16, (uint64_t)v18);
      *v11 = *v18;
      v28 = v13;
      v20 = *(_QWORD *)(v13 + 16);
      v19 = *(_QWORD *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_19CE4A304(v19 > 1, v20 + 1, 1);
        v14 = v27;
        v13 = v28;
      }
      *(_QWORD *)(v13 + 16) = v20 + 1;
      sub_19CCC290C((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v20, &qword_1EE43EC18);
      v16 += v17;
      --v12;
    }
    while (v12);
    v3 = v25;
    a2 = v26;
  }
  if (*(_QWORD *)(v13 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC20);
    v21 = sub_19CFE03B8();
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9E0];
  }
  v28 = v21;
  v22 = swift_bridgeObjectRetain();
  sub_19CDE26F8(v22, 1, &v28);
  if (v3)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *a2 = v28;
  }
  return result;
}

_QWORD *sub_19CDE2020(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BYTE v21[16];
  _QWORD aBlock[6];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E3B0);
  MEMORY[0x1E0C80A78](v7, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a3;
  *v9 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC48);
  v11 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  v11[2] = v12;
  sub_19CCC290C((uint64_t)v9, (uint64_t)v11 + *(_QWORD *)(*v11 + 96), (uint64_t *)&unk_1EE43E3B0);
  v13 = *(void **)(v4 + 16);
  v14 = (void *)sub_19CFDF554();
  if (a4)
  {
    if (*(_QWORD *)(sub_19CDE1118(a4) + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB05B0);
      v15 = sub_19CFE03B8();
    }
    else
    {
      v15 = MEMORY[0x1E0DEE9E0];
    }
    aBlock[0] = v15;
    v17 = swift_bridgeObjectRetain();
    sub_19CD1E860(v17, 1, aBlock);
    swift_bridgeObjectRelease();
    v16 = (void *)sub_19CFDF3B0();
    swift_release();
  }
  else
  {
    v16 = 0;
  }
  if (v10)
    v18 = 1;
  else
    v18 = 2;
  aBlock[4] = sub_19CDE2C1C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CDE23E8;
  aBlock[3] = &block_descriptor_6_0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_queryIDForTopic_type_options_completion_, v14, v18, v16, v19);
  _Block_release(v19);

  return v11;
}

void sub_19CDE228C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC50);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MTMetricsIdentifier();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = swift_bridgeObjectRetain();
    sub_19CDE14F4(v13, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_19CDE2B4C((uint64_t)v7, (uint64_t)v12);
      sub_19CFBA990((uint64_t)v12);
      sub_19CDE2B90((uint64_t)v12);
      return;
    }
    sub_19CCECFE4((uint64_t)v7, &qword_1EE43EC50);
  }
  if (a2)
  {
    v14 = a2;
  }
  else
  {
    sub_19CDE2BD4();
    v14 = (void *)swift_allocError();
    *v15 = 1;
  }
  v16 = a2;
  sub_19CEBA814(v14);

}

uint64_t sub_19CDE23E8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_19CFDF3C8();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDE247C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD v10[6];

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE436BA8);
  v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 0;
  v4 = *(void **)(v0 + 16);
  v5 = (void *)sub_19CFDF554();
  sub_19CD20744(v3);
  v6 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_secretValueForNamespace_options_, v5, v6);

  v10[4] = sub_19CDE2BCC;
  v10[5] = v1;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_19CCCBFA0;
  v10[3] = &block_descriptor_4;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_addFinishBlock_, v8);
  _Block_release(v8);

  return v1;
}

void sub_19CDE25F4(void *a1, id a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  _BYTE *v8;
  id v9;
  id v10;

  if (a1)
  {
    v3 = sub_19CFDF578();
    v5 = v4;
    v10 = a1;
    sub_19CFBAD68(v3, v5);
    swift_bridgeObjectRelease();

  }
  else
  {
    if (a2)
    {
      v7 = a2;
    }
    else
    {
      sub_19CDE2BD4();
      v7 = (id)swift_allocError();
      *v8 = 1;
    }
    v9 = a2;
    sub_19CEBA838(v7);

  }
}

uint64_t sub_19CDE26B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_19CDE26F8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  void *v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  char v63;

  v7 = type metadata accessor for MTMetricsIdentifier();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC18);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v55 = v3;
  v56 = v8;
  v19 = a2;
  v20 = (uint64_t)&v17[*(int *)(v14 + 48)];
  v54 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = a1 + v54;
  v59 = *(_QWORD *)(v15 + 72);
  v57 = a1;
  swift_bridgeObjectRetain();
  sub_19CCF8C5C(v21, (uint64_t)v17, &qword_1EE43EC18);
  v63 = *v17;
  v22 = v63;
  v58 = v20;
  sub_19CDE2B4C(v20, (uint64_t)v11);
  v23 = (_QWORD *)*a3;
  v25 = sub_19CE1213C(v22);
  v26 = v23[2];
  v27 = (v24 & 1) == 0;
  v28 = v26 + v27;
  if (__OFADD__(v26, v27))
    goto LABEL_23;
  v29 = v24;
  if (v23[3] >= v28)
  {
    if ((v19 & 1) != 0)
    {
      if ((v24 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_19CE194E0();
      if ((v29 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v34 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v25 >> 6) + 64) |= 1 << v25;
    *(_BYTE *)(v34[6] + v25) = v22;
    v35 = *(_QWORD *)(v56 + 72);
    sub_19CDE2B4C((uint64_t)v11, v34[7] + v35 * v25);
    v36 = v34[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v34[2] = v38;
    v39 = v18 - 1;
    if (!v39)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v40 = v57 + v59 + v54;
    while (1)
    {
      sub_19CCF8C5C(v40, (uint64_t)v17, &qword_1EE43EC18);
      v63 = *v17;
      v41 = v63;
      sub_19CDE2B4C(v58, (uint64_t)v11);
      v42 = (_QWORD *)*a3;
      v43 = sub_19CE1213C(v41);
      v45 = v42[2];
      v46 = (v44 & 1) == 0;
      v37 = __OFADD__(v45, v46);
      v47 = v45 + v46;
      if (v37)
        break;
      v48 = v44;
      if (v42[3] < v47)
      {
        sub_19CE140B0(v47, 1);
        v43 = sub_19CE1213C(v41);
        if ((v48 & 1) != (v49 & 1))
          goto LABEL_25;
      }
      if ((v48 & 1) != 0)
        goto LABEL_10;
      v50 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      *(_BYTE *)(v50[6] + v43) = v41;
      sub_19CDE2B4C((uint64_t)v11, v50[7] + v35 * v43);
      v51 = v50[2];
      v37 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (v37)
        goto LABEL_24;
      v50[2] = v52;
      v40 += v59;
      if (!--v39)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_19CE140B0(v28, v19 & 1);
  v30 = sub_19CE1213C(v22);
  if ((v29 & 1) == (v31 & 1))
  {
    v25 = v30;
    if ((v29 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v32 = (void *)swift_allocError();
    swift_willThrow();
    v62 = v32;
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_19CDE2B90((uint64_t)v11);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_19CFE082C();
  __break(1u);
LABEL_26:
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CDE2B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDE2B90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MTMetricsIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_19CDE2BCC(void *a1, id a2)
{
  sub_19CDE25F4(a1, a2);
}

unint64_t sub_19CDE2BD4()
{
  unint64_t result;

  result = qword_1EE43EC28;
  if (!qword_1EE43EC28)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054B20, &type metadata for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError);
    atomic_store(result, (unint64_t *)&qword_1EE43EC28);
  }
  return result;
}

void sub_19CDE2C1C(uint64_t a1, void *a2)
{
  sub_19CDE228C(a1, a2);
}

uint64_t storeEnumTagSinglePayload for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDE2C70 + 4 * byte_19D05490C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDE2CA4 + 4 * byte_19D054907[v4]))();
}

uint64_t sub_19CDE2CA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE2CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDE2CB4);
  return result;
}

uint64_t sub_19CDE2CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDE2CC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDE2CCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE2CD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError()
{
  return &type metadata for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError;
}

uint64_t getEnumTagSinglePayload for MTStandardIDServiceWrapper.IDOption(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MTStandardIDServiceWrapper.IDOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_19CDE2DCC + 4 * byte_19D054916[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_19CDE2E00 + 4 * byte_19D054911[v4]))();
}

uint64_t sub_19CDE2E00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE2E08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDE2E10);
  return result;
}

uint64_t sub_19CDE2E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDE2E24);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_19CDE2E28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE2E30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MTStandardIDServiceWrapper.IDOption()
{
  return &type metadata for MTStandardIDServiceWrapper.IDOption;
}

char *sub_19CDE2E4C(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a1 + 2) = v7;
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_19CFDEF84();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    v4[a3[8]] = a2[a3[8]];
  }
  return v4;
}

uint64_t sub_19CDE2F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_19CFDEF84();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 28), v5);
}

uint64_t sub_19CDE2F98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_19CFDEF84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19CDE3040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_19CFDEF84();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19CDE30F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_19CFDEF84();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19CDE3198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_19CFDEF84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_19CDE3240()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDE324C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_19CDE32C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDE32D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CDE3348()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEF84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_19CDE33D4()
{
  unint64_t result;

  result = qword_1EE43EC68;
  if (!qword_1EE43EC68)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054A90, &type metadata for MTStandardIDServiceWrapper.IDOption);
    atomic_store(result, (unint64_t *)&qword_1EE43EC68);
  }
  return result;
}

unint64_t sub_19CDE341C()
{
  unint64_t result;

  result = qword_1EE43EC70;
  if (!qword_1EE43EC70)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054AF8, &type metadata for MTStandardIDServiceWrapper.MTStandardIDServiceWrapperError);
    atomic_store(result, (unint64_t *)&qword_1EE43EC70);
  }
  return result;
}

uint64_t sub_19CDE3460(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v17;

  v4 = *(_BYTE *)a1 == 0;
  if (*(_BYTE *)a1)
    v5 = 0x6469746E65696C63;
  else
    v5 = 0x646972657375;
  if (v4)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (*(_BYTE *)a2)
    v7 = 0x6469746E65696C63;
  else
    v7 = 0x646972657375;
  if (*(_BYTE *)a2)
    v8 = 0xE800000000000000;
  else
    v8 = 0xE600000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    || (v12 = sub_19CFE06A0(), result = 0, (v12 & 1) != 0))
  {
    v13 = type metadata accessor for MTMetricsIdentifier();
    if ((sub_19CFDEF54() & 1) == 0 || (sub_19CFDEF54() & 1) == 0)
      return 0;
    v14 = *(int *)(v13 + 32);
    v15 = *(unsigned __int8 *)(a1 + v14);
    v16 = *(unsigned __int8 *)(a2 + v14);
    if (v15 == 2)
    {
      if (v16 != 2)
        return 0;
    }
    else
    {
      v17 = (v15 & 1) == 0;
      if (v16 == 2 || ((v17 ^ v16) & 1) == 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_19CDE35C0()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t URLExpression.MatchResult.raw.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t URLExpression.MatchResult.scheme.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for URLExpression.MatchResult()
{
  uint64_t result;

  result = qword_1EE43EC90;
  if (!qword_1EE43EC90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t URLExpression.MatchResult.host.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLExpression.MatchResult.path.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = v1 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 28);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  v7 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t URLExpression.MatchResult.query.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for URLExpression.MatchResult() + 32));
  v4 = v3[1];
  v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void URLExpression.init(schemePattern:hostPattern:pathPattern:queryPattern:)(uint64_t a1@<X6>, uint64_t a2@<X7>, _QWORD *a3@<X8>, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v10 = sub_19CFE013C();
  v12 = sub_19CF16880(v10, v11);
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v12;
    v15 = v13;
    v27 = a1;
    swift_bridgeObjectRelease();
    v16 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v17 = sub_19CDE3E3C(v14, v15, 0);
    v18 = sub_19CFE013C();
    v20 = sub_19CF16880(v18, v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v24 = sub_19CDE3E3C(v20, v22, 0);
    PathExpression.init(pattern:)(v27, a2, a4, &v29);
    v25 = v29;
    QueryExpression.init(pattern:)(a5, a6, a7, &v29);
    v26 = v29;
    *a3 = v17;
    a3[1] = v24;
    a3[2] = v25;
    a3[3] = v26;
  }
}

uint64_t URLExpression.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *matched;
  uint64_t *v68;
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t *v72;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC78);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDEB7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)v2;
  v15 = *(void **)(v2 + 8);
  v17 = *(void **)(v2 + 16);
  v16 = *(_QWORD *)(v2 + 24);
  sub_19CFDEAEC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v78 = v16;
    v79 = v15;
    v77 = a1;
    v83 = a2;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    v21 = sub_19CFDEB58();
    if (v22)
      v23 = v21;
    else
      v23 = 0;
    if (v22)
      v24 = v22;
    else
      v24 = 0xE000000000000000;
    v25 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0)
      v25 = v23;
    v26 = 7;
    if (((v24 >> 60) & ((v23 & 0x800000000000000) == 0)) != 0)
      v26 = 11;
    v27 = v26 | (v25 << 16);
    v28 = (void *)sub_19CFDF554();
    v87 = v27;
    v84 = v23;
    v85 = v24;
    swift_bridgeObjectRetain();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC80);
    v30 = sub_19CDE3F54();
    v31 = sub_19CD41144();
    v81 = v30;
    v82 = v29;
    v80 = v31;
    v32 = sub_19CFDFF14();
    objc_msgSend(v14, sel_rangeOfFirstMatchInString_options_range_, v28, 0, v32, v33);

    sub_19CFDFCC8();
    if ((v34 & 1) == 0)
    {
      v76 = v17;
      v35 = sub_19CFDEB04();
      if (v36)
        v37 = v35;
      else
        v37 = 0;
      if (v36)
        v38 = v36;
      else
        v38 = 0xE000000000000000;
      v39 = HIBYTE(v38) & 0xF;
      if ((v38 & 0x2000000000000000) == 0)
        v39 = v37;
      v40 = 7;
      if (((v38 >> 60) & ((v37 & 0x800000000000000) == 0)) != 0)
        v40 = 11;
      v41 = v40 | (v39 << 16);
      v42 = (void *)sub_19CFDF554();
      v87 = v41;
      v84 = v37;
      v85 = v38;
      swift_bridgeObjectRetain();
      v43 = sub_19CFDFF14();
      objc_msgSend(v79, sel_rangeOfFirstMatchInString_options_range_, v42, 0, v43, v44);

      v79 = (id)v37;
      sub_19CFDFCC8();
      if ((v45 & 1) == 0)
      {
        v76 = v76;
        v46 = sub_19CFDEB1C();
        v48 = v46;
        v49 = v47;
        v50 = HIBYTE(v47) & 0xF;
        if ((v47 & 0x2000000000000000) == 0)
          v50 = v46;
        v51 = 7;
        if (((v47 >> 60) & ((v46 & 0x800000000000000) == 0)) != 0)
          v51 = 11;
        v52 = v51 | (v50 << 16);
        v53 = (void *)sub_19CFDF554();
        v75 = v53;
        v87 = v52;
        v84 = v48;
        v85 = v49;
        swift_bridgeObjectRetain();
        v54 = sub_19CFDFF14();
        v55 = v76;
        v57 = objc_msgSend(v76, sel_firstMatchInString_options_range_, v53, 0, v54, v56);

        if (v57)
        {
          v58 = v57;
          v81 = v48;
          v82 = v49;
          v87 = v78;
          swift_bridgeObjectRetain();
          v59 = sub_19CFDEB40();
          if (v60)
          {
            v61 = v60;
          }
          else
          {
            v59 = 0;
            v61 = 0xE000000000000000;
          }
          QueryExpression.match(_:)(v59, v61, &v84);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          v62 = v84;
          if (v84)
          {
            v64 = v85;
            v63 = v86;
            v65 = sub_19CFDEDE0();
            v66 = v83;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v83, v77, v65);
            matched = (int *)type metadata accessor for URLExpression.MatchResult();
            v68 = (uint64_t *)(v66 + matched[5]);
            *v68 = v23;
            v68[1] = v24;
            v69 = (_QWORD *)(v66 + matched[6]);
            *v69 = v79;
            v69[1] = v38;
            v70 = (_QWORD *)(v66 + matched[7]);
            v71 = v81;
            *v70 = v58;
            v70[1] = v71;
            v70[2] = v82;
            v72 = (unint64_t *)(v66 + matched[8]);
            *v72 = v62;
            v72[1] = v64;
            v72[2] = v63;
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)matched - 1) + 56))(v66, 0, 1, matched);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_37:
    v18 = type metadata accessor for URLExpression.MatchResult();
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
    v20 = v83;
    return v19(v20, 1, 1, v18);
  }
  sub_19CDE3F14((uint64_t)v8);
  v18 = type metadata accessor for URLExpression.MatchResult();
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20 = a2;
  return v19(v20, 1, 1, v18);
}

id sub_19CDE3E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_19CFDEC9C();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_19CDE3F14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_19CDE3F54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43EC88;
  if (!qword_1EE43EC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43EC80);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC940], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43EC88);
  }
  return result;
}

uint64_t destroy for URLExpression(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for URLExpression(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLExpression(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for URLExpression(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLExpression(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLExpression(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLExpression()
{
  return &type metadata for URLExpression;
}

uint64_t *initializeBufferWithCopyOfBuffer for URLExpression.MatchResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (char *)a2 + v16;
    v21 = *(void **)v19;
    v20 = *((_QWORD *)v19 + 1);
    *v18 = *(_QWORD *)v19;
    v18[1] = v20;
    v18[2] = *((_QWORD *)v19 + 2);
    v22 = (uint64_t *)((char *)a1 + v17);
    v23 = (uint64_t *)((char *)a2 + v17);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v22[2] = v23[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for URLExpression.MatchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = a2 + v15;
  v20 = *(void **)v18;
  v19 = *(_QWORD *)(v18 + 8);
  *v17 = *(_QWORD *)v18;
  v17[1] = v19;
  v17[2] = *(_QWORD *)(v18 + 16);
  v21 = (_QWORD *)(a1 + v16);
  v22 = (_QWORD *)(a2 + v16);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(void **)(a2 + v13);
  v17 = *(void **)v14;
  *(_QWORD *)v14 = v16;
  v18 = v16;

  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  return a1;
}

uint64_t assignWithTake for URLExpression.MatchResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  v21 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v21;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = *v24;
  swift_bridgeObjectRelease();
  v25 = v24[2];
  *(_QWORD *)(v23 + 8) = v24[1];
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLExpression.MatchResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDE46BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for URLExpression.MatchResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDE4748(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_19CDE47C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SyncEvent.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  SyncEvent.init()();
  return v0;
}

id SyncEvent.removeObserver(_:)()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)v0[2];
  objc_msgSend(v1, sel_lock);
  sub_19CDE48D4(v0);
  return objc_msgSend(v1, sel_unlock);
}

uint64_t sub_19CDE48D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v1 = *a1;
  swift_beginAccess();
  v4 = type metadata accessor for EventSubscription(255, *(_QWORD *)(v1 + 80), v2, v3);
  v5 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v5);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v4);
  result = sub_19CFDFC80();
  if (v7 != 1)
  {
    swift_beginAccess();
    sub_19CFDF914();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t SyncEvent.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SyncEvent.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for SyncEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncEvent.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for InvalidJetPackPathError()
{
  return &type metadata for InvalidJetPackPathError;
}

uint64_t MetricsContextEnableRequirements.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static MetricsContextEnableRequirements.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsContextEnableRequirements.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CDE4AE4()
{
  unint64_t result;

  result = qword_1EE439CC0;
  if (!qword_1EE439CC0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsContextEnableRequirements, &type metadata for MetricsContextEnableRequirements);
    atomic_store(result, (unint64_t *)&qword_1EE439CC0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MetricsContextEnableRequirements(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CDE4B74 + 4 * byte_19D054CA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CDE4BA8 + 4 * asc_19D054CA0[v4]))();
}

uint64_t sub_19CDE4BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE4BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDE4BB8);
  return result;
}

uint64_t sub_19CDE4BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDE4BCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CDE4BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE4BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsContextEnableRequirements()
{
  return &type metadata for MetricsContextEnableRequirements;
}

uint64_t Models.DeepLinkDestination.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[40];
  __int128 v9[2];
  uint64_t v10;

  v6 = *a2;
  JSONObject.subscript.getter(0x6575676573, 0xE500000000000000, (uint64_t)v8);
  v10 = v6;
  static AnyActionTypes.makeInstance(byDeserializing:using:)((uint64_t)v8, &v10, (uint64_t)v9);
  sub_19CD3E3F8(a1);
  sub_19CD3E3F8((uint64_t)v8);
  result = swift_bridgeObjectRelease();
  if (!v3)
    return sub_19CCD14C4(v9, a3);
  return result;
}

uint64_t Models.DeepLinkDestination.init(segue:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCD14C4(a1, a2);
}

uint64_t sub_19CDE4CA0()
{
  return 0x6575676573;
}

uint64_t sub_19CDE4CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_19CDE4D40(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19CDE4D4C()
{
  sub_19CDE4F40();
  return sub_19CFE0A48();
}

uint64_t sub_19CDE4D74()
{
  sub_19CDE4F40();
  return sub_19CFE0A54();
}

uint64_t Models.DeepLinkDestination.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN **v11;
  _UNKNOWN **v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  __int128 v15;
  __int128 v17[2];
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43ECA0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDE4F40();
  sub_19CFE09E8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v9 = sub_19CFE09DC();
    v10 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v9);
    v12 = v11;
    swift_bridgeObjectRelease();
    if (v10)
      v13 = (ValueMetadata *)v10;
    else
      v13 = &type metadata for EmptyActionKindTable;
    if (v10)
      v14 = v12;
    else
      v14 = &off_1E3DD1128;
    sub_19CDE4F84((uint64_t)v13, (uint64_t)v14, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v20);
    sub_19CCD14C4(v17, (uint64_t)v18);
    v15 = v18[1];
    *(_OWORD *)a2 = v18[0];
    *(_OWORD *)(a2 + 16) = v15;
    *(_QWORD *)(a2 + 32) = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19CDE4F40()
{
  unint64_t result;

  result = qword_1EE43ECA8;
  if (!qword_1EE43ECA8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054E98, &_s19DeepLinkDestinationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE43ECA8);
  }
  return result;
}

uint64_t sub_19CDE4F84@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  __int128 v7;

  v5 = type metadata accessor for CodeByKind(0, a1, *(_QWORD *)(a2 + 8), a1);
  sub_19CFE04D8();
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v5);
  result = sub_19CFE04B4();
  if (!v3)
    return sub_19CCD14C4(&v7, a3);
  return result;
}

uint64_t Models.DeepLinkDestination.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN **v9;
  _UNKNOWN **v10;
  uint64_t v11;
  ValueMetadata *v12;
  _UNKNOWN **v13;
  uint64_t v15[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43ECB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDE4F40();
  sub_19CFE0A24();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_19CFE09DC();
  v8 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v8)
    v12 = (ValueMetadata *)v8;
  else
    v12 = &type metadata for EmptyActionKindTable;
  if (v8)
    v13 = v10;
  else
    v13 = &off_1E3DD1128;
  sub_19CDE51B4(v15[1], (uint64_t)v12, (uint64_t)v6, v11, (uint64_t)v12, (uint64_t)&_s19DeepLinkDestinationV10CodingKeysON, (uint64_t)v13);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_19CDE51B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[40];
  _BYTE v14[40];

  sub_19CCD5B84(a1, (uint64_t)v13);
  v9 = *(_QWORD *)(a7 + 8);
  CodeByKind.init(wrappedValue:)((uint64_t)v13, (uint64_t)v14);
  sub_19CFE0574();
  v11 = type metadata accessor for CodeByKind(0, a5, v9, v10);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v11);
  sub_19CFE0568();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v14, v11);
}

uint64_t Models.DeepLinkDestination.segue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

uint64_t Models.DeepLinkDestination.segue.setter(__int128 *a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_19CCD14C4(a1, v1);
}

uint64_t (*Models.DeepLinkDestination.segue.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CDE52E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.DeepLinkDestination.init(from:)(a1, a2);
}

uint64_t sub_19CDE52F8(_QWORD *a1)
{
  return Models.DeepLinkDestination.encode(to:)(a1);
}

uint64_t sub_19CDE530C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.DeepLinkDestination.init(deserializing:using:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Models.DeepLinkDestination()
{
  return &type metadata for Models.DeepLinkDestination;
}

uint64_t _s19DeepLinkDestinationV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CDE5370 + 4 * byte_19D054D50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CDE5390 + 4 * byte_19D054D55[v4]))();
}

_BYTE *sub_19CDE5370(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CDE5390(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDE5398(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDE53A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDE53A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDE53B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s19DeepLinkDestinationV10CodingKeysOMa()
{
  return &_s19DeepLinkDestinationV10CodingKeysON;
}

unint64_t sub_19CDE53D0()
{
  unint64_t result;

  result = qword_1EE43ECB8;
  if (!qword_1EE43ECB8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054E70, &_s19DeepLinkDestinationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE43ECB8);
  }
  return result;
}

unint64_t sub_19CDE5418()
{
  unint64_t result;

  result = qword_1EE43ECC0;
  if (!qword_1EE43ECC0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054DE0, &_s19DeepLinkDestinationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE43ECC0);
  }
  return result;
}

unint64_t sub_19CDE5460()
{
  unint64_t result;

  result = qword_1EE43ECC8;
  if (!qword_1EE43ECC8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D054E08, &_s19DeepLinkDestinationV10CodingKeysON);
    atomic_store(result, &qword_1EE43ECC8);
  }
  return result;
}

unint64_t MetricsFieldsAggregator.init()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_19CD5A098(MEMORY[0x1E0DEE9D8]);
  result = sub_19CD5A0AC(v2);
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t sub_19CDE54E8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDE5528()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 208);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MetricsFieldsAggregator.addingOptInProvider(_:forRequest:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CCC5ACC(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *, _QWORD *, uint64_t, uint64_t))sub_19CD0F9A8, a3);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptInProvider(forRequest:)(JetEngine::MetricsFieldInclusionRequest forRequest)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v2 = v1;
  v3 = *(_QWORD *)forRequest.rawValue._countAndFlagsBits;
  v4 = *(_QWORD *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  v5 = sub_19CCED700(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    v9 = *v2;
    *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CD10EAC();
      v8 = v9;
    }
    swift_bridgeObjectRelease();
    sub_19CCD14C4((__int128 *)(*(_QWORD *)(v8 + 56) + 40 * v5), (uint64_t)v10);
    sub_19CDD3DDC(v5, v8);
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_19CCECFE4((uint64_t)v10, &qword_1ECEB23D8);
}

uint64_t MetricsFieldsAggregator.removingOptInProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v3 = *a1;
  v4 = a1[1];
  v5 = *v2;
  v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CDD2B7C(v3, v4, (uint64_t)v8);
  return sub_19CCECFE4((uint64_t)v8, &qword_1ECEB23D8);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptOutProvider(forRequest:)(JetEngine::MetricsFieldExclusionRequest forRequest)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v2 = v1;
  v3 = *(_QWORD *)forRequest.rawValue._countAndFlagsBits;
  v4 = *(_QWORD *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  v5 = sub_19CCED700(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_19CD10EB8();
    swift_bridgeObjectRelease();
    sub_19CCD14C4((__int128 *)(*(_QWORD *)(v8 + 56) + 40 * v5), (uint64_t)v9);
    sub_19CDD3DDC(v5, v8);
    *(_QWORD *)(v2 + 8) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB23D8);
}

uint64_t MetricsFieldsAggregator.removingOptOutProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v3 = *a1;
  v4 = a1[1];
  v5 = *v2;
  v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CDD2B68(v3, v4, (uint64_t)v8);
  return sub_19CCECFE4((uint64_t)v8, &qword_1ECEB23D8);
}

double MetricsFieldsAggregator.init(bag:accountProvider:device:bundle:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  double result;
  _QWORD v8[5];
  uint64_t v9;
  __int128 v10;

  v9 = *a1;
  v8[3] = type metadata accessor for Unstable.Accounts();
  v8[4] = &protocol witness table for Unstable.Accounts;
  v8[0] = a2;
  MetricsFieldsAggregator.init(bag:accountProvider:bundle:)(&v9, (uint64_t)v8, a3, &v10);
  result = *(double *)&v10;
  *a4 = v10;
  return result;
}

uint64_t MetricsFieldsAggregator.addOptionalProvider(_:forRequest:)(_QWORD *a1, _QWORD *a2)
{
  return sub_19CDE59FC(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t))sub_19CD0F9A8);
}

uint64_t MetricsFieldsAggregator.addingOptionalProvider(_:forRequest:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CCC5ACC(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *, _QWORD *, uint64_t, uint64_t))sub_19CD0F9A8, a3);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeOptionalProvider(forRequest:)(JetEngine::MetricsFieldInclusionRequest forRequest)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v2 = v1;
  v3 = *(_QWORD *)forRequest.rawValue._countAndFlagsBits;
  v4 = *(_QWORD *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  v5 = sub_19CCED700(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    v9 = *v2;
    *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CD10EAC();
      v8 = v9;
    }
    swift_bridgeObjectRelease();
    sub_19CCD14C4((__int128 *)(*(_QWORD *)(v8 + 56) + 40 * v5), (uint64_t)v10);
    sub_19CDD3DDC(v5, v8);
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_19CCECFE4((uint64_t)v10, &qword_1ECEB23D8);
}

uint64_t MetricsFieldsAggregator.removingOptionalProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v3 = *a1;
  v4 = a1[1];
  v5 = *v2;
  v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CDD2B7C(v3, v4, (uint64_t)v8);
  return sub_19CCECFE4((uint64_t)v8, &qword_1ECEB23D8);
}

uint64_t MetricsFieldsAggregator.addDefaultProvider(_:forRequest:)(_QWORD *a1, _QWORD *a2)
{
  return sub_19CDE59FC(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t))sub_19CCE6418);
}

uint64_t sub_19CDE59FC(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];

  v5 = a2[1];
  v10[0] = *a2;
  v10[1] = v5;
  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return a3(v8, v10, v3, v6, v7);
}

uint64_t MetricsFieldsAggregator.addingDefaultProvider(_:forRequest:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CCC5ACC(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *, _QWORD *, uint64_t, uint64_t))sub_19CCE6418, a3);
}

Swift::Void __swiftcall MetricsFieldsAggregator.removeDefaultProvider(forRequest:)(JetEngine::MetricsFieldExclusionRequest forRequest)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v2 = v1;
  v3 = *(_QWORD *)forRequest.rawValue._countAndFlagsBits;
  v4 = *(_QWORD *)(forRequest.rawValue._countAndFlagsBits + 8);
  swift_bridgeObjectRetain();
  v5 = sub_19CCED700(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_19CD10EB8();
    swift_bridgeObjectRelease();
    sub_19CCD14C4((__int128 *)(*(_QWORD *)(v8 + 56) + 40 * v5), (uint64_t)v9);
    sub_19CDD3DDC(v5, v8);
    *(_QWORD *)(v2 + 8) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB23D8);
}

uint64_t MetricsFieldsAggregator.removingDefaultProvider(forRequest:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v3 = *a1;
  v4 = a1[1];
  v5 = *v2;
  v6 = v2[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CDD2B68(v3, v4, (uint64_t)v8);
  return sub_19CCECFE4((uint64_t)v8, &qword_1ECEB23D8);
}

uint64_t sub_19CDE5BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  _BYTE v22[32];
  _QWORD v23[4];
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  _QWORD v30[5];

  v30[3] = &type metadata for PageRenderClientIdentifierFieldsProvider;
  v30[4] = &off_1E3DD8330;
  v30[0] = swift_allocObject();
  sub_19CDE61DC(a1, v30[0] + 16);
  sub_19CCD5B84((uint64_t)v30, (uint64_t)&v25);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23[0] = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(a4 + 8) = 0x8000000000000000;
  sub_19CD0FDA0(&v25, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t)&v27);
  *(_QWORD *)(a4 + 8) = v23[0];
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)&v28 + 1);
  sub_19CCECFE4((uint64_t)&v27, &qword_1ECEB23D8);
  if (v9)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v10 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v10;
    v24 = sub_19CD40918(0, 32, 0, MEMORY[0x1E0DEE9D8]);
    v13._object = (void *)0x800000019D06ED10;
    v13._countAndFlagsBits = 0xD00000000000001FLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v23[3] = &type metadata for MetricsFieldExclusionRequest;
    v23[0] = a2;
    v23[1] = a3;
    sub_19CD40794((uint64_t)v23, (uint64_t)v22);
    v25 = 0u;
    v26 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v22, (uint64_t)&v25);
    v29 = 1;
    v27 = v25;
    v28 = v26;
    v14 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_19CD40918(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_19CD40918((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[5 * v16];
    v18 = v27;
    v19 = v28;
    *((_BYTE *)v17 + 64) = v29;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    v24 = v14;
    sub_19CCECFE4((uint64_t)v23, &qword_1ECEB3370);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(_QWORD *)(v11 + 32) = v24;
    *(_QWORD *)&v27 = v12;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
}

uint64_t sub_19CDE5E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  _BYTE v29[32];
  _QWORD v30[4];
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;
  _QWORD v37[5];

  v37[3] = &type metadata for ClickLocationMetricsFieldsProvider;
  v37[4] = &off_1E3DD78B0;
  v14 = (_QWORD *)swift_allocObject();
  v37[0] = v14;
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  sub_19CCD5B84((uint64_t)v37, (uint64_t)&v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = *a7;
  *a7 = 0x8000000000000000;
  sub_19CD0FC44(&v32, a5, a6, isUniquelyReferenced_nonNull_native, (uint64_t)&v34);
  *a7 = v30[0];
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)&v35 + 1);
  sub_19CCECFE4((uint64_t)&v34, &qword_1ECEB23D8);
  if (v16)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v17 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
    v19 = v17;
    v31 = sub_19CD40918(0, 33, 0, MEMORY[0x1E0DEE9D8]);
    v20._object = (void *)0x800000019D06ED30;
    v20._countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    v30[3] = &type metadata for MetricsFieldInclusionRequest;
    v30[0] = a5;
    v30[1] = a6;
    sub_19CD40794((uint64_t)v30, (uint64_t)v29);
    v32 = 0u;
    v33 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v29, (uint64_t)&v32);
    v36 = 1;
    v34 = v32;
    v35 = v33;
    v21 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v24 = &v21[5 * v23];
    v25 = v34;
    v26 = v35;
    *((_BYTE *)v24 + 64) = v36;
    *((_OWORD *)v24 + 2) = v25;
    *((_OWORD *)v24 + 3) = v26;
    v31 = v21;
    sub_19CCECFE4((uint64_t)v30, &qword_1ECEB3370);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    *(_QWORD *)(v18 + 32) = v31;
    *(_QWORD *)&v34 = v19;
    LOBYTE(v32) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v32);

    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
}

uint64_t sub_19CDE6128(uint64_t a1)
{
  destroy for PageRenderClientIdentifierFieldsProvider(a1);
  return a1;
}

uint64_t sub_19CDE615C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CDE6180()
{
  return swift_deallocObject();
}

uint64_t sub_19CDE6190()
{
  return swift_deallocObject();
}

uint64_t sub_19CDE61A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CDE61DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PageRenderClientIdentifierFieldsProvider(a2, a1);
  return a2;
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_19CDE6250()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t BaseObjectGraph._inject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  v8 = sub_19CFDFF5C();
  v5[6] = v8;
  v5[7] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v5[8] = v9;
  v5[9] = *(_QWORD *)(a3 - 8);
  v5[10] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v5[11] = v10;
  *v10 = v5;
  v10[1] = sub_19CDE633C;
  return BaseObjectGraph._injectIfAvailable<A>(_:)(v9, a2, a3);
}

uint64_t sub_19CDE633C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CDE63A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v2, *(_QWORD *)(v0 + 48));
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v6 = BaseObjectGraph._downcast<A>(to:)(AssociatedTypeWitness, AssociatedTypeWitness);
    v7 = (_QWORD *)swift_task_alloc();
    v7[2] = v3;
    v7[3] = v4;
    v7[4] = v6;
    (*(void (**)(uint64_t (*)(), _QWORD *, uint64_t))(*(_QWORD *)v6 + 104))(sub_19CCC2800, v7, v3);
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v10(v8, v2, v3);
    v10(v9, v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDE64D4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of Injectable.init(asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_19CDE6520()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFDF698();
  sub_19CFDF698();
  return 0;
}

uint64_t Models.AdamID.init(from:)()
{
  uint64_t v0;
  unint64_t v1;

  sub_19CDE7A3C();
  v0 = sub_19CFE0040();
  return _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(v0, v1);
}

uint64_t Models.AdamID.init(from:)(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend(a1, sel_description);
  v3 = sub_19CFDF578();
  v5 = v4;

  v6 = _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(v3, v5);
  return v6;
}

uint64_t Models.AdamID.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t Models.AdamID.uint64.getter(unint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  _QWORD v21[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  v6 = result;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)sub_19CFE01FC();
      v8 = (unint64_t)sub_19CDE6AFC(v7, v4, 10);
      v10 = v9 & 1;
      goto LABEL_37;
    }
    v21[0] = result;
    v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        v15 = v3 - 1;
        if (v15)
        {
          v8 = 0;
          v16 = (unsigned __int8 *)v21 + 1;
          while (1)
          {
            v17 = *v16 - 48;
            if (v17 > 9)
              break;
            if (!is_mul_ok(v8, 0xAuLL))
              break;
            v14 = __CFADD__(10 * v8, v17);
            v8 = 10 * v8 + v17;
            if (v14)
              break;
            v10 = 0;
            ++v16;
            if (!--v15)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          v8 = 0;
          v18 = (unsigned __int8 *)v21;
          while (1)
          {
            v19 = *v18 - 48;
            if (v19 > 9)
              break;
            if (!is_mul_ok(v8, 0xAuLL))
              break;
            v14 = __CFADD__(10 * v8, v19);
            v8 = 10 * v8 + v19;
            if (v14)
              break;
            v10 = 0;
            ++v18;
            if (!--v3)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
      if (v3)
      {
        v11 = v3 - 1;
        if (v11)
        {
          v8 = 0;
          v12 = (unsigned __int8 *)v21 + 1;
          while (1)
          {
            v13 = *v12 - 48;
            if (v13 > 9)
              break;
            if (!is_mul_ok(v8, 0xAuLL))
              break;
            v14 = 10 * v8 >= v13;
            v8 = 10 * v8 - v13;
            if (!v14)
              break;
            v10 = 0;
            ++v12;
            if (!--v11)
              goto LABEL_37;
          }
        }
LABEL_36:
        v8 = 0;
        v10 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  v8 = (unint64_t)sub_19CDE7008(v6, a2, 10);
  v10 = v20;
  swift_bridgeObjectRelease();
LABEL_37:
  if ((v10 & 1) != 0)
    return 0;
  else
    return v8;
}

id Models.AdamID.nsNumber.getter(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  char v3;

  v2 = Models.AdamID.uint64.getter(a1, a2);
  if ((v3 & 1) != 0)
    return 0;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v2);
}

unint64_t Models.AdamID.init(from:)(_QWORD *a1)
{
  return sub_19CDE7368(a1);
}

uint64_t Models.AdamID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CDE6978@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_19CDE69A4@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  unint64_t v5;

  result = sub_19CDE7368(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_19CDE69CC(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CDE6A60()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CDE6AB8()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

unsigned __int8 *sub_19CDE6AFC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_19CDE6D78(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_19CDE6D8C(a1, a2, a3);
}

unsigned __int8 *sub_19CDE6D8C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_19CDE7008(uint64_t a1, uint64_t a2, int64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_19CFDF758();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_19CE6E618();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_19CFE01FC();
  }
LABEL_7:
  v11 = sub_19CDE70EC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_19CDE70EC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 v33;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v14 = v9 * a3;
              v15 = v11 + v12;
              v16 = v14 >= v15;
              v9 = v14 - v15;
              if (!v16)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      v26 = a3 + 48;
      v27 = a3 + 55;
      v28 = a3 + 87;
      if (a3 > 10)
      {
        v26 = 58;
      }
      else
      {
        v28 = 97;
        v27 = 65;
      }
      if (result)
      {
        v29 = 0;
        do
        {
          v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              v13 = 0;
              if (v30 < 0x61 || v30 >= v28)
                return (unsigned __int8 *)v13;
              v31 = -87;
            }
            else
            {
              v31 = -55;
            }
          }
          else
          {
            v31 = -48;
          }
          if (!is_mul_ok(v29, a3))
            return 0;
          v32 = v29 * a3;
          v33 = v30 + v31;
          v16 = __CFADD__(v32, v33);
          v29 = v32 + v33;
          if (v16)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  v17 = a2 - 1;
  if (a2 == 1)
    return 0;
  v18 = a3 + 48;
  v19 = a3 + 55;
  v20 = a3 + 87;
  if (a3 > 10)
  {
    v18 = 58;
  }
  else
  {
    v20 = 97;
    v19 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v21 = result + 1;
  do
  {
    v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        v13 = 0;
        if (v22 < 0x61 || v22 >= v20)
          return (unsigned __int8 *)v13;
        v23 = -87;
      }
      else
      {
        v23 = -55;
      }
    }
    else
    {
      v23 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v24 = v9 * a3;
    v25 = v22 + v23;
    v16 = __CFADD__(v24, v25);
    v9 = v24 + v25;
    if (v16)
      return 0;
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

unint64_t sub_19CDE7368(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  uint64_t v35;

  v3 = sub_19CFE01A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v1)
    goto LABEL_18;
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  v9 = sub_19CFE06AC();
  v8 = v9;
  v11 = v10;
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    v18 = sub_19CFE01B4();
    swift_allocError();
    v20 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v21, v7, v3);
    goto LABEL_16;
  }
  v35 = v3;
  v30 = v9;
  v31 = v10;
  v32 = 0;
  v33 = v12;
  v29 = v12;
  swift_bridgeObjectRetain();
  v13 = sub_19CFDF6C8();
  if (!v14)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    goto LABEL_14;
  }
  v15 = v14;
  while (1)
  {
    if (v13 == 48 && v15 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    v16 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      break;
LABEL_9:
    v13 = sub_19CFDF6C8();
    v15 = v17;
    if (!v17)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v30 = v8;
  v31 = v11;
  v32 = 0;
  v33 = v29;
  swift_bridgeObjectRetain();
  v23 = sub_19CFDF6C8();
  if (!v24)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v8;
  }
  v25 = v23;
  v26 = v24;
  while (2)
  {
    if (v25 == 48 && v26 == 0xE100000000000000)
      goto LABEL_22;
    if ((sub_19CFE06A0() & 1) == 0)
    {
      if (v25 == 57 && v26 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        v25 = sub_19CFDF6C8();
        v26 = v28;
        if (!v28)
          goto LABEL_30;
        continue;
      }
LABEL_22:
      v27 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
        goto LABEL_32;
      goto LABEL_23;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09B8();
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v30 = 0xD000000000000028;
  v31 = 0x800000019D06EE80;
LABEL_14:
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE019C();
  v18 = sub_19CFE01B4();
  swift_allocError();
  v20 = v19;
  v3 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v19, v7, v35);
LABEL_16:
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC458], v18);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
LABEL_18:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t _s9JetEngine6ModelsO6AdamIDV8rawValueAESS_tcfC_0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  if ((a2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a2) & 0xF;
  else
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    sub_19CFA78D4((unint64_t)"JetEngine/AdamID.swift", 0x16uLL, 2, 0x13uLL);
  MEMORY[0x1E0C80A78](a1, a2);
  swift_bridgeObjectRetain();
  v4 = sub_19CFDF6C8();
  if (!v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_19CFB28B8((uint64_t)"JetEngine/AdamID.swift", 22, 2, 21, sub_19CDE7B48);
    goto LABEL_15;
  }
  v6 = v5;
  while (1)
  {
    if (v4 == 48 && v6 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    v7 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      break;
LABEL_9:
    v4 = sub_19CFDF6C8();
    v6 = v8;
    if (!v8)
      goto LABEL_13;
  }
  v9 = swift_bridgeObjectRelease();
LABEL_15:
  MEMORY[0x1E0C80A78](v9, v10);
  swift_bridgeObjectRetain();
  v11 = sub_19CFDF6C8();
  if (!v12)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return a1;
  }
  v13 = v11;
  v14 = v12;
  while (2)
  {
    if (v13 == 48 && v14 == 0xE100000000000000)
      goto LABEL_17;
    if ((sub_19CFE06A0() & 1) == 0)
    {
      if (v13 == 57 && v14 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        v13 = sub_19CFDF6C8();
        v14 = v16;
        if (!v16)
          goto LABEL_25;
        continue;
      }
LABEL_17:
      v15 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_27;
      goto LABEL_18;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  sub_19CFB28B8((uint64_t)"JetEngine/AdamID.swift", 22, 2, 23, sub_19CDE7B7C);
  return a1;
}

unint64_t sub_19CDE7A3C()
{
  unint64_t result;

  result = qword_1EE43ECE0;
  if (!qword_1EE43ECE0)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EE43ECE0);
  }
  return result;
}

unint64_t sub_19CDE7A84()
{
  unint64_t result;

  result = qword_1EE43ECE8;
  if (!qword_1EE43ECE8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AdamID, &type metadata for Models.AdamID);
    atomic_store(result, (unint64_t *)&qword_1EE43ECE8);
  }
  return result;
}

_QWORD *assignWithCopy for MetricsEventType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MetricsEventType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.AdamID()
{
  return &type metadata for Models.AdamID;
}

uint64_t sub_19CDE7B48()
{
  return sub_19CDE6520();
}

uint64_t sub_19CDE7B7C()
{
  return sub_19CDE6520();
}

_QWORD *static PipelinePhase<>.fetchScript(urlSession:urlEncoder:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v12 = a1;
  v13 = a2;
  v14 = sub_19CD51530();
  type metadata accessor for JSRemoteScriptFetcher();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v13;
  *(_OWORD *)(v15 + 32) = xmmword_19D050770;
  *(_QWORD *)(v15 + 48) = 4;
  *(_BYTE *)(v15 + 56) = 1;
  *(_QWORD *)(v15 + 64) = v14;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = sub_19CDE7F10;
  v17 = MEMORY[0x1E0CB0338];
  v16[6] = v15;
  return PipelinePhase.init(mapOutput:)((uint64_t)sub_19CDE7F3C, (uint64_t)v16, a3, v17, a6);
}

uint64_t sub_19CDE7CAC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _BYTE v25[8];

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 32);
  v21 = *(_OWORD *)(a2 + 16);
  v22 = v9;
  v23 = *(_OWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a2 + 64);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v12 = (void *)*((_QWORD *)&v21 + 1);
  sub_19CEB6448((uint64_t)v8, *((void **)&v21 + 1), *((uint64_t *)&v22 + 1), v23, SBYTE8(v23));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = swift_allocObject();
  v14 = v22;
  v15 = v23;
  *(_OWORD *)(v13 + 16) = v21;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 64) = v24;
  v16 = (void *)v21;
  sub_19CDE81CC((uint64_t)&v22, (uint64_t)v25);
  v17 = v16;
  v18 = v12;
  sub_19CD0F81C((uint64_t)v25);
  swift_retain();
  sub_19CF7739C((uint64_t)sub_19CDE81AC, v13);
  swift_release();
  swift_release();
  v19 = sub_19CDE8040((uint64_t)sub_19CDE7E40, 0);
  swift_release();
  return v19;
}

void sub_19CDE7E40(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_data);
  v4 = sub_19CFDEE70();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_19CDE7EA4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JSRemoteScriptFetcher()
{
  return objc_opt_self();
}

uint64_t sub_19CDE7F10(_QWORD *a1)
{
  uint64_t v1;

  return sub_19CDE7CAC(a1, v1);
}

uint64_t sub_19CDE7F18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE7F3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t *);
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v7;
  uint64_t v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(uint64_t *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_2Tm, a1, v3);
  v7 = v5(v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v7;
}

uint64_t dispatch thunk of JSSourceURLProvider.scriptURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_19CDE7FB4(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = *a1;
  a2(&v5, &v7);
  v2 = v5;
  v3 = v6;
  sub_19CFBB3F4(v5, v6);
  return sub_19CD3BE18(v2, v3);
}

uint64_t sub_19CDE8040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C320);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CDE8240;
  v9[1] = v7;
  v9[2] = sub_19CDE824C;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CCE8808();
  sub_19CCE87C8((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CDE8170()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE81AC(uint64_t a1)
{
  return sub_19CEB5734(a1);
}

uint64_t sub_19CDE81CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDE8214()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE8240(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CDE7FB4(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19CDE824C(void *a1)
{
  sub_19CF4C910(a1);
}

Swift::String __swiftcall CryptoAlgorithm.makeDigest(fromContentsOf:)(Swift::String fromContentsOf)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  Swift::String result;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  if (*v1)
    fromContentsOf._object = (void *)64;
  else
    fromContentsOf._object = (void *)32;
  MEMORY[0x1E0C80A78](fromContentsOf._countAndFlagsBits, fromContentsOf._object);
  sub_19CDE8310((uint64_t)&v10[-1] - v2, v2, v3, v4, v5, v10);
  v6 = v10[0];
  v7 = (void *)v10[1];
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_19CDE8310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v7 = (char *)a1;
  result = sub_19CED3D50(a3, a4, a5 & 1, a1);
  if (a2 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    result = MEMORY[0x1A1AD9850](2 * a2);
    if (v7 && a2)
    {
      v10 = MEMORY[0x1E0DEDE70];
      v11 = MEMORY[0x1E0DEDEC8];
      do
      {
        v12 = *v7++;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
        *(_QWORD *)(v13 + 56) = v10;
        *(_QWORD *)(v13 + 64) = v11;
        *(_BYTE *)(v13 + 32) = v12;
        sub_19CFDF5A8();
        sub_19CFDF698();
        result = swift_bridgeObjectRelease();
        --a2;
      }
      while (a2);
    }
    *a6 = 0;
    a6[1] = 0xE000000000000000;
  }
  return result;
}

uint64_t sub_19CDE8430(const char *a1, char a2, uint64_t a3)
{
  size_t v6;
  uint64_t (*v7)(const char *, size_t, uint64_t);
  uint64_t result;

  v6 = strlen(a1);
  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
    result = sub_19CFE0334();
    __break(1u);
  }
  else
  {
    v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E0C803A8];
    if ((a2 & 1) == 0)
      v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E0C80368];
    return v7(a1, v6, a3);
  }
  return result;
}

BOOL static CryptoAlgorithm.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CryptoAlgorithm.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t CryptoAlgorithm.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CDE85B0()
{
  unint64_t result;

  result = qword_1EE43ECF0;
  if (!qword_1EE43ECF0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CryptoAlgorithm, &type metadata for CryptoAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EE43ECF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CryptoAlgorithm(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDE8640 + 4 * byte_19D05508D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDE8674 + 4 * asc_19D055088[v4]))();
}

uint64_t sub_19CDE8674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE867C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDE8684);
  return result;
}

uint64_t sub_19CDE8690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDE8698);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDE869C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDE86A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CryptoAlgorithm()
{
  return &type metadata for CryptoAlgorithm;
}

uint64_t dispatch thunk of JSRequestPerformer.performRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return v11(a1, a2, a3, a4);
}

uint64_t BaseObjectGraph.buildUpon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  a1[3] = &type metadata for StandaloneObjectGraphBuilder;
  a1[4] = &off_1E3DD6718;
  v2 = MEMORY[0x1E0DEE9D8];
  *a1 = v1;
  a1[1] = v2;
  return swift_retain();
}

uint64_t *sub_19CDE8784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  type metadata accessor for Promise(0, a5, a3, a4);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a2;
  v12[6] = a3;
  v12[7] = a1;
  swift_retain();
  swift_retain();
  return Promise.__allocating_init(task:)((uint64_t)&unk_1EE43ED28, (uint64_t)v12);
}

uint64_t sub_19CDE8824(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_19CCBE344;
  return v9(a1, a4);
}

uint64_t AsyncObjectGraphBuilder.satisfying(allOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = sub_19CDE900C((uint64_t)sub_19CDE9004, v8);
  swift_release();
  swift_release();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2ED8);
  a5[3] = result;
  a5[4] = (uint64_t)&off_1E3DD5668;
  v11 = MEMORY[0x1E0DEE9D8];
  *a5 = v9;
  a5[1] = v11;
  return result;
}

uint64_t sub_19CDE8950(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a2;
  v11[4] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2EF0);
  v12 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = v14;
  *(_BYTE *)(v12 + 32) = 0;
  v15 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = &unk_1EE43ED10;
  v16[5] = v11;
  v16[6] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v9, (uint64_t)asc_1EE43ED18, (uint64_t)v16);
  swift_release();
  return v12;
}

uint64_t sub_19CDE8AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CDE8ACC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = (*(uint64_t (**)(void))(v0 + 32))();
  *(_QWORD *)(v0 + 48) = sub_19CD05BE0(v1);
  swift_release();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_19CDE8B44;
  return BaseObjectGraph._withAllDependenciesResolved.getter();
}

uint64_t sub_19CDE8B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_19CDE8BC0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDE8BD8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AsyncObjectGraphBuilder.makeObjectGraph()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return swift_task_switch();
}

uint64_t sub_19CDE8C28()
{
  _QWORD *v0;

  v0[24] = (*(uint64_t (**)(_QWORD))(v0[22] + 16))(v0[21]);
  return swift_task_switch();
}

uint64_t sub_19CDE8C70()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CDE8CE4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBD8F0();
  sub_19CDE9148(v1);
  return swift_continuation_await();
}

uint64_t sub_19CDE8CE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 200) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 160);
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_19CDE8D70()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDE8DA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_19CDE8DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Promise(0, v10, v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, a4);
  return Promise.__allocating_init(value:)((uint64_t)v8, v11, v12, v13);
}

uint64_t sub_19CDE8E58()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_19CDE8EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CD5AAC0;
  v9[1] = v7;
  v9[2] = sub_19CDE9228;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBD8F0();
  sub_19CDE9148((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CDE8FD4(uint64_t a1)
{
  return sub_19CCFEE08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CDE8784);
}

uint64_t sub_19CDE8FE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE9004(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CDE8950(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CDE900C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CDE9214;
  v9[1] = v7;
  v9[2] = sub_19CDE9228;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBD8F0();
  sub_19CDE9148((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CDE9148(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB25B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CDE9188()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_19CDE91E0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CDE9214(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF77D00(*a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CDE9228(void *a1)
{
  sub_19CF4C890(a1);
}

uint64_t sub_19CDE9230()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE925C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_19CCBE344;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_19CDE92D4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE9308(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C30
                                                                                     + dword_1EE442C30))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CDE939C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDE93C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v4 = *(int **)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_19CD579FC;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_19CCBE344;
  return v9(a1, v5);
}

uint64_t sub_19CDE9460()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of Logger.log(contentsOf:withLevel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t TaggedValue.init(_:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t TaggedValue.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TaggedValue.base.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TaggedValue.base.modify())()
{
  return nullsub_1;
}

uint64_t TaggedValue<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  char *v28;

  v24 = a4;
  v25 = *(_QWORD *)(a2 - 8);
  v26 = a3;
  MEMORY[0x1E0C80A78](a1, a2);
  v28 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaggedValue(0, v8, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v20 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v4)
  {
    v21 = v15;
    v22 = v12;
    v23 = v11;
    v16 = v25;
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    v17 = v28;
    sub_19CFE06DC();
    v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v17, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v18, v23);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for TaggedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaggedValue);
}

uint64_t sub_19CDE967C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE073C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CDE9744(_QWORD *a1)
{
  return TaggedValue<>.encode(to:)(a1);
}

uint64_t static TaggedValue<>.== infix(_:_:)()
{
  return sub_19CFDF548() & 1;
}

uint64_t sub_19CDE9784()
{
  return static TaggedValue<>.== infix(_:_:)();
}

uint64_t TaggedValue<>.hash(into:)()
{
  sub_19CFE08D4();
  return sub_19CFDF4D0();
}

uint64_t TaggedValue<>.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  sub_19CFDF4D0();
  return sub_19CFE0910();
}

uint64_t sub_19CDE983C()
{
  return TaggedValue<>.hashValue.getter();
}

uint64_t sub_19CDE9844()
{
  return TaggedValue<>.hash(into:)();
}

uint64_t sub_19CDE984C()
{
  sub_19CFE08C8();
  TaggedValue<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CDE989C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> TaggedValue<A, B>, a1, &v4);
}

uint64_t sub_19CDE98D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDE9984 + 4 * byte_19D055170[(v7 - 1)]))();
}

void sub_19CDE99D4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

id sub_19CDE9B84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  id v17;
  uint64_t v18;
  _BYTE v19[400];
  _QWORD v20[50];
  _BYTE v21[400];
  _BYTE v22[400];
  _BYTE v23[400];
  _BYTE v24[400];

  v4 = a3[1];
  v18 = *a3;
  v5 = a3[2];
  v6 = a3[3];
  v17 = *(id *)(v3 + 32);
  objc_msgSend(v17, sel_lock);
  v7 = v3 + 16;
  swift_beginAccess();
  v8 = *(_QWORD **)(v3 + 16);
  v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))v8[2];
  if (v9)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v7 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_17;
    while (1)
    {
      *(_QWORD *)v7 = v8;
      if (v8[2])
      {
        v11 = 0;
        v12 = (char *)v9 - 1;
        v13 = 4;
        do
        {
          sub_19CDE9DA4((uint64_t)&v8[v13], (uint64_t)v23);
          sub_19CDE9DA4((uint64_t)v23, (uint64_t)v24);
          if (sub_19CDE9DEC((uint64_t)v24) != 1)
          {
            sub_19CDE9DA4((uint64_t)v23, (uint64_t)v22);
            sub_19CD376A0(v22, v21);
            v20[0] = v18;
            v20[1] = v4;
            v20[2] = v5;
            v20[3] = v6;
            v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))v21;
            sub_19CECB91C();
            if ((v14 & 1) != 0)
            {
              sub_19CDE9DA4((uint64_t)v23, (uint64_t)v21);
              sub_19CDE9E64((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD375C8);
              v15 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)v7 = v8;
              if ((v15 & 1) == 0)
              {
                v8 = sub_19CF819EC(v8);
                *(_QWORD *)v7 = v8;
              }
              sub_19CDE9E04((uint64_t)v19);
              if ((unint64_t)v11 >= v8[2])
                goto LABEL_16;
              sub_19CDE9DA4((uint64_t)&v8[v13], (uint64_t)v20);
              sub_19CDE9DA4((uint64_t)v19, (uint64_t)&v8[v13]);
              v9 = sub_19CD377DC;
              sub_19CDE9E64((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD377DC);
              sub_19CDE9E64((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD377DC);
            }
          }
          if (v12 == v11)
            goto LABEL_14;
          v8 = *(_QWORD **)v7;
          ++v11;
          v13 += 50;
        }
        while ((unint64_t)v11 < *(_QWORD *)(*(_QWORD *)v7 + 16));
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v8 = sub_19CF819EC(v8);
    }
  }
LABEL_14:
  swift_endAccess();
  return objc_msgSend(v17, sel_unlock);
}

uint64_t sub_19CDE9D78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_19CDE9DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDE9DEC(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 48) >> 9) > 0x80000000)
    return -(*(_QWORD *)(a1 + 48) >> 9);
  else
    return 0;
}

_OWORD *sub_19CDE9E04(uint64_t a1)
{
  _OWORD *result;

  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 0x1FFFFFFFE00;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 392) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  result = (_OWORD *)(a1 + 56);
  result[13] = 0u;
  result[14] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  return result;
}

uint64_t sub_19CDE9E64(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v12 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 368);
  v10 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    *(_QWORD *)(a1 + 384),
    *(_QWORD *)(a1 + 392));
  return a1;
}

uint64_t sub_19CDE9F00()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = *(_OWORD *)(v0 + 368);
  v10 = *(_OWORD *)(v0 + 384);
  v7 = *(_OWORD *)(v0 + 336);
  v8 = *(_OWORD *)(v0 + 352);
  v5 = *(_OWORD *)(v0 + 304);
  v6 = *(_OWORD *)(v0 + 320);
  v3 = *(_OWORD *)(v0 + 272);
  v4 = *(_OWORD *)(v0 + 288);
  v2 = *(_OWORD *)(v0 + 240);
  sub_19CD4ABD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(_QWORD *)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_QWORD *)(v0 + 192),
    *(_QWORD *)(v0 + 200),
    *(_QWORD *)(v0 + 208),
    *(_QWORD *)(v0 + 216),
    *(_QWORD *)(v0 + 224),
    *(_QWORD *)(v0 + 232),
    v2,
    *((uint64_t *)&v2 + 1),
    *(_QWORD *)(v0 + 256),
    *(_QWORD *)(v0 + 264),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return swift_deallocObject();
}

uint64_t JSIntentResult.networkPerformance.getter()
{
  type metadata accessor for JSIntentResult();
  return swift_bridgeObjectRetain();
}

char *initializeBufferWithCopyOfBuffer for JSIntentResult(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEA44();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 24);
    if (v12)
    {
      v13 = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 3) = v12;
      *((_QWORD *)v10 + 4) = v13;
      (**(void (***)(char *, char *))(v12 - 8))(v10, v11);
    }
    else
    {
      v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
    v8(&v10[*(int *)(v16 + 28)], &v11[*(int *)(v16 + 28)], v7);
    v17 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(uint64_t *)((char *)a2 + a3[6]);
    *(_QWORD *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_19CFDEA44();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 24);
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 32);
    *(_QWORD *)(v9 + 24) = v11;
    *(_QWORD *)(v9 + 32) = v12;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v7(v9 + *(int *)(v14 + 28), v10 + *(int *)(v14 + 28), v6);
  v15 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v6 = sub_19CFDEA44();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = (__int128 *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 24);
  if (!*(_QWORD *)(a1 + v8 + 24))
  {
    if (v11)
    {
      *(_QWORD *)(v9 + 24) = v11;
      *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
      (**(void (***)(uint64_t, __int128 *))(v11 - 8))(v9, v10);
      goto LABEL_8;
    }
LABEL_7:
    v12 = *v10;
    v13 = v10[1];
    *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
    *(_OWORD *)v9 = v12;
    *(_OWORD *)(v9 + 16) = v13;
    goto LABEL_8;
  }
  if (!v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v9);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v9, (uint64_t *)v10);
LABEL_8:
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v7(v9 + *(int *)(v14 + 28), (uint64_t)v10 + *(int *)(v14 + 28), v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_19CFDEA44();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(a2 + v8 + 32);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v7(v9 + *(int *)(v12 + 28), v10 + *(int *)(v12 + 28), v6);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for JSIntentResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_19CFDEA44();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  if (*(_QWORD *)(a1 + v8 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v7(v9 + *(int *)(v12 + 28), v10 + *(int *)(v12 + 28), v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CDEA464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_19CFDEA44();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_19CDEA510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_19CFDEA44();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_19CDEA5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, uint64_t))(a3 + 24))(*(_QWORD *)(*(_QWORD *)(a2 - 8) + 64), a1);
  if (!v3)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_19CDEA738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int16 v6;

  sub_19CDEAA5C();
  result = sub_19CDEA5B8(a1, MEMORY[0x1E0DEE068], a2);
  if (!v2)
    return v6;
  return result;
}

uint64_t sub_19CDEA794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unsigned int v6;

  sub_19CDEA7F0();
  result = sub_19CDEA5B8(a1, MEMORY[0x1E0DEE0F8], a2);
  if (!v2)
    return v6;
  return result;
}

unint64_t sub_19CDEA7F0()
{
  unint64_t result;

  result = qword_1ECEB1738;
  if (!qword_1ECEB1738)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEE148], MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1ECEB1738);
  }
  return result;
}

unint64_t sub_19CDEA834()
{
  unint64_t result;

  result = qword_1EE43EDB0;
  if (!qword_1EE43EDB0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0553A4, &type metadata for IOStreamError);
    atomic_store(result, (unint64_t *)&qword_1EE43EDB0);
  }
  return result;
}

uint64_t sub_19CDEA878(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(uint64_t, uint64_t);

  if (a2 < 1)
  {
    sub_19CDEA834();
    swift_allocError();
    *v17 = 1;
    swift_willThrow();
  }
  else
  {
    v6 = v4;
    v9 = a2;
    v10 = swift_slowAlloc();
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
    v5 = 0;
    if ((v21(a3, a4) & 1) != 0)
    {
      v19 = a4;
      v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32);
      v18 = v9;
      do
      {
        v11 = v20(v10, v9, a3, a4);
        if (v6)
          break;
        v12 = v11;
        v13 = v5;
        v14 = a1[3];
        v15 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v14);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v10, v12, v14, v15);
        v5 += v12;
        if (__OFADD__(v13, v12))
        {
          __break(1u);
          return result;
        }
        a4 = v19;
        v6 = 0;
        v9 = v18;
      }
      while ((v21(a3, v19) & 1) != 0);
    }
    MEMORY[0x1A1ADBE9C](v10, -1, -1);
  }
  return v5;
}

uint64_t sub_19CDEAA24()
{
  return sub_19CFDF7E8();
}

unint64_t sub_19CDEAA5C()
{
  unint64_t result;

  result = qword_1ECEB1730;
  if (!qword_1ECEB1730)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEE0B0], MEMORY[0x1E0DEE068]);
    atomic_store(result, (unint64_t *)&qword_1ECEB1730);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IOStreamError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDEAAEC + 4 * byte_19D05530D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDEAB20 + 4 * asc_19D055308[v4]))();
}

uint64_t sub_19CDEAB20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDEAB28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDEAB30);
  return result;
}

uint64_t sub_19CDEAB3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDEAB44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDEAB48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDEAB50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IOStreamError()
{
  return &type metadata for IOStreamError;
}

unint64_t sub_19CDEAB70()
{
  unint64_t result;

  result = qword_1EE43EDB8;
  if (!qword_1EE43EDB8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05537C, &type metadata for IOStreamError);
    atomic_store(result, (unint64_t *)&qword_1EE43EDB8);
  }
  return result;
}

uint64_t sub_19CDEABB4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t JetPackAMSRemoteStreamSource.init(url:urlSessionConfiguration:urlRequestEncoder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v18 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, a1, v8);
  v10 = (int *)type metadata accessor for JetPackAMSRemoteStreamSource();
  *(_QWORD *)(a4 + v10[5]) = a2;
  *(_QWORD *)(a4 + v10[6]) = a3;
  type metadata accessor for BaseObjectGraph();
  v11 = a2;
  v12 = a3;
  v13 = static BaseObjectGraph.current.getter();
  v14 = sub_19CFDF2B4();
  if (qword_1ECEB1330 != -1)
    swift_once();
  swift_retain();
  swift_task_localValuePush();
  v15 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  v16 = sub_19CDA8D80(v14, v15);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();

  swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  *(_QWORD *)(a4 + v10[7]) = v16;
  return result;
}

uint64_t type metadata accessor for JetPackAMSRemoteStreamSource()
{
  uint64_t result;

  result = qword_1EE43C460;
  if (!qword_1EE43C460)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t JetPackAMSRemoteStreamSource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id JetPackAMSRemoteStreamSource.urlSessionConfiguration.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 20));
}

id JetPackAMSRemoteStreamSource.urlRequestEncoder.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 24));
}

uint64_t JetPackAMSRemoteStreamSource.makeStream()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  __int128 v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  _QWORD v54[5];

  v1 = sub_19CFDF2E4();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  MEMORY[0x1E0C80A78](v1, v2);
  v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for JetPackAMSRemoteStreamSource();
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v46 = v6;
  v47 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDEDE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0;
  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDCA0]), sel_initWithConfiguration_, *(_QWORD *)(v0 + *(int *)(v4 + 20)));
  type metadata accessor for BaseObjectGraph();
  v17 = static BaseObjectGraph.current.getter();
  v18 = sub_19CFDF2B4();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v54[0] = v17;
  swift_retain();
  swift_task_localValuePush();
  v19 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain();
  v44 = sub_19CDA8D80(v18, v19);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  swift_release();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v21 = v16;
  v20(v15, v16, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v15, v11);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v22 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 16) = 0;
  v22[2] = v23;
  sub_19CDEBE50((uint64_t)v10, (uint64_t)v22 + *(_QWORD *)(*v22 + 96));
  v24 = v47;
  sub_19CDEBE98(v16, v47);
  v25 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v26 = (v46 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  v28 = v48;
  *(_QWORD *)(v27 + 16) = v48;
  sub_19CDEBF98(v24, v27 + v25);
  *(_QWORD *)(v27 + v26) = v44;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_19CDEBFDC;
  *(_QWORD *)(v29 + 24) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v22;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C550);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v30;
  v31[3] = sub_19CDEC0EC;
  v31[4] = v29;
  v20(v15, v21, v11);
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v32 = v28;
  swift_retain();
  sub_19CFE00C4();
  sub_19CD48F8C();
  v34 = v49;
  v33 = v50;
  v35 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *MEMORY[0x1E0DEF540], v51);
  v36 = (void *)sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  sub_19CD23A14((uint64_t)v54, (uint64_t)v52);
  type metadata accessor for PersistentPipelineBackoff();
  v37 = swift_allocObject();
  v38 = v52[1];
  *(_OWORD *)(v37 + 16) = v52[0];
  *(_OWORD *)(v37 + 32) = v38;
  *(_QWORD *)(v37 + 48) = v53;
  *(_QWORD *)(v37 + 56) = sub_19CDEB7C8;
  *(_QWORD *)(v37 + 64) = 0;
  swift_retain();
  v39 = v36;
  sub_19CD20334((uint64_t)v54);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C6D8);
  *(_QWORD *)(swift_allocObject() + 16) = v31;
  v40 = (void *)MEMORY[0x1A1ADB200]();
  v41 = swift_retain();
  v42 = sub_19CDEC3F8(v41, v37, v39);
  swift_release();

  swift_release();
  objc_autoreleasePoolPop(v40);

  swift_release();
  swift_release();
  swift_release();
  return v42;
}

uint64_t sub_19CDEB2DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[32];
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35[4];
  _QWORD *v36;
  char v37;

  v7 = *(void **)(a3 + *(int *)(type metadata accessor for JetPackAMSRemoteStreamSource() + 24));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  swift_retain();
  v28 = a2;
  v8 = v7;
  v9 = sub_19CD51798();
  v37 = 1;
  if (qword_1ECEB2C88 != -1)
    swift_once();
  v10 = (void *)qword_1ECEB29D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
  v12 = v10;
  v36 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
  v13._object = (void *)0x800000019D06F120;
  v13._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  v14 = sub_19CFDEDE0();
  v35[3] = v14;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(boxed_opaque_existential_2Tm, a1, v14);
  sub_19CD40794((uint64_t)v35, (uint64_t)v31);
  v29 = 0u;
  v30 = 0u;
  sub_19CD40658((uint64_t)v31, (uint64_t)&v29);
  v34 = 0;
  v32 = v29;
  v33 = v30;
  v16 = v36;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v19 = &v16[5 * v18];
  v20 = v32;
  v21 = v33;
  *((_BYTE *)v19 + 64) = v34;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  v36 = v16;
  sub_19CCECFE4((uint64_t)v35, &qword_1ECEB3370);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(_QWORD *)(v11 + 32) = v36;
  *(_QWORD *)&v32 = v12;
  LOBYTE(v29) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v29);

  swift_bridgeObjectRelease();
  sub_19CEB6448(a1, v8, 0, 4, 1);
  sub_19CE4BEB0((uint64_t)sub_19CDEB65C, 0);
  swift_release();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 24) = v8;
  *(_QWORD *)(v23 + 32) = a4;
  *(_OWORD *)(v23 + 40) = xmmword_19D0553F0;
  *(_BYTE *)(v23 + 56) = v37;
  *(_DWORD *)(v23 + 57) = v32;
  *(_DWORD *)(v23 + 60) = *(_DWORD *)((char *)&v32 + 3);
  *(_QWORD *)(v23 + 64) = v9;
  v24 = v28;
  v25 = v8;
  swift_retain();
  swift_retain();
  sub_19CF7739C((uint64_t)sub_19CDE81AC, v23);
  swift_release();
  v26 = sub_19CDEC2C4((uint64_t)sub_19CDEB71C, 0);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v26;
}

uint64_t sub_19CDEB65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_19CFDE90C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  sub_19CFDE900();
  sub_19CFDE8C4();
  sub_19CFDF578();
  sub_19CFDE900();
  return swift_bridgeObjectRelease();
}

void sub_19CDEB71C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;

  v3 = objc_msgSend(*a1, sel_data);
  v4 = sub_19CFDEE70();
  v6 = v5;

  v7 = objc_allocWithZone(MEMORY[0x1E0D41868]);
  v8 = (void *)sub_19CFDEE58();
  v9 = objc_msgSend(v7, sel_initWithData_, v8);
  sub_19CD3BE18(v4, v6);

  *a2 = v9;
}

uint64_t sub_19CDEB7C8()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for JitterPipelineBackoff();
  v0 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 16) = xmmword_19D055400;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

id static JetPackAMSRemoteStreamSource.defaultURLEncoder(forContentsOf:using:from:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  _BYTE *v12;
  os_unfair_lock_s *v13;
  int v14;
  char v15;
  uint64_t v17;
  unsigned __int8 v18;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_initWithBag_, *a2);
  objc_msgSend(v11, sel_setIncludeClientVersions_, 0);
  objc_msgSend(v11, sel_setAnisetteType_, 0);
  objc_msgSend(v11, sel_setMescalType_, 0);
  objc_msgSend(v11, sel_setAccount_, 0);
  objc_msgSend(v11, sel_setRequestEncoding_, 1);
  objc_msgSend(v11, sel_setDialogOptions_, 1);
  objc_msgSend(v11, sel_setClientInfo_, a3);
  objc_msgSend(v11, sel_setDisableResponseDecoding_, 1);
  if (qword_1ECEB1958 != -1)
    swift_once();
  v12 = (char *)off_1ECEB1948 + 16;
  v13 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_19CD3EA18(v12, &v18);
  os_unfair_lock_unlock(v13);
  v14 = v18;
  swift_release();
  if (v14 == 2)
    LOBYTE(v14) = os_variant_has_internal_content();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((v14 & 1) != 0)
  {
    v15 = sub_19CFDECC0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v15 & 1) != 0)
      objc_msgSend(v11, sel_setUrlKnownToBeTrusted_, 1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v11;
}

uint64_t sub_19CDEBA80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_19CFDEDE0();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v1, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t sub_19CDEBADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  os_unfair_lock_s *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B70);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE43A538 != -1)
    swift_once();
  v5 = *(os_unfair_lock_s **)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_19CDEBD90(v0, v4);
  os_unfair_lock_unlock(v5 + 6);
  swift_release();
  v6 = &v4[*(int *)(v1 + 48)];
  v7 = sub_19CFDEDE0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_19CDEBBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE43A538 != -1)
    swift_once();
  v5 = *(os_unfair_lock_s **)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_19CDC1BC8(v0, (uint64_t)v4);
  os_unfair_lock_unlock(v5 + 6);
  swift_release();
  return sub_19CCECFE4((uint64_t)v4, (uint64_t *)&unk_1ECEB3030);
}

uint64_t sub_19CDEBCDC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_19CDEBD64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_19CDC1BC8(a1, a2);
}

uint64_t sub_19CDEBD90@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&a2[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B70) + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  result = sub_19CE88DA0(v9, v8);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19CDEBE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDEBE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JetPackAMSRemoteStreamSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDEBEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for JetPackAMSRemoteStreamSource();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  v4 = v0 + v3;
  v5 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDEBF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JetPackAMSRemoteStreamSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDEBFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for JetPackAMSRemoteStreamSource() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_19CDEB2DC(a1, *(void **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_19CDEC03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_retain();
  v6 = sub_19CDEC0F4((uint64_t)sub_19CDECBE8, v5);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_19CDEC0C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDEC0EC(uint64_t a1)
{
  uint64_t v1;

  return sub_19CDEC03C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CDEC0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CDECC24;
  v9[1] = v7;
  v9[2] = sub_19CDECC34;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE6E0((uint64_t)v9);
  sub_19CCECFE4((uint64_t)v9, &qword_1EE43D310);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

void sub_19CDEC240(uint64_t *a1, void (*a2)(void **__return_ptr, uint64_t *))
{
  id v2;
  void *v3;
  uint64_t v4;

  v4 = *a1;
  a2(&v3, &v4);
  v2 = v3;
  sub_19CFBB650(v3);

}

uint64_t sub_19CDEC2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CDECCA4;
  v9[1] = v7;
  v9[2] = sub_19CDECC34;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CCE8808();
  sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1ECEB1280);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CDEC3F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v33 = a3;
  v34 = sub_19CFDF2D8();
  v37 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34, v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF308();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDF320();
  v13 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v31 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v21 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = 0;
  v23 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v21 + 24) = v23;
  *(_BYTE *)(v21 + 32) = 0;
  type metadata accessor for PersistentPipelineBackoff();
  v24 = sub_19CFCE358();
  sub_19CFDF314();
  MEMORY[0x1A1AD955C](v16, v24);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v16, v12);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a1;
  v26[3] = a2;
  v26[4] = &off_1E3DD44E0;
  v26[5] = v21;
  v27 = v33;
  v26[6] = v33;
  aBlock[4] = sub_19CDECBD8;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_5;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v27;
  sub_19CFDF2F0();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  v29 = v34;
  sub_19CFE0070();
  MEMORY[0x1A1AD9FB8](v20, v11, v7, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v29);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  v25(v20, v32);
  swift_release();
  return v21;
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackAMSRemoteStreamSource(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v12 = v10;
    v13 = v11;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  return swift_release();
}

uint64_t initializeWithCopy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11 = v9;
  v12 = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for JetPackAMSRemoteStreamSource(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAMSRemoteStreamSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDECA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackAMSRemoteStreamSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDECAA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_19CDECB1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19CDECB9C()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CDECBD8()
{
  uint64_t v0;

  return sub_19CF0A844(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_19CDECBE8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CDEBCDC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_19CDECBF0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CDECC24(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF77DA8(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CDECC34(void *a1)
{
  sub_19CF4C930(a1);
}

uint64_t sub_19CDECC3C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDECC78()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CDECCA4(uint64_t *a1)
{
  uint64_t v1;

  sub_19CDEC240(a1, *(void (**)(void **__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t static NilState.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_19CDECCC0()
{
  return 0;
}

uint64_t sub_19CDECCCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_19CDECCF8()
{
  sub_19CDECE0C();
  return sub_19CFE0A48();
}

uint64_t sub_19CDECD20()
{
  sub_19CDECE0C();
  return sub_19CFE0A54();
}

uint64_t NilState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDECE0C();
  sub_19CFE0A24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_19CDECE0C()
{
  unint64_t result;

  result = qword_1EE43EDC8;
  if (!qword_1EE43EDC8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0555B8, &type metadata for NilState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EDC8);
  }
  return result;
}

uint64_t NilState.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

unint64_t sub_19CDECE74(uint64_t a1)
{
  unint64_t result;

  result = sub_19CDECE98();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_19CDECE98()
{
  unint64_t result;

  result = qword_1EE436CC8;
  if (!qword_1EE436CC8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for NilState, &type metadata for NilState);
    atomic_store(result, (unint64_t *)&qword_1EE436CC8);
  }
  return result;
}

uint64_t sub_19CDECEDC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19CDECF00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDECE0C();
  sub_19CFE0A24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t dispatch thunk of Stateful.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for NilState()
{
  return &type metadata for NilState;
}

ValueMetadata *type metadata accessor for NilState.CodingKeys()
{
  return &type metadata for NilState.CodingKeys;
}

unint64_t sub_19CDECFF0()
{
  unint64_t result;

  result = qword_1EE43EDD0;
  if (!qword_1EE43EDD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D055568, &type metadata for NilState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EDD0);
  }
  return result;
}

unint64_t sub_19CDED038()
{
  unint64_t result;

  result = qword_1EE43EDD8;
  if (!qword_1EE43EDD8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D055590, &type metadata for NilState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EDD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultLocalizerFormattingStringsDataSource()
{
  return &type metadata for DefaultLocalizerFormattingStringsDataSource;
}

unint64_t sub_19CDED090(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v2 = 0x2E6F6741656D6954;
  v3 = sub_19CFDF080();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v19 - v10;
  v12 = type metadata accessor for LocalizerFormattingKey();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CDED324(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v15, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v11, v3);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
    if (v16 == *MEMORY[0x1E0CB1158])
    {
LABEL_3:
      v2 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
      return v2;
    }
    if (v16 == *MEMORY[0x1E0CB1160])
    {
      v2 = 0xD000000000000011;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
      return v2;
    }
    if (v16 == *MEMORY[0x1E0CB1130])
      goto LABEL_7;
    if (v16 == *MEMORY[0x1E0CB1140])
      goto LABEL_3;
    if (v16 == *MEMORY[0x1E0CB1178])
    {
      v2 = 0xD000000000000012;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
      return v2;
    }
    if (v16 == *MEMORY[0x1E0CB1188])
    {
LABEL_7:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
      return v2;
    }
    v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    if (v16 == *MEMORY[0x1E0CB10F8])
      v2 = 0xD000000000000010;
    else
      v17(v7, v3);
    v17(v11, v3);
  }
  return v2;
}

uint64_t sub_19CDED324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocalizerFormattingKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_19CDED368(char a1)
{
  CGColor *v1;
  CGColor *v2;
  CGColorSpace *v4;
  CGColorSpace *v5;
  CGColorSpaceModel Model;
  CGColorRef CopyByMatchingToColorSpace;
  CGColorSpace *DeviceRGB;
  uint64_t v9;
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  int v15;
  int v16;
  int v17;
  double v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = CGColorGetColorSpace(v1);
  if (v4 && (v5 = v4, Model = CGColorSpaceGetModel(v4), v5, Model == kCGColorSpaceModelRGB))
  {
    CopyByMatchingToColorSpace = v2;
  }
  else
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(DeviceRGB, kCGRenderingIntentDefault, v2, 0);

    if (!CopyByMatchingToColorSpace)
      return;
  }
  v9 = sub_19CFDFCE0();

  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = *(double *)(v9 + 32) * 255.0;
      if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) != 0)
      {
        if (v11 > -1.0)
        {
          if (v11 < 256.0)
          {
            if (v10 >= 2)
            {
              v12 = *(double *)(v9 + 40) * 255.0;
              if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) != 0)
              {
                if (v12 > -1.0)
                {
                  if (v12 < 256.0)
                  {
                    if (v10 >= 3)
                    {
                      v13 = *(double *)(v9 + 48);
                      swift_bridgeObjectRelease();
                      v14 = v13 * 255.0;
                      if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) != 0)
                      {
                        if (v14 > -1.0)
                        {
                          if (v14 < 256.0)
                          {
                            v15 = (int)v11;
                            v16 = (int)v12;
                            v17 = (int)v14;
                            if ((a1 & 1) == 0)
                            {
                              __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
                              v23 = swift_allocObject();
                              v24 = MEMORY[0x1E0DEDE70];
                              *(_OWORD *)(v23 + 16) = xmmword_19D050760;
                              v25 = MEMORY[0x1E0DEDEC8];
                              *(_QWORD *)(v23 + 56) = v24;
                              *(_QWORD *)(v23 + 64) = v25;
                              *(_BYTE *)(v23 + 32) = v15;
                              *(_QWORD *)(v23 + 96) = v24;
                              *(_QWORD *)(v23 + 104) = v25;
                              *(_BYTE *)(v23 + 72) = v16;
                              *(_QWORD *)(v23 + 136) = v24;
                              *(_QWORD *)(v23 + 144) = v25;
                              *(_BYTE *)(v23 + 112) = v17;
                              goto LABEL_25;
                            }
                            v18 = CGColorGetAlpha(v2) * 255.0;
                            if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) != 0)
                            {
                              if (v18 > -1.0)
                              {
                                if (v18 < 256.0)
                                {
                                  v19 = (int)v18;
                                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
                                  v20 = swift_allocObject();
                                  *(_OWORD *)(v20 + 16) = xmmword_19D055650;
                                  v21 = MEMORY[0x1E0DEDE70];
                                  v22 = MEMORY[0x1E0DEDEC8];
                                  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEDE70];
                                  *(_QWORD *)(v20 + 64) = v22;
                                  *(_BYTE *)(v20 + 32) = v15;
                                  *(_QWORD *)(v20 + 96) = v21;
                                  *(_QWORD *)(v20 + 104) = v22;
                                  *(_BYTE *)(v20 + 72) = v16;
                                  *(_QWORD *)(v20 + 136) = v21;
                                  *(_QWORD *)(v20 + 144) = v22;
                                  *(_BYTE *)(v20 + 112) = v17;
                                  *(_QWORD *)(v20 + 176) = v21;
                                  *(_QWORD *)(v20 + 184) = v22;
                                  *(_BYTE *)(v20 + 152) = v19;
LABEL_25:
                                  sub_19CFDF5A8();
                                  return;
                                }
                                goto LABEL_40;
                              }
LABEL_39:
                              __break(1u);
LABEL_40:
                              __break(1u);
                              return;
                            }
LABEL_38:
                            __break(1u);
                            goto LABEL_39;
                          }
LABEL_37:
                          __break(1u);
                          goto LABEL_38;
                        }
LABEL_36:
                        __break(1u);
                        goto LABEL_37;
                      }
LABEL_35:
                      __break(1u);
                      goto LABEL_36;
                    }
LABEL_34:
                    __break(1u);
                    goto LABEL_35;
                  }
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t URL.withCacheBuster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(uint64_t *, uint64_t, uint64_t);
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  __int128 v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  _BYTE v80[32];
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v3, v4);
  v76 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDEFA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDEAA4();
  *(_QWORD *)&v78 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v77 = (char *)&v70 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC78);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_19CFDEB7C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24);
  *(_QWORD *)&v79 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_19CFDECC0() & 1) != 0)
  {
    v26 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, v1, v26);
  }
  sub_19CFDEAEC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    v28 = v1;
    v29 = a1;
    sub_19CCECFE4((uint64_t)v21, &qword_1EE43EC78);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v30 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v32 = swift_allocObject();
    v79 = xmmword_19D0522A0;
    v33 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v32 + 16) = xmmword_19D0522A0;
    v85 = v33;
    v83 = 0xD00000000000002BLL;
    v84 = 0x800000019D06F200;
    v81 = 0u;
    v82 = 0u;
    v34 = v30;
    sub_19CD40658((uint64_t)&v83, (uint64_t)&v81);
    *(_BYTE *)(v32 + 64) = 0;
    v35 = v82;
    *(_OWORD *)(v32 + 32) = v81;
    *(_OWORD *)(v32 + 48) = v35;
    *(_QWORD *)(v31 + 32) = v32;
    v36 = sub_19CFDEDE0();
    v85 = v36;
    v37 = __swift_allocate_boxed_opaque_existential_2Tm(&v83);
    v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    v38(v37, v1, v36);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v79;
    sub_19CD40794((uint64_t)&v83, (uint64_t)v80);
    v81 = 0u;
    v82 = 0u;
    sub_19CD40658((uint64_t)v80, (uint64_t)&v81);
    *(_BYTE *)(v39 + 64) = 2;
    v40 = v82;
    *(_OWORD *)(v39 + 32) = v81;
    *(_OWORD *)(v39 + 48) = v40;
    *(_QWORD *)(v31 + 40) = v39;
    sub_19CCECFE4((uint64_t)&v83, &qword_1ECEB3370);
    *(_QWORD *)&v81 = v34;
    LOBYTE(v83) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v83);

    swift_bridgeObjectRelease();
    v41 = v29;
    v42 = v28;
    v43 = v36;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(v41, v42, v43);
  }
  v75 = v11;
  v71 = v1;
  v73 = a1;
  v74 = v23;
  v44 = *(void (**)(void))(v23 + 32);
  v72 = v22;
  v45 = v79;
  v44();
  sub_19CFDF578();
  sub_19CFDEF9C();
  sub_19CFDEF90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v46 = v77;
  sub_19CFDEA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = sub_19CFDEAD4();
  if (v47)
  {
    v48 = v47;
    v49 = v78;
    v50 = v75;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v14, v46, v75);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v48 = sub_19CED5A80(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
    v52 = *(_QWORD *)(v48 + 16);
    v51 = *(_QWORD *)(v48 + 24);
    v53 = v72;
    if (v52 >= v51 >> 1)
      v48 = sub_19CED5A80(v51 > 1, v52 + 1, 1, v48);
    *(_QWORD *)(v48 + 16) = v52 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v48+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v52, v14, v50);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4412A0);
    v49 = v78;
    v54 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_19D0522A0;
    v50 = v75;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 16))(v55 + v54, v46, v75);
    v53 = v72;
  }
  v56 = (uint64_t)v76;
  sub_19CFDEAE0();
  sub_19CFDEAF8();
  v57 = sub_19CFDEDE0();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57);
  v60 = v74;
  if (v59 == 1)
  {
    sub_19CCECFE4(v56, (uint64_t *)&unk_1ECEB3030);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v61 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v63 = swift_allocObject();
    v78 = xmmword_19D0522A0;
    *(_OWORD *)(v63 + 16) = xmmword_19D0522A0;
    v85 = MEMORY[0x1E0DEA968];
    v83 = 0xD00000000000002CLL;
    v84 = 0x800000019D06F230;
    v81 = 0u;
    v82 = 0u;
    v64 = v61;
    sub_19CD40658((uint64_t)&v83, (uint64_t)&v81);
    *(_BYTE *)(v63 + 64) = 0;
    v65 = v82;
    *(_OWORD *)(v63 + 32) = v81;
    *(_OWORD *)(v63 + 48) = v65;
    *(_QWORD *)(v62 + 32) = v63;
    v85 = v57;
    v66 = __swift_allocate_boxed_opaque_existential_2Tm(&v83);
    v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 16);
    v67 = v71;
    v38(v66, v71, v57);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v78;
    sub_19CD40794((uint64_t)&v83, (uint64_t)v80);
    v81 = 0u;
    v82 = 0u;
    sub_19CD40658((uint64_t)v80, (uint64_t)&v81);
    *(_BYTE *)(v68 + 64) = 2;
    v69 = v82;
    *(_OWORD *)(v68 + 32) = v81;
    *(_OWORD *)(v68 + 48) = v69;
    *(_QWORD *)(v62 + 40) = v68;
    sub_19CCECFE4((uint64_t)&v83, &qword_1ECEB3370);
    *(_QWORD *)&v81 = v64;
    LOBYTE(v83) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v62, (JetEngine::LogMessageLevel)&v83);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v75);
    (*(void (**)(_QWORD, uint64_t))(v74 + 8))(v79, v53);
    v41 = v73;
    v42 = v67;
    v43 = v57;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(v41, v42, v43);
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v50);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v45, v53);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v73, v56, v57);
}

uint64_t sub_19CDEDE38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C1C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

JetEngine::ActionMetrics __swiftcall ActionMetrics.init(data:custom:)(Swift::OpaquePointer data, JetEngine::ScalarDictionary custom)
{
  Swift::OpaquePointer *v2;
  void *v3;
  JetEngine::ActionMetrics result;

  v3 = *(void **)custom.values._rawValue;
  v2->_rawValue = data._rawValue;
  v2[1]._rawValue = v3;
  result.custom = custom;
  result.data = data;
  return result;
}

uint64_t ActionMetrics.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActionMetrics.data.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ActionMetrics.data.modify())()
{
  return nullsub_1;
}

uint64_t ActionMetrics.custom.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t ActionMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*ActionMetrics.custom.modify())()
{
  return nullsub_1;
}

JetEngine::ActionMetrics __swiftcall ActionMetrics.mergingWith(_:)(JetEngine::ActionMetrics a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  void *v11;
  void *v12;
  JetEngine::ActionMetrics result;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v4 = *((_QWORD *)a1.data._rawValue + 1);
  v5 = *(_QWORD *)(v2 + 8);
  v15 = MEMORY[0x1E0DEE9D8];
  v6 = swift_bridgeObjectRetain();
  sub_19CDC7070(v6);
  v7 = swift_bridgeObjectRetain();
  sub_19CDC7070(v7);
  v8 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = v5;
  sub_19CDEE6E8(v4, (uint64_t)sub_19CDD58F8, 0, isUniquelyReferenced_nonNull_native, &v14);
  v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (void *)swift_bridgeObjectRelease();
  *v3 = v8;
  v3[1] = v10;
  result.custom.values._rawValue = v12;
  result.data._rawValue = v11;
  return result;
}

void *sub_19CDEDFF4(uint64_t a1, uint64_t a2)
{
  return ActionMetrics.mergingWith(_:)(*(JetEngine::ActionMetrics *)&a1).data._rawValue;
}

uint64_t sub_19CDEE018(char *a1, char *a2)
{
  return sub_19CE81DC8(*a1, *a2);
}

uint64_t sub_19CDEE024()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CDEE098()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CDEE0E8()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CDEE158@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_19CDEE1B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (*v1)
    v2 = 0x6D6F74737563;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19CDEE1E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74737563;
  else
    return 1635017060;
}

uint64_t sub_19CDEE218@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_19CDEE278()
{
  sub_19CDEEA10();
  return sub_19CFE0A48();
}

uint64_t sub_19CDEE2A0()
{
  sub_19CDEEA10();
  return sub_19CFE0A54();
}

uint64_t ActionMetrics.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDEEA10();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  LOBYTE(v15) = 0;
  if ((sub_19CFE04CC() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE00);
    v14 = 0;
    sub_19CD09560(&qword_1EE43EE08, &qword_1EE43EE00, sub_19CDEEA54, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    v11 = v15;
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  LOBYTE(v15) = 1;
  if ((sub_19CFE04CC() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
    v14 = 1;
    sub_19CDEEB24(&qword_1EE43EDF8, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v12 = v15;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v12 = MEMORY[0x1E0DEE9E0];
  }
  *a2 = v11;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ActionMetrics.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDEEA10();
  sub_19CFE0A24();
  v13 = v9;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE00);
  sub_19CD09560(&qword_1EE43EE30, &qword_1EE43EE00, sub_19CDEEABC, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0568();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
    sub_19CDEEB24(&qword_1EE43EE48, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CDEE6C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActionMetrics.init(from:)(a1, a2);
}

uint64_t sub_19CDEE6D4(_QWORD *a1)
{
  return ActionMetrics.encode(to:)(a1);
}

uint64_t sub_19CDEE6E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v57 = a1;
  v58 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v59 = v8;
  v60 = 0;
  v61 = v11 & v9;
  v62 = a2;
  v63 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE249DC((uint64_t)&v52);
  v12 = v53;
  if (!v53)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  v13 = v52;
  v14 = v54;
  v51 = v55;
  v15 = v56;
  v16 = (_QWORD *)*a5;
  v18 = sub_19CD3FD1C(v52, v53);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      v25 = (_QWORD *)*a5;
      if ((v17 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      sub_19CE18FAC();
      v25 = (_QWORD *)*a5;
      if ((v22 & 1) == 0)
        goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_19CD460C4(v21, a4 & 1);
  v23 = sub_19CD3FD1C(v13, v12);
  if ((v22 & 1) == (v24 & 1))
  {
    v18 = v23;
    v25 = (_QWORD *)*a5;
    if ((v22 & 1) == 0)
    {
LABEL_14:
      v25[(v18 >> 6) + 8] |= 1 << v18;
      v27 = (uint64_t *)(v25[6] + 16 * v18);
      *v27 = v13;
      v27[1] = v12;
      v28 = v25[7] + 24 * v18;
      *(_QWORD *)v28 = v14;
      *(_QWORD *)(v28 + 8) = v51;
      *(_BYTE *)(v28 + 16) = v15;
      v29 = v25[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (!v30)
      {
        v25[2] = v31;
        while (1)
        {
          sub_19CE249DC((uint64_t)&v52);
          v36 = v53;
          if (!v53)
            goto LABEL_26;
          v37 = v52;
          v38 = v54;
          v39 = v55;
          v15 = v56;
          v40 = (_QWORD *)*a5;
          v42 = sub_19CD3FD1C(v52, v53);
          v43 = v40[2];
          v44 = (v41 & 1) == 0;
          v45 = v43 + v44;
          if (__OFADD__(v43, v44))
            goto LABEL_27;
          v46 = v41;
          if (v40[3] < v45)
          {
            sub_19CD460C4(v45, 1);
            v47 = sub_19CD3FD1C(v37, v36);
            if ((v46 & 1) != (v48 & 1))
              goto LABEL_29;
            v42 = v47;
          }
          v49 = (_QWORD *)*a5;
          if ((v46 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v26 = v49[7] + 24 * v42;
            sub_19CD5EAF0(*(_QWORD *)v26, *(_QWORD *)(v26 + 8), *(_BYTE *)(v26 + 16));
            *(_QWORD *)v26 = v38;
            *(_QWORD *)(v26 + 8) = v39;
LABEL_16:
            *(_BYTE *)(v26 + 16) = v15;
          }
          else
          {
            v49[(v42 >> 6) + 8] |= 1 << v42;
            v32 = (uint64_t *)(v49[6] + 16 * v42);
            *v32 = v37;
            v32[1] = v36;
            v33 = v49[7] + 24 * v42;
            *(_QWORD *)v33 = v38;
            *(_QWORD *)(v33 + 8) = v39;
            *(_BYTE *)(v33 + 16) = v15;
            v34 = v49[2];
            v30 = __OFADD__(v34, 1);
            v35 = v34 + 1;
            if (v30)
              goto LABEL_28;
            v49[2] = v35;
          }
        }
      }
      goto LABEL_28;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v26 = v25[7] + 24 * v18;
    sub_19CD5EAF0(*(_QWORD *)v26, *(_QWORD *)(v26 + 8), *(_BYTE *)(v26 + 16));
    *(_QWORD *)v26 = v14;
    *(_QWORD *)(v26 + 8) = v51;
    goto LABEL_16;
  }
LABEL_29:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

unint64_t sub_19CDEEA10()
{
  unint64_t result;

  result = qword_1EE43EDE8;
  if (!qword_1EE43EDE8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0557F4, &type metadata for ActionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EDE8);
  }
  return result;
}

uint64_t sub_19CDEEA54()
{
  return sub_19CD09560(&qword_1EE43EE10, &qword_1EE43EE18, (uint64_t (*)(void))sub_19CDEEA78, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CDEEA78()
{
  unint64_t result;

  result = qword_1EE43EE20;
  if (!qword_1EE43EE20)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsData, &type metadata for MetricsData);
    atomic_store(result, (unint64_t *)&qword_1EE43EE20);
  }
  return result;
}

uint64_t sub_19CDEEABC()
{
  return sub_19CD09560(&qword_1EE43EE38, &qword_1EE43EE18, (uint64_t (*)(void))sub_19CDEEAE0, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CDEEAE0()
{
  unint64_t result;

  result = qword_1EE43EE40;
  if (!qword_1EE43EE40)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsData, &type metadata for MetricsData);
    atomic_store(result, (unint64_t *)&qword_1EE43EE40);
  }
  return result;
}

uint64_t sub_19CDEEB24(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43EDF0);
    v8 = a2;
    result = MEMORY[0x1A1ADBD7C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionMetrics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CDEEBD0 + 4 * byte_19D055669[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CDEEC04 + 4 * byte_19D055664[v4]))();
}

uint64_t sub_19CDEEC04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDEEC0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDEEC14);
  return result;
}

uint64_t sub_19CDEEC20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDEEC28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CDEEC2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDEEC34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMetrics.CodingKeys()
{
  return &type metadata for ActionMetrics.CodingKeys;
}

unint64_t sub_19CDEEC54()
{
  unint64_t result;

  result = qword_1EE43EE50;
  if (!qword_1EE43EE50)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0557CC, &type metadata for ActionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EE50);
  }
  return result;
}

unint64_t sub_19CDEEC9C()
{
  unint64_t result;

  result = qword_1EE43EE58;
  if (!qword_1EE43EE58)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D055704, &type metadata for ActionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EE58);
  }
  return result;
}

unint64_t sub_19CDEECE4()
{
  unint64_t result;

  result = qword_1EE43EE60;
  if (!qword_1EE43EE60)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05572C, &type metadata for ActionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43EE60);
  }
  return result;
}

uint64_t static Continuous._unwrapOnlyElement<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;

  v34 = a5;
  v8 = type metadata accessor for _AsyncJust(255, a2, a3, a4);
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v33 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v33 - v17;
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))((char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v21);
  v26 = type metadata accessor for Continuous(0, a2, v24, v25);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v38[0] = v35;
    v38[1] = v36;
    v39 = v37;
    Continuous.base.getter((uint64_t *)&v35);
    (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v38, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE68);
    v27 = swift_dynamicCast();
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v29 = v34;
    if ((v27 & 1) != 0)
    {
      v28(v13, 0, 1, v8);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, v8);
      v30 = *(_QWORD *)(a2 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v18, a2);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, a2);
    }
    v28(v13, 1, 1, v8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    v32 = sub_19CFDFF5C();
    v35 = 0u;
    v36 = 0u;
    v37 = 0;
    (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(&v35, v32);
    v29 = v34;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v29, 1, 1, a2);
}

uint64_t type metadata accessor for Continuous(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Continuous);
}

uint64_t Continuous.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CDEEF98()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_mutable_project_boxed_opaque_existential_1(*(_QWORD *)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_19CDEF010;
  return sub_19CFDF9E0();
}

uint64_t sub_19CDEF010()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CDEF058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_19CDEF0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_19CDEF150;
  return sub_19CFDF9F8();
}

uint64_t sub_19CDEF150()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t Continuous.init<A>(contentsOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;

  v7 = type metadata accessor for _BoxedAsyncSequence(0, a2, a3, a3);
  a4[3] = v7;
  a4[4] = MEMORY[0x1A1ADBD7C](&unk_19D055AF0, v7);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_2Tm, a1, a2);
}

uint64_t Continuous.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v18;

  v8 = type metadata accessor for _AsyncJust(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v18 - v11;
  _AsyncJust.init(_:)(a1, a2, (uint64_t)&v18 - v11);
  v13 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _AsyncJust<A>, v8);
  v15 = type metadata accessor for _BoxedAsyncSequence(0, v8, v13, v14);
  a5[3] = v15;
  a5[4] = MEMORY[0x1A1ADBD7C](&unk_19D055AF0, v15);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a5);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_2Tm, v12, v8);
}

uint64_t Continuous.init(_:makeElement:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_2Tm;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v8 = sub_19CFDFAF4();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = &v22[-v10];
  v12 = sub_19CFDFB54();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = &v22[-v15];
  v23 = a3;
  v24 = a1;
  v25 = a2;
  sub_19CDEF868((uint64_t)v11);
  sub_19CFDFB60();
  swift_release();
  v17 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DF0AE0], v12);
  v19 = type metadata accessor for _BoxedAsyncSequence(0, v12, v17, v18);
  a4[3] = v19;
  a4[4] = MEMORY[0x1A1ADBD7C](&unk_19D055AF0, v19);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return (*(uint64_t (**)(uint64_t *, _BYTE *, uint64_t))(v13 + 32))(boxed_opaque_existential_2Tm, v16, v12);
}

uint64_t sub_19CDEF44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v8 = sub_19CFDFB18();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v21 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = a4;
  *((_QWORD *)v19 + 5) = a2;
  *((_QWORD *)v19 + 6) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v18], v12, v8);
  swift_retain();
  sub_19CE72184((uint64_t)v16, (uint64_t)&unk_1EE43F010, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_19CDEF5C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v7[4] = a6;
  v7[5] = a7;
  v7[6] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v10 = sub_19CFDFAE8();
  v7[7] = v10;
  v7[8] = *(_QWORD *)(v10 - 8);
  v7[9] = swift_task_alloc();
  v7[10] = *(_QWORD *)(a7 - 8);
  v7[11] = swift_task_alloc();
  v11 = swift_task_alloc();
  v7[12] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v7[13] = v12;
  *v12 = v7;
  v12[1] = sub_19CDEF6A8;
  return v14(v11);
}

uint64_t sub_19CDEF6A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CDEF70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 88), v1, v6);
  sub_19CFDFB18();
  sub_19CFDFB00();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  *(_QWORD *)(v0 + 24) = 0;
  sub_19CFDFB0C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDEF7F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  sub_19CFDFB18();
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDEF868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF0A50];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v3 = sub_19CFDFAF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t Continuous._containsSingleElement.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v12[5];

  v4 = type metadata accessor for _AsyncJust(0, *(_QWORD *)(a1 + 16), a3, a4);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v12[-1] - v7;
  Continuous.base.getter(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE68);
  v9 = swift_dynamicCast();
  if ((_DWORD)v9)
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9;
}

uint64_t Continuous.base.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 40);
  a1[3] = swift_getAssociatedTypeWitness();
  a1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return v5(v3, v4);
}

uint64_t type metadata accessor for _BoxedAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _BoxedAsyncSequence);
}

uint64_t sub_19CDEFA24(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CDEF44C(a1, v1[3], v1[4], v1[2]);
}

uint64_t Continuous.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 56))(v6, v3, v4);
  return sub_19CCD14C4(v6, a1);
}

uint64_t Continuous.description.getter()
{
  swift_getExtendedExistentialTypeMetadata_unique();
  sub_19CFE0670();
  return 0;
}

uint64_t sub_19CDEFAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  Continuous.makeAsyncIterator()(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t Continuous._isEqual(to:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4) & 1;
}

uint64_t Continuous<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;

  v19 = a5;
  v20 = a3;
  v7 = type metadata accessor for _AsyncJust(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v18 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v5)
  {
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v22 = v20;
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> _AsyncJust<A>, v7, &v22);
    sub_19CFE06DC();
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
    v16 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _AsyncJust<A>, v7);
    Continuous.init<A>(contentsOf:)((uint64_t)v11, v7, v16, v19);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CDEFCE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return Continuous<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4, a5);
}

uint64_t Continuous<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;

  v26 = a3;
  v5 = type metadata accessor for _AsyncJust(255, *(_QWORD *)(a2 + 16), a3, a4);
  v6 = sub_19CFDFF5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v25 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v25 - v14;
  Continuous.base.getter(v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EE68);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v16)
  {
    v17(v10, 0, 1, v5);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, v5);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    v31 = v26;
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> _AsyncJust<A>, v5, &v31);
    sub_19CFE073C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v5);
  }
  else
  {
    v17(v10, 1, 1, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v18 = sub_19CFE01D8();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
    Continuous.base.getter(v29);
    v21 = v30;
    v22 = __swift_project_boxed_opaque_existential_1(v29, v30);
    v20[3] = v21;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v20);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v22, v21);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC4B0], v18);
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
}

uint64_t sub_19CDF001C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Continuous<A>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

uint64_t static IntentOutcome.satisfied<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = MEMORY[0x1E0C80A78](a1, a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  return Continuous.init(_:)((uint64_t)v7, a2, v9, v10, a3);
}

uint64_t static IntentOutcome.satisfied<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v9, v7);
  return Continuous.init<A>(contentsOf:)((uint64_t)v9, a2, a3, a4);
}

uint64_t StaticIntent.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[5];

  Continuous.init(_:)(a1, a2, a3, a4, v11);
  v9 = type metadata accessor for Continuous(0, a2, v7, v8);
  return StaticIntent.init(_:)((uint64_t)v11, v9, a5);
}

uint64_t StaticIntent.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Continuous.init<A>(contentsOf:)(a1, a2, a3, v13);
  v11 = type metadata accessor for Continuous(0, AssociatedTypeWitness, v9, v10);
  return StaticIntent.init(_:)((uint64_t)v13, v11, a4);
}

uint64_t sub_19CDF0214()
{
  return MEMORY[0x1E0DEDB38];
}

void sub_19CDF0220()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t type metadata accessor for Continuous.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Continuous.AsyncIterator);
}

uint64_t sub_19CDF0244(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDF02F4 + 4 * byte_19D055850[(v7 - 1)]))();
}

void sub_19CDF0344(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_19CDF04F4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_19CD579FC;
  return sub_19CFDF9E0();
}

uint64_t sub_19CDF05AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_19CD579FC;
  return sub_19CDF04F4();
}

uint64_t sub_19CDF060C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_19CDF104C;
  return sub_19CFDF9F8();
}

uint64_t sub_19CDF06A4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v10[4];
  uint64_t v11[4];

  v11[3] = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v2, a2);
  v6 = a1[3];
  v7 = __swift_project_boxed_opaque_existential_1(a1, v6);
  v10[3] = v6;
  v8 = __swift_allocate_boxed_opaque_existential_2Tm(v10);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v7, v6);
  LOBYTE(v6) = _isStructurallyEqual(_:to:with:at:)(v11, v10, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v6 & 1;
}

uint64_t sub_19CDF0754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, v3, v5, v14);
  sub_19CFDFADC();
  v18 = type metadata accessor for _BoxedAsyncSequence._BoxedAsyncIterator(0, v5, v10, v17);
  a3[3] = v18;
  a3[4] = MEMORY[0x1A1ADBD7C](&unk_19D055B80, v18);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_2Tm, v16, AssociatedTypeWitness);
}

uint64_t sub_19CDF087C()
{
  sub_19CFE0670();
  return 0;
}

uint64_t sub_19CDF08BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t type metadata accessor for _BoxedAsyncSequence._BoxedAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _BoxedAsyncSequence._BoxedAsyncIterator);
}

uint64_t sub_19CDF08EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v1 = sub_19CFDFB18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19CDF0988(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDFB18() - 8) + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v5 + 56) & ~v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_19CCBE344;
  return sub_19CDEF5C0(a1, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_19CDF0A4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CDF0AC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19CDF0B5C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_19CDF0BA8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDF0C00(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDF0C58(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDF0CB0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CDF0D08(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_19CDF0E48(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_19CDF101C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A1ADBD7C](&unk_19D055B38);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

JetEngine::ImpressionsMetricsFieldsProvider __swiftcall ImpressionsMetricsFieldsProvider.init(impressionsTrackerFormat:)(JetEngine::ImpressionsMetricsFieldsProvider impressionsTrackerFormat)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)impressionsTrackerFormat.impressionsTrackerFormat;
  return impressionsTrackerFormat;
}

void ImpressionsMetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void ImpressionsMetricsFieldsProvider.addMetricsFields(into:using:)(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = sub_19CFDEF84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = *v2;
  swift_bridgeObjectRetain();
  v12 = sub_19CDF2194(0xD000000000000026, 0x800000019D06F290, v10);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (!v12)
  {
    swift_bridgeObjectRetain();
    sub_19CDF1ACC(0xD000000000000026, 0x800000019D06F2C0, v10, (char *)&v41);
    swift_bridgeObjectRelease();
    if (!(_BYTE)v41)
    {
      if (qword_1EE439D00 != -1)
        swift_once();
      if ((byte_1EE439CF0 & 1) == 0)
      {
        sub_19CFA72B0((unint64_t)"JetEngine/ImpressionsMetricsFieldsProvider.swift", 0x30uLL, 2, 0x24uLL);
        return;
      }
    }
    swift_bridgeObjectRetain();
    sub_19CDF1ACC(0xD000000000000026, 0x800000019D06F2C0, v10, (char *)&v41);
    swift_bridgeObjectRelease();
    if (v41 == 1)
    {
      if (qword_1ECEB31D8 != -1)
        swift_once();
      v23 = (void *)qword_1ECEB30F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19D052350;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v25 = swift_allocObject();
      v40 = xmmword_19D0522A0;
      v26 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      v45 = v26;
      v43 = 0xD000000000000055;
      v44 = 0x800000019D06F380;
      v41 = 0u;
      v42 = 0u;
      v27 = v23;
      sub_19CD40658((uint64_t)&v43, (uint64_t)&v41);
      *(_BYTE *)(v25 + 64) = 0;
      v28 = v42;
      *(_OWORD *)(v25 + 32) = v41;
      *(_OWORD *)(v25 + 48) = v28;
      *(_QWORD *)(v24 + 32) = v25;
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v40;
      v45 = v26;
      v43 = 0xD000000000000043;
      v44 = 0x800000019D06F3E0;
      v41 = 0u;
      v42 = 0u;
      sub_19CD40658((uint64_t)&v43, (uint64_t)&v41);
      *(_BYTE *)(v29 + 64) = 0;
      v30 = v42;
      *(_OWORD *)(v29 + 32) = v41;
      *(_OWORD *)(v29 + 48) = v30;
      *(_QWORD *)(v24 + 40) = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_19CDF1ACC(0xD000000000000026, 0x800000019D06F2C0, v10, (char *)&v41);
      swift_bridgeObjectRelease();
      if (v41 != 2)
        return;
      if (qword_1ECEB31D8 != -1)
        swift_once();
      v31 = (void *)qword_1ECEB30F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v24 = swift_allocObject();
      v40 = xmmword_19D0522A0;
      *(_OWORD *)(v24 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v32 = swift_allocObject();
      v33 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v32 + 16) = v40;
      v45 = v33;
      v43 = 0xD000000000000087;
      v44 = 0x800000019D06F2F0;
      v41 = 0u;
      v42 = 0u;
      v27 = v31;
      sub_19CD40658((uint64_t)&v43, (uint64_t)&v41);
      *(_BYTE *)(v32 + 64) = 0;
      v34 = v42;
      *(_OWORD *)(v32 + 32) = v41;
      *(_OWORD *)(v32 + 48) = v34;
      *(_QWORD *)(v24 + 32) = v32;
    }
    *(_QWORD *)&v41 = v27;
    LOBYTE(v43) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)&v43);

    swift_bridgeObjectRelease();
    return;
  }
  ObjectType = swift_getObjectType();
  LOBYTE(v43) = v11;
  sub_19CFDEF78();
  (*(void (**)(__int128 *__return_ptr, unint64_t *, char *, uint64_t, uint64_t))(v14 + 64))(&v41, &v43, v9, ObjectType, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v46 = *((_QWORD *)&v41 + 1);
  v16 = v41;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
  *((_QWORD *)&v42 + 1) = v17;
  *(_QWORD *)&v41 = v16;
  v18 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v18);
  v20 = v11;
  v21 = *(void (**)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 16);
  swift_bridgeObjectRetain();
  v22 = v40;
  v21(&v41, 0x6973736572706D69, 0xEB00000000736E6FLL, v18, v19);
  if (v22)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v40 = v20;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
    *((_QWORD *)&v42 + 1) = v17;
    *(_QWORD *)&v41 = v46;
    v35 = *(_QWORD *)(a1 + 24);
    v36 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v35);
    v37 = *(void (**)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t))(v36 + 16);
    swift_bridgeObjectRetain();
    v37(&v41, 0x4363696D616E7964, 0xEE007365676E6168, v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
    *((_QWORD *)&v42 + 1) = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v41 = v40 + 3;
    v38 = *(_QWORD *)(a1 + 24);
    v39 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v38);
    (*(void (**)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t))(v39 + 16))(&v41, 0x726556746E657665, 0xEC0000006E6F6973, v38, v39);
    swift_unknownObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
}

uint64_t sub_19CDF1678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[4];
  _QWORD *v43;
  _OWORD v44[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B08);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a3 + 16))
  {
    v39 = 0u;
    v40 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v12 = sub_19CD3FD1C(a1, a2);
  if ((v13 & 1) == 0)
  {
    v39 = 0u;
    v40 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v12, (uint64_t)&v39);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    v20 = sub_19CFDEFA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  sub_19CD433C0(&v39, v44);
  sub_19CD436B0((uint64_t)v44, (uint64_t)&v39);
  v14 = sub_19CFDEFA8();
  v15 = swift_dynamicCast();
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if ((v15 & 1) == 0)
  {
    v17(v11, 1, 1, v14);
    goto LABEL_11;
  }
  v17(v11, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v14) == 1)
  {
LABEL_11:
    sub_19CCECFE4((uint64_t)v11, &qword_1EE439B08);
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v22 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_19D052350;
    v24 = v22;
    v43 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
    v25._object = (void *)0x800000019D06F470;
    v25._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    v42[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F0F8);
    v42[0] = a1;
    v42[1] = a2;
    sub_19CD40794((uint64_t)v42, (uint64_t)v38);
    v37 = 0u;
    v36 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v38, (uint64_t)&v36);
    v41 = 1;
    v39 = v36;
    v40 = v37;
    v26 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
    v28 = v26[2];
    v27 = v26[3];
    if (v28 >= v27 >> 1)
      v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
    v26[2] = v28 + 1;
    v29 = &v26[5 * v28];
    v30 = v39;
    v31 = v40;
    *((_BYTE *)v29 + 64) = v41;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    v43 = v26;
    sub_19CCECFE4((uint64_t)v42, &qword_1ECEB3370);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    *(_QWORD *)(v23 + 32) = v43;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v33 = swift_allocObject();
    v34 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v33 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v37 + 1) = v34;
    *(_QWORD *)&v36 = 0xD000000000000027;
    *((_QWORD *)&v36 + 1) = 0x800000019D06F490;
    v39 = 0u;
    v40 = 0u;
    sub_19CD40658((uint64_t)&v36, (uint64_t)&v39);
    *(_BYTE *)(v33 + 64) = 0;
    v35 = v40;
    *(_OWORD *)(v33 + 32) = v39;
    *(_OWORD *)(v33 + 48) = v35;
    *(_QWORD *)(v23 + 40) = v33;
    *(_QWORD *)&v39 = v24;
    LOBYTE(v36) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)&v36);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
    v18 = a4;
    v19 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v14);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v11, v14);
  v18 = a4;
  v19 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v14);
}

uint64_t sub_19CDF1ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t result;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  char v31;
  _QWORD v32[4];
  _QWORD *v33;
  _OWORD v34[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v29 = 0u;
    v30 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  if ((v9 & 1) == 0)
  {
    v29 = 0u;
    v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
  {
LABEL_9:
    result = sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
LABEL_10:
    v11 = 3;
    goto LABEL_11;
  }
  sub_19CD433C0(&v29, v34);
  sub_19CD436B0((uint64_t)v34, (uint64_t)&v29);
  if (!swift_dynamicCast() || v26 == 3)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v12 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D052350;
    v14 = v12;
    v33 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
    v15._object = (void *)0x800000019D06F470;
    v15._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F0E0);
    v32[0] = a1;
    v32[1] = a2;
    sub_19CD40794((uint64_t)v32, (uint64_t)v28);
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
    v31 = 1;
    v29 = v26;
    v30 = v27;
    v16 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v29;
    v21 = v30;
    *((_BYTE *)v19 + 64) = v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v33 = v16;
    sub_19CCECFE4((uint64_t)v32, &qword_1ECEB3370);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(_QWORD *)(v13 + 32) = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v23 = swift_allocObject();
    v24 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v27 + 1) = v24;
    *(_QWORD *)&v26 = 0xD000000000000027;
    *((_QWORD *)&v26 + 1) = 0x800000019D06F490;
    v29 = 0u;
    v30 = 0u;
    sub_19CD40658((uint64_t)&v26, (uint64_t)&v29);
    *(_BYTE *)(v23 + 64) = 0;
    v25 = v30;
    *(_OWORD *)(v23 + 32) = v29;
    *(_OWORD *)(v23 + 48) = v25;
    *(_QWORD *)(v13 + 40) = v23;
    *(_QWORD *)&v29 = v14;
    LOBYTE(v26) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

    swift_bridgeObjectRelease();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    goto LABEL_10;
  }
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  v11 = v26;
LABEL_11:
  *a4 = v11;
  return result;
}

double sub_19CDF1E20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v8;
  char v9;
  __int128 v10;
  double result;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  _QWORD v29[4];
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v31 = 0u;
    v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  if ((v9 & 1) == 0)
  {
    v31 = 0u;
    v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_8:
    sub_19CCECFE4((uint64_t)&v31, &qword_1ECEB3370);
    goto LABEL_9;
  }
  sub_19CD433C0(&v31, v34);
  sub_19CD436B0((uint64_t)v34, (uint64_t)&v26);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    v10 = v32;
    *a4 = v31;
    a4[1] = v10;
    result = *(double *)&v33;
    a4[2] = v33;
    return result;
  }
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v12 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19D052350;
  v14 = v12;
  v30 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
  v15._object = (void *)0x800000019D06F470;
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F0F0);
  v29[0] = a1;
  v29[1] = a2;
  sub_19CD40794((uint64_t)v29, (uint64_t)v28);
  v26 = 0u;
  v27 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
  LOBYTE(v33) = 1;
  v31 = v26;
  v32 = v27;
  v16 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v19 = &v16[5 * v18];
  v20 = v31;
  v21 = v32;
  *((_BYTE *)v19 + 64) = v33;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  v30 = v16;
  sub_19CCECFE4((uint64_t)v29, &qword_1ECEB3370);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(_QWORD *)(v13 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v27 + 1) = v24;
  *(_QWORD *)&v26 = 0xD000000000000027;
  *((_QWORD *)&v26 + 1) = 0x800000019D06F490;
  v31 = 0u;
  v32 = 0u;
  sub_19CD40658((uint64_t)&v26, (uint64_t)&v31);
  *(_BYTE *)(v23 + 64) = 0;
  v25 = v32;
  *(_OWORD *)(v23 + 32) = v31;
  *(_OWORD *)(v23 + 48) = v25;
  *(_QWORD *)(v13 + 40) = v23;
  *(_QWORD *)&v31 = v14;
  LOBYTE(v26) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
LABEL_9:
  result = 0.0;
  a4[1] = 0u;
  a4[2] = 0u;
  *a4 = 0u;
  return result;
}

void sub_19CDF2180(uint64_t a1, uint64_t *a2)
{
  ImpressionsMetricsFieldsProvider.addMetricsFields(into:using:)(a1, a2);
}

uint64_t sub_19CDF2194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  void *v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  char v28;
  _QWORD v29[4];
  _QWORD *v30;
  _OWORD v31[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v26 = 0u;
    v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v6 = sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) == 0)
  {
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v26, &qword_1ECEB3370);
    return 0;
  }
  sub_19CD433C0(&v26, v31);
  sub_19CD436B0((uint64_t)v31, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A6D0);
  if (swift_dynamicCast() && (_QWORD)v23)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v9 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D052350;
  v11 = v9;
  v30 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
  v12._object = (void *)0x800000019D06F470;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F0E8);
  v29[0] = a1;
  v29[1] = a2;
  sub_19CD40794((uint64_t)v29, (uint64_t)v25);
  v23 = 0u;
  v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
  v28 = 1;
  v26 = v23;
  v27 = v24;
  v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v26;
  v18 = v27;
  *((_BYTE *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v30 = v13;
  sub_19CCECFE4((uint64_t)v29, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v20 = swift_allocObject();
  v21 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v24 + 1) = v21;
  *(_QWORD *)&v23 = 0xD000000000000027;
  *((_QWORD *)&v23 + 1) = 0x800000019D06F490;
  v26 = 0u;
  v27 = 0u;
  sub_19CD40658((uint64_t)&v23, (uint64_t)&v26);
  *(_BYTE *)(v20 + 64) = 0;
  v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v10 + 40) = v20;
  *(_QWORD *)&v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

uint64_t sub_19CDF24E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  void *v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  char v28;
  _QWORD v29[4];
  _QWORD *v30;
  _OWORD v31[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v26 = 0u;
    v27 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v6 = sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) == 0)
  {
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v26, &qword_1ECEB3370);
    return 0;
  }
  sub_19CD433C0(&v26, v31);
  sub_19CD436B0((uint64_t)v31, (uint64_t)&v26);
  type metadata accessor for ClickLocationTracker();
  if (swift_dynamicCast() && (_QWORD)v23)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v9 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D052350;
  v11 = v9;
  v30 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
  v12._object = (void *)0x800000019D06F470;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F100);
  v29[0] = a1;
  v29[1] = a2;
  sub_19CD40794((uint64_t)v29, (uint64_t)v25);
  v23 = 0u;
  v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
  v28 = 1;
  v26 = v23;
  v27 = v24;
  v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v26;
  v18 = v27;
  *((_BYTE *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v30 = v13;
  sub_19CCECFE4((uint64_t)v29, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v20 = swift_allocObject();
  v21 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v24 + 1) = v21;
  *(_QWORD *)&v23 = 0xD000000000000027;
  *((_QWORD *)&v23 + 1) = 0x800000019D06F490;
  v26 = 0u;
  v27 = 0u;
  sub_19CD40658((uint64_t)&v23, (uint64_t)&v26);
  *(_BYTE *)(v20 + 64) = 0;
  v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v10 + 40) = v20;
  *(_QWORD *)&v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

uint64_t storeEnumTagSinglePayload for ImpressionsMetricsFieldsProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CDF2880 + 4 * byte_19D055BA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CDF28B4 + 4 * byte_19D055BA0[v4]))();
}

uint64_t sub_19CDF28B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDF28BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CDF28C4);
  return result;
}

uint64_t sub_19CDF28D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CDF28D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CDF28DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CDF28E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsMetricsFieldsProvider()
{
  return &type metadata for ImpressionsMetricsFieldsProvider;
}

unint64_t sub_19CDF2900(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_19CFDF74C() != a1 || v9 != a2)
  {
    v10 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_19CFDF668();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_19CDF29EC(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1A1ADA390](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_19CDF2FD8();
      v6 = sub_19CFDFEF0();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x1A1ADA390](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_19CFDFEF0();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_19CFE0394();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_19CDF2B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  result = 0;
  while (*(_QWORD *)(a2 + 32 + 8 * result) != a1)
  {
    if (v2 == ++result)
      return 0;
  }
  return result;
}

Swift::tuple_key_String_value_String_optional __swiftcall CookieIterator.next()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t);
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  Swift::tuple_key_String_value_String_optional result;

  v1 = sub_19CFDEA14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = *v0;
  v15 = v0[1];
  if (v15 >= *(_QWORD *)(*v0 + 16))
    goto LABEL_22;
  if (v15 < 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v54 = v4;
  v55 = v0;
  v16 = v14 + 16 * v15;
  v18 = *(_QWORD *)(v16 + 32);
  v17 = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  sub_19CDF2900(61, 0xE100000000000000, v18, v17);
  if ((v19 & 1) != 0)
  {
LABEL_16:
    v56 = v18;
    v57 = v17;
    sub_19CD41144();
    v47 = sub_19CFE001C();
    if (v48)
    {
      v49 = v47;
      v50 = v48;
      swift_bridgeObjectRelease();
      v18 = v49;
      v17 = v50;
    }
    v43 = v55;
    v12 = 0;
    v46 = v15 + 1;
    v13 = 0xE000000000000000;
    v10 = v18;
    v11 = (void *)v17;
    goto LABEL_21;
  }
  v20 = sub_19CFDF764();
  v21 = MEMORY[0x1A1AD9838](v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  v56 = v21;
  v57 = v23;
  sub_19CFDE9FC();
  sub_19CD41144();
  v10 = sub_19CFDFFF8();
  v11 = v24;
  v53 = *(void (**)(char *, unint64_t))(v2 + 8);
  v53(v9, v54);
  swift_bridgeObjectRelease();
  v56 = v10;
  v57 = (unint64_t)v11;
  v25 = sub_19CFE001C();
  if (v26)
  {
    v27 = v25;
    v28 = v26;
    swift_bridgeObjectRelease();
    v10 = v27;
    v11 = v28;
  }
  if ((v17 & 0x2000000000000000) != 0)
    v15 = HIBYTE(v17) & 0xF;
  else
    v15 = v18 & 0xFFFFFFFFFFFFLL;
  v4 = sub_19CFDF680();
  if ((v5 & 1) == 0)
  {
    if (4 * v15 >= v4 >> 14)
    {
      v29 = sub_19CFDF764();
      v18 = v30;
      v32 = v31;
      v34 = v33;
      swift_bridgeObjectRelease();
      v35 = MEMORY[0x1A1AD9838](v29, v18, v32, v34);
      v37 = v36;
      swift_bridgeObjectRelease();
      v56 = v35;
      v57 = v37;
      sub_19CFDE9FC();
      v17 = MEMORY[0x1E0DEA968];
      v12 = sub_19CFDFFF8();
      v13 = v38;
      v53(v9, v54);
      swift_bridgeObjectRelease();
      v56 = v12;
      v57 = v13;
      v39 = sub_19CFE001C();
      if (v40)
      {
        v41 = v39;
        v42 = v40;
        swift_bridgeObjectRelease();
        v12 = v41;
        v13 = v42;
      }
      v43 = v55;
      v44 = v55[1];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (!v45)
        goto LABEL_21;
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  v4 = swift_bridgeObjectRelease();
  v43 = v55;
  v51 = v55[1];
  v45 = __OFADD__(v51, 1);
  v46 = v51 + 1;
  if (v45)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = 0;
  v13 = 0xE000000000000000;
LABEL_21:
  v43[1] = v46;
LABEL_22:
  v4 = v10;
  v5 = v11;
  v6 = v12;
  v7 = (void *)v13;
LABEL_26:
  result.value.value._object = v7;
  result.value.value._countAndFlagsBits = v6;
  result.value.key._object = v5;
  result.value.key._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_19CDF2EEC@<X0>(Swift::tuple_key_String_value_String_optional *a1@<X8>)
{
  Swift::tuple_key_String_value_String_optional v3;

  v3 = CookieIterator.next()();
  *a1 = v3;
  return v3.value.key._countAndFlagsBits;
}

_QWORD *initializeBufferWithCopyOfBuffer for CookieIterator(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CookieIterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for CookieIterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for CookieIterator()
{
  return &type metadata for CookieIterator;
}

unint64_t sub_19CDF2FD8()
{
  unint64_t result;

  result = qword_1EE43EAE0;
  if (!qword_1EE43EAE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE43EAE0);
  }
  return result;
}

void PageMetricsFieldsProvider.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void PageMetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void sub_19CDF302C(_QWORD *a1, uint64_t *a2)
{
  PageMetricsFieldsProvider.addMetricsFields(into:using:)(a1, a2);
}

_QWORD *assignWithCopy for PageMetricsFieldsProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PageMetricsFieldsProvider(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageMetricsFieldsProvider(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageMetricsFieldsProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageMetricsFieldsProvider()
{
  return &type metadata for PageMetricsFieldsProvider;
}

JetEngine::LogMessageLevel_optional __swiftcall LogMessageLevel.init(name:)(Swift::String name)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  JetEngine::LogMessageLevel_optional result;
  char v7;
  char v8;

  v2 = v1;
  v3 = name._countAndFlagsBits == 0x6775626564 && name._object == (void *)0xE500000000000000;
  if (v3 || (object = name._object, countAndFlagsBits = name._countAndFlagsBits, (sub_19CFE06A0() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 3;
  }
  else if (countAndFlagsBits == 1868983913 && object == (void *)0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 2;
  }
  else if (countAndFlagsBits == 0x676E696E726177 && object == (void *)0xE700000000000000
         || (sub_19CFE06A0() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 1;
  }
  else if (countAndFlagsBits == 0x726F727265 && object == (void *)0xE500000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v8 = sub_19CFE06A0();
    result.value = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      v7 = 0;
    else
      v7 = 4;
  }
  *v2 = v7;
  return result;
}

uint64_t LogMessageLevel.name.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CDF3368 + 4 * byte_19D055C6C[*v0]))(0x6775626564, 0xE500000000000000);
}

uint64_t sub_19CDF3368()
{
  return 0x726F727265;
}

uint64_t sub_19CDF3378()
{
  return 0x676E696E726177;
}

uint64_t sub_19CDF3390()
{
  return 1868983913;
}

BOOL static LogMessageLevel.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t LogMessageLevel.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

JetEngine::LogMessageLevel_optional __swiftcall LogMessageLevel.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (JetEngine::LogMessageLevel_optional)rawValue;
}

void *static LogMessageLevel.allCases.getter()
{
  return &unk_1E3DCCA80;
}

unint64_t sub_19CDF33E0()
{
  unint64_t result;

  result = qword_1EE43F108;
  if (!qword_1EE43F108)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessageLevel, &type metadata for LogMessageLevel);
    atomic_store(result, (unint64_t *)&qword_1EE43F108);
  }
  return result;
}

JetEngine::LogMessageLevel_optional sub_19CDF3424(Swift::Int *a1)
{
  return LogMessageLevel.init(rawValue:)(*a1);
}

void sub_19CDF342C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_19CDF3438(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_19CDF344C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_19CDF3460(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_19CDF3474(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t sub_19CDF348C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43F110;
  if (!qword_1EE43F110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43F118);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43F110);
  }
  return result;
}

void sub_19CDF34D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E3DCCB38;
}

uint64_t getEnumTagSinglePayload for LogMessageLevel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t dispatch thunk of MetricsEventLinterRule.apply(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static IntentOutcome<A>.satisfied(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCD5B84(a1, a2);
}

uint64_t JSPackageIndex.init(deserializing:using:from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(29546, 0xE200000000000000, (uint64_t)v22);
  sub_19CDE0324((uint64_t)v22, (uint64_t)v19);
  v6 = v20;
  if (v20)
  {
    v7 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    v10 = v9;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v19, &qword_1ECEB1328);
    v8 = 0;
    v10 = 0;
  }
  sub_19CD3E3F8((uint64_t)v22);
  v11 = type metadata accessor for JSPackageIndex();
  v12 = (uint64_t *)(a3 + *(int *)(v11 + 20));
  *v12 = v8;
  v12[1] = v10;
  v13 = sub_19CFDEDE0();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a3, a2, v13);
  JSONObject.subscript.getter(0x69747265706F7270, 0xEA00000000007365, (uint64_t)v19);
  JSONObject.dictionary.getter((uint64_t)v22);
  sub_19CD3E3F8((uint64_t)v19);
  v15 = v23;
  if (!v23)
  {
    sub_19CCECFE4((uint64_t)v22, &qword_1EE43C1C8);
    goto LABEL_8;
  }
  v25 = v11;
  v16 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v11 = v25;
  v17 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v15, v16);
  sub_19CDC6248((uint64_t)v22);
  if (!v17)
  {
LABEL_8:
    v17 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    sub_19CD3E3F8(a1);
    result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  result = sub_19CD3E3F8(a1);
LABEL_9:
  *(_QWORD *)(a3 + *(int *)(v11 + 24)) = v17;
  return result;
}

uint64_t JSPackageIndex.packageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t JSPackageIndex.scriptPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for JSPackageIndex() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSPackageIndex.properties.getter()
{
  type metadata accessor for JSPackageIndex();
  return swift_bridgeObjectRetain();
}

uint64_t JSPackageIndex.scriptURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;

  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for JSPackageIndex() + 20) + 8))
    return sub_19CFDED38();
  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v1, v4);
}

uint64_t sub_19CDF38C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  if (*(_QWORD *)(v2 + *(int *)(a1 + 20) + 8))
    return sub_19CFDED38();
  v5 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v2, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for JSPackageIndex(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JSPackageIndex(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for JSPackageIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSPackageIndex()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDF3C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JSPackageIndex()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CDF3CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_19CDF3D18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.== infix(_:_:)()
{
  return 1;
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t ValidatedJetPackLoadingCoordinator.ValidatedJetPackResult.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CDF3E10(v1, a1);
}

uint64_t sub_19CDF3E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDF3ED4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CDF3F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CDF4008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 160);
  sub_19CDB7640(*(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_19CDF40EC()
{
  unint64_t result;

  result = qword_1EE43F138;
  if (!qword_1EE43F138)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError, &type metadata for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError);
    atomic_store(result, (unint64_t *)&qword_1EE43F138);
  }
  return result;
}

_QWORD *assignWithCopy for ValidatedJetPackLoadingCoordinator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackLoadingCoordinator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteFetcher(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CDF427C + 4 * byte_19D055E40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CDF429C + 4 * byte_19D055E45[v4]))();
}

_BYTE *sub_19CDF427C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CDF429C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDF42A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDF42AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CDF42B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CDF42BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError()
{
  return &type metadata for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError;
}

uint64_t sub_19CDF42D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  _OWORD *v27;
  __int128 *v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;
  _OWORD *v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8 | 7;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v8 | 7 | v12;
  if (v13 != 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((v8 + 40) & ~(v8 | 7))
       + v12
       + ((((v10 + ((v8 + 32) & ~v8) + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 41
       + 31) & ~v12)
     + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v13 + 16) & ~v13);
    swift_retain();
  }
  else
  {
    v17 = ~v8;
    v43 = ~v12;
    v44 = *(_QWORD *)(a3 + 16);
    v18 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v18;
    v39 = v6;
    v40 = ((((v10 + ((v8 + 32) & ~v8) + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
    v42 = ((v8 + 40) & ~(v8 | 7)) + v12 + v40 + 31;
    (**(void (***)(uint64_t, uint64_t *))(v18 - 8))(a1, a2);
    v19 = (_QWORD *)((a1 + v9 + 40) & ~v9);
    v41 = a2;
    v20 = (_QWORD *)(((unint64_t)a2 + v9 + 40) & ~v9);
    *v19 = *v20;
    v19[1] = v20[1];
    v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    v23 = v8 + 16;
    v24 = ((unint64_t)v21 + v8 + 16) & ~v8;
    v25 = ((unint64_t)v22 + v23) & v17;
    v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v24, v25, v39);
    v27 = (_OWORD *)((v24 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    v28 = (__int128 *)((v25 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    v29 = *v28;
    *(_OWORD *)((char *)v27 + 9) = *(__int128 *)((char *)v28 + 9);
    *v27 = v29;
    v30 = (_QWORD *)((v24 + v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_QWORD *)((v25 + v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v31;
    v30[1] = v31[1];
    v32 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    v33 = (__int128 *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    v35 = *v33;
    v34 = v33[1];
    *(_OWORD *)((char *)v32 + 25) = *(__int128 *)((char *)v33 + 25);
    *v32 = v35;
    v32[1] = v34;
    v36 = (char *)v19 + v40;
    LODWORD(v27) = *(_DWORD *)((char *)v20 + v40 + 3);
    v36[7] = *((_BYTE *)v20 + v40 + 7);
    *(_DWORD *)(v36 + 3) = (_DWORD)v27;
    *(_QWORD *)(v36 + 15) = *(_QWORD *)((char *)v20 + v40 + 15);
    *(_QWORD *)(v36 + 23) = *(_QWORD *)((char *)v20 + v40 + 23);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37((v42 + a1) & v43, ((unint64_t)v41 + v42) & v43, v44);
  }
  return a1;
}

uint64_t *sub_19CDF4550(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v5 = sub_19CFDEF84();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 40;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  v10 = (_QWORD *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = ((unint64_t)v11 + v7 + 16) & ~v7;
  v14 = ((unint64_t)v12 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v13, v14, v5);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = (_OWORD *)((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v15 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = *(_OWORD *)((char *)v17 + 9);
  *v16 = *v17;
  *(_OWORD *)((char *)v16 + 9) = v18;
  v19 = (_QWORD *)((v15 + v13 + 39) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v15 + v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = *(_QWORD *)(v22 + 16);
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = v24;
  v25 = *(_QWORD *)(v22 + 32);
  *(_BYTE *)(v21 + 40) = *(_BYTE *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = v25;
  v26 = ((((((v7 + 32) & ~v7) + v15 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  v27 = (char *)v9 + v26;
  LODWORD(v25) = *(_DWORD *)((char *)v10 + v26 + 3);
  v27[7] = *((_BYTE *)v10 + v26 + 7);
  *(_DWORD *)(v27 + 3) = v25;
  *(_QWORD *)(v27 + 15) = *(_QWORD *)((char *)v10 + v26 + 15);
  *(_QWORD *)(v27 + 23) = *(_QWORD *)((char *)v10 + v26 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = ((v7 + 40) & ~(v7 | 7)) + v29 + v26 + 31;
  (*(void (**)(unint64_t, unint64_t))(v28 + 24))(((unint64_t)a1 + v30) & ~v29, ((unint64_t)a2 + v30) & ~v29);
  return a1;
}

uint64_t sub_19CDF477C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = sub_19CFDEF84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + 40;
  v11 = (_OWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_OWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v13 + v9 + 16) & ~v9;
  v16 = ((unint64_t)v14 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15, v16, v7);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = (_OWORD *)((v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)((v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = *(_OWORD *)((char *)v19 + 9);
  *v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = v20;
  v21 = (_OWORD *)((v15 + v17 + 39) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v16 + v17 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (__int128 *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v24;
  v25 = v24[1];
  *(_OWORD *)((char *)v23 + 25) = *(__int128 *)((char *)v24 + 25);
  *v23 = v26;
  v23[1] = v25;
  v27 = ((((((v9 + 32) & ~v9) + v17 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  v28 = (char *)v11 + v27;
  LOBYTE(v18) = *((_BYTE *)v12 + v27 + 7);
  *(_DWORD *)(v28 + 3) = *(_DWORD *)((char *)v12 + v27 + 3);
  v28[7] = (char)v18;
  *(_OWORD *)(v28 + 15) = *(_OWORD *)((char *)v12 + v27 + 15);
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = ((v9 + 40) & ~(v9 | 7)) + v30 + v27 + 31;
  (*(void (**)(uint64_t, uint64_t))(v29 + 32))((v31 + a1) & ~v30, (v31 + a2) & ~v30);
  return a1;
}

uint64_t sub_19CDF4918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 40;
  v10 = (_QWORD *)((v9 + a1) & ~(v8 | 7));
  v11 = (_QWORD *)((v9 + a2) & ~(v8 | 7));
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  v14 = ((unint64_t)v12 + v8 + 16) & ~v8;
  v15 = ((unint64_t)v13 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v14, v15, v6);
  v16 = *(_QWORD *)(v7 + 64);
  v17 = (_OWORD *)((v16 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)((v16 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *(_OWORD *)((char *)v18 + 9);
  *v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = v19;
  v20 = (_QWORD *)((v16 + v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v16 + v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRelease();
  v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = v24;
  v25 = *(_QWORD *)(v23 + 16);
  *(_BYTE *)(v22 + 24) = *(_BYTE *)(v23 + 24);
  *(_QWORD *)(v22 + 16) = v25;
  v26 = *(_QWORD *)(v23 + 32);
  *(_BYTE *)(v22 + 40) = *(_BYTE *)(v23 + 40);
  *(_QWORD *)(v22 + 32) = v26;
  v27 = ((((((v8 + 32) & ~v8) + v16 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41;
  v28 = (char *)v10 + v27;
  LODWORD(v26) = *(_DWORD *)((char *)v11 + v27 + 3);
  v28[7] = *((_BYTE *)v11 + v27 + 7);
  *(_DWORD *)(v28 + 3) = v26;
  *(_QWORD *)(v28 + 15) = *(_QWORD *)((char *)v11 + v27 + 15);
  *(_QWORD *)(v28 + 23) = *(_QWORD *)((char *)v11 + v27 + 23);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = ((v8 + 40) & ~(v8 | 7)) + v30 + v27 + 31;
  (*(void (**)(uint64_t, uint64_t))(v29 + 40))((v31 + a1) & ~v30, (v31 + a2) & ~v30);
  return a1;
}

unint64_t sub_19CDF4B30()
{
  unint64_t result;

  result = qword_1EE4373D8;
  if (!qword_1EE4373D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError, &type metadata for ValidatedJetPackLoadingCoordinator.ValidatedJetPackLoadingCoordinatorError);
    atomic_store(result, (unint64_t *)&qword_1EE4373D8);
  }
  return result;
}

id sub_19CDF4B74()
{
  if (qword_1ECEAFFE8 != -1)
    swift_once();
  qword_1EE43F140 = qword_1ECEAFFE0;
  return (id)qword_1ECEAFFE0;
}

void sub_19CDF4BBC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v27[2];
  char v28;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  if (v12)
  {
    v13 = v12;
    if ((objc_msgSend(a2, sel_isNull) & 1) != 0
      || (objc_msgSend(a2, sel_isUndefined) & 1) != 0
      || objc_msgSend(a2, sel_isString))
    {
      if (objc_msgSend(a2, sel_isString)
        && (v14 = objc_msgSend(a2, sel_toString)) != 0)
      {
        v15 = v14;
        v16 = sub_19CFDF578();
        v18 = v17;

      }
      else
      {
        v16 = 0;
        v18 = 0;
      }
      sub_19CCD5B84(a3 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory, (uint64_t)v27);
      v20 = swift_allocObject();
      sub_19CCD14C4(v27, v20 + 16);
      *(_QWORD *)(v20 + 56) = v16;
      *(_QWORD *)(v20 + 64) = v18;
      *(_QWORD *)&v27[0] = MEMORY[0x1E0DEE9D8];
      v28 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F160);
      v21 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
      v22 = swift_allocObject();
      *(_DWORD *)(v22 + 16) = 0;
      *(_QWORD *)(v21 + 16) = v22;
      sub_19CDF5ADC((uint64_t)v27, v21 + 24);
      v23 = sub_19CFDFA10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = 0;
      v24[3] = 0;
      v24[4] = &unk_1EE43F158;
      v24[5] = v20;
      v24[6] = v21;
      swift_retain();
      sub_19CF5B8E4((uint64_t)v11, (uint64_t)&unk_1EE43F168, (uint64_t)v24);
      swift_release();
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v21;
      v25[3] = v13;
      v25[4] = a4;
      JSPromise.init(in:executor:)(a1, (uint64_t)sub_19CDF5C18, (uint64_t)v25, v27);
    }
    else
    {
      sub_19CDC98D8();
      swift_allocError();
      JSError.init(badValue:expected:)(a2, v26);
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v19 = 0xD000000000000039;
    *(_QWORD *)(v19 + 8) = 0x800000019D06F780;
    *(_QWORD *)(v19 + 16) = 0;
    *(_BYTE *)(v19 + 24) = 1;
    *(_QWORD *)(v19 + 32) = 0;
    *(_BYTE *)(v19 + 40) = 1;
    *(_OWORD *)(v19 + 48) = 0u;
    *(_OWORD *)(v19 + 64) = 0u;
    *(_OWORD *)(v19 + 80) = 0u;
    *(_QWORD *)(v19 + 96) = 0;
    swift_willThrow();
  }
}

uint64_t sub_19CDF4EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CDF4F0C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_19CDF4F90;
  return v6(v0[2], v0[4], v0[5], v2, v3);
}

uint64_t sub_19CDF4F90()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CDF4FD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  __int128 v16;
  __int128 v17;
  _QWORD v18[5];
  char v19;
  _QWORD v20[5];
  _OWORD v21[2];
  uint64_t v22;

  sub_19CDF5C34(a2, (uint64_t)&v16);
  v10 = swift_allocObject();
  v11 = v17;
  *(_OWORD *)(v10 + 16) = v16;
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = v18[0];
  *(_QWORD *)(v10 + 56) = a6;
  sub_19CDF5C34(a3, (uint64_t)v21);
  v12 = swift_allocObject();
  v13 = v21[1];
  *(_OWORD *)(v12 + 16) = v21[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 48) = v22;
  *(_QWORD *)(v12 + 56) = a1;
  *(_QWORD *)(v12 + 64) = a6;
  v20[3] = type metadata accessor for RunLoopWorkerThread();
  v20[4] = &protocol witness table for RunLoopWorkerThread;
  v20[0] = a5;
  *(_QWORD *)&v16 = sub_19CDF5C94;
  *((_QWORD *)&v16 + 1) = v10;
  *(_QWORD *)&v17 = sub_19CDF5CCC;
  *((_QWORD *)&v17 + 1) = v12;
  sub_19CCD5B84((uint64_t)v20, (uint64_t)v18);
  v19 = 0;
  v14 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CDBE960();
  sub_19CCECFE4((uint64_t)&v16, (uint64_t *)&unk_1EE43E3D0);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

void sub_19CDF5130(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSValue v8;
  JSValue v9;
  Class isa;
  id v11;
  void *v12;
  objc_class *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v21;
  __int128 v22;
  _BYTE v23[32];
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28[3];
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  *(_QWORD *)(v4 + 56) = swift_getObjectType();
  *(_QWORD *)(v4 + 32) = v7;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v8.super.isa = JSReference.unwrap()().super.isa;
  if (v9.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1EE43D630 != -1)
      swift_once();
    v14 = (void *)qword_1EE43F140;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v16 = swift_allocObject();
    v17 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
    v29 = v17;
    v28[0] = 0xD00000000000003ALL;
    v28[1] = 0x800000019D06F800;
    v26 = 0u;
    v27 = 0u;
    v18 = v14;
    sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
    *(_BYTE *)(v16 + 64) = 0;
    v19 = v27;
    *(_OWORD *)(v16 + 32) = v26;
    *(_OWORD *)(v16 + 48) = v19;
    *(_QWORD *)(v15 + 32) = v16;
    swift_getErrorValue();
    v29 = v25;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v28);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(boxed_opaque_existential_2Tm, v24, v25);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_19D0522A0;
    sub_19CD40794((uint64_t)v28, (uint64_t)v23);
    v26 = 0u;
    v27 = 0u;
    sub_19CD40658((uint64_t)v23, (uint64_t)&v26);
    *(_BYTE *)(v21 + 64) = 0;
    v22 = v27;
    *(_OWORD *)(v21 + 32) = v26;
    *(_OWORD *)(v21 + 48) = v22;
    *(_QWORD *)(v15 + 40) = v21;
    sub_19CCECFE4((uint64_t)v28, &qword_1ECEB3370);
    *(_QWORD *)&v26 = v18;
    LOBYTE(v28[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)v28);
    swift_bridgeObjectRelease();

  }
  else
  {
    isa = v8.super.isa;
    v11 = -[objc_class context](v8.super.isa, sel_context);
    if (v11)
    {
      v12 = v11;
      v13 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19CDF5400(void *a1, _QWORD *a2, void *a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  JSValue v20;
  JSValue v21;
  Class isa;
  id v23;
  void *v24;
  objc_class *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  v7 = a1;
  sub_19CE21FD0(a1, (uint64_t)&v44);
  v33 = v44;
  v34 = v45;
  LOBYTE(v35) = BYTE8(v45);
  v36 = v46;
  v37 = v47;
  v38 = v48;
  v39 = v49;
  v40 = v50;
  v41 = v51;
  v28 = (void *)v52;
  v42 = v52;
  v43 = v53;
  JSError.jsRepresentation(in:)(a3, v30);
  v26 = a2;
  v27 = v6;
  v9 = v31;
  v8 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 16))(a3, v9, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 56) = sub_19CD15680();
  *(_QWORD *)(v27 + 32) = v19;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  v20.super.isa = JSReference.unwrap()().super.isa;
  if (v21.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1EE43D630 != -1)
      swift_once();
    v10 = (void *)qword_1EE43F140;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v12 = swift_allocObject();
    v13 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v35 = v13;
    *(_QWORD *)&v33 = 0xD000000000000039;
    *((_QWORD *)&v33 + 1) = 0x800000019D06F7C0;
    v44 = 0u;
    v45 = 0u;
    v14 = v10;
    sub_19CD40658((uint64_t)&v33, (uint64_t)&v44);
    *(_BYTE *)(v12 + 64) = 0;
    v15 = v45;
    *(_OWORD *)(v12 + 32) = v44;
    *(_OWORD *)(v12 + 48) = v15;
    *(_QWORD *)(v11 + 32) = v12;
    swift_getErrorValue();
    v35 = v29;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v33);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v29 - 8) + 16))(boxed_opaque_existential_2Tm);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
    sub_19CD40794((uint64_t)&v33, (uint64_t)v30);
    v44 = 0u;
    v45 = 0u;
    sub_19CD40658((uint64_t)v30, (uint64_t)&v44);
    *(_BYTE *)(v17 + 64) = 0;
    v18 = v45;
    *(_OWORD *)(v17 + 32) = v44;
    *(_OWORD *)(v17 + 48) = v18;
    *(_QWORD *)(v11 + 40) = v17;
    sub_19CCECFE4((uint64_t)&v33, &qword_1ECEB3370);
    *(_QWORD *)&v44 = v14;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);
    swift_bridgeObjectRelease();

  }
  else
  {
    isa = v20.super.isa;
    v23 = -[objc_class context](v20.super.isa, sel_context);
    if (v23)
    {
      v24 = v23;
      v25 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for JSLocalizerFactoryObject()
{
  return objc_opt_self();
}

id sub_19CDF59A4(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_2Tm;
  id v8;
  id v9;
  objc_super v11;
  uint64_t v12[5];

  v12[3] = a3;
  v12[4] = a4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_2Tm, a1, a3);
  v8 = objc_allocWithZone(a2);
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v8 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v11.receiver = v8;
  v11.super_class = a2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v9;
}

uint64_t sub_19CDF5A3C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CDF5A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19CCBE344;
  v7[4] = v6;
  v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  return swift_task_switch();
}

uint64_t sub_19CDF5ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE440CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDF5B24()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDF5B58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442BE8
                                                                                     + dword_1EE442BE8))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CDF5BEC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDF5C18(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_19CDF4FD8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_19CDF5C34(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CDF5C70()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

void sub_19CDF5C94(_QWORD *a1)
{
  uint64_t v1;

  sub_19CDF5130(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_19CDF5CA0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocObject();
}

void sub_19CDF5CCC(void *a1)
{
  uint64_t v1;

  sub_19CDF5400(a1, (_QWORD *)(v1 + 16), *(void **)(v1 + 56));
}

uint64_t static PipelinePhase<>.convertToJSSource()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_19CDF5D44;
  *(_QWORD *)(v2 + 24) = 0;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_19CDF5D98;
  *(_QWORD *)(result + 24) = v2;
  *a1 = sub_19CDF5E1C;
  a1[1] = result;
  return result;
}

uint64_t sub_19CDF5D48(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_19CDF5D74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CDF5D98(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

_QWORD *sub_19CDF5DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v5 = sub_19CDF5E74(a2, a3);
  swift_release();
  return v5;
}

_QWORD *sub_19CDF5E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CDF5E74(v2, v3);
  swift_release();
  return v4;
}

_QWORD *sub_19CDF5E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[48];
  __int128 v13[2];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B90);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436BA0);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CDF6014((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96));
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19CCD14C4(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19CDF6090;
  v11[1] = v9;
  v11[2] = sub_19CDF60A8;
  v11[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBEB10();
  sub_19CDF60B0((uint64_t)v11);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CDF6014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CDF605C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CDF6090(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF77E48(*a1, a1[1], *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CDF60A8(void *a1)
{
  sub_19CF786DC(a1);
}

uint64_t sub_19CDF60B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E3F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_19CDF60F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B90);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSSource();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v27 - v18;
  v21 = (uint64_t)v15 + *(int *)(v20 + 20);
  v22 = sub_19CFDEDE0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  *v15 = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain();
  sub_19CFDED14();
  v23((uint64_t)v11, 0, 1, v22);
  sub_19CD3B284((uint64_t)v11, v21);
  sub_19CD3A2BC((uint64_t)v15, (uint64_t)v19);
  sub_19CD3A2BC((uint64_t)v19, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436BA0);
  v24 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  v24[2] = v25;
  sub_19CDF6014((uint64_t)v7, (uint64_t)v24 + *(_QWORD *)(*v24 + 96));
  return v24;
}

void sub_19CDF62F4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_19CDF6380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v8 = type metadata accessor for LazyValueWrapper.State(0, a3, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (uint64_t *)((char *)&v15 - v11);
  *v12 = a1;
  v12[1] = a2;
  swift_storeEnumTagMultiPayload();
  v13 = sub_19CCFC9C4(v12, v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  *a5 = v13;
  return result;
}

uint64_t sub_19CDF6428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = type metadata accessor for LazyValueWrapper.State(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v17 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v17 - v12, a1, a2, v11);
  swift_storeEnumTagMultiPayload();
  v15 = sub_19CCFC9C4(v13, v8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a2);
  *a5 = v15;
  return result;
}

uint64_t LazyValueWrapper.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v10;

  v5 = *v4;
  v6 = *(_QWORD *)(a1 + 16);
  type metadata accessor for LazyValueWrapper.State(0, v6, a3, a4);
  v7 = v5 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v5 + 16);
  v8 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_19CDF6588(v7, v6, &v10);
  os_unfair_lock_unlock(v8);
  return v10;
}

void sub_19CDF6588(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v24[2];
  uint64_t v25;
  unint64_t v26;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LazyValueWrapper.State(0, v9, v10, v11);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (void **)((char *)v24 - v15);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))((char *)v24 - v15, a1, v12, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v21 = *v16;
    v22 = v16[1];
    v25 = 0x646564616F6C6E75;
    v26 = 0xE900000000000028;
    v24[0] = v21;
    v24[1] = v22;
    swift_getFunctionTypeMetadata0();
    swift_retain();
    sub_19CFDF5E4();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_release();
LABEL_6:
    v19 = v25;
    v20 = v26;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v23 = *v16;
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_19CFDF698();
    v24[0] = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    sub_19CFE02E0();
    sub_19CFDF698();

    goto LABEL_6;
  }
  (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v8, v16, a2);
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  v19 = v25;
  v20 = v26;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
LABEL_7:
  *a3 = v19;
  a3[1] = v20;
}

uint64_t type metadata accessor for LazyValueWrapper.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyValueWrapper.State);
}

void sub_19CDF67BC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  os_unfair_lock_s *v9;

  v6 = *v4;
  v7 = *(_QWORD *)(a1 + 16);
  type metadata accessor for LazyValueWrapper.State(0, v7, a2, a3);
  v8 = (_QWORD *)(v6 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v6 + 16));
  v9 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  sub_19CDF6858(v8, v7, a4);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_19CDF6858@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void (**v17)(uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  void *v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  Swift::String v64;
  _QWORD v65[2];
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  _BYTE v74[32];
  __int128 v75;
  __int128 v76;
  char v77;
  uint64_t v78[3];
  uint64_t MetatypeMetadata;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LazyValueWrapper.State(0, v9, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (void (**)(uint64_t))((char *)v65 - v16);
  (*(void (**)(char *, _QWORD *, uint64_t, double))(v13 + 16))((char *)v65 - v16, a1, v12, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (char *)v17;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a2);
    }
    if (qword_1EE439F20 != -1)
      swift_once();
    sub_19CFE0A6C();
    v44 = v81;
    v45 = v82;
    __swift_project_boxed_opaque_existential_1(v80, v81);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_19D0522A0;
    v83 = sub_19CD40918(0, 46, 0, MEMORY[0x1E0DEE9D8]);
    v47._countAndFlagsBits = 91;
    v47._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    MetatypeMetadata = swift_getMetatypeMetadata();
    v78[0] = a2;
    sub_19CD40794((uint64_t)v78, (uint64_t)v74);
    v72 = 0u;
    v73 = 0u;
    sub_19CD40658((uint64_t)v74, (uint64_t)&v72);
    v77 = 0;
    v75 = v72;
    v76 = v73;
    v48 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v48 = sub_19CD40918(0, v48[2] + 1, 1, v48);
    v50 = v48[2];
    v49 = v48[3];
    if (v50 >= v49 >> 1)
      v48 = sub_19CD40918((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
    v48[2] = v50 + 1;
    v51 = &v48[5 * v50];
    v52 = v75;
    v53 = v76;
    *((_BYTE *)v51 + 64) = v77;
    *((_OWORD *)v51 + 2) = v52;
    *((_OWORD *)v51 + 3) = v53;
    v83 = v48;
    sub_19CD3F190((uint64_t)v78);
    v54._countAndFlagsBits = 0xD00000000000002BLL;
    v54._object = (void *)0x800000019D06F940;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    swift_getErrorValue();
    v55 = v70;
    v56 = v71;
    MetatypeMetadata = v71;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v78);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(boxed_opaque_existential_2Tm, v55, v56);
    sub_19CD40794((uint64_t)v78, (uint64_t)v74);
    v72 = 0u;
    v73 = 0u;
    sub_19CD40658((uint64_t)v74, (uint64_t)&v72);
    v77 = 0;
    v75 = v72;
    v76 = v73;
    v58 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v58 = sub_19CD40918(0, v58[2] + 1, 1, v58);
    v60 = v58[2];
    v59 = v58[3];
    if (v60 >= v59 >> 1)
      v58 = sub_19CD40918((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
    v58[2] = v60 + 1;
    v61 = &v58[5 * v60];
    v62 = v75;
    v63 = v76;
    *((_BYTE *)v61 + 64) = v77;
    *((_OWORD *)v61 + 2) = v62;
    *((_OWORD *)v61 + 3) = v63;
    v83 = v58;
    sub_19CD3F190((uint64_t)v78);
    v64._countAndFlagsBits = 0;
    v64._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v64);
    *(_QWORD *)(v46 + 32) = v83;
    Logger.error(_:)(v46, v44, v45);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
    return swift_willThrow();
  }
  else
  {
    v19 = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(a1, v12);
    v20 = v67;
    (*v17)(v19);
    v67 = v20;
    if (!v20)
    {
      swift_release();
      (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(a1, v8, a2);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a2);
    }
    if (qword_1EE439F20 != -1)
      swift_once();
    sub_19CFE0A6C();
    v21 = v81;
    v66 = v82;
    v65[1] = __swift_project_boxed_opaque_existential_1(v80, v81);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
    v83 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
    v23._countAndFlagsBits = 91;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    MetatypeMetadata = swift_getMetatypeMetadata();
    v78[0] = a2;
    sub_19CD40794((uint64_t)v78, (uint64_t)v74);
    v72 = 0u;
    v73 = 0u;
    sub_19CD40658((uint64_t)v74, (uint64_t)&v72);
    v77 = 0;
    v75 = v72;
    v76 = v73;
    v24 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = sub_19CD40918(0, v24[2] + 1, 1, v24);
    v26 = v24[2];
    v25 = v24[3];
    if (v26 >= v25 >> 1)
      v24 = sub_19CD40918((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
    v24[2] = v26 + 1;
    v27 = &v24[5 * v26];
    v28 = v75;
    v29 = v76;
    *((_BYTE *)v27 + 64) = v77;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v29;
    v83 = v24;
    sub_19CD3F190((uint64_t)v78);
    v30._object = (void *)0x800000019D06F970;
    v30._countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    swift_getErrorValue();
    v31 = v68;
    v32 = v69;
    MetatypeMetadata = v69;
    v33 = __swift_allocate_boxed_opaque_existential_2Tm(v78);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v33, v31, v32);
    sub_19CD40794((uint64_t)v78, (uint64_t)v74);
    v72 = 0u;
    v73 = 0u;
    sub_19CD40658((uint64_t)v74, (uint64_t)&v72);
    v77 = 0;
    v75 = v72;
    v76 = v73;
    v34 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
    v36 = v34[2];
    v35 = v34[3];
    if (v36 >= v35 >> 1)
      v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
    v34[2] = v36 + 1;
    v37 = &v34[5 * v36];
    v38 = v75;
    v39 = v76;
    *((_BYTE *)v37 + 64) = v77;
    *((_OWORD *)v37 + 2) = v38;
    *((_OWORD *)v37 + 3) = v39;
    v83 = v34;
    sub_19CD3F190((uint64_t)v78);
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    *(_QWORD *)(v22 + 32) = v83;
    Logger.error(_:)(v22, v21, v66);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
    v41 = v67;
    *a1 = v67;
    swift_storeEnumTagMultiPayload();
    v42 = v41;
    swift_willThrow();
    return swift_release();
  }
}

void sub_19CDF6F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  v6 = *v4;
  v7 = *(_QWORD *)(a2 + 16);
  type metadata accessor for LazyValueWrapper.State(0, v7, a3, a4);
  v8 = v6 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v6 + 16);
  v9 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  sub_19CDF6FE4(v8, a1, v7, v10);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_19CDF6FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for LazyValueWrapper.State(0, a3, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a1, a2, a3);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for LazyValueWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyValueWrapper);
}

uint64_t sub_19CDF707C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_19CDF70FC(char *a1, id *a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *(_QWORD *)v3 = *a2;
    v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
LABEL_20:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 3)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 2)
  {
    v11 = (char *)*a2;
    v12 = (char *)*a2;
    *(_QWORD *)v3 = v11;
    v3[v5] = 2;
    return v3;
  }
  if (v9 != 1)
  {
    v13 = (char *)a2[1];
    *(_QWORD *)v3 = *a2;
    *((_QWORD *)v3 + 1) = v13;
    v3[v5] = 0;
    goto LABEL_20;
  }
  (*(void (**)(char *))(v4 + 16))(a1);
  v3[v5] = 1;
  return v3;
}

void sub_19CDF723C(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      (*(void (**)(void))(v2 + 8))();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_19CDF7284 + 4 * byte_19D055FE5[v5]))();
  }
}

_QWORD *sub_19CDF72EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    v9 = *(id *)a2;
    v10 = *(id *)a2;
    *a1 = v9;
    v8 = 2;
  }
  else
  {
    if (v6 != 1)
    {
      v11 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v11;
      *((_BYTE *)a1 + v5) = 0;
      swift_retain();
      return a1;
    }
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

uint64_t sub_19CDF73EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {

    }
    else if (v8 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else
    {
      swift_release();
    }
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      v13 = *(void **)a2;
      v14 = v13;
      *(_QWORD *)a1 = v13;
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v15;
        *(_BYTE *)(a1 + v7) = 0;
        swift_retain();
        return a1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v12 = 1;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

_QWORD *sub_19CDF75B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *a1 = *a2;
    v8 = 2;
  }
  else if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_19CDF769C(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {

    }
    else if (v8 == 1)
    {
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else
    {
      swift_release();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *a1 = *a2;
      v12 = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_19CDF7854(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDF7918 + 4 * byte_19D056008[(v4 - 1)]))();
}

void sub_19CDF7964(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_19CDF7B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CDF7B54 + 4 * byte_19D056016[v3]))();
}

void sub_19CDF7B9C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_19CDF7C64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CFE08C8();
  sub_19CFE08D4();
  if (v1)
    sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CDF7CD0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFDF650();
}

uint64_t sub_19CDF7D34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CFE08C8();
  sub_19CFE08D4();
  if (v1)
    sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CDF7D9C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return v4 == 0;
  if (!v4)
    return 0;
  if (*a1 == *a2 && v3 == v4)
    return 1;
  else
    return sub_19CFE06A0();
}

JetEngine::DynamicImpressionsTracker::Configuration __swiftcall DynamicImpressionsTracker.Configuration.init(impressionTimeThreshold:queueName:)(Swift::Double impressionTimeThreshold, Swift::String queueName)
{
  uint64_t v2;
  JetEngine::DynamicImpressionsTracker::Configuration result;

  *(Swift::Double *)v2 = impressionTimeThreshold;
  *(Swift::String *)(v2 + 8) = queueName;
  result.queueName = queueName;
  result.impressionTimeThreshold = impressionTimeThreshold;
  return result;
}

_QWORD *DynamicImpressionsTracker.__allocating_init(_:)(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)swift_allocObject();
  v3 = a1[1];
  v4 = a1[2];
  v2[2] = *a1;
  v2[3] = v3;
  v2[4] = v4;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19CCE3A90();
  v5 = sub_19CFDF3F8();
  v6 = MEMORY[0x1E0DEE9D8];
  v2[5] = v5;
  v2[6] = v6;
  v2[7] = MEMORY[0x1E0DEE9E0];
  return v2;
}

_QWORD *DynamicImpressionsTracker.init(_:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v1[2] = *a1;
  v1[3] = v2;
  v1[4] = v3;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19CCE3A90();
  v4 = sub_19CFDF3F8();
  v5 = MEMORY[0x1E0DEE9D8];
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = MEMORY[0x1E0DEE9E0];
  return v1;
}

uint64_t DynamicImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD v21[3];
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26[7];
  __int128 v27;
  uint64_t v28;
  uint64_t v29[7];

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 72);
  v26[0] = v5;
  v26[1] = v4;
  v26[2] = v6;
  v26[3] = v7;
  v26[4] = v8;
  v26[5] = v9;
  v26[6] = v10;
  v27 = *(_OWORD *)(a1 + 56);
  v28 = v11;
  v29[0] = v5;
  v29[1] = v4;
  v29[2] = v6;
  v29[3] = v7;
  v29[4] = v8;
  v29[5] = v9;
  v29[6] = v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 56);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_11;
  if (!v4)
    v5 = 0;
  swift_bridgeObjectRetain();
  v13 = sub_19CE120B8(v5, v4);
  if ((v14 & 1) == 0
    || (v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !*(_QWORD *)(v15 + 16)))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    v18 = 0;
    v19 = 1;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_19CD2A4AC(v29);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = 0;
LABEL_12:
  swift_endAccess();
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  v21[2] = v18;
  v22 = v19;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  return DynamicImpressionsTracker.elementDidEnterView(_:on:with:)(v26, a2, (uint64_t)v21);
}

uint64_t DynamicImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  char v33;
  char v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[3];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[2];
  __int128 v88;
  uint64_t v89;

  v4 = v3;
  v69 = a2;
  v7 = sub_19CFDEF84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *((_OWORD *)a1 + 1);
  v13 = *((_OWORD *)a1 + 3);
  v79[2] = *((_OWORD *)a1 + 2);
  v80 = v13;
  v81 = *((_OWORD *)a1 + 4);
  v79[0] = *(_OWORD *)a1;
  v79[1] = v12;
  v15 = *a1;
  v14 = a1[1];
  v59 = a1[2];
  v60 = v14;
  v16 = a1[3];
  v57 = a1[4];
  v58 = v16;
  v17 = a1[5];
  v55 = a1[6];
  v56 = v17;
  v18 = a1[8];
  v53 = a1[9];
  v54 = v18;
  v19 = *(_QWORD *)a3;
  v20 = *(_QWORD *)(a3 + 16);
  v67 = *(_QWORD *)(a3 + 8);
  v68 = v19;
  v21 = *(_BYTE *)(a3 + 24);
  v22 = *(_QWORD *)(a3 + 32);
  v65 = *(_QWORD *)(a3 + 40);
  v66 = v22;
  v23 = *(_QWORD *)(a3 + 48);
  v63 = *(_QWORD *)(a3 + 56);
  v64 = v23;
  v24 = *(_QWORD *)(a3 + 64);
  v61 = *(_QWORD *)(a3 + 72);
  v62 = v24;
  v25 = *((_OWORD *)a1 + 1);
  v87[0] = *(_OWORD *)a1;
  v87[1] = v25;
  v88 = *((_OWORD *)a1 + 2);
  v52 = a1[7];
  v89 = a1[6];
  v82 = v87[0];
  v83 = v25;
  v85 = v89;
  v26 = (uint64_t *)(v4 + 40);
  v84 = v88;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v4 + 40) + 16))
  {
    sub_19CD2AF14((uint64_t)v87);
    sub_19CD2A4AC((uint64_t *)&v82);
    if ((v27 & 1) != 0)
    {
      swift_endAccess();
      swift_retain();
      sub_19CD2AF5C((uint64_t)v87);
      goto LABEL_11;
    }
    sub_19CD2AF5C((uint64_t)v87);
  }
  v51 = v15;
  swift_endAccess();
  v28 = *((_QWORD *)&v80 + 1);
  v86 = *((_QWORD *)&v80 + 1);
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 88) = 0u;
  *(_OWORD *)(v29 + 104) = 0u;
  *(_OWORD *)(v29 + 120) = 0u;
  *(_QWORD *)(v29 + 136) = 0;
  *(_BYTE *)(v29 + 144) = 1;
  v30 = v83;
  *(_OWORD *)(v29 + 16) = v82;
  *(_OWORD *)(v29 + 32) = v30;
  *(_OWORD *)(v29 + 48) = v84;
  *(_QWORD *)(v29 + 64) = v85;
  *(_QWORD *)(v29 + 72) = v28;
  *(_QWORD *)(v29 + 80) = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  sub_19CD2AF14((uint64_t)v87);
  sub_19CD2AF14((uint64_t)v87);
  sub_19CD0F7CC((uint64_t)&v86);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v70 = *v26;
  *v26 = 0x8000000000000000;
  sub_19CD2B700(v29, (uint64_t)&v82, isUniquelyReferenced_nonNull_native);
  *v26 = v70;
  swift_bridgeObjectRelease();
  sub_19CD2AF5C((uint64_t)v87);
  swift_endAccess();
  if ((v21 & 1) == 0)
  {
    v50 = (_QWORD *)(v4 + 48);
    swift_beginAccess();
    sub_19CDFF970((uint64_t)v79);
    v32 = swift_bridgeObjectRetain();
    sub_19CDFF660(v32, (uint64_t *)v79);
    v34 = v33;
    sub_19CDFF9E0((uint64_t)v79);
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      sub_19CD2AF14((uint64_t)v87);
      sub_19CDF8534(&v82, v20, (char *)v71);
      sub_19CD2AF5C((uint64_t)v87);
      if (!LOBYTE(v71[0]))
      {
        sub_19CFDEF78();
        v35 = (void *)objc_opt_self();
        v36 = (void *)sub_19CFDEF0C();
        v37 = objc_msgSend(v35, sel_serverTimeFromDate_, v36);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        objc_msgSend(v37, sel_doubleValue);
        v39 = v38;

        type metadata accessor for ImpressionsTracking.DynamicChange();
        v40 = (_QWORD *)swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F40);
        v41 = swift_allocObject();
        *(_DWORD *)(v41 + 20) = 0;
        *(_BYTE *)(v41 + 16) = 0;
        v40[2] = v39;
        v42 = v60;
        v40[3] = v51;
        v40[4] = v42;
        v43 = v58;
        v40[5] = v59;
        v40[6] = v43;
        v44 = v56;
        v40[7] = v57;
        v40[8] = v44;
        v45 = v52;
        v40[9] = v55;
        v40[10] = v45;
        v46 = v53;
        v40[11] = v54;
        v40[12] = v46;
        v40[13] = v41;
        v40[14] = 0;
        v47 = v50;
        swift_beginAccess();
        v48 = sub_19CDFF970((uint64_t)v79);
        MEMORY[0x1A1AD9A6C](v48);
        if (*(_QWORD *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_19CFDF8A8();
        sub_19CFDF8E4();
        sub_19CFDF878();
        swift_endAccess();
      }
    }
  }
LABEL_11:
  v71[0] = v68;
  v71[1] = v67;
  v71[2] = v20;
  v72 = v21;
  v73 = v66;
  v74 = v65;
  v75 = v64;
  v76 = v63;
  v77 = v62;
  v78 = v61;
  sub_19CD2AFC4(v69, v71);
  return swift_release();
}

uint64_t sub_19CDF8534@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t result;
  char v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  BOOL v55;
  char v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  char *v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  _BYTE v102[16];
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[3];

  v6 = a1[1];
  v98 = *a1;
  v99 = v6;
  v100 = a1[2];
  v101 = *((_QWORD *)a1 + 6);
  sub_19CCC290C((uint64_t)&v98, (uint64_t)v102, &qword_1ECEB2550);
  sub_19CCC290C((uint64_t)v102, (uint64_t)v105, &qword_1ECEB2550);
  v7 = v105[0];
  v8 = v105[1];
  v9 = (uint64_t *)(v3 + 56);
  swift_beginAccess();
  v10 = *(_QWORD *)(v3 + 56);
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_10:
    swift_endAccess();
    sub_19CCC290C((uint64_t)v102, (uint64_t)&v92, &qword_1ECEB2550);
    v17 = v93;
    if (v93)
      v18 = (uint64_t)v92;
    else
      v18 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    v20 = v101;
    v22 = v99;
    v21 = v100;
    *(_OWORD *)(inited + 32) = v98;
    *(_OWORD *)(inited + 48) = v22;
    *(_OWORD *)(inited + 64) = v21;
    *(_QWORD *)(inited + 80) = v20;
    *(_QWORD *)(inited + 88) = a2;
    sub_19CD0F7F4((uint64_t)v102);
    sub_19CD2AF14((uint64_t)&v98);
    v23 = sub_19CE10910(inited);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v103 = *v9;
    *v9 = 0x8000000000000000;
    sub_19CE17170(v23, v18, v17, isUniquelyReferenced_nonNull_native);
    v25 = v103;
LABEL_14:
    *v9 = v25;
    swift_bridgeObjectRelease();
LABEL_15:
    sub_19CD0F42C((uint64_t)v102);
LABEL_16:
    result = swift_endAccess();
    v27 = 3;
LABEL_17:
    *a3 = v27;
    return result;
  }
  if (v8)
    v11 = v7;
  else
    v11 = 0;
  sub_19CD0F7F4((uint64_t)v102);
  v12 = sub_19CE120B8(v11, v8);
  if ((v13 & 1) == 0)
  {
    sub_19CD0F42C((uint64_t)v102);
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v12);
  swift_endAccess();
  swift_bridgeObjectRetain();
  sub_19CD0F42C((uint64_t)v102);
  if (*(_QWORD *)(v14 + 16))
  {
    sub_19CD2AF14((uint64_t)&v98);
    sub_19CD2A4AC((uint64_t *)&v98);
    v16 = v15;
    sub_19CD2AF5C((uint64_t)&v98);
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_80;
    }
  }
  v88 = a3;
  v28 = 0;
  v29 = v14 + 64;
  v30 = 1 << *(_BYTE *)(v14 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(v14 + 64);
  v33 = (unint64_t)(v30 + 63) >> 6;
  do
  {
    if (v32)
    {
      v34 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v35 = v34 | (v28 << 6);
    }
    else
    {
      v36 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v36 >= v33)
        goto LABEL_79;
      v37 = *(_QWORD *)(v29 + 8 * v36);
      ++v28;
      if (!v37)
      {
        v28 = v36 + 1;
        if (v36 + 1 >= v33)
          goto LABEL_79;
        v37 = *(_QWORD *)(v29 + 8 * v28);
        if (!v37)
        {
          v28 = v36 + 2;
          if (v36 + 2 >= v33)
            goto LABEL_79;
          v37 = *(_QWORD *)(v29 + 8 * v28);
          if (!v37)
          {
            v28 = v36 + 3;
            if (v36 + 3 >= v33)
              goto LABEL_79;
            v37 = *(_QWORD *)(v29 + 8 * v28);
            if (!v37)
            {
              v28 = v36 + 4;
              if (v36 + 4 >= v33)
                goto LABEL_79;
              v37 = *(_QWORD *)(v29 + 8 * v28);
              if (!v37)
              {
                v38 = v36 + 5;
                if (v38 >= v33)
                  goto LABEL_79;
                v37 = *(_QWORD *)(v29 + 8 * v38);
                v28 = v38;
                if (!v37)
                {
                  while (1)
                  {
                    v28 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_95;
                    if (v28 >= v33)
                      break;
                    v37 = *(_QWORD *)(v29 + 8 * v28);
                    ++v38;
                    if (v37)
                      goto LABEL_40;
                  }
LABEL_79:
                  swift_release();
LABEL_80:
                  sub_19CCC290C((uint64_t)v102, (uint64_t)&v92, &qword_1ECEB2550);
                  v75 = (uint64_t)v92;
                  v76 = v93;
                  swift_beginAccess();
                  v77 = *v9;
                  if (*(_QWORD *)(*v9 + 16))
                  {
                    if (v76)
                      v78 = v75;
                    else
                      v78 = 0;
                    sub_19CD0F7F4((uint64_t)v102);
                    v79 = sub_19CE120B8(v78, v76);
                    if ((v80 & 1) != 0)
                    {
                      v81 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v79);
                      swift_endAccess();
                      swift_bridgeObjectRetain();
                      sub_19CD0F42C((uint64_t)v102);
                      sub_19CD2AF14((uint64_t)&v98);
                      v82 = swift_isUniquelyReferenced_nonNull_native();
                      *(_QWORD *)&v94 = v81;
                      sub_19CE172D4(a2, (uint64_t)&v98, v82);
                      v83 = v94;
                      swift_bridgeObjectRelease();
                      sub_19CD2AF5C((uint64_t)&v98);
                      sub_19CCC290C((uint64_t)v102, (uint64_t)&v103, &qword_1ECEB2550);
                      v84 = v104;
                      if (v104)
                        v85 = v103;
                      else
                        v85 = 0;
                      swift_beginAccess();
                      sub_19CD0F7F4((uint64_t)v102);
                      v86 = swift_isUniquelyReferenced_nonNull_native();
                      v91 = *v9;
                      *v9 = 0x8000000000000000;
                      sub_19CE17170(v83, v85, v84, v86);
                      v25 = v91;
                      goto LABEL_14;
                    }
                    goto LABEL_15;
                  }
                  goto LABEL_16;
                }
              }
            }
          }
        }
      }
LABEL_40:
      v32 = (v37 - 1) & v37;
      v35 = __clz(__rbit64(v37)) + (v28 << 6);
    }
  }
  while (*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v35) != a2);
  v87 = v9;
  v39 = 0;
  v40 = 1 << *(_BYTE *)(v14 + 32);
  v41 = -1;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  v42 = v41 & *(_QWORD *)(v14 + 64);
  v89 = (unint64_t)(v40 + 63) >> 6;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (v42)
  {
    v44 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v45 = v44 | (v39 << 6);
LABEL_62:
    v49 = *(_QWORD *)(v14 + 56);
    v50 = *(_QWORD *)(v14 + 48) + 56 * v45;
    v51 = *(_QWORD *)(v50 + 48);
    v52 = *(_OWORD *)(v50 + 32);
    v53 = *(_OWORD *)v50;
    v95 = *(_OWORD *)(v50 + 16);
    v96 = v52;
    v94 = v53;
    v97 = v51;
    v54 = *(_QWORD *)(v49 + 8 * v45);
    if (v54 >= a2)
    {
      v55 = __OFADD__(v54++, 1);
      if (v55)
        goto LABEL_90;
    }
    sub_19CD2AF14((uint64_t)&v94);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v43;
    v58 = sub_19CD2A4AC((uint64_t *)&v94);
    v59 = v43[2];
    v60 = (v57 & 1) == 0;
    v61 = v59 + v60;
    if (__OFADD__(v59, v60))
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v62 = v57;
    if (v43[3] >= v61)
    {
      if ((v56 & 1) != 0)
      {
        v43 = v92;
        if ((v57 & 1) != 0)
          goto LABEL_44;
      }
      else
      {
        sub_19CE19C50();
        v43 = v92;
        if ((v62 & 1) != 0)
          goto LABEL_44;
      }
    }
    else
    {
      sub_19CE14A88(v61, v56);
      v63 = sub_19CD2A4AC((uint64_t *)&v94);
      if ((v62 & 1) != (v64 & 1))
        goto LABEL_96;
      v58 = v63;
      v43 = v92;
      if ((v62 & 1) != 0)
      {
LABEL_44:
        *(_QWORD *)(v43[7] + 8 * v58) = v54;
        goto LABEL_45;
      }
    }
    v43[(v58 >> 6) + 8] |= 1 << v58;
    v65 = v43[6] + 56 * v58;
    v66 = v94;
    v67 = v95;
    v68 = v96;
    *(_QWORD *)(v65 + 48) = v97;
    *(_OWORD *)(v65 + 16) = v67;
    *(_OWORD *)(v65 + 32) = v68;
    *(_OWORD *)v65 = v66;
    *(_QWORD *)(v43[7] + 8 * v58) = v54;
    v69 = v43[2];
    v55 = __OFADD__(v69, 1);
    v70 = v69 + 1;
    if (v55)
      goto LABEL_91;
    v43[2] = v70;
    sub_19CD2AF14((uint64_t)&v94);
LABEL_45:
    swift_bridgeObjectRelease();
    sub_19CD2AF5C((uint64_t)&v94);
  }
  v46 = v39 + 1;
  if (__OFADD__(v39, 1))
    goto LABEL_92;
  if (v46 >= v89)
  {
LABEL_75:
    swift_release();
    sub_19CD2AF14((uint64_t)&v98);
    v71 = swift_isUniquelyReferenced_nonNull_native();
    v92 = v43;
    sub_19CE172D4(a2, (uint64_t)&v98, v71);
    swift_bridgeObjectRelease();
    sub_19CD2AF5C((uint64_t)&v98);
    sub_19CCC290C((uint64_t)v102, (uint64_t)&v103, &qword_1ECEB2550);
    v72 = v104;
    if (v104)
      v73 = v103;
    else
      v73 = 0;
    swift_beginAccess();
    sub_19CD0F7F4((uint64_t)v102);
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v90 = *v87;
    *v87 = 0x8000000000000000;
    sub_19CE17170((uint64_t)v43, v73, v72, v74);
    *v87 = v90;
    swift_bridgeObjectRelease();
    sub_19CD0F42C((uint64_t)v102);
    result = swift_endAccess();
    v27 = 0;
    a3 = v88;
    goto LABEL_17;
  }
  v47 = *(_QWORD *)(v29 + 8 * v46);
  ++v39;
  if (v47)
    goto LABEL_61;
  v39 = v46 + 1;
  if (v46 + 1 >= v89)
    goto LABEL_75;
  v47 = *(_QWORD *)(v29 + 8 * v39);
  if (v47)
    goto LABEL_61;
  v39 = v46 + 2;
  if (v46 + 2 >= v89)
    goto LABEL_75;
  v47 = *(_QWORD *)(v29 + 8 * v39);
  if (v47)
  {
LABEL_61:
    v42 = (v47 - 1) & v47;
    v45 = __clz(__rbit64(v47)) + (v39 << 6);
    goto LABEL_62;
  }
  v48 = v46 + 3;
  if (v48 >= v89)
    goto LABEL_75;
  v47 = *(_QWORD *)(v29 + 8 * v48);
  if (v47)
  {
    v39 = v48;
    goto LABEL_61;
  }
  while (1)
  {
    v39 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v39 >= v89)
      goto LABEL_75;
    v47 = *(_QWORD *)(v29 + 8 * v39);
    ++v48;
    if (v47)
      goto LABEL_61;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.elementDidLeaveView(_:on:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 9);
  v5 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = v2;
  v15 = a1[2];
  v16 = v3;
  v17 = *(__int128 *)((char *)a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v18[3];
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[3];
  uint64_t v27;

  v4 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v4;
  v26[2] = *(_OWORD *)(a1 + 32);
  v27 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a3 + 8);
  v16 = *(_QWORD *)a3;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_BYTE *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  v11 = *(_QWORD *)(a3 + 56);
  v13 = *(_QWORD *)(a3 + 64);
  v12 = *(_QWORD *)(a3 + 72);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 40) + 16))
  {
    sub_19CD2AF14((uint64_t)v26);
    sub_19CD2A4AC((uint64_t *)v26);
    if ((v14 & 1) != 0)
    {
      swift_endAccess();
      swift_retain();
      sub_19CD2AF5C((uint64_t)v26);
      v18[0] = v16;
      v18[1] = v5;
      v18[2] = v6;
      v19 = v7;
      v20 = v8;
      v21 = v9;
      v22 = v10;
      v23 = v11;
      v24 = v13;
      v25 = v12;
      sub_19CCF3258(a2, v18);
      return swift_release();
    }
    sub_19CD2AF5C((uint64_t)v26);
  }
  return swift_endAccess();
}

uint64_t DynamicImpressionsTracker.didDeleteElement(_:on:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t result;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[2];
  uint64_t v80[8];

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v72 = a1[5];
  v7 = a1[6];
  v6 = a1[7];
  v8 = a1[8];
  v68 = a1[9];
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_19CFDEF0C();
  v11 = objc_msgSend(v9, sel_serverTimeFromDate_, v10);

  objc_msgSend(v11, sel_doubleValue);
  v13 = v12;

  type metadata accessor for ImpressionsTracking.DynamicChange();
  v14 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F40);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 20) = 0;
  *(_BYTE *)(v15 + 16) = 2;
  v14[2] = v13;
  v70 = v3;
  v71 = v1;
  v14[3] = v1;
  v14[4] = v2;
  v14[5] = v3;
  v14[6] = v4;
  v16 = v2;
  v75 = v5;
  v14[7] = v5;
  v18 = v72;
  v17 = v73;
  v14[8] = v72;
  v14[9] = v7;
  v14[10] = v6;
  v14[11] = v8;
  v14[12] = v68;
  v14[13] = v15;
  v14[14] = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  MEMORY[0x1A1AD9A6C](v19);
  if (*(_QWORD *)((*(_QWORD *)(v17 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v17 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_59:
    sub_19CFDF8A8();
  sub_19CFDF8E4();
  sub_19CFDF878();
  swift_endAccess();
  v21 = v70;
  v20 = v71;
  v80[0] = v71;
  v80[1] = v16;
  v80[2] = v70;
  v80[3] = v4;
  v67 = v4;
  v80[4] = v75;
  v80[5] = v18;
  if (v16)
    v22 = v71;
  else
    v22 = 0;
  v80[6] = v7;
  swift_beginAccess();
  v23 = *(_QWORD *)(v17 + 56);
  if (!*(_QWORD *)(v23 + 16))
    return swift_endAccess();
  swift_bridgeObjectRetain();
  v24 = sub_19CE120B8(v22, v16);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  v64 = v22;
  v18 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v18 + 16))
    return swift_bridgeObjectRelease();
  v63 = (uint64_t *)(v17 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_19CD2A4AC(v80);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v66 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = 0;
  v74 = v18 + 64;
  v29 = 1 << *(_BYTE *)(v18 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v17 = v30 & *(_QWORD *)(v18 + 64);
  v75 = (unint64_t)(v29 + 63) >> 6;
  v69 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v31 = v72;
  v65 = v7;
  while (1)
  {
    if (v17)
    {
      v32 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v33 = v32 | (v28 << 6);
      goto LABEL_29;
    }
    v34 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v34 >= v75)
      goto LABEL_57;
    v35 = *(_QWORD *)(v74 + 8 * v34);
    ++v28;
    if (!v35)
    {
      v28 = v34 + 1;
      if (v34 + 1 >= v75)
        goto LABEL_57;
      v35 = *(_QWORD *)(v74 + 8 * v28);
      if (!v35)
      {
        v28 = v34 + 2;
        if (v34 + 2 >= v75)
          goto LABEL_57;
        v35 = *(_QWORD *)(v74 + 8 * v28);
        if (!v35)
          break;
      }
    }
LABEL_28:
    v17 = (v35 - 1) & v35;
    v33 = __clz(__rbit64(v35)) + (v28 << 6);
LABEL_29:
    v37 = *(_QWORD *)(v18 + 56);
    v38 = *(_QWORD *)(v18 + 48) + 56 * v33;
    v39 = *(_OWORD *)v38;
    v40 = *(_OWORD *)(v38 + 16);
    v41 = *(_OWORD *)(v38 + 32);
    v42 = *(_QWORD *)(v38 + 48);
    v78 = v40;
    v79[0] = v41;
    *(_QWORD *)&v79[1] = v42;
    v77 = v39;
    v43 = *(_QWORD *)(v37 + 8 * v33);
    if (v40 == __PAIR128__(v4, v21) || (sub_19CFE06A0() & 1) != 0)
    {
      if (*((_QWORD *)&v77 + 1))
      {
        if (!v16 || v77 != __PAIR128__(v16, v20) && (sub_19CFE06A0() & 1) == 0)
          goto LABEL_41;
      }
      else if (v16)
      {
        goto LABEL_41;
      }
      if (*(_QWORD *)&v79[1])
      {
        if (!v7 || *(_OWORD *)((char *)v79 + 8) != __PAIR128__(v7, v31) && (sub_19CFE06A0() & 1) == 0)
          goto LABEL_41;
      }
      else if (v7)
      {
        goto LABEL_41;
      }
    }
    else
    {
LABEL_41:
      sub_19CD2AF14((uint64_t)&v77);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46 = sub_19CD2A4AC((uint64_t *)&v77);
      v47 = v69[2];
      v48 = (v45 & 1) == 0;
      v49 = v47 + v48;
      if (__OFADD__(v47, v48))
        goto LABEL_61;
      v50 = v45;
      if (v69[3] >= v49)
      {
        v31 = v72;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19CE19C50();
          v31 = v72;
        }
        v7 = v65;
      }
      else
      {
        sub_19CE14A88(v49, isUniquelyReferenced_nonNull_native);
        v51 = sub_19CD2A4AC((uint64_t *)&v77);
        if ((v50 & 1) != (v52 & 1))
          goto LABEL_63;
        v46 = v51;
        v7 = v65;
        v31 = v72;
      }
      v53 = v43 - (v66 < v43);
      if ((v50 & 1) != 0)
      {
        *(_QWORD *)(v69[7] + 8 * v46) = v53;
        v4 = v67;
      }
      else
      {
        v69[(v46 >> 6) + 8] |= 1 << v46;
        v54 = v69[6] + 56 * v46;
        v55 = v77;
        v56 = v78;
        v57 = v79[0];
        *(_QWORD *)(v54 + 48) = *(_QWORD *)&v79[1];
        *(_OWORD *)(v54 + 16) = v56;
        *(_OWORD *)(v54 + 32) = v57;
        *(_OWORD *)v54 = v55;
        *(_QWORD *)(v69[7] + 8 * v46) = v53;
        v58 = v69[2];
        v59 = __OFADD__(v58, 1);
        v60 = v58 + 1;
        v4 = v67;
        if (v59)
          goto LABEL_62;
        v69[2] = v60;
        sub_19CD2AF14((uint64_t)&v77);
      }
      v21 = v70;
      v20 = v71;
      swift_bridgeObjectRelease();
      sub_19CD2AF5C((uint64_t)&v77);
    }
  }
  v36 = v34 + 3;
  if (v36 >= v75)
  {
LABEL_57:
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v62 = swift_isUniquelyReferenced_nonNull_native();
    v76 = *v63;
    *v63 = 0x8000000000000000;
    sub_19CE17170((uint64_t)v69, v64, v16, v62);
    *v63 = v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  v35 = *(_QWORD *)(v74 + 8 * v36);
  if (v35)
  {
    v28 = v36;
    goto LABEL_28;
  }
  while (1)
  {
    v28 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v28 >= v75)
      goto LABEL_57;
    v35 = *(_QWORD *)(v74 + 8 * v28);
    ++v36;
    if (v35)
      goto LABEL_28;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.didMoveElement(_:on:to:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t inited;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unint64_t *v31;
  void (*v32)(_QWORD *);
  unint64_t *v33;
  uint64_t v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  BOOL v66;
  char v67;
  char v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t result;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  int64_t v114;
  _OWORD v116[2];
  unint64_t v117;
  uint64_t v118[7];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;

  v4 = v3;
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v14 = a1[8];
  v13 = a1[9];
  v118[0] = *a1;
  v118[1] = v6;
  v105 = v9;
  v106 = v7;
  v118[2] = v7;
  v118[3] = v8;
  v118[4] = v9;
  v118[5] = v10;
  v104 = v10;
  if (v6)
    v15 = v5;
  else
    v15 = 0;
  v109 = v11;
  v118[6] = v11;
  v111 = (unint64_t *)(v3 + 56);
  swift_beginAccess();
  v16 = *(_QWORD *)(v3 + 56);
  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  v107 = v5;
  v103 = v15;
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = sub_19CE120B8(v15, v6);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v20 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_19CD2A4AC(v118);
        if ((v22 & 1) != 0)
        {
          v113 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v23 = 0;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  v113 = 0;
  v23 = 1;
LABEL_13:
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 0x7469736F50646E65;
  *(_QWORD *)(inited + 40) = 0xEB000000006E6F69;
  v25 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 48) = a3;
  v110 = sub_19CD30650(inited);
  swift_beginAccess();
  v26 = *v111;
  v108 = v12;
  if (!*(_QWORD *)(*v111 + 16))
  {
LABEL_22:
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v27 = sub_19CE120B8(v15, v6);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v101 = v14;
  v102 = v13;
  v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v113 == a3)
    v30 = 1;
  else
    v30 = v23;
  if ((v30 & 1) == 0)
  {
    v98 = v6;
    v99 = v8;
    v100 = v4;
    *((_QWORD *)&v120 + 1) = v25;
    *(_QWORD *)&v119 = v113;
    sub_19CD433C0(&v119, v116);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v117 = v110;
    sub_19CD13D40(v116, 0x736F507472617473, 0xED00006E6F697469, isUniquelyReferenced_nonNull_native);
    v37 = v117;
    swift_bridgeObjectRelease();
    v38 = a3;
    v39 = v113;
    if (v113 <= a3)
    {
      v38 = v113 + 1;
      if (__OFADD__(v113, 1))
        goto LABEL_92;
      v39 = a3 + 1;
      if (__OFADD__(a3, 1))
      {
LABEL_93:
        __break(1u);
      }
      else if (v39 >= v38)
      {
        goto LABEL_28;
      }
      __break(1u);
LABEL_95:
      result = sub_19CFE082C();
      __break(1u);
      return result;
    }
LABEL_28:
    v110 = v37;
    v40 = 0;
    v112 = v29 + 64;
    v41 = 1 << *(_BYTE *)(v29 + 32);
    v42 = -1;
    if (v41 < 64)
      v42 = ~(-1 << v41);
    v43 = v42 & *(_QWORD *)(v29 + 64);
    v114 = (unint64_t)(v41 + 63) >> 6;
    v44 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      if (v43)
      {
        v45 = __clz(__rbit64(v43));
        v43 &= v43 - 1;
        v46 = v45 | (v40 << 6);
      }
      else
      {
        v47 = v40 + 1;
        if (__OFADD__(v40, 1))
          goto LABEL_86;
        if (v47 >= v114)
        {
LABEL_79:
          swift_release();
          swift_bridgeObjectRetain();
          v6 = v98;
          swift_bridgeObjectRetain();
          v8 = v99;
          swift_bridgeObjectRetain();
          v86 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v116[0] = v44;
          sub_19CE172D4(a3, (uint64_t)v118, v86);
          v87 = *(_QWORD *)&v116[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v88 = swift_isUniquelyReferenced_nonNull_native();
          v117 = *v111;
          *v111 = 0x8000000000000000;
          v34 = v109;
          sub_19CE17170(v87, v103, v98, v88);
          *v111 = v117;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          v4 = v100;
          goto LABEL_80;
        }
        v48 = *(_QWORD *)(v112 + 8 * v47);
        ++v40;
        if (!v48)
        {
          v40 = v47 + 1;
          if (v47 + 1 >= v114)
            goto LABEL_79;
          v48 = *(_QWORD *)(v112 + 8 * v40);
          if (!v48)
          {
            v40 = v47 + 2;
            if (v47 + 2 >= v114)
              goto LABEL_79;
            v48 = *(_QWORD *)(v112 + 8 * v40);
            if (!v48)
            {
              v49 = v47 + 3;
              if (v49 >= v114)
                goto LABEL_79;
              v48 = *(_QWORD *)(v112 + 8 * v49);
              if (!v48)
              {
                while (1)
                {
                  v40 = v49 + 1;
                  if (__OFADD__(v49, 1))
                    break;
                  if (v40 >= v114)
                    goto LABEL_79;
                  v48 = *(_QWORD *)(v112 + 8 * v40);
                  ++v49;
                  if (v48)
                    goto LABEL_48;
                }
                __break(1u);
LABEL_92:
                __break(1u);
                goto LABEL_93;
              }
              v40 = v49;
            }
          }
        }
LABEL_48:
        v43 = (v48 - 1) & v48;
        v46 = __clz(__rbit64(v48)) + (v40 << 6);
      }
      v50 = *(_QWORD *)(v29 + 56);
      v51 = *(_QWORD *)(v29 + 48) + 56 * v46;
      v52 = *(_QWORD *)(v51 + 48);
      v53 = *(_OWORD *)(v51 + 32);
      v54 = *(_OWORD *)v51;
      v120 = *(_OWORD *)(v51 + 16);
      v121 = v53;
      v119 = v54;
      v122 = v52;
      v55 = *(_QWORD *)(v50 + 8 * v46);
      if (v55 >= v38 && v55 < v39)
      {
        if (v113 <= a3)
        {
          v66 = __OFSUB__(v55--, 1);
          if (v66)
            goto LABEL_87;
        }
        else
        {
          ++v55;
        }
        sub_19CD2AF14((uint64_t)&v119);
        v67 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v116[0] = v44;
        v59 = sub_19CD2A4AC((uint64_t *)&v119);
        v69 = v44[2];
        v70 = (v68 & 1) == 0;
        v71 = v69 + v70;
        if (__OFADD__(v69, v70))
          goto LABEL_85;
        v72 = v68;
        if (v44[3] >= v71)
        {
          if ((v67 & 1) != 0)
          {
            v44 = *(_QWORD **)&v116[0];
            if ((v68 & 1) != 0)
              goto LABEL_31;
          }
          else
          {
            sub_19CE19C50();
            v44 = *(_QWORD **)&v116[0];
            if ((v72 & 1) != 0)
              goto LABEL_31;
          }
        }
        else
        {
          sub_19CE14A88(v71, v67);
          v73 = sub_19CD2A4AC((uint64_t *)&v119);
          if ((v72 & 1) != (v74 & 1))
            goto LABEL_95;
          v59 = v73;
          v44 = *(_QWORD **)&v116[0];
          if ((v72 & 1) != 0)
          {
LABEL_31:
            *(_QWORD *)(v44[7] + 8 * v59) = v55;
            goto LABEL_32;
          }
        }
        v44[(v59 >> 6) + 8] |= 1 << v59;
        v81 = v44[6] + 56 * v59;
        v82 = v119;
        v83 = v120;
        v84 = v121;
        *(_QWORD *)(v81 + 48) = v122;
        *(_OWORD *)(v81 + 16) = v83;
        *(_OWORD *)(v81 + 32) = v84;
        *(_OWORD *)v81 = v82;
        *(_QWORD *)(v44[7] + 8 * v59) = v55;
        v85 = v44[2];
        v66 = __OFADD__(v85, 1);
        v80 = v85 + 1;
        if (v66)
          goto LABEL_89;
      }
      else
      {
        sub_19CD2AF14((uint64_t)&v119);
        v57 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v116[0] = v44;
        v59 = sub_19CD2A4AC((uint64_t *)&v119);
        v60 = v44[2];
        v61 = (v58 & 1) == 0;
        v62 = v60 + v61;
        if (__OFADD__(v60, v61))
        {
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
        v63 = v58;
        if (v44[3] >= v62)
        {
          if ((v57 & 1) != 0)
          {
            v44 = *(_QWORD **)&v116[0];
            if ((v58 & 1) != 0)
              goto LABEL_31;
          }
          else
          {
            sub_19CE19C50();
            v44 = *(_QWORD **)&v116[0];
            if ((v63 & 1) != 0)
              goto LABEL_31;
          }
        }
        else
        {
          sub_19CE14A88(v62, v57);
          v64 = sub_19CD2A4AC((uint64_t *)&v119);
          if ((v63 & 1) != (v65 & 1))
            goto LABEL_95;
          v59 = v64;
          v44 = *(_QWORD **)&v116[0];
          if ((v63 & 1) != 0)
            goto LABEL_31;
        }
        v44[(v59 >> 6) + 8] |= 1 << v59;
        v75 = v44[6] + 56 * v59;
        v76 = v119;
        v77 = v120;
        v78 = v121;
        *(_QWORD *)(v75 + 48) = v122;
        *(_OWORD *)(v75 + 16) = v77;
        *(_OWORD *)(v75 + 32) = v78;
        *(_OWORD *)v75 = v76;
        *(_QWORD *)(v44[7] + 8 * v59) = v55;
        v79 = v44[2];
        v66 = __OFADD__(v79, 1);
        v80 = v79 + 1;
        if (v66)
          goto LABEL_88;
      }
      v44[2] = v80;
      sub_19CD2AF14((uint64_t)&v119);
LABEL_32:
      swift_bridgeObjectRelease();
      sub_19CD2AF5C((uint64_t)&v119);
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v32 = sub_19CDF9F4C(&v119, v15, v6);
  if (*v31)
  {
    v33 = v31;
    v34 = v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v117 = *v33;
    *v33 = 0x8000000000000000;
    sub_19CE172D4(a3, (uint64_t)v118, v35);
    *v33 = v117;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(__int128 *, _QWORD))v32)(&v119, 0);
    swift_endAccess();
    swift_bridgeObjectRelease_n();
LABEL_80:
    v14 = v101;
    v13 = v102;
    goto LABEL_81;
  }
  ((void (*)(__int128 *, _QWORD))v32)(&v119, 0);
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  v14 = v101;
LABEL_23:
  v34 = v109;
LABEL_81:
  v89 = (void *)objc_opt_self();
  v90 = (void *)sub_19CFDEF0C();
  v91 = objc_msgSend(v89, sel_serverTimeFromDate_, v90);

  objc_msgSend(v91, sel_doubleValue);
  v93 = v92;

  type metadata accessor for ImpressionsTracking.DynamicChange();
  v94 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F40);
  v95 = swift_allocObject();
  *(_DWORD *)(v95 + 20) = 0;
  *(_BYTE *)(v95 + 16) = 1;
  v94[2] = v93;
  v94[3] = v107;
  v94[4] = v6;
  v94[5] = v106;
  v94[6] = v8;
  v94[7] = v105;
  v94[8] = v104;
  v94[9] = v34;
  v94[10] = v108;
  v94[11] = v14;
  v94[12] = v13;
  v94[13] = v95;
  v94[14] = v110;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v96 = swift_bridgeObjectRetain();
  MEMORY[0x1A1AD9A6C](v96);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
LABEL_90:
    sub_19CFDF8A8();
  sub_19CFDF8E4();
  sub_19CFDF878();
  return swift_endAccess();
}

void (*sub_19CDF9F4C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_19CDFE724(v6, a2, a3);
  return sub_19CDF9FB8;
}

void sub_19CDF9FB8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t DynamicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(unsigned __int8 *a1, uint64_t a2)
{
  double *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  unsigned __int8 v47;
  unint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unint64_t v51;

  v47 = *a1;
  v51 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  sub_19CDFE668(*(_QWORD *)(*((_QWORD *)v2 + 5) + 16), 0);
  sub_19CFDF878();
  v4 = *((_QWORD *)v2 + 5);
  v5 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_45;
    if (v13 >= v9)
      goto LABEL_25;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v9)
        goto LABEL_25;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v9)
          goto LABEL_25;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_20:
    v16 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v12);
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 80);
    v18 = *(_QWORD *)(v17 + 16);
    if (!v18 || (*(_BYTE *)(32 * v18 + v17) & 1) == 0)
    {
      v19 = swift_retain_n();
      MEMORY[0x1A1AD9A6C](v19);
      if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19CFDF8A8();
      sub_19CFDF8E4();
      sub_19CFDF878();
      swift_release();
    }
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    goto LABEL_25;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_46;
    if (v10 >= v9)
      break;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  swift_release();
  v37 = *((_QWORD *)v2 + 4);
  v38 = *((_QWORD *)v2 + 3);
  v39 = v51;
  v3 = v2[2];
  v50 = v47;
  swift_beginAccess();
  v8 = *((_QWORD *)v2 + 6);
  if (v8 >> 62)
    goto LABEL_47;
  v20 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v20)
  {
LABEL_27:
    v48 = v8 & 0xC000000000000001;
    v42 = v20;
    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v21 = 4;
    v41 = v8;
    while (1)
    {
      v22 = v21 - 4;
      if (v48)
      {
        v23 = MEMORY[0x1A1ADA390](v21 - 4, v8);
        v24 = v21 - 3;
        if (__OFADD__(v22, 1))
          goto LABEL_44;
      }
      else
      {
        v23 = *(_QWORD *)(v8 + 8 * v21);
        swift_retain();
        v24 = v21 - 3;
        if (__OFADD__(v22, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          swift_bridgeObjectRetain_n();
          v20 = sub_19CFE0394();
          swift_bridgeObjectRelease();
          if (!v20)
            break;
          goto LABEL_27;
        }
      }
      v25 = *(_QWORD *)(v23 + 48);
      if (v25)
      {
        v44 = *(_QWORD *)(v23 + 24);
        v45 = *(_OWORD *)(v23 + 56);
        v46 = *(_OWORD *)(v23 + 32);
        v26 = *(_QWORD *)(v23 + 72);
        v27 = *(_QWORD *)(v23 + 104);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock((os_unfair_lock_t)(v27 + 20));
        sub_19CD3EA18((_BYTE *)(v27 + 16), &v49);
        os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 20));
        swift_release();
        v28 = v49;
        swift_release();
        if (v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = v41;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v43 = sub_19CED4F44(0, v43[2] + 1, 1, v43);
          v8 = v41;
          v30 = v43[2];
          v29 = v43[3];
          v32 = v45;
          v31 = v46;
          if (v30 >= v29 >> 1)
          {
            v34 = sub_19CED4F44((_QWORD *)(v29 > 1), v30 + 1, 1, v43);
            v32 = v45;
            v31 = v46;
            v43 = v34;
          }
          v43[2] = v30 + 1;
          v33 = &v43[7 * v30];
          v33[4] = v44;
          *(_OWORD *)(v33 + 5) = v31;
          v33[7] = v25;
          *((_OWORD *)v33 + 4) = v32;
          v33[10] = v26;
        }
        v20 = v42;
      }
      else
      {
        swift_release();
      }
      ++v21;
      if (v24 == v20)
        goto LABEL_49;
    }
  }
  v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_49:
  swift_bridgeObjectRelease_n();
  v35 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v38, v37, v39, &v50, a2, (uint64_t)v43, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t DynamicImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double *v3;
  double v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  double *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  double v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char isUniquelyReferenced_nonNull_native;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t result;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v99;
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  int64_t v106;
  unint64_t v107;
  __int128 v108;
  uint64_t v109;
  int64_t v110;
  unint64_t v111;
  double *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  unint64_t v125;
  int64_t v126;
  _QWORD *v127;
  unsigned __int8 v128[24];
  unint64_t v129;

  v5 = 0;
  v99 = *a1;
  v129 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  sub_19CDFE668(*(_QWORD *)(*((_QWORD *)v3 + 5) + 16), 0);
  sub_19CFDF878();
  v112 = v3;
  v6 = *((_QWORD *)v3 + 5);
  v7 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v6 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_20;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_133;
    if (v15 >= v11)
      goto LABEL_25;
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v11)
        goto LABEL_25;
      v16 = *(_QWORD *)(v7 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v11)
          goto LABEL_25;
        v16 = *(_QWORD *)(v7 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_20:
    v18 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v14);
    swift_beginAccess();
    v19 = *(_QWORD *)(v18 + 80);
    v20 = *(_QWORD *)(v19 + 16);
    if (!v20 || (*(_BYTE *)(32 * v20 + v19) & 1) == 0)
    {
      v21 = swift_retain_n();
      MEMORY[0x1A1AD9A6C](v21);
      if (*(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19CFDF8A8();
      sub_19CFDF8E4();
      sub_19CFDF878();
      swift_release();
    }
  }
  v17 = v15 + 3;
  if (v17 >= v11)
    goto LABEL_25;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      goto LABEL_136;
    if (v5 >= v11)
      break;
    v16 = *(_QWORD *)(v7 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_25:
  swift_release();
  v96 = *((_QWORD *)v3 + 4);
  v97 = *((_QWORD *)v3 + 3);
  v111 = v129;
  v4 = v3[2];
  v128[0] = v99;
  swift_beginAccess();
  v6 = *((_QWORD *)v3 + 6);
  if (v6 >> 62)
    goto LABEL_138;
  v22 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_27:
  v23 = v12;
  if (v22)
  {
    v125 = v6 & 0xC000000000000001;
    v115 = v6;
    v117 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v24 = 4;
    v113 = v22;
    do
    {
      v25 = v24 - 4;
      if (v125)
      {
        v26 = MEMORY[0x1A1ADA390](v24 - 4, v6);
        v27 = v24 - 3;
        if (__OFADD__(v25, 1))
          goto LABEL_132;
      }
      else
      {
        v26 = *(_QWORD *)(v6 + 8 * v24);
        swift_retain();
        v27 = v24 - 3;
        if (__OFADD__(v25, 1))
          goto LABEL_132;
      }
      v28 = *(_QWORD *)(v26 + 48);
      if (v28)
      {
        v119 = *(_QWORD *)(v26 + 24);
        v121 = *(_OWORD *)(v26 + 56);
        v123 = *(_OWORD *)(v26 + 32);
        v29 = *(_QWORD *)(v26 + 72);
        v30 = *(_QWORD *)(v26 + 104);
        v12 = v30 + 20;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock((os_unfair_lock_t)(v30 + 20));
        sub_19CD3EA18((_BYTE *)(v30 + 16), &v127);
        os_unfair_lock_unlock((os_unfair_lock_t)(v30 + 20));
        swift_release();
        LODWORD(v30) = v127;
        swift_release();
        if ((_DWORD)v30)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v115;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v117 = sub_19CED4F44(0, v117[2] + 1, 1, v117);
          v6 = v115;
          v32 = v117[2];
          v31 = v117[3];
          v34 = v121;
          v33 = v123;
          if (v32 >= v31 >> 1)
          {
            v36 = sub_19CED4F44((_QWORD *)(v31 > 1), v32 + 1, 1, v117);
            v34 = v121;
            v33 = v123;
            v117 = v36;
          }
          v117[2] = v32 + 1;
          v35 = &v117[7 * v32];
          v35[4] = v119;
          *(_OWORD *)(v35 + 5) = v33;
          v35[7] = v28;
          *((_OWORD *)v35 + 4) = v34;
          v35[10] = v29;
        }
        v22 = v113;
      }
      else
      {
        swift_release();
      }
      ++v24;
    }
    while (v27 != v22);
  }
  else
  {
    v117 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  v94 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v97, v96, v111, v128, a2, (uint64_t)v117, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRetain();
  v93 = sub_19CDFDA8C(v37);
  swift_bridgeObjectRelease();
  v38 = *((_QWORD *)v112 + 6);
  swift_beginAccess();
  v39 = *((_QWORD *)v112 + 7);
  v92 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v107 = sub_19CE10084(MEMORY[0x1E0DEE9D8]);
  v100 = v39 + 64;
  v12 = 1;
  v40 = 1 << *(_BYTE *)(v39 + 32);
  v41 = -1;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  v6 = v41 & *(_QWORD *)(v39 + 64);
  v101 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  v42 = 0;
  v102 = v39;
  while (2)
  {
    if (v6)
    {
      v43 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v44 = v43 | (v42 << 6);
      goto LABEL_68;
    }
    v45 = __OFADD__(v42++, 1);
    if (v45)
      goto LABEL_137;
    if (v42 >= v101)
    {
LABEL_124:
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v127) = v99;
      v90 = sub_19CFDA038(v4, v97, v96, (unint64_t)v93, v92, v107, (char *)&v127, a2, 1);
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *a3 = v94;
      a3[1] = v90;
      return result;
    }
    v46 = *(_QWORD *)(v100 + 8 * v42);
    if (v46)
    {
LABEL_67:
      v6 = (v46 - 1) & v46;
      v44 = __clz(__rbit64(v46)) + (v42 << 6);
LABEL_68:
      v48 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v44);
      v49 = *(_QWORD *)(v48 + 16);
      v108 = *(_OWORD *)(*(_QWORD *)(v39 + 48) + 16 * v44);
      v105 = v6;
      v106 = v42;
      v109 = *(_QWORD *)(*(_QWORD *)(v39 + 48) + 16 * v44 + 8);
      if (!v49)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v56 = MEMORY[0x1E0DEE9D8];
LABEL_98:
        v127 = (_QWORD *)v56;
        swift_bridgeObjectRetain();
        sub_19CDFEA34((uint64_t *)&v127);
        if (v23)
          goto LABEL_140;
        v6 = 0;
        swift_bridgeObjectRelease();
        v74 = (uint64_t)v127;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v127 = (_QWORD *)v107;
        v77 = sub_19CE120B8(v108, v109);
        v78 = *(_QWORD *)(v107 + 16);
        v79 = (v76 & 1) == 0;
        v80 = v78 + v79;
        if (__OFADD__(v78, v79))
          goto LABEL_134;
        v81 = v76;
        if (*(_QWORD *)(v107 + 24) >= v80)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_19CE18484();
        }
        else
        {
          sub_19CE12730(v80, isUniquelyReferenced_nonNull_native);
          v82 = sub_19CE120B8(v108, v109);
          if ((v81 & 1) != (v83 & 1))
            goto LABEL_141;
          v77 = v82;
        }
        v84 = v127;
        v107 = (unint64_t)v127;
        if ((v81 & 1) != 0)
        {
          *(_QWORD *)(v127[7] + 8 * v77) = v74;
          swift_bridgeObjectRelease();
        }
        else
        {
          v127[(v77 >> 6) + 8] |= 1 << v77;
          *(_OWORD *)(v84[6] + 16 * v77) = v108;
          *(_QWORD *)(v84[7] + 8 * v77) = v74;
          v85 = v84[2];
          v45 = __OFADD__(v85, 1);
          v86 = v85 + 1;
          if (v45)
            goto LABEL_135;
          v84[2] = v86;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v23 = 0;
        v39 = v102;
        v6 = v105;
        v42 = v106;
        continue;
      }
      v103 = v23;
      v127 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_19CE4A220(0, v49, 0);
      v51 = (double *)(v48 + 64);
      v50 = *(_QWORD *)(v48 + 64);
      v52 = *(_BYTE *)(v48 + 32);
      if (v50)
      {
        v53 = 0;
      }
      else
      {
        v54 = 1 << v52;
        if ((v52 & 0x3Fu) < 7)
          goto LABEL_72;
        v50 = *(_QWORD *)(v48 + 72);
        if (v50)
        {
          v53 = 1;
        }
        else
        {
          if ((v52 & 0x3Fu) < 8)
            goto LABEL_72;
          v50 = *(_QWORD *)(v48 + 80);
          if (v50)
          {
            v53 = 2;
          }
          else
          {
            v87 = 0;
            v88 = (unint64_t)(v54 + 63) >> 6;
            if (v88 <= 3)
              v88 = 3;
            v89 = v88 - 3;
            do
            {
              if (v89 == v87)
                goto LABEL_72;
              v50 = *(_QWORD *)(v48 + 88 + 8 * v87++);
            }
            while (!v50);
            v53 = v87 + 2;
          }
        }
      }
      v54 = __clz(__rbit64(v50)) + (v53 << 6);
LABEL_72:
      v55 = 0;
      v56 = (uint64_t)v127;
      LODWORD(v111) = *(_DWORD *)(v48 + 36);
      v104 = v48 + 88;
      v110 = v49;
      v112 = (double *)(v48 + 64);
      while (1)
      {
        if (v55 == v49)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          swift_bridgeObjectRetain_n();
          v22 = sub_19CFE0394();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        if (v54 < 0)
          goto LABEL_126;
        if (v54 >= 1 << v52)
          goto LABEL_127;
        v59 = (unint64_t)v54 >> 6;
        if ((*(_QWORD *)&v51[(unint64_t)v54 >> 6] & (1 << v54)) == 0)
          goto LABEL_128;
        v60 = *(_QWORD *)(v48 + 56);
        v61 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 56 * v54);
        v6 = v48;
        v62 = v61[1];
        v118 = *v61;
        v120 = v61[2];
        v63 = v61[3];
        v122 = v61[4];
        v64 = v61[6];
        v124 = v61[5];
        v114 = v55;
        v116 = *(_QWORD *)(v60 + 8 * v54);
        v127 = (_QWORD *)v56;
        v66 = *(_QWORD *)(v56 + 16);
        v65 = *(_QWORD *)(v56 + 24);
        v126 = v66 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v66 >= v65 >> 1)
        {
          sub_19CE4A220(v65 > 1, v126, 1);
          v56 = (uint64_t)v127;
        }
        *(_QWORD *)(v56 + 16) = v126;
        v67 = (_QWORD *)(v56 + (v66 << 6));
        v67[4] = v116;
        v67[5] = v118;
        v67[6] = v62;
        v67[7] = v120;
        v67[8] = v63;
        v67[9] = v122;
        v67[10] = v124;
        v67[11] = v64;
        v52 = *(_BYTE *)(v6 + 32);
        v12 = 1;
        v57 = 1 << v52;
        if (v54 >= 1 << v52)
          goto LABEL_129;
        v51 = v112;
        v68 = v112[v59];
        if ((*(_QWORD *)&v68 & (1 << v54)) == 0)
          goto LABEL_130;
        v48 = v6;
        if ((_DWORD)v111 != *(_DWORD *)(v6 + 36))
          goto LABEL_131;
        v69 = *(_QWORD *)&v68 & (-2 << (v54 & 0x3F));
        if (v69)
        {
          v57 = __clz(__rbit64(v69)) | v54 & 0xFFFFFFFFFFFFFFC0;
          v49 = v110;
        }
        else
        {
          v70 = v59 + 1;
          v71 = (v57 + 63) >> 6;
          v49 = v110;
          if (v59 + 1 < v71)
          {
            v72 = *(_QWORD *)&v112[v70];
            if (v72)
              goto LABEL_88;
            v70 = v59 + 2;
            if (v59 + 2 < v71)
            {
              v72 = *(_QWORD *)&v112[v70];
              if (!v72)
              {
                v73 = v71 - 3;
                v58 = v114;
                while (v73 != v59)
                {
                  v72 = *(_QWORD *)(v104 + 8 * v59++);
                  if (v72)
                  {
                    v70 = v59 + 2;
                    goto LABEL_89;
                  }
                }
                goto LABEL_75;
              }
LABEL_88:
              v58 = v114;
LABEL_89:
              v57 = __clz(__rbit64(v72)) + (v70 << 6);
              goto LABEL_75;
            }
          }
        }
        v58 = v114;
LABEL_75:
        v55 = v58 + 1;
        v54 = v57;
        if (v55 == v49)
        {
          v23 = v103;
          goto LABEL_98;
        }
      }
    }
    break;
  }
  v47 = v42 + 1;
  if (v42 + 1 >= v101)
    goto LABEL_124;
  v46 = *(_QWORD *)(v100 + 8 * v47);
  if (v46)
    goto LABEL_66;
  v47 = v42 + 2;
  if (v42 + 2 >= v101)
    goto LABEL_124;
  v46 = *(_QWORD *)(v100 + 8 * v47);
  if (v46)
    goto LABEL_66;
  v47 = v42 + 3;
  if (v42 + 3 >= v101)
    goto LABEL_124;
  v46 = *(_QWORD *)(v100 + 8 * v47);
  if (v46)
    goto LABEL_66;
  v47 = v42 + 4;
  if (v42 + 4 >= v101)
    goto LABEL_124;
  v46 = *(_QWORD *)(v100 + 8 * v47);
  if (v46)
    goto LABEL_66;
  v47 = v42 + 5;
  if (v42 + 5 >= v101)
    goto LABEL_124;
  v46 = *(_QWORD *)(v100 + 8 * v47);
  if (v46)
  {
LABEL_66:
    v42 = v47;
    goto LABEL_67;
  }
  while (1)
  {
    v42 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v42 >= v101)
      goto LABEL_124;
    v46 = *(_QWORD *)(v100 + 8 * v42);
    ++v47;
    if (v46)
      goto LABEL_67;
  }
  __break(1u);
LABEL_140:
  swift_release();
  __break(1u);
LABEL_141:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CDFB000()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  int64_t v62;
  __int128 v63;
  uint64_t v64;
  int64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  _QWORD *v75;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_19CE10084(MEMORY[0x1E0DEE9D8]);
  v57 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v58 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v56 = v1;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v8 = (v5 - 1) & v5;
      v9 = v7 | (v6 << 6);
    }
    else
    {
      v10 = __OFADD__(v6++, 1);
      if (v10)
        goto LABEL_90;
      if (v6 >= v58)
        goto LABEL_80;
      v11 = *(_QWORD *)(v57 + 8 * v6);
      if (!v11)
      {
        v12 = v6 + 1;
        if (v6 + 1 >= v58)
          goto LABEL_80;
        v11 = *(_QWORD *)(v57 + 8 * v12);
        if (!v11)
        {
          v12 = v6 + 2;
          if (v6 + 2 >= v58)
            goto LABEL_80;
          v11 = *(_QWORD *)(v57 + 8 * v12);
          if (!v11)
          {
            v12 = v6 + 3;
            if (v6 + 3 >= v58)
              goto LABEL_80;
            v11 = *(_QWORD *)(v57 + 8 * v12);
            if (!v11)
            {
              v12 = v6 + 4;
              if (v6 + 4 >= v58)
                goto LABEL_80;
              v11 = *(_QWORD *)(v57 + 8 * v12);
              if (!v11)
              {
                v12 = v6 + 5;
                if (v6 + 5 >= v58)
                  goto LABEL_80;
                v11 = *(_QWORD *)(v57 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    v6 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_91;
                    if (v6 >= v58)
                      break;
                    v11 = *(_QWORD *)(v57 + 8 * v6);
                    ++v12;
                    if (v11)
                      goto LABEL_22;
                  }
LABEL_80:
                  swift_release();
                  swift_bridgeObjectRelease();
                  return (uint64_t)v2;
                }
              }
            }
          }
        }
        v6 = v12;
      }
LABEL_22:
      v8 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v9);
    v14 = *(_QWORD *)(v13 + 16);
    v63 = *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v61 = v8;
    v62 = v6;
    v64 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v9 + 8);
    if (v14)
      break;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x1E0DEE9D8];
LABEL_53:
    v75 = (_QWORD *)v21;
    swift_bridgeObjectRetain();
    sub_19CDFEA34((uint64_t *)&v75);
    swift_bridgeObjectRelease();
    v40 = (uint64_t)v75;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v75 = v2;
    v43 = sub_19CE120B8(v63, v64);
    v44 = v2[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      goto LABEL_88;
    v47 = v42;
    if (v2[3] >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v2 = v75;
        if ((v42 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_19CE18484();
        v2 = v75;
        if ((v47 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_19CE12730(v46, isUniquelyReferenced_nonNull_native);
      v48 = sub_19CE120B8(v63, v64);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_92;
      v43 = v48;
      v2 = v75;
      if ((v47 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v2[7] + 8 * v43) = v40;
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    v2[(v43 >> 6) + 8] |= 1 << v43;
    *(_OWORD *)(v2[6] + 16 * v43) = v63;
    *(_QWORD *)(v2[7] + 8 * v43) = v40;
    v50 = v2[2];
    v10 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (v10)
      goto LABEL_89;
    v2[2] = v51;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v5 = v61;
    v6 = v62;
  }
  v75 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19CE4A220(0, v14, 0);
  v16 = v13 + 64;
  v15 = *(_QWORD *)(v13 + 64);
  v17 = *(_BYTE *)(v13 + 32);
  v59 = v2;
  if (v15)
  {
    v18 = 0;
    goto LABEL_26;
  }
  v19 = 1 << v17;
  if ((v17 & 0x3Fu) >= 7)
  {
    v15 = *(_QWORD *)(v13 + 72);
    if (v15)
    {
      v18 = 1;
      goto LABEL_26;
    }
    if ((v17 & 0x3Fu) >= 8)
    {
      v15 = *(_QWORD *)(v13 + 80);
      if (v15)
      {
        v18 = 2;
LABEL_26:
        v19 = __clz(__rbit64(v15)) + (v18 << 6);
      }
      else
      {
        v52 = 0;
        v53 = (unint64_t)(v19 + 63) >> 6;
        if (v53 <= 3)
          v53 = 3;
        v54 = v53 - 3;
        while (v54 != v52)
        {
          v15 = *(_QWORD *)(v13 + 88 + 8 * v52++);
          if (v15)
          {
            v18 = v52 + 2;
            goto LABEL_26;
          }
        }
      }
    }
  }
  v20 = 0;
  v21 = (uint64_t)v75;
  v66 = *(_DWORD *)(v13 + 36);
  v60 = v13 + 88;
  v65 = v14;
  v67 = v13 + 64;
  while (2)
  {
    if (v20 != v14)
    {
      if (v19 < 0)
        goto LABEL_82;
      if (v19 >= 1 << v17)
        goto LABEL_83;
      v24 = (unint64_t)v19 >> 6;
      if ((*(_QWORD *)(v16 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0)
        goto LABEL_84;
      v68 = v20;
      v25 = *(_QWORD *)(v13 + 56);
      v26 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 56 * v19);
      v27 = v26[1];
      v70 = *v26;
      v71 = v26[2];
      v28 = v13;
      v29 = v26[3];
      v72 = v26[4];
      v30 = v26[6];
      v73 = v26[5];
      v69 = *(_QWORD *)(v25 + 8 * v19);
      v75 = (_QWORD *)v21;
      v32 = *(_QWORD *)(v21 + 16);
      v31 = *(_QWORD *)(v21 + 24);
      v74 = v32 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= v31 >> 1)
      {
        sub_19CE4A220(v31 > 1, v74, 1);
        v21 = (uint64_t)v75;
      }
      *(_QWORD *)(v21 + 16) = v74;
      v33 = (_QWORD *)(v21 + (v32 << 6));
      v33[4] = v69;
      v33[5] = v70;
      v33[6] = v27;
      v33[7] = v71;
      v33[8] = v29;
      v33[9] = v72;
      v33[10] = v73;
      v33[11] = v30;
      v17 = *(_BYTE *)(v28 + 32);
      v22 = 1 << v17;
      if (v19 >= 1 << v17)
        goto LABEL_85;
      v16 = v67;
      v34 = *(_QWORD *)(v67 + 8 * v24);
      if ((v34 & (1 << v19)) == 0)
        goto LABEL_86;
      v13 = v28;
      if (v66 != *(_DWORD *)(v28 + 36))
        goto LABEL_87;
      v35 = v34 & (-2 << (v19 & 0x3F));
      if (v35)
      {
        v22 = __clz(__rbit64(v35)) | v19 & 0xFFFFFFFFFFFFFFC0;
        v14 = v65;
      }
      else
      {
        v36 = v24 + 1;
        v37 = (v22 + 63) >> 6;
        v14 = v65;
        if (v24 + 1 < v37)
        {
          v38 = *(_QWORD *)(v67 + 8 * v36);
          if (v38)
          {
LABEL_43:
            v23 = v68;
LABEL_44:
            v22 = __clz(__rbit64(v38)) + (v36 << 6);
            goto LABEL_30;
          }
          v36 = v24 + 2;
          if (v24 + 2 < v37)
          {
            v38 = *(_QWORD *)(v67 + 8 * v36);
            if (v38)
              goto LABEL_43;
            v39 = v37 - 3;
            v23 = v68;
            while (v39 != v24)
            {
              v38 = *(_QWORD *)(v60 + 8 * v24++);
              if (v38)
              {
                v36 = v24 + 2;
                goto LABEL_44;
              }
            }
LABEL_30:
            v20 = v23 + 1;
            v19 = v22;
            if (v20 == v14)
            {
              v1 = v56;
              v2 = v59;
              goto LABEL_53;
            }
            continue;
          }
        }
      }
      v23 = v68;
      goto LABEL_30;
    }
    break;
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  swift_release();
  __break(1u);
LABEL_92:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t DynamicImpressionsTracker.consumeImpressions(in:on:)(unsigned __int8 *a1, uint64_t a2)
{
  double *v2;
  unsigned __int8 v3;
  uint64_t v4;
  double v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  unsigned __int8 v34;
  unsigned __int8 v35;

  v3 = *a1;
  v25 = *((_QWORD *)v2 + 3);
  v24 = *((_QWORD *)v2 + 4);
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  v23 = sub_19CDFDA8C(v4);
  swift_bridgeObjectRelease();
  v5 = v2[2];
  v35 = v3;
  swift_beginAccess();
  v6 = *((_QWORD *)v2 + 6);
  if (v6 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    v7 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7)
    {
LABEL_3:
      v33 = v6 & 0xC000000000000001;
      v28 = v7;
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v8 = 4;
      v27 = v6;
      while (1)
      {
        v9 = v8 - 4;
        if (v33)
        {
          v10 = MEMORY[0x1A1ADA390](v8 - 4, v6);
          v11 = v8 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_20;
        }
        else
        {
          v10 = *(_QWORD *)(v6 + 8 * v8);
          swift_retain();
          v11 = v8 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v12 = *(_QWORD *)(v10 + 48);
        if (v12)
        {
          v30 = *(_QWORD *)(v10 + 24);
          v31 = *(_OWORD *)(v10 + 56);
          v32 = *(_OWORD *)(v10 + 32);
          v13 = *(_QWORD *)(v10 + 72);
          v14 = *(_QWORD *)(v10 + 104);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_unfair_lock_lock((os_unfair_lock_t)(v14 + 20));
          sub_19CD3EA18((_BYTE *)(v14 + 16), &v34);
          os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 20));
          swift_release();
          LODWORD(v14) = v34;
          swift_release();
          if ((_DWORD)v14)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6 = v27;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v29 = sub_19CED4F44(0, v29[2] + 1, 1, v29);
            v6 = v27;
            v16 = v29[2];
            v15 = v29[3];
            v18 = v31;
            v17 = v32;
            if (v16 >= v15 >> 1)
            {
              v20 = sub_19CED4F44((_QWORD *)(v15 > 1), v16 + 1, 1, v29);
              v18 = v31;
              v17 = v32;
              v29 = v20;
            }
            v29[2] = v16 + 1;
            v19 = &v29[7 * v16];
            v19[4] = v30;
            *(_OWORD *)(v19 + 5) = v17;
            v19[7] = v12;
            *((_OWORD *)v19 + 4) = v18;
            v19[10] = v13;
          }
          v7 = v28;
        }
        else
        {
          swift_release();
        }
        ++v8;
        if (v11 == v7)
          goto LABEL_23;
      }
    }
  }
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
  swift_bridgeObjectRelease_n();
  v21 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v25, v24, (unint64_t)v23, &v35, a2, (uint64_t)v29, v5);
  swift_bridgeObjectRelease();
  swift_release();
  DynamicImpressionsTracker.removeAllImpressions()();
  return v21;
}

Swift::Void __swiftcall DynamicImpressionsTracker.removeAllImpressions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[2];

  v39 = (uint64_t *)(v0 + 40);
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 64);
  v41 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v44 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  v43 = (uint64_t *)(v0 + 48);
  swift_beginAccess();
  v6 = 0;
  v42 = (unint64_t)(v3 + 63) >> 6;
  v40 = MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v8 = (v5 - 1) & v5;
      v9 = v7 | (v6 << 6);
    }
    else
    {
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_68;
      if (v10 >= v42)
        goto LABEL_66;
      v11 = *(_QWORD *)(v41 + 8 * v10);
      ++v6;
      if (!v11)
      {
        v6 = v10 + 1;
        if (v10 + 1 >= v42)
          goto LABEL_66;
        v11 = *(_QWORD *)(v41 + 8 * v6);
        if (!v11)
        {
          v6 = v10 + 2;
          if (v10 + 2 >= v42)
            goto LABEL_66;
          v11 = *(_QWORD *)(v41 + 8 * v6);
          if (!v11)
          {
            v6 = v10 + 3;
            if (v10 + 3 >= v42)
              goto LABEL_66;
            v11 = *(_QWORD *)(v41 + 8 * v6);
            if (!v11)
            {
              v6 = v10 + 4;
              if (v10 + 4 >= v42)
                goto LABEL_66;
              v11 = *(_QWORD *)(v41 + 8 * v6);
              if (!v11)
              {
                v12 = v10 + 5;
                if (v12 >= v42)
                  goto LABEL_66;
                v11 = *(_QWORD *)(v41 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    v6 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_69;
                    if (v6 >= v42)
                      break;
                    v11 = *(_QWORD *)(v41 + 8 * v6);
                    ++v12;
                    if (v11)
                      goto LABEL_25;
                  }
LABEL_66:
                  swift_release();
                  *v39 = v40;
                  swift_bridgeObjectRelease();
                  return;
                }
                v6 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      v8 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    v45 = v8;
    v46 = v6;
    v13 = *(_QWORD *)(v44 + 48) + 56 * v9;
    v14 = *(_QWORD *)(v13 + 48);
    v15 = *(_OWORD *)(v13 + 32);
    v16 = *(_OWORD *)v13;
    v52 = *(_OWORD *)(v13 + 16);
    v53[0] = v15;
    v51 = v16;
    *(_QWORD *)&v53[1] = v14;
    v49 = *(_QWORD *)(v13 + 8);
    v50 = *(_QWORD *)v13;
    v47 = *(_QWORD *)(v13 + 24);
    v48 = *(_QWORD *)(v13 + 16);
    v17 = *v43;
    if ((unint64_t)*v43 >> 62)
      break;
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    sub_19CD2AF14((uint64_t)&v51);
    if (v18)
      goto LABEL_28;
LABEL_4:
    swift_bridgeObjectRelease_n();
    v5 = v45;
LABEL_5:
    sub_19CD2AF5C((uint64_t)&v51);
    v6 = v46;
  }
  swift_bridgeObjectRetain_n();
  sub_19CD2AF14((uint64_t)&v51);
  v18 = sub_19CFE0394();
  if (!v18)
    goto LABEL_4;
LABEL_28:
  v19 = 4;
  while (1)
  {
    v20 = v19 - 4;
    if ((v17 & 0xC000000000000001) == 0)
      break;
    v21 = (_QWORD *)MEMORY[0x1A1ADA390](v19 - 4, v17);
    v22 = v19 - 3;
    if (__OFADD__(v20, 1))
      goto LABEL_67;
LABEL_37:
    v23 = v21[6];
    if (!v23)
    {
      sub_19CD2AF14((uint64_t)&v51);
      sub_19CD2A71C(0, 0, 0, 0);
      sub_19CD2A71C(v50, v49, v48, v47);
LABEL_30:
      swift_release();
      goto LABEL_31;
    }
    v25 = v21[3];
    v24 = v21[4];
    v27 = v21[8];
    v26 = v21[9];
    v28 = v21[5] == (_QWORD)v52 && v23 == *((_QWORD *)&v52 + 1);
    if (!v28 && (sub_19CFE06A0() & 1) == 0)
      goto LABEL_30;
    if (v24)
    {
      if (!*((_QWORD *)&v51 + 1) || __PAIR128__(v24, v25) != v51 && (sub_19CFE06A0() & 1) == 0)
        goto LABEL_30;
    }
    else if (*((_QWORD *)&v51 + 1))
    {
      goto LABEL_30;
    }
    v29 = *(_QWORD *)&v53[1] == 0;
    if (v26)
    {
      if (!*(_QWORD *)&v53[1])
        goto LABEL_30;
      if (__PAIR128__(v26, v27) == *(_OWORD *)((char *)v53 + 8))
      {
        swift_release();
LABEL_55:
        swift_bridgeObjectRelease_n();
        swift_beginAccess();
        v30 = *v39;
        v5 = v45;
        if (*(_QWORD *)(*v39 + 16))
        {
          sub_19CD2AF14((uint64_t)&v51);
          v31 = sub_19CD2A4AC((uint64_t *)&v51);
          if ((v32 & 1) == 0)
          {
            sub_19CD2AF5C((uint64_t)&v51);
            goto LABEL_58;
          }
          v37 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31);
          swift_endAccess();
          swift_retain();
          sub_19CD2AF5C((uint64_t)&v51);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_19CD2B700(v37, (uint64_t)&v51, isUniquelyReferenced_nonNull_native);
        }
        else
        {
LABEL_58:
          swift_endAccess();
          swift_bridgeObjectRetain();
          v33 = sub_19CD2A4AC((uint64_t *)&v51);
          v35 = v34;
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
            goto LABEL_5;
          v36 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_19CE18674();
            v36 = v40;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v40 = v36;
          sub_19CDD378C(v33, v36);
          swift_release();
        }
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      v29 = sub_19CFE06A0();
    }
    swift_release();
    if ((v29 & 1) != 0)
      goto LABEL_55;
LABEL_31:
    ++v19;
    if (v22 == v18)
      goto LABEL_4;
  }
  v21 = *(_QWORD **)(v17 + 8 * v19);
  swift_retain();
  v22 = v19 - 3;
  if (!__OFADD__(v20, 1))
    goto LABEL_37;
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
}

void DynamicImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double *v3;
  unsigned __int8 v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  double *v34;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  unint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;

  v4 = *a1;
  v30 = *((_QWORD *)v3 + 4);
  v31 = *((_QWORD *)v3 + 3);
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  v29 = sub_19CDFDA8C(v5);
  swift_bridgeObjectRelease();
  v6 = v3[2];
  v32 = v4;
  v44 = v4;
  swift_beginAccess();
  v34 = v3;
  v7 = *((_QWORD *)v3 + 6);
  if (v7 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain_n();
    v8 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v8)
    {
LABEL_3:
      v42 = v7 & 0xC000000000000001;
      v37 = v7;
      v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v9 = 4;
      v36 = v8;
      while (1)
      {
        v10 = v9 - 4;
        if (v42)
        {
          v11 = MEMORY[0x1A1ADA390](v9 - 4, v7);
          v12 = v9 - 3;
          if (__OFADD__(v10, 1))
            goto LABEL_19;
        }
        else
        {
          v11 = *(_QWORD *)(v7 + 8 * v9);
          swift_retain();
          v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v13 = *(_QWORD *)(v11 + 48);
        if (v13)
        {
          v39 = *(_QWORD *)(v11 + 24);
          v40 = *(_OWORD *)(v11 + 56);
          v41 = *(_OWORD *)(v11 + 32);
          v14 = *(_QWORD *)(v11 + 72);
          v15 = *(_QWORD *)(v11 + 104);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_unfair_lock_lock((os_unfair_lock_t)(v15 + 20));
          sub_19CD3EA18((_BYTE *)(v15 + 16), &v43);
          os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 20));
          swift_release();
          v16 = v43;
          swift_release();
          if (v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v8 = v36;
            v7 = v37;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_19CED4F44(0, v38[2] + 1, 1, v38);
            v8 = v36;
            v7 = v37;
            v18 = v38[2];
            v17 = v38[3];
            v20 = v40;
            v19 = v41;
            if (v18 >= v17 >> 1)
            {
              v22 = sub_19CED4F44((_QWORD *)(v17 > 1), v18 + 1, 1, v38);
              v20 = v40;
              v19 = v41;
              v38 = v22;
            }
            v38[2] = v18 + 1;
            v21 = &v38[7 * v18];
            v21[4] = v39;
            *(_OWORD *)(v21 + 5) = v19;
            v21[7] = v13;
            *((_OWORD *)v21 + 4) = v20;
            v21[10] = v14;
          }
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v12 == v8)
          goto LABEL_22;
      }
    }
  }
  v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease_n();
  v23 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v31, v30, (unint64_t)v29, &v44, a2, (uint64_t)v38, v6);
  swift_bridgeObjectRelease();
  swift_release();
  v24 = swift_bridgeObjectRetain();
  v25 = sub_19CDFDA8C(v24);
  swift_bridgeObjectRelease();
  v26 = *((_QWORD *)v34 + 6);
  swift_bridgeObjectRetain();
  v27 = sub_19CDFB000();
  v44 = v32;
  v28 = sub_19CFDC360((unint64_t)v25, v26, v27, (char *)&v44, a2, 0, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  DynamicImpressionsTracker.removeAllImpressions()();
  DynamicImpressionsTracker.removeAllDynamicEvents()();
  *a3 = v23;
  a3[1] = v28;
}

Swift::Void __swiftcall DynamicImpressionsTracker.removeAllDynamicEvents()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  _OWORD v69[2];

  v57 = v0 + 5;
  swift_beginAccess();
  v1 = v0[5];
  v2 = *(_QWORD *)(v1 + 64);
  v54 = v0;
  v55 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v59 = v0[5];
  swift_bridgeObjectRetain();
  v60 = v0 + 6;
  swift_beginAccess();
  v6 = 0;
  v56 = (unint64_t)(v3 + 63) >> 6;
  v58 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v11 = (v5 - 1) & v5;
      v12 = v10 | (v6 << 6);
    }
    else
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_76;
      if (v13 >= v56)
        goto LABEL_74;
      v14 = *(_QWORD *)(v55 + 8 * v13);
      ++v6;
      if (!v14)
      {
        v6 = v13 + 1;
        if (v13 + 1 >= v56)
          goto LABEL_74;
        v14 = *(_QWORD *)(v55 + 8 * v6);
        if (!v14)
        {
          v6 = v13 + 2;
          if (v13 + 2 >= v56)
            goto LABEL_74;
          v14 = *(_QWORD *)(v55 + 8 * v6);
          if (!v14)
          {
            v6 = v13 + 3;
            if (v13 + 3 >= v56)
              goto LABEL_74;
            v14 = *(_QWORD *)(v55 + 8 * v6);
            if (!v14)
            {
              v6 = v13 + 4;
              if (v13 + 4 >= v56)
                goto LABEL_74;
              v14 = *(_QWORD *)(v55 + 8 * v6);
              if (!v14)
              {
                v15 = v13 + 5;
                if (v15 >= v56)
                  goto LABEL_74;
                v14 = *(_QWORD *)(v55 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    v6 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_78;
                    if (v6 >= v56)
                      break;
                    v14 = *(_QWORD *)(v55 + 8 * v6);
                    ++v15;
                    if (v14)
                      goto LABEL_29;
                  }
LABEL_74:
                  swift_release();
                  v54[5] = v58;
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  v54[6] = MEMORY[0x1E0DEE9D8];
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  v54[7] = MEMORY[0x1E0DEE9E0];
                  swift_bridgeObjectRelease();
                  return;
                }
                v6 = v15;
              }
            }
          }
        }
      }
LABEL_29:
      v11 = (v14 - 1) & v14;
      v12 = __clz(__rbit64(v14)) + (v6 << 6);
    }
    v62 = v6;
    v17 = *(_QWORD *)(v59 + 48) + 56 * v12;
    v18 = *(_QWORD *)(v17 + 48);
    v19 = *(_OWORD *)(v17 + 32);
    v20 = *(_OWORD *)v17;
    v68 = *(_OWORD *)(v17 + 16);
    v69[0] = v19;
    v67 = v20;
    *(_QWORD *)&v69[1] = v18;
    v65 = *(_QWORD *)(v17 + 8);
    v66 = *(_QWORD *)v17;
    v63 = *(_QWORD *)(v17 + 24);
    v64 = *(_QWORD *)(v17 + 16);
    v21 = *v60;
    if ((unint64_t)*v60 >> 62)
      break;
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    sub_19CD2AF14((uint64_t)&v67);
    v61 = v11;
    if (v22)
      goto LABEL_32;
LABEL_61:
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v34 = *v57;
    if (*(_QWORD *)(*v57 + 16))
    {
      sub_19CD2AF14((uint64_t)&v67);
      v35 = sub_19CD2A4AC((uint64_t *)&v67);
      if ((v36 & 1) != 0)
      {
        v37 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
        swift_endAccess();
        swift_retain();
        sub_19CD2AF5C((uint64_t)&v67);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v40 = sub_19CD2A4AC((uint64_t *)&v67);
        v41 = v58[2];
        v42 = (v39 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
          goto LABEL_77;
        v44 = v39;
        if (v58[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_19CE18674();
        }
        else
        {
          sub_19CE12A24(v43, isUniquelyReferenced_nonNull_native);
          v45 = sub_19CD2A4AC((uint64_t *)&v67);
          if ((v44 & 1) != (v46 & 1))
            goto LABEL_80;
          v40 = v45;
        }
        if ((v44 & 1) != 0)
        {
          *(_QWORD *)(v58[7] + 8 * v40) = v37;
          swift_release();
        }
        else
        {
          v58[(v40 >> 6) + 8] |= 1 << v40;
          v47 = v58[6] + 56 * v40;
          v48 = v67;
          v49 = v68;
          v50 = v69[0];
          *(_QWORD *)(v47 + 48) = *(_QWORD *)&v69[1];
          *(_OWORD *)(v47 + 16) = v49;
          *(_OWORD *)(v47 + 32) = v50;
          *(_OWORD *)v47 = v48;
          *(_QWORD *)(v58[7] + 8 * v40) = v37;
          v51 = v58[2];
          v52 = __OFADD__(v51, 1);
          v53 = v51 + 1;
          if (v52)
            goto LABEL_79;
          v58[2] = v53;
          sub_19CD2AF14((uint64_t)&v67);
        }
        goto LABEL_73;
      }
      sub_19CD2AF5C((uint64_t)&v67);
    }
    swift_endAccess();
    swift_bridgeObjectRetain();
    v7 = sub_19CD2A4AC((uint64_t *)&v67);
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_6;
    v16 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_19CE18674();
      v16 = v58;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = v16;
    sub_19CDD378C(v7, v16);
    swift_release();
LABEL_73:
    swift_bridgeObjectRelease();
LABEL_6:
    sub_19CD2AF5C((uint64_t)&v67);
    v5 = v61;
    v6 = v62;
  }
  swift_bridgeObjectRetain_n();
  sub_19CD2AF14((uint64_t)&v67);
  v22 = sub_19CFE0394();
  v61 = v11;
  if (!v22)
    goto LABEL_61;
LABEL_32:
  v23 = 4;
  while (1)
  {
    v24 = v23 - 4;
    if ((v21 & 0xC000000000000001) == 0)
      break;
    v25 = (_QWORD *)MEMORY[0x1A1ADA390](v23 - 4, v21);
    v26 = v23 - 3;
    if (__OFADD__(v24, 1))
      goto LABEL_75;
LABEL_41:
    v27 = v25[6];
    if (!v27)
    {
      sub_19CD2AF14((uint64_t)&v67);
      sub_19CD2A71C(0, 0, 0, 0);
      sub_19CD2A71C(v66, v65, v64, v63);
LABEL_34:
      swift_release();
      goto LABEL_35;
    }
    v29 = v25[3];
    v28 = v25[4];
    v31 = v25[8];
    v30 = v25[9];
    v32 = v25[5] == (_QWORD)v68 && v27 == *((_QWORD *)&v68 + 1);
    if (!v32 && (sub_19CFE06A0() & 1) == 0)
      goto LABEL_34;
    if (v28)
    {
      if (!*((_QWORD *)&v67 + 1) || __PAIR128__(v28, v29) != v67 && (sub_19CFE06A0() & 1) == 0)
        goto LABEL_34;
    }
    else if (*((_QWORD *)&v67 + 1))
    {
      goto LABEL_34;
    }
    v33 = *(_QWORD *)&v69[1] == 0;
    if (v30)
    {
      if (!*(_QWORD *)&v69[1])
        goto LABEL_34;
      if (__PAIR128__(v30, v31) == *(_OWORD *)((char *)v69 + 8))
      {
        swift_release();
LABEL_59:
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
      v33 = sub_19CFE06A0();
    }
    swift_release();
    if ((v33 & 1) != 0)
      goto LABEL_59;
LABEL_35:
    ++v23;
    if (v26 == v22)
      goto LABEL_61;
  }
  v25 = *(_QWORD **)(v21 + 8 * v23);
  swift_retain();
  v26 = v23 - 3;
  if (!__OFADD__(v24, 1))
    goto LABEL_41;
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  sub_19CFE082C();
  __break(1u);
}

uint64_t DynamicImpressionsTracker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DynamicImpressionsTracker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CDFC9D0(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 9);
  v5 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = v2;
  v15 = a1[2];
  v16 = v3;
  v17 = *(__int128 *)((char *)a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return DynamicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t sub_19CDFCA58(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19CDFCC50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = (_QWORD *)result;
  if (!a2)
  {
    v10 = 0;
    goto LABEL_11;
  }
  v10 = a3;
  if (!a3)
  {
LABEL_11:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = v10;
    return v10;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v11 = *(_QWORD *)(a4 + 16);
    if (v11)
    {
      v12 = a2;
      v13 = 0;
      v14 = a3 - 1;
      while (v13 < *(_QWORD *)(a4 + 16))
      {
        v15 = sub_19CFDEAA4();
        v16 = *(_QWORD *)(v15 - 8);
        v17 = *(_QWORD *)(v16 + 72);
        result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v12, a4+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ v17 * v13, v15);
        if (v14 == v13)
          goto LABEL_11;
        v12 += v17;
        if (v11 == ++v13)
          goto LABEL_9;
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    v10 = v11;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_19CDFCD34(_QWORD *a1, uint64_t *a2, uint64_t a3, id a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;

  if (!a2)
  {
LABEL_14:
    v9 = 0;
    goto LABEL_17;
  }
  v9 = a3;
  if (!a3)
  {
LABEL_17:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = v9;
    return v9;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v10 = a2;
    v20 = a1;
    a1 = objc_msgSend(a4, sel_numberOfRanges);
    v11 = (char *)a1 - 1;
    if (!__OFSUB__(a1, 1))
    {
      v12 = 1;
      while (1)
      {
        if ((char *)(v12 - 1) == v11)
        {
          v9 = v12 - 1;
LABEL_16:
          a1 = v20;
          goto LABEL_17;
        }
        v13 = objc_msgSend(a4, sel_numberOfRanges);
        if (__OFSUB__(v13, 1))
          break;
        if (v12 - 1 >= (uint64_t)v13 - 1)
          goto LABEL_19;
        objc_msgSend(a4, sel_rangeAtIndex_, v12);
        sub_19CFDFCC8();
        if ((v14 & 1) != 0)
          goto LABEL_21;
        v15 = sub_19CFDF764();
        v16 = MEMORY[0x1A1AD9838](v15);
        v18 = v17;
        swift_bridgeObjectRelease();
        *v10 = v16;
        v10[1] = v18;
        if (v9 == v12)
          goto LABEL_16;
        ++v12;
        a1 = objc_msgSend(a4, sel_numberOfRanges);
        v10 += 2;
        v11 = (char *)a1 - 1;
        if (__OFSUB__(a1, 1))
          goto LABEL_13;
      }
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

_QWORD *sub_19CDFCEC4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_19CDFD058(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19CDFD254(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19CDFD450(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (!v6)
      {
LABEL_20:
        v8 = 0;
        goto LABEL_17;
      }
      v8 = v6 - 1;
      v9 = a4 + 32 * (v6 - 1);
      v10 = *(_QWORD *)(v9 + 48);
      v11 = *(_QWORD *)(v9 + 56);
      *(_OWORD *)a2 = *(_OWORD *)(v9 + 32);
      *(_QWORD *)(a2 + 16) = v10;
      *(_QWORD *)(a2 + 24) = v11;
      if (a3 == 1)
      {
LABEL_15:
        v6 = a3;
      }
      else if (v6 != 1)
      {
        v12 = 0;
        v13 = a3 - 2;
        v14 = a4 + 32 * v6 - 32;
        v15 = (_QWORD *)(a2 + 56);
        while (v6 + v12 - 1 <= *(_QWORD *)(a4 + 16))
        {
          v16 = *(_QWORD *)(v14 + 16);
          v17 = *(_QWORD *)(v14 + 24);
          *(_OWORD *)(v15 - 3) = *(_OWORD *)v14;
          *(v15 - 1) = v16;
          *v15 = v17;
          if (!(v13 + v12))
          {
            swift_bridgeObjectRetain();
            v8 = v6 + v12 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v12;
          v14 -= 32;
          v15 += 4;
          if (v6 + v12 == 1)
          {
            v8 = 0;
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(_QWORD *)(a4 + 16);
      v6 = 0;
    }
  }
  else
  {
    v8 = *(_QWORD *)(a4 + 16);
    v6 = 0;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = v8;
  return v6;
}

void sub_19CDFD584(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for JetPackAsset(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v31 - v15;
  v36 = a4;
  v19 = *(_QWORD *)(a4 + 64);
  v18 = a4 + 64;
  v17 = v19;
  v20 = -1 << *(_BYTE *)(v18 - 32);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
LABEL_37:
    *a1 = v36;
    a1[1] = v18;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = -1 << *(_BYTE *)(v18 - 32);
  v34 = a1;
  v23 = 0;
  v24 = 0;
  v35 = (unint64_t)(63 - v20) >> 6;
  v32 = v35 - 1;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v9 + 72);
    sub_19CDF3E10(*(_QWORD *)(v36 + 56) + v30 * v26, (uint64_t)v12);
    sub_19CCFDB04((uint64_t)v12, (uint64_t)v16);
    sub_19CCFDB04((uint64_t)v16, a2);
    if (v24 == a3)
      goto LABEL_36;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v35)
      goto LABEL_32;
    v28 = *(_QWORD *)(v18 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v35)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v18 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v35)
    goto LABEL_32;
  v28 = *(_QWORD *)(v18 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v35)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v18 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v35)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    v20 = v33;
    a1 = v34;
    goto LABEL_37;
  }
  v28 = *(_QWORD *)(v18 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v35)
    {
      v22 = 0;
      v23 = v32;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v18 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

_QWORD *sub_19CDFD80C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  v27 = result;
  v11 = 0;
  v12 = 0;
  v28 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = *(_QWORD *)(a4 + 48) + 72 * v14;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = *(_BYTE *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v21 = *(_QWORD *)(v18 + 32);
    v23 = *(_BYTE *)(v18 + 40);
    v24 = *(_QWORD *)(v18 + 64);
    v25 = *(_OWORD *)(v18 + 48);
    *(_QWORD *)v10 = *(_QWORD *)v18;
    *(_QWORD *)(v10 + 8) = v19;
    *(_BYTE *)(v10 + 16) = v20;
    *(_QWORD *)(v10 + 24) = v22;
    *(_QWORD *)(v10 + 32) = v21;
    *(_BYTE *)(v10 + 40) = v23;
    *(_OWORD *)(v10 + 48) = v25;
    *(_QWORD *)(v10 + 64) = v24;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v28)
      {
        v8 = 0;
        v11 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (v16)
          goto LABEL_14;
        v17 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          v15 = v17;
          goto LABEL_18;
        }
        v11 = v15 + 3;
        if (v15 + 3 < v28)
        {
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            v15 = v11;
            goto LABEL_18;
          }
          v17 = v15 + 4;
          if (v15 + 4 >= v28)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v16 = *(_QWORD *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v15 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v15 >= v28)
              {
                v8 = 0;
                v11 = v28 - 1;
                goto LABEL_37;
              }
              v16 = *(_QWORD *)(v5 + 8 * v15);
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v15 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v26;
      result = v27;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_19CDFDA8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_19CDFCA58((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_19CDFDB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  size_t result;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4412A0);
  v7 = *(_QWORD *)(sub_19CFDEAA4() - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v10);
  if (v8)
  {
    if (result - v9 != 0x8000000000000000 || v8 != -1)
    {
      v10[2] = v3;
      v10[3] = 2 * ((uint64_t)(result - v9) / v8);
      v13 = sub_19CDFCC50((uint64_t)&v14, (uint64_t)v10 + v9, v3, a1, a2, a3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13 == v3)
        return (size_t)v10;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_19CDFDC90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *result;
  uint64_t v7;
  uint64_t *v8;
  int64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;

  result = (uint64_t *)objc_msgSend(a1, sel_numberOfRanges);
  v7 = (uint64_t)result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0x8000000000000000) == 0)
  {
    if (result != (uint64_t *)1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
      v8 = (uint64_t *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v10 = v9 - 32;
      if (v9 < 32)
        v10 = v9 - 17;
      v8[2] = v7;
      v8[3] = 2 * (v10 >> 4);
      v11 = a1;
      swift_bridgeObjectRetain();
      v12 = sub_19CDFCD34(&v14, v8 + 4, v7, v11, a2, a3);
      v13 = v14;
      swift_bridgeObjectRelease();

      if (v12 == v7)
        return v8;
      __break(1u);
    }
    return (uint64_t *)MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CDFDD88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F178);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_19CDFCEC4(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_19CDFDE6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_19CDFD058((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_19CDFDF50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_19CDFD254((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_19CDFE034(uint64_t a1)
{
  return sub_19CDFE040(a1, &qword_1EE43CDB8);
}

_QWORD *sub_19CDFE040(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v2;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_19CDFD058((uint64_t)&v9, v4 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v7 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

_QWORD *sub_19CDFE120(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F68);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_19CDFD450(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_19CDFE1DC(uint64_t a1)
{
  return sub_19CDFE040(a1, (uint64_t *)&unk_1EE43F180);
}

_QWORD *sub_19CDFE1E8(uint64_t a1)
{
  return sub_19CDFE040(a1, (uint64_t *)&unk_1ECEB0F50);
}

size_t sub_19CDFE1F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439F90);
  v3 = *(_QWORD *)(type metadata accessor for JetPackAsset(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_19CDFD584(&v11, (uint64_t)v6 + v5, v1, a1);
      v10 = v9;
      swift_bridgeObjectRetain();
      sub_19CDB88CC();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CDFE30C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A5B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 72);
  v5 = sub_19CDFD80C(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_19CDB88CC();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_19CDFE404(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B78);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

_QWORD *sub_19CDFE574(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_19CDFF468((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_19CDFE668(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1A1ADA39C](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

void (*sub_19CDFE724(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_19CDFE96C(v6);
  v6[10] = sub_19CDFE804(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_19CDFE7B4;
}

void sub_19CDFE7B4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_19CDFE804(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_19CE120B8(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_19CDFE930;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_19CE19A9C();
      goto LABEL_7;
    }
    sub_19CE14778(v16, a4 & 1);
    v20 = sub_19CE120B8(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_19CFE082C();
  __break(1u);
  return result;
}

void sub_19CDFE930(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_19CDFE998(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_19CDFE96C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_19CDFE98C;
}

uint64_t sub_19CDFE98C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_19CDFE998(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_19CE1822C(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_19CDD3FC8(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CDFEA34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CE740F4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_19CDFEA9C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19CDFEA9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t i;
  uint64_t v102;
  uint64_t v103;
  _OWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *__dst;

  v3 = a1[1];
  result = sub_19CFE0580();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v99 = 0;
      v100 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v102 = *(_QWORD *)(v100 + (i << 6));
        v103 = v99;
        do
        {
          v104 = (_OWORD *)(v100 + v103);
          if (v102 >= *(_QWORD *)(v100 + v103))
            break;
          if (!v100)
            goto LABEL_140;
          v105 = v100 + v103;
          v106 = *(_QWORD *)(v100 + v103 + 88);
          v107 = *(_QWORD *)(v100 + v103 + 96);
          v108 = *(_QWORD *)(v100 + v103 + 120);
          v109 = *(_OWORD *)(v100 + v103 + 72);
          v110 = *(_OWORD *)(v100 + v103 + 104);
          v111 = v104[1];
          *(_OWORD *)(v100 + v103 + 64) = *v104;
          *(_OWORD *)(v100 + v103 + 80) = v111;
          v112 = v104[3];
          *(_OWORD *)(v100 + v103 + 96) = v104[2];
          *(_OWORD *)(v100 + v103 + 112) = v112;
          *(_QWORD *)v105 = v102;
          *(_OWORD *)(v105 + 8) = v109;
          *(_QWORD *)(v105 + 24) = v106;
          *(_QWORD *)(v105 + 32) = v107;
          *(_OWORD *)(v105 + 40) = v110;
          v103 -= 64;
          *(_QWORD *)(v105 + 56) = v108;
        }
        while (v103 != -64);
        v99 += 64;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v122 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v113 = v12;
      v124 = v9;
      if (v13 >= 2)
      {
        v114 = *v122;
        do
        {
          v115 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v114)
            goto LABEL_144;
          v116 = v113;
          v117 = *(_QWORD *)&v113[16 * v115 + 32];
          v118 = *(_QWORD *)&v113[16 * v13 + 24];
          sub_19CDFF1D0((char *)(v114 + (v117 << 6)), (char *)(v114 + (*(_QWORD *)&v113[16 * v13 + 16] << 6)), v114 + (v118 << 6), __dst);
          if (v1)
            break;
          if (v118 < v117)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v116 = sub_19CF53AFC((uint64_t)v116);
          if (v115 >= *((_QWORD *)v116 + 2))
            goto LABEL_133;
          v119 = &v116[16 * v115 + 32];
          *(_QWORD *)v119 = v117;
          *((_QWORD *)v119 + 1) = v118;
          v120 = *((_QWORD *)v116 + 2);
          if (v13 > v120)
            goto LABEL_134;
          memmove(&v116[16 * v13 + 16], &v116[16 * v13 + 32], 16 * (v120 - v13));
          v113 = v116;
          *((_QWORD *)v116 + 2) = v120 - 1;
          v13 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v124 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v124 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_19CFDF8C0();
    *(_QWORD *)(v8 + 16) = v7;
    v124 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v123 = *a1 + 128;
  v121 = *a1 + 56;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v6;
  v126 = v3;
  v127 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + (v10 << 6));
      v16 = v14 << 6;
      v17 = *(_QWORD *)(v11 + (v14 << 6));
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (uint64_t *)(v123 + (v14 << 6));
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 8;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = v10 << 6;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = (_OWORD *)(v11 + v16);
              v26 = *(_QWORD *)(v11 + v16 + 32);
              v27 = v11 + v22;
              v28 = *(_QWORD *)(v11 + v16 + 56);
              v29 = *(_OWORD *)(v11 + v16);
              v30 = *(_OWORD *)(v11 + v16 + 16);
              v31 = *(_OWORD *)(v11 + v16 + 40);
              v32 = *(_OWORD *)(v11 + v22 - 16);
              v34 = *(_OWORD *)(v11 + v22 - 64);
              v33 = *(_OWORD *)(v11 + v22 - 48);
              v25[2] = *(_OWORD *)(v11 + v22 - 32);
              v25[3] = v32;
              *v25 = v34;
              v25[1] = v33;
              *(_OWORD *)(v27 - 64) = v29;
              *(_OWORD *)(v27 - 48) = v30;
              *(_QWORD *)(v27 - 32) = v26;
              *(_OWORD *)(v27 - 24) = v31;
              *(_QWORD *)(v27 - 8) = v28;
            }
            ++v24;
            v22 -= 64;
            v16 += 64;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v35 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v35 >= v3)
      v35 = v3;
    if (v35 < v14)
      break;
    if (v10 != v35)
    {
      v36 = v121 + (v10 << 6);
      do
      {
        v37 = *(_QWORD *)(v11 + (v10 << 6));
        v38 = v14;
        v39 = v36;
        do
        {
          v40 = (_OWORD *)(v39 - 120);
          if (v37 >= *(_QWORD *)(v39 - 120))
            break;
          if (!v11)
            goto LABEL_141;
          v42 = *(_OWORD *)(v39 - 88);
          v41 = *(_OWORD *)(v39 - 72);
          *(_QWORD *)(v39 - 64) = *(_QWORD *)v39;
          v39 -= 64;
          v43 = *(_QWORD *)(v39 + 32);
          v44 = *(_QWORD *)(v39 + 40);
          v45 = *(_OWORD *)(v39 + 16);
          v46 = v40[1];
          v40[4] = *v40;
          v40[5] = v46;
          v47 = *(_OWORD *)(v39 + 48);
          v40[6] = v42;
          v40[7] = v41;
          *(_QWORD *)(v39 - 56) = v37;
          *(_OWORD *)(v39 - 48) = v45;
          *(_QWORD *)(v39 - 32) = v43;
          *(_QWORD *)(v39 - 24) = v44;
          *(_OWORD *)(v39 - 16) = v47;
          ++v38;
        }
        while (v10 != v38);
        ++v10;
        v36 += 64;
      }
      while (v10 != v35);
      v10 = v35;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_19CF537A8(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v49 = *((_QWORD *)v12 + 2);
    v48 = *((_QWORD *)v12 + 3);
    v13 = v49 + 1;
    v11 = v127;
    if (v49 >= v48 >> 1)
    {
      v98 = sub_19CF537A8((char *)(v48 > 1), v49 + 1, 1, v12);
      v11 = v127;
      v12 = v98;
    }
    *((_QWORD *)v12 + 2) = v13;
    v50 = v12 + 32;
    v51 = &v12[16 * v49 + 32];
    *(_QWORD *)v51 = v14;
    *((_QWORD *)v51 + 1) = v10;
    if (v49)
    {
      while (1)
      {
        v52 = v13 - 1;
        if (v13 >= 4)
        {
          v57 = &v50[16 * v13];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_119;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_120;
          v64 = v13 - 2;
          v65 = &v50[16 * v13 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_122;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_125;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_129;
            v80 = v55 < v90;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v81 = *((_QWORD *)v12 + 4);
            v82 = *((_QWORD *)v12 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_77;
          }
          v54 = *((_QWORD *)v12 + 4);
          v53 = *((_QWORD *)v12 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_121;
        v64 = v13 - 2;
        v70 = &v50[16 * v13 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_124;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_127;
        if (__OFADD__(v74, v79))
          goto LABEL_128;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_83:
          if (v80)
            v52 = v64;
          goto LABEL_85;
        }
LABEL_77:
        if ((v75 & 1) != 0)
          goto LABEL_123;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_126;
        if (v86 < v74)
          goto LABEL_15;
LABEL_85:
        v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v92 = v12;
        v93 = &v50[16 * v91];
        v94 = *(_QWORD *)v93;
        v95 = &v50[16 * v52];
        v96 = *((_QWORD *)v95 + 1);
        sub_19CDFF1D0((char *)(v11 + (*(_QWORD *)v93 << 6)), (char *)(v11 + (*(_QWORD *)v95 << 6)), v11 + (v96 << 6), __dst);
        if (v1)
          goto LABEL_93;
        if (v96 < v94)
          goto LABEL_116;
        if (v52 > *((_QWORD *)v92 + 2))
          goto LABEL_117;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v50[16 * v91 + 8] = v96;
        v97 = *((_QWORD *)v92 + 2);
        if (v52 >= v97)
          goto LABEL_118;
        v12 = v92;
        v13 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((_QWORD *)v92 + 2) = v97 - 1;
        v11 = v127;
        if (v97 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v125;
    v3 = v126;
    if (v10 >= v126)
    {
      v9 = v124;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_19CFE0334();
  __break(1u);
  return result;
}

uint64_t sub_19CDFF1D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  __int128 *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t result;
  __int128 *v34;
  __int128 *v35;
  char *v36;

  v4 = (__int128 *)__dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v36 = __src;
  v35 = (__int128 *)__dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst)
        memmove(__dst, a2, v13 << 6);
      v22 = &v4[4 * v13];
      v34 = v22;
      v36 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        v23 = (char *)(a3 - 64);
        v24 = v6;
        while (1)
        {
          v25 = v23 + 64;
          v26 = *((_QWORD *)v24 - 8);
          v24 -= 64;
          if (*((_QWORD *)v22 - 8) >= v26)
          {
            v34 = v22 - 4;
            if (v25 < (char *)v22 || v23 >= (char *)v22 || v25 != (char *)v22)
            {
              v30 = *(v22 - 4);
              v31 = *(v22 - 3);
              v32 = *(v22 - 1);
              *((_OWORD *)v23 + 2) = *(v22 - 2);
              *((_OWORD *)v23 + 3) = v32;
              *(_OWORD *)v23 = v30;
              *((_OWORD *)v23 + 1) = v31;
            }
            v24 = v6;
            v22 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v25 != v6 || v23 >= v6)
            {
              v27 = *(_OWORD *)v24;
              v28 = *((_OWORD *)v24 + 1);
              v29 = *((_OWORD *)v24 + 3);
              *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
              *((_OWORD *)v23 + 3) = v29;
              *(_OWORD *)v23 = v27;
              *((_OWORD *)v23 + 1) = v28;
            }
            v36 = v24;
            if (v24 <= v7)
              goto LABEL_42;
          }
          v23 -= 64;
          v6 = v24;
          if (v22 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst)
      memmove(__dst, __src, v10 << 6);
    v14 = &v4[4 * v10];
    v34 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != (char *)v4)
          {
            v19 = *v4;
            v20 = v4[1];
            v21 = v4[3];
            *((_OWORD *)v7 + 2) = v4[2];
            *((_OWORD *)v7 + 3) = v21;
            *(_OWORD *)v7 = v19;
            *((_OWORD *)v7 + 1) = v20;
          }
          v4 += 4;
          v35 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 64;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *(_OWORD *)v6;
            v17 = *((_OWORD *)v6 + 1);
            v18 = *((_OWORD *)v6 + 3);
            *((_OWORD *)v7 + 2) = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 3) = v18;
            *(_OWORD *)v7 = v16;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 64;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v36 = v7;
    }
LABEL_42:
    sub_19CF538A0((void **)&v36, (const void **)&v35, &v34);
    return 1;
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CDFF468(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_19CDFFC60();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F0B8);
          v12 = sub_19CEFDC8C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_19CD1CE28();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

void sub_19CDFF660(unint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v6 = sub_19CFE0394();
    if (v6)
      goto LABEL_3;
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_37;
LABEL_3:
  v35 = v3;
  v40 = v5;
  v41 = v5 & 0xC000000000000001;
  v7 = 4;
  v39 = v6;
  while (1)
  {
    v3 = v7 - 4;
    if (v41)
    {
      v8 = (_QWORD *)MEMORY[0x1A1ADA390](v7 - 4, v5);
      v9 = v7 - 3;
      if (__OFADD__(v3, 1))
        goto LABEL_35;
    }
    else
    {
      v8 = *(_QWORD **)(v5 + 8 * v7);
      swift_retain();
      v9 = v7 - 3;
      if (__OFADD__(v3, 1))
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    v10 = v8[6];
    v12 = a2[5];
    v11 = a2[6];
    v13 = *a2;
    v14 = a2[1];
    v15 = a2[2];
    v16 = a2[3];
    if (!v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19CD2A71C(0, 0, 0, 0);
      sub_19CD2A71C(v13, v14, v15, v16);
      goto LABEL_32;
    }
    v18 = v8[3];
    v17 = v8[4];
    v38 = v8[8];
    v19 = v8[9];
    if (v8[5] != v15 || v10 != v16)
    {
      v21 = a2[5];
      v22 = a2[6];
      v36 = a2[1];
      v37 = v9;
      v23 = *a2;
      v24 = v8[9];
      v25 = a2;
      v26 = v8[4];
      v27 = v8[3];
      v28 = sub_19CFE06A0();
      v18 = v27;
      v17 = v26;
      a2 = v25;
      v19 = v24;
      v13 = v23;
      v14 = v36;
      v9 = v37;
      v11 = v22;
      v12 = v21;
      if ((v28 & 1) == 0)
        goto LABEL_32;
    }
    if (v17)
    {
      if (!v14)
        goto LABEL_32;
      if (v18 != v13 || v17 != v14)
      {
        v29 = v11;
        v30 = v19;
        v31 = sub_19CFE06A0();
        v19 = v30;
        v11 = v29;
        if ((v31 & 1) == 0)
          goto LABEL_32;
      }
    }
    else if (v14)
    {
      goto LABEL_32;
    }
    v32 = v11 == 0;
    if (v19)
      break;
LABEL_28:
    if ((v32 & 1) != 0)
      goto LABEL_29;
LABEL_32:
    swift_release();
    v5 = v40;
LABEL_33:
    ++v7;
    if (v9 == v39)
      goto LABEL_37;
  }
  if (!v11)
    goto LABEL_32;
  if (v38 != v12 || v19 != v11)
  {
    v32 = sub_19CFE06A0();
    goto LABEL_28;
  }
LABEL_29:
  v33 = v8[13];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v33 + 20));
  sub_19CD3EA18((_BYTE *)(v33 + 16), &v42);
  v34 = (os_unfair_lock_s *)(v33 + 20);
  if (!v35)
  {
    os_unfair_lock_unlock(v34);
    swift_release();
    swift_release();
    v5 = v40;
    if (!v42)
      goto LABEL_37;
    goto LABEL_33;
  }
  os_unfair_lock_unlock(v34);
  __break(1u);
}

uint64_t sub_19CDFF970(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CDFF9E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for DynamicImpressionsTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for DynamicImpressionsTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DynamicImpressionsTracker.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for DynamicImpressionsTracker.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DynamicImpressionsTracker.Configuration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DynamicImpressionsTracker.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DynamicImpressionsTracker.Configuration()
{
  return &type metadata for DynamicImpressionsTracker.Configuration;
}

uint64_t getEnumTagSinglePayload for DynamicImpressionsTracker.ParentOrdering(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DynamicImpressionsTracker.ParentOrdering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_19CDFFBE8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImpressionsTracker.ParentOrdering()
{
  return &type metadata for DynamicImpressionsTracker.ParentOrdering;
}

unint64_t sub_19CDFFC1C()
{
  unint64_t result;

  result = qword_1EE439ED8;
  if (!qword_1EE439ED8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056130, &type metadata for DynamicImpressionsTracker.ParentOrdering);
    atomic_store(result, (unint64_t *)&qword_1EE439ED8);
  }
  return result;
}

unint64_t sub_19CDFFC60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43F170;
  if (!qword_1EE43F170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43F0B8);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43F170);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackUnknownError()
{
  return &type metadata for JetPackUnknownError;
}

uint64_t dispatch thunk of TreatmentFilter.treat(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_19CDFFCD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_19CDFFCF0()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[3] = v0[4];
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B568);
  *v1 = v0;
  v1[1] = sub_19CDFFDCC;
  return sub_19CFE0A84();
}

uint64_t sub_19CDFFDCC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_19CDFFE3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_19CDFFE54()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[3] = v0[4];
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43CDF8);
  *v1 = v0;
  v1[1] = sub_19CDFFDCC;
  return sub_19CFE0A84();
}

uint64_t sub_19CDFFF30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_19CDFFF48()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[3] = v0[4];
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F1E0);
  *v1 = v0;
  v1[1] = sub_19CDFFDCC;
  return sub_19CFE0A84();
}

uint64_t sub_19CE00024()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE0003C()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[3] = v0[4];
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F200);
  *v1 = v0;
  v1[1] = sub_19CE00118;
  return sub_19CFE0A84();
}

uint64_t sub_19CE00118()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t URLJetPackAssetFetcher.init(bag:urlSessionConfiguration:requestEncoder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t result;

  v8 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  v9 = a3;
  swift_unknownObjectRetain();
  v10 = a2;
  v11 = (void *)sub_19CFDF554();
  v12 = objc_msgSend(v8, sel_initWithContainerID_bag_, v11, a1);

  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = (uint64_t)v10;
  a4[2] = (uint64_t)a3;
  a4[3] = (uint64_t)v12;
  return result;
}

uint64_t URLJetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 656) = a3;
  *(_QWORD *)(v4 + 648) = a2;
  *(_QWORD *)(v4 + 640) = a1;
  *(_QWORD *)(v4 + 664) = type metadata accessor for JetPackAsset.Metadata(0);
  *(_QWORD *)(v4 + 672) = swift_task_alloc();
  *(_QWORD *)(v4 + 680) = swift_task_alloc();
  *(_QWORD *)(v4 + 688) = type metadata accessor for JetPackDataStreamSource();
  *(_QWORD *)(v4 + 696) = swift_task_alloc();
  v5 = sub_19CFDEF84();
  *(_QWORD *)(v4 + 704) = v5;
  *(_QWORD *)(v4 + 712) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 720) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  *(_QWORD *)(v4 + 728) = swift_task_alloc();
  *(_QWORD *)(v4 + 736) = swift_task_alloc();
  v6 = type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v4 + 744) = v6;
  *(_QWORD *)(v4 + 752) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 760) = swift_task_alloc();
  *(_QWORD *)(v4 + 768) = swift_task_alloc();
  v7 = sub_19CFDEDE0();
  *(_QWORD *)(v4 + 776) = v7;
  *(_QWORD *)(v4 + 784) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 792) = swift_task_alloc();
  v8 = sub_19CFDE90C();
  *(_QWORD *)(v4 + 800) = v8;
  *(_QWORD *)(v4 + 808) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 816) = swift_task_alloc();
  *(_OWORD *)(v4 + 824) = *(_OWORD *)v3;
  v9 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v4 + 840) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v4 + 848) = v9;
  return swift_task_switch();
}

uint64_t sub_19CE003DC()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  v1 = (void *)v0[104];
  objc_msgSend(v1, sel_set_timingDataOptions_, (unint64_t)objc_msgSend(v1, sel__timingDataOptions) | 0x45);
  v0[107] = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v1);
  type metadata accessor for BaseObjectGraph();
  v0[108] = static BaseObjectGraph.current.getter();
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE43F1A0 + dword_1EE43F1A0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[109] = v2;
  *v2 = v0;
  v2[1] = sub_19CE004A0;
  return v4();
}

uint64_t sub_19CE004A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 880) = a1;
  *(_QWORD *)(v3 + 888) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CE00518()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t *boxed_opaque_existential_2Tm;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  id v57;
  void *v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  char v62;

  if (*(_QWORD *)(v0 + 880))
  {
    swift_retain();
    v1 = sub_19CCCCA74();
    swift_release();
  }
  else
  {
    sub_19CFDF2B4();
    v1 = sub_19CFDF290();
  }
  v2 = (__int128 *)(v0 + 448);
  *(_QWORD *)(v0 + 896) = v1;
  sub_19CFDF29C();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 784);
  v4 = *(_QWORD *)(v0 + 776);
  v5 = *(_QWORD *)(v0 + 648);
  v6 = (void *)qword_1ECEB0B60;
  *(_QWORD *)(v0 + 904) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v57 = v6;
  v59 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
  v8._countAndFlagsBits = 0xD000000000000021;
  v8._object = (void *)0x800000019D06FB50;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  *(_QWORD *)(v0 + 544) = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 520));
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 912) = v10;
  v56 = v10;
  v10((uint64_t)boxed_opaque_existential_2Tm, v5, v4);
  sub_19CCF8C5C(v0 + 520, v0 + 488, &qword_1ECEB3370);
  *v2 = 0u;
  *(_OWORD *)(v0 + 464) = 0u;
  sub_19CD40658(v0 + 488, v0 + 448);
  *(_BYTE *)(v0 + 480) = 0;
  v11 = *(_OWORD *)(v0 + 464);
  v60 = *v2;
  v61 = v11;
  v62 = *(_BYTE *)(v0 + 480);
  v12 = v59;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_19CD40918(0, v59[2] + 1, 1, v59);
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
    v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
  v15 = *(_QWORD *)(v0 + 792);
  v54 = *(_QWORD *)(v0 + 752);
  v55 = *(_QWORD *)(v0 + 744);
  v16 = *(_QWORD *)(v0 + 736);
  v52 = *(_QWORD *)(v0 + 776);
  v53 = *(_QWORD *)(v0 + 656);
  v17 = *(_QWORD *)(v0 + 648);
  v12[2] = v14 + 1;
  v18 = &v12[5 * v14];
  v19 = v60;
  v20 = v61;
  *((_BYTE *)v18 + 64) = v62;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  v59 = v12;
  sub_19CCECFE4(v0 + 520, &qword_1ECEB3370);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v7 + 32) = v12;
  *(_QWORD *)&v60 = v57;
  LOBYTE(v59) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v59);
  swift_bridgeObjectRelease();

  v56(v15, v17, v52);
  sub_19CFDE8DC();
  sub_19CFDE894();
  sub_19CFDE900();
  sub_19CCF8C5C(v53, v16, (uint64_t *)&unk_1ECEB1140);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  *(_QWORD *)(v0 + 920) = v22;
  if (v22(v16, 1, v55) == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 736), (uint64_t *)&unk_1ECEB1140);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(_QWORD *)(v0 + 744);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 736), v23, type metadata accessor for JetPackAsset);
    v25 = v23 + *(int *)(v24 + 20);
    if (*(_QWORD *)(v25 + 24))
    {
      swift_bridgeObjectRetain();
      sub_19CFDE900();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v25 + 8))
    {
      swift_bridgeObjectRetain();
      sub_19CFDE900();
      swift_bridgeObjectRelease();
    }
    sub_19CCEACE4(*(_QWORD *)(v0 + 768), type metadata accessor for JetPackAsset);
  }
  v26 = *(void **)(v0 + 856);
  v27 = *(void **)(v0 + 848);
  v28 = *(void **)(v0 + 840);
  v58 = *(void **)(v0 + 832);
  v29 = *(_QWORD *)(v0 + 824);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B58);
  v30 = swift_allocObject();
  *(_QWORD *)(v0 + 928) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 32) = 0;
  *(_QWORD *)(v30 + 40) = 0;
  *(_BYTE *)(v30 + 48) = 0;
  v32 = (void *)sub_19CFDE8AC();
  *(_QWORD *)(v0 + 272) = sub_19CE02654;
  *(_QWORD *)(v0 + 280) = v30;
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 248) = 1107296256;
  *(_QWORD *)(v0 + 256) = sub_19CE0192C;
  *(_QWORD *)(v0 + 264) = &block_descriptor_6;
  v33 = _Block_copy((const void *)(v0 + 240));
  swift_retain();
  swift_release();
  v34 = objc_msgSend(v26, sel_dataTaskWithRequest_completionHandler_, v32, v33);
  *(_QWORD *)(v0 + 936) = v34;
  _Block_release(v33);

  v35 = v34;
  swift_retain();
  sub_19CFDFD58();

  objc_msgSend(v35, sel_resume);
  sub_19CE019DC();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v29;
  v36[3] = v58;
  v36[4] = v28;
  v36[5] = v27;
  v36[6] = v35;
  v36[7] = v26;
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = v29;
  v37[3] = v58;
  v37[4] = v28;
  v37[5] = v27;
  v37[6] = v35;
  v37[7] = v26;
  v38 = sub_19CD48F8C();
  v39 = v28;
  v40 = v27;
  v41 = v26;
  v42 = v35;
  swift_unknownObjectRetain_n();
  v43 = v58;
  v44 = v39;
  v45 = v40;
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v49 = (void *)sub_19CFDFDB8();
  *(_QWORD *)(v0 + 352) = v38;
  *(_QWORD *)(v0 + 360) = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)(v0 + 328) = v49;
  *(_QWORD *)(v0 + 160) = sub_19CE02660;
  *(_QWORD *)(v0 + 168) = v36;
  *(_QWORD *)(v0 + 176) = sub_19CE02674;
  *(_QWORD *)(v0 + 184) = v37;
  sub_19CCD5B84(v0 + 328, v0 + 192);
  *(_BYTE *)(v0 + 232) = 0;
  v50 = v49;
  swift_retain();
  swift_retain();
  sub_19CDBEF40();
  sub_19CCECFE4(v0 + 160, &qword_1ECEB0920);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 328);
  swift_release();
  swift_release();

  return swift_task_switch();
}

uint64_t sub_19CE00BDC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 77;
  v0[2] = v0;
  v0[3] = sub_19CE00C58;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBEF40();
  sub_19CCECFE4(v1, &qword_1ECEB0920);
  return swift_continuation_await();
}

uint64_t sub_19CE00C58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 944) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 952) = *(_QWORD *)(v1 + 616);
    *(_OWORD *)(v1 + 960) = *(_OWORD *)(v1 + 624);
  }
  return swift_task_switch();
}

uint64_t sub_19CE00CD4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  _BYTE *v17;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t *v51;
  int *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  __CFString *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t *v67;
  char *v68;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  unsigned int v108;
  __int128 v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  _BYTE v114[48];

  v1 = *(void **)(v0 + 968);
  if (!v1)
  {
    v93 = 0;
    v106 = 0;
LABEL_7:
    v104 = (uint64_t *)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 960);
    v20 = *(_QWORD *)(v0 + 952);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 912);
    v96 = *(_QWORD *)(v0 + 784);
    v22 = *(_QWORD *)(v0 + 776);
    v23 = *(uint64_t **)(v0 + 696);
    v24 = *(_QWORD *)(v0 + 688);
    v25 = *(_QWORD *)(v0 + 648);
    sub_19CD3BE5C(v20, v19);
    sub_19CCC5C88((unint64_t *)&qword_1ECEB29E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v26 = sub_19CFE0598();
    v28 = v27;
    v29 = (char *)v23 + *(int *)(v24 + 24);
    v21(v29, v25, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v29, 0, 1, v22);
    *v23 = v20;
    v23[1] = v19;
    v23[2] = v26;
    v23[3] = v28;
    if (v93)
    {
      v30 = v106;
      v31 = (void *)sub_19CFDF554();
      v32 = objc_msgSend(v30, sel_valueForHTTPHeaderField_, v31);

      if (v32)
      {
        v33 = sub_19CFDF578();
        v35 = v34;

      }
      else
      {
        v33 = 0;
        v35 = 0;
      }
      v43 = v35;
      v44 = v33;
      v45 = v30;
      v46 = (void *)sub_19CFDF554();
      v47 = objc_msgSend(v45, sel_valueForHTTPHeaderField_, v46);

      v75 = v44;
      if (v47)
      {
        v48 = sub_19CFDF578();
        v76 = v49;
        v77 = v48;

      }
      else
      {
        v76 = 0;
        v77 = 0;
      }
      v36 = v43;
    }
    else
    {
      v76 = 0;
      v77 = 0;
      v75 = 0;
      v36 = 0;
    }
    v50 = *(void **)(v0 + 968);
    v82 = *(_QWORD *)(v0 + 952);
    v83 = *(_QWORD *)(v0 + 960);
    v85 = *(void **)(v0 + 936);
    v84 = *(void **)(v0 + 856);
    v89 = *(_QWORD *)(v0 + 808);
    v91 = *(_QWORD *)(v0 + 800);
    v95 = *(_QWORD *)(v0 + 816);
    v98 = *(int **)(v0 + 744);
    v79 = *(_QWORD *)(v0 + 688);
    v80 = *(_QWORD *)(v0 + 696);
    v51 = *(uint64_t **)(v0 + 680);
    v81 = *(_QWORD *)(v0 + 672);
    v52 = *(int **)(v0 + 664);
    v53 = *(_QWORD *)(v0 + 640);
    sub_19CFDEF78();
    v54 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    objc_msgSend(v54, sel_operatingSystemVersion);
    v78 = v109;
    v55 = v110;

    v56 = JEGestaltGetBuildVersion();
    v57 = sub_19CFDF578();
    v59 = v58;

    sub_19CE01DEC(v50, (uint64_t)&v109);
    v60 = v109;
    v61 = BYTE8(v109);
    v62 = v110;
    v63 = v111;
    v64 = v112;
    v65 = v113;
    *v51 = v75;
    v51[1] = v36;
    v51[2] = v77;
    v51[3] = v76;
    v66 = (char *)v51 + v52[7];
    *(_OWORD *)v66 = v78;
    *((_QWORD *)v66 + 2) = v55;
    v66[24] = 0;
    v67 = (uint64_t *)((char *)v51 + v52[8]);
    *v67 = v57;
    v67[1] = v59;
    v68 = (char *)v51 + v52[9];
    *(_QWORD *)v68 = v60;
    v68[8] = v61;
    *((_QWORD *)v68 + 2) = v62;
    v68[24] = v63;
    *((_QWORD *)v68 + 4) = v64;
    v68[40] = v65;
    *(_QWORD *)(v0 + 312) = v79;
    *(_QWORD *)(v0 + 320) = &protocol witness table for JetPackDataStreamSource;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v104);
    sub_19CCFECEC(v80, (uint64_t)boxed_opaque_existential_2Tm, (uint64_t (*)(_QWORD))type metadata accessor for JetPackDataStreamSource);
    sub_19CCFECEC((uint64_t)v51, v81, type metadata accessor for JetPackAsset.Metadata);
    v70 = sub_19CFE0598();
    v72 = v71;
    sub_19CD3BE18(v82, v83);

    swift_release();
    swift_release();
    swift_release();
    sub_19CCEACE4((uint64_t)v51, type metadata accessor for JetPackAsset.Metadata);
    sub_19CCEACE4(v80, (uint64_t (*)(_QWORD))type metadata accessor for JetPackDataStreamSource);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v95, v91);
    sub_19CCD14C4((__int128 *)v104, v53);
    sub_19CCFE8AC(v81, v53 + v98[5], type metadata accessor for JetPackAsset.Metadata);
    v108 = 0;
    v73 = v53 + v98[6];
    *(_DWORD *)v73 = 0;
    *(_BYTE *)(v73 + 4) = 1;
    v74 = (uint64_t *)(v53 + v98[7]);
    *v74 = v70;
    v74[1] = v72;
    goto LABEL_18;
  }
  if (objc_msgSend(*(id *)(v0 + 968), sel_statusCode) != (id)304)
  {
    v93 = v1;
    v106 = *(void **)(v0 + 968);
    goto LABEL_7;
  }
  v99 = *(_QWORD *)(v0 + 744);
  v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 920);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 656);
  v4 = (void *)qword_1ECEB0B60;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 576) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 552) = 0xD00000000000002ALL;
  *(_QWORD *)(v0 + 560) = 0x800000019D06FBB0;
  *(_OWORD *)(v0 + 408) = 0u;
  *(_OWORD *)(v0 + 424) = 0u;
  v7 = v4;
  sub_19CD40658(v0 + 552, v0 + 408);
  *(_BYTE *)(v0 + 440) = 0;
  v8 = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v6 + 48) = v8;
  *(_BYTE *)(v6 + 64) = *(_BYTE *)(v0 + 440);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)&v109 = v7;
  v114[0] = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)v114);
  swift_bridgeObjectRelease();

  sub_19CCF8C5C(v3, v2, (uint64_t *)&unk_1ECEB1140);
  if (v102(v2, 1, v99) == 1)
  {
    v9 = *(_QWORD *)(v0 + 960);
    v10 = *(_QWORD *)(v0 + 952);
    v88 = *(void **)(v0 + 936);
    v11 = *(void **)(v0 + 856);
    v92 = *(_QWORD *)(v0 + 808);
    v100 = *(_QWORD *)(v0 + 800);
    v103 = *(_QWORD *)(v0 + 816);
    sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
    v12 = (void *)qword_1ECEB0B60;
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 608) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 584) = 0xD000000000000033;
    *(_QWORD *)(v0 + 592) = 0x800000019D06FBE0;
    *(_OWORD *)(v0 + 368) = 0u;
    *(_OWORD *)(v0 + 384) = 0u;
    v15 = v12;
    sub_19CD40658(v0 + 584, v0 + 368);
    *(_BYTE *)(v0 + 400) = 0;
    *(_BYTE *)(v14 + 64) = 0;
    v16 = *(_OWORD *)(v0 + 384);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v14 + 48) = v16;
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)&v109 = v15;
    v114[0] = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)v114);
    swift_bridgeObjectRelease();

    sub_19CE026C0();
    swift_allocError();
    *v17 = 0;
    swift_willThrow();
    sub_19CD3BE18(v10, v9);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v103, v100);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v37 = *(_QWORD *)(v0 + 960);
  v38 = *(_QWORD *)(v0 + 952);
  v39 = *(void **)(v0 + 936);
  v40 = *(void **)(v0 + 856);
  v87 = *(_QWORD *)(v0 + 808);
  v90 = *(_QWORD *)(v0 + 800);
  v41 = *(_QWORD *)(v0 + 760);
  v94 = *(_QWORD *)(v0 + 744);
  v97 = *(_QWORD *)(v0 + 816);
  v42 = *(_QWORD *)(v0 + 720);
  v101 = *(_QWORD *)(v0 + 712);
  v105 = *(_QWORD *)(v0 + 704);
  v86 = *(_QWORD *)(v0 + 664);
  v107 = *(_QWORD *)(v0 + 640);
  sub_19CCFE8AC(*(_QWORD *)(v0 + 728), v41, type metadata accessor for JetPackAsset);
  sub_19CFDEF78();
  sub_19CD3BE18(v38, v37);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v97, v90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 40))(v41 + *(int *)(v94 + 20) + *(int *)(v86 + 24), v42, v105);
  sub_19CCFE8AC(v41, v107, type metadata accessor for JetPackAsset);
  v108 = 1;
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v108);
}

uint64_t sub_19CE01624()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 816);
  v3 = *(_QWORD *)(v0 + 808);
  v4 = *(_QWORD *)(v0 + 800);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19CE01740()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_19CE01820(uint64_t a1, unint64_t a2, void *a3, id a4)
{
  id v5;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  id v12;
  id v13;

  if (a2 >> 60 == 15)
  {
    if (a4)
    {
      v5 = a4;
    }
    else
    {
      sub_19CE026C0();
      v5 = (id)swift_allocError();
      *v11 = 1;
    }
    v12 = a4;
    sub_19CEBB330(v5);

  }
  else
  {
    if (a3 && (objc_opt_self(), (v9 = swift_dynamicCastObjCClass()) != 0))
    {
      v13 = (id)v9;
      v10 = a3;
    }
    else
    {
      v13 = 0;
    }
    sub_19CD3BE5C(a1, a2);
    sub_19CFBBCE4(a1, a2, v13);
    sub_19CD3BE18(a1, a2);

  }
}

uint64_t sub_19CE0192C(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_19CFDEE70();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_19CCF4A54((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_19CE019DC()
{
  uint64_t v0;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  _BYTE v6[48];
  _BYTE v7[24];
  ValueMetadata *v8;
  _UNKNOWN **v9;

  v8 = &type metadata for SyncTaskScheduler;
  v9 = &protocol witness table for SyncTaskScheduler;
  v2 = sub_19CE02DE8;
  v3 = v0;
  v4 = sub_19CE02DF0;
  v5 = v0;
  sub_19CCD5B84((uint64_t)v7, (uint64_t)v6);
  v6[40] = 0;
  swift_retain_n();
  sub_19CDBEF40();
  sub_19CCECFE4((uint64_t)&v2, &qword_1ECEB0920);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return swift_release_n();
}

uint64_t sub_19CE01A7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10;
  unint64_t v11;

  v10 = *a1;
  v11 = a1[1];
  sub_19CD3BE5C(*a1, v11);
  sub_19CD3BE5C(v10, v11);
  sub_19CE01B24(a6, a7, a2, v10, v11, 0);
  sub_19CD3BE18(v10, v11);
  return sub_19CD3BE18(v10, v11);
}

uint64_t sub_19CE01B24(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  _QWORD v40[2];
  uint64_t v41;
  void *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD aBlock[7];

  v42 = a6;
  v43 = a5;
  v41 = a4;
  v47 = sub_19CFDF2D8();
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47, v10);
  v46 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDF308();
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  MEMORY[0x1E0C80A78](v12, v13);
  v44 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_19CFDF2E4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v6;
  v21 = (void *)v6[1];
  v22 = (void *)v6[3];
  v40[0] = v6[2];
  v40[1] = v20;
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E0DEF520], v15);
  v45 = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = a3;
  v24 = v41;
  v25 = v42;
  v23[4] = a2;
  v23[5] = v25;
  v26 = v43;
  v23[6] = v24;
  v23[7] = v26;
  v23[8] = v20;
  v23[9] = v21;
  v27 = (void *)v40[0];
  v23[10] = v40[0];
  v23[11] = v22;
  aBlock[4] = sub_19CE02DB4;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_23_0;
  v28 = _Block_copy(aBlock);
  v29 = a1;
  swift_unknownObjectRetain();
  v30 = a2;
  v31 = v25;
  sub_19CD61F18(v24, v26);
  v32 = v27;
  v33 = v22;
  swift_unknownObjectRetain();
  v34 = v21;
  v35 = v44;
  sub_19CFDF2F0();
  v51 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  v37 = v46;
  v36 = v47;
  sub_19CFE0070();
  v38 = (void *)v45;
  MEMORY[0x1A1AD9FF4](0, v35, v37, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v36);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
  return swift_release();
}

uint64_t sub_19CE01DEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t result;
  __int128 v21;
  _QWORD v22[6];
  __int128 v23;
  __int128 v24;

  v4 = sub_19CFDF5CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v9 = MEMORY[0x1E0DEA968];
  if (a1)
  {
    v10 = (void *)sub_19CFDF554();
    v11 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v10);

    if (v11)
    {
      sub_19CFDF578();

      sub_19CFDF5B4();
      v12 = sub_19CFDF584();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if (v14 >> 60 != 15)
      {
        sub_19CFDE930();
        swift_allocObject();
        sub_19CFDE924();
        sub_19CD60578();
        sub_19CFDE918();
        swift_release();
        sub_19CCF4A54(v12, v14);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v9 = MEMORY[0x1E0DEA968];
    }
  }
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v15 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v16 = swift_allocObject();
  v21 = xmmword_19D0522A0;
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v21;
  v22[3] = v9;
  v22[0] = 0xD000000000000022;
  v22[1] = 0x800000019D06FC40;
  v23 = 0u;
  v24 = 0u;
  v18 = v15;
  sub_19CD40658((uint64_t)v22, (uint64_t)&v23);
  *(_BYTE *)(v17 + 64) = 0;
  v19 = v24;
  *(_OWORD *)(v17 + 32) = v23;
  *(_OWORD *)(v17 + 48) = v19;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)&v23 = v18;
  LOBYTE(v22[0]) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)v22);

  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = 0x40AC200000000000;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0x4143C68000000000;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

void sub_19CE023B0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  v15 = objc_msgSend(a1, sel__incompleteTaskMetrics);
  v16 = objc_allocWithZone(MEMORY[0x1E0CFDB88]);
  v17 = a1;
  v21 = objc_msgSend(v16, sel_initWithTask_metrics_, v17, v15);

  objc_msgSend(v21, sel_setBag_, a2);
  objc_msgSend(v21, sel_setSession_, a3);
  if (a4)
    a4 = (void *)sub_19CFDEC90();
  objc_msgSend(v21, sel_setError_, a4);

  v18 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  objc_msgSend(v21, sel_setProcessInfo_, v18);

  if (a6 >> 60 == 15)
    v19 = 0;
  else
    v19 = (void *)sub_19CFDEE58();
  objc_msgSend(v21, sel_setResponseBody_, v19);

  if (objc_msgSend((id)objc_opt_self(), sel_shouldCollectMetricsForContext_, v21))
  {
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB90]), sel_initWithContext_, v21);
    objc_msgSend(v20, sel_setPreventSampling_, 1);
    objc_msgSend(a10, sel_enqueueEvent_, v20);

  }
}

uint64_t sub_19CE02590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CE025F8;
  return URLJetPackAssetFetcher._fetch(_:candidate:)(a1, a2, a3);
}

uint64_t sub_19CE025F8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_19CE02654(uint64_t a1, unint64_t a2, void *a3, id a4)
{
  sub_19CE01820(a1, a2, a3, a4);
}

uint64_t sub_19CE02660(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CE01A7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_19CE02674(void *a1)
{
  uint64_t v1;

  return sub_19CE01B24(*(void **)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 16), 0, 0xF000000000000000, a1);
}

unint64_t sub_19CE026C0()
{
  unint64_t result;

  result = qword_1EE43F1A8[0];
  if (!qword_1EE43F1A8[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0562E4, &type metadata for URLJetPackAssetFetcherError);
    atomic_store(result, qword_1EE43F1A8);
  }
  return result;
}

uint64_t sub_19CE02704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v0 = sub_19CFDF278();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0, v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v1 + 104))(v5, *MEMORY[0x1E0CCE198], v0, v3);
  sub_19CFDF2A8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t sub_19CE02798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE027B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FEC0 + dword_1EE43FEC0);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CCBEED4;
  return v4(v1);
}

uint64_t sub_19CE02828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE02840()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FCA8 + dword_1EE43FCA8);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CCBEED4;
  return v4(v1);
}

uint64_t sub_19CE028B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE028D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FD18 + dword_1EE43FD18);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CE02948;
  return v4(v1);
}

uint64_t sub_19CE02948(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE029CC()
{
  return sub_19CCC5C88((unint64_t *)&unk_1EE43B630, (uint64_t (*)(uint64_t))type metadata accessor for URLJetPackAssetRequest, (uint64_t)&protocol conformance descriptor for URLJetPackAssetRequest);
}

void destroy for URLJetPackAssetFetcher(id *a1)
{
  swift_unknownObjectRelease();

}

_QWORD *initializeWithCopy for URLJetPackAssetFetcher(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_unknownObjectRetain();
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

_QWORD *assignWithCopy for URLJetPackAssetFetcher(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a1[2];
  v8 = (void *)a2[2];
  a1[2] = v8;
  v9 = v8;

  v10 = (void *)a2[3];
  v11 = (void *)a1[3];
  a1[3] = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for URLJetPackAssetFetcher(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for URLJetPackAssetFetcher()
{
  return &type metadata for URLJetPackAssetFetcher;
}

uint64_t storeEnumTagSinglePayload for URLJetPackAssetFetcherError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE02BA8 + 4 * byte_19D056215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE02BDC + 4 * asc_19D056210[v4]))();
}

uint64_t sub_19CE02BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE02BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE02BECLL);
  return result;
}

uint64_t sub_19CE02BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE02C00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE02C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE02C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URLJetPackAssetFetcherError()
{
  return &type metadata for URLJetPackAssetFetcherError;
}

unint64_t sub_19CE02C2C()
{
  unint64_t result;

  result = qword_1EE43F1C0;
  if (!qword_1EE43F1C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0562BC, &type metadata for URLJetPackAssetFetcherError);
    atomic_store(result, (unint64_t *)&qword_1EE43F1C0);
  }
  return result;
}

uint64_t sub_19CE02C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE43F1D0 + dword_1EE43F1D0))(a1, v1);
}

uint64_t sub_19CE02CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE43F1F0 + dword_1EE43F1F0))(a1, v1);
}

uint64_t sub_19CE02D40()
{
  uint64_t v0;
  unint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 56);
  if (v1 >> 60 != 15)
    sub_19CD3BE18(*(_QWORD *)(v0 + 48), v1);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_19CE02DB4()
{
  uint64_t v0;

  sub_19CE023B0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88));
}

uint64_t sub_19CE02DE8()
{
  return sub_19CE02704();
}

uint64_t sub_19CE02DF0()
{
  return sub_19CE32CA4();
}

uint64_t sub_19CE02DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE43F208 + dword_1EE43F208))(a1, v1);
}

uint64_t sub_19CE02E64(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;

  v6 = sub_19CD04930(a1, (uint64_t)a2, (uint64_t)a3, a4, (uint64_t (*)(void))sub_19CDF4BBC);

  return v6;
}

JSContext __swiftcall JSContext.init(name:virtualMachine:)(Swift::String name, JSVirtualMachine virtualMachine)
{
  JSContext result;
  objc_class *v4;
  void *v5;

  result.super.isa = (Class)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithVirtualMachine_, virtualMachine.super.isa);
  if (result.super.isa)
  {
    v4 = result.super.isa;
    v5 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    -[objc_class setName:](v4, sel_setName_, v5);

    return (JSContext)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id JSContext.propagateExceptionsToErrors<A>(_:)@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  result = (id)a1(v3);
  if (!v4)
  {
    result = objc_msgSend(v3, sel_exception);
    if (result)
    {
      v8 = result;
      objc_msgSend(v3, sel_setException_, 0);
      sub_19CDC98D8();
      swift_allocError();
      v10 = v9;
      v11 = v8;
      JSError.init(_:)(v11, v10);
      swift_willThrow();

      return (id)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a3, a2);
    }
  }
  return result;
}

uint64_t sub_19CE03018(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_19CD5227C(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19CD5227C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_19CD5227C(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_19CD433C0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19CE03144(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v13;
  ValueMetadata *v14;
  _UNKNOWN **v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_19CE4A390(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      v16 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_19CE4A390(v10 > 1, v9 + 1, 1);
        v2 = v16;
      }
      v4 += 4;
      v14 = &type metadata for MetricsEventLinterDeResolutionRule;
      v15 = &off_1E3DD7C20;
      v11 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v13 = v11;
      v11[2] = v6;
      v11[3] = v5;
      v11[4] = v7;
      v11[5] = v8;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_19CCD14C4(&v13, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19CE0326C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_19CD5227C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1A1ADA390](i, a1);
        sub_19CD15680();
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_19CD5227C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_19CD5227C(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_19CD433C0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_19CD15680();
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_19CD5227C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_19CD5227C(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_19CD433C0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

__int128 *sub_19CE0349C(uint64_t a1, uint64_t a2)
{
  return sub_19CDD0B38(a1, a2);
}

id sub_19CE03584(void *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4 = (void *)sub_19CFDF854();
  v5 = objc_msgSend(a2, sel_constructWithArguments_, v4);

  if (v5)
  {
    v6 = objc_msgSend(a1, sel_exception);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(a1, sel_setException_, 0);
      sub_19CDC98D8();
      swift_allocError();
      v9 = v8;
      v10 = v7;
      JSError.init(_:)(v10, v9);
      swift_willThrow();

      a2 = v10;
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v11 = 0xD00000000000001ALL;
    *(_QWORD *)(v11 + 8) = 0x800000019D06FCD0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_BYTE *)(v11 + 24) = 1;
    *(_QWORD *)(v11 + 32) = 0;
    *(_BYTE *)(v11 + 40) = 1;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_QWORD *)(v11 + 96) = 0;
    swift_willThrow();
  }

  return v5;
}

uint64_t sub_19CE036EC(void *a1, void *a2)
{
  uint64_t result;

  sub_19CE38EFC(a1, a2);
  return result;
}

uint64_t sub_19CE037C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2C4B8(a1, a2, a3, (uint64_t (*)(void))sub_19CE392F0);
}

uint64_t sub_19CE037D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2C4B8(a1, a2, a3, (uint64_t (*)(void))sub_19CF4AB34);
}

void sub_19CE037DC(void *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;

  v3 = a2;
  sub_19CD2F4D8(a2, &v11);
  if (!v2)
  {
    v5 = objc_msgSend(a1, sel_exception);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(a1, sel_setException_, 0);
      sub_19CDC98D8();
      swift_allocError();
      v8 = v7;
      v9 = v6;
      JSError.init(_:)(v9, v8);
      swift_willThrow();

      v10 = v11;
      v3 = v10;
    }
  }

}

uint64_t sub_19CE038B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19CE038E0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19CF7BFAC);
}

uint64_t sub_19CE038BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19CE038E0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19CF7C304);
}

uint64_t sub_19CE038C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CD04930(a1, a2, a3, a4, (uint64_t (*)(void))sub_19CF7C65C);
}

uint64_t sub_19CE038D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19CE038E0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_19CF7C888);
}

uint64_t sub_19CE038E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

id sub_19CE039B8(id a1, id a2, uint64_t a3)
{
  id v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);
  id v14;
  id result;

  v4 = a2;
  if (objc_msgSend(a2, sel_isNumber))
  {
    v6 = (int)objc_msgSend(v4, sel_toInt32);
    v7 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    v8 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v6, v7, v8);
    v9 = a1;
    v4 = (id)sub_19CFE0808();
    a1 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v4, v9);
    swift_unknownObjectRelease();

    if (a1)
      return a1;
    __break(1u);
  }
  sub_19CDC98D8();
  v10 = (void *)swift_allocError();
  JSError.init(badValue:expected:)(v4, v11);
  swift_willThrow();
  v12 = objc_msgSend(a1, sel_exceptionHandler);
  if (v12)
  {
    v13 = (void (**)(_QWORD, _QWORD, _QWORD))v12;
    _Block_copy(v12);
    v14 = sub_19CE7CC54(v10, a1);
    ((void (**)(_QWORD, id, id))v13)[2](v13, a1, v14);
    _Block_release(v13);
    _Block_release(v13);

  }
  result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    a1 = result;

    return a1;
  }
  __break(1u);
  return result;
}

id sub_19CE03B8C(id a1, id a2, uint64_t a3)
{
  id v4;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void (**v14)(_QWORD, _QWORD, _QWORD);
  id v15;
  id result;

  v4 = a2;
  if (objc_msgSend(a2, sel_isNumber))
  {
    objc_msgSend(v4, sel_toDouble);
    v7 = v6;
    v8 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 112))(v8, v9, v7);
    v10 = a1;
    v4 = (id)sub_19CFE0808();
    a1 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v4, v10);
    swift_unknownObjectRelease();

    if (a1)
      return a1;
    __break(1u);
  }
  sub_19CDC98D8();
  v11 = (void *)swift_allocError();
  JSError.init(badValue:expected:)(v4, v12);
  swift_willThrow();
  v13 = objc_msgSend(a1, sel_exceptionHandler);
  if (v13)
  {
    v14 = (void (**)(_QWORD, _QWORD, _QWORD))v13;
    _Block_copy(v13);
    v15 = sub_19CE7CC54(v11, a1);
    ((void (**)(_QWORD, id, id))v14)[2](v14, a1, v15);
    _Block_release(v14);
    _Block_release(v14);

  }
  result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    a1 = result;

    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE03D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CCEEE6C(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_19CF7CB8C);
}

uint64_t sub_19CE03D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CCEEE6C(a1, a2, a3, a4, a5, (uint64_t (*)(void))sub_19CF7B660);
}

uint64_t sub_19CE03D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2C4B8(a1, a2, a3, (uint64_t (*)(void))sub_19CF7BBC0);
}

uint64_t sub_19CE03D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CD04930(a1, a2, a3, a4, (uint64_t (*)(void))sub_19CF7F8D0);
}

uint64_t sub_19CE03D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2C4B8(a1, a2, a3, (uint64_t (*)(void))sub_19CF8A5D8);
}

uint64_t sub_19CE03DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2C4B8(a1, a2, a3, (uint64_t (*)(void))sub_19CF9FF5C);
}

uint64_t sub_19CE03DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  _QWORD *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_19CFE0238();
    for (i = (_QWORD *)(a1 + 32); ; i += 5)
    {
      v8 = i[3];
      v9 = i[4];
      __swift_project_boxed_opaque_existential_1(i, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v8, v9);
      if (v2)
        break;
      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      if (!--v4)
        return v10;
    }
    return swift_release();
  }
  return result;
}

id sub_19CE03E98(void *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4 = (void *)sub_19CFDF854();
  v5 = objc_msgSend(a2, sel_callWithArguments_, v4);

  if (v5)
  {
    v6 = objc_msgSend(a1, sel_exception);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(a1, sel_setException_, 0);
      sub_19CDC98D8();
      swift_allocError();
      v9 = v8;
      v10 = v7;
      JSError.init(_:)(v10, v9);
      swift_willThrow();

      a2 = v10;
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v11 = 0xD000000000000017;
    *(_QWORD *)(v11 + 8) = 0x800000019D06FCF0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_BYTE *)(v11 + 24) = 1;
    *(_QWORD *)(v11 + 32) = 0;
    *(_BYTE *)(v11 + 40) = 1;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_QWORD *)(v11 + 96) = 0;
    swift_willThrow();
  }

  return v5;
}

id sub_19CE04000(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id result;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v9 + 56) = sub_19CD15680();
  *(_QWORD *)(v9 + 32) = a2;
  v10 = a2;
  v11 = swift_bridgeObjectRetain();
  sub_19CD2E5EC(v11);
  result = objc_msgSend(a4, sel_context);
  if (result)
  {
    v13 = result;
    v14 = a4;
    swift_bridgeObjectRetain();
    sub_19CE037DC(v13, v14);
    v16 = v15;
    if (v5)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v17 = objc_msgSend(a1, sel_exception);
      if (v17)
      {
        v18 = v17;
        objc_msgSend(a1, sel_setException_, 0);
        sub_19CDC98D8();
        swift_allocError();
        v20 = v19;
        v21 = v18;
        JSError.init(_:)(v21, v20);
        swift_willThrow();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();

      }
    }
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_19CE041D0(void *a1, uint64_t a2, id a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  unint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v6 = a1;
  v7 = sub_19CE03DAC(a2, (uint64_t)v6);
  if (v3)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    v9 = v7;

    sub_19CE0326C(v9);
    swift_bridgeObjectRelease();
    v10 = (void *)sub_19CFDF854();
    swift_bridgeObjectRelease();
    a3 = objc_msgSend(a3, sel_constructWithArguments_, v10);

    if (a3)
    {
      v11 = objc_msgSend(v6, sel_exception);
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v6, sel_setException_, 0);
        sub_19CDC98D8();
        swift_allocError();
        v14 = v13;
        v15 = v12;
        JSError.init(_:)(v15, v14);
        swift_willThrow();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_19CDC98D8();
      swift_allocError();
      *(_QWORD *)v16 = 0xD00000000000001ALL;
      *(_QWORD *)(v16 + 8) = 0x800000019D06FCD0;
      *(_QWORD *)(v16 + 16) = 0;
      *(_BYTE *)(v16 + 24) = 1;
      *(_QWORD *)(v16 + 32) = 0;
      *(_BYTE *)(v16 + 40) = 1;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)(v16 + 64) = 0u;
      *(_OWORD *)(v16 + 80) = 0u;
      *(_QWORD *)(v16 + 96) = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
  }
  return a3;
}

uint64_t sub_19CE043A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void CompoundError.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  if (!*(_QWORD *)(a1 + 16))
    sub_19CFA8E78((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
  *a2 = a1;
}

uint64_t CompoundError.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompoundError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return 0x1000000000000026;
  if (v1 == 1)
  {
    v2 = *(void **)(*(_QWORD *)v0 + 32);
    swift_getErrorValue();
    v3 = v2;
    v4 = sub_19CFE0868();

  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F238);
    sub_19CE0454C();
    v4 = sub_19CFDF4F4();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_19CE04508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getErrorValue();
  result = sub_19CFE0868();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_19CE0454C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE43F240;
  if (!qword_1EE43F240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43F238);
    v2 = sub_19CE045B0();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC850], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43F240);
  }
  return result;
}

unint64_t sub_19CE045B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43F248;
  if (!qword_1EE43F248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43F250);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43F248);
  }
  return result;
}

uint64_t CompoundError.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t inited;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2 != 1)
  {
    if (!v2)
      return sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = sub_19CFDF578();
    *(_QWORD *)(inited + 40) = v7;
    *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F250);
    *(_QWORD *)(inited + 48) = v1;
    swift_bridgeObjectRetain();
    return sub_19CD30650(inited);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  result = sub_19CFDF578();
  *(_QWORD *)(inited + 32) = result;
  *(_QWORD *)(inited + 40) = v5;
  if (*(_QWORD *)(v1 + 16))
  {
    swift_getErrorValue();
    *(_QWORD *)(inited + 72) = v8;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm);
    return sub_19CD30650(inited);
  }
  __break(1u);
  return result;
}

unint64_t sub_19CE04734()
{
  unint64_t result;

  result = qword_1EE436CC0;
  if (!qword_1EE436CC0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CompoundError, &type metadata for CompoundError);
    atomic_store(result, (unint64_t *)&qword_1EE436CC0);
  }
  return result;
}

uint64_t sub_19CE04794()
{
  sub_19CE047F4();
  return sub_19CFE085C();
}

uint64_t sub_19CE047BC()
{
  sub_19CE047F4();
  return sub_19CFE0850();
}

ValueMetadata *type metadata accessor for CompoundError()
{
  return &type metadata for CompoundError;
}

unint64_t sub_19CE047F4()
{
  unint64_t result;

  result = qword_1EE43F258;
  if (!qword_1EE43F258)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CompoundError, &type metadata for CompoundError);
    atomic_store(result, (unint64_t *)&qword_1EE43F258);
  }
  return result;
}

uint64_t JetPackResourceBundleMissingFileError.path.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for JetPackResourceBundleMissingFileError()
{
  return &type metadata for JetPackResourceBundleMissingFileError;
}

uint64_t sub_19CE04854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  char v39;
  _QWORD v40[3];
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    if (qword_1EE43D060 != -1)
      swift_once();
    sub_19CFE0A6C();
    v1 = v44;
    v2 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v35 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v34 = 0xD00000000000003FLL;
    *((_QWORD *)&v34 + 1) = 0x800000019D06FE70;
    v37 = 0u;
    v38 = 0u;
    sub_19CD40658((uint64_t)&v34, (uint64_t)&v37);
    *(_BYTE *)(v4 + 64) = 0;
    v5 = v38;
    *(_OWORD *)(v4 + 32) = v37;
    *(_OWORD *)(v4 + 48) = v5;
    *(_QWORD *)(v3 + 32) = v4;
    Logger.error(_:)(v3, v1, v2);
  }
  else
  {
    v6 = v0;
    v7 = *(_QWORD *)(v0 + 16);
    if (*(_QWORD *)(v7 + 16))
    {
      if (qword_1EE43D060 != -1)
        swift_once();
      sub_19CFE0A6C();
      v8 = v44;
      v9 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
      v42 = sub_19CD40918(0, 77, 0, MEMORY[0x1E0DEE9D8]);
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      v12 = *(_QWORD *)(v7 + 16);
      v41 = MEMORY[0x1E0DEB418];
      v40[0] = v12;
      sub_19CD40794((uint64_t)v40, (uint64_t)v36);
      v34 = 0u;
      v35 = 0u;
      sub_19CD40658((uint64_t)v36, (uint64_t)&v34);
      v39 = 0;
      v37 = v34;
      v38 = v35;
      v13 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
      v15 = v13[2];
      v14 = v13[3];
      if (v15 >= v14 >> 1)
        v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
      v13[2] = v15 + 1;
      v16 = &v13[5 * v15];
      v17 = v37;
      v18 = v38;
      *((_BYTE *)v16 + 64) = v39;
      *((_OWORD *)v16 + 2) = v17;
      *((_OWORD *)v16 + 3) = v18;
      v42 = v13;
      sub_19CD3F190((uint64_t)v40);
      v19._countAndFlagsBits = 0xD00000000000004CLL;
      v19._object = (void *)0x800000019D06FDE0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      *(_QWORD *)(v10 + 32) = v42;
      Logger.warning(_:)(v10, v8, v9);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    }
    sub_19CFDF2A8();
    if (*(_QWORD *)v6)
    {
      swift_retain();
      sub_19CFDF2A8();
      swift_release();
    }
    *(_BYTE *)(v6 + 40) = 1;
    if (qword_1EE43D060 != -1)
      swift_once();
    sub_19CFE0A6C();
    v20 = v44;
    v21 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
    v42 = sub_19CD40918(0, 60, 0, MEMORY[0x1E0DEE9D8]);
    v23._object = (void *)0x800000019D06FE30;
    v23._countAndFlagsBits = 0xD00000000000003BLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    v24 = *(_QWORD *)(v6 + 24);
    v25 = *(_QWORD *)(v6 + 32);
    v41 = MEMORY[0x1E0DEA968];
    v40[0] = v24;
    v40[1] = v25;
    sub_19CD40794((uint64_t)v40, (uint64_t)v36);
    v34 = 0u;
    v35 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v36, (uint64_t)&v34);
    v39 = 0;
    v37 = v34;
    v38 = v35;
    v26 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
    v28 = v26[2];
    v27 = v26[3];
    if (v28 >= v27 >> 1)
      v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
    v26[2] = v28 + 1;
    v29 = &v26[5 * v28];
    v30 = v37;
    v31 = v38;
    *((_BYTE *)v29 + 64) = v39;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    v42 = v26;
    sub_19CD3F190((uint64_t)v40);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    *(_QWORD *)(v22 + 32) = v42;
    Logger.debug(_:)(v22, v20, v21);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

uint64_t destroy for PageRenderActivity()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for PageRenderActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderActivity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

JetEngine::PageMetrics::InvocationPoint __swiftcall PageMetrics.InvocationPoint.init(rawValue:)(JetEngine::PageMetrics::InvocationPoint rawValue)
{
  JetEngine::PageMetrics::InvocationPoint *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t PageMetrics.InvocationPoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_19CFE06AC();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t PageMetrics.InvocationPoint.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t PageMetrics.InvocationPoint.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static PageMetrics.InvocationPoint.appExit.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x74697845707061;
  a1[1] = 0xE700000000000000;
}

void static PageMetrics.InvocationPoint.appEnter.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E45707061;
  a1[1] = 0xE800000000000000;
}

void static PageMetrics.InvocationPoint.backButton.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x747475426B636162;
  a1[1] = 0xEA00000000006E6FLL;
}

uint64_t sub_19CE0516C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_19CFE06AC();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CE0522C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19CE05258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_19CCF8C5C(a1, (uint64_t)v9, &qword_1ECEB1328);
  v3 = v10;
  if (v10)
  {
    v4 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    v7 = v6;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    if (v7)
    {
      *a2 = v5;
      a2[1] = v7;
      return result;
    }
  }
  else
  {
    result = sub_19CCECFE4((uint64_t)v9, &qword_1ECEB1328);
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

__n128 PageMetrics.Instruction.init(data:invocationPoints:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  __n128 result;

  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_BYTE *)(a3 + 16) = v3;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 40) = v4;
  *(_QWORD *)(a3 + 48) = a2;
  return result;
}

__n128 PageMetrics.Instruction.data.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 result;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  v6 = a1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  *(_BYTE *)(v1 + 16) = v5;
  result = *(__n128 *)(a1 + 3);
  *(__n128 *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 40) = v6;
  return result;
}

uint64_t (*PageMetrics.Instruction.data.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.Instruction.invocationPoints.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*PageMetrics.Instruction.invocationPoints.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CE053F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PageMetrics.Instruction.init(deserializing:using:)(a1, a2, a3);
}

uint64_t PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  v5 = *a3;
  *a5 = result;
  a5[1] = a2;
  a5[2] = v5;
  a5[3] = a4;
  return result;
}

unint64_t static PageMetrics.notInstrumented.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_19CE07B90(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = 0;
  a1[2] = MEMORY[0x1E0DEE9E0];
  a1[3] = result;
  return result;
}

uint64_t PageMetrics.instructions.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PageMetrics.instructions.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.pageFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PageMetrics.pageFields.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.custom.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t PageMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*PageMetrics.custom.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PageMetrics.clickLocationFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*PageMetrics.clickLocationFields.modify())()
{
  return nullsub_1;
}

uint64_t PageMetrics.mergingWith(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = *(_QWORD *)(v2 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  v8 = swift_bridgeObjectRetain();
  sub_19CDC71CC(v8);
  v9 = swift_bridgeObjectRetain();
  sub_19CDC71CC(v9);
  v10 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = v7;
  sub_19CDEE6E8(v6, (uint64_t)sub_19CDD58F8, 0, isUniquelyReferenced_nonNull_native, &v14);
  v12 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v4;
  a2[2] = v12;
  a2[3] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE05650@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return PageMetrics.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19CE05664@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PageMetrics.mergingWith(_:)(a1, a2);
}

uint64_t PageMetrics._isEqual(to:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = a1[1];
  v3 = a1[2];
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if ((sub_19CE0581C(*a1, *v1) & 1) == 0)
    goto LABEL_11;
  if (v4)
  {
    if (!v2)
      goto LABEL_11;
    swift_bridgeObjectRetain();
    v7 = swift_bridgeObjectRetain();
    v8 = sub_19CE07520(v7, v4);
    swift_bridgeObjectRelease();
    v9 = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_11;
    MEMORY[0x1E0C80A78](v9, v10);
    if ((sub_19CE07D3C(v4, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE08BC0) & 1) == 0)
      goto LABEL_11;
  }
  else if (v2)
  {
LABEL_11:
    v16 = 0;
    return v16 & 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_19CDD0DBC(v6, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_11;
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_19CE07520(v12, v5);
  swift_bridgeObjectRelease();
  v14 = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_11;
  MEMORY[0x1E0C80A78](v14, v15);
  v16 = sub_19CE07D3C(v5, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE07F54);
  return v16 & 1;
}

uint64_t sub_19CE0581C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t result;
  int64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[32];
  __int128 v53;
  _OWORD v54[2];
  __int128 v55;
  _OWORD v56[2];

  v2 = *(_QWORD *)(a2 + 16);
  if (v2 != *(_QWORD *)(a1 + 16))
    return 0;
  if (!v2)
    return 1;
  v3 = a2 + 32;
  v4 = a1 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v40 = v3;
  v41 = v2;
  v39 = v4;
LABEL_4:
  v6 = v3 + 56 * v5;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v6 + 24);
  v47 = *(_QWORD *)(v6 + 32);
  v48 = v5;
  v9 = *(unsigned __int8 *)(v6 + 16);
  v10 = v4 + 56 * v5;
  v11 = *(_QWORD *)(v10 + 8);
  v12 = *(unsigned __int8 *)(v10 + 16);
  v13 = *(_QWORD *)(v10 + 24);
  v14 = *(_QWORD *)(v10 + 32);
  v15 = *(_QWORD *)(v10 + 40);
  v44 = *(_QWORD *)(v6 + 48);
  v45 = *(_QWORD *)(v10 + 48);
  v46 = *(_QWORD *)(v6 + 40);
  if (v7)
  {
    if (!v11)
      goto LABEL_55;
    v16 = *(_QWORD *)v6 == *(_QWORD *)v10 && v7 == v11;
    if (!v16 && (sub_19CFE06A0() & 1) == 0)
      goto LABEL_55;
  }
  else if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v9 != v12)
    goto LABEL_55;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v17 = sub_19CE07520(v13, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    v42 = v15;
    v43 = v14;
    v49 = v48 + 1;
    v18 = v8 + 64;
    v19 = 1 << *(_BYTE *)(v8 + 32);
    if (v19 < 64)
      v20 = ~(-1 << v19);
    else
      v20 = -1;
    v21 = v20 & *(_QWORD *)(v8 + 64);
    v22 = (unint64_t)(v19 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v24 = 0;
    while (1)
    {
      if (v21)
      {
        v26 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        v27 = v26 | (v24 << 6);
      }
      else
      {
        v28 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          return result;
        }
        if (v28 >= v22)
          goto LABEL_46;
        v29 = *(_QWORD *)(v18 + 8 * v28);
        ++v24;
        if (!v29)
        {
          v24 = v28 + 1;
          if (v28 + 1 >= v22)
            goto LABEL_46;
          v29 = *(_QWORD *)(v18 + 8 * v24);
          if (!v29)
          {
            v24 = v28 + 2;
            if (v28 + 2 >= v22)
              goto LABEL_46;
            v29 = *(_QWORD *)(v18 + 8 * v24);
            if (!v29)
            {
              v24 = v28 + 3;
              if (v28 + 3 >= v22)
                goto LABEL_46;
              v29 = *(_QWORD *)(v18 + 8 * v24);
              if (!v29)
              {
                v24 = v28 + 4;
                if (v28 + 4 >= v22)
                  goto LABEL_46;
                v29 = *(_QWORD *)(v18 + 8 * v24);
                if (!v29)
                {
                  v30 = v28 + 5;
                  if (v30 >= v22)
                  {
LABEL_46:
                    swift_release();
                    if ((sub_19CE07200(v47, v43) & 1) == 0)
                      break;
                    v37 = sub_19CE07200(v46, v42);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v37 & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_55;
                    }
                    v38 = sub_19CE07200(v44, v45);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v38 & 1) == 0)
                      goto LABEL_55;
                    v3 = v40;
                    v5 = v49;
                    v4 = v39;
                    if (v49 == v41)
                    {
                      swift_bridgeObjectRelease();
                      return 1;
                    }
                    goto LABEL_4;
                  }
                  v29 = *(_QWORD *)(v18 + 8 * v30);
                  if (!v29)
                  {
                    while (1)
                    {
                      v24 = v30 + 1;
                      if (__OFADD__(v30, 1))
                        goto LABEL_61;
                      if (v24 >= v22)
                        goto LABEL_46;
                      v29 = *(_QWORD *)(v18 + 8 * v24);
                      ++v30;
                      if (v29)
                        goto LABEL_40;
                    }
                  }
                  v24 = v30;
                }
              }
            }
          }
        }
LABEL_40:
        v21 = (v29 - 1) & v29;
        v27 = __clz(__rbit64(v29)) + (v24 << 6);
      }
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v27);
      v33 = *v31;
      v32 = v31[1];
      sub_19CD436B0(*(_QWORD *)(v8 + 56) + 32 * v27, (uint64_t)v56);
      *(_QWORD *)&v55 = v33;
      *((_QWORD *)&v55 + 1) = v32;
      v53 = v55;
      v54[0] = v56[0];
      v54[1] = v56[1];
      v34 = v55;
      sub_19CD436B0((uint64_t)v54, (uint64_t)v52);
      if (*(_QWORD *)(v13 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35 = sub_19CD3FD1C(v34, *((uint64_t *)&v34 + 1));
        if ((v36 & 1) != 0)
        {
          sub_19CD436B0(*(_QWORD *)(v13 + 56) + 32 * v35, (uint64_t)&v50);
        }
        else
        {
          v50 = 0u;
          v51 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v50 = 0u;
        v51 = 0u;
        swift_bridgeObjectRetain();
      }
      v25 = sub_19CF75568((uint64_t)v52, (uint64_t)&v50, 3uLL, 0);
      sub_19CCECFE4((uint64_t)&v50, &qword_1ECEB3370);
      sub_19CCECFE4((uint64_t)v52, &qword_1ECEB3370);
      result = sub_19CCECFE4((uint64_t)&v53, &qword_1EE43BB68);
      if ((v25 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_53;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_53:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_19CE05F00(char *a1, char *a2)
{
  return sub_19CE81E60(*a1, *a2);
}

uint64_t sub_19CE05F0C()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE05F88()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE05FE0()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE06058@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_19CE060B4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (*v1)
    v2 = 0xD000000000000010;
  v3 = 0x800000019D06C820;
  if (!*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19CE060F0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 1635017060;
}

uint64_t sub_19CE06128@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_19CE06188()
{
  sub_19CE07F60();
  return sub_19CFE0A48();
}

uint64_t sub_19CE061B0()
{
  sub_19CE07F60();
  return sub_19CFE0A54();
}

uint64_t PageMetrics.Instruction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F260);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE07F60();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v31 = 0;
  sub_19CDEEA78();
  sub_19CFE04B4();
  v10 = v25;
  v30 = v26;
  v11 = v28;
  v18 = v24;
  v19 = v27;
  v12 = v29;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F270);
  v31 = 1;
  sub_19CD09560(&qword_1EE43F278, &qword_1EE43F270, sub_19CE07FA4, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  v23 = v10;
  v13 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v11;
  swift_bridgeObjectRetain();
  v21 = v12;
  swift_bridgeObjectRetain();
  sub_19CFE04B4();
  v14 = sub_19CD4275C(v24, (void (*)(void))sub_19CD4D97C, (uint64_t)&type metadata for PageMetrics.InvocationPoint, (void (*)(_BYTE *, uint64_t, uint64_t))sub_19CD4AD00);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v16 = v22;
  v15 = v23;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v30;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PageMetrics.Instruction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F298);
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD **)v2;
  v8 = *(_QWORD *)(v2 + 8);
  v10 = *(_BYTE *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 40);
  v16 = *(_QWORD *)(v2 + 48);
  v17 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE07F60();
  sub_19CFE0A24();
  v20 = v9;
  v21 = v8;
  v22 = v10;
  v23 = *(_OWORD *)(v2 + 24);
  v24 = v17;
  v25 = 0;
  sub_19CDEEAE0();
  v12 = v18;
  sub_19CFE0568();
  if (!v12)
  {
    v13 = swift_bridgeObjectRetain();
    v14 = sub_19CDFE034(v13);
    swift_bridgeObjectRelease();
    v20 = v14;
    v25 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F270);
    sub_19CD09560(&qword_1EE43F2A0, &qword_1EE43F270, sub_19CE0800C, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v4);
}

uint64_t sub_19CE06660@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PageMetrics.Instruction.init(from:)(a1, a2);
}

uint64_t sub_19CE06674(_QWORD *a1)
{
  return PageMetrics.Instruction.encode(to:)(a1);
}

void sub_19CE06688(char *a1)
{
  sub_19CE81F00(*a1);
}

void sub_19CE06694()
{
  char *v0;

  sub_19CF98970(*v0);
}

void sub_19CE0669C()
{
  __asm { BR              X10 }
}

uint64_t sub_19CE066E0()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE06740(uint64_t a1)
{
  char *v1;

  sub_19CE11BB4(a1, *v1);
}

uint64_t sub_19CE06748@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE08948();
  *a1 = result;
  return result;
}

uint64_t sub_19CE06774()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CE067AC + 4 * byte_19D0564A8[*v0]))();
}

void sub_19CE067AC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65694665676170;
  a1[1] = 0xEA00000000007364;
}

void sub_19CE067CC(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74737563;
  a1[1] = 0xE600000000000000;
}

void sub_19CE067E4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019D06C800;
}

uint64_t sub_19CE06804()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CE0683C + 4 * byte_19D0564AC[*v0]))(0x7463757274736E69, 0xEC000000736E6F69);
}

uint64_t sub_19CE0683C()
{
  return 0x6C65694665676170;
}

uint64_t sub_19CE06858()
{
  return 0x6D6F74737563;
}

unint64_t sub_19CE0686C()
{
  return 0xD000000000000013;
}

uint64_t sub_19CE06888@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE08948();
  *a1 = result;
  return result;
}

void sub_19CE068AC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_19CE068B8()
{
  sub_19CE08074();
  return sub_19CFE0A48();
}

uint64_t sub_19CE068E0()
{
  sub_19CE08074();
  return sub_19CFE0A54();
}

uint64_t PageMetrics.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F2B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE08074();
  sub_19CFE09E8();
  if (!v2)
  {
    LOBYTE(v30[0]) = 0;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F2C8);
      LOBYTE(v27[0]) = 0;
      sub_19CD09560(&qword_1EE43F2D0, &qword_1EE43F2C8, sub_19CE080FC, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
      sub_19CFE04B4();
      v11 = v30[0];
    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    LOBYTE(v30[0]) = 1;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      LOBYTE(v27[0]) = 1;
      sub_19CE080B8();
      sub_19CFE04B4();
      JSONObject.dictionary.getter((uint64_t)v27);
      v12 = v28;
      if (v28)
      {
        v25 = v11;
        v13 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        v14 = *(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 32);
        v15 = v13;
        v11 = v25;
        v26 = v14(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v12, v15);
        sub_19CD3E3F8((uint64_t)v30);
        sub_19CDC6248((uint64_t)v27);
      }
      else
      {
        sub_19CD3E3F8((uint64_t)v30);
        sub_19CCECFE4((uint64_t)v27, &qword_1EE43C1C8);
        v26 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0;
    }
    LOBYTE(v30[0]) = 2;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
      LOBYTE(v27[0]) = 2;
      sub_19CDEEB24(&qword_1EE43EDF8, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
      sub_19CFE04B4();
      v24 = a2;
      v25 = v11;
      v16 = v30[0];
    }
    else
    {
      v24 = a2;
      v25 = v11;
      v16 = MEMORY[0x1E0DEE9E0];
    }
    v17 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    LOBYTE(v30[0]) = 3;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v33 = 3;
      sub_19CE080B8();
      sub_19CFE04B4();
      JSONObject.dictionary.getter((uint64_t)v30);
      sub_19CD3E3F8((uint64_t)v27);
      v21 = v31;
      v18 = v25;
      if (v31)
      {
        v22 = v32;
        __swift_project_boxed_opaque_existential_1(v30, v31);
        v17 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v21, v22);
        sub_19CDC6248((uint64_t)v30);
        if (v17)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
          goto LABEL_20;
        }
      }
      else
      {
        sub_19CCECFE4((uint64_t)v30, &qword_1EE43C1C8);
      }
      v17 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v18 = v25;
LABEL_20:
    v19 = v26;
    v20 = v24;
    *v24 = v18;
    v20[1] = v19;
    v20[2] = v16;
    v20[3] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t PageMetrics.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  ValueMetadata *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[3];
  ValueMetadata *v27;
  _UNKNOWN **v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F2F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v29 = v1[1];
  v10 = v1[2];
  v22 = v1[3];
  v23 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE08074();
  v11 = v4;
  sub_19CFE0A24();
  v26[0] = v9;
  LOBYTE(v24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F2C8);
  sub_19CD09560(&qword_1EE43F2F8, &qword_1EE43F2C8, sub_19CE08164, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0568();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = v22;
  v14 = v23;
  v15 = v29;
  if (!v29)
  {
    v24 = 0u;
    v25 = 0u;
    v16 = v5;
    v17 = v22;
    goto LABEL_7;
  }
  *((_QWORD *)&v25 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  *(_QWORD *)&v24 = v15;
  v16 = v5;
  v17 = v13;
  if (!*((_QWORD *)&v25 + 1))
  {
LABEL_7:
    swift_bridgeObjectRetain();
    sub_19CCECFE4((uint64_t)&v24, &qword_1ECEB3370);
    v20 = 0;
    v19 = 0;
    v18 = 0;
    goto LABEL_8;
  }
  v18 = swift_allocObject();
  sub_19CD433C0(&v24, (_OWORD *)(v18 + 16));
  swift_bridgeObjectRetain();
  v19 = &off_1E3DCC5B0;
  v20 = &type metadata for FoundationValue;
LABEL_8:
  v26[0] = v18;
  v26[1] = 0;
  v26[2] = 0;
  v27 = v20;
  v28 = v19;
  LOBYTE(v24) = 1;
  sub_19CE081CC();
  sub_19CFE0568();
  sub_19CD3E3F8((uint64_t)v26);
  v26[0] = v14;
  LOBYTE(v24) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
  sub_19CDEEB24(&qword_1EE43EE48, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0568();
  v27 = &type metadata for FoundationValue;
  v28 = &off_1E3DCC5B0;
  v21 = swift_allocObject();
  v26[0] = v21;
  *(_QWORD *)(v21 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  *(_QWORD *)(v21 + 16) = v17;
  LOBYTE(v24) = 3;
  swift_bridgeObjectRetain();
  sub_19CFE0568();
  sub_19CD3E3F8((uint64_t)v26);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v11);
}

uint64_t sub_19CE07144@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PageMetrics.init(from:)(a1, a2);
}

uint64_t sub_19CE07158(_QWORD *a1)
{
  return PageMetrics.encode(to:)(a1);
}

uint64_t PageMetrics.Instruction._isEqual(to:)(__int128 *a1)
{
  __int128 *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  __int128 v16;
  uint64_t v17;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_QWORD *)a1 + 6);
  v5 = *((_BYTE *)v1 + 16);
  v6 = *((_QWORD *)v1 + 5);
  v7 = *((_QWORD *)v1 + 6);
  v14 = *v1;
  v15 = v5;
  v16 = *(__int128 *)((char *)v1 + 24);
  v17 = v6;
  v10 = *a1;
  v11 = v2;
  v12 = *(__int128 *)((char *)a1 + 24);
  v13 = v3;
  if ((MetricsData._isEqual(to:)((uint64_t)&v10) & 1) != 0)
    v8 = sub_19CE07200(v7, v4);
  else
    v8 = 0;
  return v8 & 1;
}

uint64_t sub_19CE07200(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_19CFE08C8();
    swift_bridgeObjectRetain_n();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    v18 = sub_19CFE0910();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_19CFE06A0() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_19CFE06A0() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_19CE07490(__int128 *a1)
{
  __int128 *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  __int128 v16;
  uint64_t v17;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_QWORD *)a1 + 6);
  v5 = *((_BYTE *)v1 + 16);
  v6 = *((_QWORD *)v1 + 5);
  v7 = *((_QWORD *)v1 + 6);
  v14 = *v1;
  v15 = v5;
  v16 = *(__int128 *)((char *)v1 + 24);
  v17 = v6;
  v10 = *a1;
  v11 = v2;
  v12 = *(__int128 *)((char *)a1 + 24);
  v13 = v3;
  if ((MetricsData._isEqual(to:)((uint64_t)&v10) & 1) != 0)
    v8 = sub_19CE07200(v7, v4);
  else
    v8 = 0;
  return v8 & 1;
}

uint64_t sub_19CE07520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;

  v31 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v30 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v5 = ~(-1 << v8);
  v9 = v5 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(v8 + 63) >> 6;
  v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v12 = 0;
  if (!v7)
    goto LABEL_15;
LABEL_10:
  v14 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v15 = v14 | (v12 << 6);
LABEL_11:
  v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v15);
  v18 = *v16;
  v17 = v16[1];
  result = swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_12:
    v19 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v20 = v19 | (v11 << 6);
LABEL_13:
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v20);
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_57;
LABEL_69:
    swift_release();
    swift_release();
    if (v22)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return 1;
  }
  while (1)
  {
LABEL_36:
    v27 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_76;
    if (v27 >= v32)
      goto LABEL_56;
    v28 = *(_QWORD *)(v30 + 8 * v27);
    if (v28)
      goto LABEL_39;
    v11 += 2;
    if (v27 + 1 >= v32)
    {
      v9 = 0;
      v23 = 0;
      v22 = 0;
      v11 = v27;
      if (!v17)
        goto LABEL_69;
      goto LABEL_57;
    }
    v28 = *(_QWORD *)(v30 + 8 * v11);
    if (v28)
      goto LABEL_42;
    v29 = v27 + 2;
    if (v27 + 2 >= v32)
      goto LABEL_56;
    v28 = *(_QWORD *)(v30 + 8 * v29);
    if (v28)
      goto LABEL_47;
    v11 = v27 + 3;
    if (v27 + 3 < v32)
      break;
    v9 = 0;
    v23 = 0;
    v22 = 0;
    v11 = v27 + 2;
    if (!v17)
      goto LABEL_69;
LABEL_57:
    if (!v22)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v18 == v23 && v17 == v22)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_10;
    }
    else
    {
      v13 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        swift_release();
        swift_release();
        return 0;
      }
      if (v7)
        goto LABEL_10;
    }
LABEL_15:
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v24 >= v33)
      goto LABEL_35;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    if (v25)
      goto LABEL_18;
    v12 += 2;
    if (v24 + 1 >= v33)
    {
      v7 = 0;
      v18 = 0;
      v17 = 0;
      v12 = v24;
      if (v9)
        goto LABEL_12;
    }
    else
    {
      v25 = *(_QWORD *)(v31 + 8 * v12);
      if (v25)
        goto LABEL_21;
      v26 = v24 + 2;
      if (v24 + 2 >= v33)
        goto LABEL_35;
      v25 = *(_QWORD *)(v31 + 8 * v26);
      if (v25)
        goto LABEL_26;
      v12 = v24 + 3;
      if (v24 + 3 >= v33)
      {
        v7 = 0;
        v18 = 0;
        v17 = 0;
        v12 = v24 + 2;
        if (v9)
          goto LABEL_12;
      }
      else
      {
        v25 = *(_QWORD *)(v31 + 8 * v12);
        if (v25)
        {
LABEL_21:
          v24 = v12;
          goto LABEL_18;
        }
        v26 = v24 + 4;
        if (v24 + 4 < v33)
        {
          v25 = *(_QWORD *)(v31 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                break;
              if (v24 >= v33)
              {
                v7 = 0;
                v18 = 0;
                v17 = 0;
                v12 = v33 - 1;
                if (v9)
                  goto LABEL_12;
                goto LABEL_36;
              }
              v25 = *(_QWORD *)(v31 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
LABEL_26:
          v24 = v26;
LABEL_18:
          v7 = (v25 - 1) & v25;
          v15 = __clz(__rbit64(v25)) + (v24 << 6);
          v12 = v24;
          goto LABEL_11;
        }
LABEL_35:
        v7 = 0;
        v18 = 0;
        v17 = 0;
        if (v9)
          goto LABEL_12;
      }
    }
  }
  v28 = *(_QWORD *)(v30 + 8 * v11);
  if (v28)
  {
LABEL_42:
    v27 = v11;
LABEL_39:
    v9 = (v28 - 1) & v28;
    v20 = __clz(__rbit64(v28)) + (v27 << 6);
    v11 = v27;
    goto LABEL_13;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v32)
  {
LABEL_56:
    v9 = 0;
    v23 = 0;
    v22 = 0;
    if (!v17)
      goto LABEL_69;
    goto LABEL_57;
  }
  v28 = *(_QWORD *)(v30 + 8 * v29);
  if (v28)
  {
LABEL_47:
    v27 = v29;
    goto LABEL_39;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v32)
    {
      v9 = 0;
      v23 = 0;
      v22 = 0;
      v11 = v32 - 1;
      if (v17)
        goto LABEL_57;
      goto LABEL_69;
    }
    v28 = *(_QWORD *)(v30 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_39;
  }
LABEL_78:
  __break(1u);
  return result;
}

unint64_t sub_19CE07990(unint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 *v4;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  int v15;
  unint64_t v16;
  _BOOL8 v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t result;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v27;
  unint64_t v28;
  _QWORD v29[2];

  v4 = a3;
  v6 = a1;
  if (a3)
    v7 = &a3[a4];
  else
    v7 = 0;
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  v27 = v7;
  v28 = v8;
  v9 = 4 * v8;
  v10 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v10) = 1;
  v11 = 4 << v10;
  v23 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a2 & 0xFFFFFFFFFFFFFFLL;
  v12 = 15;
  v25 = 4 << v10;
  while (1)
  {
    if (!v4 || v4 == v27)
    {
      v14 = 0;
      v13 = 1;
    }
    else
    {
      v13 = 0;
      v15 = *v4++;
      v14 = v15;
    }
    v16 = v12 >> 14;
    v17 = v12 >> 14 == v9;
    if (v12 >> 14 == v9)
    {
      v18 = 0;
      if ((v13 & 1) != 0)
        return v17;
      goto LABEL_33;
    }
    v19 = v12 & 0xC;
    result = v12;
    if (v19 == v11)
    {
      result = sub_19CE07CC4(v12, a1, a2);
      v11 = v25;
      v6 = a1;
    }
    v21 = result >> 16;
    if (result >> 16 >= v28)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_19CFDF704();
      v11 = v25;
      v6 = a1;
      v18 = result;
      if (v19 == v25)
        goto LABEL_30;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v29[0] = v6;
      v29[1] = v24;
      v18 = *((_BYTE *)v29 + v21);
      if (v19 == v11)
        goto LABEL_30;
    }
    else
    {
      result = v23;
      if ((v6 & 0x1000000000000000) == 0)
      {
        result = sub_19CFE01FC();
        v11 = v25;
        v6 = a1;
      }
      v18 = *(_BYTE *)(result + v21);
      if (v19 == v11)
      {
LABEL_30:
        result = sub_19CE07CC4(v12, a1, a2);
        v11 = v25;
        v6 = a1;
        v12 = result;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_27:
          v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
          if ((v13 & 1) != 0)
            return v17;
          goto LABEL_33;
        }
        goto LABEL_31;
      }
    }
    if ((a2 & 0x1000000000000000) == 0)
      goto LABEL_27;
LABEL_31:
    if (v28 <= v12 >> 16)
      goto LABEL_37;
    v22 = sub_19CFDF6E0();
    v11 = v25;
    v6 = a1;
    v12 = v22;
    if ((v13 & 1) != 0)
      return v17;
LABEL_33:
    v17 = 0;
    if (v16 == v9 || v14 != v18)
      return v17;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19CE07B90(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2F10);
  v2 = sub_19CFE03B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19CCF8C5C(v6, (uint64_t)&v15, &qword_1ECEB2B80);
    v7 = v15;
    v8 = v16;
    result = sub_19CD23A50(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_19CD433C0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_19CE07CC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_19CFDF710();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1A1AD9910](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_19CE07D3C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _BYTE v20[32];
  int64_t v21;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v21)
      goto LABEL_24;
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v21)
        goto LABEL_24;
      v16 = *(_QWORD *)(v4 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v21)
          goto LABEL_24;
        v16 = *(_QWORD *)(v4 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v21)
            goto LABEL_24;
          v16 = *(_QWORD *)(v4 + 8 * v9);
          if (!v16)
          {
            v17 = v15 + 4;
            if (v17 >= v21)
            {
LABEL_24:
              v18 = 1;
              goto LABEL_25;
            }
            v16 = *(_QWORD *)(v4 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v9 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_27;
                if (v9 >= v21)
                  goto LABEL_24;
                v16 = *(_QWORD *)(v4 + 8 * v9);
                ++v17;
                if (v16)
                  goto LABEL_22;
              }
            }
            v9 = v17;
          }
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v20);
    v19[0] = v13;
    v19[1] = v14;
    swift_bridgeObjectRetain();
    LOBYTE(v13) = a2(v13, v14, v20);
    result = sub_19CCECFE4((uint64_t)v19, &qword_1EE43BB68);
    if ((v13 & 1) == 0)
    {
      v18 = 0;
LABEL_25:
      swift_release();
      return v18;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19CE07F20(uint64_t a1)
{
  destroy for StatefulCodingThunk(a1);
  return a1;
}

uint64_t sub_19CE07F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_19CF7548C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

unint64_t sub_19CE07F60()
{
  unint64_t result;

  result = qword_1EE43F268;
  if (!qword_1EE43F268)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056954, &type metadata for PageMetrics.Instruction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F268);
  }
  return result;
}

uint64_t sub_19CE07FA4()
{
  return sub_19CD09560(&qword_1EE43F280, &qword_1EE43F288, (uint64_t (*)(void))sub_19CE07FC8, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE07FC8()
{
  unint64_t result;

  result = qword_1EE43F290;
  if (!qword_1EE43F290)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageMetrics.InvocationPoint, &type metadata for PageMetrics.InvocationPoint);
    atomic_store(result, (unint64_t *)&qword_1EE43F290);
  }
  return result;
}

uint64_t sub_19CE0800C()
{
  return sub_19CD09560(&qword_1EE43F2A8, &qword_1EE43F288, (uint64_t (*)(void))sub_19CE08030, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE08030()
{
  unint64_t result;

  result = qword_1EE43F2B0;
  if (!qword_1EE43F2B0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageMetrics.InvocationPoint, &type metadata for PageMetrics.InvocationPoint);
    atomic_store(result, (unint64_t *)&qword_1EE43F2B0);
  }
  return result;
}

unint64_t sub_19CE08074()
{
  unint64_t result;

  result = qword_1EE43F2C0;
  if (!qword_1EE43F2C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056904, &type metadata for PageMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F2C0);
  }
  return result;
}

unint64_t sub_19CE080B8()
{
  unint64_t result;

  result = qword_1EE439D38[0];
  if (!qword_1EE439D38[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONObject, &type metadata for JSONObject);
    atomic_store(result, qword_1EE439D38);
  }
  return result;
}

uint64_t sub_19CE080FC()
{
  return sub_19CD09560(&qword_1EE43F2D8, &qword_1EE43F2E0, (uint64_t (*)(void))sub_19CE08120, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE08120()
{
  unint64_t result;

  result = qword_1EE43F2E8;
  if (!qword_1EE43F2E8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageMetrics.Instruction, &type metadata for PageMetrics.Instruction);
    atomic_store(result, (unint64_t *)&qword_1EE43F2E8);
  }
  return result;
}

uint64_t sub_19CE08164()
{
  return sub_19CD09560(&qword_1EE43F300, &qword_1EE43F2E0, (uint64_t (*)(void))sub_19CE08188, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE08188()
{
  unint64_t result;

  result = qword_1EE43F308;
  if (!qword_1EE43F308)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageMetrics.Instruction, &type metadata for PageMetrics.Instruction);
    atomic_store(result, (unint64_t *)&qword_1EE43F308);
  }
  return result;
}

unint64_t sub_19CE081CC()
{
  unint64_t result;

  result = qword_1EE4371D8;
  if (!qword_1EE4371D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONObject, &type metadata for JSONObject);
    atomic_store(result, (unint64_t *)&qword_1EE4371D8);
  }
  return result;
}

uint64_t sub_19CE08210()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

_QWORD *assignWithCopy for PageMetrics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PageMetrics(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithCopy for PageMetrics.Instruction(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PageMetrics.Instruction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for PageMetrics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CE08480 + 4 * byte_19D0564B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CE084B4 + 4 * byte_19D0564B0[v4]))();
}

uint64_t sub_19CE084B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE084BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE084C4);
  return result;
}

uint64_t sub_19CE084D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE084D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CE084DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE084E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageMetrics.CodingKeys()
{
  return &type metadata for PageMetrics.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PageMetrics.Instruction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE0854C + 4 * byte_19D0564BF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE08580 + 4 * byte_19D0564BA[v4]))();
}

uint64_t sub_19CE08580(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE08588(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE08590);
  return result;
}

uint64_t sub_19CE0859C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE085A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE085A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE085B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageMetrics.Instruction.CodingKeys()
{
  return &type metadata for PageMetrics.Instruction.CodingKeys;
}

unint64_t sub_19CE085D0()
{
  unint64_t result;

  result = qword_1EE43F310;
  if (!qword_1EE43F310)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0567EC, &type metadata for PageMetrics.Instruction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F310);
  }
  return result;
}

unint64_t sub_19CE08618()
{
  unint64_t result;

  result = qword_1EE43F318;
  if (!qword_1EE43F318)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0568DC, &type metadata for PageMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F318);
  }
  return result;
}

unint64_t sub_19CE08660()
{
  unint64_t result;

  result = qword_1EE43F320;
  if (!qword_1EE43F320)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056814, &type metadata for PageMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F320);
  }
  return result;
}

unint64_t sub_19CE086A8()
{
  unint64_t result;

  result = qword_1EE43F328;
  if (!qword_1EE43F328)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05683C, &type metadata for PageMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F328);
  }
  return result;
}

unint64_t sub_19CE086F0()
{
  unint64_t result;

  result = qword_1EE43F330;
  if (!qword_1EE43F330)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056724, &type metadata for PageMetrics.Instruction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F330);
  }
  return result;
}

unint64_t sub_19CE08738()
{
  unint64_t result;

  result = qword_1EE43F338;
  if (!qword_1EE43F338)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05674C, &type metadata for PageMetrics.Instruction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F338);
  }
  return result;
}

uint64_t sub_19CE0877C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_19CE08B78();
  result = sub_19CFDFBB4();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_19CE88C10(&v6, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_19CE08800(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[3];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_19CCE3A90();
  result = sub_19CFDFBB4();
  v7 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v5;
      v8[2] = *(_OWORD *)(v4 + 32);
      v9 = *(_QWORD *)(v4 + 48);
      sub_19CD2AF14((uint64_t)v8);
      sub_19CE885F4((uint64_t)&v6, (uint64_t *)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 56;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_19CE088B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_19CFDFBB4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_19CE8891C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_19CE08948()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_19CE08990(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_19CE08A58();
  result = sub_19CFDFBB4();
  v8 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 48);
      v9[2] = *(_OWORD *)(v4 + 32);
      v9[3] = v5;
      v10 = *(_QWORD *)(v4 + 64);
      v6 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v6;
      sub_19CE08A9C((uint64_t)v9);
      sub_19CE88FFC((uint64_t)&v7, (uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 72;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_19CE08A58()
{
  unint64_t result;

  result = qword_1EE437328;
  if (!qword_1EE437328)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066418, &type metadata for MetricsIdentifierScheme);
    atomic_store(result, (unint64_t *)&qword_1EE437328);
  }
  return result;
}

uint64_t sub_19CE08A9C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CE08AF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];
  _BYTE v6[40];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_19CFDFBB4();
  v7 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      sub_19CD23A14(v4, (uint64_t)v5);
      sub_19CE897B0((uint64_t)v6, (uint64_t)v5);
      sub_19CD20334((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_19CE08B78()
{
  unint64_t result;

  result = qword_1EE43F340;
  if (!qword_1EE43F340)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D052B8C, &type metadata for JSONBridgingConfiguration.ModelDescriptor);
    atomic_store(result, (unint64_t *)&qword_1EE43F340);
  }
  return result;
}

uint64_t JSRoute.service.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSRoute.service.modify())()
{
  return nullsub_1;
}

uint64_t JSRoute.function.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JSRoute.function.modify())()
{
  return nullsub_1;
}

uint64_t JSRoute.description.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return v2;
}

__n128 _JSONObjectDecoder.init(wrapping:with:at:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;

  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v5;
  *(_QWORD *)(a4 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t _JSONObjectDecoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _JSONObjectDecoder.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _JSONObjectDecoder.unkeyedContainer()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[40];

  v3 = v2;
  sub_19CD3E448(v1, (uint64_t)v10);
  v6 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  a1[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a1[4] = sub_19CE09118();
  v7 = swift_allocObject();
  v8 = v7 + 16;
  *a1 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_19CE08D90((uint64_t)v10, v6, v5, v8);
  if (v3)
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a1);
  return result;
}

uint64_t sub_19CE08D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  __int128 v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _OWORD v26[2];
  _UNKNOWN **v27;

  if ((sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, a2) & 1) == 0)
  {
    sub_19CCF8C5C(a1, (uint64_t)&v23, &qword_1ECEB1328);
    v8 = *((_QWORD *)&v24 + 1);
    if (*((_QWORD *)&v24 + 1))
    {
      v9 = v25;
      __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 120))(v26, v8, v9);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      v10 = *((_QWORD *)&v26[1] + 1);
      if (*((_QWORD *)&v26[1] + 1))
      {
        result = sub_19CD3E3F8(a1);
        v12 = *(id *)&v26[0];
        v13 = *(_OWORD *)((char *)v26 + 8);
        v14 = v27;
LABEL_10:
        *(_QWORD *)a4 = v12;
        *(_OWORD *)(a4 + 8) = v13;
        *(_QWORD *)(a4 + 24) = v10;
        goto LABEL_11;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v23, &qword_1ECEB1328);
      memset(v26, 0, sizeof(v26));
      v27 = 0;
    }
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC08);
    sub_19CD3E3F8(a1);
    result = sub_19CCECFE4((uint64_t)v26, &qword_1EE43D068);
    *((_QWORD *)&v13 + 1) = 0;
    *(_QWORD *)&v13 = sub_19CF4A14C;
    v14 = &off_1E3DDA9F8;
    goto LABEL_10;
  }
  sub_19CCF8C5C(a1, (uint64_t)&v23, &qword_1ECEB1328);
  v15 = *((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v16 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v16 + 120))(v26, v15, v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
    if (*((_QWORD *)&v26[1] + 1))
    {
      result = sub_19CD3E3F8(a1);
      v17 = v26[1];
      *(_OWORD *)a4 = v26[0];
      *(_OWORD *)(a4 + 16) = v17;
      v14 = v27;
LABEL_11:
      *(_QWORD *)(a4 + 32) = v14;
      *(_QWORD *)(a4 + 40) = a2;
      *(_QWORD *)(a4 + 48) = a3;
      *(_QWORD *)(a4 + 56) = 0;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v23, &qword_1ECEB1328);
    memset(v26, 0, sizeof(v26));
    v27 = 0;
  }
  swift_bridgeObjectRelease();
  sub_19CCECFE4((uint64_t)v26, &qword_1EE43D068);
  v18 = sub_19CFE01B4();
  swift_allocError();
  v20 = v19;
  *(_QWORD *)&v26[0] = 0;
  *((_QWORD *)&v26[0] + 1) = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CCF8C5C(a1, (uint64_t)v26, &qword_1ECEB1328);
  v21 = *((_QWORD *)&v26[1] + 1);
  if (!*((_QWORD *)&v26[1] + 1))
  {
    sub_19CCECFE4((uint64_t)v26, &qword_1ECEB1328);
    v23 = 0u;
    v24 = 0u;
    goto LABEL_17;
  }
  v22 = v27;
  __swift_project_boxed_opaque_existential_1(v26, *((uint64_t *)&v26[1] + 1));
  ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v22[12])(&v23, v21, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_17:
    *((_QWORD *)&v26[1] + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v26[0] = 7104878;
    *((_QWORD *)&v26[0] + 1) = 0xE300000000000000;
    sub_19CCECFE4((uint64_t)&v23, &qword_1ECEB3370);
    goto LABEL_18;
  }
  sub_19CD433C0(&v23, v26);
LABEL_18:
  sub_19CFE02E0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  sub_19CFE019C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC458], v18);
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

unint64_t sub_19CE09118()
{
  unint64_t result;

  result = qword_1EE43AEF0;
  if (!qword_1EE43AEF0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D056BD8, &type metadata for _JSONObjectUnkeyedDecodingContainer);
    atomic_store(result, (unint64_t *)&qword_1EE43AEF0);
  }
  return result;
}

uint64_t sub_19CE0915C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _JSONObjectDecoder.singleValueContainer()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[3] = (uint64_t)&type metadata for _JSONObjectSingleValueDecodingContainer;
  a1[4] = sub_19CCF58D4();
  v3 = swift_allocObject();
  *a1 = v3;
  sub_19CD3E448(v1, v3 + 16);
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v3 + 64) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE09210()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE09218()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE09220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[40];

  v3 = v2;
  sub_19CD3E448(v1, (uint64_t)v10);
  v6 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  a1[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a1[4] = sub_19CE09118();
  v7 = swift_allocObject();
  v8 = v7 + 16;
  *a1 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_19CE08D90((uint64_t)v10, v6, v5, v8);
  if (v3)
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a1);
  return result;
}

ValueMetadata *type metadata accessor for _JSONObjectDecoder()
{
  return &type metadata for _JSONObjectDecoder;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwca_0(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _JSONObjectSingleValueDecodingContainer()
{
  return &type metadata for _JSONObjectSingleValueDecodingContainer;
}

uint64_t destroy for _JSONObjectUnkeyedDecodingContainer(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for _JSONObjectUnkeyedDecodingContainer(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for _JSONObjectUnkeyedDecodingContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _JSONObjectUnkeyedDecodingContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _JSONObjectUnkeyedDecodingContainer()
{
  return &type metadata for _JSONObjectUnkeyedDecodingContainer;
}

uint64_t _s9JetEngine18_JSONObjectDecoderVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_19CE0964C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

double sub_19CE09698()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  BOOL v6;
  BOOL v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _OWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = v0;
  sub_19CCF8C5C(v0, (uint64_t)v20, &qword_1ECEB1328);
  v3 = v21;
  if (!v21)
  {
    sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v4 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if (!v5)
  {
LABEL_16:
    sub_19CCF8C5C(v2, (uint64_t)v20, &qword_1ECEB1328);
    v11 = v21;
    if (v21)
    {
      v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v19, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
      memset(v19, 0, sizeof(v19));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(MEMORY[0x1E0DEB070], (uint64_t)v19, v13);
    sub_19CCECFE4((uint64_t)v19, &qword_1ECEB3370);
    swift_willThrow();
    return v1;
  }
  if (*MEMORY[0x1E0C9AE50])
    v6 = v5 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v6 = 0;
  if (v6 || (*MEMORY[0x1E0C9AE40] ? (v7 = v5 == (void *)*MEMORY[0x1E0C9AE40]) : (v7 = 0), v7))
  {

    goto LABEL_16;
  }
  v20[0] = v5;
  v8 = v5;
  swift_getAtKeyPath();

  v1 = *(double *)v19;
  v9 = (void *)sub_19CFDFB6C();
  sub_19CD16BB8();
  v10 = v8;
  LOBYTE(v8) = sub_19CFDFEF0();

  if ((v8 & 1) == 0)
  {
    v15 = sub_19CFE01B4();
    swift_allocError();
    v17 = v16;
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "Parsed number ");
    HIBYTE(v20[1]) = -18;
    v18 = objc_msgSend(v10, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC458], v15);
    swift_willThrow();
  }

  return v1;
}

float sub_19CE099E4()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  BOOL v6;
  BOOL v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _OWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = v0;
  sub_19CCF8C5C(v0, (uint64_t)v20, &qword_1ECEB1328);
  v3 = v21;
  if (!v21)
  {
    sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v4 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if (!v5)
  {
LABEL_16:
    sub_19CCF8C5C(v2, (uint64_t)v20, &qword_1ECEB1328);
    v11 = v21;
    if (v21)
    {
      v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v19, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
      memset(v19, 0, sizeof(v19));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(MEMORY[0x1E0DEB188], (uint64_t)v19, v13);
    sub_19CCECFE4((uint64_t)v19, &qword_1ECEB3370);
    swift_willThrow();
    return v1;
  }
  if (*MEMORY[0x1E0C9AE50])
    v6 = v5 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v6 = 0;
  if (v6 || (*MEMORY[0x1E0C9AE40] ? (v7 = v5 == (void *)*MEMORY[0x1E0C9AE40]) : (v7 = 0), v7))
  {

    goto LABEL_16;
  }
  v20[0] = v5;
  v8 = v5;
  swift_getAtKeyPath();

  v1 = *(float *)v19;
  v9 = (void *)sub_19CFDFB9C();
  sub_19CD16BB8();
  v10 = v8;
  LOBYTE(v8) = sub_19CFDFEF0();

  if ((v8 & 1) == 0)
  {
    v15 = sub_19CFE01B4();
    swift_allocError();
    v17 = v16;
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "Parsed number ");
    HIBYTE(v20[1]) = -18;
    v18 = objc_msgSend(v10, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC458], v15);
    swift_willThrow();
  }

  return v1;
}

uint64_t sub_19CE09D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  BOOL v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _OWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v8 = v5;
  sub_19CCF8C5C(v5, (uint64_t)v25, &qword_1ECEB1328);
  v9 = v26;
  if (!v26)
  {
    sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19CCF8C5C(v8, (uint64_t)v25, &qword_1ECEB1328);
    v17 = v26;
    if (v26)
    {
      v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
      memset(v24, 0, sizeof(v24));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(a3, (uint64_t)v24, v19);
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB3370);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E0C9AE50])
    v12 = v11 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v12 = 0;
  if (v12 || (*MEMORY[0x1E0C9AE40] ? (v13 = v11 == (void *)*MEMORY[0x1E0C9AE40]) : (v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  v14 = v11;
  swift_getAtKeyPath();

  v8 = *(_QWORD *)&v24[0];
  v15 = (void *)a4(*(_QWORD *)&v24[0]);
  sub_19CD16BB8();
  v16 = v14;
  LOBYTE(v14) = sub_19CFDFEF0();

  if ((v14 & 1) == 0)
  {
    v8 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    v23 = objc_msgSend(v16, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19CE0A080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  BOOL v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _OWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v8 = v5;
  sub_19CCF8C5C(v5, (uint64_t)v25, &qword_1ECEB1328);
  v9 = v26;
  if (!v26)
  {
    sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19CCF8C5C(v8, (uint64_t)v25, &qword_1ECEB1328);
    v17 = v26;
    if (v26)
    {
      v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
      memset(v24, 0, sizeof(v24));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(a3, (uint64_t)v24, v19);
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB3370);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E0C9AE50])
    v12 = v11 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v12 = 0;
  if (v12 || (*MEMORY[0x1E0C9AE40] ? (v13 = v11 == (void *)*MEMORY[0x1E0C9AE40]) : (v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  v14 = v11;
  swift_getAtKeyPath();

  v8 = LOBYTE(v24[0]);
  v15 = (void *)a4(LOBYTE(v24[0]));
  sub_19CD16BB8();
  v16 = v14;
  LOBYTE(v14) = sub_19CFDFEF0();

  if ((v14 & 1) == 0)
  {
    v8 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    v23 = objc_msgSend(v16, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19CE0A3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  BOOL v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _OWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v8 = v5;
  sub_19CCF8C5C(v5, (uint64_t)v25, &qword_1ECEB1328);
  v9 = v26;
  if (!v26)
  {
    sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19CCF8C5C(v8, (uint64_t)v25, &qword_1ECEB1328);
    v17 = v26;
    if (v26)
    {
      v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
      memset(v24, 0, sizeof(v24));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(a3, (uint64_t)v24, v19);
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB3370);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E0C9AE50])
    v12 = v11 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v12 = 0;
  if (v12 || (*MEMORY[0x1E0C9AE40] ? (v13 = v11 == (void *)*MEMORY[0x1E0C9AE40]) : (v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  v14 = v11;
  swift_getAtKeyPath();

  v8 = LOWORD(v24[0]);
  v15 = (void *)a4(LOWORD(v24[0]));
  sub_19CD16BB8();
  v16 = v14;
  LOBYTE(v14) = sub_19CFDFEF0();

  if ((v14 & 1) == 0)
  {
    v8 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    v23 = objc_msgSend(v16, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v8);
    swift_willThrow();
  }

  return v8;
}

uint64_t sub_19CE0A720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  BOOL v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _OWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v8 = v5;
  sub_19CCF8C5C(v5, (uint64_t)v25, &qword_1ECEB1328);
  v9 = v26;
  if (!v26)
  {
    sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
    goto LABEL_16;
  }
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  if (!v11)
  {
LABEL_16:
    sub_19CCF8C5C(v8, (uint64_t)v25, &qword_1ECEB1328);
    v17 = v26;
    if (v26)
    {
      v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 96))(v24, v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
      memset(v24, 0, sizeof(v24));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(a3, (uint64_t)v24, v19);
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB3370);
    swift_willThrow();
    return v8;
  }
  if (*MEMORY[0x1E0C9AE50])
    v12 = v11 == (void *)*MEMORY[0x1E0C9AE50];
  else
    v12 = 0;
  if (v12 || (*MEMORY[0x1E0C9AE40] ? (v13 = v11 == (void *)*MEMORY[0x1E0C9AE40]) : (v13 = 0), v13))
  {

    goto LABEL_16;
  }
  v25[0] = v11;
  v14 = v11;
  swift_getAtKeyPath();

  v8 = LODWORD(v24[0]);
  v15 = (void *)a4(LODWORD(v24[0]));
  sub_19CD16BB8();
  v16 = v14;
  LOBYTE(v14) = sub_19CFDFEF0();

  if ((v14 & 1) == 0)
  {
    v8 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Parsed number ");
    HIBYTE(v25[1]) = -18;
    v23 = objc_msgSend(v16, sel_description);
    sub_19CFDF578();

    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v8);
    swift_willThrow();
  }

  return v8;
}

double sub_19CE0AA70()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  _BYTE v4[40];

  sub_19CD3E448(v0, (uint64_t)v4);
  swift_getKeyPath();
  v2 = sub_19CE09698();
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v4);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v4);
  }
  return v2;
}

float sub_19CE0AB08()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  _BYTE v4[40];

  sub_19CD3E448(v0, (uint64_t)v4);
  swift_getKeyPath();
  v2 = sub_19CE099E4();
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v4);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v4);
  }
  return v2;
}

uint64_t sub_19CE0ABA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE09D30(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEB418], MEMORY[0x1E0CB1C10], 7630409);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0AC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A080(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEDA70], MEMORY[0x1E0CB25F8], 947154505);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0ACF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A3D0(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEDB58], MEMORY[0x1E0CB2660], 0x3631746E49);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0ADA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A720(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEDBC8], MEMORY[0x1E0CB2670], 0x3233746E49);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0AE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE09D30(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEDC60], MEMORY[0x1E0CB2688], 0x3436746E49);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0AF08()
{
  return sub_19CFE06F4();
}

uint64_t sub_19CE0AF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE09D30(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEBB98], MEMORY[0x1E0CB23E0], 1953384789);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0AFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A080(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEDE70], MEMORY[0x1E0CB26B8], 0x38746E4955);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0B078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A3D0(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEE068], MEMORY[0x1E0CB26D8], 0x3631746E4955);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0B128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE0A720(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB26E8], 0x3233746E4955);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0B1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE v5[40];

  sub_19CD3E448(v0, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  v3 = sub_19CE09D30(KeyPath, *(_QWORD *)(v0 + 48), MEMORY[0x1E0DEE190], MEMORY[0x1E0CB2710], 0x3436746E4955);
  if (v1)
  {
    sub_19CD3E3F8((uint64_t)v5);
    swift_release();
  }
  else
  {
    swift_release();
    sub_19CD3E3F8((uint64_t)v5);
  }
  return v3;
}

uint64_t sub_19CE0B288()
{
  return sub_19CFE0700();
}

uint64_t sub_19CE0B29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  JSONObject.dictionary.getter((uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    v0 = v7;
    v9 = v7;
    v1 = *((_QWORD *)&v6 + 1);
    __swift_project_boxed_opaque_existential_1(v8, *((uint64_t *)&v6 + 1));
    *(_QWORD *)&v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 56))(v1, v0);
    MEMORY[0x1E0C80A78](v5, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CE0EA88();
    v3 = sub_19CFDF788();
    swift_bridgeObjectRelease();
    sub_19CDC6248((uint64_t)v8);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v5, &qword_1EE43C1C8);
    return sub_19CFDF8B4();
  }
  return v3;
}

uint64_t sub_19CE0B3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];

  v0 = sub_19CFE0A30();
  JSONObject.subscript.getter(v0, v1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_19CCF8C5C((uint64_t)v9, (uint64_t)v6, &qword_1ECEB1328);
  v2 = v7;
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    LOBYTE(v2) = v4 ^ 1;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v6, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)v9);
  return v2 & 1;
}

uint64_t sub_19CE0B480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];

  v0 = sub_19CFE0A30();
  JSONObject.subscript.getter(v0, v1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_19CCF8C5C((uint64_t)v9, (uint64_t)v6, &qword_1ECEB1328);
  v2 = v7;
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v6, &qword_1ECEB1328);
    v4 = 1;
  }
  sub_19CD3E3F8((uint64_t)v9);
  return v4 & 1;
}

uint64_t sub_19CE0B54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  char v5;

  sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0B594, 0, a2);
  if (!v2)
    v3 = v5;
  return v3 & 1;
}

uint64_t sub_19CE0B594@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  swift_getKeyPath();
  v3 = sub_19CCC81E8();
  result = swift_release();
  if (!v1)
    *a1 = v3 & 1;
  return result;
}

uint64_t sub_19CE0B60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0B650, 0, a2);
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_19CE0B650@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _OWORD v13[2];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v4 = v15;
  if (v15)
  {
    v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v8 = v7;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if (v8)
    {
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v10 = v15;
  if (v15)
  {
    v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 96))(v13, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
    memset(v13, 0, sizeof(v13));
  }
  sub_19CFE01B4();
  swift_allocError();
  sub_19CD01C90(MEMORY[0x1E0DEA968], (uint64_t)v13, v12);
  sub_19CCECFE4((uint64_t)v13, &qword_1ECEB3370);
  return swift_willThrow();
}

double sub_19CE0B7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  double v4;

  sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0B804, 0, a2);
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_19CE0B804@<X0>(double *a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t result;

  swift_getKeyPath();
  v3 = sub_19CE09698();
  result = swift_release();
  if (!v1)
    *a1 = v3;
  return result;
}

float sub_19CE0B880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float result;
  float v4;

  sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0B8C4, 0, a2);
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_19CE0B8C4@<X0>(float *a1@<X8>)
{
  uint64_t v1;
  float v3;
  uint64_t result;

  swift_getKeyPath();
  v3 = sub_19CE099E4();
  result = swift_release();
  if (!v1)
    *a1 = v3;
  return result;
}

uint64_t sub_19CE0B940@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE09D30(KeyPath, a1, MEMORY[0x1E0DEB418], MEMORY[0x1E0CB1C10], 7630409);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0B9D0@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  char v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A080(KeyPath, a1, MEMORY[0x1E0DEDA70], MEMORY[0x1E0CB25F8], 947154505);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BA60@<X0>(uint64_t a1@<X1>, _WORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  __int16 v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A3D0(KeyPath, a1, MEMORY[0x1E0DEDB58], MEMORY[0x1E0CB2660], 0x3631746E49);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BAF4@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  int v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A720(KeyPath, a1, MEMORY[0x1E0DEDBC8], MEMORY[0x1E0CB2670], 0x3233746E49);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BB88@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE09D30(KeyPath, a1, MEMORY[0x1E0DEDC60], MEMORY[0x1E0CB2688], 0x3436746E49);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BC1C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE09D30(KeyPath, a1, MEMORY[0x1E0DEBB98], MEMORY[0x1E0CB23E0], 1953384789);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BCAC(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, _QWORD *))
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 v5;

  result = sub_19CCEF2F0(a1, a3, 0, a2);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_19CE0BCE8@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  char v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A080(KeyPath, a1, MEMORY[0x1E0DEDE70], MEMORY[0x1E0CB26B8], 0x38746E4955);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BD7C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, _QWORD *))
{
  uint64_t v3;
  uint64_t result;
  unsigned __int16 v5;

  result = sub_19CCEF2F0(a1, a3, 0, a2);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_19CE0BDB8@<X0>(uint64_t a1@<X1>, _WORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  __int16 v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A3D0(KeyPath, a1, MEMORY[0x1E0DEE068], MEMORY[0x1E0CB26D8], 0x3631746E4955);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BE4C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, _QWORD *))
{
  uint64_t v3;
  uint64_t result;
  unsigned int v5;

  result = sub_19CCEF2F0(a1, a3, 0, a2);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_19CE0BE88@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  int v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE0A720(KeyPath, a1, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB26E8], 0x3233746E4955);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BF1C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, _QWORD *))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = sub_19CCEF2F0(a1, a3, 0, a2);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_19CE0BF58@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v6 = sub_19CE09D30(KeyPath, a1, MEMORY[0x1E0DEE190], MEMORY[0x1E0CB2710], 0x3436746E4955);
  result = swift_release();
  if (!v2)
    *a2 = v6;
  return result;
}

uint64_t sub_19CE0BFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  _QWORD v9[8];

  v7 = *(_QWORD *)(a3 + 24);
  v9[2] = *(_QWORD *)(a3 + 16);
  v9[3] = a4;
  v9[4] = v7;
  v9[5] = a5;
  v9[7] = a1;
  sub_19CFE04D8();
  return sub_19CCEF2F0(a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0E700, (uint64_t)v9, a3);
}

uint64_t sub_19CE0C068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v31;
  _BYTE v32[40];
  char v33[56];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a8;
  sub_19CCF8C5C(a1, (uint64_t)v34, &qword_1ECEB1328);
  v14 = v35;
  if (v35)
  {
    v15 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 104))(v14, v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v34, &qword_1ECEB1328);
    v16 = 1;
  }
  v18 = type metadata accessor for _JSONObjectKeyedDecodingContainer(0, a5, a7, v17);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 16))(v34, a3, v18);
  if ((v16 & 1) != 0 && (v20 = sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, v37), v20 != 2))
  {
    v26 = v20;
    (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v34, v18);
    if ((v26 & 1) != 0)
    {
      v27 = sub_19CFE01B4();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v29 = a4;
      swift_bridgeObjectRetain();
      sub_19CFE019C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC460], v27);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v34, v18);
  }
  sub_19CD3E448(a1, (uint64_t)v32);
  v21 = *(_QWORD *)(a3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v38;
  result = sub_19CCE7984((uint64_t)v32, v21, a2, (uint64_t)v33);
  if (!v31)
  {
    v25 = type metadata accessor for _JSONObjectKeyedDecodingContainer(0, a6, v22, v24);
    MEMORY[0x1A1ADBD7C](&unk_19D056D48, v25);
    return sub_19CFE04E4();
  }
  return result;
}

uint64_t sub_19CE0C2DC(uint64_t a1, uint64_t a2)
{
  _OWORD v5[2];
  uint64_t v6;

  v5[1] = *(_OWORD *)(a2 + 16);
  v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F348);
  return sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0E6E4, (uint64_t)v5, a2);
}

uint64_t sub_19CE0C350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_2Tm;
  _BYTE v32[40];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_19CCF8C5C(a1, (uint64_t)v33, &qword_1ECEB1328);
  v13 = v34;
  if (v34)
  {
    v14 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v33, &qword_1ECEB1328);
    v15 = 1;
  }
  v17 = type metadata accessor for _JSONObjectKeyedDecodingContainer(0, a5, a6, v16);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 16))(v33, a3, v17);
  if ((v15 & 1) != 0 && (v19 = sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, v36), v19 != 2))
  {
    v26 = v19;
    (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v33, v17);
    if ((v26 & 1) != 0)
    {
      v27 = sub_19CFE01B4();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F350);
      v29[3] = a5;
      v29[4] = a6;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v29);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_2Tm, a4, a5);
      swift_bridgeObjectRetain();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC448], v27);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v33, v17);
  }
  sub_19CD3E448(a1, (uint64_t)v32);
  v20 = *(_QWORD *)(a3 + 40);
  a7[3] = (uint64_t)&type metadata for _JSONObjectUnkeyedDecodingContainer;
  a7[4] = sub_19CE09118();
  v21 = swift_allocObject();
  v22 = v21 + 16;
  *a7 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = v22;
  v24 = v37;
  result = sub_19CE08D90((uint64_t)v32, v20, a2, v23);
  if (v24)
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)a7);
  return result;
}

uint64_t sub_19CE0C5C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = v2;
  JSONObject.subscript.getter(0x7265707573, 0xE500000000000000, (uint64_t)v24);
  v6 = sub_19CE35380(0x7265707573, 0xE500000000000000, 1, *(_QWORD **)(v2 + 48));
  sub_19CCF8C5C((uint64_t)v24, (uint64_t)v20, &qword_1ECEB1328);
  v7 = v21;
  if (v21)
  {
    v8 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    v10 = *(_QWORD *)(a1 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16))(v20, v3, a1);
    if ((v9 & 1) == 0)
      goto LABEL_6;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
    v10 = *(_QWORD *)(a1 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16))(v20, v2, a1);
  }
  v11 = sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, v23);
  if (v11 == 2)
  {
LABEL_6:
    (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v20, a1);
LABEL_8:
    a2[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
    a2[4] = sub_19CD21828();
    v13 = swift_allocObject();
    *a2 = v13;
    v14 = v24[1];
    *(_OWORD *)(v13 + 16) = v24[0];
    *(_OWORD *)(v13 + 32) = v14;
    v15 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v13 + 48) = v25;
    *(_QWORD *)(v13 + 56) = v15;
    *(_QWORD *)(v13 + 64) = v6;
    return swift_bridgeObjectRetain();
  }
  v12 = v11;
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v20, a1);
  if ((v12 & 1) == 0)
    goto LABEL_8;
  v17 = sub_19CFE01B4();
  swift_allocError();
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
  *v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BF28);
  sub_19CFE019C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC460], v17);
  swift_willThrow();
  return sub_19CD3E3F8((uint64_t)v24);
}

uint64_t sub_19CE0C834(uint64_t a1, uint64_t a2)
{
  _OWORD v5[2];

  v5[1] = *(_OWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BF28);
  return sub_19CCEF2F0(a1, (void (*)(_BYTE *, _QWORD *))sub_19CE0E6C4, (uint64_t)v5, a2);
}

uint64_t sub_19CE0C8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_19CCF8C5C(a1, (uint64_t)v25, &qword_1ECEB1328);
  v12 = v26;
  if (v26)
  {
    v13 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v25, &qword_1ECEB1328);
    v14 = 1;
  }
  v16 = type metadata accessor for _JSONObjectKeyedDecodingContainer(0, a4, a5, v15);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 16))(v25, a3, v16);
  if ((v14 & 1) != 0 && (v18 = sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, v28), v18 != 2))
  {
    v21 = v18;
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v25, v16);
    if ((v21 & 1) != 0)
    {
      v22 = sub_19CFE01B4();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BF28);
      swift_bridgeObjectRetain();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC460], v22);
      return swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v25, v16);
  }
  a6[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
  a6[4] = sub_19CD21828();
  v19 = swift_allocObject();
  *a6 = v19;
  sub_19CD3E448(a1, v19 + 16);
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(v19 + 64) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE0CAEC()
{
  return sub_19CE0B480() & 1;
}

uint64_t sub_19CE0CB04(uint64_t a1, uint64_t a2)
{
  return sub_19CE0B54C(a1, a2) & 1;
}

uint64_t sub_19CE0CB1C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0B60C(a1, a2);
}

double sub_19CE0CB30(uint64_t a1, uint64_t a2)
{
  return sub_19CE0B7C0(a1, a2);
}

float sub_19CE0CB44(uint64_t a1, uint64_t a2)
{
  return sub_19CE0B880(a1, a2);
}

uint64_t sub_19CE0CB58(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BF1C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0B940);
}

uint64_t sub_19CE0CB7C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BCAC(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0B9D0);
}

uint64_t sub_19CE0CBA0(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BD7C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BA60);
}

uint64_t sub_19CE0CBC4(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BE4C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BAF4);
}

uint64_t sub_19CE0CBE8(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BF1C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BB88);
}

uint64_t sub_19CE0CC0C()
{
  return sub_19CFE07CC();
}

uint64_t sub_19CE0CC20(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BF1C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BC1C);
}

uint64_t sub_19CE0CC44(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BCAC(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BCE8);
}

uint64_t sub_19CE0CC68(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BD7C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BDB8);
}

uint64_t sub_19CE0CC8C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BE4C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BE88);
}

uint64_t sub_19CE0CCB0(uint64_t a1, uint64_t a2)
{
  return sub_19CE0BF1C(a1, a2, (void (*)(_BYTE *, _QWORD *))sub_19CE0BF58);
}

uint64_t sub_19CE0CCD4()
{
  return sub_19CFE07D8();
}

uint64_t sub_19CE0CCE8()
{
  return sub_19CFE0778();
}

uint64_t sub_19CE0CCFC()
{
  return sub_19CFE076C();
}

uint64_t sub_19CE0CD10()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0784();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0CD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CEC0(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_19CE0CD4C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0790();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0CD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CE38(a1, a2, a3, MEMORY[0x1E0DED808]);
}

uint64_t sub_19CE0CD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CE7C(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_19CE0CDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CEC0(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_19CE0CDC0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE07B4();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CF2C(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_19CE0CDFC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE079C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0CE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CE38(a1, a2, a3, MEMORY[0x1E0DED828]);
}

uint64_t sub_19CE0CE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_19CE0CE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CE7C(a1, a2, a3, MEMORY[0x1E0DED838]);
}

uint64_t sub_19CE0CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_19CE0CEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CEC0(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_19CE0CEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_19CE0CEF0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE07C0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0CF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE0CF2C(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_19CE0CF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_19CE0CF50()
{
  return sub_19CFE07A8();
}

uint64_t sub_19CE0CF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CE0BFEC(a1, a2, a5, a3, a4);
}

uint64_t sub_19CE0CF9C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0C2DC(a1, a2);
}

uint64_t sub_19CE0CFB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19CE0C5C8(a1, a2);
}

uint64_t sub_19CE0CFC4(uint64_t a1, uint64_t a2)
{
  return sub_19CE0C834(a1, a2);
}

_QWORD *sub_19CE0CFD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_19CE35380(v1, 0, 0, *(_QWORD **)(v0 + 48));
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v0, v3);
  if (v1 >= (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4))
  {
    v7 = sub_19CFE01B4();
    swift_allocError();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
    *v9 = MEMORY[0x1E0DEE9B8] + 8;
    sub_19CFE019C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *MEMORY[0x1E0DEC460], v7);
    swift_willThrow();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v0, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v1, v5, v6);
  }
  return v2;
}

uint64_t sub_19CE0D128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v0, v3);
  if (v2 >= (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4))
  {
    sub_19CE35380(v2, 0, 0, *(_QWORD **)(v0 + 48));
    v12 = sub_19CFE01B4();
    swift_allocError();
    v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
    *v14 = MEMORY[0x1E0DEE9B8] + 8;
    sub_19CFE019C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DEC460], v12);
    swift_willThrow();
    return v11 & 1;
  }
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v0, v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 24))(v21, v2, v5, v6);
  sub_19CCF8C5C((uint64_t)v21, (uint64_t)v18, &qword_1ECEB1328);
  v7 = v19;
  if (v19)
  {
    v8 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    result = sub_19CD3E3F8((uint64_t)v21);
    if ((v9 & 1) == 0)
    {
      v11 = 0;
      return v11 & 1;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v18, &qword_1ECEB1328);
    result = sub_19CD3E3F8((uint64_t)v21);
  }
  v15 = *(_QWORD *)(v1 + 56);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (!v16)
  {
    *(_QWORD *)(v1 + 56) = v17;
    v11 = 1;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0D308@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  char *v33;
  int v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, char *);
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  unsigned int *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  unint64_t v87;
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[40];
  uint64_t v94;

  v83 = a3;
  v84 = a1;
  v81 = a4;
  v82 = (char *)*((_QWORD *)a2 - 1);
  MEMORY[0x1E0C80A78](a1, a2);
  v80 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v79, v7);
  v78 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDFF5C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v69 - v20;
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v69 - v24;
  v26 = v94;
  result = (uint64_t)sub_19CE0CFD8();
  if (v26)
    return result;
  v73 = v14;
  v76 = v25;
  v70 = v12;
  v71 = v21;
  v72 = v17;
  v74 = v13;
  v94 = v4;
  v28 = v84;
  v77 = result;
  v75 = 0;
  sub_19CCF8C5C((uint64_t)v93, (uint64_t)v88, &qword_1ECEB1328);
  v29 = v89;
  if (v89)
  {
    v30 = v90;
    __swift_project_boxed_opaque_existential_1(v88, v89);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 104))(v29, v30);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v88);
    if ((v31 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v88, &qword_1ECEB1328);
  }
  if ((sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, *(_QWORD *)(v94 + 40)) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v41 = sub_19CFE01B4();
    swift_allocError();
    v43 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
    *v43 = v28;
    swift_bridgeObjectRetain();
    sub_19CFE019C();
    v44 = (unsigned int *)MEMORY[0x1E0DEC460];
    goto LABEL_11;
  }
LABEL_7:
  sub_19CD3E448((uint64_t)v93, (uint64_t)v88);
  v32 = v76;
  v33 = a2;
  v34 = swift_dynamicCast();
  v35 = v82;
  v36 = (void (*)(char *, uint64_t, uint64_t, char *))*((_QWORD *)v82 + 7);
  if (v34)
  {
    v36(v32, 0, 1, a2);
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v93);
    result = (*((uint64_t (**)(uint64_t, char *, char *))v35 + 4))(v81, v32, a2);
    v37 = v94;
    v38 = *(_QWORD *)(v94 + 56);
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (!v39)
    {
LABEL_9:
      *(_QWORD *)(v37 + 56) = v40;
      return result;
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  v36(v32, 1, 1, a2);
  v45 = v32;
  v46 = v74;
  v83 = *(void (**)(char *, uint64_t))(v73 + 8);
  v83(v45, v74);
  if (sub_19CFDEDE0() == v28)
  {
    sub_19CCF8C5C((uint64_t)v93, (uint64_t)v88, &qword_1ECEB1328);
    v52 = v89;
    if (v89)
    {
      v53 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
      v55 = v54;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v88);
      if (v55)
      {
        v33 = v70;
        sub_19CFDEDA4();
        swift_bridgeObjectRelease();
        v35 = v71;
        if ((swift_dynamicCast() & 1) != 0)
        {
          v36(v35, 0, 1, a2);
          swift_bridgeObjectRelease();
          sub_19CD3E3F8((uint64_t)v93);
          result = (*((uint64_t (**)(uint64_t, char *, char *))v82 + 4))(v81, v35, a2);
          v37 = v94;
          v56 = *(_QWORD *)(v94 + 56);
          v39 = __OFADD__(v56, 1);
          v40 = v56 + 1;
          if (!v39)
            goto LABEL_9;
          __break(1u);
          goto LABEL_23;
        }
        v36(v35, 1, 1, a2);
        v83(v35, v74);
        v41 = sub_19CFE01B4();
        swift_allocError();
        v43 = v68;
        sub_19CFE019C();
        v44 = (unsigned int *)MEMORY[0x1E0DEC458];
LABEL_11:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *v44, v41);
LABEL_36:
        swift_willThrow();
        return sub_19CD3E3F8((uint64_t)v93);
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v88, &qword_1ECEB1328);
    }
LABEL_32:
    sub_19CCF8C5C((uint64_t)v93, (uint64_t)v88, &qword_1ECEB1328);
    v64 = v89;
    if (v89)
    {
      v65 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v65 + 96))(&v85, v64, v65);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v88);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v88, &qword_1ECEB1328);
      v85 = 0u;
      v86 = 0u;
    }
    sub_19CCECFE4((uint64_t)&v85, &qword_1ECEB3370);
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3370);
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F358);
    v88[0] = v66;
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(v28, (uint64_t)v88, v67);
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)v88, &qword_1ECEB3370);
    goto LABEL_36;
  }
  if (sub_19CFDEF84() == v28)
  {
LABEL_23:
    sub_19CCF8C5C((uint64_t)v93, (uint64_t)v88, &qword_1ECEB1328);
    v57 = v89;
    if (v89)
    {
      v58 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      v59 = *(void (**)(uint64_t, uint64_t))(v58 + 112);
      v60 = v58;
      v33 = a2;
      v59(v57, v60);
      v35 = v82;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v88);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v88, &qword_1ECEB1328);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v78, 1, 1, v28);
    }
    v61 = v81;
    v62 = v72;
    if (swift_dynamicCast())
    {
      v36(v62, 0, 1, v33);
      swift_bridgeObjectRelease();
      sub_19CD3E3F8((uint64_t)v93);
      result = (*((uint64_t (**)(uint64_t, char *, char *))v35 + 4))(v61, v62, v33);
      v37 = v94;
      v63 = *(_QWORD *)(v94 + 56);
      v39 = __OFADD__(v63, 1);
      v40 = v63 + 1;
      if (!v39)
        goto LABEL_9;
      __break(1u);
    }
    v36(v62, 1, 1, v33);
    v83(v62, v46);
    goto LABEL_32;
  }
  sub_19CD3E448((uint64_t)v93, (uint64_t)v88);
  v47 = v94;
  v91 = *(_QWORD *)(v94 + 40);
  v92 = v77;
  *((_QWORD *)&v86 + 1) = &type metadata for _JSONObjectDecoder;
  v87 = sub_19CD21828();
  *(_QWORD *)&v85 = swift_allocObject();
  sub_19CD21778((uint64_t)v88, v85 + 16);
  swift_bridgeObjectRetain();
  v48 = v80;
  v49 = v75;
  sub_19CFDFB90();
  sub_19CD21708((uint64_t)v88);
  result = sub_19CD3E3F8((uint64_t)v93);
  if (!v49)
  {
    v50 = *(_QWORD *)(v47 + 56);
    v39 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (!v39)
    {
      *(_QWORD *)(v47 + 56) = v51;
      return (*((uint64_t (**)(uint64_t, char *, char *))v82 + 4))(v81, v48, a2);
    }
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_19CE0DBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _BYTE v25[40];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;

  v6 = v4;
  result = (uint64_t)sub_19CE0CFD8();
  if (!v5)
  {
    v12 = result;
    v30 = a4;
    sub_19CCF8C5C((uint64_t)v29, (uint64_t)v26, &qword_1ECEB1328);
    v13 = v27;
    if (v27)
    {
      v14 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      if ((v15 & 1) == 0)
      {
LABEL_7:
        sub_19CD3E448((uint64_t)v29, (uint64_t)v25);
        v16 = *(_QWORD *)(v6 + 40);
        swift_bridgeObjectRetain();
        sub_19CCE7984((uint64_t)v25, v16, v12, (uint64_t)v26);
        v18 = type metadata accessor for _JSONObjectKeyedDecodingContainer(0, a2, a3, v17);
        MEMORY[0x1A1ADBD7C](&unk_19D056D48, v18);
        sub_19CFE04E4();
        result = sub_19CD3E3F8((uint64_t)v29);
        v19 = *(_QWORD *)(v6 + 56);
        v20 = __OFADD__(v19, 1);
        v21 = v19 + 1;
        if (v20)
          __break(1u);
        else
          *(_QWORD *)(v6 + 56) = v21;
        return result;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v26, &qword_1ECEB1328);
    }
    if ((sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, *(_QWORD *)(v6 + 40)) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v22 = sub_19CFE01B4();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v24 = a1;
      swift_bridgeObjectRetain();
      sub_19CFE019C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC460], v22);
      swift_willThrow();
      return sub_19CD3E3F8((uint64_t)v29);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_19CE0DDE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[40];

  v3 = v1;
  result = (uint64_t)sub_19CE0CFD8();
  if (!v2)
  {
    v6 = result;
    sub_19CCF8C5C((uint64_t)v25, (uint64_t)&v21, &qword_1ECEB1328);
    v7 = *((_QWORD *)&v22 + 1);
    if (*((_QWORD *)&v22 + 1))
    {
      v8 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
      if ((v9 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v21, &qword_1ECEB1328);
    }
    if ((sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, *(_QWORD *)(v3 + 40)) & 1) != 0)
    {
      v17 = sub_19CFE01B4();
      swift_allocError();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F348);
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC460], v17);
      swift_willThrow();
      return sub_19CD3E3F8((uint64_t)v25);
    }
LABEL_7:
    sub_19CD3E448((uint64_t)v25, (uint64_t)v20);
    v10 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    result = sub_19CE08D90((uint64_t)v20, v10, v6, (uint64_t)&v21);
    v11 = *(_QWORD *)(v3 + 56);
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(_QWORD *)(v3 + 56) = v13;
    a1[3] = &type metadata for _JSONObjectUnkeyedDecodingContainer;
    a1[4] = sub_19CE09118();
    v14 = (_OWORD *)swift_allocObject();
    *a1 = v14;
    v15 = v22;
    v14[1] = v21;
    v14[2] = v15;
    v16 = v24;
    v14[3] = v23;
    v14[4] = v16;
    return sub_19CD3E3F8((uint64_t)v25);
  }
  return result;
}

_QWORD *sub_19CE0E000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];

  v3 = v1;
  result = sub_19CE0CFD8();
  if (!v2)
  {
    v6 = result;
    sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, &qword_1ECEB1328);
    v7 = v18;
    if (v18)
    {
      v8 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
      if ((v9 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      sub_19CCECFE4((uint64_t)v17, &qword_1ECEB1328);
    }
    if ((sub_19CD2186C(0xD00000000000002BLL, 0x800000019D06FFA0, *(_QWORD *)(v3 + 40)) & 1) != 0)
    {
      v14 = sub_19CFE01B4();
      swift_allocError();
      v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BF28);
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC460], v14);
      swift_willThrow();
      return (_QWORD *)sub_19CD3E3F8((uint64_t)v20);
    }
LABEL_7:
    a1[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
    a1[4] = sub_19CD21828();
    v10 = swift_allocObject();
    *a1 = v10;
    sub_19CD3E448((uint64_t)v20, v10 + 16);
    result = *(_QWORD **)(v3 + 40);
    *(_QWORD *)(v10 + 56) = result;
    *(_QWORD *)(v10 + 64) = v6;
    v11 = *(_QWORD *)(v3 + 56);
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(_QWORD *)(v3 + 56) = v13;
    swift_bridgeObjectRetain();
    return (_QWORD *)sub_19CD3E3F8((uint64_t)v20);
  }
  return result;
}

uint64_t sub_19CE0E1E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

BOOL sub_19CE0E230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[7];
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v1 >= (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_19CE0E280()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_19CE0E288()
{
  return sub_19CE0D128() & 1;
}

uint64_t sub_19CE0E2A0()
{
  return sub_19CE0EAD4() & 1;
}

uint64_t sub_19CE0E2B8()
{
  return sub_19CE0EB98();
}

uint64_t sub_19CE0E2CC()
{
  return sub_19CE0ED44();
}

uint64_t sub_19CE0E2E0()
{
  return sub_19CE0EE10();
}

uint64_t sub_19CE0E2F4()
{
  return sub_19CE0EEDC();
}

uint64_t sub_19CE0E308()
{
  return sub_19CE0EFBC();
}

uint64_t sub_19CE0E31C()
{
  return sub_19CE0F09C();
}

uint64_t sub_19CE0E330()
{
  return sub_19CE0F180();
}

uint64_t sub_19CE0E344()
{
  return sub_19CE0F264();
}

uint64_t sub_19CE0E358()
{
  return sub_19CFE0640();
}

uint64_t sub_19CE0E36C()
{
  return sub_19CE0F348();
}

uint64_t sub_19CE0E380()
{
  return sub_19CE0F428();
}

uint64_t sub_19CE0E394()
{
  return sub_19CE0F50C();
}

uint64_t sub_19CE0E3A8()
{
  return sub_19CE0F5F0();
}

uint64_t sub_19CE0E3BC()
{
  return sub_19CE0F6D4();
}

uint64_t sub_19CE0E3D0()
{
  return sub_19CFE064C();
}

uint64_t sub_19CE0E3E4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  return sub_19CE0D308(a1, a2, a3, a4);
}

uint64_t sub_19CE0E3F8()
{
  return sub_19CFE05EC();
}

uint64_t sub_19CE0E40C()
{
  return sub_19CFE05E0();
}

uint64_t sub_19CE0E420()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE05F8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0E440(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E5D0(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_19CE0E45C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0604();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0E47C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E548(a1, a2, MEMORY[0x1E0DED300]);
}

uint64_t sub_19CE0E498(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E58C(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_19CE0E4B4(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E5D0(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_19CE0E4D0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0628();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0E4F0(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E63C(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_19CE0E50C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0610();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0E52C(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E548(a1, a2, MEMORY[0x1E0DED320]);
}

uint64_t sub_19CE0E548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_19CE0E570(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E58C(a1, a2, MEMORY[0x1E0DED330]);
}

uint64_t sub_19CE0E58C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_19CE0E5B4(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E5D0(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_19CE0E5D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_19CE0E600()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_19CFE0634();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_19CE0E620(uint64_t a1, uint64_t a2)
{
  return sub_19CE0E63C(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_19CE0E63C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_19CE0E660()
{
  return sub_19CFE061C();
}

uint64_t sub_19CE0E688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_19CE0DBA8(a1, a2, a3, a4);
}

uint64_t sub_19CE0E69C@<X0>(_QWORD *a1@<X8>)
{
  return sub_19CE0DDE4(a1);
}

_QWORD *sub_19CE0E6B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_19CE0E000(a1);
}

uint64_t sub_19CE0E6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_19CE0C8A8(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t sub_19CE0E6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_19CE0C350(a1, a2, v3[4], v3[5], v3[2], v3[3], a3);
}

uint64_t sub_19CE0E700(uint64_t a1, uint64_t a2)
{
  return sub_19CD20CCC(a1, a2, sub_19CE0C068);
}

char *keypath_get_selector_unsignedLongLongValue()
{
  return sel_unsignedLongLongValue;
}

id sub_19CE0E728@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unsignedLongLongValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_unsignedIntValue()
{
  return sel_unsignedIntValue;
}

id sub_19CE0E764@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unsignedIntValue);
  *a2 = (_DWORD)result;
  return result;
}

char *keypath_get_selector_unsignedShortValue()
{
  return sel_unsignedShortValue;
}

id sub_19CE0E7A0@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unsignedShortValue);
  *a2 = (_WORD)result;
  return result;
}

char *keypath_get_selector_unsignedCharValue()
{
  return sel_unsignedCharValue;
}

id sub_19CE0E7DC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unsignedCharValue);
  *a2 = (_BYTE)result;
  return result;
}

char *keypath_get_selector_unsignedIntegerValue()
{
  return sel_unsignedIntegerValue;
}

id sub_19CE0E818@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unsignedIntegerValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_longLongValue()
{
  return sel_longLongValue;
}

id sub_19CE0E854@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_longLongValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_intValue()
{
  return sel_intValue;
}

id sub_19CE0E890@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_intValue);
  *a2 = (_DWORD)result;
  return result;
}

char *keypath_get_selector_shortValue()
{
  return sel_shortValue;
}

id sub_19CE0E8CC@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_shortValue);
  *a2 = (_WORD)result;
  return result;
}

char *keypath_get_selector_charValue()
{
  return sel_charValue;
}

id sub_19CE0E908@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_charValue);
  *a2 = (_BYTE)result;
  return result;
}

char *keypath_get_selector_integerValue()
{
  return sel_integerValue;
}

id sub_19CE0E944@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_integerValue);
  *a2 = result;
  return result;
}

char *keypath_get_selector_floatValue()
{
  return sel_floatValue;
}

id sub_19CE0E980@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_floatValue);
  *a2 = v4;
  return result;
}

char *keypath_get_selector_doubleValue()
{
  return sel_doubleValue;
}

id sub_19CE0E9BC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_doubleValue);
  *a2 = v4;
  return result;
}

char *keypath_get_selector_BOOLValue()
{
  return sel_BOOLValue;
}

id sub_19CE0E9F8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_BOOLValue);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_19CE0EA28()
{
  swift_bridgeObjectRetain();
  return sub_19CFE0A3C();
}

unint64_t sub_19CE0EA88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43AEF8;
  if (!qword_1EE43AEF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB32D0);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43AEF8);
  }
  return result;
}

uint64_t sub_19CE0EAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  _BYTE v7[40];

  v2 = v0;
  swift_getKeyPath();
  sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0 & 1;
  }
  LOBYTE(v0) = sub_19CCC81E8();
  sub_19CD3E3F8((uint64_t)v7);
  swift_release();
  result = swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 56);
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (!v5)
  {
    *(_QWORD *)(v2 + 56) = v6;
    return v0 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0EB98()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD v14[2];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];

  v2 = v0;
  sub_19CE0CFD8();
  if (v1)
    return (uint64_t)v0;
  sub_19CCF8C5C((uint64_t)v18, (uint64_t)v15, &qword_1ECEB1328);
  v3 = v16;
  if (!v16)
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v4 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  v0 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  if (!v6)
  {
LABEL_7:
    sub_19CCF8C5C((uint64_t)v18, (uint64_t)v15, &qword_1ECEB1328);
    v11 = v16;
    if (v16)
    {
      v12 = v17;
      v0 = __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 96))(v14, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
      memset(v14, 0, sizeof(v14));
    }
    sub_19CFE01B4();
    swift_allocError();
    sub_19CD01C90(MEMORY[0x1E0DEA968], (uint64_t)v14, v13);
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB3370);
    swift_willThrow();
    sub_19CD3E3F8((uint64_t)v18);
    return (uint64_t)v0;
  }
  sub_19CD3E3F8((uint64_t)v18);
  result = swift_bridgeObjectRelease();
  v8 = v2[7];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    v2[7] = v10;
    return (uint64_t)v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0ED44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _BYTE v6[40];

  swift_getKeyPath();
  sub_19CE0CFD8();
  if (v1)
    return swift_release();
  sub_19CE09698();
  sub_19CD3E3F8((uint64_t)v6);
  swift_release();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + 56);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v0 + 56) = v5;
  return result;
}

uint64_t sub_19CE0EE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _BYTE v6[40];

  swift_getKeyPath();
  sub_19CE0CFD8();
  if (v1)
    return swift_release();
  sub_19CE099E4();
  sub_19CD3E3F8((uint64_t)v6);
  swift_release();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + 56);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v0 + 56) = v5;
  return result;
}

uint64_t sub_19CE0EEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE09D30(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEB418], MEMORY[0x1E0CB1C10], 7630409);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0EFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A080(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEDA70], MEMORY[0x1E0CB25F8], 947154505);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A3D0(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEDB58], MEMORY[0x1E0CB2660], 0x3631746E49);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A720(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEDBC8], MEMORY[0x1E0CB2670], 0x3233746E49);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE09D30(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEDC60], MEMORY[0x1E0CB2688], 0x3436746E49);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE09D30(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEBB98], MEMORY[0x1E0CB23E0], 1953384789);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A080(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEDE70], MEMORY[0x1E0CB26B8], 0x38746E4955);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A3D0(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEE068], MEMORY[0x1E0CB26D8], 0x3631746E4955);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE0A720(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB26E8], 0x3233746E4955);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE0F6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE v9[40];

  v2 = v0;
  KeyPath = swift_getKeyPath();
  v4 = sub_19CE0CFD8();
  if (v1)
  {
    swift_release();
    return v0;
  }
  v0 = sub_19CE09D30(KeyPath, (uint64_t)v4, MEMORY[0x1E0DEE190], MEMORY[0x1E0CB2710], 0x3436746E4955);
  sub_19CD3E3F8((uint64_t)v9);
  swift_release();
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (!v7)
  {
    *(_QWORD *)(v2 + 56) = v8;
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[40];

  sub_19CD3E448(a1, (uint64_t)v11);
  v10 = *a2;
  v8 = Array<A>.init(tryDeserializing:using:)((uint64_t)v11, &v10, a3, a4);
  sub_19CD3E3F8(a1);
  return v8;
}

uint64_t sub_19CE0F828@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = Array<A>.init(_partiallyDeserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
  *a5 = result;
  return result;
}

uint64_t Dictionary<>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  sub_19CCF8C5C(a1, (uint64_t)&v23, &qword_1ECEB1328);
  v8 = *((_QWORD *)&v24 + 1);
  if (!*((_QWORD *)&v24 + 1))
  {
    sub_19CCECFE4((uint64_t)&v23, &qword_1ECEB1328);
    goto LABEL_6;
  }
  v9 = v25;
  __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  if ((v10 & 1) != 0)
  {
LABEL_6:
    v11 = sub_19CFDF38C();
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return v11;
  }
  JSONObject.dictionary.getter((uint64_t)&v20);
  if (*((_QWORD *)&v21 + 1))
  {
    v23 = v20;
    v24 = v21;
    v25 = v22;
    sub_19CDC61F4((uint64_t)&v23, (uint64_t)&v20);
    v19 = *a2;
    v11 = Dictionary<>.init(tryDeserializing:using:)((uint64_t)&v20, &v19, a3, a4);
    sub_19CD3E3F8(a1);
    sub_19CDC6248((uint64_t)&v23);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v20, &qword_1EE43C1C8);
    v13 = sub_19CFDF464();
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, *a2, (uint64_t)&v23);
    sub_19CCF8C5C((uint64_t)&v23, (uint64_t)&v20, qword_1EE43A238);
    v14 = *((_QWORD *)&v21 + 1);
    if (*((_QWORD *)&v21 + 1))
    {
      v15 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
      sub_19CDC5494();
      v16 = (void *)swift_allocError();
      v17 = MEMORY[0x1E0DEE9D8];
      *v18 = v13;
      v18[1] = v17;
      v18[2] = 0;
      v18[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 8))(v13, v16, v14, v15);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v20, qword_1EE43A238);
    }
    v11 = sub_19CFDF38C();
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    sub_19CCECFE4((uint64_t)&v23, qword_1EE43A238);
  }
  return v11;
}

uint64_t sub_19CE0FAC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = Dictionary<>.init(_partiallyDeserializing:using:)(a1, a2, *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8));
  *a5 = result;
  return result;
}

uint64_t Optional<A>.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9;
  _BYTE v10[40];

  sub_19CD3E448(a1, (uint64_t)v10);
  v9 = *a2;
  (*(void (**)(_BYTE *, uint64_t *, uint64_t, uint64_t))(a4 + 16))(v10, &v9, a3, a4);
  return sub_19CD3E3F8(a1);
}

uint64_t sub_19CE0FB68(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return Optional<A>.init(_partiallyDeserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t dispatch thunk of _DiscardOnErrorExpressibleByJSON.init(_partiallyDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

JetEngine::JSONContext __swiftcall JSONContext.init(userInfo:)(Swift::OpaquePointer userInfo)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  JetEngine::JSONContext result;
  int64_t v58;
  unint64_t *v59;
  char *v60;
  int64_t v61;
  _QWORD *rawValue;
  char *v63;
  int64_t v64;
  unint64_t v65;
  _QWORD *v66;
  _OWORD v67[2];
  _OWORD v68[2];
  unint64_t v69;

  v59 = v1;
  v3 = sub_19CFE0310();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F50);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v58 - v14;
  v69 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  sub_19CFDF404();
  v63 = v11;
  v64 = 0;
  rawValue = userInfo._rawValue;
  v18 = *((_QWORD *)userInfo._rawValue + 8);
  v17 = (char *)userInfo._rawValue + 64;
  v16 = v18;
  v19 = 1 << *(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v60 = v17;
  v61 = (unint64_t)(v19 + 63) >> 6;
  v58 = v61 - 1;
  while (1)
  {
    if (v21)
    {
      v23 = __clz(__rbit64(v21));
      v24 = (v21 - 1) & v21;
      v25 = v23 | (v64 << 6);
LABEL_8:
      v26 = rawValue;
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v11, rawValue[6] + *(_QWORD *)(v4 + 72) * v25, v3);
      v27 = v26[7] + 32 * v25;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F48);
      sub_19CD436B0(v27, (uint64_t)&v11[*(int *)(v28 + 48)]);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
      goto LABEL_27;
    }
    v29 = v64 + 1;
    if (__OFADD__(v64, 1))
      goto LABEL_42;
    if (v29 < v61)
    {
      v30 = *(_QWORD *)&v60[8 * v29];
      if (v30)
        goto LABEL_12;
      v31 = v64 + 2;
      ++v64;
      if (v29 + 1 < v61)
      {
        v30 = *(_QWORD *)&v60[8 * v31];
        if (v30)
          goto LABEL_15;
        v64 = v29 + 1;
        if (v29 + 2 < v61)
        {
          v30 = *(_QWORD *)&v60[8 * v29 + 16];
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v31 = v29 + 3;
          v64 = v29 + 2;
          if (v29 + 3 < v61)
            break;
        }
      }
    }
LABEL_26:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
    v24 = 0;
LABEL_27:
    sub_19CE16CE0((uint64_t)v11, (uint64_t)v15);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v15, 1, v33) == 1)
    {
      result.storage._rawValue = (void *)swift_release();
      *v59 = v69;
      return result;
    }
    v65 = v24;
    v34 = &v15[*(int *)(v33 + 48)];
    v35 = v4;
    v36 = v15;
    v37 = v3;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    sub_19CD433C0(v34, v68);
    v38 = v7;
    v39 = sub_19CFE0304();
    v41 = v40;
    sub_19CD436B0((uint64_t)v68, (uint64_t)v67);
    v42 = v69;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66 = (_QWORD *)v42;
    v69 = 0x8000000000000000;
    v45 = sub_19CD3FD1C(v39, v41);
    v46 = *(_QWORD *)(v42 + 16);
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v49 = v44;
    if (*(_QWORD *)(v42 + 24) >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v52 = v66;
        if ((v44 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_19CD141BC();
        v52 = v66;
        if ((v49 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_19CD13ED8(v48, isUniquelyReferenced_nonNull_native);
      v50 = sub_19CD3FD1C(v39, v41);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_44;
      v45 = v50;
      v52 = v66;
      if ((v49 & 1) != 0)
      {
LABEL_4:
        v22 = (_OWORD *)(v52[7] + 32 * v45);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        sub_19CD433C0(v67, v22);
        goto LABEL_5;
      }
    }
    v52[(v45 >> 6) + 8] |= 1 << v45;
    v53 = (uint64_t *)(v52[6] + 16 * v45);
    *v53 = v39;
    v53[1] = v41;
    sub_19CD433C0(v67, (_OWORD *)(v52[7] + 32 * v45));
    v54 = v52[2];
    v55 = __OFADD__(v54, 1);
    v56 = v54 + 1;
    if (v55)
      goto LABEL_41;
    v52[2] = v56;
    swift_bridgeObjectRetain();
LABEL_5:
    v69 = (unint64_t)v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    v4 = v35;
    v7 = v38;
    v3 = v37;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v37);
    v11 = v63;
    v15 = v36;
    v21 = v65;
  }
  v30 = *(_QWORD *)&v60[8 * v31];
  if (v30)
  {
LABEL_15:
    v29 = v31;
LABEL_12:
    v24 = (v30 - 1) & v30;
    v25 = __clz(__rbit64(v30)) + (v29 << 6);
    v64 = v29;
    goto LABEL_8;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v61)
    {
      v64 = v58;
      goto LABEL_26;
    }
    v30 = *(_QWORD *)&v60[8 * v29];
    ++v31;
    if (v30)
      goto LABEL_12;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result.storage._rawValue = (void *)sub_19CFE082C();
  __break(1u);
  return result;
}

unint64_t sub_19CE10084(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F60);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  result = swift_retain();
  v5 = 0;
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    v8 = *(v6 - 2);
    v9 = *(v6 - 1);
    v10 = *v6;
    swift_bridgeObjectRetain();
    if (!v10)
      goto LABEL_9;
    swift_bridgeObjectRetain();
    result = sub_19CE120B8(v8, v9);
    if ((v11 & 1) != 0)
      goto LABEL_13;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    *(_QWORD *)(v2[7] + 8 * result) = v10;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_14;
    v2[2] = v15;
    v6 += 3;
    ++v5;
    if (v7 == v3)
    {
LABEL_9:
      swift_release();
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_19CE101C4(uint64_t a1)
{
  return sub_19CE10334(a1, &qword_1EE43F3E8);
}

unint64_t sub_19CE101D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D18);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  result = swift_retain();
  v5 = 0;
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    v9 = *(v6 - 2);
    v8 = *(v6 - 1);
    if (!v9)
    {
      swift_retain();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    v10 = *(v6 - 3);
    v11 = *v6;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_19CD3FD1C(v10, v9);
    if ((v12 & 1) != 0)
      goto LABEL_15;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v10;
    v13[1] = v9;
    v14 = (_QWORD *)(v2[7] + 16 * result);
    *v14 = v8;
    v14[1] = v11;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_16;
    v6 += 4;
    v2[2] = v17;
    ++v5;
    if (v7 == v3)
      goto LABEL_12;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_19CE10328(uint64_t a1)
{
  return sub_19CE10334(a1, &qword_1EE43BED0);
}

unint64_t sub_19CE10334(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_19CFE03B8();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  result = swift_retain();
  v6 = 0;
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    v10 = *(v7 - 1);
    v9 = *v7;
    if (!v10)
    {
      swift_bridgeObjectRetain();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    v11 = *(v7 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v11, v10);
    if ((v12 & 1) != 0)
      goto LABEL_15;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v3[6] + 16 * result);
    *v13 = v11;
    v13[1] = v10;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_16;
    v3[2] = v16;
    v7 += 3;
    ++v6;
    if (v8 == v4)
      goto LABEL_12;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_19CE1047C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E190);
  v2 = sub_19CFE03B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19CCF8C5C(v6, (uint64_t)&v15, &qword_1EE43F378);
    v7 = v15;
    v8 = v16;
    result = sub_19CD3FD1C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_19CCD14C4(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE105BC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F68);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE106D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F400);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE107EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _OWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F360);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 64);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 4);
    v6 = *((_QWORD *)v4 - 3);
    v14 = *v4;
    v15 = *(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = (_OWORD *)(v2[7] + 32 * result);
    *v10 = v15;
    v10[1] = v14;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE10910(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _BYTE v15[32];
  __int128 v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEAFE70);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *v4;
    v6 = v4[3];
    v7 = v4[4];
    *(_QWORD *)v15 = *(v4 - 3);
    *(_OWORD *)&v15[8] = *((_OWORD *)v4 - 1);
    *(_QWORD *)&v15[24] = v5;
    v16 = *(_OWORD *)(v4 + 1);
    v17 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_19CD2A4AC((uint64_t *)v15);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v2[6] + 56 * result;
    v11 = *(_OWORD *)&v15[16];
    *(_OWORD *)v10 = *(_OWORD *)v15;
    *(_OWORD *)(v10 + 16) = v11;
    *(_OWORD *)(v10 + 32) = v16;
    *(_QWORD *)(v10 + 48) = v17;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 8;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE10A70(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3C0);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v15 = *((_OWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[7] + 24 * result;
    *(_OWORD *)v11 = v15;
    *(_QWORD *)(v11 + 16) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE10BA0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3B8);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_19CE12204((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE10CA8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D10);
  v2 = sub_19CFE03B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    v11 = v5[1];
    v10 = v5[2];
    v12 = v5[4];
    v13 = v5[6];
    v23 = v5[5];
    v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_19CD3FD1C(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = (_QWORD *)(v3[7] + (result << 6));
    *v17 = v9;
    v17[1] = v8;
    v17[2] = v11;
    v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 10;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19CE10E20(uint64_t a1)
{
  return sub_19CCDBE88(a1, &qword_1EE4372A8, &qword_1EE43F3A8, (uint64_t (*)(uint64_t *, unint64_t))sub_19CCD14C4);
}

unint64_t sub_19CE10E3C(uint64_t a1)
{
  return sub_19CD07B60(a1, &qword_1EE43F370);
}

unint64_t sub_19CE10E48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F38);
  v2 = (_QWORD *)sub_19CFE03B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19CCF8C5C(v4, (uint64_t)v13, &qword_1EE43F368);
    result = sub_19CD20240((uint64_t)v13);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 40 * result;
    v8 = v13[0];
    v9 = v13[1];
    *(_QWORD *)(v7 + 32) = v14;
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_19CE10F74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_19CD433C0((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_19CD1CC78(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_19CD20334(a2);
  }
  else
  {
    sub_19CCECFE4(a1, &qword_1ECEB3370);
    sub_19CDD2898(a2, v7);
    sub_19CD20334(a2);
    return sub_19CCECFE4((uint64_t)v7, &qword_1ECEB3370);
  }
}

uint64_t sub_19CE11030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE113CC(a1, a2, a3, (void (*)(void))sub_19CCD14C4, &qword_1EE4372B0, qword_1EE436C38, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_19CDD2DB4);
}

uint64_t sub_19CE11054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JetPackAsset(0);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v17 + 48))(a1, 1, v14) == 1)
  {
    sub_19CCECFE4(a1, (uint64_t *)&unk_1ECEB1140);
    sub_19CDD2DC8(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1ECEB1140);
  }
  else
  {
    sub_19CCFE8AC(a1, (uint64_t)v16, type metadata accessor for JetPackAsset);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v4;
    *v4 = 0x8000000000000000;
    sub_19CE17430((uint64_t)v16, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v21;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CE111BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_19CD433C0((_OWORD *)a1, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_19CE1767C(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CCECFE4(a1, &qword_1ECEB3370);
    v7 = sub_19CD4B638(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_19CD43200();
        v11 = v13;
      }
      sub_19CD433C0((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v9), v14);
      sub_19CCFCEE4(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_19CCECFE4((uint64_t)v14, &qword_1ECEB3370);
  }
}

uint64_t sub_19CE112CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  __int128 v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  if (*(_QWORD *)(a1 + 24))
  {
    v6 = *(_OWORD *)(a1 + 16);
    v10[0] = *(_OWORD *)a1;
    v10[1] = v6;
    v11 = *(_QWORD *)(a1 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_19CE178EC((uint64_t)v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CCECFE4(a1, (uint64_t *)&unk_1EE43B610);
    sub_19CDD2EF0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_19CCECFE4((uint64_t)v10, (uint64_t *)&unk_1EE43B610);
  }
}

uint64_t sub_19CE113A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE113CC(a1, a2, a3, (void (*)(void))sub_19CCD14C4, &qword_1EE4372A8, qword_1EE4371F0, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_19CDD3110);
}

uint64_t sub_19CE113CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t *a5, uint64_t *a6, void (*a7)(_QWORD *__return_ptr, uint64_t, uint64_t))
{
  uint64_t *v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  _QWORD v17[5];

  if (*(_QWORD *)(a1 + 24))
  {
    a4();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v7;
    *v7 = 0x8000000000000000;
    sub_19CE17CF4((uint64_t)v17, a2, a3, isUniquelyReferenced_nonNull_native, a5, (uint64_t (*)(uint64_t, uint64_t))a4);
    *v7 = v16;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CCECFE4(a1, a6);
    a7(v17, a2, a3);
    swift_bridgeObjectRelease();
    return sub_19CCECFE4((uint64_t)v17, a6);
  }
}

void sub_19CE114B8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE114F0()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE115AC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE115EC()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE11684(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE116D4()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE11770(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE117BC()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE1187C(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE118BC()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE11948(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE11994()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE11A40(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE11A84()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE11B30()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE11BB4(uint64_t a1, char a2)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CE11C08()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t JSONContext.Property.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSONContext.Property.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSONContext.Property.key.modify())()
{
  return nullsub_1;
}

uint64_t JSONContext.Property.codingUserInfoKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BEC0);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  swift_bridgeObjectRetain();
  sub_19CFE02F8();
  v9 = sub_19CFE0310();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v6, v9);
  sub_19CCECFE4((uint64_t)v6, &qword_1EE43BEC0);
  v12[2] = 0;
  v12[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_19CFE010C();
  sub_19CFDF698();
  v12[0] = v7;
  v12[1] = v8;
  sub_19CFE0670();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t static JSONContext.Property.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t JSONContext.removingValue<A>(forProperty:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _OWORD v7[2];
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  v8 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD143A0(v4, v5, v7);
  swift_bridgeObjectRelease();
  result = sub_19CCECFE4((uint64_t)v7, &qword_1ECEB3370);
  *a2 = v8;
  return result;
}

JetEngine::JSONContext __swiftcall JSONContext.removingAll()()
{
  _QWORD *v0;
  JetEngine::JSONContext result;

  *v0 = MEMORY[0x1E0DEE9E0];
  return result;
}

__n128 sub_19CE11F40(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __n128 result;

  sub_19CFE08C8();
  if (*(_QWORD *)(a1 + 8))
  {
    sub_19CFE08E0();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CFE08E0();
  }
  v6 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08E0();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  sub_19CFE0910();
  v7 = sub_19CFE0088();
  *(_QWORD *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  v8 = a3[6] + 56 * v7;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 16) = v9;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v8 + 32) = result;
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a3[7] + 8 * v7) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_19CE120B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_19CFE08C8();
  sub_19CFE08D4();
  if (a2)
    sub_19CFDF650();
  v4 = sub_19CFE0910();
  return sub_19CE12290(a1, a2, v4);
}

unint64_t sub_19CE1213C(char a1)
{
  uint64_t v2;

  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  v2 = sub_19CFE0910();
  return sub_19CE12480(a1 & 1, v2);
}

unint64_t sub_19CE121CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CFE08BC();
  return sub_19CD127A0(a1, v2);
}

unint64_t sub_19CE12204(uint64_t a1)
{
  uint64_t v2;

  sub_19CFDF578();
  sub_19CFE08C8();
  sub_19CFDF650();
  v2 = sub_19CFE0910();
  swift_bridgeObjectRelease();
  return sub_19CE125BC(a1, v2);
}

unint64_t sub_19CE12290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_19CFE06A0() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_19CE12358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_19CFE0310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      v15 = sub_19CFDF548();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_19CE12480(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6469746E65696C63;
    else
      v6 = 0x646972657375;
    if ((a1 & 1) != 0)
      v7 = 0xE800000000000000;
    else
      v7 = 0xE600000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6469746E65696C63 : 0x646972657375;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xE600000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_19CE125BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_19CFDF578();
    v8 = v7;
    if (v6 == sub_19CFDF578() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_19CFDF578();
          v15 = v14;
          if (v13 == sub_19CFDF578() && v15 == v16)
            break;
          v18 = sub_19CFE06A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_19CE12730(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F60);
  v32 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1))
          goto LABEL_40;
        if (v15 >= v12)
        {
LABEL_33:
          swift_release();
          v3 = v2;
          if ((v32 & 1) != 0)
          {
            v31 = 1 << *(_BYTE *)(v5 + 32);
            if (v31 >= 64)
              bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            else
              *v9 = -1 << v31;
            *(_QWORD *)(v5 + 16) = 0;
          }
          break;
        }
        v20 = v9[v15];
        if (!v20)
        {
          v21 = v15 + 1;
          if (v15 + 1 >= v12)
            goto LABEL_33;
          v20 = v9[v21];
          if (!v20)
          {
            while (1)
            {
              v15 = v21 + 1;
              if (__OFADD__(v21, 1))
                break;
              if (v15 >= v12)
                goto LABEL_33;
              v20 = v9[v15];
              ++v21;
              if (v20)
                goto LABEL_19;
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_19:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      v33 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18 + 8);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19CFE08C8();
      sub_19CFE08D4();
      if (v23)
        sub_19CFDF650();
      result = sub_19CFE0910();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16) = v33;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE12A24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0128);
  v40 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_44;
    if (v13 >= v37)
      break;
    v19 = v38;
    v20 = v38[v13];
    if (!v20)
    {
      v21 = v13 + 1;
      if (v13 + 1 >= v37)
      {
LABEL_35:
        swift_release();
        v3 = v2;
        if ((v40 & 1) == 0)
          goto LABEL_42;
        goto LABEL_38;
      }
      v20 = v38[v21];
      if (!v20)
      {
        while (1)
        {
          v13 = v21 + 1;
          if (__OFADD__(v21, 1))
            break;
          if (v13 >= v37)
            goto LABEL_35;
          v20 = v38[v13];
          ++v21;
          if (v20)
            goto LABEL_19;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_19:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_20:
    v22 = *(_QWORD *)(v5 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 56 * v17);
    v24 = v23[1];
    v42 = *v23;
    v25 = v23[2];
    v26 = v23[3];
    v41 = v23[4];
    v27 = v23[6];
    v43 = v23[5];
    v28 = *(_QWORD *)(v22 + 8 * v17);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19CFE08C8();
    sub_19CFE08E0();
    if (v24)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    sub_19CFE08E0();
    if (v27)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    result = sub_19CFE0910();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 56 * v14);
    *v15 = v42;
    v15[1] = v24;
    v15[2] = v25;
    v15[3] = v26;
    v15[4] = v41;
    v15[5] = v43;
    v15[6] = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v28;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v2;
  v19 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE12DF0(uint64_t a1, char a2)
{
  return sub_19CE12E08(a1, a2, &qword_1EE437178);
}

uint64_t sub_19CE12DFC(uint64_t a1, char a2)
{
  return sub_19CE12E08(a1, a2, &qword_1EE43BED0);
}

uint64_t sub_19CE12E08(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_19CFE03AC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_38;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v15++, 1))
      goto LABEL_40;
    if (v15 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v15);
    if (!v25)
    {
      v26 = v15 + 1;
      if (v15 + 1 >= v12)
      {
LABEL_31:
        swift_release();
        v4 = v36;
        if ((v38 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v25 = *(_QWORD *)(v37 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          v15 = v26 + 1;
          if (__OFADD__(v26, 1))
            break;
          if (v15 >= v12)
            goto LABEL_31;
          v25 = *(_QWORD *)(v37 + 8 * v15);
          ++v26;
          if (v25)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v15;
    }
LABEL_20:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_21:
    v27 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v18 == v32;
        if (v18 == v32)
          v18 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v30;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_19CE130F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D18);
  v42 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_40;
    if (v13 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v13);
    if (!v25)
    {
      v26 = v13 + 1;
      if (v13 + 1 >= v40)
      {
LABEL_31:
        swift_release();
        v3 = v39;
        if ((v42 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v25 = *(_QWORD *)(v41 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          v13 = v26 + 1;
          if (__OFADD__(v26, 1))
            break;
          if (v13 >= v40)
            goto LABEL_31;
          v25 = *(_QWORD *)(v41 + 8 * v13);
          ++v26;
          if (v25)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_21:
    v27 = 16 * v22;
    v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v27);
    v30 = *v28;
    v29 = v28[1];
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v27);
    v32 = *v31;
    v33 = v31[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v36 = v16 == v35;
        if (v16 == v35)
          v16 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v37 == -1);
      v17 = __clz(__rbit64(~v37)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v30;
    v19[1] = v29;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v32;
    v20[1] = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE13404(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F68);
  v38 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE13710(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E1A0);
  v37 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE13A18(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  _OWORD v41[2];

  v3 = v2;
  v5 = sub_19CFE0310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3E0);
  v40 = a2;
  v11 = sub_19CFE03AC();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v39 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v37 = v2;
  v38 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = v39;
    v25 = v39[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_34;
      v25 = v39[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v39[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v38)
              goto LABEL_34;
            v25 = v39[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      sub_19CD433C0((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v22), v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      sub_19CD436B0(*(_QWORD *)(v10 + 56) + 32 * v22, (uint64_t)v41);
    }
    result = sub_19CFDF4C4();
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v17 + 8 * v31);
      }
      while (v35 == -1);
      v20 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v5);
    result = (uint64_t)sub_19CD433C0(v41, (_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v20));
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v37;
  v24 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v10 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_19CE13D9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F360);
  v38 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = (__int128 *)(*(_QWORD *)(v5 + 56) + 32 * v22);
    v39 = *v34;
    v40 = v34[1];
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v18);
    *v20 = v39;
    v20[1] = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE140B0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for MTMetricsIdentifier();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC20);
  v41 = a2;
  v10 = sub_19CFE03AC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v21);
    v27 = *(_QWORD *)(v40 + 72);
    v28 = *(_QWORD *)(v9 + 56) + v27 * v21;
    if ((v41 & 1) != 0)
      sub_19CCFE8AC(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
    else
      sub_19CCFECEC(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
    sub_19CFE08C8();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    result = sub_19CFE0910();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v19) = v26;
    result = sub_19CCFE8AC((uint64_t)v8, *(_QWORD *)(v11 + 56) + v27 * v19, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_19CE14450(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3F0);
  v43 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v40 = v2;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v42 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_33;
      v25 = *(_QWORD *)(v42 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v42 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v41)
              goto LABEL_33;
            v25 = *(_QWORD *)(v42 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(v5 + 56) + v31;
    v36 = *(void **)v35;
    v37 = *(_BYTE *)(v35 + 8);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v38 = v36;
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = *(_QWORD *)(v7 + 56) + v18;
    *(_QWORD *)v20 = v36;
    *(_BYTE *)(v20 + 8) = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE14778(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F58);
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v31 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30)
          goto LABEL_35;
        v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v30)
            goto LABEL_35;
          v18 = v31[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v31 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v13 >= v30)
                  goto LABEL_35;
                v18 = v31[v13];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v13 = v19;
          }
        }
LABEL_21:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19CFE08C8();
      sub_19CFE08D4();
      if (v21)
        sub_19CFDF650();
      result = sub_19CFE0910();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v32;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v20;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_19CE14A88(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEAFE70);
  v6 = (_QWORD *)sub_19CFE03AC();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v26 = (_QWORD *)(v5 + 64);
    v8 = -1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    v9 = v8 & *(_QWORD *)(v5 + 64);
    v24 = v2;
    v25 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v10 = 0;
    while (1)
    {
      if (v9)
      {
        v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v25)
          goto LABEL_22;
        v14 = v26[v13];
        ++v10;
        if (!v14)
        {
          v10 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_22;
          v14 = v26[v10];
          if (!v14)
          {
            v15 = v13 + 2;
            if (v15 >= v25)
            {
LABEL_22:
              swift_release();
              v3 = v24;
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v5 + 32);
                if (v23 > 63)
                  bzero(v26, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v23;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v14 = v26[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_29;
                if (v10 >= v25)
                  goto LABEL_22;
                v14 = v26[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
LABEL_19:
        v9 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      v16 = *(_QWORD *)(v5 + 48) + 56 * v12;
      v17 = *(_QWORD *)v16;
      v18 = *(_OWORD *)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 24);
      v20 = *(_OWORD *)(v16 + 32);
      v21 = *(_QWORD *)(v16 + 48);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
      if ((a2 & 1) == 0)
      {
        v27 = *(_OWORD *)(v16 + 8);
        v28 = *(_OWORD *)(v16 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = v27;
        v20 = v28;
      }
      v29 = v17;
      v30 = v18;
      v31 = v19;
      v32 = v20;
      v33 = v21;
      sub_19CE11F40((uint64_t)&v29, v22, v6);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_19CE14CDC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for JetPackAsset(0);
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F390);
  v44 = a2;
  v10 = sub_19CFE03AC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v9 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_19CCFE8AC(v31, (uint64_t)v8, type metadata accessor for JetPackAsset);
    }
    else
    {
      sub_19CCFECEC(v31, (uint64_t)v8, type metadata accessor for JetPackAsset);
      swift_bridgeObjectRetain();
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_19CCFE8AC((uint64_t)v8, *(_QWORD *)(v11 + 56) + v30 * v19, type metadata accessor for JetPackAsset);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_19CE1505C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F380);
  v6 = sub_19CFE03AC();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x19CE15414);
            }
            if (v13 >= v10)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_19CD433C0(v16, v20);
      else
        sub_19CD436B0((uint64_t)v16, (uint64_t)v20);
      sub_19CFE08C8();
      __asm { BR              X8 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero(v19, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_19CE15430(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3B0);
  result = sub_19CFE03AC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v3;
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v35);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        v31 = v30;
      result = sub_19CFE08BC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_19CE156E0(uint64_t a1, char a2)
{
  return sub_19CE156EC(a1, a2, &qword_1EE439D08);
}

uint64_t sub_19CE156EC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_19CFE03AC();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v37 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v4 = v3;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v6 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v6 + 56) + 24 * v22;
      v39 = *(_OWORD *)v33;
      v34 = *(_QWORD *)(v33 + 16);
      if ((v38 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_19CFE08C8();
      sub_19CFDF650();
      result = sub_19CFE0910();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v32;
      v19[1] = v31;
      v20 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_OWORD *)v20 = v39;
      *(_QWORD *)(v20 + 16) = v34;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_19CE159FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D10);
  v40 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + (v21 << 6);
      v33 = *(_QWORD *)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 24);
      v43 = *(_QWORD *)(v32 + 16);
      v41 = *(_QWORD *)v32;
      v42 = *(_QWORD *)(v32 + 32);
      v44 = *(_OWORD *)(v32 + 40);
      v35 = *(_QWORD *)(v32 + 56);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_19CFE08C8();
      sub_19CFDF650();
      result = sub_19CFE0910();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + (v17 << 6);
      *(_QWORD *)v19 = v41;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v43;
      *(_QWORD *)(v19 + 24) = v34;
      *(_QWORD *)(v19 + 32) = v42;
      *(_OWORD *)(v19 + 40) = v44;
      *(_QWORD *)(v19 + 56) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE15D64(uint64_t a1, char a2)
{
  return sub_19CE15D78(a1, a2, &qword_1EE4372A8, (void (*)(uint64_t, _BYTE *))sub_19CCD14C4);
}

uint64_t sub_19CE15D78(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  _BYTE v39[40];

  v6 = v4;
  v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v9 = sub_19CFE03AC();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v37 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v8 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v9 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36)
          goto LABEL_34;
        v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_34;
          v22 = v37[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              v6 = v4;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v8 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v36)
                  goto LABEL_34;
                v22 = v37[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v20);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v8 + 56) + 40 * v20;
      if ((v38 & 1) != 0)
      {
        a4(v27, v39);
      }
      else
      {
        sub_19CCD5B84(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_19CFE08C8();
      sub_19CFDF650();
      result = sub_19CFE0910();
      v28 = -1 << *(_BYTE *)(v10 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17);
      *v18 = v26;
      v18[1] = v25;
      result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v39, *(_QWORD *)(v10 + 56) + 40 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_19CE1608C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F38);
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    }
    else
    {
      sub_19CD23A14(v25, (uint64_t)&v38);
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      swift_unknownObjectRetain();
    }
    result = sub_19CFE0094();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v15) = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE1639C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AFD8);
  v37 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v34;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        v32 = v30;
        swift_unknownObjectRetain();
      }
      sub_19CFDF578();
      sub_19CFE08C8();
      sub_19CFDF650();
      v14 = sub_19CFE0910();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE166B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3A0);
  v36 = a2;
  v6 = sub_19CFE03AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19CE169CC(uint64_t a1, char a2)
{
  return sub_19CE169D8(a1, a2, &qword_1EE43F398);
}

uint64_t sub_19CE169D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_19CFE03AC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_19CE16CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE16D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_19CD3FD1C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_19CE18698();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      return swift_release();
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CE130F4(v17, a5 & 1);
  v23 = sub_19CD3FD1C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE16E98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19CD23A50(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_19CE18BC4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CE13710(result, a4 & 1);
  result = sub_19CD23A50(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE16FE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_19CD3FD1C(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_19CE18FAC();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7] + 24 * v16;
      result = sub_19CD5EAF0(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16));
      *(_QWORD *)v23 = a1;
      *(_QWORD *)(v23 + 8) = a2;
      *(_BYTE *)(v23 + 16) = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = v22[7] + 24 * v16;
    *(_QWORD *)v28 = a1;
    *(_QWORD *)(v28 + 8) = a2;
    *(_BYTE *)(v28 + 16) = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CD460C4(v19, a6 & 1);
  v25 = sub_19CD3FD1C(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE17170(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19CE120B8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19CE19AA8(&qword_1EE439F58);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CE14778(v15, a4 & 1);
  v21 = sub_19CE120B8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE172D4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_19CD2A4AC((uint64_t *)a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_19CE19C50();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = v16[6] + 56 * v10;
    v19 = *(_OWORD *)a2;
    v20 = *(_OWORD *)(a2 + 16);
    v21 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(v18 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(v18 + 16) = v20;
    *(_OWORD *)(v18 + 32) = v21;
    *(_OWORD *)v18 = v19;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return sub_19CD2AF14(a2);
    }
    goto LABEL_14;
  }
  sub_19CE14A88(result, a3 & 1);
  result = sub_19CD2A4AC((uint64_t *)a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE17430(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_19CD3FD1C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for JetPackAsset(0) - 8) + 72) * v12;
        return sub_19CE1B4D0(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_19CE1A58C();
      goto LABEL_7;
    }
    sub_19CE14CDC(v15, a4 & 1);
    v22 = sub_19CD3FD1C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19CE18274(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

_OWORD *sub_19CE17564(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_19CD1F258(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        return sub_19CD433C0(a1, v17);
      }
      return sub_19CE18304(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_19CE1A7D0();
      goto LABEL_7;
    }
    sub_19CE1505C(v13, a3 & 1);
    v19 = sub_19CD1F258(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_19CE18304(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_19CFE082C();
  __break(1u);
  return result;
}

_OWORD *sub_19CE1767C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_19CD4B638(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        return sub_19CD433C0(a1, v17);
      }
      return sub_19CD4B9D8(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_19CD43200();
      goto LABEL_7;
    }
    sub_19CD4BA3C(v13, a3 & 1);
    v19 = sub_19CD4B638(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_19CD4B9D8(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE17794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  char v24;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_19CD3FD1C(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = (uint64_t *)(v22[7] + 24 * v16);
        *v23 = a1;
        v23[1] = a2;
        v23[2] = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a6 & 1) == 0)
    {
      result = (uint64_t)sub_19CE1AD2C(&qword_1EE43F3C0);
      goto LABEL_7;
    }
    sub_19CE156EC(result, a6 & 1, &qword_1EE43F3C0);
    result = sub_19CD3FD1C(a4, a5);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19CE18368(v16, a4, a5, a1, a2, a3, v22);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE178EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19CD3FD1C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19CE1A98C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_19CE1B514(a1, v18[7] + 40 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 40 * v12;
    v24 = *(_OWORD *)a1;
    v25 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CCC1060(v15, a4 & 1);
  v20 = sub_19CD3FD1C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_19CE1B514(a1, v18[7] + 40 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

void sub_19CE17A58(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_19CE121CC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_19CE1AB80();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_19CE15430(v13, a3 & 1);
  v18 = sub_19CE121CC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_19CFE082C();
  __break(1u);
}

_QWORD *sub_19CE17B90(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19CD3FD1C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19CE1AEE4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_19CE1BE58(a1, (_QWORD *)(v18[7] + (v12 << 6)));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 6));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return (_QWORD *)swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CE159FC(v15, a4 & 1);
  v20 = sub_19CD3FD1C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_19CE1BE58(a1, (_QWORD *)(v18[7] + (v12 << 6)));
    goto LABEL_11;
  }
LABEL_15:
  result = (_QWORD *)sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE17CF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  _QWORD *v6;
  _QWORD **v8;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v8 = (_QWORD **)v6;
  v13 = (_QWORD *)*v6;
  v15 = sub_19CD3FD1C(a2, a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v21 = *v8;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = v21[7] + 40 * v15;
        __swift_destroy_boxed_opaque_existential_1Tm(v22);
        return a6(a1, v22);
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_19CE1B108(a5, (void (*)(_BYTE *, uint64_t))a6);
      goto LABEL_7;
    }
    sub_19CE15D78(v18, a4 & 1, a5, (void (*)(uint64_t, _BYTE *))a6);
    v24 = sub_19CD3FD1C(a2, a3);
    if ((v19 & 1) == (v25 & 1))
    {
      v15 = v24;
      v21 = *v8;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19CE183BC(v15, a2, a3, a1, v21, a6);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE17E60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19CD3FD1C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19CE1B900(&qword_1EE43F3A0);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19CE166B8(v15, a4 & 1);
  v21 = sub_19CD3FD1C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

unint64_t sub_19CE17FC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t result;
  unint64_t v21;
  char v22;
  _BYTE v23[40];

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_19CD20240(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    v18 = *v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (uint64_t *)(v18[7] + 16 * v12);
      result = swift_unknownObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19CE1B2F4();
    goto LABEL_7;
  }
  sub_19CE1608C(v15, a4 & 1);
  v21 = sub_19CD20240(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    result = sub_19CFE082C();
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = *v5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_19CD23A14(a3, (uint64_t)v23);
  return sub_19CE18428(v12, (uint64_t)v23, a1, a2, v18);
}

_OWORD *sub_19CE180E8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_19CFE0310();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_19CD433C0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_19CE18188(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 16 * result);
  *v8 = a2;
  v8[1] = a3;
  v9 = (_QWORD *)(a8[7] + 32 * result);
  *v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  v9[3] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

unint64_t sub_19CE181D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = a6[7] + 16 * result;
  *(_QWORD *)v7 = a4;
  *(_BYTE *)(v7 + 8) = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_19CE1822C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_19CE18274(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for JetPackAsset(0);
  result = sub_19CCFE8AC(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for JetPackAsset);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

_OWORD *sub_19CE18304(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_19CD433C0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_19CE18368(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = (_QWORD *)(a7[7] + 24 * result);
  *v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_19CE183BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a5[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = a6(a4, a5[7] + 40 * a1);
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

unint64_t sub_19CE18428(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 40 * result;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  v7 = (_QWORD *)(a5[7] + 16 * result);
  *v7 = a3;
  v7[1] = a4;
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_19CE18484()
{
  return sub_19CE19AA8(&qword_1EE439F60);
}

void *sub_19CE18490()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB05B0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_19CD23A14(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_19CD436B0(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_19CD433C0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE18674()
{
  return sub_19CE1BC6C(&qword_1ECEB0128);
}

void *sub_19CE18680()
{
  return sub_19CE1B900(&qword_1EE437178);
}

void *sub_19CE1868C()
{
  return sub_19CE1B900(&qword_1EE43BED0);
}

void *sub_19CE18698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D18);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v22 = *v20;
    v21 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19CE18850()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3318);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = 8 * v15;
    v22 = *(void **)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE18A1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F68);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE18BC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E1A0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE18D70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _OWORD v27[2];

  v1 = v0;
  v2 = sub_19CFE0310();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3E0);
  v7 = *v0;
  v8 = sub_19CFE03A0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v9;
    return result;
  }
  v25 = v1;
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v26 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v20, v2);
    v21 = 32 * v19;
    sub_19CD436B0(*(_QWORD *)(v7 + 56) + v21, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v20, v6, v2);
    result = sub_19CD433C0(v27, (_OWORD *)(*(_QWORD *)(v9 + 56) + v21));
  }
  v24 = v22 + 2;
  if (v24 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE18FAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43C3B0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_BYTE *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_BYTE *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    result = (void *)sub_19CCDB788(v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE19184()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B450);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1932C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F360);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (__int128 *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v23 = *v21;
    v24 = v21[1];
    *v22 = v19;
    v22[1] = v18;
    v25 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE194E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for MTMetricsIdentifier();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC20);
  v6 = *v0;
  v7 = sub_19CFE03A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_19CCFECEC(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v19;
    result = (void *)sub_19CCFE8AC((uint64_t)v5, *(_QWORD *)(v8 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_19CE19708()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3F0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v21 = *(void **)v20;
    LOBYTE(v20) = *(_BYTE *)(v20 + 8);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    v23 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v23 = v21;
    *(_BYTE *)(v23 + 8) = v20;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE198C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0BD0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_19CD23A14(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE19A9C()
{
  return sub_19CE19AA8(&qword_1EE439F58);
}

void *sub_19CE19AA8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CFE03A0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16) = *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE19C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEAFE70);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = v15 << 6;
    v17 = 8 * v15;
    v18 = v16 - v17;
    v19 = *(_QWORD *)(v2 + 48) + v18;
    v20 = *(_QWORD *)(v19 + 24);
    v21 = *(_QWORD *)(v19 + 48);
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    v23 = *(_QWORD *)(v4 + 48) + v18;
    v24 = *(_OWORD *)(v19 + 8);
    v25 = *(_OWORD *)(v19 + 32);
    *(_QWORD *)v23 = *(_QWORD *)v19;
    *(_OWORD *)(v23 + 8) = v24;
    *(_QWORD *)(v23 + 24) = v20;
    *(_OWORD *)(v23 + 32) = v25;
    *(_QWORD *)(v23 + 48) = v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE19E3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F98);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_19CD3BE5C(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1A000()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0BC8);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v20) = (_DWORD)v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1A1AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BEC8);
  v31 = v0;
  v1 = *v0;
  v2 = sub_19CFE03A0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v31 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v12)
      goto LABEL_26;
    v29 = *(_QWORD *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      v8 = v28 + 1;
      if (v28 + 1 >= v12)
        goto LABEL_26;
      v29 = *(_QWORD *)(v5 + 8 * v8);
      if (!v29)
        break;
    }
LABEL_25:
    v11 = (v29 - 1) & v29;
    v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 48 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v24 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    LOBYTE(v20) = *(_BYTE *)(v20 + 40);
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    *v26 = v17;
    v26[1] = v18;
    v27 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v27 = v21;
    *(_QWORD *)(v27 + 8) = v22;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v23;
    *(_QWORD *)(v27 + 32) = v25;
    *(_BYTE *)(v27 + 40) = v20;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v12)
    goto LABEL_26;
  v29 = *(_QWORD *)(v5 + 8 * v30);
  if (v29)
  {
    v8 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v29 = *(_QWORD *)(v5 + 8 * v8);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1A3B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43CD98);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1A56C()
{
  return sub_19CE1B108(&qword_1EE4372B0, (void (*)(_BYTE *, uint64_t))sub_19CCD14C4);
}

id sub_19CE1A580()
{
  return sub_19CE1BAB8(&qword_1EE43CAB0);
}

void *sub_19CE1A58C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for JetPackAsset(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F390);
  v6 = *v0;
  v7 = sub_19CFE03A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v27 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v28 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v29 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v29)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v12);
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_19CCFECEC(*(_QWORD *)(v6 + 56) + v22, (uint64_t)v5, type metadata accessor for JetPackAsset);
    v23 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    sub_19CCFE8AC((uint64_t)v5, *(_QWORD *)(v8 + 56) + v22, type metadata accessor for JetPackAsset);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE1A7D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD v20[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F380);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_19CD436B0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = sub_19CD433C0(v20, (_OWORD *)(*(_QWORD *)(v4 + 56) + 32 * v15));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1A98C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAFFF8);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v28 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_19CE1B550(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_19CE1AB80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3B0);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1AD20()
{
  return sub_19CE1AD2C(&qword_1EE439D08);
}

void *sub_19CE1AD2C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CFE03A0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v14)
        goto LABEL_26;
      v28 = *(_QWORD *)(v7 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 24 * v16;
    v22 = *(_QWORD *)(v3 + 56) + v21;
    v23 = *(_QWORD *)(v22 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    v25 = *(_OWORD *)v22;
    *v24 = v20;
    v24[1] = v19;
    v26 = *(_QWORD *)(v5 + 56) + v21;
    *(_OWORD *)v26 = v25;
    *(_QWORD *)(v26 + 16) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v14)
    goto LABEL_26;
  v28 = *(_QWORD *)(v7 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1AEE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439D10);
  v33 = v0;
  v1 = *v0;
  v2 = sub_19CFE03A0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v33 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v30 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v12)
      goto LABEL_26;
    v31 = *(_QWORD *)(v5 + 8 * v30);
    ++v8;
    if (!v31)
    {
      v8 = v30 + 1;
      if (v30 + 1 >= v12)
        goto LABEL_26;
      v31 = *(_QWORD *)(v5 + 8 * v8);
      if (!v31)
        break;
    }
LABEL_25:
    v11 = (v31 - 1) & v31;
    v14 = __clz(__rbit64(v31)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = v14 << 6;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    v26 = *(_QWORD *)(v20 + 56);
    v27 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v28 = *(_OWORD *)(v20 + 40);
    *v27 = v17;
    v27[1] = v18;
    v29 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v29 = v21;
    *(_QWORD *)(v29 + 8) = v22;
    *(_QWORD *)(v29 + 16) = v23;
    *(_QWORD *)(v29 + 24) = v24;
    *(_QWORD *)(v29 + 32) = v25;
    *(_OWORD *)(v29 + 40) = v28;
    *(_QWORD *)(v29 + 56) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v32 = v30 + 2;
  if (v32 >= v12)
    goto LABEL_26;
  v31 = *(_QWORD *)(v5 + 8 * v32);
  if (v31)
  {
    v8 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v31 = *(_QWORD *)(v5 + 8 * v8);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1B0F4()
{
  return sub_19CE1B108(&qword_1EE4372A8, (void (*)(_BYTE *, uint64_t))sub_19CCD14C4);
}

void *sub_19CE1B108(uint64_t *a1, void (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _BYTE v29[40];

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *v2;
  v6 = sub_19CFE03A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v4 = v7;
    return result;
  }
  v27 = v4;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = 40 * v17;
    sub_19CCD5B84(*(_QWORD *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    a2(v29, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v4 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE1B2F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F38);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_19CD23A14(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v17 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v16 + 32) = v24;
    *(_OWORD *)v16 = v18;
    *(_OWORD *)(v16 + 16) = v19;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19CE1B4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JetPackAsset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE1B514(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwta(a2, a1);
  return a2;
}

uint64_t sub_19CE1B550(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwcp(a2, a1);
  return a2;
}

void *sub_19CE1B58C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AFD8);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1B734()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0840);
  v2 = *v0;
  v3 = sub_19CFE03A0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v22 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v22;
    swift_bridgeObjectRetain();
    result = (void *)sub_19CD3BE5C(v22, *((unint64_t *)&v22 + 1));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1B8F4()
{
  return sub_19CE1B900(&qword_1EE43F3A0);
}

void *sub_19CE1B900(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CFE03A0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19CE1BAAC()
{
  return sub_19CE1BAB8(&qword_1EE43F398);
}

id sub_19CE1BAB8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CFE03A0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19CE1BC60()
{
  return sub_19CE1BC6C((uint64_t *)&unk_1ECEB0580);
}

void *sub_19CE1BC6C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CFE03A0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v14)
        goto LABEL_26;
      v28 = *(_QWORD *)(v7 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v17 = v16 << 6;
    v18 = 8 * v16;
    v19 = v17 - v18;
    v20 = *(_QWORD *)(v3 + 48) + v19;
    v21 = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 48);
    v23 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v18);
    v24 = *(_QWORD *)(v5 + 48) + v19;
    v25 = *(_OWORD *)(v20 + 8);
    v26 = *(_OWORD *)(v20 + 32);
    *(_QWORD *)v24 = *(_QWORD *)v20;
    *(_OWORD *)(v24 + 8) = v25;
    *(_QWORD *)(v24 + 24) = v21;
    *(_OWORD *)(v24 + 32) = v26;
    *(_QWORD *)(v24 + 48) = v22;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18) = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v14)
    goto LABEL_26;
  v28 = *(_QWORD *)(v7 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_19CE1BE58(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for ClickLocationData(a2, a1);
  return a2;
}

unint64_t sub_19CE1BE94(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A658);
  v3 = (_QWORD *)sub_19CFE03B8();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_19CD12748(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_19CD12748(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_19CE1BF90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3D0);
    v8 = (_QWORD *)sub_19CFE03B8();
    v9 = (char *)v6 + *(int *)(v2 + 48);
    v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v11 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_19CCF8C5C(v10, (uint64_t)v6, &qword_1EE43F3C8);
      v12 = *v6;
      result = sub_19CE121CC(*v6);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v8[6] + 8 * result) = v12;
      v16 = v8[7];
      v17 = sub_19CFDEDE0();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v15, v9, v17);
      v18 = v8[2];
      v19 = __OFADD__(v18, 1);
      v20 = v18 + 1;
      if (v19)
        goto LABEL_10;
      v8[2] = v20;
      v10 += v11;
      if (!--v7)
        return (unint64_t)v8;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_19CE1C0F8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3B0);
  v3 = (_QWORD *)sub_19CFE03B8();
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_19CE121CC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_19CE121CC(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_19CE1C1F0(const void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t result;
  _BYTE *v14;
  os_unfair_lock_s *v15;
  int v16;
  char *v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t);
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[400];
  _BYTE v28[408];

  v3 = sub_19CFDEF84();
  MEMORY[0x1E0C80A78](v3, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB01B8);
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v25 - v11;
  result = (unint64_t)sub_19CD376A0(a1, v28);
  if (*v1)
  {
    if (*v1 != 1)
    {
      sub_19CD376A0(v28, v27);
      v17 = (char *)&loc_19CE1C36C + *((int *)qword_19CE1C5C8 + sub_19CE1C76C((uint64_t)v27));
      __asm { BR              X10 }
    }
    if (qword_1ECEB1958 != -1)
      swift_once();
    v14 = (char *)off_1ECEB1948 + 16;
    v15 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
    swift_retain();
    os_unfair_lock_lock(v15);
    sub_19CD3EA18(v14, v27);
    os_unfair_lock_unlock(v15);
    v16 = v27[0];
    swift_release();
    if (v16 == 2)
    {
      if ((os_variant_has_internal_content() & 1) == 0)
      {
        while (1)
        {
LABEL_13:
          v19 = (void *)objc_opt_self();
          v20 = objc_msgSend(v19, sel_hours);
          sub_19CE1C788();
          sub_19CFDE9CC();
          v21 = objc_msgSend(v19, sel_seconds);
          sub_19CFDE9E4();

          v22 = *(void (**)(char *, uint64_t))(v26 + 8);
          v22(v8, v5);
          sub_19CFDE9D8();
          v24 = v23;
          v22(v12, v5);
          if (v24 < 0.0)
          {
            __break(1u);
          }
          else if ((~COERCE__INT64(v24 + v24) & 0x7FF0000000000000) != 0)
          {
            return sub_19CEC001C(0x20000000000001uLL);
          }
          __break(1u);
LABEL_19:
          swift_once();
LABEL_12:
          result = sub_19CD1C6A4(0xD00000000000001ALL, 0x800000019D0701A0);
          if ((v18 & 1) == 0)
            return result;
        }
      }
    }
    else if ((v16 & 1) == 0)
    {
      goto LABEL_13;
    }
    if (qword_1ECEB2920 != -1)
      goto LABEL_19;
    goto LABEL_12;
  }
  return result;
}

uint64_t PageRenderEventPrecision.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static PageRenderEventPrecision.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PageRenderEventPrecision.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE1C66C()
{
  unint64_t result;

  result = qword_1EE43F418[0];
  if (!qword_1EE43F418[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageRenderEventPrecision, &type metadata for PageRenderEventPrecision);
    atomic_store(result, qword_1EE43F418);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PageRenderEventPrecision(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CE1C6FC + 4 * byte_19D057315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CE1C730 + 4 * byte_19D057310[v4]))();
}

uint64_t sub_19CE1C730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE1C738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE1C740);
  return result;
}

uint64_t sub_19CE1C74C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE1C754);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CE1C758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE1C760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE1C76C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 376) >> 61;
}

uint64_t sub_19CE1C778(uint64_t result)
{
  *(_QWORD *)(result + 376) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t sub_19CE1C788()
{
  unint64_t result;

  result = qword_1EE4370D8;
  if (!qword_1EE4370D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE4370D8);
  }
  return result;
}

uint64_t dispatch thunk of MetricsEventLinter.processEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void __swiftcall JSRequestTimeOutError.init(route:timeoutInterval:)(JetEngine::JSRequestTimeOutError *__return_ptr retstr, JetEngine::JSRoute route, Swift::Double timeoutInterval)
{
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(route.service._countAndFlagsBits + 16);
  v4 = *(void **)(route.service._countAndFlagsBits + 24);
  retstr->route.service = *(Swift::String *)route.service._countAndFlagsBits;
  retstr->route.function._countAndFlagsBits = v3;
  retstr->route.function._object = v4;
  retstr->timeoutInterval = timeoutInterval;
}

uint64_t JSRequestTimeOutError.route.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double JSRequestTimeOutError.timeoutInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t JSRequestTimeOutError.errorDescription.getter()
{
  sub_19CFE010C();
  sub_19CFDF698();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFDFB84();
  sub_19CFDF698();
  return 0;
}

unint64_t sub_19CE1C968()
{
  unint64_t result;

  result = qword_1EE43A230;
  if (!qword_1EE43A230)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSRequestTimeOutError, &type metadata for JSRequestTimeOutError);
    atomic_store(result, (unint64_t *)&qword_1EE43A230);
  }
  return result;
}

_QWORD *initializeWithCopy for JSRequestTimeOutError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for JSRequestTimeOutError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for JSRequestTimeOutError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for JSRequestTimeOutError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSRequestTimeOutError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSRequestTimeOutError()
{
  return &type metadata for JSRequestTimeOutError;
}

unint64_t static IntentKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  v3 = sub_19CDB7F6C(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static IntentKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  void (*v44)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50[5];
  uint64_t v51[5];
  __int128 v52;
  unint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v6 = v4;
  v11 = dynamic_cast_existential_2_conditional(a1);
  if (v11)
  {
    v14 = v11;
    v15 = v12;
    v16 = v13;
    v46 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v17 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v17);
    v18 = v50[0];
    sub_19CF8EC64(0xD00000000000001FLL, 0x800000019D06EBD0, v50[0], (uint64_t)&v52);
    v19 = v53;
    swift_bridgeObjectRelease();
    if (!v19)
    {
      v20 = sub_19CE10A70(MEMORY[0x1E0DEE9D8]);
      *(_QWORD *)&v52 = v6;
      *((_QWORD *)&v52 + 1) = a3;
      v53 = v20;
      *(_QWORD *)&v54 = &type metadata for AnyIntentTypes;
      sub_19CD433C0(&v52, v51);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v56 = v50[0];
      sub_19CD13D40(v51, 0xD00000000000001FLL, 0x800000019D06EBD0, isUniquelyReferenced_nonNull_native);
      v22 = v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50[0] = v22;
      v18 = v22;
    }
    v23 = a2[3];
    v24 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v23);
    v56 = v18;
    swift_bridgeObjectRetain();
    v25 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v56);
    Decoder.withUserInfo(_:)(v25, v23, v24, v51);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v54 = v14;
    *((_QWORD *)&v54 + 1) = v15;
    v55 = v16;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v52);
    sub_19CFDFB90();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v52);
    }
    v49 = v54;
    v37 = v54;
    v38 = __swift_project_boxed_opaque_existential_1(&v52, v54);
    v39 = v46;
    *(_OWORD *)(v46 + 3) = v49;
LABEL_12:
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v39);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(boxed_opaque_existential_2Tm, v38, v37);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
  }
  v27 = dynamic_cast_existential_2_conditional(a1);
  if (v27)
  {
    v30 = v27;
    v31 = v28;
    v47 = a4;
    v48 = v29;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v32 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v32);
    v33 = v56;
    sub_19CF8EC64(0xD00000000000001FLL, 0x800000019D06EBD0, v56, (uint64_t)&v52);
    v34 = v53;
    swift_bridgeObjectRelease();
    if (!v34)
    {
      v35 = sub_19CE10A70(MEMORY[0x1E0DEE9D8]);
      *(_QWORD *)&v52 = v6;
      *((_QWORD *)&v52 + 1) = a3;
      v53 = v35;
      *(_QWORD *)&v54 = &type metadata for AnyIntentTypes;
      sub_19CD433C0(&v52, v51);
      swift_bridgeObjectRetain();
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v50[0] = v33;
      sub_19CD13D40(v51, 0xD00000000000001FLL, 0x800000019D06EBD0, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v56 = v33;
    }
    sub_19CCD5B84((uint64_t)a2, (uint64_t)v50);
    JSONObject.init(from:)(v50, v51);
    if (v5)
      return swift_bridgeObjectRelease();
    v50[0] = v33;
    v44 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v31 + 8);
    *(_QWORD *)&v54 = v30;
    *((_QWORD *)&v54 + 1) = v31;
    v55 = v48;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v52);
    swift_bridgeObjectRetain();
    v44(v51, v50, v30, v31);
    v37 = v54;
    v45 = v55;
    v38 = __swift_project_boxed_opaque_existential_1(&v52, v54);
    v39 = v47;
    v47[3] = v37;
    v47[4] = v45;
    goto LABEL_12;
  }
  v41 = sub_19CFE01B4();
  swift_allocError();
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
  *v43 = a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19CFE09B8();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52 = 60;
  *((_QWORD *)&v52 + 1) = 0xE100000000000000;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE019C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC450], v41);
  return swift_willThrow();
}

uint64_t static _IntentKindTable_Returning._table.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 8) + 16))();
  v5 = static StaticIntent.kind.getter();
  v7 = v6;
  v10 = type metadata accessor for StaticIntent(0, a2, v8, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19CE16E98(v10, v5, v7, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = static SidepackedIntent.kind.getter();
  v14 = v13;
  v17 = type metadata accessor for SidepackedIntent(0, a2, v15, v16);
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CE16E98(v17, v12, v14, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static _IntentKindTable_Returning._defaultType.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for StaticIntent(0, a2, a3, a4);
}

_QWORD *static _IntentKindTable_Returning._decode(_:from:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v15;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  result = (*(_QWORD *(**)(_QWORD *__return_ptr))(*(_QWORD *)(a3 + 8) + 40))(v17);
  if (!v4)
  {
    sub_19CCD5B84((uint64_t)v17, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A960);
    v19 = a2;
    swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_19CCD14C4(&v15, a4);
    }
    else
    {
      v9 = sub_19CFE01D8();
      swift_allocError();
      v11 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
      v12 = v18;
      v13 = __swift_project_boxed_opaque_existential_1(v17, v18);
      v11[3] = v12;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_2Tm, v13, v12);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19CFE09B8();
      v16[0] = 0;
      v16[1] = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DEC4B0], v9);
      swift_willThrow();
    }
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  return result;
}

uint64_t sub_19CE1D3B0(uint64_t *a1)
{
  return static _IntentKindTable_Returning._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19CE1D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static _IntentKindTable_Returning._defaultType.getter(a1, *(_QWORD *)(a1 + 24), a3, a4);
}

_QWORD *sub_19CE1D3C8@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_Returning._decode(_:from:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), a3);
}

uint64_t static _IntentKindTable_ReturningUnknown._defaultType.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for StaticIntent(0, a2, a3, a4);
}

uint64_t static _IntentKindTable_ReturningUnknown._unknownTypeWrapper.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for _OpaqueIntentModelBody(255, a2, a4, a4);
  v5 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _OpaqueIntentModelBody<A>, v4);
  return type metadata accessor for OpenIntentModel(0, v4, v5, v6);
}

_QWORD *static _IntentKindTable_ReturningUnknown._decode(_:from:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return static _IntentKindTable_Returning._decode(_:from:)(a1, a2, a3, a4);
}

uint64_t sub_19CE1D44C(_QWORD *a1)
{
  return static _IntentKindTable_ReturningUnknown._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19CE1D45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static _IntentKindTable_ReturningUnknown._defaultType.getter(a1, *(_QWORD *)(a1 + 24), a3, a4);
}

uint64_t sub_19CE1D464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static _IntentKindTable_ReturningUnknown._unknownTypeWrapper.getter(a1, *(_QWORD *)(a1 + 24), a3, *(_QWORD *)(a1 + 40));
}

_QWORD *sub_19CE1D470@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_ReturningUnknown._decode(_:from:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), a3);
}

uint64_t static _IntentKindTable_ReturningAny._defaultType.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for StaticIntent(0, a2, a3, a4);
}

_QWORD *static _IntentKindTable_ReturningAny._decode(_:from:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  result = static _IntentKindTable_Returning._decode(_:from:)(a1, a2, a3, (uint64_t)v16);
  if (!v4)
  {
    v8 = v17;
    v9 = v18;
    v10 = __swift_project_boxed_opaque_existential_1(v16, v17);
    v11 = MEMORY[0x1E0C80A78](v10, v10);
    v13 = (char *)&v16[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v14 + 16))(v13, v11);
    AnyIntentModel.init<A>(_:)((uint64_t)v13, a2, v8, v9, a4);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  return result;
}

uint64_t sub_19CE1D568(_QWORD *a1)
{
  return static _IntentKindTable_ReturningAny._table.getter(a1[2], a1[3], a1[4]);
}

uint64_t sub_19CE1D578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static _IntentKindTable_ReturningAny._defaultType.getter(a1, *(_QWORD *)(a1 + 24), a3, a4);
}

_QWORD *sub_19CE1D580@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return static _IntentKindTable_ReturningAny._decode(_:from:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), a3);
}

uint64_t dispatch thunk of static IntentKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for _IntentKindTable_Returning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentKindTable_Returning);
}

void type metadata accessor for _IntentKindTable_ReturningUnknown()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t type metadata accessor for _IntentKindTable_ReturningAny(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentKindTable_ReturningAny);
}

_QWORD *assignWithCopy for XpViewableThresholdFieldProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for XpViewableThresholdFieldProvider()
{
  return &type metadata for XpViewableThresholdFieldProvider;
}

uint64_t sub_19CE1D638(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v3[10] = a1;
  v3[11] = v4;
  v5 = v2[1];
  v3[12] = *v2;
  v3[13] = v5;
  return swift_task_switch();
}

uint64_t sub_19CE1D65C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 48) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_BYTE *)(v3 + 128) = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE1D6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
    v1 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEB418];
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(v0 + 16, 0xD000000000000013, 0x800000019D06EE20, v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AsyncObjectGraphMetrics.BuiltDependency.typeName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AsyncObjectGraphMetrics.BuiltDependency.typeName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AsyncObjectGraphMetrics.BuiltDependency.typeName.modify())()
{
  return nullsub_1;
}

double AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.modify())()
{
  return nullsub_1;
}

BOOL static AsyncObjectGraphMetrics.BuiltDependency.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_19CFE06A0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

BOOL sub_19CE1D870(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_19CFE06A0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t AsyncObjectGraphMetrics.builtDependencies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*Unstable.AsyncObjectGraphMetrics.BuiltDependency.typeName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19CE1D910;
}

uint64_t sub_19CE1D910(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

double (*Unstable.AsyncObjectGraphMetrics.BuiltDependency.elapsedTime.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 16);
  return sub_19CE1D990;
}

double sub_19CE1D990(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) = *(_QWORD *)a1;
  return result;
}

BOOL static Unstable.AsyncObjectGraphMetrics.BuiltDependency.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  BOOL v4;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_19CFE06A0() & 1) != 0) && v2 == v3;
}

BOOL sub_19CE1DA00(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  BOOL v4;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_19CFE06A0() & 1) != 0) && v2 == v3;
}

uint64_t Unstable.AsyncObjectGraphMetrics.builtDependencies.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CE4A320(0, v2, 0);
    v3 = v12;
    v4 = (uint64_t *)(v1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_19CE4A320(v9 > 1, v8 + 1, 1);
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = (_QWORD *)(v12 + 24 * v8);
      v10[4] = v6;
      v10[5] = v5;
      v10[6] = v7;
      v4 += 3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_19CE1DB58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE1DB64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE1DB70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

double sub_19CE1DBB0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

double sub_19CE1DBBC(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(a2 + 16) = *a1;
  return result;
}

_QWORD *_s9JetEngine23AsyncObjectGraphMetricsV15BuiltDependencyVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *_s9JetEngine23AsyncObjectGraphMetricsV15BuiltDependencyVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s37_DeprecateAsyncObjectGraphMetricsRuleOMa()
{
  return &_s37_DeprecateAsyncObjectGraphMetricsRuleON;
}

ValueMetadata *_s39_UndeprecateAsyncObjectGraphMetricsRuleOMa()
{
  return &_s39_UndeprecateAsyncObjectGraphMetricsRuleON;
}

uint64_t initializeWithCopy for FoundationValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FoundationValue(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for FoundationValue(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17AppearanceJournalC4TimeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FoundationValue()
{
  return &type metadata for FoundationValue;
}

void sub_19CE1DFA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _UNKNOWN **v12;
  ValueMetadata *v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;

  v4 = v3;
  sub_19CD436B0(v4, (uint64_t)&v15);
  sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  if (swift_dynamicCast())
    v8 = *(void **)&v14[0];
  else
    v8 = 0;
  if (!v8)
  {
    v15 = 0u;
    v16 = 0u;
LABEL_11:
    sub_19CCECFE4((uint64_t)&v15, &qword_1ECEB3370);
    v13 = 0;
    v12 = 0;
    v11 = 0;
    goto LABEL_12;
  }
  *(_QWORD *)&v15 = a1;
  *((_QWORD *)&v15 + 1) = a2;
  swift_bridgeObjectRetain_n();
  v9 = v8;
  v10 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_19CFE0808());
  swift_unknownObjectRelease();

  if (v10)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_19CCC290C((uint64_t)v14, (uint64_t)&v15, &qword_1ECEB3370);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_11;
  v11 = swift_allocObject();
  sub_19CD433C0(&v15, (_OWORD *)(v11 + 16));
  v12 = &off_1E3DCC5B0;
  v13 = &type metadata for FoundationValue;
LABEL_12:
  *a3 = v11;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = (uint64_t)v13;
  a3[4] = (uint64_t)v12;

}

uint64_t sub_19CE1E148()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_19CD436B0(v0, (uint64_t)&v8);
  sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  if (swift_dynamicCast())
    v1 = *(_QWORD *)&v7[0] == 0;
  else
    v1 = 1;
  if (v1)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_12:
    v5 = 0;
    goto LABEL_13;
  }
  v2 = *(id *)&v7[0];
  v3 = (void *)sub_19CFDF554();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();

  }
  else
  {

    memset(v7, 0, sizeof(v7));
  }
  sub_19CCC290C((uint64_t)v7, (uint64_t)&v8, &qword_1ECEB3370);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_12;
  v5 = 1;
LABEL_13:
  sub_19CCECFE4((uint64_t)&v8, &qword_1ECEB3370);
  return v5;
}

uint64_t sub_19CE1E284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v22 - v10;
  sub_19CD436B0(v2, (uint64_t)v28);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v24 = v26;
  v25 = v27;
  if (qword_1EE43C3C8 != -1)
    swift_once();
  v23 = *((_QWORD *)off_1EE43C310 + 2);
  if (!v23)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v19 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  v22 = a1;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    v13 = sub_19CD05558();
    v14 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setDateFormat_, v14);

    v15 = (void *)sub_19CFDF554();
    v16 = objc_msgSend(v13, sel_dateFromString_, v15);

    if (v16)
    {
      sub_19CFDEF60();

      v17 = sub_19CFDEF84();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
    }
    else
    {

      v17 = sub_19CFDEF84();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
    }
    sub_19CCC290C((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_1ECEB2040);
    sub_19CFDEF84();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) != 1)
      break;
    ++v12;
    sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1ECEB2040);
    if (v23 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v22;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v22, v11, v17);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
}

JSStringRef sub_19CE1E594(id a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  OpaqueJSString *v18;
  void *v19;
  JSStringRef result;
  JSValueRef v21;
  uint64_t v22;
  char string[8];
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v25 = *MEMORY[0x1E0C80C00];
  v4 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)string = 0;
  v7 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, sub_19CFE0688(), 0, string);
  swift_unknownObjectRelease();
  v8 = *(id *)string;
  if (!v7)
  {
    v19 = v8;
    sub_19CFDEC9C();

    swift_willThrow();
    return (JSStringRef)a1;
  }
  v9 = sub_19CFDEE70();
  v11 = v10;

  sub_19CFDF5B4();
  v12 = sub_19CFDF590();
  if (!v13)
  {
    sub_19CD3BE18(v9, v11);
    return 0;
  }
  v14 = v13;
  if ((v13 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v12 & 0x1000000000000000))
  {
    sub_19CFE0100();
    v18 = *(OpaqueJSString **)string;
    goto LABEL_13;
  }
  MEMORY[0x1E0C80A78](v12, v13);
  *(&v22 - 2) = (uint64_t)sub_19CCC2170;
  *(&v22 - 1) = 0;
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((v15 & 0x1000000000000000) != 0)
    {
      v16 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v17 = v15 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v16 = sub_19CFE01FC();
    }
    v18 = (OpaqueJSString *)sub_19CF2C980(v16, v17, (uint64_t (*)(void))sub_19CE1FCA0);
    goto LABEL_13;
  }
  *(_QWORD *)string = v15;
  v24 = v14 & 0xFFFFFFFFFFFFFFLL;
  result = JSStringCreateWithUTF8CString(string);
  if (result)
  {
    v18 = result;
LABEL_13:
    v21 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(a1, sel_JSGlobalContextRef), v18);
    if (v21)
    {
      a1 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, v21, a1);
      JSStringRelease(v18);
      sub_19CD3BE18(v9, v11);
      swift_bridgeObjectRelease();
      return (JSStringRef)a1;
    }
    JSStringRelease(v18);
    sub_19CD3BE18(v9, v11);
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE1E878()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[32];

  sub_19CD436B0(v0, (uint64_t)v3);
  if (swift_dynamicCast())
    return v2;
  else
    return 0;
}

uint64_t sub_19CE1E8D0()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[32];

  sub_19CD436B0(v0, (uint64_t)v3);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (swift_dynamicCast())
    return v2;
  else
    return 0;
}

id sub_19CE1E938(uint64_t a1, uint64_t a2)
{
  return sub_19CE1E950(a1, a2, (SEL *)&selRef_integerValue);
}

id sub_19CE1E944(uint64_t a1, uint64_t a2)
{
  return sub_19CE1E950(a1, a2, (SEL *)&selRef_unsignedIntegerValue);
}

id sub_19CE1E950(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v5;
  id v7;
  _BYTE v8[32];

  sub_19CD436B0(v3, (uint64_t)v8);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (!swift_dynamicCast())
    return 0;
  v5 = objc_msgSend(v7, *a3);

  return v5;
}

id sub_19CE1E9F0(uint64_t a1, uint64_t a2)
{
  return sub_19CE1E950(a1, a2, (SEL *)&selRef_longLongValue);
}

id sub_19CE1E9FC(uint64_t a1, uint64_t a2)
{
  return sub_19CE1E950(a1, a2, (SEL *)&selRef_unsignedLongLongValue);
}

unint64_t sub_19CE1EA08()
{
  uint64_t v0;
  int v1;
  unsigned __int8 v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  id v7;
  _BYTE v8[32];

  sub_19CD436B0(v0, (uint64_t)v8);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  v1 = swift_dynamicCast();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v7, sel_floatValue);
    v4 = v3;

    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 ^ 1u) << 32);
}

uint64_t sub_19CE1EAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v4;
  _BYTE v5[32];

  sub_19CD436B0(v0, (uint64_t)v5);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (!swift_dynamicCast())
    return 0;
  objc_msgSend(v4, sel_doubleValue);
  v2 = v1;

  return v2;
}

uint64_t sub_19CE1EB54()
{
  uint64_t v0;
  id v1;
  id v3;
  _BYTE v4[32];

  sub_19CD436B0(v0, (uint64_t)v4);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (!swift_dynamicCast())
    return 2;
  v1 = objc_msgSend(v3, sel_BOOLValue);

  return (uint64_t)v1;
}

void sub_19CE1EBE4(_OWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[32];

  sub_19CD436B0(v1, (uint64_t)v4);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2B88);
  if (swift_dynamicCast())
  {

    *a1 = 0u;
    a1[1] = 0u;
  }
  else
  {
    sub_19CD436B0(v1, (uint64_t)a1);
  }
}

uint64_t sub_19CE1EC70()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  _BYTE v4[32];

  sub_19CD436B0(v0, (uint64_t)v4);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2B88);
  v1 = swift_dynamicCast();
  if ((_DWORD)v1)

  return v1;
}

double sub_19CE1ECEC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  _BYTE v5[32];

  sub_19CD436B0(v1, (uint64_t)v5);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB1710);
  if (swift_dynamicCast())
  {
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC08);
    a1[4] = &off_1E3DDA9F8;
    *a1 = v4;
    a1[1] = sub_19CF4A14C;
    a1[2] = 0;
  }
  else
  {
    a1[4] = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

uint64_t sub_19CE1ED94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[32];

  v2 = v1;
  sub_19CD436B0(v2, (uint64_t)v5);
  return ScalarDictionary.Value.init(rawValue:)((uint64_t)v5, a1);
}

JSStringRef sub_19CE1EDD8(void *a1)
{
  return sub_19CE1E594(a1);
}

void sub_19CE1EDEC(void *a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  char v13;
  id v14;

  if (a2 == 2)
  {
    v5 = (void *)sub_19CFDF554();
    v6 = objc_msgSend(a1, sel_valueForProperty_, v5);

    if (v6)
    {
      if (sub_19CF2C480() == 6)
      {
        sub_19CDC98D8();
        v7 = (void *)swift_allocError();
        v9 = v8;
        v10 = v6;
        JSError.init(badValue:expected:)(v10, v9);
        swift_willThrow();

        *(_QWORD *)(a3 + 32) = 0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;

      }
      else
      {
        v14 = v6;
        v11 = sub_19CE1FCDC(v14);
        v13 = v12;

        *(_QWORD *)(a3 + 24) = &type metadata for DirectValue;
        *(_QWORD *)(a3 + 32) = &off_1E3DC91E0;
        *(_QWORD *)a3 = v11;
        *(_BYTE *)(a3 + 8) = v13;

      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

void sub_19CE1EF38(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;

  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(a3, sel_hasProperty_, v4);

  if (v5)
  {
    v6 = (void *)sub_19CFDF554();
    v7 = objc_msgSend(a3, sel_valueForProperty_, v6);

    if (v7)
    {
      sub_19CF2C480();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_19CE1EFEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;

  if ((objc_msgSend(a1, sel_isString) & 1) != 0)
  {
    result = (uint64_t)sub_19CEB8078();
    if (v5)
    {
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
      *(_QWORD *)a2 = result;
      *(_QWORD *)(a2 + 8) = v5;
      return result;
    }
LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if ((objc_msgSend(a1, sel_isNumber) & 1) != 0)
  {
    result = (uint64_t)objc_msgSend(a1, sel_toNumber);
    if (result)
    {
      v6 = result;
      result = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
      *(_QWORD *)(a2 + 24) = result;
      *(_QWORD *)a2 = v6;
      return result;
    }
    goto LABEL_9;
  }
  if ((objc_msgSend(a1, sel_isArray) & 1) == 0)
  {
    if ((objc_msgSend(a1, sel_isBoolean) & 1) != 0)
    {
      result = (uint64_t)objc_msgSend(a1, sel_toBool);
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEAFA0];
      *(_BYTE *)a2 = result;
      return result;
    }
    if ((objc_msgSend(a1, sel_isNull) & 1) != 0)
    {
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
      result = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2B88);
      *(_QWORD *)(a2 + 24) = result;
      *(_QWORD *)a2 = v7;
      return result;
    }
    result = (uint64_t)JSValue.isJSONObject.getter();
    if ((result & 1) == 0)
      goto LABEL_9;
  }
  sub_19CE23FF0();
  sub_19CCF8C5C((uint64_t)&v13, (uint64_t)&v10, &qword_1ECEB1328);
  v8 = *((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v10, &qword_1ECEB1328);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return sub_19CD3E3F8((uint64_t)&v13);
}

id sub_19CE1F3D4(void *a1)
{
  id result;
  void *v3;
  const OpaqueJSContext *v4;
  OpaqueJSString *v5;
  OpaqueJSString *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;

  if (!objc_msgSend(a1, sel_isString))
    return 0;
  result = objc_msgSend(a1, sel_context);
  if (result)
  {
    v3 = result;
    v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    v5 = JSValueToStringCopy(v4, (JSValueRef)objc_msgSend(a1, sel_JSValueRef), 0);
    if (v5)
    {
      v6 = v5;
      v7 = sub_19CDB8958(v5);
      JSStringRelease(v6);
      return (id)v7;
    }
    sub_19CDC98D8();
    v8 = (void *)swift_allocError();
    v10 = v9;
    v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();
    v12 = objc_msgSend(v11, sel_toString);
    if (v12)
    {
      v13 = v12;
      v7 = sub_19CFDF578();

      return (id)v7;
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_19CE1F528(void *a1)
{
  id v2;
  id v3;
  void *v4;

  if (objc_msgSend(a1, sel_isNumber))
    return (id)(int)objc_msgSend(a1, sel_toInt32);
  if (!objc_msgSend(a1, sel_isNumber))
    return 0;
  v3 = objc_msgSend(a1, sel_toNumber);
  if (!v3)
    return 0;
  v4 = v3;
  v2 = objc_msgSend(v3, sel_integerValue);

  return v2;
}

id sub_19CE1F5C8(void *a1)
{
  id v2;
  id v3;
  void *v4;

  if (objc_msgSend(a1, sel_isNumber))
    return (id)objc_msgSend(a1, sel_toUInt32);
  if (!objc_msgSend(a1, sel_isNumber))
    return 0;
  v3 = objc_msgSend(a1, sel_toNumber);
  if (!v3)
    return 0;
  v4 = v3;
  v2 = objc_msgSend(v3, sel_unsignedIntegerValue);

  return v2;
}

id sub_19CE1F668(void *a1)
{
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  if (objc_msgSend(a1, sel_isNumber))
  {
    objc_msgSend(a1, sel_toDouble);
    return (id)v2;
  }
  else if (objc_msgSend(a1, sel_isNumber))
  {
    result = objc_msgSend(a1, sel_toNumber);
    if (result)
    {
      v4 = result;
      objc_msgSend(result, sel_doubleValue);
      v6 = v5;

      return (id)v6;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

void sub_19CE1F710(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  void *v4;
  id v5;
  unsigned int v6;
  id v7;
  id v8;
  uint64_t v9;

  v3 = a1;
  if (objc_msgSend(v3, sel_isArray))
  {
    v4 = (void *)sub_19CFDF554();
    v5 = objc_msgSend(v3, sel_valueForProperty_, v4);

    if (v5)
    {
      v6 = objc_msgSend(v5, sel_toUInt32);

      v7 = v3;
      v8 = sub_19CF9F684(0, v6, v7);

      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F5B8);
      *a2 = v8;
      a2[1] = sub_19CF4A1A0;
      a2[2] = 0;
      a2[3] = v9;
      a2[4] = &off_1E3DDA9F8;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
}

uint64_t sub_19CE1F820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  unsigned __int8 v9;
  _QWORD v10[3];
  uint64_t v11;

  if ((objc_msgSend(a1, sel_isString) & 1) == 0)
  {
    if ((objc_msgSend(a1, sel_isNumber) & 1) != 0)
    {
      if (objc_msgSend(a1, sel_isNumber))
        v7 = objc_msgSend(a1, sel_toNumber);
      else
        v7 = 0;
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F5B0);
      v10[0] = v7;
      return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
    }
    result = (uint64_t)objc_msgSend(a1, sel_isArray);
    if ((result & 1) == 0)
    {
      if ((objc_msgSend(a1, sel_isBoolean) & 1) != 0)
      {
        v9 = objc_msgSend(a1, sel_toBool);
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BE90);
        LOBYTE(v10[0]) = v9;
        return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
      }
      result = (uint64_t)objc_msgSend(a1, sel_isNull);
      if ((result & 1) == 0)
        result = (uint64_t)JSValue.isJSONObject.getter();
    }
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = -1;
    return result;
  }
  v4 = sub_19CE1F3D4(a1);
  v6 = v5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  v10[0] = v4;
  v10[1] = v6;
  return ScalarDictionary.Value.init(rawValue:)((uint64_t)v10, a2);
}

void sub_19CE1F96C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_19CE1EDEC(*(void **)v1, *(_BYTE *)(v1 + 8), a1);
}

void sub_19CE1F978(uint64_t a1, uint64_t a2)
{
  void **v2;

  sub_19CE1EF38(a1, a2, *v2);
}

id sub_19CE1F980()
{
  void **v0;

  return sub_19CE1F3D4(*v0);
}

id sub_19CE1F988()
{
  id *v0;
  id v1;

  v1 = *v0;
  if (objc_msgSend(*v0, sel_isNumber))
    return objc_msgSend(v1, sel_toNumber);
  else
    return 0;
}

id sub_19CE1F9D8()
{
  void **v0;

  return sub_19CE1F528(*v0);
}

id sub_19CE1F9F4()
{
  void **v0;

  return sub_19CE1F5C8(*v0);
}

id sub_19CE1FA10(uint64_t a1, uint64_t a2)
{
  return sub_19CE1FA28(a1, a2, (SEL *)&selRef_longLongValue);
}

id sub_19CE1FA1C(uint64_t a1, uint64_t a2)
{
  return sub_19CE1FA28(a1, a2, (SEL *)&selRef_unsignedLongLongValue);
}

id sub_19CE1FA28(uint64_t a1, uint64_t a2, SEL *a3)
{
  void **v3;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v5 = *v3;
  if (!objc_msgSend(v5, sel_isNumber))
    return 0;
  v6 = objc_msgSend(v5, sel_toNumber);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = objc_msgSend(v6, *a3);

  return v8;
}

unint64_t sub_19CE1FAA0()
{
  id *v0;
  id v1;
  id v2;
  void *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned __int8 v6;
  uint64_t v7;

  v1 = *v0;
  if (objc_msgSend(*v0, sel_isNumber)
    && (v2 = objc_msgSend(v1, sel_toNumber)) != 0)
  {
    v3 = v2;
    objc_msgSend(v2, sel_floatValue);
    v5 = v4;

    v6 = 0;
    v7 = v5;
  }
  else
  {
    v7 = 0;
    v6 = 1;
  }
  return v7 | ((unint64_t)v6 << 32);
}

id sub_19CE1FB34()
{
  void **v0;

  return sub_19CE1F668(*v0);
}

id sub_19CE1FB50()
{
  id *v0;

  return objc_msgSend(*v0, sel_toBool);
}

uint64_t sub_19CE1FB70@<X0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_19CE1EFEC(*v1, a1);
}

uint64_t sub_19CE1FB78()
{
  id *v0;
  id v1;

  v1 = *v0;
  if ((objc_msgSend(*v0, sel_isNull) & 1) != 0)
    return 1;
  else
    return (uint64_t)objc_msgSend(v1, sel_isUndefined);
}

uint64_t sub_19CE1FBC0@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_toDate);
  if (v3)
  {
    v4 = v3;
    sub_19CFDEF60();

    v5 = sub_19CFDEF84();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_19CFDEF84();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_19CE1FC44(_QWORD *a1@<X8>)
{
  void **v1;

  sub_19CE1F710(*v1, a1);
}

uint64_t sub_19CE1FC4C@<X0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_19CE1F820(*v1, a1);
}

void *sub_19CE1FC74()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = v1;
  return v1;
}

_QWORD *sub_19CE1FCA0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_19CF2C9B8(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_19CE1FCB8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

id sub_19CE1FCDC(void *a1)
{
  id v1;

  v1 = a1;
  if ((objc_msgSend(v1, sel_isString) & 1) == 0
    && !objc_msgSend(v1, sel_isNumber)
    && (objc_msgSend(v1, sel_isArray) & 1) == 0
    && (objc_msgSend(v1, sel_isBoolean) & 1) == 0
    && (objc_msgSend(v1, sel_isNull) & 1) == 0)
  {
    JSValue.isJSONObject.getter();
  }
  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for QueryExpression.Rule(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryExpression.Rule(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryExpression.Rule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectValue()
{
  return &type metadata for DirectValue;
}

ValueMetadata *type metadata accessor for XpViewablePercentageFieldProvider()
{
  return &type metadata for XpViewablePercentageFieldProvider;
}

uint64_t sub_19CE1FF00(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v3[10] = a1;
  v3[11] = v4;
  v5 = v2[1];
  v3[12] = *v2;
  v3[13] = v5;
  return swift_task_switch();
}

uint64_t sub_19CE1FF24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 48) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_BYTE *)(v3 + 128) = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE1FF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
    v1 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEB070];
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(v0 + 16, 0xD000000000000014, 0x800000019D06EE00, v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2004C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A540);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE437520 = result;
  return result;
}

JetEngine::JSTimeoutError __swiftcall JSTimeoutError.init(requestDescription:timeoutInterval:)(Swift::String requestDescription, Swift::Double timeoutInterval)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  void *v9;
  double v10;
  JetEngine::JSTimeoutError result;

  object = requestDescription._object;
  countAndFlagsBits = requestDescription._countAndFlagsBits;
  v6 = v2;
  v7 = sub_19CE2020C();
  *(_BYTE *)v6 = v7 & 1;
  *(_QWORD *)(v6 + 8) = countAndFlagsBits;
  *(_QWORD *)(v6 + 16) = object;
  *(Swift::Double *)(v6 + 24) = timeoutInterval;
  result.timeoutInterval = v10;
  result.requestDescription._object = v9;
  result.requestDescription._countAndFlagsBits = v8;
  result._likelyHadNetworkConnection = v7;
  return result;
}

uint64_t JSTimeoutError.requestDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

double JSTimeoutError.timeoutInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t JSTimeoutError.errorDescription.getter()
{
  sub_19CFE010C();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFDFB84();
  sub_19CFDF698();
  return 0;
}

NSObject *sub_19CE2020C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *result;
  nw_path_status_t status;
  void (*v4)(_QWORD *__return_ptr, uint64_t);

  if (qword_1EE437518 != -1)
    swift_once();
  v0 = sub_19CFE0A6C();
  v1 = (uint64_t)v4;
  if (v4)
  {
    v4(&v4, v0);
    sub_19CCE9F48(v1);
    return v4;
  }
  result = nw_path_create_default_evaluator();
  if (result)
  {
    result = nw_path_evaluator_copy_path();
    if (result)
    {
      status = nw_path_get_status(result);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return (((status - 1) & 0xFFFFFFFD) == 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_19CE202DC()
{
  unint64_t result;

  result = qword_1EE43B1F0;
  if (!qword_1EE43B1F0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSTimeoutError, &type metadata for JSTimeoutError);
    atomic_store(result, (unint64_t *)&qword_1EE43B1F0);
  }
  return result;
}

uint64_t initializeWithCopy for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for JSTimeoutError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSTimeoutError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSTimeoutError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSTimeoutError()
{
  return &type metadata for JSTimeoutError;
}

_QWORD *sub_19CE20494(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;

  v4[17] = 0;
  v4[19] = 0;
  v4[2] = a3;
  v4[3] = a4;
  v4[4] = swift_slowAlloc();
  v4[5] = swift_slowAlloc();
  sub_19CCD14C4(a1, (uint64_t)(v4 + 6));
  sub_19CCD14C4(a2, (uint64_t)(v4 + 11));
  v4[16] = 0;
  v8 = v4[4];
  swift_beginAccess();
  v4[17] = v8;
  v4[18] = a4;
  v9 = v4[5];
  swift_beginAccess();
  v4[19] = v9;
  v4[20] = 0;
  return v4;
}

uint64_t sub_19CE20564()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1A1ADBE9C](*(_QWORD *)(v0 + 32), -1, -1);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
    MEMORY[0x1A1ADBE9C](v1, -1, -1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrotliCursor()
{
  return objc_opt_self();
}

uint64_t sub_19CE205D4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = v0;
  result = swift_beginAccess();
  if (!v0[16])
  {
    v4 = v0[9];
    v5 = v0[10];
    __swift_project_boxed_opaque_existential_1(v0 + 6, v4);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    if ((result & 1) != 0)
    {
      v6 = v0[9];
      v7 = v0[10];
      __swift_project_boxed_opaque_existential_1(v0 + 6, v6);
      v8 = v0[4];
      result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 32))(v8, v0[2], v6, v7);
      if (!v1)
      {
        v9 = result;
        v2[16] = result;
        result = swift_beginAccess();
        v2[17] = v8;
        v10 = v2[20];
        v11 = __OFADD__(v10, v9);
        v12 = v10 + v9;
        if (v11)
          __break(1u);
        else
          v2[20] = v12;
      }
    }
  }
  return result;
}

uint64_t sub_19CE206C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v2 = v0;
  v3 = v0[3];
  result = swift_beginAccess();
  v5 = v0[18];
  v6 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 < 1)
    return result;
  sub_19CCD5B84((uint64_t)(v2 + 11), (uint64_t)v10);
  v7 = v11;
  v8 = v12;
  result = (uint64_t)__swift_project_boxed_opaque_existential_1(v10, v11);
  v9 = v2[5];
  if (!v9)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v8 + 16))(v2[5], v6, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (!v1)
  {
    v2[18] = v3;
    result = swift_beginAccess();
    v2[19] = v9;
  }
  return result;
}

void sub_19CE207B4(void (*a1)(uint64_t, double))
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  id v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t *v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  char v39;
  void *v40;
  char v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  __int128 v46[2];
  __int128 v47[3];

  v3 = v2;
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)JEBrotliEncoder), sel_init);
  if (!v9)
  {
    sub_19CE20CEC();
    swift_allocError();
    *v36 = 4;
    swift_willThrow();
    return;
  }
  v10 = v9;
  objc_msgSend(v9, sel_setQuality_, 11);
  v39 = v8;
  if ((v8 & 1) != 0)
    goto LABEL_6;
  if ((v6 & 0x8000000000000000) == 0 && !HIDWORD(v6))
  {
    objc_msgSend(v10, sel_setSizeHint_, v6);
LABEL_6:
    sub_19CCD5B84((uint64_t)v1, (uint64_t)v47);
    sub_19CCD5B84((uint64_t)(v1 + 5), (uint64_t)v46);
    type metadata accessor for BrotliCursor();
    swift_initStackObject();
    v11 = sub_19CE20494(v47, v46, 0x80000, 0x80000);
    v12 = v11 + 16;
    v13 = v11 + 6;
    v14 = v11 + 18;
    v15 = v11 + 19;
    swift_beginAccess();
    swift_beginAccess();
    v42 = v8 | (a1 == 0);
    v16 = (double)v6;
    v40 = v10;
    while (1)
    {
      if (!*v12)
      {
        v17 = v11[9];
        v18 = v11[10];
        __swift_project_boxed_opaque_existential_1(v13, v17);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18) & 1) != 0)
        {
          v19 = v11[9];
          v20 = v11[10];
          __swift_project_boxed_opaque_existential_1(v13, v19);
          v21 = v11[4];
          v22 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 32))(v21, v11[2], v19, v20);
          if (v3)
          {
            swift_release();

            return;
          }
          v11[16] = v22;
          v11[17] = v21;
          v23 = v11[20];
          v24 = __OFADD__(v23, v22);
          v25 = v23 + v22;
          v10 = v40;
          if (v24)
          {
            __break(1u);
LABEL_35:
            __break(1u);
            break;
          }
          v11[20] = v25;
          v13 = v11 + 6;
        }
        v15 = v11 + 19;
      }
      v31 = v11[9];
      v32 = v11[10];
      __swift_project_boxed_opaque_existential_1(v13, v31);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32) & 1) != 0)
        v33 = 0;
      else
        v33 = 2;
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      v34 = objc_msgSend(v10, sel_compressStreamWithOperation_availableIn_nextIn_availableOut_nextOut_, v33, v12, v11 + 17, v14, v15);
      swift_endAccess();
      swift_endAccess();
      swift_endAccess();
      v35 = swift_endAccess();
      if ((v34 & 1) == 0)
      {
        sub_19CF13494(0xD000000000000031, 0x800000019D070350);
        sub_19CE20CEC();
        swift_allocError();
        *v37 = 3;
        swift_willThrow();
LABEL_31:
        swift_release();

        return;
      }
      if ((v42 & 1) == 0)
        a1(v35, (double)(uint64_t)v11[20] / v16);
      if (!*v14)
      {
        v26 = v11[3];
        if (v26 >= 1)
        {
          v27 = v3;
          sub_19CCD5B84((uint64_t)(v11 + 11), (uint64_t)v43);
          v29 = v44;
          v28 = v45;
          __swift_project_boxed_opaque_existential_1(v43, v44);
          v30 = v11[5];
          if (!v30)
            goto LABEL_35;
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v28 + 16))(v11[5], v26, v29, v28);
          v3 = v27;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
          if (v27)
          {

            swift_release();
            return;
          }
          *v14 = v26;
          v15 = v11 + 19;
          v11[19] = v30;
          v10 = v40;
        }
      }
      v13 = v11 + 6;
      if (objc_msgSend(v10, sel_isFinished))
      {
        v38 = sub_19CE206C8();
        if (!v3 && (v39 & 1) != 0)
        {
          if (a1)
            a1(v38, 1.0);
        }
        goto LABEL_31;
      }
    }
  }
  sub_19CFE0334();
  __break(1u);
}

unint64_t sub_19CE20CEC()
{
  unint64_t result;

  result = qword_1EE43F5D0;
  if (!qword_1EE43F5D0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053F50, &type metadata for PackageCompressionError);
    atomic_store(result, (unint64_t *)&qword_1EE43F5D0);
  }
  return result;
}

void sub_19CE20D30()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE *v36;
  _QWORD *v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __int128 v49[2];
  __int128 v50[3];
  _QWORD *v51;

  v2 = objc_msgSend(objc_allocWithZone((Class)JEBrotliDecoder), sel_init);
  if (!v2)
  {
    sub_19CE20CEC();
    swift_allocError();
    *v5 = 4;
    swift_willThrow();
    return;
  }
  v3 = v2;
  sub_19CCD5B84(v0, (uint64_t)v50);
  sub_19CCD5B84(v0 + 40, (uint64_t)v49);
  type metadata accessor for BrotliCursor();
  swift_initStackObject();
  v4 = sub_19CE20494(v50, v49, 0x80000, 0x80000);
  sub_19CE205D4();
  if (v1)
  {
LABEL_3:
    swift_release();

    return;
  }
  v41 = v4 + 17;
  v42 = v4 + 16;
  v6 = v4 + 18;
  v51 = v4 + 19;
  v38 = v3;
  v39 = (uint64_t)(v4 + 11);
  v7 = v4 + 6;
  v37 = v4;
  v40 = v4 + 6;
  while (1)
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    v8 = v51;
    swift_beginAccess();
    v9 = (uint64_t)objc_msgSend(v3, sel_decompressStreamWithAvailableIn_nextIn_availableOut_nextOut_, v42, v41, v6, v8);
    swift_endAccess();
    swift_endAccess();
    swift_endAccess();
    swift_endAccess();
    if (v9 != 1 && v9 != 3)
    {
      if (v9 != 2)
      {
        v43 = 0;
        v44 = 0xE000000000000000;
        sub_19CFE010C();
        sub_19CFDF698();
        v47 = v9;
        type metadata accessor for JEBrotliDecoderResult(0);
        sub_19CFE02E0();
        sub_19CFDF698();
        v47 = v9;
        sub_19CFE0598();
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CF13494(v43, v44);
        swift_bridgeObjectRelease();
        sub_19CE20CEC();
        swift_allocError();
        *v32 = 2;
        swift_willThrow();
        goto LABEL_3;
      }
      if (!*v42)
      {
        v17 = v4;
        v18 = v4[9];
        v19 = v4[10];
        __swift_project_boxed_opaque_existential_1(v7, v18);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19) & 1) != 0)
        {
          v20 = v7;
          v21 = v17[9];
          v22 = v17[10];
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v23 = v17[4];
          v24 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 32))(v23, v17[2], v21, v22);
          v17[16] = v24;
          v17[17] = v23;
          v25 = v17[20];
          v26 = __OFADD__(v25, v24);
          v27 = v25 + v24;
          if (v26)
            goto LABEL_31;
          v4 = v17;
          v17[20] = v27;
          v7 = v40;
        }
        else
        {
          v24 = *v42;
          v4 = v17;
        }
        if (!v24)
        {
          v43 = 0;
          v44 = 0xE000000000000000;
          sub_19CFE010C();
          sub_19CFDF698();
          v47 = v4[20];
          sub_19CFE0598();
          sub_19CFDF698();
          swift_bridgeObjectRelease();
          sub_19CFDF698();
          v33 = v4[9];
          v34 = v4[10];
          __swift_project_boxed_opaque_existential_1(v7, v33);
          v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
          v48 = v35 & 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C810);
          sub_19CFDF5E4();
          sub_19CFDF698();
          swift_bridgeObjectRelease();
          sub_19CFDF698();
          sub_19CF13494(v43, v44);
          swift_bridgeObjectRelease();
          sub_19CE20CEC();
          swift_allocError();
          *v36 = 2;
          swift_willThrow();
          goto LABEL_3;
        }
      }
LABEL_24:
      if (*v6)
        goto LABEL_6;
LABEL_25:
      v28 = v4[3];
      if (v28 >= 1)
      {
        sub_19CCD5B84(v39, (uint64_t)&v43);
        v29 = v45;
        v30 = v46;
        __swift_project_boxed_opaque_existential_1(&v43, v45);
        v31 = v4[5];
        if (!v31)
          goto LABEL_33;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v28, v29, v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
        *v6 = v28;
        *v51 = v31;
        v4 = v37;
        v3 = v38;
        v7 = v40;
      }
      goto LABEL_6;
    }
    v11 = v4[3];
    v12 = v4[18];
    v13 = v11 - v12;
    if (__OFSUB__(v11, v12))
      break;
    if (v13 < 1)
      goto LABEL_24;
    sub_19CCD5B84(v39, (uint64_t)&v43);
    v15 = v45;
    v14 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    v16 = v4[5];
    if (!v16)
      goto LABEL_32;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(v16, v13, v15, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    *v6 = v11;
    *v51 = v16;
    v4 = v37;
    v3 = v38;
    v7 = v40;
    if (!v11)
      goto LABEL_25;
LABEL_6:
    if ((v9 & 0xFFFFFFFFFFFFFFFELL) != 2)
      goto LABEL_3;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

ValueMetadata *type metadata accessor for BrotliPackageCompressor()
{
  return &type metadata for BrotliPackageCompressor;
}

uint64_t CustomIntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[4] = a7;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a4;
  return swift_task_switch();
}

uint64_t sub_19CE21368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_2Tm;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(uint64_t **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v3[3] = v4;
  v3[4] = *(_QWORD *)(v1 + 8);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_2Tm, v2, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;

  v8[13] = a7;
  v8[14] = v7;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  v10 = sub_19CFDFF5C();
  v8[16] = v10;
  v8[17] = *(_QWORD *)(v10 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE21478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 104) + 40))(*(_QWORD *)(v0 + 88));
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
  static StaticIntent._unwrapData<A>(of:)(v3, v4, v5, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 72);
    v15 = *(_OWORD *)(v0 + 96);
    v16 = *(_OWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v8;
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_QWORD *)(v8 + 48) = v0 + 16;
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v9;
    *v9 = v0;
    v9[1] = sub_19CE21610;
    return sub_19CF518B0(*(_QWORD *)(v0 + 56), (uint64_t)&unk_1EE43F5F0, v8, *(_QWORD *)(v0 + 120));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 32);
    v14(v11, *(_QWORD *)(v0 + 144), v12);
    v14(v13, v11, v12);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CE21610()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE2167C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE216C8()
{
  uint64_t v0;

  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE21724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE21748()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t (*v9)(_QWORD, _QWORD *, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);

  v1 = v0[8];
  v2 = (_QWORD *)v0[3];
  v3 = v2[3];
  v4 = v2[4];
  v5 = __swift_project_boxed_opaque_existential_1(v2, v3);
  v9 = (uint64_t (*)(_QWORD, _QWORD *, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v0[10] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *v6 = v0;
  v6[1] = sub_19CE21810;
  return v9(v0[2], v5, v0[5], AssociatedTypeWitness, v3, v4, v0[6], v0[8]);
}

uint64_t sub_19CE21810()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE21858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(v1 + 64);
  v5 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_19CD579FC;
  *(_OWORD *)(v5 + 48) = v8;
  *(_OWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE218D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v11;
  *v11 = v8;
  v11[1] = sub_19CCBE344;
  v11[4] = &protocol witness table for _IntentReplayDispatcher;
  v11[5] = v7;
  v11[2] = a1;
  v11[3] = a7;
  return swift_task_switch();
}

uint64_t sub_19CE21950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_19CD579FC;
  return CustomIntentDispatcher.dispatch<A>(_:objectGraph:)(a1, a2, a3, a6, a4, (uint64_t)&protocol witness table for _IntentReplayDispatcher, a5);
}

uint64_t dispatch thunk of CustomIntentDispatcher.perform<A, B>(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 16) + *(_QWORD *)(a8 + 16));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_19CCBE344;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t BaseObjectGraph.inject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return BaseObjectGraph._inject<A>(_:)(a1, a2, a3, a4);
}

double JSError.init(badValue:expected:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  double result;

  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v4 = objc_msgSend(a1, sel_description);
  sub_19CFDF578();

  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();

  *(_QWORD *)a2 = 0x6465746365707845;
  *(_QWORD *)(a2 + 8) = 0xEA00000000006020;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  result = 0.0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_QWORD *)(a2 + 96) = 0;
  return result;
}

uint64_t sub_19CE21C54(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_19CD3C8F8(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x1A1AD9838](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_19CD3C8F8(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19CE21D50(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_19CFE01FC();
      v7 = (uint64_t)sub_19CDE6D78(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_19CE25A28(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t JSError.init(message:line:column:sourceURL:constructorName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = 0;
  *(_QWORD *)(a9 + 72) = 0;
  *(_QWORD *)(a9 + 80) = 0;
  *(_QWORD *)(a9 + 88) = a10;
  *(_QWORD *)(a9 + 96) = a11;
  return result;
}

void sub_19CE21FD0(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  void *v22;
  id v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v5 = v28;
    v6 = v29;
    v7 = v30;
    v8 = v31;
    v9 = v32;
    v10 = v33;
    v11 = v34;
    v12 = v35;
    v13 = v36;
    v14 = v37;
  }
  else
  {
    v15 = (void *)sub_19CFDEC90();
    v16 = objc_msgSend(v15, sel_domain);

    v17 = sub_19CFDF578();
    v19 = v18;

    v20 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19CE16FE8(v17, v19, 3, 0xD000000000000017, 0x800000019D070470, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v22 = (void *)sub_19CFDEC90();
    v23 = objc_msgSend(v22, sel_code);

    v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CE16FE8((uint64_t)v23, 0, 2, 0xD000000000000015, 0x800000019D070490, v24);
    *(_QWORD *)&v25 = v20;
    v27 = v25;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v5 = sub_19CFE0868();
    v6 = v26;

    v12 = v27;
    v7 = 0;
    v9 = 0;
    v14 = 0;
    v11 = 0uLL;
    v8 = 1;
    v13 = 0uLL;
    v10 = 1;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_OWORD *)(a2 + 80) = v13;
  *(_QWORD *)(a2 + 96) = v14;
}

void JSError.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  signed int v20;
  void *v21;
  id v22;
  signed int v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;

  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(a1, sel_valueForProperty_, v4);

  if (!v5)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_22;
  }
  sub_19CE23FF0();

  sub_19CCF8C5C((uint64_t)&v42, (uint64_t)&v39, &qword_1EE43C2D8);
  if (*((_QWORD *)&v40 + 1) == 1)
  {
    v6 = 0;
  }
  else
  {
    v36[0] = v39;
    v36[1] = v40;
    v37 = v41;
    sub_19CD3E448((uint64_t)v36, (uint64_t)v35);
    sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    ScalarDictionary.init(deserializing:using:)((uint64_t)v35, &v38);
    v6 = v38;
    sub_19CD3E3F8((uint64_t)v36);
  }
  sub_19CCECFE4((uint64_t)&v42, &qword_1EE43C2D8);
  v7 = (void *)sub_19CFDF554();
  v8 = objc_msgSend(a1, sel_valueForProperty_, v7);

  if (!v8)
    goto LABEL_20;
  if (objc_msgSend(v8, sel_isString))
  {
    v9 = objc_msgSend(v8, sel_toString);
    if (v9)
    {
      v10 = v6;
      v11 = sub_19CFDF578();
      v13 = v12;

      v9 = sub_19CE234D8(v11, v13);
      swift_bridgeObjectRelease();
      v6 = v10;
    }
    else
    {

    }
  }
  else
  {

    v9 = 0;
  }
  v14 = objc_msgSend(a1, sel_toString);
  if (!v14)
    goto LABEL_21;
  v15 = v14;
  v34 = v6;
  v32 = sub_19CFDF578();
  v33 = v16;

  v17 = (void *)sub_19CFDF554();
  v18 = objc_msgSend(a1, sel_valueForProperty_, v17);

  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = a1;
  v20 = objc_msgSend(v18, sel_toInt32);

  v21 = (void *)sub_19CFDF554();
  v22 = objc_msgSend(a1, sel_valueForProperty_, v21);

  if (!v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v23 = objc_msgSend(v22, sel_toInt32);

  v24 = (void *)sub_19CFDF554();
  v25 = objc_msgSend(a1, (SEL)&selRef_currentRequest + 1, v24);

  if (!v25)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v26 = objc_msgSend(v25, (SEL)&selRef_resultWithCompletion_ + 2);

  if (v26)
  {
    v27 = sub_19CFDF578();
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  sub_19CF9EEAC();
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v33;
  *(_QWORD *)(a2 + 16) = v20;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v23;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v27;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v34;
  *(_QWORD *)(a2 + 72) = v9;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v30;
  *(_QWORD *)(a2 + 96) = v31;
}

id sub_19CE228A0()
{
  id v0;
  id result;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  result = sub_19CDE3E3C(0xD00000000000004ALL, 0x800000019D070500, 0);
  qword_1EE43BF68 = (uint64_t)result;
  return result;
}

unint64_t static JSError._noCodeSpecified.getter()
{
  return 0x8000000000000000;
}

unint64_t static JSError._domainUserInfoKey.getter()
{
  return 0xD000000000000017;
}

unint64_t static JSError._codeUserInfoKey.getter()
{
  return 0xD000000000000015;
}

uint64_t JSError.init(message:line:column:sourceURL:constructorName:userInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v12;

  v12 = *a12;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = v12;
  *(_QWORD *)(a9 + 72) = 0;
  *(_QWORD *)(a9 + 80) = 0;
  *(_QWORD *)(a9 + 88) = a10;
  *(_QWORD *)(a9 + 96) = a11;
  return result;
}

uint64_t JSError.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.line.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t JSError.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t JSError.sourceURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.userInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t JSError.constructorName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSError.errorDescription.getter()
{
  return JSError.description.getter();
}

uint64_t JSError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v0;
  if (!*(_QWORD *)(v0 + 56))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v6 + 56))(v4, 1, 1, v5, v8);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v0 + 16);
  v13 = *(_BYTE *)(v0 + 24);
  v16 = *(_QWORD *)(v0 + 32);
  v17 = *(unsigned __int8 *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_19CFDEDA4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_6:
    sub_19CCECFE4((uint64_t)v4, (uint64_t *)&unk_1ECEB3030);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  if ((v13 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  else
  {
    v18 = v12;
    sub_19CFE0598();
    if ((v17 & 1) == 0)
    {
      v18 = v16;
      sub_19CFE0598();
      v18 = sub_19CFDED20();
      v19 = v15;
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      swift_bridgeObjectRetain();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      v11 = v18;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      return v11;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  swift_bridgeObjectRetain();
  return v11;
}

unint64_t static JSError.errorDomain.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t JSError.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  if (!v1 || !*(_QWORD *)(v1 + 16))
    return 0x8000000000000000;
  swift_bridgeObjectRetain();
  v2 = sub_19CD3FD1C(0xD000000000000015, 0x800000019D070490);
  if ((v3 & 1) != 0 && (v4 = *(_QWORD *)(v1 + 56) + 24 * v2, *(_BYTE *)(v4 + 16) == 2))
    v5 = *(_QWORD *)v4;
  else
    v5 = 0x8000000000000000;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t JSError.errorUserInfo.getter()
{
  const char **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  const char *v8;
  const char *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  _OWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *boxed_opaque_existential_2Tm;
  unint64_t v58;
  char v59;
  uint64_t result;
  uint64_t v61;
  const char *v62;
  const char *v63;
  char *v64;
  uint64_t v65;
  const char *v66;
  _QWORD *v67;
  _OWORD v68[2];
  _OWORD v69[3];
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t *@<X0>, _QWORD *@<X8>);
  uint64_t v77;
  unint64_t v78;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[6];
  v8 = v0[7];
  v9 = v0[8];
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v78 = MEMORY[0x1E0DEE9E0];
  if (!v9)
    goto LABEL_40;
  v66 = v5;
  v11 = *((_QWORD *)v9 + 2);
  swift_bridgeObjectRetain();
  v63 = v7;
  v64 = v4;
  v62 = v8;
  if (!v11)
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v12 = sub_19CD3FD1C(0xD000000000000017, 0x800000019D070470);
  if ((v13 & 1) != 0 && (v14 = *((_QWORD *)v9 + 7) + 24 * v12, *(_BYTE *)(v14 + 16) == 3))
  {
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    sub_19CCDB788(*(_QWORD *)v14, v15, 3);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v9 + 2))
    {
      swift_bridgeObjectRetain();
      v17 = sub_19CD3FD1C(0xD000000000000015, 0x800000019D070490);
      if ((v18 & 1) != 0)
      {
        v19 = *((_QWORD *)v9 + 7) + 24 * v17;
        if (*(_BYTE *)(v19 + 16) == 2)
        {
          v61 = *(_QWORD *)v19;
          swift_bridgeObjectRelease();
          v65 = sub_19CFDF578();
          v21 = v20;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
          *(_QWORD *)(inited + 32) = sub_19CFDF578();
          *(_QWORD *)(inited + 40) = v23;
          *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(inited + 48) = v66;
          *(_QWORD *)(inited + 56) = v6;
          swift_bridgeObjectRetain();
          sub_19CD30650(inited);
          v24 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
          v25 = (void *)sub_19CFDF554();
          sub_19CD5EAF0(v16, v15, 3);
          v26 = (void *)sub_19CFDF3B0();
          swift_bridgeObjectRelease();
          v27 = objc_msgSend(v24, sel_initWithDomain_code_userInfo_, v25, v61, v26);

          v74 = sub_19CCE5204(0, (unint64_t *)&qword_1EE43B548);
          *(_QWORD *)&v72 = v27;
          sub_19CD433C0(&v72, &v70);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v69[0] = v10;
          v78 = 0x8000000000000000;
          sub_19CD13D40(&v70, v65, v21, isUniquelyReferenced_nonNull_native);
          v78 = *(_QWORD *)&v69[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = (_QWORD *)v78;
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_19CD5EAF0(v16, v15, 3);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v29 = -1 << v9[32];
  v30 = ~v29;
  v31 = *((_QWORD *)v9 + 8);
  v32 = -v29;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  *(_QWORD *)&v72 = v9;
  *((_QWORD *)&v72 + 1) = v9 + 64;
  v73 = v30;
  v74 = 0;
  v75 = v33 & v31;
  v76 = sub_19CDD0534;
  v77 = 0;
  sub_19CE24D80(v69);
  sub_19CCC290C((uint64_t)v69, (uint64_t)&v70, (uint64_t *)&unk_1ECEB1F00);
  v34 = *((_QWORD *)&v70 + 1);
  if (!*((_QWORD *)&v70 + 1))
  {
LABEL_39:
    v78 = (unint64_t)v10;
    sub_19CDB88CC();
    swift_release();
    v4 = v64;
    v8 = v62;
LABEL_40:
    if (v8)
    {
      v52 = sub_19CFDF578();
      v54 = v53;
      sub_19CFDEDA4();
      v55 = sub_19CFDEDE0();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v4, 1, v55) == 1)
      {
        sub_19CCECFE4((uint64_t)v4, (uint64_t *)&unk_1ECEB3030);
        sub_19CD143A0(v52, v54, &v72);
        sub_19CCECFE4((uint64_t)&v72, &qword_1ECEB3370);
      }
      else
      {
        v74 = v55;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v72);
        (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 32))(boxed_opaque_existential_2Tm, v4, v55);
        sub_19CD433C0(&v72, &v70);
        v58 = v78;
        v59 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v69[0] = v58;
        v78 = 0x8000000000000000;
        sub_19CD13D40(&v70, v52, v54, v59);
        v78 = *(_QWORD *)&v69[0];
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v78;
    }
    return (uint64_t)v10;
  }
  v66 = "NSUnderlyingErrorDomain";
  v65 = 0x800000019D070490;
  while (1)
  {
    v35 = v70;
    sub_19CD433C0(&v71, v69);
    if ((v35 != 0xD000000000000017 || v34 != 0x800000019D070470)
      && (sub_19CFE06A0() & 1) == 0
      && (v35 != 0xD000000000000015 || v34 != v65)
      && (sub_19CFE06A0() & 1) == 0)
    {
      break;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
LABEL_24:
    sub_19CE24D80(v69);
    sub_19CCC290C((uint64_t)v69, (uint64_t)&v70, (uint64_t *)&unk_1ECEB1F00);
    v34 = *((_QWORD *)&v70 + 1);
    if (!*((_QWORD *)&v70 + 1))
      goto LABEL_39;
  }
  sub_19CD436B0((uint64_t)v69, (uint64_t)v68);
  v36 = v10;
  v37 = swift_isUniquelyReferenced_nonNull_native();
  v67 = v10;
  v39 = sub_19CD3FD1C(v35, v34);
  v40 = v10[2];
  v41 = (v38 & 1) == 0;
  v42 = v40 + v41;
  if (!__OFADD__(v40, v41))
  {
    v43 = v38;
    if (v36[3] < v42)
    {
      sub_19CD13ED8(v42, v37);
      v44 = sub_19CD3FD1C(v35, v34);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_48;
      v39 = v44;
      v46 = v67;
      if ((v43 & 1) == 0)
        goto LABEL_36;
LABEL_34:
      v10 = v46;
      v47 = (_OWORD *)(v46[7] + 32 * v39);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      sub_19CD433C0(v68, v47);
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
      goto LABEL_24;
    }
    if ((v37 & 1) != 0)
    {
      v46 = v67;
      if ((v38 & 1) != 0)
        goto LABEL_34;
    }
    else
    {
      sub_19CD141BC();
      v46 = v67;
      if ((v43 & 1) != 0)
        goto LABEL_34;
    }
LABEL_36:
    v46[(v39 >> 6) + 8] |= 1 << v39;
    v48 = (uint64_t *)(v46[6] + 16 * v39);
    *v48 = v35;
    v48[1] = v34;
    sub_19CD433C0(v68, (_OWORD *)(v46[7] + 32 * v39));
    v49 = v46[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_47;
    v10 = v46;
    v46[2] = v51;
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

_QWORD *sub_19CE234D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _BYTE v26[16];
  _QWORD *v27;
  _QWORD v28[2];
  _QWORD v29[5];
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BYTE v33[8];
  uint64_t v34;

  v28[0] = 10;
  v28[1] = 0xE100000000000000;
  v27 = v28;
  swift_bridgeObjectRetain();
  v5 = sub_19CD3C1F0(0x7FFFFFFFFFFFFFFFLL, 1, sub_19CD3C68C, (uint64_t)v26, a1, a2);
  v6 = sub_19CE21C54(v5);
  v7 = v2;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v6 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t *)(v6 + 40);
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = *(v9 - 1);
      v12 = *v9;
      swift_bridgeObjectRetain();
      sub_19CE23AF0(v8, v11, v12, (uint64_t)v29);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return v25;
      }
      v14 = v29[0];
      v13 = v29[1];
      v15 = v29[3];
      v16 = v29[4];
      v21 = v29[2];
      v22 = v30;
      v24 = v31;
      v23 = v32;
      swift_bridgeObjectRelease();
      sub_19CCC290C((uint64_t)v29, (uint64_t)v33, (uint64_t *)&unk_1EE43BC90);
      if (v34 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_19CED6038(0, v25[2] + 1, 1, v25);
        v18 = v25[2];
        v17 = v25[3];
        if (v18 >= v17 >> 1)
          v25 = sub_19CED6038((_QWORD *)(v17 > 1), v18 + 1, 1, v25);
        v25[2] = v18 + 1;
        v10 = &v25[8 * v18];
        v10[4] = v14;
        v10[5] = v13;
        v10[6] = v21;
        v10[7] = v15;
        v10[8] = v16;
        *((_BYTE *)v10 + 72) = v22 & 1;
        v10[10] = v24;
        *((_BYTE *)v10 + 88) = v23 & 1;
      }
      ++v8;
      v9 += 2;
    }
    while (v20 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v25;
}

void JSError.jsRepresentation(in:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v4 = v2[1];
  v5 = v2[2];
  v6 = *((_BYTE *)v2 + 24);
  v7 = v2[4];
  v8 = *((_BYTE *)v2 + 40);
  v10 = v2[6];
  v9 = v2[7];
  v11 = v2[12];
  v37 = *v2;
  v38 = v4;
  v39 = v5;
  LOBYTE(v40) = v6;
  v41 = v7;
  v42 = v8;
  v33 = v10;
  v43 = v10;
  v44 = v9;
  v35 = v9;
  v12 = *((_OWORD *)v2 + 5);
  v34 = *((_OWORD *)v2 + 4);
  v45 = v34;
  v46 = v12;
  v47 = v11;
  sub_19CDC98D8();
  sub_19CFE0868();
  v13 = a1;
  v14 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_valueWithNewErrorFromMessage_inContext_, v14, v13);

  if (!v16)
    goto LABEL_26;
  if ((v6 & 1) == 0)
  {
    if (v5 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v5 <= 0x7FFFFFFF)
    {
      v17 = objc_msgSend(v15, sel_valueWithInt32_inContext_, v5, v13);
      if (!v17)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v18 = v17;
      v19 = (void *)sub_19CFDF554();
      objc_msgSend(v16, sel_setValue_forProperty_, v18, v19);

      goto LABEL_7;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_7:
  if ((v8 & 1) != 0)
    goto LABEL_12;
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_24;
  if (v7 > 0x7FFFFFFF)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v20 = objc_msgSend(v15, sel_valueWithInt32_inContext_, v7, v13);
  if (!v20)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v21 = v20;
  v22 = (void *)sub_19CFDF554();
  objc_msgSend(v16, sel_setValue_forProperty_, v21, v22);

LABEL_12:
  if (v35)
  {
    v37 = v33;
    v38 = v35;
    v23 = v13;
    swift_bridgeObjectRetain();
    v24 = objc_msgSend(v15, sel_valueWithObject_inContext_, sub_19CFE0808(), v23);
    swift_unknownObjectRelease();

    if (v24)
    {
      v25 = v24;
      v26 = (void *)sub_19CFDF554();
      objc_msgSend(v16, sel_setValue_forProperty_, v25, v26);

      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_15:
  if ((_QWORD)v34)
  {
    v48 = v34;
    ScalarDictionary.jsRepresentation(in:)((uint64_t)v13, &v37);
    if (v36)
    {

      return;
    }
    v27 = v40;
    v28 = v41;
    __swift_project_boxed_opaque_existential_1(&v37, v40);
    v29 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v28 + 16))(v13, v27, v28);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
    v30 = v29;
    v31 = (void *)sub_19CFDF554();
    objc_msgSend(v16, sel_setValue_forProperty_, v30, v31);

  }
  a2[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
  a2[4] = &protocol witness table for JSValue;
  *a2 = v16;
}

void sub_19CE23AF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v6[64];

  sub_19CE26128(a1, a2, a3, (uint64_t)v6);
  if (!v4)
    sub_19CCC290C((uint64_t)v6, a4, (uint64_t *)&unk_1EE43BC90);
}

uint64_t sub_19CE23B3C()
{
  return JSError.description.getter();
}

unint64_t sub_19CE23BA8()
{
  return 0xD00000000000001ALL;
}

void sub_19CE23BCC(void *a1@<X0>, uint64_t a2@<X8>)
{
  JSError.init(_:)(a1, a2);
}

void sub_19CE23BF0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  JSError.jsRepresentation(in:)(a1, a2);
}

JSValue __swiftcall JSError.makeValue(in:)(JSContext in)
{
  return (JSValue)sub_19CE23D7C(in.super.isa);
}

uint64_t sub_19CE23D28()
{
  sub_19CE259E4();
  return sub_19CFE085C();
}

uint64_t sub_19CE23D50()
{
  sub_19CE259E4();
  return sub_19CFE0850();
}

__int128 *sub_19CE23D7C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  _QWORD v21[4];
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  JSError.jsRepresentation(in:)(a1, &v23);
  if (v1)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v5 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
    v7 = v5;
    v22 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v8._countAndFlagsBits = 0x69747265766E6F43;
    v8._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F618);
    v21[0] = &type metadata for JSError;
    sub_19CCF8C5C((uint64_t)v21, (uint64_t)v20, &qword_1ECEB3370);
    v18 = 0u;
    v19 = 0u;
    sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
    LOBYTE(v25) = 0;
    v23 = v18;
    v24 = v19;
    v9 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_19CD40918(0, v9[2] + 1, 1, v9);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    v12 = &v9[5 * v11];
    v13 = v23;
    v14 = v24;
    *((_BYTE *)v12 + 64) = v25;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    v22 = v9;
    sub_19CCECFE4((uint64_t)v21, &qword_1ECEB3370);
    v15._object = (void *)0x800000019D06E590;
    v15._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(_QWORD *)(v6 + 32) = v22;
    *(_QWORD *)&v23 = v7;
    LOBYTE(v18) = 1;
    v17 = &v23;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v3 = *((_QWORD *)&v24 + 1);
    v4 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    v17 = (__int128 *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  }
  return v17;
}

void sub_19CE23FF0()
{
  void *v0;
  id v1;
  void *v2;
  const OpaqueJSContext *v3;
  JSStringRef JSONString;
  uint64_t v5;
  OpaqueJSString *v6;
  OpaqueJSString *v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_context);
  if (v1)
  {
    v2 = v1;
    v3 = (const OpaqueJSContext *)objc_msgSend(v1, sel_JSGlobalContextRef);

    JSONString = JSValueCreateJSONString(v3, (JSValueRef)objc_msgSend(v0, sel_JSValueRef), 0, 0);
    if (JSONString)
    {
      v6 = JSONString;
      v7 = (OpaqueJSString *)MEMORY[0x1E0C80A78](JSONString, v5);
      sub_19CDB8B78(v7, (void (*)(uint64_t, unint64_t))sub_19CE264EC);
      JSStringRelease(v6);
    }
    else
    {
      sub_19CDC98D8();
      swift_allocError();
      JSError.init(badValue:expected:)(v0, v8);
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19CE2412C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_19CD436B0(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_19CCC290C((uint64_t)&v23, (uint64_t)v22, (uint64_t *)&unk_1ECEB1F00);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_19CCECFE4((uint64_t)v21, &qword_1EE43BB68);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_19CE24314()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, _QWORD *);
  __int128 v13;
  uint64_t result;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  __int128 v23;

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v9 = *(_QWORD *)(v1 + 48);
    v8 = *(_QWORD *)(v1 + 56);
    v10 = (_QWORD *)(v9 + v7);
    v11 = v10[1];
    v12 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v22[0] = *v10;
    v22[1] = v11;
    v13 = *(_OWORD *)(v8 + v7);
    v0[3] = v4;
    v0[4] = v5;
    v23 = v13;
    swift_bridgeObjectRetain();
    v12(&v21, v22);
    swift_bridgeObjectRelease();
    return v21;
  }
  v15 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (unint64_t)(v0[2] + 64) >> 6;
    if (v15 < v16)
    {
      v17 = v0[1];
      v18 = *(_QWORD *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        v5 = (v18 - 1) & v18;
        v6 = __clz(__rbit64(v18)) + (v15 << 6);
        v4 = v15;
        goto LABEL_3;
      }
      v19 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v16)
      {
        v18 = *(_QWORD *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          v15 = v19;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v16)
        {
          v18 = *(_QWORD *)(v17 + 8 * (v3 + 3));
          if (v18)
          {
            v15 = v3 + 3;
            goto LABEL_7;
          }
          v19 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v16)
          {
            v18 = *(_QWORD *)(v17 + 8 * v19);
            if (v18)
              goto LABEL_10;
            v15 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v16)
            {
              v18 = *(_QWORD *)(v17 + 8 * v15);
              if (v18)
                goto LABEL_7;
              v4 = v16 - 1;
              v20 = v3 + 6;
              while (v16 != v20)
              {
                v18 = *(_QWORD *)(v17 + 8 * v20++);
                if (v18)
                {
                  v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_19CE244A0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F50);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v39 - v14;
  v17 = *v1;
  v16 = v1[1];
  v19 = v1[2];
  v18 = v1[3];
  v20 = v1[4];
  v39 = v7;
  if (v20)
  {
    v40 = v16;
    v41 = v19;
    v21 = v4;
    v22 = a1;
    v23 = (v20 - 1) & v20;
    v42 = v18;
    v24 = __clz(__rbit64(v20)) | (v18 << 6);
LABEL_3:
    v25 = *(_QWORD *)(v17 + 48);
    v26 = sub_19CFE0310();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v15, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, v26);
    sub_19CD436B0(*(_QWORD *)(v17 + 56) + 32 * v24, (uint64_t)&v15[*(int *)(v3 + 48)]);
    v27 = 0;
    a1 = v22;
    v4 = v21;
    v16 = v40;
    v19 = v41;
    goto LABEL_4;
  }
  v34 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    return;
  }
  v35 = (unint64_t)(v19 + 64) >> 6;
  if (v34 >= v35)
  {
    v42 = v18;
    v23 = 0;
    v27 = 1;
    goto LABEL_4;
  }
  v36 = *(_QWORD *)(v16 + 8 * v34);
  if (v36)
  {
LABEL_11:
    v40 = v16;
    v41 = v19;
    v21 = v4;
    v22 = a1;
    v23 = (v36 - 1) & v36;
    v24 = __clz(__rbit64(v36)) + (v34 << 6);
    v42 = v34;
    goto LABEL_3;
  }
  v37 = v18 + 2;
  if (v18 + 2 >= v35)
    goto LABEL_27;
  v36 = *(_QWORD *)(v16 + 8 * v37);
  if (v36)
  {
LABEL_15:
    v34 = v37;
    goto LABEL_11;
  }
  if (v18 + 3 >= v35)
    goto LABEL_28;
  v36 = *(_QWORD *)(v16 + 8 * (v18 + 3));
  if (v36)
  {
    v34 = v18 + 3;
    goto LABEL_11;
  }
  v37 = v18 + 4;
  if (v18 + 4 < v35)
  {
    v36 = *(_QWORD *)(v16 + 8 * v37);
    if (v36)
      goto LABEL_15;
    v34 = v18 + 5;
    if (v18 + 5 < v35)
    {
      v36 = *(_QWORD *)(v16 + 8 * v34);
      if (v36)
        goto LABEL_11;
      v34 = v35 - 1;
      v38 = v18 + 6;
      while (v35 != v38)
      {
        v36 = *(_QWORD *)(v16 + 8 * v38++);
        if (v36)
        {
          v34 = v38 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v23 = 0;
      v27 = 1;
      v42 = v34;
      goto LABEL_4;
    }
LABEL_28:
    v23 = 0;
    v27 = 1;
    v42 = v37;
    goto LABEL_4;
  }
  v23 = 0;
  v27 = 1;
  v42 = v18 + 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, v27, 1, v3);
  *v1 = v17;
  v1[1] = v16;
  v28 = v42;
  v1[2] = v19;
  v1[3] = v28;
  v1[4] = v23;
  v29 = (void (*)(uint64_t))v1[5];
  sub_19CCC290C((uint64_t)v15, (uint64_t)v11, &qword_1EE439F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3) == 1)
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
  }
  else
  {
    v31 = (uint64_t)v11;
    v32 = (uint64_t)v39;
    sub_19CCC290C(v31, (uint64_t)v39, &qword_1EE439F48);
    v29(v32);
    sub_19CCECFE4(v32, &qword_1EE439F48);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 0, 1, v33);
  }
}

uint64_t sub_19CE247E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  void (*v16)(_OWORD *);
  uint64_t result;
  _OWORD v18[4];
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[4];
  uint64_t v26;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_19CD23A14(*(_QWORD *)(v3 + 48) + 40 * v10, (uint64_t)v25);
    sub_19CD436B0(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)&v25[2] + 8);
    goto LABEL_23;
  }
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    v13 = *(_QWORD *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      v9 = (v13 - 1) & v13;
      v10 = __clz(__rbit64(v13)) + (v11 << 6);
      v7 = v11;
      goto LABEL_3;
    }
    v14 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      v13 = *(_QWORD *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        v11 = v14;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        v13 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          v11 = v5 + 3;
          goto LABEL_7;
        }
        v14 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          v13 = *(_QWORD *)(v4 + 8 * v14);
          if (v13)
            goto LABEL_10;
          v11 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            v13 = *(_QWORD *)(v4 + 8 * v11);
            if (v13)
              goto LABEL_7;
            v7 = v12 - 1;
            v15 = v5 + 6;
            while (v12 != v15)
            {
              v13 = *(_QWORD *)(v4 + 8 * v15++);
              if (v13)
              {
                v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v26 = 0;
  memset(v25, 0, sizeof(v25));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v16 = (void (*)(_OWORD *))v1[5];
  result = sub_19CCC290C((uint64_t)v25, (uint64_t)&v20, &qword_1EE43CF48);
  if (*((_QWORD *)&v21 + 1))
  {
    v18[2] = v22;
    v18[3] = v23;
    v19 = v24;
    v18[0] = v20;
    v18[1] = v21;
    v16(v18);
    return sub_19CCECFE4((uint64_t)v18, &qword_1ECEB0760);
  }
  else
  {
    *(_QWORD *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CE249DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(_QWORD *);
  uint64_t result;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  _QWORD v24[4];
  char v25;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
    v10 = *v9;
    v11 = v9[1];
    v12 = *(_QWORD *)(v3 + 56) + 24 * v8;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    v1[3] = v6;
    v1[4] = v7;
    v16 = (void (*)(_QWORD *))v1[5];
    v24[0] = v10;
    v24[1] = v11;
    v24[2] = v13;
    v24[3] = v14;
    v25 = v15;
    swift_bridgeObjectRetain();
    sub_19CCDB788(v13, v14, v15);
    v16(v24);
    swift_bridgeObjectRelease();
    return sub_19CD5EAF0(v13, v14, v15);
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      v20 = v1[1];
      v21 = *(_QWORD *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_7:
        v7 = (v21 - 1) & v21;
        v8 = __clz(__rbit64(v21)) + (v18 << 6);
        v6 = v18;
        goto LABEL_3;
      }
      v22 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        v21 = *(_QWORD *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_10:
          v18 = v22;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          v21 = *(_QWORD *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            v18 = v5 + 3;
            goto LABEL_7;
          }
          v22 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            v21 = *(_QWORD *)(v20 + 8 * v22);
            if (v21)
              goto LABEL_10;
            v18 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              v21 = *(_QWORD *)(v20 + 8 * v18);
              if (v21)
                goto LABEL_7;
              v6 = v19 - 1;
              v23 = v5 + 6;
              while (v19 != v23)
              {
                v21 = *(_QWORD *)(v20 + 8 * v23++);
                if (v21)
                {
                  v18 = v23 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_BYTE *)(a1 + 32) = 0;
  }
  return result;
}

uint64_t sub_19CE24BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void (*v17)(_OWORD *);
  uint64_t result;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_19CD436B0(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v23 + 8);
    *(_QWORD *)&v23[0] = v11;
    goto LABEL_23;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    v14 = *(_QWORD *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v12 << 6);
      v7 = v12;
      goto LABEL_3;
    }
    v15 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        v12 = v15;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        v14 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          v12 = v5 + 3;
          goto LABEL_7;
        }
        v15 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (v14)
            goto LABEL_10;
          v12 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (v14)
              goto LABEL_7;
            v7 = v13 - 1;
            v16 = v5 + 6;
            while (v13 != v16)
            {
              v14 = *(_QWORD *)(v4 + 8 * v16++);
              if (v14)
              {
                v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v17 = (void (*)(_OWORD *))v1[5];
  result = sub_19CCC290C((uint64_t)v23, (uint64_t)v21, &qword_1ECEB04E0);
  if (*(_QWORD *)&v21[0])
  {
    v19[0] = v21[0];
    v19[1] = v21[1];
    v20 = v22;
    v17(v19);
    return sub_19CCECFE4((uint64_t)v19, (uint64_t *)&unk_1ECEB0210);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CE24D80@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(_QWORD *);
  uint64_t result;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  _QWORD v24[4];
  char v25;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
    v10 = *v9;
    v11 = v9[1];
    v12 = *(_QWORD *)(v3 + 56) + 24 * v8;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    v1[3] = v6;
    v1[4] = v7;
    v16 = (void (*)(_QWORD *))v1[5];
    v24[0] = v10;
    v24[1] = v11;
    v24[2] = v13;
    v24[3] = v14;
    v25 = v15;
    swift_bridgeObjectRetain();
    sub_19CCDB788(v13, v14, v15);
    v16(v24);
    swift_bridgeObjectRelease();
    return sub_19CD5EAF0(v13, v14, v15);
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      v20 = v1[1];
      v21 = *(_QWORD *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_7:
        v7 = (v21 - 1) & v21;
        v8 = __clz(__rbit64(v21)) + (v18 << 6);
        v6 = v18;
        goto LABEL_3;
      }
      v22 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        v21 = *(_QWORD *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_10:
          v18 = v22;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          v21 = *(_QWORD *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            v18 = v5 + 3;
            goto LABEL_7;
          }
          v22 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            v21 = *(_QWORD *)(v20 + 8 * v22);
            if (v21)
              goto LABEL_10;
            v18 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              v21 = *(_QWORD *)(v20 + 8 * v18);
              if (v21)
                goto LABEL_7;
              v6 = v19 - 1;
              v23 = v5 + 6;
              while (v19 != v23)
              {
                v21 = *(_QWORD *)(v20 + 8 * v23++);
                if (v21)
                {
                  v18 = v23 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
    a1[2] = 0u;
  }
  return result;
}

uint64_t sub_19CE24F50()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_19CE250EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_19CCD5B84(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v25 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_19CCC290C((uint64_t)&v25, (uint64_t)v23, &qword_1EE437280);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v22 = v24;
    v19(v21);
    return sub_19CCECFE4((uint64_t)v21, &qword_1EE437278);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void sub_19CE252E8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(uint64_t *__return_ptr, _QWORD *);
  id v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 8 * v6;
    v8 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v6);
    v9 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + v7);
    v0[3] = v4;
    v0[4] = v5;
    v10 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v19[0] = v8;
    v19[1] = v9;
    v11 = v8;
    swift_unknownObjectRetain();
    v10(&v18, v19);
    swift_unknownObjectRelease();

    return;
  }
  v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      v14 = v0[1];
      v15 = *(_QWORD *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        v5 = (v15 - 1) & v15;
        v6 = __clz(__rbit64(v15)) + (v12 << 6);
        v4 = v12;
        goto LABEL_3;
      }
      v16 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        v15 = *(_QWORD *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          v12 = v16;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          v15 = *(_QWORD *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            v12 = v3 + 3;
            goto LABEL_7;
          }
          v16 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            v15 = *(_QWORD *)(v14 + 8 * v16);
            if (v15)
              goto LABEL_10;
            v12 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              v15 = *(_QWORD *)(v14 + 8 * v12);
              if (v15)
                goto LABEL_7;
              v4 = v13 - 1;
              v17 = v3 + 6;
              while (v13 != v17)
              {
                v15 = *(_QWORD *)(v14 + 8 * v17++);
                if (v15)
                {
                  v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t destroy for JSError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v7 = *(void **)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 80);
  v7 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = v7;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for JSError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeWithCopy for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSError.StackFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSError.StackFrame(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSError.StackFrame(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSError.StackFrame()
{
  return &type metadata for JSError.StackFrame;
}

unint64_t sub_19CE259E4()
{
  unint64_t result;

  result = qword_1EE43BF70;
  if (!qword_1EE43BF70)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSError, &type metadata for JSError);
    atomic_store(result, (unint64_t *)&qword_1EE43BF70);
  }
  return result;
}

unsigned __int8 *sub_19CE25A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_19CFDF758();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_19CE6E618();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_19CFE01FC();
  }
LABEL_7:
  v11 = sub_19CDE6D8C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_19CE25B0C(uint64_t a1@<X8>)
{
  id v1;
  char **v2;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  char v35;
  char **v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];

  if (qword_1EE43BCA0 != -1)
    swift_once();
  v4 = (void *)qword_1EE43BF68;
  if (!qword_1EE43BF68)
    goto LABEL_8;
  v5 = (void *)sub_19CFDF554();
  v6 = sub_19CFDF65C();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_75;
  }
  v1 = objc_msgSend(v4, sel_firstMatchInString_options_range_, v5, 0, 0, v6);

  if (!v1)
  {
LABEL_8:
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 1;
LABEL_67:
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v19;
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = v15;
    *(_QWORD *)(a1 + 40) = v16;
    *(_QWORD *)(a1 + 48) = v17;
    *(_BYTE *)(a1 + 56) = v18;
    return;
  }
  v7 = (void *)sub_19CFDF554();
  v2 = &selRef_removeObserver_;
  objc_msgSend(v1, sel_rangeWithName_, v7);

  sub_19CFDFCC8();
  if ((v8 & 1) != 0)
  {
    v59 = 0;
    v60 = 0;
  }
  else
  {
    v9 = sub_19CFDF764();
    v10 = MEMORY[0x1A1AD9838](v9);
    v59 = v11;
    v60 = v10;
    swift_bridgeObjectRelease();
  }
  v20 = (void *)sub_19CFDF554();
  objc_msgSend(v1, sel_rangeWithName_, v20);

  sub_19CFDFCC8();
  if ((v21 & 1) != 0)
  {
    v57 = 0;
    v58 = 0;
  }
  else
  {
    v22 = sub_19CFDF764();
    v23 = MEMORY[0x1A1AD9838](v22);
    v57 = v24;
    v58 = v23;
    swift_bridgeObjectRelease();
  }
  v25 = (void *)sub_19CFDF554();
  objc_msgSend(v1, sel_rangeWithName_, v25);

  sub_19CFDFCC8();
  if ((v26 & 1) != 0)
  {
    v36 = &selRef_removeObserver_;
LABEL_24:
    v15 = 0;
    v16 = 1;
LABEL_63:
    v46 = (void *)sub_19CFDF554();
    objc_msgSend(v1, (SEL)v36 + 3156, v46);

    sub_19CFDFCC8();
    if ((v47 & 1) != 0)
    {

      v17 = 0;
      v18 = 1;
    }
    else
    {
      v48 = sub_19CFDF764();
      v49 = MEMORY[0x1A1AD9838](v48);
      v51 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v17 = sub_19CE21D50(v49, v51);
      LOBYTE(v49) = v52;

      v18 = v49 & 1;
    }
    swift_bridgeObjectRelease();
    v19 = v59;
    v12 = v60;
    v14 = v57;
    v13 = v58;
    goto LABEL_67;
  }
  v27 = sub_19CFDF764();
  v28 = MEMORY[0x1A1AD9838](v27);
  v30 = v29;
  swift_bridgeObjectRelease();
  v31 = HIBYTE(v30) & 0xF;
  v32 = v28 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0)
    v33 = HIBYTE(v30) & 0xF;
  else
    v33 = v28 & 0xFFFFFFFFFFFFLL;
  if (!v33)
  {
LABEL_75:
    v36 = v2;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if ((v30 & 0x1000000000000000) != 0)
  {
    v36 = &selRef_removeObserver_;
    swift_bridgeObjectRetain();
    v15 = (uint64_t)sub_19CE25A28(v28, v30, 10);
    LOBYTE(v28) = v56;
    swift_bridgeObjectRelease_n();
    goto LABEL_60;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v28 & 0x1000000000000000) != 0)
      v34 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v34 = (unsigned __int8 *)sub_19CFE01FC();
    v15 = (uint64_t)sub_19CDE6D78(v34, v32, 10);
    LOBYTE(v28) = v35 & 1;
    goto LABEL_59;
  }
  v61[0] = v28;
  v61[1] = v30 & 0xFFFFFFFFFFFFFFLL;
  if (v28 == 43)
  {
    if (!v31)
      goto LABEL_79;
    if (v31 == 1 || (BYTE1(v28) - 48) > 9u)
      goto LABEL_46;
    v15 = (BYTE1(v28) - 48);
    if (v31 != 2)
    {
      if ((BYTE2(v28) - 48) > 9u)
        goto LABEL_46;
      v15 = 10 * (BYTE1(v28) - 48) + (BYTE2(v28) - 48);
      v37 = v31 - 3;
      if (v37)
      {
        v38 = (unsigned __int8 *)v61 + 3;
        while (1)
        {
          v39 = *v38 - 48;
          if (v39 > 9)
            goto LABEL_46;
          v40 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_46;
          v15 = v40 + v39;
          if (__OFADD__(v40, v39))
            goto LABEL_46;
          LOBYTE(v28) = 0;
          ++v38;
          if (!--v37)
            goto LABEL_59;
        }
      }
    }
LABEL_58:
    LOBYTE(v28) = 0;
    goto LABEL_59;
  }
  if (v28 != 45)
  {
    if (!v31 || (v28 - 48) > 9u)
      goto LABEL_46;
    v15 = (v28 - 48);
    if (v31 != 1)
    {
      if ((BYTE1(v28) - 48) > 9u)
        goto LABEL_46;
      v15 = 10 * (v28 - 48) + (BYTE1(v28) - 48);
      v41 = v31 - 2;
      if (v41)
      {
        v42 = (unsigned __int8 *)v61 + 2;
        while (1)
        {
          v43 = *v42 - 48;
          if (v43 > 9)
            goto LABEL_46;
          v44 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_46;
          v15 = v44 + v43;
          if (__OFADD__(v44, v43))
            goto LABEL_46;
          LOBYTE(v28) = 0;
          ++v42;
          if (!--v41)
            goto LABEL_59;
        }
      }
    }
    goto LABEL_58;
  }
  if (v31)
  {
    if (v31 != 1 && (BYTE1(v28) - 48) <= 9u)
    {
      if (v31 == 2)
      {
        LOBYTE(v28) = 0;
        v15 = -(uint64_t)(BYTE1(v28) - 48);
LABEL_59:
        v36 = &selRef_removeObserver_;
        swift_bridgeObjectRelease();
LABEL_60:
        if ((v28 & 1) != 0)
          v15 = 0;
        v16 = v28 & 1;
        goto LABEL_63;
      }
      if ((BYTE2(v28) - 48) <= 9u)
      {
        v15 = -10 * (BYTE1(v28) - 48) - (BYTE2(v28) - 48);
        v45 = v31 - 3;
        if (!v45)
          goto LABEL_58;
        v53 = (unsigned __int8 *)v61 + 3;
        while (1)
        {
          v54 = *v53 - 48;
          if (v54 > 9)
            break;
          v55 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            break;
          v15 = v55 - v54;
          if (__OFSUB__(v55, v54))
            break;
          LOBYTE(v28) = 0;
          ++v53;
          if (!--v45)
            goto LABEL_59;
        }
      }
    }
LABEL_46:
    v15 = 0;
    LOBYTE(v28) = 1;
    goto LABEL_59;
  }
  __break(1u);
LABEL_79:
  __break(1u);
}

void sub_19CE26128(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[32];
  __int128 v34;
  __int128 v35;
  char v36;
  _QWORD v37[3];
  uint64_t v38;
  _QWORD *v39;
  char v40[8];
  _OWORD v41[2];
  _OWORD v42[2];
  __int128 v43;
  __int128 v44;
  _OWORD v45[2];
  _BYTE v46[16];
  _BYTE v47[16];

  sub_19CE25B0C((uint64_t)v40);
  if (!v4)
  {
    sub_19CCC290C((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_1EE43BC90);
    if (*((_QWORD *)&v41[0] + 1) == 1)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v9 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
      v11 = v9;
      v39 = sub_19CD40918(0, 41, 0, MEMORY[0x1E0DEE9D8]);
      v12._object = (void *)0x800000019D0704D0;
      v12._countAndFlagsBits = 0xD000000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      v38 = MEMORY[0x1E0DEB418];
      v37[0] = a1;
      sub_19CCF8C5C((uint64_t)v37, (uint64_t)v33, &qword_1ECEB3370);
      v31 = 0u;
      v32 = 0u;
      sub_19CD40658((uint64_t)v33, (uint64_t)&v31);
      v36 = 0;
      v34 = v31;
      v35 = v32;
      v13 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
      v14 = v13[2];
      v15 = v13[3];
      v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        v28 = v13;
        v29 = v13[2];
        v30 = sub_19CD40918((_QWORD *)(v15 > 1), v14 + 1, 1, v28);
        v14 = v29;
        v13 = v30;
      }
      v13[2] = v16;
      v17 = &v13[5 * v14];
      v18 = v34;
      v19 = v35;
      *((_BYTE *)v17 + 64) = v36;
      *((_OWORD *)v17 + 2) = v18;
      *((_OWORD *)v17 + 3) = v19;
      v39 = v13;
      sub_19CCECFE4((uint64_t)v37, &qword_1ECEB3370);
      v20._countAndFlagsBits = 0x223D72745320;
      v20._object = (void *)0xE600000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      v38 = MEMORY[0x1E0DEA968];
      v37[0] = a2;
      v37[1] = a3;
      sub_19CCF8C5C((uint64_t)v37, (uint64_t)v33, &qword_1ECEB3370);
      v31 = 0u;
      v32 = 0u;
      swift_bridgeObjectRetain();
      sub_19CD40658((uint64_t)v33, (uint64_t)&v31);
      v36 = 0;
      v34 = v31;
      v35 = v32;
      v21 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
        v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21[2] = v23 + 1;
      v24 = &v21[5 * v23];
      v25 = v34;
      v26 = v35;
      *((_BYTE *)v24 + 64) = v36;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      v39 = v21;
      sub_19CCECFE4((uint64_t)v37, &qword_1ECEB3370);
      v27._countAndFlagsBits = 34;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      *(_QWORD *)(v10 + 32) = v39;
      *(_QWORD *)&v34 = v11;
      LOBYTE(v31) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v31);

      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = v41[0];
      v44 = v41[1];
      v45[0] = v42[0];
      *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v42 + 9);
      sub_19CCC290C((uint64_t)&v43, (uint64_t)v46, &qword_1ECEB2550);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19CD0F42C((uint64_t)v46);
      sub_19CCC290C((uint64_t)&v44, (uint64_t)v47, &qword_1ECEB2550);
      sub_19CD0F42C((uint64_t)v47);
    }
    sub_19CCC290C((uint64_t)v40, a4, (uint64_t *)&unk_1EE43BC90);
  }
}

uint64_t sub_19CE264EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19CE2650C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_19CFDF2D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDF308();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v3;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = sub_19CE295FC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_72;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19CFDF2F0();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v15, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return swift_release();
}

uint64_t sub_19CE266D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[2];
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_19CFDF2D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF308();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(_QWORD *)(v4 + 16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v4;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = a3;
  aBlock[4] = sub_19CE29534;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_48;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19CFDF2F0();
  v21[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_19CE268A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_19CFDF2D8();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF308();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v4 + 16);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  v18[6] = a4;
  aBlock[4] = sub_19CE292D8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_12;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CFDF2F0();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_19CE26A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = sub_19CFDF2D8();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDF308();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12, v15);
  v20[1] = *(_QWORD *)(v1 + 16);
  sub_19CE2936C(a1, (uint64_t)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v1;
  sub_19CE2947C((uint64_t)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_19CE294C4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_36;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_19CFDF2F0();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v11, v6, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return swift_release();
}

uint64_t sub_19CE26CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_19CFDF2D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF308();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_19CE29330;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_24;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CFDF2F0();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v12, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t sub_19CE26E70(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_19CFDF2D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF308();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  *(_BYTE *)(v13 + 24) = a1 & 1;
  aBlock[4] = sub_19CE29274;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_7;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_19CFDF2F0();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v12, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t static BasicImpressionsTracker.defaultQueueName.getter()
{
  return 0x74656D2D61746164;
}

uint64_t BasicImpressionsTracker.__allocating_init(threshold:queueName:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BCB8);
  swift_allocObject();
  v7 = sub_19CD51798();
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = v7;
  *(double *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  type metadata accessor for ImpressionsTracking.AppearanceJournal();
  sub_19CCE3A90();
  *(_QWORD *)(v6 + 16) = sub_19CFDF3F8();
  return v6;
}

double BasicImpressionsTracker.impressionTimeThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t BasicImpressionsTracker.queueName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BasicImpressionsTracker.onDataSerialized.getter()
{
  return swift_retain();
}

uint64_t BasicImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = v2;
  v15 = *(_OWORD *)(a1 + 32);
  v16 = v3;
  v17 = *(_OWORD *)(a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return _s9JetEngine23BasicImpressionsTrackerC19elementDidEnterView_2on4with8positionyAA17ImpressionMetricsV_10Foundation4DateVAA0D7ContextVSiSgtF_0(&v12, a2, (uint64_t)v7);
}

uint64_t BasicImpressionsTracker.elementDidLeaveView(_:on:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 9);
  v5 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = v2;
  v15 = a1[2];
  v16 = v3;
  v17 = *(__int128 *)((char *)a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return BasicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t BasicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(char *a1, uint64_t a2)
{
  double *v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  void *v29;
  uint64_t inited;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char *v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  uint64_t v46;

  v3 = v2;
  v43 = a2;
  v46 = *MEMORY[0x1E0C80C00];
  v5 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v5, v6);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v45 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  sub_19CDFE668(*(_QWORD *)(*((_QWORD *)v3 + 2) + 16), 0);
  sub_19CFDF878();
  v9 = *((_QWORD *)v3 + 2);
  v10 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v9 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_20;
    }
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v14)
      goto LABEL_25;
    v19 = *(_QWORD *)(v10 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_25;
      v19 = *(_QWORD *)(v10 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v14)
          goto LABEL_25;
        v19 = *(_QWORD *)(v10 + 8 * v15);
        if (!v19)
          break;
      }
    }
LABEL_19:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_20:
    v21 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v17);
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 80);
    v23 = *(_QWORD *)(v22 + 16);
    if (!v23 || (*(_BYTE *)(32 * v23 + v22) & 1) == 0)
    {
      v24 = swift_retain_n();
      MEMORY[0x1A1AD9A6C](v24);
      if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19CFDF8A8();
      sub_19CFDF8E4();
      sub_19CFDF878();
      swift_release();
    }
  }
  v20 = v18 + 3;
  if (v20 < v14)
  {
    v19 = *(_QWORD *)(v10 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v15 = v20 + 1;
        if (__OFADD__(v20, 1))
          break;
        if (v15 >= v14)
          goto LABEL_25;
        v19 = *(_QWORD *)(v10 + 8 * v15);
        ++v20;
        if (v19)
          goto LABEL_19;
      }
LABEL_33:
      __break(1u);
    }
    v15 = v20;
    goto LABEL_19;
  }
LABEL_25:
  swift_release();
  v25 = *((_QWORD *)v3 + 4);
  v26 = *((_QWORD *)v3 + 5);
  v27 = v3[3];
  LOBYTE(v44) = v8;
  v28 = static ImpressionsTracking.serializeImpressions(on:from:within:in:on:excluding:)(v25, v26, v45, (unsigned __int8 *)&v44, v43, MEMORY[0x1E0DEE9D8], v27);
  swift_bridgeObjectRelease();
  if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) != 0)
  {
    v29 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F628);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = 0x6973736572706D69;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E6FLL;
    *(_QWORD *)(inited + 48) = v28;
    swift_bridgeObjectRetain();
    sub_19CE101C4(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    v31 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    v44 = 0;
    v32 = objc_msgSend(v29, sel_dataWithJSONObject_options_error_, v31, 3, &v44);

    v33 = v44;
    if (v32)
    {
      v34 = sub_19CFDEE70();
      v36 = v35;

      sub_19CFDF5B4();
      v37 = sub_19CFDF590();
      if (v38)
      {
        sub_19CE266D4(v37, v38, 1);
        sub_19CD3BE18(v34, v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19CD3BE18(v34, v36);
      }
    }
    else
    {
      v39 = v33;
      v40 = (void *)sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  return v28;
}

uint64_t BasicImpressionsTracker.consumeImpressions(in:on:)(char *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  uint64_t v14;
  void *v15;
  uint64_t inited;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v28[12];

  v28[11] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = *a1;
  v8 = v2 + 2;
  v9 = v2[4];
  v10 = v2[5];
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_19CDFDA8C(v11);
  swift_bridgeObjectRelease();
  v13 = *((double *)v2 + 3);
  LOBYTE(v28[0]) = v7;
  v14 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v9, v10, (unint64_t)v12, (unsigned __int8 *)v28, a2, MEMORY[0x1E0DEE9D8], v13);
  swift_release();
  if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) != 0)
  {
    v15 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F628);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = 0x6973736572706D69;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E6FLL;
    *(_QWORD *)(inited + 48) = v14;
    swift_bridgeObjectRetain();
    sub_19CE101C4(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    v17 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    v28[0] = 0;
    v18 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v17, 3, v28);

    v19 = v28[0];
    if (v18)
    {
      v20 = sub_19CFDEE70();
      v22 = v21;

      sub_19CFDF5B4();
      v23 = sub_19CFDF590();
      if (v24)
      {
        sub_19CE266D4(v23, v24, 0);
        sub_19CD3BE18(v20, v22);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19CD3BE18(v20, v22);
      }
    }
    else
    {
      v25 = v19;
      v26 = (void *)sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  *v8 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  return v14;
}

Swift::Void __swiftcall BasicImpressionsTracker.removeAllImpressions()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
}

uint64_t BasicImpressionsTracker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_19CE27938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = v2;
  v15 = *(_OWORD *)(a1 + 32);
  v16 = v3;
  v17 = *(_OWORD *)(a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return _s9JetEngine23BasicImpressionsTrackerC19elementDidEnterView_2on4with8positionyAA17ImpressionMetricsV_10Foundation4DateVAA0D7ContextVSiSgtF_0(&v12, a2, (uint64_t)v7);
}

uint64_t sub_19CE279A8(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v7[3];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 9);
  v5 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = v2;
  v15 = a1[2];
  v16 = v3;
  v17 = *(__int128 *)((char *)a1 + 56);
  v18 = v4;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v8 = 1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = v5;
  return BasicImpressionsTracker.elementDidLeaveView(_:on:with:)((uint64_t)&v12, a2, (uint64_t)v7);
}

uint64_t sub_19CE27A20()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE27A60(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v5 = (uint64_t *)(a2 + 24);
  v6 = result + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v7 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(*v5 + 16);
    if (!v9)
      goto LABEL_4;
    v10 = 0;
    while (*(_QWORD *)(*v5 + 32 + 8 * v10) != *(_QWORD *)(v6 + 8 * v7))
    {
      if (v9 == ++v10)
        goto LABEL_4;
    }
    swift_beginAccess();
    v11 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = a3(v11);
      *v5 = v11;
    }
    v13 = *(_QWORD *)(v11 + 16);
    if (v13 <= v10)
      break;
    if ((uint64_t)(~v10 + v13) < 0)
      goto LABEL_18;
    v8 = v13 - 1;
    memmove((void *)(v11 + 8 * v10 + 32), (const void *)(v11 + 8 * v10 + 40), 8 * (~v10 + v13));
    *(_QWORD *)(v11 + 16) = v8;
    *v5 = v11;
    swift_endAccess();
    swift_release();
    swift_release();
LABEL_4:
    if (++v7 == v3)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE27C04(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return result;
  v3 = a2 + 24;
  v4 = result + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v5 = 0;
  while (1)
  {
    v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
    if (!v7)
      goto LABEL_4;
    v8 = 0;
    while (*(_QWORD *)(*(_QWORD *)v3 + 32 + 8 * v8) != *(_QWORD *)(v4 + 8 * v5))
    {
      if (v7 == ++v8)
        goto LABEL_4;
    }
    swift_beginAccess();
    v9 = *(_QWORD **)v3;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v3 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_19CF81AC8(v9);
      *(_QWORD *)v3 = v9;
    }
    v11 = v9[2];
    if (v11 <= v8)
      break;
    if ((uint64_t)(~v8 + v11) < 0)
      goto LABEL_18;
    v6 = v11 - 1;
    memmove(&v9[v8 + 4], &v9[v8 + 5], 8 * (~v8 + v11));
    v9[2] = v6;
    *(_QWORD *)v3 = v9;
    swift_endAccess();
    swift_release();
    swift_release();
LABEL_4:
    if (++v5 == v2)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE27DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t aBlock;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  void *v42;
  uint64_t (*v43)();
  uint64_t v44;

  v6 = sub_19CFDF308();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF2D8();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v33 = v6;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
      v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 88);
      v18 = swift_retain_n();
      v19 = v17(v18);
      swift_release();
      if ((v19 & 1) == 0
        || (aBlock = a2,
            v40 = a3,
            (*(void (**)(uint64_t *))(*(_QWORD *)v16 + 104))(&aBlock),
            v20 = swift_retain(),
            v21 = v17(v20),
            swift_release(),
            (v21 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_19CED506C(0, v15[2] + 1, 1, v15);
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
          v15 = sub_19CED506C((_QWORD *)(v22 > 1), v23 + 1, 1, v15);
        v15[2] = v23 + 1;
        v15[v23 + 4] = v16;
      }
      ++v14;
      swift_release();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    v6 = v33;
    if (v15[2])
      goto LABEL_12;
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v24 = v35;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock = v25;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v26 = v34;
      v27 = v36;
      sub_19CFE0070();
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v15;
      *(_QWORD *)(v28 + 24) = a1;
      v43 = sub_19CE2961C;
      v44 = v28;
      aBlock = MEMORY[0x1E0C809B0];
      v40 = 1107296256;
      v41 = sub_19CD0C78C;
      v42 = &block_descriptor_78;
      v29 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v30 = v37;
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v30, v26, v29);
      _Block_release(v29);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v6);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE2811C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  uint64_t (*v48)();
  uint64_t v49;

  v8 = sub_19CFDF308();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF2D8();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v40 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v41 = a1;
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v37 = v12;
    v38 = v9;
    v39 = v8;
    v18 = a4 & 1;
    swift_bridgeObjectRetain();
    v19 = 0;
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v21 = *(_QWORD *)(v16 + 8 * v19 + 32);
      v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 88);
      v23 = swift_retain_n();
      v24 = v22(v23);
      swift_release();
      if ((v24 & 1) == 0
        || (aBlock = a2,
            v45 = a3,
            LOBYTE(v46) = v18,
            (*(void (**)(uint64_t *))(*(_QWORD *)v21 + 104))(&aBlock),
            v25 = swift_retain(),
            v26 = v22(v25),
            swift_release(),
            (v26 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_19CED5298(0, v20[2] + 1, 1, v20);
        v28 = v20[2];
        v27 = v20[3];
        if (v28 >= v27 >> 1)
          v20 = sub_19CED5298((_QWORD *)(v27 > 1), v28 + 1, 1, v20);
        v20[2] = v28 + 1;
        v20[v28 + 4] = v21;
      }
      ++v19;
      swift_release();
    }
    while (v17 != v19);
    swift_bridgeObjectRelease();
    v9 = v38;
    v8 = v39;
    v12 = v37;
    if (v20[2])
      goto LABEL_12;
  }
  else
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      v29 = v41;
      v39 = *(_QWORD *)(v41 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v30 = v42;
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock = v31;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v32 = v40;
      v33 = v43;
      sub_19CFE0070();
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = v20;
      *(_QWORD *)(v34 + 24) = v29;
      v48 = sub_19CE29558;
      v49 = v34;
      aBlock = MEMORY[0x1E0C809B0];
      v45 = 1107296256;
      v46 = sub_19CD0C78C;
      v47 = &block_descriptor_54;
      v35 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v12, v32, v35);
      _Block_release(v35);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE284A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t a1), void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;

  v45 = a5;
  v9 = sub_19CFDF308();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v44 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF2D8();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v40 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v41 = a1;
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v38 = v10;
    v39 = v9;
    swift_bridgeObjectRetain();
    v18 = 0;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v20 = *(_QWORD *)(v16 + 8 * v18 + 32);
      v21 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 88);
      v22 = swift_retain_n();
      v23 = v21(v22);
      swift_release();
      if ((v23 & 1) == 0)
        goto LABEL_7;
      aBlock = a2;
      v47 = a3;
      v48 = a4;
      v49 = v45;
      (*(void (**)(uint64_t *))(*(_QWORD *)v20 + 104))(&aBlock);
      v24 = swift_retain();
      v25 = v21(v24);
      swift_release();
      if ((v25 & 1) == 0)
      {
LABEL_7:
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_19CED55E4(0, v19[2] + 1, 1, v19);
        v27 = v19[2];
        v26 = v19[3];
        if (v27 >= v26 >> 1)
          v19 = sub_19CED55E4((_QWORD *)(v26 > 1), v27 + 1, 1, v19);
        v19[2] = v27 + 1;
        v19[v27 + 4] = v20;
      }
      ++v18;
      swift_release();
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
    v10 = v38;
    v9 = v39;
    if (v19[2])
      goto LABEL_12;
  }
  else
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      v28 = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v29 = v42;
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock = v30;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v31 = v40;
      v32 = v43;
      sub_19CFE0070();
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = v19;
      *(_QWORD *)(v33 + 24) = v28;
      v50 = sub_19CE292FC;
      v51 = v33;
      aBlock = MEMORY[0x1E0C809B0];
      v47 = 1107296256;
      v48 = sub_19CD0C78C;
      v49 = &block_descriptor_18;
      v34 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v35 = v44;
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v35, v31, v34);
      _Block_release(v34);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v32);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE2882C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD aBlock[6];

  v4 = sub_19CFDF308();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF2D8();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v31 = v5;
    v32 = v4;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
      v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 88);
      v18 = swift_retain_n();
      v19 = v17(v18);
      swift_release();
      if ((v19 & 1) == 0
        || ((*(void (**)(uint64_t))(*(_QWORD *)v16 + 104))(a2),
            v20 = swift_retain(),
            v21 = v17(v20),
            swift_release(),
            (v21 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_19CED6408(0, v15[2] + 1, 1, v15);
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
          v15 = sub_19CED6408((_QWORD *)(v22 > 1), v23 + 1, 1, v15);
        v15[2] = v23 + 1;
        v15[v23 + 4] = v16;
      }
      ++v14;
      swift_release();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    v5 = v31;
    v4 = v32;
    if (v15[2])
      goto LABEL_12;
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      v32 = *(_QWORD *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v24 = v33;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock[0] = v25;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v26 = v34;
      sub_19CFE0070();
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v15;
      *(_QWORD *)(v27 + 24) = a1;
      aBlock[4] = sub_19CE2950C;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19CD0C78C;
      aBlock[3] = &block_descriptor_42;
      v28 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v29 = v35;
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v29, v11, v28);
      _Block_release(v28);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v26);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE28B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD aBlock[6];

  v4 = sub_19CFDF308();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF2D8();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v31 = v5;
    v32 = v4;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
      v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 88);
      v18 = swift_retain_n();
      v19 = v17(v18);
      swift_release();
      if ((v19 & 1) == 0
        || (aBlock[0] = a2,
            (*(void (**)(_QWORD *))(*(_QWORD *)v16 + 104))(aBlock),
            v20 = swift_retain(),
            v21 = v17(v20),
            swift_release(),
            (v21 & 1) == 0))
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_19CED69F0(0, v15[2] + 1, 1, v15);
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
          v15 = sub_19CED69F0((_QWORD *)(v22 > 1), v23 + 1, 1, v15);
        v15[2] = v23 + 1;
        v15[v23 + 4] = v16;
      }
      ++v14;
      swift_release();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    v5 = v31;
    v4 = v32;
    if (v15[2])
      goto LABEL_12;
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      v32 = *(_QWORD *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v24 = v33;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock[0] = v25;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v26 = v34;
      sub_19CFE0070();
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v15;
      *(_QWORD *)(v27 + 24) = a1;
      aBlock[4] = sub_19CE2934C;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19CD0C78C;
      aBlock[3] = &block_descriptor_30;
      v28 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v29 = v35;
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v29, v11, v28);
      _Block_release(v28);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v26);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE28EF8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD aBlock[6];

  v4 = sub_19CFDF308();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF2D8();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v30 = v5;
    v31 = v4;
    v14 = a2 & 1;
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v17 = *(_QWORD *)(v12 + 8 * v15 + 32);
      v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 88);
      v19 = swift_retain();
      if ((v18(v19) & 1) != 0
        && (LOBYTE(aBlock[0]) = v14,
            v20 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v17 + 104))(aBlock),
            (v18(v20) & 1) != 0))
      {
        swift_release();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_19CED6F3C(0, v16[2] + 1, 1, v16);
        v22 = v16[2];
        v21 = v16[3];
        if (v22 >= v21 >> 1)
          v16 = sub_19CED6F3C((_QWORD *)(v21 > 1), v22 + 1, 1, v16);
        v16[2] = v22 + 1;
        v16[v22 + 4] = v17;
      }
      ++v15;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    v5 = v30;
    v4 = v31;
    if (v16[2])
      goto LABEL_13;
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_13:
      v31 = *(_QWORD *)(a1 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
      v23 = v32;
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19D0522A0;
      sub_19CFDF2CC();
      aBlock[0] = v24;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v25 = v33;
      sub_19CFE0070();
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v16;
      *(_QWORD *)(v26 + 24) = a1;
      aBlock[4] = sub_19CE29294;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19CD0C78C;
      aBlock[3] = &block_descriptor_6_1;
      v27 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v28 = v34;
      sub_19CFDF2F0();
      MEMORY[0x1A1AD9FF4](0, v28, v11, v27);
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v25);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return swift_bridgeObjectRelease();
}

