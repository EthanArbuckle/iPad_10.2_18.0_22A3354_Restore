uint64_t Models.HTTPAction.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  _UNKNOWN **v13;
  ValueMetadata *v14;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;
  ValueMetadata *v22;
  _UNKNOWN **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  _OWORD v40[2];
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4424D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v37 = sub_19CF37C58();
  sub_19CFE0A24();
  v38 = v1;
  v44 = *v1;
  LOBYTE(v41[0]) = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v35 = v5;
  v36 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_19CFE09DC();
  v34 = 0xD000000000000023;
  v11 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v11)
    v14 = (ValueMetadata *)v11;
  else
    v14 = &type metadata for EmptyActionKindTable;
  if (v11)
    v15 = v13;
  else
    v15 = &off_1E3DD1128;
  v16 = type metadata accessor for Models.HTTPAction();
  v17 = (uint64_t)v38 + *(int *)(v16 + 24);
  LOBYTE(v44) = 2;
  encodeActionModel<A, B>(_:using:container:forKey:)(v17, (uint64_t)v14, (uint64_t)v8, (uint64_t)&v44, (uint64_t)v14, (uint64_t)&_s10HTTPActionV10CodingKeysON, (uint64_t)v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18 = sub_19CFE09DC();
  v19 = sub_19CF05CE4(v34, 0x800000019D06ECA0, v18);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v19)
    v22 = (ValueMetadata *)v19;
  else
    v22 = &type metadata for EmptyActionKindTable;
  if (v19)
    v23 = v21;
  else
    v23 = &off_1E3DD1128;
  v24 = (uint64_t)v38 + *(int *)(v16 + 28);
  LOBYTE(v44) = 3;
  encodeActionModel<A, B>(_:using:container:forKey:)(v24, (uint64_t)v22, (uint64_t)v8, (uint64_t)&v44, (uint64_t)v22, (uint64_t)&_s10HTTPActionV10CodingKeysON, (uint64_t)v23);
  v37 = v16;
  LOBYTE(v44) = 1;
  sub_19CFE04F0();
  v34 = v43;
  v25 = v42;
  v33 = __swift_project_boxed_opaque_existential_1(v41, v42);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09DC();
  v26 = swift_bridgeObjectRetain();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v26);
  v27 = v44;
  v28 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
  v46 = v28;
  swift_bridgeObjectRetain();
  v29 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v27);
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_19CDC6F28(v29);
    v28 = v46;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
  *(_QWORD *)&v44 = v28;
  sub_19CD433C0(&v44, v40);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = v27;
  sub_19CD13D40(v40, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
  v31 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v44 = v31;
  v32 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v44);
  sub_19CF5C2AC(v32, v25, v34, (uint64_t **)&v44);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
  NetRequest.encode(to:)(&v44);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v44);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v8, v36);
}

uint64_t sub_19CF37B64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Models.HTTPAction.init(from:)(a1, a2);
}

uint64_t sub_19CF37B78(_QWORD *a1)
{
  return Models.HTTPAction.encode(to:)(a1);
}

uint64_t type metadata accessor for Models.HTTPAction()
{
  uint64_t result;

  result = qword_1EE439EE0;
  if (!qword_1EE439EE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CF37BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE439B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF37C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE439B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19CF37C58()
{
  unint64_t result;

  result = qword_1EE4424C8;
  if (!qword_1EE4424C8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06395C, &_s10HTTPActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4424C8);
  }
  return result;
}

uint64_t sub_19CF37C9C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE439B38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *_s10HTTPActionVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_19CFDEDE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for NetRequest();
    v14 = v13[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v18 = *(_QWORD *)v16;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = v18;
    *((_QWORD *)v15 + 1) = v17;
    *(_QWORD *)&v9[v13[6]] = *(_QWORD *)&v10[v13[6]];
    *(_QWORD *)&v9[v13[7]] = *(_QWORD *)&v10[v13[7]];
    *(_QWORD *)&v9[v13[8]] = *(_QWORD *)&v10[v13[8]];
    v19 = v13[9];
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = v21[16];
    v23 = v13[10];
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    *(_QWORD *)&v9[v13[11]] = *(_QWORD *)&v10[v13[11]];
    v27 = a3[6];
    v28 = (char *)v7 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(uint64_t *)((char *)a2 + v27 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 4);
      *((_QWORD *)v28 + 3) = v30;
      *((_QWORD *)v28 + 4) = v31;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
    }
    else
    {
      v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    }
    v33 = a3[7];
    v34 = (char *)v7 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 24);
    if (v36)
    {
      v37 = *((_QWORD *)v35 + 4);
      *((_QWORD *)v34 + 3) = v36;
      *((_QWORD *)v34 + 4) = v37;
      (**(void (***)(void))(v36 - 8))();
    }
    else
    {
      v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    }
  }
  return v7;
}

uint64_t _s10HTTPActionVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for NetRequest();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[6];
  if (*(_QWORD *)(v6 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(v6);
  result = a1 + a2[7];
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  return result;
}

_QWORD *_s10HTTPActionVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEDE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for NetRequest();
  v13 = v12[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  *(_QWORD *)&v8[v12[6]] = *(_QWORD *)&v9[v12[6]];
  *(_QWORD *)&v8[v12[7]] = *(_QWORD *)&v9[v12[7]];
  *(_QWORD *)&v8[v12[8]] = *(_QWORD *)&v9[v12[8]];
  v18 = v12[9];
  v19 = &v8[v18];
  v20 = &v9[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v19[16] = v20[16];
  v22 = v12[10];
  v23 = &v8[v22];
  v24 = &v9[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v8[v12[11]] = *(_QWORD *)&v9[v12[11]];
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a2 + v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 3) = v29;
    *((_QWORD *)v27 + 4) = v30;
    (**(void (***)(char *, char *, uint64_t))(v29 - 8))(v27, v28, v29);
  }
  else
  {
    v31 = *((_OWORD *)v28 + 1);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v31;
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  }
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)((char *)a2 + v32 + 24);
  if (v35)
  {
    v36 = *((_QWORD *)v34 + 4);
    *((_QWORD *)v33 + 3) = v35;
    *((_QWORD *)v33 + 4) = v36;
    (**(void (***)(void))(v35 - 8))();
  }
  else
  {
    v37 = *((_OWORD *)v34 + 1);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v37;
    *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  }
  return a1;
}

_QWORD *_s10HTTPActionVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v14 = v10[9];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  v17 = v10[10];
  v18 = &v7[v17];
  v19 = &v8[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[6];
  v21 = (uint64_t)a1 + v20;
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = *(_QWORD *)((char *)a2 + v20 + 24);
  if (*(_QWORD *)((char *)a1 + v20 + 24))
  {
    if (v23)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, v22);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v21);
  }
  else if (v23)
  {
    *(_QWORD *)(v21 + 24) = v23;
    *(_QWORD *)(v21 + 32) = v22[4];
    (**(void (***)(uint64_t, char *))(v23 - 8))(v21, (char *)v22);
    goto LABEL_8;
  }
  v24 = *(_OWORD *)v22;
  v25 = *((_OWORD *)v22 + 1);
  *(_QWORD *)(v21 + 32) = v22[4];
  *(_OWORD *)v21 = v24;
  *(_OWORD *)(v21 + 16) = v25;
LABEL_8:
  v26 = a3[7];
  v27 = (uint64_t)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *((_QWORD *)v28 + 3);
  if (!*(_QWORD *)((char *)a1 + v26 + 24))
  {
    if (v29)
    {
      *(_QWORD *)(v27 + 24) = v29;
      *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
      (**(void (***)(uint64_t, char *))(v29 - 8))(v27, v28);
      return a1;
    }
LABEL_14:
    v30 = *(_OWORD *)v28;
    v31 = *((_OWORD *)v28 + 1);
    *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
    *(_OWORD *)v27 = v30;
    *(_OWORD *)(v27 + 16) = v31;
    return a1;
  }
  if (!v29)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v27);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v27, (uint64_t *)v28);
  return a1;
}

_OWORD *_s10HTTPActionVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  __int128 v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v11 = v10[9];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v12[16] = v13[16];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)&v7[v10[10]] = *(_OWORD *)&v8[v10[10]];
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  v14 = a3[6];
  v15 = a3[7];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = (char *)a1 + v15;
  v20 = (char *)a2 + v15;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  return a1;
}

_QWORD *_s10HTTPActionVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  __int128 v31;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v16 = v10[9];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  v20 = v10[10];
  v21 = &v7[v20];
  v22 = &v8[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  v25 = a3[6];
  v26 = (uint64_t)a1 + v25;
  v27 = (char *)a2 + v25;
  if (*(_QWORD *)((char *)a1 + v25 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(v26);
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 32) = *((_QWORD *)v27 + 4);
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  if (*(_QWORD *)((char *)a1 + v29 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v29);
  v31 = *(_OWORD *)((char *)a2 + v29 + 16);
  *(_OWORD *)v30 = *(_OWORD *)((char *)a2 + v29);
  *((_OWORD *)v30 + 1) = v31;
  *((_QWORD *)v30 + 4) = *(_QWORD *)((char *)a2 + v29 + 32);
  return a1;
}

uint64_t _s10HTTPActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF38668(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NetRequest();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t _s10HTTPActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CF386F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NetRequest();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CF38764()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s10HTTPActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CF38830 + 4 * byte_19D0637C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CF38864 + 4 * byte_19D0637C4[v4]))();
}

uint64_t sub_19CF38864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF3886C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF38874);
  return result;
}

uint64_t sub_19CF38880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF38888);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CF3888C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF38894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10HTTPActionV10CodingKeysOMa()
{
  return &_s10HTTPActionV10CodingKeysON;
}

unint64_t sub_19CF388B4()
{
  unint64_t result;

  result = qword_1EE4424D8;
  if (!qword_1EE4424D8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D063934, &_s10HTTPActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4424D8);
  }
  return result;
}

unint64_t sub_19CF388FC()
{
  unint64_t result;

  result = qword_1EE4424E0;
  if (!qword_1EE4424E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0638A4, &_s10HTTPActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4424E0);
  }
  return result;
}

unint64_t sub_19CF38944()
{
  unint64_t result;

  result = qword_1EE4424E8;
  if (!qword_1EE4424E8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0638CC, &_s10HTTPActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4424E8);
  }
  return result;
}

uint64_t sub_19CF38988(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4173736563637573 && a2 == 0xED00006E6F697463 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x416572756C696166 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t MapStateCenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  MapStateCenter.init()(v0, v1, v2, v3);
  return v0;
}

_QWORD *MapStateCenter.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *v4;
  v6 = type metadata accessor for StatePath(255, *(_QWORD *)(*v4 + 80), a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43C2E0);
  swift_getTupleTypeMetadata2();
  sub_19CFDF8B4();
  v8 = *(_QWORD *)(v5 + 104);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v6, &v8);
  v4[2] = sub_19CFDF41C();
  return v4;
}

void MapStateCenter.Transaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v9[5];
  char v10;

  v7 = *(_QWORD *)(a5 + 8);
  v9[3] = a4;
  v9[4] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a4);
  v10 = 0;
  swift_bridgeObjectRetain();
  type metadata accessor for MapStateCenter.Transaction.Change();
}

uint64_t sub_19CF38D00()
{
  sub_19CFDF938();
  return sub_19CFDF908();
}

void MapStateCenter.Transaction.removeState(at:recursively:)()
{
  swift_bridgeObjectRetain();
  type metadata accessor for MapStateCenter.Transaction.Change();
}

uint64_t sub_19CF38D7C()
{
  sub_19CFDF938();
  return sub_19CFDF908();
}

Swift::Void __swiftcall MapStateCenter.Transaction.removeAllState()()
{
  type metadata accessor for MapStateCenter.Transaction.Change();
}

uint64_t sub_19CF38DC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_19CFE05B0();
  swift_allocObject();
  v1 = sub_19CFDF884();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_BYTE *)(v2 + 48) = 3;
  v3 = sub_19CE48CB8(v1);
  result = swift_bridgeObjectRelease();
  *v0 = v3;
  return result;
}

void sub_19CF38E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MapStateCenter.Transaction.changeState<A>(at:to:)(a1, a2, a5, a3, a4);
}

uint64_t MapStateCenter.currentState<A>(at:)@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, unint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  __int128 v46;
  _QWORD v47[4];
  unint64_t v48;
  unint64_t v49;
  uint64_t MetatypeMetadata;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[48];

  v9 = *v4;
  *(_QWORD *)&v46 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46, v11);
  v13 = (char *)&v42 - v12;
  v14 = *a1;
  swift_beginAccess();
  v45 = v4;
  v15 = v4[2];
  v16 = v9;
  v47[0] = v14;
  v19 = type metadata accessor for StatePath(0, *(_QWORD *)(v9 + 80), v17, v18);
  swift_bridgeObjectRetain();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
  v51 = *(_QWORD *)(v16 + 104);
  v21 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> StatePath<A>, v19, &v51);
  MEMORY[0x1A1AD96C4](&v52, v47, v15, v19, v20, v21);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v53 + 1))
  {
    v43 = a3;
    v44 = a4;
    sub_19CCD14C4(&v52, (uint64_t)v54);
    swift_endAccess();
    sub_19CCD5B84((uint64_t)v54, (uint64_t)&v52);
    v22 = swift_dynamicCast();
    v23 = *(_QWORD *)(a2 - 8);
    v24 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v23 + 56);
    if (v22)
    {
      v24(v13, 0, 1, a2);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v54);
      return (*(uint64_t (**)(uint64_t, char *, unint64_t))(v23 + 32))(v44, v13, a2);
    }
    else
    {
      v24(v13, 1, 1, a2);
      (*(void (**)(char *, _QWORD))(v10 + 8))(v13, v46);
      if (qword_1EE43BE78 != -1)
        swift_once();
      v26 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_19D050750;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v28 = swift_allocObject();
      v46 = xmmword_19D0522A0;
      *(_OWORD *)(v28 + 16) = xmmword_19D0522A0;
      v29 = MEMORY[0x1E0DEA968];
      MetatypeMetadata = MEMORY[0x1E0DEA968];
      v48 = 0x7461206574617453;
      v49 = 0xE800000000000000;
      v52 = 0u;
      v53 = 0u;
      v30 = v26;
      sub_19CD40658((uint64_t)&v48, (uint64_t)&v52);
      *(_BYTE *)(v28 + 64) = 0;
      v31 = v53;
      *(_OWORD *)(v28 + 32) = v52;
      *(_OWORD *)(v28 + 48) = v31;
      *(_QWORD *)(v27 + 32) = v28;
      MetatypeMetadata = v19;
      v48 = v14;
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v46;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v47);
      v52 = 0u;
      v53 = 0u;
      swift_bridgeObjectRetain();
      sub_19CD40658((uint64_t)v47, (uint64_t)&v52);
      *(_BYTE *)(v32 + 64) = 0;
      v33 = v53;
      *(_OWORD *)(v32 + 32) = v52;
      *(_OWORD *)(v32 + 48) = v33;
      *(_QWORD *)(v27 + 40) = v32;
      sub_19CCECFE4((uint64_t)&v48, &qword_1ECEB3370);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v46;
      MetatypeMetadata = v29;
      v48 = 28265;
      v49 = 0xE200000000000000;
      v52 = 0u;
      v53 = 0u;
      sub_19CD40658((uint64_t)&v48, (uint64_t)&v52);
      *(_BYTE *)(v34 + 64) = 0;
      v35 = v53;
      *(_OWORD *)(v34 + 32) = v52;
      *(_OWORD *)(v34 + 48) = v35;
      *(_QWORD *)(v27 + 48) = v34;
      MetatypeMetadata = v16;
      v48 = (unint64_t)v45;
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v46;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v47);
      v52 = 0u;
      v53 = 0u;
      swift_retain();
      sub_19CD40658((uint64_t)v47, (uint64_t)&v52);
      *(_BYTE *)(v36 + 64) = 0;
      v37 = v53;
      *(_OWORD *)(v36 + 32) = v52;
      *(_OWORD *)(v36 + 48) = v37;
      *(_QWORD *)(v27 + 56) = v36;
      sub_19CCECFE4((uint64_t)&v48, &qword_1ECEB3370);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v46;
      MetatypeMetadata = v29;
      v48 = 0xD000000000000014;
      v49 = 0x800000019D0775D0;
      v52 = 0u;
      v53 = 0u;
      sub_19CD40658((uint64_t)&v48, (uint64_t)&v52);
      *(_BYTE *)(v38 + 64) = 0;
      v39 = v53;
      *(_OWORD *)(v38 + 32) = v52;
      *(_OWORD *)(v38 + 48) = v39;
      *(_QWORD *)(v27 + 64) = v38;
      MetatypeMetadata = swift_getMetatypeMetadata();
      v48 = a2;
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v46;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v47);
      v52 = 0u;
      v53 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v52);
      *(_BYTE *)(v40 + 64) = 0;
      v41 = v53;
      *(_OWORD *)(v40 + 32) = v52;
      *(_OWORD *)(v40 + 48) = v41;
      *(_QWORD *)(v27 + 72) = v40;
      sub_19CCECFE4((uint64_t)&v48, &qword_1ECEB3370);
      *(_QWORD *)&v52 = v30;
      LOBYTE(v48) = 3;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v48);

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t))(v43 + 24))(a2);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v54);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v52, qword_1EE43B648);
    swift_endAccess();
    return (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
}

void MapStateCenter.beginTransaction()()
{
  type metadata accessor for MapStateCenter.Transaction.Change();
}

uint64_t sub_19CF393B8()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_19CFDF8B4();
  *v0 = result;
  return result;
}

void MapStateCenter.commit(_:)()
{
  type metadata accessor for MapStateCenter.Transaction.Change();
}

uint64_t sub_19CF39428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  v4 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v4);
  result = sub_19CFDFC5C();
  if ((result & 1) == 0)
  {
    v6 = swift_bridgeObjectRetain();
    if (MEMORY[0x1A1AD9B44](v6, a1))
    {
      swift_beginAccess();
      v7 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v7 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2 - 208, v1 + 32, a1);
        __asm { BR              X9 }
      }
      sub_19CFE0160();
      __break(1u);
      __break(1u);
      JUMPOUT(0x19CF3995CLL);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MapStateCenter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MapStateCenter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void type metadata accessor for MapStateCenter.Transaction.Change()
{
  JUMPOUT(0x1A1ADBCC8);
}

void sub_19CF399C4()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF399D4()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for MapStateCenter()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t method lookup function for MapStateCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapStateCenter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void type metadata accessor for MapStateCenter.Transaction()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t TransientPreferences.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v0 + 24) = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t TransientPreferences.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v0 + 24) = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  return v0;
}

id TransientPreferences.subscript.getter@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;

  v3 = v2;
  v6 = *(void **)(v3 + 16);
  objc_msgSend(v6, sel_lock);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  v11 = v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_19CD3FD1C(v9, v11), (v14 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  return objc_msgSend(v6, sel_unlock);
}

uint64_t sub_19CF39BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[32];
  _BYTE v13[32];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCD5B84(a3, (uint64_t)v14);
  sub_19CD40794(a1, (uint64_t)v13);
  v5 = *(void **)(*(_QWORD *)a2 + 16);
  objc_msgSend(v5, sel_lock);
  v6 = v15;
  v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v10 = v9;
  sub_19CD40794((uint64_t)v13, (uint64_t)v12);
  swift_beginAccess();
  sub_19CD13C70((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return sub_19CD3F190((uint64_t)v13);
}

uint64_t TransientPreferences.subscript.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[32];

  v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v10 = v9;
  sub_19CD40794(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_19CD13C70((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return sub_19CD3F190(a1);
}

void (*TransientPreferences.subscript.modify(_QWORD *a1, _QWORD *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  char *v5;
  _OWORD *v6;

  v5 = (char *)malloc(0xD0uLL);
  *a1 = v5;
  v6 = v5 + 112;
  *((_QWORD *)v5 + 25) = v2;
  sub_19CCD5B84((uint64_t)a2, (uint64_t)v5);
  TransientPreferences.subscript.getter(a2, v6);
  return sub_19CF39E00;
}

void sub_19CF39E00(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *a1;
  v3 = (_QWORD *)(*a1 + 40);
  v4 = *a1 + 80;
  v5 = *a1 + 112;
  if ((a2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 200);
    sub_19CD40794(*a1 + 112, v4);
    sub_19CCD14C4((__int128 *)v2, (uint64_t)v3);
    v7 = *(void **)(v6 + 16);
    objc_msgSend(v7, sel_lock);
    v19 = v5;
    v8 = *(_QWORD *)(v2 + 64);
    v9 = *(_QWORD *)(v2 + 72);
    __swift_project_boxed_opaque_existential_1(v3, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    v12 = v11;
    sub_19CD40794(v4, v2 + 144);
    swift_beginAccess();
    v5 = v19;
    sub_19CD13C70(v2 + 144, v10, v12);
    swift_endAccess();
    objc_msgSend(v7, sel_unlock);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_19CD3F190(v4);
  }
  else
  {
    v13 = *(void **)(*(_QWORD *)(v2 + 200) + 16);
    objc_msgSend(v13, sel_lock);
    v14 = *(_QWORD *)(v2 + 24);
    v15 = *(_QWORD *)(v2 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v2, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    v18 = v17;
    sub_19CD40794(v5, (uint64_t)v3);
    swift_beginAccess();
    sub_19CD13C70((uint64_t)v3, v16, v18);
    swift_endAccess();
    objc_msgSend(v13, sel_unlock);
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  sub_19CD3F190(v5);
  free((void *)v2);
}

uint64_t TransientPreferences.removeValue(forKey:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v2 = v1;
  v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v9 = v8;
  swift_beginAccess();
  sub_19CD143A0(v7, v9, v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_unlock);
  return sub_19CD3F190((uint64_t)v11);
}

uint64_t TransientPreferences.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransientPreferences.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF3A0F0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[32];

  v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v10 = v9;
  sub_19CD40794(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_19CD13C70((uint64_t)v12, v8, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
  return sub_19CD3F190(a1);
}

void (*sub_19CF3A1D4(_QWORD *a1, _QWORD *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = TransientPreferences.subscript.modify(v4, a2);
  return sub_19CDB97F0;
}

uint64_t sub_19CF3A220(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v2 = v1;
  v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v9 = v8;
  swift_beginAccess();
  sub_19CD143A0(v7, v9, v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_unlock);
  return sub_19CD3F190((uint64_t)v11);
}

id sub_19CF3A2EC@<X0>(_QWORD *a1@<X1>, _OWORD *a2@<X8>)
{
  return TransientPreferences.subscript.getter(a1, a2);
}

uint64_t sub_19CF3A314()
{
  return 0;
}

uint64_t type metadata accessor for TransientPreferences()
{
  return objc_opt_self();
}

uint64_t method lookup function for TransientPreferences()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransientPreferences.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EventObserver.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventObserver.notify(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_19CF3A368@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_19CDE0324(a1, (uint64_t)v11);
  v3 = v12;
  if (v12)
  {
    v4 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    v7 = v6;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    if (v7)
    {
      *a2 = v5;
      a2[1] = v7;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v11, &qword_1ECEB1328);
  }
  sub_19CDC5494();
  swift_allocError();
  v9 = MEMORY[0x1E0DEE9D8];
  *v10 = &type metadata for JSONObject;
  v10[1] = v9;
  v10[2] = 0;
  v10[3] = 0;
  return swift_willThrow();
}

_QWORD *sub_19CF3A444(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  if (!*(_QWORD *)(a2 + 16))
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = (void *)sub_19CFDF554();
  v4 = objc_msgSend(a1, sel_localizedStringsForTable_localization_, 0, v3);

  v5 = sub_19CFDF3C8();
  swift_bridgeObjectRelease();

  v6 = sub_19CDFDF50(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19CF3A50C()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_19CF3A524()
{
  uint64_t v0;

  return sub_19CF3A444(*(void **)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_19CF3A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;

  return sub_19CF3A554(a1, a2, a3, a4, *v4);
}

uint64_t sub_19CF3A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v6 = (void *)sub_19CFDF554();
  v7 = (void *)sub_19CFDF554();
  v8 = (void *)sub_19CFDF554();
  v9 = objc_msgSend(a5, sel_localizedStringForKey_value_table_localization_, v6, v7, 0, v8);

  v10 = sub_19CFDF578();
  v12 = v11;

  if (v10)
    v13 = 0;
  else
    v13 = v12 == 0xE100000000000000;
  if (v13 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

_QWORD *sub_19CF3A658(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  void *v43;
  id v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void **v55;
  void *v56;
  char *v57;
  void *v58;
  _QWORD *v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  unint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  id v90[5];
  _OWORD v91[2];
  uint64_t v92;
  uint64_t v93;

  v5 = v4;
  v83 = a4;
  v82 = a3;
  v93 = *MEMORY[0x1E0C80C00];
  v8 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v8, v9);
  v74 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_19CFDE864();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76, v11);
  v73 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDEFA8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_19CFDEDE0();
  v18 = *(_QWORD *)(v78 - 8);
  v20 = MEMORY[0x1E0C80A78](v78, v19);
  v77 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20, v22);
  v25 = (char *)&v69 - v24;
  v27 = MEMORY[0x1E0C80A78](v23, v26);
  v79 = (char *)&v69 - v28;
  MEMORY[0x1E0C80A78](v27, v29);
  v80 = (char *)&v69 - v30;
  v31 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v31, v32);
  sub_19CFDF5B4();
  v81 = a1;
  sub_19CFDF590();
  if (!v33)
    goto LABEL_8;
  JSONObject.init(deserializing:)((uint64_t *)v90);
  if (v4)
  {
LABEL_9:
    sub_19CD3BE18(v82, v83);
    sub_19CD3BE18(v81, a2);
    return v5;
  }
  v72 = a2;
  sub_19CDE0324((uint64_t)v90, (uint64_t)v84);
  v34 = v85;
  if (!v85)
  {
    sub_19CCECFE4((uint64_t)v84, &qword_1ECEB1328);
    v87 = 0u;
    v88 = 0u;
    v89 = 0;
    sub_19CD3E3F8((uint64_t)v90);
    goto LABEL_7;
  }
  v35 = v86;
  v5 = __swift_project_boxed_opaque_existential_1(v84, v85);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v35 + 120))(&v87, v34, v35);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v84);
  v36 = *((_QWORD *)&v88 + 1);
  sub_19CD3E3F8((uint64_t)v90);
  if (!v36)
  {
LABEL_7:
    sub_19CCECFE4((uint64_t)&v87, &qword_1EE43D068);
    a2 = v72;
LABEL_8:
    sub_19CDC5494();
    swift_allocError();
    v39 = MEMORY[0x1E0DEE9D8];
    *v40 = MEMORY[0x1E0CB0338];
    v40[1] = v39;
    v40[2] = 0;
    v40[3] = 0;
    swift_willThrow();
    goto LABEL_9;
  }
  v91[0] = v87;
  v91[1] = v88;
  v37 = v89;
  v92 = v89;
  v38 = *((_QWORD *)&v88 + 1);
  __swift_project_boxed_opaque_existential_1(v91, *((uint64_t *)&v88 + 1));
  v42 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), _QWORD, _QWORD, uint64_t, uint64_t))(v37 + 48))(sub_19CF3A368, 0, MEMORY[0x1E0DEA968], v38, v37);
  v43 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v71 = objc_msgSend(v43, sel_defaultManager);
  v44 = objc_msgSend(v71, sel_temporaryDirectory);
  sub_19CFDED74();

  sub_19CFDEF9C();
  sub_19CFDEF90();
  v70 = v42;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v45 = v79;
  sub_19CFDED38();
  swift_bridgeObjectRelease();
  v46 = *(void (**)(char *, uint64_t))(v18 + 8);
  v47 = v78;
  v46(v25, v78);
  v48 = v80;
  sub_19CFDED38();
  v49 = v45;
  v50 = v71;
  v46(v49, v47);
  v51 = (void *)sub_19CFDED2C();
  v90[0] = 0;
  LOBYTE(v42) = objc_msgSend(v50, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v51, 1, 0, v90);

  v5 = v90[0];
  if ((v42 & 1) != 0)
  {
    v52 = v70;
    v53 = *(_QWORD *)(v70 + 16);
    if (v53)
    {
      swift_bridgeObjectRetain();
      v54 = v5;
      v55 = (void **)(v52 + 40);
      while (1)
      {
        v56 = *v55;
        v90[0] = *(v55 - 1);
        v90[1] = v56;
        swift_bridgeObjectRetain();
        sub_19CFDF698();
        v57 = v79;
        sub_19CFDED38();
        swift_bridgeObjectRelease();
        v58 = (void *)sub_19CFDED2C();
        v46(v57, v47);
        v90[0] = 0;
        LODWORD(v57) = objc_msgSend(v71, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v58, 1, 0, v90);

        v59 = v90[0];
        if (!(_DWORD)v57)
          break;
        v55 += 2;
        if (!--v53)
        {
          swift_bridgeObjectRelease();
          v48 = v80;
          goto LABEL_19;
        }
      }
      v5 = v59;
      swift_bridgeObjectRelease_n();
      sub_19CFDEC9C();

      swift_willThrow();
      sub_19CD3BE18(v82, v83);
      sub_19CD3BE18(v81, v72);
      v46(v80, v47);
      sub_19CE07F20((uint64_t)v91);
    }
    else
    {
      v61 = v90[0];
LABEL_19:
      v62 = v77;
      sub_19CFDED38();
      v63 = v82;
      v64 = v83;
      sub_19CFDEE7C();
      v46(v62, v47);
      v65 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
      v66 = (void *)sub_19CFDED2C();
      v5 = objc_msgSend(v65, sel_initWithURL_, v66);

      if (v5)
      {

        sub_19CD3BE18(v63, v64);
        sub_19CD3BE18(v81, v72);
        v46(v48, v47);
        sub_19CE07F20((uint64_t)v91);
        swift_bridgeObjectRelease();
        return v5;
      }
      swift_bridgeObjectRelease();
      sub_19CFDE834();
      sub_19CE07B90(MEMORY[0x1E0DEE9D8]);
      sub_19CEDD8AC();
      v67 = v73;
      v68 = v76;
      sub_19CFDEC84();
      v5 = v67;
      sub_19CFDE81C();
      (*(void (**)(_QWORD *, uint64_t))(v75 + 8))(v67, v68);
      swift_willThrow();

      sub_19CD3BE18(v63, v64);
      sub_19CD3BE18(v81, v72);
      v46(v48, v47);
      sub_19CE07F20((uint64_t)v91);
    }
  }
  else
  {
    v60 = v90[0];
    swift_bridgeObjectRelease();
    sub_19CFDEC9C();

    swift_willThrow();
    sub_19CD3BE18(v82, v83);
    sub_19CD3BE18(v81, v72);
    v46(v48, v47);
    sub_19CE07F20((uint64_t)v91);
  }
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *initializeBufferWithCopyOfBuffer for LocalizedStringsContainerLoctable(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LocalizedStringsContainerLoctable(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for LocalizedStringsContainerLoctable(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for LocalizedStringsContainerLoctable(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerLoctable()
{
  return &type metadata for LocalizedStringsContainerLoctable;
}

void sub_19CF3B098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_19CFDEC90();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id sub_19CF3B0F0()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_19CF3B238()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v2 = *MEMORY[0x1E0CFD9B8];
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing);
  if (sub_19CFDEA68())
  {
    v4 = (id)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v1, sel_postNotificationName_object_userInfo_, v2, v3, v4);

}

id sub_19CF3B534(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;
  id v6;
  void *v7;

  v4 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing];
  v5 = a1;
  v6 = objc_msgSend(v4, *a3);
  sub_19CFDF578();

  v7 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_19CF3B7AC(void *a1, SEL *a2)
{
  uint64_t v2;
  id v5;
  char v6;
  id result;

  if (!*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides) + 16))
    return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing), *a2, a1));
  v5 = a1;
  sub_19CE12138(v5);
  if ((v6 & 1) == 0)
  {

    return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing), *a2, a1));
  }
  swift_unknownObjectRetain();

  objc_opt_self();
  result = (id)swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing), *a2, a1));
  }
  return result;
}

void sub_19CF3B8C8(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  id v7;
  id v8;

  if (a1)
  {
    v7 = a1;
    swift_bridgeObjectRetain();
    v8 = sub_19CF3BC64(v7, a5);
    ((void (*)(id, _QWORD))a3)(v8, 0);

  }
  else
  {
    a3();
  }
}

id sub_19CF3BAA4()
{
  uint64_t v0;
  void *v1;
  id result;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing);
  objc_opt_self();
  result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    v3 = objc_msgSend(v1, sel_profile);
    sub_19CFDF578();

    v4 = objc_msgSend(v1, sel_profileVersion);
    sub_19CFDF578();

    v5 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v5, v6);

    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides);
    swift_bridgeObjectRetain();
    return sub_19CF3BC64(v7, v8);
  }
  return result;
}

uint64_t type metadata accessor for OverriddenAMSBag()
{
  return objc_opt_self();
}

id sub_19CF3BC64(void *a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  v4 = (objc_class *)type metadata accessor for OverriddenAMSBag();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides] = a2;
  v11.receiver = v5;
  v11.super_class = v4;
  swift_unknownObjectRetain();
  v6 = objc_msgSendSuper2(&v11, sel_init);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v7 = (void *)objc_opt_self();
    v8 = v6;
    v9 = objc_msgSend(v7, sel_defaultCenter, v11.receiver, v11.super_class);
    objc_msgSend(v9, sel_addObserver_selector_name_object_, v8, sel_forwardSnapshotBagExpiredValueAccessed_, *MEMORY[0x1E0CFD9B8], a1);

  }
  return v6;
}

uint64_t sub_19CF3BD64()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_19CF3BD88()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CF3BDB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_19CF3B8C8(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

id sub_19CF3BDC0(uint64_t a1, uint64_t a2, Class a3)
{
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  objc_super v12;

  v6 = (char *)objc_allocWithZone(a3);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_backing] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9JetEngine16OverriddenAMSBag_overrides] = a2;
  v12.receiver = v6;
  v12.super_class = a3;
  swift_unknownObjectRetain();
  v7 = objc_msgSendSuper2(&v12, sel_init);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v8 = (void *)objc_opt_self();
    v9 = v7;
    v10 = objc_msgSend(v8, sel_defaultCenter, v12.receiver, v12.super_class);
    objc_msgSend(v10, sel_addObserver_selector_name_object_, v9, sel_forwardSnapshotBagExpiredValueAccessed_, *MEMORY[0x1E0CFD9B8], a1);

  }
  swift_unknownObjectRelease();
  return v7;
}

uint64_t type metadata accessor for RingBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RingBuffer);
}

void sub_19CF3BED0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF3BEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_19CFDFF5C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v16 - v10;
  v12 = v3[1];
  if (v12 == MEMORY[0x1A1AD9B14](*v3, v6, v9))
  {
    v13 = *(_QWORD *)(v5 - 8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
  }
  else
  {
    while (1)
    {
      sub_19CFDF980();
      v13 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v5) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      sub_19CF3C03C((uint64_t)v3);
      v14 = v3[1];
      if (v14 == MEMORY[0x1A1AD9B14](*v3, v6))
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v11, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v5);
    return sub_19CF3C03C((uint64_t)v3);
  }
}

uint64_t sub_19CF3C03C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(result + 16);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v4 = sub_19CFDFF5C();
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x1A1AD9B14](v5, v4);
    result = swift_bridgeObjectRelease();
    v7 = 0;
    if (v2 < v6)
    {
      v8 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v8, 1);
      v7 = v8 + 1;
      if (v9)
        goto LABEL_8;
    }
    *(_QWORD *)(v3 + 16) = v7;
    v10 = *(_QWORD *)(v3 + 8);
    v9 = __OFADD__(v10, 1);
    v11 = v10 + 1;
    if (!v9)
    {
      *(_QWORD *)(v3 + 8) = v11;
      return result;
    }
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_19CF3C0D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF3C0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = sub_19CF3C0D4();
  v4 = v3;
  v6 = v5;
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v6;
  return result;
}

uint64_t sub_19CF3C150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_19CF3C188(v2, a1, a2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19CF3C18C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_19CF3C1C0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_19CF3C214(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t type metadata accessor for RingBuffer.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RingBuffer.Iterator);
}

ValueMetadata *type metadata accessor for ConnectionFieldProvider()
{
  return &type metadata for ConnectionFieldProvider;
}

uint64_t sub_19CF3C274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a3;
  return swift_task_switch();
}

uint64_t DeepLink.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = (int *)type metadata accessor for DeepLink();
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_OWORD *)(a2 + v4[6]);
  *v6 = 0u;
  v6[1] = 0u;
  v7 = (_QWORD *)(a2 + v4[7]);
  v8 = sub_19CFDEDE0();
  *v7 = 0;
  v7[1] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
}

uint64_t type metadata accessor for DeepLink()
{
  uint64_t result;

  result = qword_1EE442610;
  if (!qword_1EE442610)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DeepLink.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DeepLink.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DeepLink.url.modify())()
{
  return nullsub_1;
}

uint64_t DeepLink.sourceApplication.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeepLink() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeepLink.sourceApplication.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DeepLink() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DeepLink.sourceApplication.modify())(_QWORD)
{
  type metadata accessor for DeepLink();
  return nullsub_1;
}

uint64_t DeepLink.annotation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DeepLink() + 24);
  return sub_19CD40794(v3, a1);
}

uint64_t DeepLink.annotation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DeepLink() + 24);
  return sub_19CD40658(a1, v3);
}

uint64_t (*DeepLink.annotation.modify())(_QWORD)
{
  type metadata accessor for DeepLink();
  return nullsub_1;
}

uint64_t DeepLink.sourceProcess.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeepLink() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeepLink.sourceProcess.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DeepLink() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DeepLink.sourceProcess.modify())(_QWORD)
{
  type metadata accessor for DeepLink();
  return nullsub_1;
}

uint64_t DeepLink.referrerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _BYTE v15[32];
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;

  v3 = sub_19CFDEDE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DeepLink();
  sub_19CD40794(v1 + *(int *)(v8 + 24), (uint64_t)v18);
  if (!v19)
  {
    sub_19CD3F190((uint64_t)v18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
  if ((swift_dynamicCast() & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  v9 = v16;
  *(_QWORD *)&v16 = sub_19CFDF578();
  *((_QWORD *)&v16 + 1) = v10;
  sub_19CFE00C4();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_19CD20240((uint64_t)v18), (v12 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19CD20334((uint64_t)v18);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_16;
  sub_19CD40794((uint64_t)&v16, (uint64_t)v15);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_19CFDEDA4();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
LABEL_16:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
    return sub_19CD3F190((uint64_t)&v16);
  }
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(a1, v7, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
LABEL_14:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return sub_19CD3F190((uint64_t)&v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for DeepLink(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (_OWORD *)((char *)a2 + v9);
    v15 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *((_QWORD *)v13 + 3) = v15;
      (**(void (***)(char *, _OWORD *, uint64_t))(v15 - 8))(v13, v14, v15);
    }
    else
    {
      v17 = v14[1];
      *(_OWORD *)v13 = *v14;
      *((_OWORD *)v13 + 1) = v17;
    }
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeepLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  if (*(_QWORD *)(v5 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = (_OWORD *)(a2 + v8);
  v14 = *(_QWORD *)(a2 + v8 + 24);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(_QWORD *)(v12 + 24) = v14;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v14 - 8))(v12, v13, v14);
  }
  else
  {
    v15 = v13[1];
    *(_OWORD *)v12 = *v13;
    *(_OWORD *)(v12 + 16) = v15;
  }
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10 + 24);
  if (!*(_QWORD *)(a1 + v10 + 24))
  {
    if (v13)
    {
      *(_QWORD *)(v11 + 24) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v11, v12);
      goto LABEL_8;
    }
LABEL_7:
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v14;
    goto LABEL_8;
  }
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v11);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v11, (uint64_t *)v12);
LABEL_8:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for DeepLink(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_OWORD *)(a1 + v12);
  if (*(_QWORD *)(a1 + v12 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + v12);
  v14 = *(_OWORD *)(a2 + v12 + 16);
  *v13 = *(_OWORD *)(a2 + v12);
  v13[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLink()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF3CC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLink()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF3CCCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_19CF3CD48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id static PipelinePhase<>.rateLimitOnFailure(on:using:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v9;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  PipelinePhase.init(mapTask:)((uint64_t)sub_19CF3D144, (uint64_t)v9, a5);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *sub_19CF3CE4C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t ObjectType;
  double v33;
  _QWORD *v34;
  void *v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v44 = a4;
  v46 = sub_19CFDF2D8();
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46, v9);
  v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDF308();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_19CFDF320();
  v16 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v41 - v22;
  v24 = *a1;
  v27 = type metadata accessor for Promise(0, a5, v25, v26);
  v31 = Promise.__allocating_init()(v27, v28, v29, v30);
  ObjectType = swift_getObjectType();
  v33 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19CFDF314();
  MEMORY[0x1A1AD955C](v19, v33);
  v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  v42(v19, v15);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v24;
  v34[3] = a2;
  v34[4] = a3;
  v34[5] = v31;
  v35 = v44;
  v34[6] = v44;
  aBlock[4] = sub_19CF3D244;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_32;
  v36 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  v37 = v31;
  swift_retain();
  v35;
  sub_19CFDF2F0();
  v50 = MEMORY[0x1E0DEE9D8];
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  v39 = v45;
  v38 = v46;
  sub_19CFE0070();
  MEMORY[0x1A1AD9FB8](v23, v14, v39, v36);
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v48);
  v42(v23, v43);
  swift_release();
  return v37;
}

uint64_t sub_19CF3D118()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t *sub_19CF3D144(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF3CE4C(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CF3D150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v9;
  _QWORD *v10;
  id v11;
  _QWORD v13[5];

  v9 = *a4;
  v13[0] = a1;
  type metadata accessor for AnyPipelineTask(0, *(_QWORD *)(v9 + 80), a3, (uint64_t)a4);
  AnyPipelineTask.run()();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v13[3] = sub_19CD48F8C();
  v13[4] = &protocol witness table for OS_dispatch_queue;
  v13[0] = a5;
  swift_retain_n();
  swift_unknownObjectRetain();
  v11 = a5;
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19CF3D27C, (uint64_t)v10, (uint64_t)j___s9JetEngine7PromiseC6rejectyys5Error_pF, (uint64_t)a4, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
}

uint64_t sub_19CF3D244()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF3D150);
}

uint64_t sub_19CF3D250()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_19CF3D27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  Promise.resolve(_:)(a1, v5, v6, v7);
}

unint64_t JSONError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t result;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;

  v1 = *v0;
  v2 = (_QWORD *)v0[1];
  v4 = v0[2];
  v3 = v0[3];
  switch(v4 >> 61)
  {
    case 0uLL:
      v5 = v2[2];
      if (v5)
      {
        if (v5 == 1)
        {
          v6 = (void *)v2[4];
          swift_getErrorValue();
          v7 = v6;
          sub_19CFE0868();

        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F238);
          sub_19CE0454C();
          sub_19CFDF4F4();
          sub_19CD57DDC(v1, v2, v4);
        }
      }
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      v12 = 0xD00000000000001BLL;
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 1uLL:
    case 3uLL:
    case 4uLL:
      v12 = 0;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      goto LABEL_17;
    case 2uLL:
      v9 = *(_QWORD *)(v3 + 16);
      if (v9)
      {
        if (v9 == 1)
        {
          v10 = *(void **)(v3 + 32);
          swift_getErrorValue();
          v11 = v10;
          sub_19CFE0868();

        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F238);
          sub_19CE0454C();
          sub_19CFDF4F4();
          swift_bridgeObjectRelease();
        }
      }
      v12 = 0;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
LABEL_16:
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
LABEL_17:
      result = v12;
      break;
    default:
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      result = 0;
      break;
  }
  return result;
}

_QWORD *initializeWithCopy for JSONError(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_19CF3230C(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for JSONError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_19CF3230C(*a2, v4, v5);
  v7 = *a1;
  v8 = (void *)a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_19CD57DDC(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for JSONError(_QWORD *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  __int128 v6;

  v3 = *a1;
  v5 = (void *)a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_19CD57DDC(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x79 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 121);
  v3 = (((*(_QWORD *)(a1 + 16) >> 57) >> 4) | (8
                                                           * ((*(_QWORD *)(a1 + 16) >> 57) & 8 | *(_QWORD *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x78)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSONError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x78)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 121;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x79)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x79)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_19CF3D9C4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 61;
  if ((_DWORD)v1 == 7)
    return (*(_DWORD *)a1 + 7);
  else
    return v1;
}

JetEngine::SilverBulletJetPackAssetRequest::Environment __swiftcall SilverBulletJetPackAssetRequest.Environment.init(rawValue:)(JetEngine::SilverBulletJetPackAssetRequest::Environment rawValue)
{
  JetEngine::SilverBulletJetPackAssetRequest::Environment *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t SilverBulletJetPackAssetRequest.Environment.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SilverBulletJetPackAssetRequest.Environment.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SilverBulletJetPackAssetRequest.Environment.rawValue.modify())()
{
  return nullsub_1;
}

void __swiftcall SilverBulletJetPackAssetRequest.init(environment:path:sourcePolicy:)(JetEngine::SilverBulletJetPackAssetRequest *__return_ptr retstr, JetEngine::SilverBulletJetPackAssetRequest::Environment environment, Swift::String path, JetEngine::JetPackAssetRequestSourcePolicy sourcePolicy)
{
  void *v4;
  JetEngine::JetPackAssetRequestSourcePolicy v5;

  v4 = *(void **)(environment.rawValue._countAndFlagsBits + 8);
  v5 = *(_BYTE *)path._object;
  retstr->environment.rawValue._countAndFlagsBits = *(_QWORD *)environment.rawValue._countAndFlagsBits;
  retstr->environment.rawValue._object = v4;
  retstr->path._countAndFlagsBits = (uint64_t)environment.rawValue._object;
  retstr->path._object = (void *)path._countAndFlagsBits;
  retstr->_sourcePolicy = v5;
}

void SilverBulletJetPackAssetRequest._sourcePolicy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t SilverBulletJetPackAssetRequest._cacheKey.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SilverBulletJetPackAssetRequest.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE08D4();
}

uint64_t SilverBulletJetPackAssetRequest.hashValue.getter()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CF3DC0C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_19CF3DC78(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t sub_19CF3DC84()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CF3DD20()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE08D4();
}

uint64_t sub_19CF3DDA4()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL _s9JetEngine012SilverBulletA16PackAssetRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_19CFE06A0(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6)
      return v4 == v7;
    v12 = sub_19CFE06A0();
    result = 0;
    if ((v12 & 1) != 0)
      return v4 == v7;
  }
  return result;
}

unint64_t sub_19CF3DEE8()
{
  unint64_t result;

  result = qword_1EE442620;
  if (!qword_1EE442620)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for SilverBulletJetPackAssetRequest.Environment, &type metadata for SilverBulletJetPackAssetRequest.Environment);
    atomic_store(result, (unint64_t *)&qword_1EE442620);
  }
  return result;
}

unint64_t sub_19CF3DF2C(uint64_t a1)
{
  unint64_t result;

  result = sub_19CF3DF50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19CF3DF50()
{
  unint64_t result;

  result = qword_1EE442E70;
  if (!qword_1EE442E70)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for SilverBulletJetPackAssetRequest, &type metadata for SilverBulletJetPackAssetRequest);
    atomic_store(result, (unint64_t *)&qword_1EE442E70);
  }
  return result;
}

unint64_t sub_19CF3DF98()
{
  unint64_t result;

  result = qword_1EE442628;
  if (!qword_1EE442628)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for SilverBulletJetPackAssetRequest, &type metadata for SilverBulletJetPackAssetRequest);
    atomic_store(result, (unint64_t *)&qword_1EE442628);
  }
  return result;
}

uint64_t initializeWithCopy for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SilverBulletJetPackAssetRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SilverBulletJetPackAssetRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilverBulletJetPackAssetRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetRequest()
{
  return &type metadata for SilverBulletJetPackAssetRequest;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetRequest.Environment()
{
  return &type metadata for SilverBulletJetPackAssetRequest.Environment;
}

uint64_t sub_19CF3E18C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = sub_19CFDEAA4();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    return v8;
  v24 = v1;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_19CE4A3AC(0, v7, 0);
  v8 = v32;
  result = sub_19CDE2C18(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v25 = a1 + 80;
  v26 = v7;
  v27 = v10;
  v28 = a1 + 64;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_24;
    v31 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CFDEA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v8;
    v18 = *(_QWORD *)(v8 + 16);
    v17 = *(_QWORD *)(v8 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_19CE4A3AC(v17 > 1, v18 + 1, 1);
      v8 = v32;
    }
    *(_QWORD *)(v8 + 16) = v18 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v29 + 32))(v8+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v18, v6, v30);
    v14 = 1 << *(_BYTE *)(a1 + 32);
    if (v11 >= v14)
      goto LABEL_25;
    v13 = v28;
    v19 = *(_QWORD *)(v28 + 8 * v16);
    if ((v19 & (1 << v11)) == 0)
      goto LABEL_26;
    LODWORD(v10) = v27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v27)
      goto LABEL_27;
    v20 = v19 & (-2 << (v11 & 0x3F));
    if (v20)
    {
      v14 = __clz(__rbit64(v20)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v26;
    }
    else
    {
      v21 = v16 + 1;
      v22 = (unint64_t)(v14 + 63) >> 6;
      v15 = v26;
      if (v16 + 1 < v22)
      {
        v23 = *(_QWORD *)(v28 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v14 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v16)
          {
            v23 = *(_QWORD *)(v25 + 8 * v16++);
            if (v23)
            {
              v21 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v12 = v31 + 1;
    v11 = v14;
    if (v31 + 1 == v15)
      return v8;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19CF3E438(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  _QWORD v28[4];
  int64_t v29;

  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v29 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v11 = MEMORY[0x1E0DEA968];
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_5;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v29)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v10);
      if (!v24)
      {
        v10 = v23 + 2;
        if (v23 + 2 >= v29)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v10);
        if (!v24)
        {
          v10 = v23 + 3;
          if (v23 + 3 >= v29)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v10);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v24 - 1) & v24;
    v13 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_5:
    v14 = 16 * v13;
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(a3 + 56) + v14);
    v19 = *v18;
    v20 = v18[1];
    v28[3] = v11;
    v28[0] = v16;
    v28[1] = v17;
    v27[3] = v11;
    v27[0] = v19;
    v27[1] = v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    a1 = sub_19CF41BBC(a1, a2, (uint64_t)v28, (uint64_t)v27);
    v22 = v21;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a2 = v22;
  }
  v25 = v23 + 4;
  if (v25 >= v29)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v29)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL static Models.HTTPTemplateAction.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Models.HTTPTemplateAction.Error.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t Models.HTTPTemplateAction.Error.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t Models.HTTPTemplateAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45[5];
  uint64_t v46[5];
  _OWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a3;
  v6 = (int *)type metadata accessor for Models.HTTPTemplateAction();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v38 - v16;
  v18 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v48);
  v46[0] = v18;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v48, v46, (uint64_t *)v47);
  if (v3)
  {
    sub_19CD3E3F8(a1);
    return swift_bridgeObjectRelease();
  }
  v42 = 0;
  v38 = v9;
  v39 = v13;
  v43 = v17;
  v41 = *((_QWORD *)&v47[0] + 1);
  v19 = *(_QWORD *)&v47[0];
  JSONObject.subscript.getter(0x6574656D61726170, 0xEA00000000007372, (uint64_t)&v48);
  swift_bridgeObjectRetain();
  v40 = sub_19CF462D0((uint64_t)&v48, v18);
  v20 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
  v50 = v20;
  swift_bridgeObjectRetain();
  v21 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v18);
  swift_bridgeObjectRelease();
  if (v21)
  {
    sub_19CDC6F28(v21);
    v20 = v50;
  }
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
  *(_QWORD *)&v48 = v20;
  sub_19CD433C0(&v48, v47);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v18;
  sub_19CD13D40(v47, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
  v23 = v46[0];
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(0x74736575716572, 0xE700000000000000, (uint64_t)&v48);
  *(_QWORD *)&v47[0] = v23;
  v24 = v43;
  v25 = v42;
  NetRequest.init(deserializing:using:)((uint64_t)&v48, (uint64_t *)v47, v43);
  if (v25)
  {
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463, (uint64_t)v47);
  v46[0] = v18;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v47, v46, (uint64_t)&v48);
  sub_19CD3E3F8((uint64_t)v47);
  JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463, (uint64_t)v46);
  v45[0] = v18;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v46, v45, (uint64_t)v47);
  sub_19CD3E3F8((uint64_t)v46);
  swift_bridgeObjectRelease();
  v27 = (uint64_t)v39;
  sub_19CD03280((uint64_t)v24, (uint64_t)v39);
  sub_19CCF8C5C((uint64_t)&v48, (uint64_t)v46, qword_1EE439B38);
  sub_19CCF8C5C((uint64_t)v47, (uint64_t)v45, qword_1EE439B38);
  v28 = v19;
  v29 = (uint64_t)v38;
  *v38 = v28;
  v30 = v40;
  *(_QWORD *)(v29 + 8) = v41;
  *(_QWORD *)(v29 + 16) = v30;
  sub_19CD03280(v27, v29 + v6[6]);
  v31 = (uint64_t *)(v27 + *(int *)(v10 + 40));
  v33 = *v31;
  v32 = v31[1];
  swift_bridgeObjectRetain();
  sub_19CD033A8(v27);
  v34 = (_QWORD *)(v29 + v6[7]);
  if (v32)
  {
    *v34 = v33;
    v34[1] = v32;
    v35 = (_QWORD *)(v29 + v6[8]);
    *v35 = v33;
    v35[1] = v32;
  }
  else
  {
    *v34 = 0;
    v34[1] = 0;
    v36 = (_QWORD *)(v29 + v6[8]);
    *v36 = 0;
    v36[1] = 0;
  }
  v37 = v44;
  sub_19CCC290C((uint64_t)v46, v29 + v6[9], qword_1EE439B38);
  sub_19CCC290C((uint64_t)v45, v29 + v6[10], qword_1EE439B38);
  sub_19CF435C0(v29, v37);
  swift_bridgeObjectRetain();
  sub_19CD3E3F8(a1);
  sub_19CCECFE4((uint64_t)v47, qword_1EE439B38);
  sub_19CCECFE4((uint64_t)&v48, qword_1EE439B38);
  return sub_19CD033A8((uint64_t)v24);
}

uint64_t type metadata accessor for Models.HTTPTemplateAction()
{
  uint64_t result;

  result = qword_1EE439F00;
  if (!qword_1EE439F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Models.HTTPTemplateAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.successAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Models.HTTPTemplateAction();
  return sub_19CCF8C5C(v1 + *(int *)(v3 + 36), a1, qword_1EE439B38);
}

uint64_t Models.HTTPTemplateAction.failureAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Models.HTTPTemplateAction();
  return sub_19CCF8C5C(v1 + *(int *)(v3 + 40), a1, qword_1EE439B38);
}

uint64_t Models.HTTPTemplateAction.makeAction(with:actionMetrics:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = v3;
  v43 = a3;
  v8 = sub_19CFDEDE0();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v40, v12);
  v49 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  v17 = a1[2];
  v16 = a1[3];
  v18 = a2[1];
  v41 = *a2;
  v42 = v18;
  if (*(_QWORD *)(v17 + 16))
  {
    v45 = v14;
    v46 = v15;
    v47 = v17;
    v48 = v16;
    v19 = (int *)type metadata accessor for Models.HTTPTemplateAction();
    v44 = *(_OWORD *)(v5 + v19[7]);
    result = (uint64_t)sub_19CF3EF08((uint64_t)&v44);
  }
  else
  {
    v45 = v14;
    v46 = v15;
    v47 = v17;
    v48 = v16;
    v19 = (int *)type metadata accessor for Models.HTTPTemplateAction();
    v44 = *(_OWORD *)(v5 + v19[8]);
    result = sub_19CF3F2E8((uint64_t)&v44);
  }
  if (!v4)
  {
    v35 = result;
    v37 = v21;
    type metadata accessor for Models.HTTPTemplateAction();
    v22 = v19[6];
    v36 = v5;
    v23 = v5 + v22;
    sub_19CD03280(v5 + v22, v49);
    v45 = v14;
    v46 = v15;
    v47 = v17;
    v48 = v16;
    sub_19CF3F640(v23, (uint64_t)v11);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 40))(v49, v11, v39);
    v45 = v14;
    v46 = v15;
    v47 = v17;
    v48 = v16;
    v24 = v40;
    v25 = sub_19CF3FE48(*(_QWORD **)(v23 + *(int *)(v40 + 28)));
    v26 = *(int *)(v24 + 28);
    v27 = v49;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + v26) = v25;
    v28 = (uint64_t *)(v27 + *(int *)(v24 + 40));
    swift_bridgeObjectRelease();
    v29 = v37;
    *v28 = v35;
    v28[1] = v29;
    v30 = (int *)type metadata accessor for Models.HTTPAction();
    v31 = v43;
    sub_19CD03280(v27, (uint64_t)v43 + v30[5]);
    v32 = v36;
    sub_19CCF8C5C(v36 + v19[9], (uint64_t)v31 + v30[6], qword_1EE439B38);
    sub_19CCF8C5C(v32 + v19[10], (uint64_t)v31 + v30[7], qword_1EE439B38);
    v33 = v42;
    *v31 = v41;
    v31[1] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_19CD033A8(v27);
  }
  return result;
}

id *sub_19CF3EF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v35;
  _QWORD v36[3];
  uint64_t v37;
  int64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  __int128 v44;
  _OWORD v45[2];
  id v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return 0;
  v9 = *(_QWORD *)(v1 + 16);
  v46 = *(id *)a1;
  v47 = v8;
  v10 = &v46;
  v11 = sub_19CF4015C();
  if (!v2)
  {
    v36[1] = v7;
    v12 = *(_QWORD *)(v9 + 64);
    v36[2] = 0;
    v37 = v9 + 64;
    v13 = 1 << *(_BYTE *)(v9 + 32);
    v14 = -1;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    v15 = v14 & v12;
    v38 = (unint64_t)(v13 + 63) >> 6;
    v39 = (void *)v11;
    v36[0] = v38 - 1;
    swift_bridgeObjectRetain();
    v16 = 0;
    if (!v15)
      goto LABEL_12;
LABEL_10:
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v20 = v19 | (v16 << 6);
LABEL_11:
    v21 = *(_QWORD *)(v9 + 56);
    v22 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v20);
    v23 = v22[1];
    *(_QWORD *)&v44 = *v22;
    *((_QWORD *)&v44 + 1) = v23;
    sub_19CD436B0(v21 + 32 * v20, (uint64_t)v45);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_19CCC290C((uint64_t)&v44, (uint64_t)&v46, (uint64_t *)&unk_1ECEB1F00);
      v27 = v47;
      if (!v47)
        break;
      v17 = v46;
      sub_19CD433C0(&v48, &v44);
      v42 = v17;
      v43 = v27;
      v40 = 46;
      v41 = 0xE100000000000000;
      sub_19CD41144();
      v18 = sub_19CFDFFE0();
      swift_bridgeObjectRelease();
      sub_19CF4191C((uint64_t)&v44, v18);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v44);
      if (v15)
        goto LABEL_10;
LABEL_12:
      v24 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
      }
      if (v24 < v38)
      {
        v25 = *(_QWORD *)(v37 + 8 * v24);
        if (v25)
          goto LABEL_15;
        v26 = v16 + 2;
        ++v16;
        if (v24 + 1 < v38)
        {
          v25 = *(_QWORD *)(v37 + 8 * v26);
          if (v25)
            goto LABEL_18;
          v16 = v24 + 1;
          if (v24 + 2 < v38)
          {
            v25 = *(_QWORD *)(v37 + 8 * (v24 + 2));
            if (v25)
            {
              v24 += 2;
              goto LABEL_15;
            }
            v26 = v24 + 3;
            v16 = v24 + 2;
            if (v24 + 3 < v38)
            {
              v25 = *(_QWORD *)(v37 + 8 * v26);
              if (v25)
              {
LABEL_18:
                v24 = v26;
LABEL_15:
                v15 = (v25 - 1) & v25;
                v20 = __clz(__rbit64(v25)) + (v24 << 6);
                v16 = v24;
                goto LABEL_11;
              }
              while (1)
              {
                v24 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_36;
                if (v24 >= v38)
                  break;
                v25 = *(_QWORD *)(v37 + 8 * v24);
                ++v26;
                if (v25)
                  goto LABEL_15;
              }
              v16 = v36[0];
            }
          }
        }
      }
      v15 = 0;
      memset(v45, 0, sizeof(v45));
      v44 = 0u;
    }
    swift_release();
    v28 = (void *)objc_opt_self();
    v46 = 0;
    v29 = v39;
    v10 = (id *)objc_msgSend(v28, sel_dataWithJSONObject_options_error_, v39, 0, &v46);
    v30 = v46;
    if (v10)
    {
      v31 = sub_19CFDEE70();
      v33 = v32;

      sub_19CFDF5B4();
      v10 = (id *)sub_19CFDF590();

      sub_19CD3BE18(v31, v33);
    }
    else
    {
      v35 = v30;
      sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  return v10;
}

uint64_t sub_19CF3F2E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  _QWORD *v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;

  if (!*(_QWORD *)(a1 + 8))
    return 0;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = sub_19CF40440();
  if (v2)
    return v3;
  v6 = (_QWORD *)v5;
  v40 = v4 + 64;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v4 + 64);
  v41 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v9)
    {
      v42 = (v9 - 1) & v9;
      v43 = v10;
      v12 = __clz(__rbit64(v9)) | (v10 << 6);
    }
    else
    {
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_41;
      if (v13 >= v41)
      {
LABEL_37:
        swift_release();
        swift_bridgeObjectRetain();
        v3 = sub_19CF3E438(0, 0xE000000000000000, (uint64_t)v6);
        swift_bridgeObjectRelease_n();
        return v3;
      }
      v14 = *(_QWORD *)(v40 + 8 * v13);
      v15 = v10 + 1;
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v41)
          goto LABEL_37;
        v14 = *(_QWORD *)(v40 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v41)
            goto LABEL_37;
          v14 = *(_QWORD *)(v40 + 8 * v15);
          if (!v14)
          {
            v16 = v10 + 4;
            if (v10 + 4 >= v41)
              goto LABEL_37;
            v14 = *(_QWORD *)(v40 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_42;
                if (v15 >= v41)
                  goto LABEL_37;
                v14 = *(_QWORD *)(v40 + 8 * v15);
                ++v16;
                if (v14)
                  goto LABEL_25;
              }
            }
            v15 = v10 + 4;
          }
        }
      }
LABEL_25:
      v42 = (v14 - 1) & v14;
      v43 = v15;
      v12 = __clz(__rbit64(v14)) + (v15 << 6);
    }
    v17 = 16 * v12;
    v18 = v4;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v17);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = sub_19CD3FD1C(v21, v20);
    v28 = v6[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v6[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_19CE1A3B4();
        if ((v31 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_19CD26CB4(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_19CD3FD1C(v21, v20);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_43;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_8:
        v11 = (_QWORD *)(v6[7] + 16 * v27);
        swift_bridgeObjectRelease();
        *v11 = v23;
        v11[1] = v24;
        goto LABEL_9;
      }
    }
    v6[(v27 >> 6) + 8] |= 1 << v27;
    v34 = (uint64_t *)(v6[6] + 16 * v27);
    *v34 = v21;
    v34[1] = v20;
    v35 = (_QWORD *)(v6[7] + 16 * v27);
    *v35 = v23;
    v35[1] = v24;
    v36 = v6[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_40;
    v6[2] = v38;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v18;
    v10 = v43;
    v9 = v42;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF3F640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  _QWORD *v28;
  char *v29;
  int64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t *v54;
  int64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t i;
  _QWORD *v65;
  unint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, unint64_t, uint64_t);
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  _QWORD *v112;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDEAA4();
  v111 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v104 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC78);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_19CFDEB7C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v103 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = *v2;
  if (!*(_QWORD *)(v109 + 16))
  {
    v23 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a2, a1, v23);
  }
  sub_19CFDEAEC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_19CCECFE4((uint64_t)v16, &qword_1EE43EC78);
    sub_19CF455F0();
    swift_allocError();
    *v21 = 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v103, v16, v17);
  v24 = sub_19CFDEAD4();
  v101 = v9;
  v102 = v3;
  v98 = a2;
  v99 = v18;
  v100 = v17;
  if (v24)
  {
    v25 = *(_QWORD *)(v24 + 16);
    v97 = v24;
    if (v25)
    {
      v26 = v24 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
      v27 = *(void (**)(char *, unint64_t, uint64_t))(v111 + 16);
      v105 = *(_QWORD *)(v111 + 72);
      v106 = v27;
      v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v29 = v104;
      v27(v104, v26, v10);
      while (1)
      {
        v32 = sub_19CFDEA8C();
        v34 = v33;
        v35 = sub_19CFDEA98();
        if (v36)
        {
          v107 = v25;
          v108 = v35;
          v110 = v36;
          v37 = v10;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v112 = v28;
          v39 = v32;
          v40 = v32;
          v41 = v34;
          v43 = sub_19CD3FD1C(v40, v34);
          v44 = v28[2];
          v45 = (v42 & 1) == 0;
          v46 = v44 + v45;
          if (__OFADD__(v44, v45))
          {
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          v47 = v42;
          if (v28[3] >= v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_19CE1A3B4();
          }
          else
          {
            sub_19CD26CB4(v46, isUniquelyReferenced_nonNull_native);
            v48 = sub_19CD3FD1C(v39, v41);
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_71;
            v43 = v48;
          }
          v10 = v37;
          v28 = v112;
          if ((v47 & 1) != 0)
          {
            v30 = (int64_t *)(v112[7] + 16 * v43);
            swift_bridgeObjectRelease();
            v31 = v110;
            *v30 = v108;
            v30[1] = v31;
          }
          else
          {
            v112[(v43 >> 6) + 8] |= 1 << v43;
            v54 = (uint64_t *)(v28[6] + 16 * v43);
            *v54 = v39;
            v54[1] = v41;
            v55 = (int64_t *)(v28[7] + 16 * v43);
            v56 = v110;
            *v55 = v108;
            v55[1] = v56;
            v57 = v28[2];
            v58 = __OFADD__(v57, 1);
            v59 = v57 + 1;
            if (v58)
              goto LABEL_70;
            v28[2] = v59;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = v104;
          v25 = v107;
        }
        else
        {
          swift_bridgeObjectRetain();
          v50 = sub_19CD3FD1C(v32, v34);
          v52 = v51;
          swift_bridgeObjectRelease();
          if ((v52 & 1) != 0)
          {
            v53 = swift_isUniquelyReferenced_nonNull_native();
            v112 = v28;
            if ((v53 & 1) == 0)
            {
              sub_19CE1A3B4();
              v28 = v112;
            }
            swift_bridgeObjectRelease();
            sub_19CDD43B4(v50, (uint64_t)v28);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v111 + 8))(v29, v10);
        v26 += v105;
        if (!--v25)
          break;
        v106(v29, v26, v10);
      }
    }
    else
    {
      v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v60 = *(_QWORD *)(v109 + 64);
  v107 = v109 + 64;
  v61 = 1 << *(_BYTE *)(v109 + 32);
  v62 = -1;
  if (v61 < 64)
    v62 = ~(-1 << v61);
  v63 = v62 & v60;
  v108 = (unint64_t)(v61 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v111)
  {
    if (v63)
    {
      v110 = (v63 - 1) & v63;
      v111 = i;
      v66 = __clz(__rbit64(v63)) | (i << 6);
      goto LABEL_51;
    }
    v67 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_67;
    if (v67 >= v108)
    {
LABEL_62:
      swift_release();
      v91 = swift_bridgeObjectRetain();
      sub_19CF3E18C(v91);
      swift_bridgeObjectRelease_n();
      v92 = v103;
      sub_19CFDEAE0();
      v93 = (uint64_t)v101;
      sub_19CFDEAF8();
      v94 = sub_19CFDEDE0();
      v95 = *(_QWORD *)(v94 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94) == 1)
      {
        sub_19CCECFE4(v93, (uint64_t *)&unk_1ECEB3030);
        sub_19CF455F0();
        swift_allocError();
        *v96 = 0;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v92, v100);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v99 + 8))(v92, v100);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v98, v93, v94);
      }
    }
    v68 = *(_QWORD *)(v107 + 8 * v67);
    v69 = i + 1;
    if (!v68)
    {
      v69 = i + 2;
      if (i + 2 >= v108)
        goto LABEL_62;
      v68 = *(_QWORD *)(v107 + 8 * v69);
      if (!v68)
      {
        v69 = i + 3;
        if (i + 3 >= v108)
          goto LABEL_62;
        v68 = *(_QWORD *)(v107 + 8 * v69);
        if (!v68)
          break;
      }
    }
LABEL_50:
    v110 = (v68 - 1) & v68;
    v111 = v69;
    v66 = __clz(__rbit64(v68)) + (v69 << 6);
LABEL_51:
    v71 = 16 * v66;
    v72 = (uint64_t *)(*(_QWORD *)(v109 + 48) + v71);
    v74 = *v72;
    v73 = v72[1];
    v75 = (uint64_t *)(*(_QWORD *)(v109 + 56) + v71);
    v77 = *v75;
    v76 = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78 = swift_isUniquelyReferenced_nonNull_native();
    v112 = v28;
    v80 = sub_19CD3FD1C(v74, v73);
    v81 = v28[2];
    v82 = (v79 & 1) == 0;
    v83 = v81 + v82;
    if (__OFADD__(v81, v82))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v84 = v79;
    if (v28[3] >= v83)
    {
      if ((v78 & 1) != 0)
      {
        v28 = v112;
        if ((v79 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        sub_19CE1A3B4();
        v28 = v112;
        if ((v84 & 1) != 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_19CD26CB4(v83, v78);
      v85 = sub_19CD3FD1C(v74, v73);
      if ((v84 & 1) != (v86 & 1))
        goto LABEL_71;
      v80 = v85;
      v28 = v112;
      if ((v84 & 1) != 0)
      {
LABEL_33:
        v65 = (_QWORD *)(v28[7] + 16 * v80);
        swift_bridgeObjectRelease();
        *v65 = v77;
        v65[1] = v76;
        goto LABEL_34;
      }
    }
    v28[(v80 >> 6) + 8] |= 1 << v80;
    v87 = (uint64_t *)(v28[6] + 16 * v80);
    *v87 = v74;
    v87[1] = v73;
    v88 = (_QWORD *)(v28[7] + 16 * v80);
    *v88 = v77;
    v88[1] = v76;
    v89 = v28[2];
    v58 = __OFADD__(v89, 1);
    v90 = v89 + 1;
    if (v58)
      goto LABEL_66;
    v28[2] = v90;
    swift_bridgeObjectRetain();
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v110;
  }
  v70 = i + 4;
  if (i + 4 >= v108)
    goto LABEL_62;
  v68 = *(_QWORD *)(v107 + 8 * v70);
  if (v68)
  {
    v69 = i + 4;
    goto LABEL_50;
  }
  while (1)
  {
    v69 = v70 + 1;
    if (__OFADD__(v70, 1))
      break;
    if (v69 >= v108)
      goto LABEL_62;
    v68 = *(_QWORD *)(v107 + 8 * v69);
    ++v70;
    if (v68)
      goto LABEL_50;
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF3FE48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;

  v3 = *(_QWORD *)(v1 + 8);
  v37 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v38 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v39 = v3;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v40)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v40 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_36;
      if (v11 >= v38)
      {
LABEL_33:
        swift_release();
        return (uint64_t)a1;
      }
      v12 = *(_QWORD *)(v37 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v38)
          goto LABEL_33;
        v12 = *(_QWORD *)(v37 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v38)
            goto LABEL_33;
          v12 = *(_QWORD *)(v37 + 8 * v13);
          if (!v12)
          {
            v14 = i + 4;
            if (i + 4 >= v38)
              goto LABEL_33;
            v12 = *(_QWORD *)(v37 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_37;
                if (v13 >= v38)
                  goto LABEL_33;
                v12 = *(_QWORD *)(v37 + 8 * v13);
                ++v14;
                if (v12)
                  goto LABEL_21;
              }
            }
            v13 = i + 4;
          }
        }
      }
LABEL_21:
      v6 = (v12 - 1) & v12;
      v40 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = 16 * v10;
    v16 = (uint64_t *)(*(_QWORD *)(v39 + 48) + v15);
    v18 = *v16;
    v17 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(v39 + 56) + v15);
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_19CD3FD1C(v18, v17);
    v25 = a1[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (a1[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_19CE1A3B4();
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_19CD26CB4(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_19CD3FD1C(v18, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_38;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        v8 = (_QWORD *)(a1[7] + 16 * v24);
        swift_bridgeObjectRelease();
        *v8 = v21;
        v8[1] = v20;
        goto LABEL_5;
      }
    }
    a1[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(a1[6] + 16 * v24);
    *v31 = v18;
    v31[1] = v17;
    v32 = (_QWORD *)(a1[7] + 16 * v24);
    *v32 = v21;
    v32[1] = v20;
    v33 = a1[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_35;
    a1[2] = v35;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF40134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.HTTPTemplateAction.init(deserializing:using:)(a1, a2, a3);
}

unint64_t Models.HTTPTemplateAction.JSONBody.description.getter()
{
  return sub_19CF403C4();
}

unint64_t sub_19CF4015C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  _BYTE *v14;
  unint64_t v16;
  id v17[4];
  _BYTE v18[32];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v0 = sub_19CFDF5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDF5B4();
  v5 = sub_19CFDF584();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (v7 >> 60 == 15)
  {
    sub_19CF455F0();
    swift_allocError();
    *v8 = 2;
    swift_willThrow();
  }
  else
  {
    v9 = (void *)objc_opt_self();
    v10 = (void *)sub_19CFDEE58();
    v17[0] = 0;
    v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 1, v17);

    v12 = v17[0];
    if (v11)
    {
      sub_19CFE004C();
      swift_unknownObjectRelease();
      sub_19CD436B0((uint64_t)v18, (uint64_t)v17);
      sub_19CF455B4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_19CCF4A54(v5, v7);
        v7 = v16;
      }
      else
      {
        sub_19CF455F0();
        swift_allocError();
        *v14 = 1;
        swift_willThrow();
        sub_19CCF4A54(v5, v7);
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    }
    else
    {
      v13 = v12;
      sub_19CFDEC9C();

      swift_willThrow();
      sub_19CCF4A54(v5, v7);
    }
  }
  return v7;
}

unint64_t Models.HTTPTemplateAction.FormBody.description.getter()
{
  return sub_19CF403C4();
}

unint64_t sub_19CF403C4()
{
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_19CF40440()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = (_QWORD *)*v0;
  sub_19CD41144();
  v1 = *(_QWORD *)(sub_19CFDFFE0() + 16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v5 = v3;
    v6 = *v2;
    v39 = (_QWORD *)*(v2 - 1);
    v40 = v6;
    swift_bridgeObjectRetain();
    v3 = &v39;
    v7 = (_QWORD *)sub_19CFDFFE0();
    if (v7[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      sub_19CF455F0();
      swift_allocError();
      *v35 = 2;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
    v41 = v6;
    v8 = v7[4];
    v9 = v7[5];
    v10 = (_QWORD *)v7[6];
    v11 = v7[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = v10;
    v40 = v11;
    v12 = sub_19CFE001C();
    v14 = v13;
    swift_bridgeObjectRelease();
    if (!v14)
    {
      swift_bridgeObjectRetain();
      v26 = sub_19CD3FD1C(v8, v9);
      v28 = v27;
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v39 = v5;
        v3 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19CE1A3B4();
          v3 = v39;
        }
        swift_bridgeObjectRelease();
        sub_19CDD43B4(v26, (uint64_t)v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v3 = v5;
      }
      goto LABEL_5;
    }
    v37 = v1;
    v38 = v14;
    v15 = v12;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v39 = v5;
    v17 = v8;
    v19 = sub_19CD3FD1C(v8, v9);
    v20 = v5[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v5[3] >= v22)
    {
      if ((v16 & 1) != 0)
      {
        v3 = v39;
        if ((v18 & 1) == 0)
          goto LABEL_19;
      }
      else
      {
        sub_19CE1A3B4();
        v3 = v39;
        if ((v23 & 1) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_19CD26CB4(v22, v16);
      v24 = sub_19CD3FD1C(v17, v9);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_30;
      v19 = v24;
      v3 = v39;
      if ((v23 & 1) == 0)
      {
LABEL_19:
        v3[(v19 >> 6) + 8] |= 1 << v19;
        v30 = (uint64_t *)(v3[6] + 16 * v19);
        *v30 = v17;
        v30[1] = v9;
        v31 = (uint64_t *)(v3[7] + 16 * v19);
        *v31 = v15;
        v31[1] = v38;
        v32 = v3[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_29;
        v3[2] = v34;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v4 = (uint64_t *)(v3[7] + 16 * v19);
    swift_bridgeObjectRelease();
    *v4 = v15;
    v4[1] = v38;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v37;
LABEL_5:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_19CF40B10(a1);
}

uint64_t Models.HTTPTemplateAction.Parameter.Target.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF40874 + 4 * byte_19D063EE0[*v0]))(0x79726575516C7275, 0xE800000000000000);
}

uint64_t sub_19CF40874()
{
  return 0x726564616568;
}

uint64_t sub_19CF40888()
{
  return 0x79646F426E6F736ALL;
}

uint64_t sub_19CF4089C()
{
  return 0x79646F426D726F66;
}

void sub_19CF408B0(char *a1)
{
  sub_19CE806B4(*a1);
}

void sub_19CF408BC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF40908()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF40964()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF409A0()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF409E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF40A30()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF40A8C@<X0>(char *a1@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)(a1);
}

uint64_t sub_19CF40A98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF40AC8 + 4 * byte_19D063EF0[*v0]))();
}

void sub_19CF40AC8(_QWORD *a1@<X8>)
{
  *a1 = 0x726564616568;
  a1[1] = 0xE600000000000000;
}

void sub_19CF40AE0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x79646F426E6F736ALL;
  a1[1] = v1;
}

uint64_t Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_19CF40B10(a1);
}

uint64_t sub_19CF40B10@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.InputType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF40B8C + 4 * byte_19D063EF4[*v0]))(1954047348, 0xE400000000000000);
}

uint64_t sub_19CF40B8C()
{
  return 0x6C69616D65;
}

uint64_t sub_19CF40BA0()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_19CF40BC0()
{
  return 0x506C616D69636564;
}

void sub_19CF40BDC(char *a1)
{
  sub_19CE807F0(*a1);
}

void sub_19CF40BE8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF40C2C()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF40CA4()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF40CD8()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF40D3C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF40D7C()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF40DF4@<X0>(char *a1@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)(a1);
}

uint64_t sub_19CF40E00()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF40E28 + 4 * byte_19D063F04[*v0]))();
}

void sub_19CF40E28(_QWORD *a1@<X8>)
{
  *a1 = 0x6C69616D65;
  a1[1] = 0xE500000000000000;
}

void sub_19CF40E40(_QWORD *a1@<X8>)
{
  *a1 = 0x6D754E656E6F6870;
  a1[1] = 0xEB00000000726562;
}

void sub_19CF40E64(_QWORD *a1@<X8>)
{
  *a1 = 0x506C616D69636564;
  a1[1] = 0xEA00000000006461;
}

uint64_t Models.HTTPTemplateAction.Parameter.init(key:target:inputType:title:isRequired:maximumLength:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v10;
  char v11;

  v10 = *a3;
  v11 = *a4;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v10;
  *(_BYTE *)(a9 + 17) = v11;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_BYTE *)(a9 + 56) = a10 & 1;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[40];
  int v44;
  int v45;

  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(7955819, 0xE300000000000000, (uint64_t)v43);
  sub_19CCF8C5C((uint64_t)v43, (uint64_t)v40, &qword_1ECEB1328);
  v4 = v41;
  if (!v41)
  {
    sub_19CCECFE4((uint64_t)v40, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v43);
    goto LABEL_12;
  }
  v5 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  sub_19CD3E3F8((uint64_t)v43);
  if (!v8)
  {
LABEL_12:
    sub_19CDC5494();
    swift_allocError();
    *v24 = 7955819;
    v14 = 0xE300000000000000;
LABEL_16:
    v24[1] = v14;
    v24[2] = 0x20000001E3DD9550uLL;
    v24[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  JSONObject.subscript.getter(0x746567726174, 0xE600000000000000, (uint64_t)v43);
  sub_19CCF8C5C((uint64_t)v43, (uint64_t)v40, &qword_1ECEB1328);
  v9 = v41;
  if (!v41)
  {
    sub_19CCECFE4((uint64_t)v40, &qword_1ECEB1328);
    goto LABEL_14;
  }
  v10 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  if (!v12)
  {
LABEL_14:
    sub_19CD3E3F8((uint64_t)v43);
    goto LABEL_15;
  }
  Models.HTTPTemplateAction.Parameter.Target.init(rawValue:)((char *)v37);
  v13 = LOBYTE(v37[0]);
  sub_19CD3E3F8((uint64_t)v43);
  if (v13 == 4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v24 = 0x746567726174;
    v14 = 0xE600000000000000;
    goto LABEL_16;
  }
  v14 = 0xE900000000000065;
  JSONObject.subscript.getter(0x7079547475706E69, 0xE900000000000065, (uint64_t)v43);
  sub_19CCF8C5C((uint64_t)v43, (uint64_t)v40, &qword_1ECEB1328);
  v15 = v41;
  if (!v41)
  {
    sub_19CCECFE4((uint64_t)v40, &qword_1ECEB1328);
    goto LABEL_18;
  }
  v45 = v13;
  v16 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  v18 = v17;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  if (!v18)
  {
LABEL_18:
    sub_19CD3E3F8((uint64_t)v43);
    goto LABEL_19;
  }
  Models.HTTPTemplateAction.Parameter.InputType.init(rawValue:)((char *)v37);
  v19 = LOBYTE(v37[0]);
  sub_19CD3E3F8((uint64_t)v43);
  if (v19 == 4)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v24 = 0x7059547475706E69;
    goto LABEL_16;
  }
  v44 = v19;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v43);
  sub_19CCF8C5C((uint64_t)v43, (uint64_t)v40, &qword_1ECEB1328);
  v20 = v41;
  if (v41)
  {
    v21 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    v35 = v23;
    v36 = v22;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v40, &qword_1ECEB1328);
    v35 = 0;
    v36 = 0;
  }
  sub_19CD3E3F8((uint64_t)v43);
  JSONObject.subscript.getter(0x7269757165527369, 0xEA00000000006465, (uint64_t)v40);
  sub_19CCF8C5C((uint64_t)v40, (uint64_t)v37, &qword_1ECEB1328);
  v26 = v38;
  if (!v38)
  {
    sub_19CCECFE4((uint64_t)v37, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v40);
    goto LABEL_25;
  }
  v27 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v26, v27);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  sub_19CD3E3F8((uint64_t)v40);
  if (v28 == 2)
  {
LABEL_25:
    v29 = 0;
    goto LABEL_26;
  }
  v29 = v28 & 1;
LABEL_26:
  JSONObject.subscript.getter(0x4C6D756D6978616DLL, 0xED00006874676E65, (uint64_t)v40);
  sub_19CCF8C5C((uint64_t)v40, (uint64_t)v37, &qword_1ECEB1328);
  v30 = v38;
  if (v38)
  {
    v31 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
    v34 = v33 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v37, &qword_1ECEB1328);
    v32 = 0;
    v34 = 1;
  }
  sub_19CD3E3F8(a1);
  result = sub_19CD3E3F8((uint64_t)v40);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v45;
  *(_BYTE *)(a2 + 17) = v44;
  *(_QWORD *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v35;
  *(_BYTE *)(a2 + 40) = v29;
  *(_QWORD *)(a2 + 48) = v32;
  *(_BYTE *)(a2 + 56) = v34;
  return result;
}

uint64_t Models.HTTPTemplateAction.Parameter.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Models.HTTPTemplateAction.Parameter.target.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void Models.HTTPTemplateAction.Parameter.inputType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t Models.HTTPTemplateAction.Parameter.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.HTTPTemplateAction.Parameter.isRequired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Models.HTTPTemplateAction.Parameter.maximumLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_19CF4146C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF41494 + 4 * byte_19D063F08[*v0]))(7955819, 0xE300000000000000);
}

uint64_t sub_19CF41494()
{
  return 0x746567726174;
}

uint64_t sub_19CF414A8()
{
  return 0x7079547475706E69;
}

uint64_t sub_19CF414C4()
{
  return 0x656C746974;
}

uint64_t sub_19CF414D8()
{
  return 0x7269757165527369;
}

uint64_t sub_19CF414F4()
{
  return 0x4C6D756D6978616DLL;
}

uint64_t sub_19CF41518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF45290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF4153C()
{
  sub_19CF43604();
  return sub_19CFE0A48();
}

uint64_t sub_19CF41564()
{
  sub_19CF43604();
  return sub_19CFE0A54();
}

uint64_t sub_19CF4158C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.init(deserializing:using:)(a1, a2);
}

uint64_t Models.HTTPTemplateAction.Substitutions.urlQuery.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.urlQuery.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.urlQuery.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.headers.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.jsonBody.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.jsonBody.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.jsonBody.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.formBody.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPTemplateAction.Substitutions.formBody.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Models.HTTPTemplateAction.Substitutions.formBody.modify())()
{
  return nullsub_1;
}

uint64_t Models.HTTPTemplateAction.Substitutions.init(urlQuery:headers:jsonBody:formBody:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t result;

  v10 = MEMORY[0x1E0DEE9D8];
  sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  sub_19CD2758C(v10);
  sub_19CD30650(v10);
  sub_19CD2758C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void Models.HTTPTemplateAction.Substitutions.setParameter(value:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_19CF417C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  sub_19CD26B40(v4, v3, v2, v0, isUniquelyReferenced_nonNull_native);
  *v1 = v7;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF4191C(uint64_t result, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = a2;
    v5 = (_QWORD *)result;
    v6 = v3 - 1;
    if (v3 != 1)
    {
      v21 = (_QWORD *)result;
      swift_bridgeObjectRetain();
      v7 = v2;
      v20 = v4;
      v8 = (uint64_t *)(v4 + 40);
      v19 = v6;
      while (1)
      {
        v11 = *(v8 - 1);
        v12 = *v8;
        *(_QWORD *)&v23[0] = v11;
        *((_QWORD *)&v23[0] + 1) = v12;
        swift_bridgeObjectRetain_n();
        v13 = objc_msgSend(v7, sel___swift_objectForKeyedSubscript_, sub_19CFE0808());
        swift_unknownObjectRelease();
        if (v13)
        {
          sub_19CFE004C();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v23, 0, sizeof(v23));
        }
        sub_19CCC290C((uint64_t)v23, (uint64_t)&v24, &qword_1ECEB3370);
        if (v26)
        {
          sub_19CF455B4();
          v14 = swift_dynamicCast();
          swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
          {

            v7 = v22;
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_19CCECFE4((uint64_t)&v24, &qword_1ECEB3370);
        }
        v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), sel_init);
        v24 = v11;
        v25 = v12;
        swift_bridgeObjectRetain();
        v10 = v9;
        objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v10, sub_19CFE0808());
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        v7 = v10;
LABEL_6:
        v8 += 2;
        if (!--v6)
        {
          v4 = v20;
          swift_bridgeObjectRelease();
          v5 = v21;
          v6 = v19;
          goto LABEL_15;
        }
      }
    }
    v7 = v2;
LABEL_15:
    v15 = v4 + 16 * v6;
    v17 = *(_QWORD *)(v15 + 32);
    v16 = *(_QWORD *)(v15 + 40);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    swift_bridgeObjectRetain();
    v18 = sub_19CFE0688();
    v24 = v17;
    v25 = v16;
    swift_bridgeObjectRetain();
    objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v18, sub_19CFE0808());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_19CF41BBC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  _BYTE v23[32];
  _BYTE v24[32];
  _BYTE v25[32];

  v8 = sub_19CFDEA14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD436B0(a3, (uint64_t)v24);
  sub_19CD436B0(a4, (uint64_t)v25);
  sub_19CD436B0((uint64_t)v24, (uint64_t)v22);
  sub_19CD436B0((uint64_t)v25, (uint64_t)v23);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_19CCECFE4((uint64_t)v24, &qword_1EE4372C8);
    v18 = v23;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    swift_bridgeObjectRetain();
    return a1;
  }
  v14 = v20;
  v13 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  sub_19CD436B0((uint64_t)v24, (uint64_t)v22);
  sub_19CD436B0((uint64_t)v25, (uint64_t)v23);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)v24, &qword_1EE4372C8);
    v18 = v22;
    goto LABEL_11;
  }
  v16 = v20;
  v15 = v21;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  v22[0] = a1;
  v22[1] = a2;
  if ((a2 & 0x2000000000000000) != 0)
    v17 = HIBYTE(a2) & 0xF;
  else
    v17 = a1 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (v17)
    sub_19CFDF698();
  v20 = v16;
  v21 = v15;
  sub_19CFDE9F0();
  sub_19CD41144();
  sub_19CFE0010();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_bridgeObjectRelease();
  v20 = v14;
  v21 = v13;
  sub_19CFDF698();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CCECFE4((uint64_t)v24, &qword_1EE4372C8);
  return v22[0];
}

uint64_t sub_19CF41E28()
{
  sub_19CF45570();
  return sub_19CFDF83C();
}

uint64_t sub_19CF41E84()
{
  sub_19CF45570();
  return sub_19CFDF80C();
}

uint64_t sub_19CF41ED0()
{
  sub_19CF4552C();
  return sub_19CFDF83C();
}

uint64_t sub_19CF41F2C()
{
  sub_19CF4552C();
  return sub_19CFDF80C();
}

uint64_t Models.HTTPTemplateAction.Parameter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(unsigned __int8 *)(v1 + 16);
  v22 = *(unsigned __int8 *)(v1 + 17);
  v8 = *(_QWORD *)(v1 + 24);
  v20 = *(_QWORD *)(v1 + 32);
  v21 = v8;
  v19 = *(unsigned __int8 *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 48);
  v17 = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF43604();
  sub_19CFE0A24();
  LOBYTE(v24) = 0;
  v9 = v23;
  sub_19CFE0538();
  if (!v9)
  {
    v10 = v22;
    v12 = v20;
    v11 = v21;
    v13 = v19;
    v14 = v18;
    LOBYTE(v24) = v26;
    v27 = 1;
    sub_19CF43648();
    sub_19CFE0568();
    LOBYTE(v24) = v10;
    v27 = 2;
    sub_19CF4368C();
    sub_19CFE0568();
    v24 = v11;
    v25 = v12;
    v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
    sub_19CF436D0();
    sub_19CFE0568();
    LOBYTE(v24) = v13;
    v27 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442668);
    sub_19CD20AFC(&qword_1EE442670, &qword_1EE442668, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
    v24 = v14;
    LOBYTE(v25) = v17;
    v27 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442678);
    sub_19CF43754();
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t Models.HTTPTemplateAction.Parameter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442690);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF43604();
  sub_19CFE09E8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v22) = 0;
    v11 = sub_19CFE0490();
    v13 = v12;
    v25 = 1;
    sub_19CF437D8();
    swift_bridgeObjectRetain();
    sub_19CFE04B4();
    v24 = v22;
    v25 = 2;
    sub_19CF4381C();
    sub_19CFE04B4();
    v21 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
    v25 = 3;
    sub_19CF43860();
    sub_19CFE04B4();
    v19 = v22;
    v20 = a2;
    v14 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442668);
    v25 = 4;
    sub_19CD20AFC(&qword_1EE4426B8, &qword_1EE442668, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    swift_bridgeObjectRetain();
    sub_19CFE04B4();
    HIDWORD(v18) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442678);
    v25 = 5;
    sub_19CF438E4();
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v15 = v22;
    v16 = v23;
    v17 = v20;
    *v20 = v11;
    v17[1] = v13;
    *((_BYTE *)v17 + 16) = v24;
    *((_BYTE *)v17 + 17) = v21;
    v17[3] = v19;
    v17[4] = v14;
    *((_BYTE *)v17 + 40) = BYTE4(v18);
    v17[6] = v15;
    *((_BYTE *)v17 + 56) = v16;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF42598@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Models.HTTPTemplateAction.Parameter.init(from:)(a1, a2);
}

uint64_t sub_19CF425AC(_QWORD *a1)
{
  return Models.HTTPTemplateAction.Parameter.encode(to:)(a1);
}

uint64_t sub_19CF425C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF425FC + 4 * byte_19D063F12[*v0]))(0x654D6E6F69746361, 0xED00007363697274);
}

uint64_t sub_19CF425FC()
{
  return 0x6574656D61726170;
}

uint64_t sub_19CF42618()
{
  return 0x74736575716572;
}

uint64_t sub_19CF42630()
{
  return 0x4173736563637573;
}

uint64_t sub_19CF42668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF45004(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF4268C()
{
  sub_19CF43968();
  return sub_19CFE0A48();
}

uint64_t sub_19CF426B4()
{
  sub_19CF43968();
  return sub_19CFE0A54();
}

uint64_t Models.HTTPTemplateAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  _UNKNOWN **v29;
  ValueMetadata *v30;
  _QWORD *v31;
  _UNKNOWN **v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  _UNKNOWN **v36;
  ValueMetadata *v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[2];
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[8];
  _QWORD v86[2];
  uint64_t v87;

  v74 = a2;
  v72 = type metadata accessor for Models.HTTPTemplateAction();
  MEMORY[0x1E0C80A78](v72, v3);
  v73 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v71, v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v60 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4426D0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_19CF43968();
  v18 = v76;
  sub_19CFE09E8();
  if (v18)
  {
    v21 = v75;
  }
  else
  {
    v69 = v7;
    v70 = v11;
    v19 = v74;
    v76 = v13;
    v85[0] = 0;
    sub_19CE8C13C();
    sub_19CFE0484();
    v20 = v12;
    if (v86[0])
      v23 = v86[0];
    else
      v23 = MEMORY[0x1E0DEE9D8];
    if (v86[0])
      v24 = v86[1];
    else
      v24 = MEMORY[0x1E0DEE9E0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4426E0);
    v85[0] = 1;
    sub_19CF439AC(&qword_1EE4426E8, (uint64_t (*)(void))sub_19CF43A14, MEMORY[0x1E0DEAF40]);
    sub_19CFE04B4();
    v25 = v75;
    v65 = v24;
    v66 = v23;
    v67 = v86[0];
    v68 = v16;
    __swift_project_boxed_opaque_existential_1(v75, v75[3]);
    v26 = sub_19CFE09DC();
    v64 = 0xD000000000000023;
    v63 = (_QWORD *)0x800000019D06ECA0;
    v27 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    if (v27)
      v30 = (ValueMetadata *)v27;
    else
      v30 = &type metadata for EmptyActionKindTable;
    v31 = v25;
    if (v27)
      v32 = v29;
    else
      v32 = &off_1E3DD1128;
    v85[0] = 3;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v30, (uint64_t)v32, (uint64_t)v86);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v33 = sub_19CFE09DC();
    v34 = sub_19CF05CE4(v64, (uint64_t)v63, v33);
    v36 = v35;
    swift_bridgeObjectRelease();
    if (v34)
      v37 = (ValueMetadata *)v34;
    else
      v37 = &type metadata for EmptyActionKindTable;
    if (v34)
      v38 = v36;
    else
      v38 = &off_1E3DD1128;
    LOBYTE(v84) = 4;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v37, (uint64_t)v38, (uint64_t)v85);
    v21 = v31;
    LOBYTE(v77) = 2;
    sub_19CFE043C();
    v64 = v20;
    v62 = v83;
    v61 = v82;
    v63 = __swift_project_boxed_opaque_existential_1(v81, v82);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    sub_19CFE09DC();
    v39 = swift_bridgeObjectRetain();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v39);
    v40 = v77;
    v41 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    v87 = v41;
    swift_bridgeObjectRetain();
    v42 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v40);
    v43 = v40;
    swift_bridgeObjectRelease();
    if (v42)
    {
      sub_19CDC6F28(v42);
      v41 = v87;
    }
    v44 = v19;
    v45 = (int *)v72;
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
    *(_QWORD *)&v77 = v41;
    sub_19CD433C0(&v77, v80);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79 = v43;
    sub_19CD13D40(v80, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
    v47 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v77 = v47;
    v48 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v77);
    Decoder.withUserInfo(_:)(v48, v61, v62, &v84);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
    sub_19CCD5B84((uint64_t)&v84, (uint64_t)v81);
    v49 = (uint64_t)v70;
    NetRequest.init(from:)(v81, (uint64_t)v70);
    v50 = v73;
    v51 = (uint64_t)v69;
    sub_19CD03280(v49, (uint64_t)v69);
    sub_19CCF8C5C((uint64_t)v86, (uint64_t)v81, qword_1EE439B38);
    sub_19CCF8C5C((uint64_t)v85, (uint64_t)&v77, qword_1EE439B38);
    v52 = v65;
    *v50 = v66;
    v50[1] = v52;
    v50[2] = v67;
    sub_19CD03280(v51, (uint64_t)v50 + v45[6]);
    v53 = (uint64_t *)(v51 + *(int *)(v71 + 40));
    v55 = *v53;
    v54 = v53[1];
    swift_bridgeObjectRetain();
    sub_19CD033A8(v51);
    v56 = (_QWORD *)((char *)v50 + v45[7]);
    if (v54)
    {
      *v56 = v55;
      v56[1] = v54;
      v57 = (_QWORD *)((char *)v50 + v45[8]);
      *v57 = v55;
      v57[1] = v54;
    }
    else
    {
      *v56 = 0;
      v56[1] = 0;
      v58 = (_QWORD *)((char *)v50 + v45[8]);
      *v58 = 0;
      v58[1] = 0;
    }
    v59 = v76;
    sub_19CCC290C((uint64_t)v81, (uint64_t)v50 + v45[9], qword_1EE439B38);
    sub_19CCC290C((uint64_t)&v77, (uint64_t)v50 + v45[10], qword_1EE439B38);
    sub_19CF435C0((uint64_t)v50, v44);
    swift_bridgeObjectRetain();
    sub_19CD033A8((uint64_t)v70);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v84);
    sub_19CCECFE4((uint64_t)v85, qword_1EE439B38);
    sub_19CCECFE4((uint64_t)v86, qword_1EE439B38);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v68, v64);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
}

uint64_t Models.HTTPTemplateAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  _UNKNOWN **v17;
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  _UNKNOWN **v24;
  ValueMetadata *v25;
  _UNKNOWN **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4426F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF43968();
  sub_19CFE0A24();
  v48 = *v1;
  LOBYTE(v45[0]) = 0;
  sub_19CE8BE18();
  v8 = v42;
  sub_19CFE0568();
  if (v8)
  {
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v10 = (uint64_t)v7;
    v11 = v3;
  }
  else
  {
    v42 = v4;
    *(_QWORD *)&v48 = *((_QWORD *)v1 + 2);
    LOBYTE(v45[0]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4426E0);
    sub_19CF439AC(&qword_1EE442700, (uint64_t (*)(void))sub_19CF43A58, MEMORY[0x1E0DEAF10]);
    sub_19CFE0568();
    v39 = v3;
    v40 = v1;
    v13 = a1[3];
    v41 = v7;
    __swift_project_boxed_opaque_existential_1(a1, v13);
    v14 = sub_19CFE09DC();
    v15 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    if (v15)
      v18 = (ValueMetadata *)v15;
    else
      v18 = &type metadata for EmptyActionKindTable;
    if (!v15)
      v17 = &off_1E3DD1128;
    v19 = type metadata accessor for Models.HTTPTemplateAction();
    v20 = (uint64_t)v40 + *(int *)(v19 + 36);
    LOBYTE(v48) = 3;
    encodeActionModel<A, B>(_:using:container:forKey:)(v20, (uint64_t)v18, (uint64_t)v41, (uint64_t)&v48, (uint64_t)v18, (uint64_t)&_s18HTTPTemplateActionV10CodingKeysON, (uint64_t)v17);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v21 = sub_19CFE09DC();
    v22 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v21);
    v24 = v23;
    swift_bridgeObjectRelease();
    if (v22)
      v25 = (ValueMetadata *)v22;
    else
      v25 = &type metadata for EmptyActionKindTable;
    if (v22)
      v26 = v24;
    else
      v26 = &off_1E3DD1128;
    v27 = (uint64_t)v40 + *(int *)(v19 + 40);
    LOBYTE(v48) = 4;
    encodeActionModel<A, B>(_:using:container:forKey:)(v27, (uint64_t)v25, (uint64_t)v41, (uint64_t)&v48, (uint64_t)v25, (uint64_t)&_s18HTTPTemplateActionV10CodingKeysON, (uint64_t)v26);
    v38 = v19;
    LOBYTE(v48) = 2;
    sub_19CFE04F0();
    v36 = v47;
    v37 = v46;
    v35 = __swift_project_boxed_opaque_existential_1(v45, v46);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09DC();
    v28 = swift_bridgeObjectRetain();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v28);
    v29 = v48;
    v30 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    v50 = v30;
    swift_bridgeObjectRetain();
    v31 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v29);
    swift_bridgeObjectRelease();
    if (v31)
    {
      sub_19CDC6F28(v31);
      v30 = v50;
    }
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
    *(_QWORD *)&v48 = v30;
    sub_19CD433C0(&v48, v44);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = v29;
    sub_19CD13D40(v44, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
    v33 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v48 = v33;
    v34 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v48);
    sub_19CF5C2AC(v34, v37, v36, (uint64_t **)&v48);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    NetRequest.encode(to:)(&v48);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v48);
    v10 = (uint64_t)v41;
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
    v11 = v39;
  }
  return v9(v10, v11);
}

uint64_t sub_19CF4343C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.HTTPTemplateAction.init(from:)(a1, a2);
}

uint64_t sub_19CF43450(_QWORD *a1)
{
  return Models.HTTPTemplateAction.encode(to:)(a1);
}

BOOL _s9JetEngine6ModelsO18HTTPTemplateActionV9ParameterV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  _BOOL8 result;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 17);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(unsigned __int8 *)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a2 + 56);
  v19 = *(_BYTE *)(a1 + 56);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_19CFE06A0(), result = 0, (v10 & 1) != 0))
  {
    sub_19CE806B4(v2);
    if ((v12 & 1) == 0)
      return 0;
    sub_19CE807F0(v3);
    if ((v13 & 1) == 0)
      return 0;
    if (v5)
    {
      if (!v7)
        return 0;
      if (v4 == v8 && v5 == v7)
      {
        if (v6 != v9)
          return 0;
        goto LABEL_16;
      }
      v14 = sub_19CFE06A0();
      result = 0;
      if ((v14 & 1) == 0)
        return result;
LABEL_15:
      if (((v6 ^ v9) & 1) != 0)
        return result;
LABEL_16:
      if ((v19 & 1) == 0)
      {
        v15 = v18;
        if (v17 != v16)
          v15 = 1;
        return (v15 & 1) == 0;
      }
      return (v18 & 1) != 0;
    }
    result = 0;
    if (!v7)
      goto LABEL_15;
  }
  return result;
}

uint64_t sub_19CF435C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Models.HTTPTemplateAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19CF43604()
{
  unint64_t result;

  result = qword_1EE442638;
  if (!qword_1EE442638)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D064640, &_s18HTTPTemplateActionV9ParameterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442638);
  }
  return result;
}

unint64_t sub_19CF43648()
{
  unint64_t result;

  result = qword_1EE442640;
  if (!qword_1EE442640)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.Target, &type metadata for Models.HTTPTemplateAction.Parameter.Target);
    atomic_store(result, (unint64_t *)&qword_1EE442640);
  }
  return result;
}

unint64_t sub_19CF4368C()
{
  unint64_t result;

  result = qword_1EE442648;
  if (!qword_1EE442648)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.InputType, &type metadata for Models.HTTPTemplateAction.Parameter.InputType);
    atomic_store(result, (unint64_t *)&qword_1EE442648);
  }
  return result;
}

unint64_t sub_19CF436D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE442658;
  if (!qword_1EE442658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE442650);
    v2 = sub_19CD20AFC(&qword_1EE442660, &qword_1ECEB2550, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <A> A?);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE442658);
  }
  return result;
}

unint64_t sub_19CF43754()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE442680;
  if (!qword_1EE442680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE442678);
    v2 = sub_19CD20AFC(&qword_1EE442688, &qword_1EE43C810, MEMORY[0x1E0DEB420], (uint64_t)&protocol conformance descriptor for <A> A?);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE442680);
  }
  return result;
}

unint64_t sub_19CF437D8()
{
  unint64_t result;

  result = qword_1EE442698;
  if (!qword_1EE442698)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.Target, &type metadata for Models.HTTPTemplateAction.Parameter.Target);
    atomic_store(result, (unint64_t *)&qword_1EE442698);
  }
  return result;
}

unint64_t sub_19CF4381C()
{
  unint64_t result;

  result = qword_1EE4426A0;
  if (!qword_1EE4426A0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.InputType, &type metadata for Models.HTTPTemplateAction.Parameter.InputType);
    atomic_store(result, (unint64_t *)&qword_1EE4426A0);
  }
  return result;
}

unint64_t sub_19CF43860()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE4426A8;
  if (!qword_1EE4426A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE442650);
    v2 = sub_19CD20AFC((unint64_t *)&qword_1EE4426B0, &qword_1ECEB2550, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <A> A?);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE4426A8);
  }
  return result;
}

unint64_t sub_19CF438E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE4426C0;
  if (!qword_1EE4426C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE442678);
    v2 = sub_19CD20AFC(&qword_1EE4426C8, &qword_1EE43C810, MEMORY[0x1E0DEB448], (uint64_t)&protocol conformance descriptor for <A> A?);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE4426C0);
  }
  return result;
}

unint64_t sub_19CF43968()
{
  unint64_t result;

  result = qword_1EE4426D8;
  if (!qword_1EE4426D8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0645F0, &_s18HTTPTemplateActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4426D8);
  }
  return result;
}

uint64_t sub_19CF439AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE4426E0);
    v8 = a2();
    result = MEMORY[0x1A1ADBD7C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19CF43A14()
{
  unint64_t result;

  result = qword_1EE4426F0;
  if (!qword_1EE4426F0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter, &type metadata for Models.HTTPTemplateAction.Parameter);
    atomic_store(result, (unint64_t *)&qword_1EE4426F0);
  }
  return result;
}

unint64_t sub_19CF43A58()
{
  unint64_t result;

  result = qword_1EE442708;
  if (!qword_1EE442708)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter, &type metadata for Models.HTTPTemplateAction.Parameter);
    atomic_store(result, (unint64_t *)&qword_1EE442708);
  }
  return result;
}

unint64_t sub_19CF43AA0()
{
  unint64_t result;

  result = qword_1EE442710;
  if (!qword_1EE442710)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Error, &type metadata for Models.HTTPTemplateAction.Error);
    atomic_store(result, (unint64_t *)&qword_1EE442710);
  }
  return result;
}

unint64_t sub_19CF43AE8()
{
  unint64_t result;

  result = qword_1EE442718;
  if (!qword_1EE442718)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.Target, &type metadata for Models.HTTPTemplateAction.Parameter.Target);
    atomic_store(result, (unint64_t *)&qword_1EE442718);
  }
  return result;
}

unint64_t sub_19CF43B30()
{
  unint64_t result;

  result = qword_1EE442720;
  if (!qword_1EE442720)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.InputType, &type metadata for Models.HTTPTemplateAction.Parameter.InputType);
    atomic_store(result, (unint64_t *)&qword_1EE442720);
  }
  return result;
}

uint64_t sub_19CF43B74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF43B80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_19CF43BC0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 40);
  return result;
}

_BYTE *sub_19CF43BCC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 40) = *result;
  return result;
}

uint64_t sub_19CF43BD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 56);
  *(_QWORD *)a2 = *(_QWORD *)(result + 48);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF43BEC(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 56) = v2;
  return result;
}

uint64_t *_s18HTTPTemplateActionVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_19CFDEDE0();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = (int *)type metadata accessor for NetRequest();
    v15 = v14[5];
    v16 = &v10[v15];
    v17 = &v11[v15];
    v19 = *(_QWORD *)v17;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v19;
    *((_QWORD *)v16 + 1) = v18;
    *(_QWORD *)&v10[v14[6]] = *(_QWORD *)&v11[v14[6]];
    *(_QWORD *)&v10[v14[7]] = *(_QWORD *)&v11[v14[7]];
    *(_QWORD *)&v10[v14[8]] = *(_QWORD *)&v11[v14[8]];
    v20 = v14[9];
    v21 = &v10[v20];
    v22 = &v11[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = v22[16];
    v24 = v14[10];
    v25 = &v10[v24];
    v26 = &v11[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    *(_QWORD *)&v10[v14[11]] = *(_QWORD *)&v11[v14[11]];
    v28 = a3[7];
    v29 = a3[8];
    v30 = (uint64_t *)((char *)v7 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (uint64_t *)((char *)v7 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[9];
    v37 = (char *)v7 + v36;
    v38 = (char *)a2 + v36;
    v39 = *(uint64_t *)((char *)a2 + v36 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39)
    {
      v40 = *((_QWORD *)v38 + 4);
      *((_QWORD *)v37 + 3) = v39;
      *((_QWORD *)v37 + 4) = v40;
      (**(void (***)(char *, char *, uint64_t))(v39 - 8))(v37, v38, v39);
    }
    else
    {
      v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
    }
    v42 = a3[10];
    v43 = (char *)v7 + v42;
    v44 = (char *)a2 + v42;
    v45 = *(uint64_t *)((char *)a2 + v42 + 24);
    if (v45)
    {
      v46 = *((_QWORD *)v44 + 4);
      *((_QWORD *)v43 + 3) = v45;
      *((_QWORD *)v43 + 4) = v46;
      (**(void (***)(void))(v45 - 8))();
    }
    else
    {
      v47 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v47;
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    }
  }
  return v7;
}

uint64_t _s18HTTPTemplateActionVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for NetRequest();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[9];
  if (*(_QWORD *)(v6 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(v6);
  result = a1 + a2[10];
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  return result;
}

_QWORD *_s18HTTPTemplateActionVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEDE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for NetRequest();
  v13 = v12[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  *(_QWORD *)&v8[v12[6]] = *(_QWORD *)&v9[v12[6]];
  *(_QWORD *)&v8[v12[7]] = *(_QWORD *)&v9[v12[7]];
  *(_QWORD *)&v8[v12[8]] = *(_QWORD *)&v9[v12[8]];
  v18 = v12[9];
  v19 = &v8[v18];
  v20 = &v9[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v19[16] = v20[16];
  v22 = v12[10];
  v23 = &v8[v22];
  v24 = &v9[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v8[v12[11]] = *(_QWORD *)&v9[v12[11]];
  v26 = a3[7];
  v27 = a3[8];
  v28 = (_QWORD *)((char *)a1 + v26);
  v29 = (_QWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[9];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)((char *)a2 + v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37)
  {
    v38 = *((_QWORD *)v36 + 4);
    *((_QWORD *)v35 + 3) = v37;
    *((_QWORD *)v35 + 4) = v38;
    (**(void (***)(char *, char *, uint64_t))(v37 - 8))(v35, v36, v37);
  }
  else
  {
    v39 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v39;
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
  }
  v40 = a3[10];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = *(_QWORD *)((char *)a2 + v40 + 24);
  if (v43)
  {
    v44 = *((_QWORD *)v42 + 4);
    *((_QWORD *)v41 + 3) = v43;
    *((_QWORD *)v41 + 4) = v44;
    (**(void (***)(void))(v43 - 8))();
  }
  else
  {
    v45 = *((_OWORD *)v42 + 1);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v45;
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
  }
  return a1;
}

_QWORD *_s18HTTPTemplateActionVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v14 = v10[9];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  v17 = v10[10];
  v18 = &v7[v17];
  v19 = &v8[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (uint64_t)a1 + v26;
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = *(_QWORD *)((char *)a2 + v26 + 24);
  if (*(_QWORD *)((char *)a1 + v26 + 24))
  {
    if (v29)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v27, v28);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v27);
  }
  else if (v29)
  {
    *(_QWORD *)(v27 + 24) = v29;
    *(_QWORD *)(v27 + 32) = v28[4];
    (**(void (***)(uint64_t, char *))(v29 - 8))(v27, (char *)v28);
    goto LABEL_8;
  }
  v30 = *(_OWORD *)v28;
  v31 = *((_OWORD *)v28 + 1);
  *(_QWORD *)(v27 + 32) = v28[4];
  *(_OWORD *)v27 = v30;
  *(_OWORD *)(v27 + 16) = v31;
LABEL_8:
  v32 = a3[10];
  v33 = (uint64_t)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *((_QWORD *)v34 + 3);
  if (!*(_QWORD *)((char *)a1 + v32 + 24))
  {
    if (v35)
    {
      *(_QWORD *)(v33 + 24) = v35;
      *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
      (**(void (***)(uint64_t, char *))(v35 - 8))(v33, v34);
      return a1;
    }
LABEL_14:
    v36 = *(_OWORD *)v34;
    v37 = *((_OWORD *)v34 + 1);
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    *(_OWORD *)v33 = v36;
    *(_OWORD *)(v33 + 16) = v37;
    return a1;
  }
  if (!v35)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v33);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v33, (uint64_t *)v34);
  return a1;
}

uint64_t _s18HTTPTemplateActionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  *(_OWORD *)(v7 + v10[5]) = *(_OWORD *)(v8 + v10[5]);
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  v11 = v10[9];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v7 + v10[10]) = *(_OWORD *)(v8 + v10[10]);
  *(_QWORD *)(v7 + v10[11]) = *(_QWORD *)(v8 + v10[11]);
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[9];
  v16 = a3[10];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  return a1;
}

_QWORD *_s18HTTPTemplateActionVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  __int128 v41;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for NetRequest();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v16 = v10[9];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  v20 = v10[10];
  v21 = &v7[v20];
  v22 = &v8[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  v25 = a3[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[8];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[9];
  v36 = (uint64_t)a1 + v35;
  v37 = (char *)a2 + v35;
  if (*(_QWORD *)((char *)a1 + v35 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(v36);
  v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_QWORD *)(v36 + 32) = *((_QWORD *)v37 + 4);
  v39 = a3[10];
  v40 = (char *)a1 + v39;
  if (*(_QWORD *)((char *)a1 + v39 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v39);
  v41 = *(_OWORD *)((char *)a2 + v39 + 16);
  *(_OWORD *)v40 = *(_OWORD *)((char *)a2 + v39);
  *((_OWORD *)v40 + 1) = v41;
  *((_QWORD *)v40 + 4) = *(_QWORD *)((char *)a2 + v39 + 32);
  return a1;
}

uint64_t _s18HTTPTemplateActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF44724(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NetRequest();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t _s18HTTPTemplateActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CF447AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NetRequest();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CF44820()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NetRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s18HTTPTemplateActionV5ErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF44904 + 4 * byte_19D063F1C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF44938 + 4 * byte_19D063F17[v4]))();
}

uint64_t sub_19CF44938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF44948);
  return result;
}

uint64_t sub_19CF44954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF4495CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF44960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Error()
{
  return &type metadata for Models.HTTPTemplateAction.Error;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.JSONBody()
{
  return &type metadata for Models.HTTPTemplateAction.JSONBody;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.FormBody()
{
  return &type metadata for Models.HTTPTemplateAction.FormBody;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18HTTPTemplateActionV9ParameterVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  return a1;
}

uint64_t _s18HTTPTemplateActionV9ParameterVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter.Target()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter.Target;
}

uint64_t _s18HTTPTemplateActionV9ParameterV6TargetOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CF44BA0 + 4 * byte_19D063F26[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CF44BD4 + 4 * byte_19D063F21[v4]))();
}

uint64_t sub_19CF44BD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44BDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF44BE4);
  return result;
}

uint64_t sub_19CF44BF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF44BF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CF44BFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44C04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Parameter.InputType()
{
  return &type metadata for Models.HTTPTemplateAction.Parameter.InputType;
}

_QWORD *_s18HTTPTemplateActionV13SubstitutionsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.HTTPTemplateAction.Substitutions()
{
  return &type metadata for Models.HTTPTemplateAction.Substitutions;
}

uint64_t _s18HTTPTemplateActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CF44D08 + 4 * byte_19D063F30[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CF44D3C + 4 * byte_19D063F2B[v4]))();
}

uint64_t sub_19CF44D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF44D4CLL);
  return result;
}

uint64_t sub_19CF44D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF44D60);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CF44D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18HTTPTemplateActionV10CodingKeysOMa()
{
  return &_s18HTTPTemplateActionV10CodingKeysON;
}

uint64_t _s18HTTPTemplateActionV9ParameterV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CF44DD4 + 4 * byte_19D063F3A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CF44E08 + 4 * byte_19D063F35[v4]))();
}

uint64_t sub_19CF44E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF44E18);
  return result;
}

uint64_t sub_19CF44E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF44E2CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CF44E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF44E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18HTTPTemplateActionV9ParameterV10CodingKeysOMa()
{
  return &_s18HTTPTemplateActionV9ParameterV10CodingKeysON;
}

unint64_t sub_19CF44E58()
{
  unint64_t result;

  result = qword_1EE442728;
  if (!qword_1EE442728)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D064510, &_s18HTTPTemplateActionV9ParameterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442728);
  }
  return result;
}

unint64_t sub_19CF44EA0()
{
  unint64_t result;

  result = qword_1EE442730;
  if (!qword_1EE442730)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0645C8, &_s18HTTPTemplateActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442730);
  }
  return result;
}

unint64_t sub_19CF44EE8()
{
  unint64_t result;

  result = qword_1EE442738;
  if (!qword_1EE442738)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D064538, &_s18HTTPTemplateActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442738);
  }
  return result;
}

unint64_t sub_19CF44F30()
{
  unint64_t result;

  result = qword_1EE442740;
  if (!qword_1EE442740)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D064560, &_s18HTTPTemplateActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442740);
  }
  return result;
}

unint64_t sub_19CF44F78()
{
  unint64_t result;

  result = qword_1EE442748;
  if (!qword_1EE442748)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D064480, &_s18HTTPTemplateActionV9ParameterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442748);
  }
  return result;
}

unint64_t sub_19CF44FC0()
{
  unint64_t result;

  result = qword_1EE442750;
  if (!qword_1EE442750)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0644A8, &_s18HTTPTemplateActionV9ParameterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442750);
  }
  return result;
}

uint64_t sub_19CF45004(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4173736563637573 && a2 == 0xED00006E6F697463 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x416572756C696166 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_19CF45290(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746567726174 && a2 == 0xE600000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079547475706E69 && a2 == 0xE900000000000065 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7269757165527369 && a2 == 0xEA00000000006465 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4C6D756D6978616DLL && a2 == 0xED00006874676E65)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_19CF4552C()
{
  unint64_t result;

  result = qword_1EE442758;
  if (!qword_1EE442758)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.InputType, &type metadata for Models.HTTPTemplateAction.Parameter.InputType);
    atomic_store(result, (unint64_t *)&qword_1EE442758);
  }
  return result;
}

unint64_t sub_19CF45570()
{
  unint64_t result;

  result = qword_1EE442760;
  if (!qword_1EE442760)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Parameter.Target, &type metadata for Models.HTTPTemplateAction.Parameter.Target);
    atomic_store(result, (unint64_t *)&qword_1EE442760);
  }
  return result;
}

unint64_t sub_19CF455B4()
{
  unint64_t result;

  result = qword_1EE442768;
  if (!qword_1EE442768)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE442768);
  }
  return result;
}

unint64_t sub_19CF455F0()
{
  unint64_t result;

  result = qword_1EE442770;
  if (!qword_1EE442770)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.HTTPTemplateAction.Error, &type metadata for Models.HTTPTemplateAction.Error);
    atomic_store(result, (unint64_t *)&qword_1EE442770);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationMetricsFieldsProvider()
{
  return &type metadata for ClickLocationMetricsFieldsProvider;
}

uint64_t sub_19CF45648(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[4];
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B08);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  swift_bridgeObjectRetain();
  v17 = sub_19CDF24E8(0xD000000000000028, 0x800000019D073570, v16);
  result = swift_bridgeObjectRelease();
  if (v17)
  {
    v62 = a6;
    swift_bridgeObjectRetain();
    sub_19CDF1678(0xD000000000000029, 0x800000019D0735A0, v16, (uint64_t)v15);
    swift_bridgeObjectRelease();
    v19 = sub_19CFDEFA8();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
    {
      swift_release();
      return sub_19CCECFE4((uint64_t)v15, &qword_1EE439B08);
    }
    v61 = a3;
    v59 = sub_19CFDEF90();
    v60 = v21;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
    v22 = a1[3];
    v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    if (*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      v25 = sub_19CD3FD1C(v61, a4);
      if ((v26 & 1) != 0)
      {
        sub_19CD436B0(*(_QWORD *)(v24 + 56) + 32 * v25, (uint64_t)&v66);
      }
      else
      {
        v66 = 0u;
        v67 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v66 = 0u;
      v67 = 0u;
    }
    swift_bridgeObjectRelease();
    v27 = *((_QWORD *)&v67 + 1);
    sub_19CCECFE4((uint64_t)&v66, &qword_1ECEB3370);
    if (v27)
    {
      v58 = a4;
      if (qword_1EE43D060 != -1)
        swift_once();
      sub_19CFE0A6C();
      v28 = *((_QWORD *)&v67 + 1);
      v29 = v68;
      __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v30 = swift_allocObject();
      v57 = xmmword_19D0522A0;
      *(_OWORD *)(v30 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v31 = swift_allocObject();
      v32 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v31 + 16) = v57;
      v65[3] = v32;
      v65[0] = 0xD00000000000006ELL;
      v65[1] = 0x800000019D0778F0;
      v63 = 0u;
      v64 = 0u;
      sub_19CD40658((uint64_t)v65, (uint64_t)&v63);
      *(_BYTE *)(v31 + 64) = 0;
      v33 = v64;
      *(_OWORD *)(v31 + 32) = v63;
      *(_OWORD *)(v31 + 48) = v33;
      *(_QWORD *)(v30 + 32) = v31;
      Logger.warning(_:)(v30, v28, v29);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v66);
      v34 = _s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0();
      a4 = v58;
      if ((v34 & 1) == 0)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    v35 = v60;
    v36 = sub_19CF30FA4(v59, v60);
    if (!*(_QWORD *)(v36 + 16))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    v37 = a1[3];
    v38 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v37);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
    if (*(_QWORD *)(v39 + 16))
    {
      v40 = v62;
      swift_bridgeObjectRetain();
      v41 = sub_19CD3FD1C(v69, v40);
      if ((v42 & 1) != 0)
      {
        sub_19CD436B0(*(_QWORD *)(v39 + 56) + 32 * v41, (uint64_t)&v66);
      }
      else
      {
        v66 = 0u;
        v67 = 0u;
      }
      swift_bridgeObjectRelease();
      v35 = v60;
    }
    else
    {
      v66 = 0u;
      v67 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v67 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      if (swift_dynamicCast())
      {
        v43 = v63;
LABEL_30:
        *((_QWORD *)&v67 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
        *(_QWORD *)&v66 = v36;
        sub_19CD433C0(&v66, &v63);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v65[0] = v43;
        sub_19CD13D40(&v63, v61, a4, isUniquelyReferenced_nonNull_native);
        v45 = v65[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *((_QWORD *)&v67 + 1) = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v66 = v59;
        *((_QWORD *)&v66 + 1) = v35;
        sub_19CD433C0(&v66, &v63);
        v46 = swift_isUniquelyReferenced_nonNull_native();
        v65[0] = v45;
        sub_19CD13D40(&v63, 0xD000000000000015, 0x800000019D0778D0, v46);
        v47 = v65[0];
        swift_bridgeObjectRelease();
        *((_QWORD *)&v67 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
        *(_QWORD *)&v66 = v47;
        v48 = a1[3];
        v49 = a1[4];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v48);
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 16))(&v66, v69, v62, v48, v49);
        if (v6)
        {
          swift_bridgeObjectRelease();
LABEL_42:
          swift_release();
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v66);
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v66);
LABEL_33:
        v50 = a1[3];
        v51 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v50);
        v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51);
        if (*(_QWORD *)(v52 + 16))
        {
          swift_bridgeObjectRetain();
          v53 = sub_19CD3FD1C(v61, a4);
          if ((v54 & 1) != 0)
          {
            sub_19CD436B0(*(_QWORD *)(v52 + 56) + 32 * v53, (uint64_t)&v66);
          }
          else
          {
            v66 = 0u;
            v67 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v66 = 0u;
          v67 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v67 + 1))
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_19CCECFE4((uint64_t)&v66, &qword_1ECEB3370);
        }
        sub_19CCECFE4((uint64_t)&v66, &qword_1ECEB3370);
        *((_QWORD *)&v67 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
        *(_QWORD *)&v66 = v36;
        v55 = a1[3];
        v56 = a1[4];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v55);
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 16))(&v66, v61, a4, v55, v56);
        goto LABEL_42;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v66, &qword_1ECEB3370);
    }
    v43 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_19CF45CFC(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_19CF45648(a1, a2, *v2, v2[1], v2[2], v2[3]);
}

uint64_t sub_19CF45D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  sub_19CCF8C5C(a1, (uint64_t)&v28, &qword_1ECEB1328);
  v4 = *((_QWORD *)&v29 + 1);
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_19CCECFE4((uint64_t)&v28, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v5 = v30;
  __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_19CCF8C5C(a1, (uint64_t)v22, &qword_1ECEB1328);
  v7 = v23;
  if (!v23)
  {
    sub_19CCECFE4((uint64_t)v22, &qword_1ECEB1328);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
    goto LABEL_9;
  }
  v8 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v25, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v25, &qword_1EE43D068);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442798);
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    sub_19CCF8C5C((uint64_t)&v28, (uint64_t)&v25, qword_1EE43A238);
    v15 = *((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      sub_19CDC5494();
      v17 = (void *)swift_allocError();
      v18 = MEMORY[0x1E0DEE9D8];
      *v19 = v14;
      v19[1] = v18;
      v19[2] = 0;
      v19[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 8))(v14, v17, v15, v16);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v25, qword_1EE43A238);
    }
    sub_19CD3E3F8(a1);
    sub_19CCECFE4((uint64_t)&v28, qword_1EE43A238);
    return MEMORY[0x1E0DEE9D8];
  }
  v28 = v25;
  v29 = v26;
  v30 = v27;
  v9 = sub_19CEC3718((uint64_t)&v28, (uint64_t)&v25);
  MEMORY[0x1E0C80A78](v9, v10);
  v21[2] = a2;
  v11 = *((_QWORD *)&v26 + 1);
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
  v13 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v12 + 56))(sub_19CF4A024, v21, &type metadata for JSONBridgingConfiguration.ModelDescriptor, v11, v12);
  sub_19CE07F20((uint64_t)&v25);
  swift_bridgeObjectRelease();
  sub_19CD3E3F8(a1);
  sub_19CE07F20((uint64_t)&v28);
  return v13;
}

uint64_t sub_19CF45FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  sub_19CCF8C5C(a1, (uint64_t)&v28, &qword_1ECEB1328);
  v4 = *((_QWORD *)&v29 + 1);
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_19CCECFE4((uint64_t)&v28, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v5 = v30;
  __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_19CCF8C5C(a1, (uint64_t)v22, &qword_1ECEB1328);
  v7 = v23;
  if (!v23)
  {
    sub_19CCECFE4((uint64_t)v22, &qword_1ECEB1328);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
    goto LABEL_9;
  }
  v8 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v25, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v25, &qword_1EE43D068);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442780);
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    sub_19CCF8C5C((uint64_t)&v28, (uint64_t)&v25, qword_1EE43A238);
    v15 = *((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      sub_19CDC5494();
      v17 = (void *)swift_allocError();
      v18 = MEMORY[0x1E0DEE9D8];
      *v19 = v14;
      v19[1] = v18;
      v19[2] = 0;
      v19[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 8))(v14, v17, v15, v16);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v25, qword_1EE43A238);
    }
    sub_19CD3E3F8(a1);
    sub_19CCECFE4((uint64_t)&v28, qword_1EE43A238);
    return MEMORY[0x1E0DEE9D8];
  }
  v28 = v25;
  v29 = v26;
  v30 = v27;
  v9 = sub_19CEC3718((uint64_t)&v28, (uint64_t)&v25);
  MEMORY[0x1E0C80A78](v9, v10);
  v21[2] = a2;
  v11 = *((_QWORD *)&v26 + 1);
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
  v13 = (*(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v12 + 56))(sub_19CF49F04, v21, &type metadata for Models.Menu.Child, v11, v12);
  sub_19CE07F20((uint64_t)&v25);
  swift_bridgeObjectRelease();
  sub_19CD3E3F8(a1);
  sub_19CE07F20((uint64_t)&v28);
  return v13;
}

uint64_t sub_19CF462D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  sub_19CCF8C5C(a1, (uint64_t)&v28, &qword_1ECEB1328);
  v4 = *((_QWORD *)&v29 + 1);
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_19CCECFE4((uint64_t)&v28, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v5 = v30;
  __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_19CCF8C5C(a1, (uint64_t)v22, &qword_1ECEB1328);
  v7 = v23;
  if (!v23)
  {
    sub_19CCECFE4((uint64_t)v22, &qword_1ECEB1328);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
    goto LABEL_9;
  }
  v8 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v25, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v25, &qword_1EE43D068);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4426E0);
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    sub_19CCF8C5C((uint64_t)&v28, (uint64_t)&v25, qword_1EE43A238);
    v15 = *((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      sub_19CDC5494();
      v17 = (void *)swift_allocError();
      v18 = MEMORY[0x1E0DEE9D8];
      *v19 = v14;
      v19[1] = v18;
      v19[2] = 0;
      v19[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 8))(v14, v17, v15, v16);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v25, qword_1EE43A238);
    }
    sub_19CD3E3F8(a1);
    sub_19CCECFE4((uint64_t)&v28, qword_1EE43A238);
    return MEMORY[0x1E0DEE9D8];
  }
  v28 = v25;
  v29 = v26;
  v30 = v27;
  v9 = sub_19CEC3718((uint64_t)&v28, (uint64_t)&v25);
  MEMORY[0x1E0C80A78](v9, v10);
  v21[2] = a2;
  v11 = *((_QWORD *)&v26 + 1);
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
  v13 = (*(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v12 + 56))(sub_19CF49F1C, v21, &type metadata for Models.HTTPTemplateAction.Parameter, v11, v12);
  sub_19CE07F20((uint64_t)&v25);
  swift_bridgeObjectRelease();
  sub_19CD3E3F8(a1);
  sub_19CE07F20((uint64_t)&v28);
  return v13;
}

uint64_t sub_19CF465AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  sub_19CCF8C5C(a1, (uint64_t)&v28, &qword_1ECEB1328);
  v4 = *((_QWORD *)&v29 + 1);
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_19CCECFE4((uint64_t)&v28, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v5 = v30;
  __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_19CCF8C5C(a1, (uint64_t)v22, &qword_1ECEB1328);
  v7 = v23;
  if (!v23)
  {
    sub_19CCECFE4((uint64_t)v22, &qword_1ECEB1328);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
    goto LABEL_9;
  }
  v8 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v25, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_9:
    sub_19CCECFE4((uint64_t)&v25, &qword_1EE43D068);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4427A0);
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    sub_19CCF8C5C((uint64_t)&v28, (uint64_t)&v25, qword_1EE43A238);
    v15 = *((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      sub_19CDC5494();
      v17 = (void *)swift_allocError();
      v18 = MEMORY[0x1E0DEE9D8];
      *v19 = v14;
      v19[1] = v18;
      v19[2] = 0;
      v19[3] = 0;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 8))(v14, v17, v15, v16);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v25, qword_1EE43A238);
    }
    sub_19CD3E3F8(a1);
    sub_19CCECFE4((uint64_t)&v28, qword_1EE43A238);
    return MEMORY[0x1E0DEE9D8];
  }
  v28 = v25;
  v29 = v26;
  v30 = v27;
  v9 = sub_19CEC3718((uint64_t)&v28, (uint64_t)&v25);
  MEMORY[0x1E0C80A78](v9, v10);
  v21[2] = a2;
  v11 = *((_QWORD *)&v26 + 1);
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
  v13 = (*(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v12 + 56))(sub_19CF4A03C, v21, &type metadata for MetricsEventLinterDeResolutionRule, v11, v12);
  sub_19CE07F20((uint64_t)&v25);
  swift_bridgeObjectRelease();
  sub_19CD3E3F8(a1);
  sub_19CE07F20((uint64_t)&v28);
  return v13;
}

uint64_t static JSNetworkPerformanceMetrics.metrics(fromJson:)()
{
  unint64_t v0;
  _BYTE v2[40];

  JSONObject.subscript.getter(0xD000000000000013, 0x800000019D072120, (uint64_t)v2);
  v0 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  return sub_19CD30784((uint64_t)v2, v0);
}

uint64_t static JSNetworkPerformanceMetrics.metrics(fromResult:)(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_19CE79AF8(v1);

  return v2;
}

double sub_19CF46914@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[40];

  sub_19CD3E448(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19CD42198((uint64_t)v6, a2, a3);
}

uint64_t sub_19CF46974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[40];

  sub_19CD3E448(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  return a4(v7, a2);
}

double sub_19CF469DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[40];

  sub_19CD3E448(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19CD53624((uint64_t)v6, a2, a3);
}

uint64_t sub_19CF46A3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;
  char v7;
  uint64_t result;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[40];

  sub_19CD3E448(a1, (uint64_t)v12);
  sub_19CCF8C5C((uint64_t)v12, (uint64_t)v9, &qword_1ECEB1328);
  v3 = v10;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    sub_19CCECFE4((uint64_t)v9, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 104);
  swift_bridgeObjectRetain();
  v6 = v5(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    v7 = 1;
    goto LABEL_6;
  }
  v7 = 0;
LABEL_6:
  sub_19CD3E3F8((uint64_t)v12);
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t sub_19CF46B14(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_19CD3E448(a1, (uint64_t)v4);
  swift_bridgeObjectRetain();
  return sub_19CF8B65C(v4, a2);
}

double sub_19CF46B74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[40];

  sub_19CD3E448(a1, (uint64_t)v4);
  swift_bridgeObjectRetain();
  return sub_19CF8BA90((uint64_t)v4, a2);
}

uint64_t sub_19CF46BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  char v8;
  _BYTE v10[40];
  uint64_t __src[43];
  _BYTE v12[40];
  uint64_t v13;

  sub_19CD3E448(a1, (uint64_t)v12);
  sub_19CCF8C5C((uint64_t)v12, (uint64_t)__src, &qword_1ECEB1328);
  v5 = __src[3];
  if (__src[3])
  {
    v6 = __src[4];
    __swift_project_boxed_opaque_existential_1(__src, __src[3]);
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 104);
    swift_bridgeObjectRetain();
    v8 = v7(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)__src);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448((uint64_t)v12, (uint64_t)v10);
      v13 = a2;
      swift_bridgeObjectRetain();
      JSNetworkPerformanceMetrics.init(deserializing:using:)((uint64_t)v10, __src);
      sub_19CD3E3F8((uint64_t)v12);
      swift_bridgeObjectRelease();
      memcpy(a3, __src, 0x158uLL);
      return nullsub_1(a3);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_19CCECFE4((uint64_t)__src, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)v12);
  swift_bridgeObjectRelease();
  sub_19CF49FE4((uint64_t)__src);
  return sub_19CCC290C((uint64_t)__src, (uint64_t)a3, &qword_1EE442790);
}

double sub_19CF46D14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[40];

  sub_19CD3E448(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19CF8C56C((uint64_t)v6, a2, a3);
}

uint64_t sub_19CF46D74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  _OWORD v23[2];
  _OWORD v24[2];

  v0 = sub_19CD12F58();
  v1 = (_QWORD *)sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  if (qword_1EE43D730 != -1)
LABEL_24:
    swift_once();
  v2 = *((_QWORD *)off_1EE442778 + 2);
  if (!v2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  while (1)
  {
    if (!*(_QWORD *)(v0 + 16))
      goto LABEL_5;
    v5 = *(v3 - 1);
    v4 = *v3;
    swift_bridgeObjectRetain();
    v6 = sub_19CD3FD1C(v5, v4);
    if ((v7 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
LABEL_5:
    v3 += 2;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  sub_19CD436B0(*(_QWORD *)(v0 + 56) + 32 * v6, (uint64_t)v23);
  sub_19CD433C0(v23, v24);
  sub_19CD436B0((uint64_t)v24, (uint64_t)v23);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = sub_19CD3FD1C(v5, v4);
  v11 = v1[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v14 = v9;
  if (v1[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v9 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      sub_19CD141BC();
      if ((v14 & 1) == 0)
        goto LABEL_17;
    }
    goto LABEL_15;
  }
  sub_19CD13ED8(v13, isUniquelyReferenced_nonNull_native);
  v15 = sub_19CD3FD1C(v5, v4);
  if ((v14 & 1) == (v16 & 1))
  {
    v10 = v15;
    if ((v14 & 1) == 0)
    {
LABEL_17:
      v1[(v10 >> 6) + 8] |= 1 << v10;
      v18 = (uint64_t *)(v1[6] + 16 * v10);
      *v18 = v5;
      v18[1] = v4;
      sub_19CD433C0(v23, (_OWORD *)(v1[7] + 32 * v10));
      v19 = v1[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_23;
      v1[2] = v21;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
LABEL_15:
    v17 = (_OWORD *)(v1[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    sub_19CD433C0(v23, v17);
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    goto LABEL_5;
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF46FD8()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_responseCorrelationId);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_19CFDF578();

  return v3;
}

uint64_t sub_19CF4703C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_responseHeaders);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_19CFDF3C8();

  return v3;
}

id sub_19CF470A8()
{
  id *v0;

  return objc_msgSend(*v0, sel_taskMetrics);
}

id sub_19CF470CC()
{
  id *v0;

  return objc_msgSend(*v0, sel_responseStatusCode);
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:connectionStartTime:connectionEndTime:domainLookupStartTime:domainLookupEndTime:fetchStartTime:secureConnectionStartTime:connectionReused:requestMessageSize:responseMessageSize:statusCode:edgeNodeCacheStatus:environmentDataCenter:isLowDataMode:appleTimingApp:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,__int128 a38,__n128 a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44)
{
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_BYTE *)(a9 + 73) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = a17;
  *(_BYTE *)(a9 + 120) = a18 & 1;
  *(_QWORD *)(a9 + 128) = a19;
  *(_BYTE *)(a9 + 136) = a20 & 1;
  *(_QWORD *)(a9 + 144) = a21;
  *(_BYTE *)(a9 + 152) = a22 & 1;
  *(_QWORD *)(a9 + 160) = a23;
  *(_BYTE *)(a9 + 168) = a24 & 1;
  *(_QWORD *)(a9 + 176) = a25;
  *(_BYTE *)(a9 + 184) = a26 & 1;
  *(_QWORD *)(a9 + 192) = a27;
  *(_BYTE *)(a9 + 200) = a28 & 1;
  *(_QWORD *)(a9 + 208) = a29;
  *(_BYTE *)(a9 + 216) = a30 & 1;
  *(_QWORD *)(a9 + 224) = a31;
  *(_BYTE *)(a9 + 232) = a32 & 1;
  *(_BYTE *)(a9 + 233) = a33;
  *(_QWORD *)(a9 + 240) = a34;
  *(_BYTE *)(a9 + 248) = a35 & 1;
  *(_QWORD *)(a9 + 256) = a36;
  *(_BYTE *)(a9 + 264) = a37 & 1;
  *(_QWORD *)(a9 + 304) = a40;
  *(_QWORD *)(a9 + 312) = a41;
  *(_BYTE *)(a9 + 320) = a42;
  *(_QWORD *)(a9 + 328) = a43;
  *(_QWORD *)(a9 + 336) = a44;
  result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  return result;
}

char *sub_19CF472C0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void (**a11)(uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  char *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  char *v92;
  void *v93;
  uint64_t v94;
  char *v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  id v97;
  void *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  id v106;
  void *v107;
  void (*v108)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (**v129)(uint64_t, uint64_t);
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  void *v148;
  uint64_t v149;
  void (**v150)(uint64_t, uint64_t);
  uint64_t v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  id v171;
  char *result;
  uint64_t v173;
  id v174;
  BOOL v175;
  BOOL v176;
  BOOL v177;
  BOOL v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned __int8 v185;
  uint64_t v186;
  uint64_t v187;
  void (**v188)(uint64_t, uint64_t);
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  void (**v216)(uint64_t, uint64_t);
  uint64_t v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  BOOL v224;
  BOOL v225;
  char v226;
  char v227;
  char v228;
  char v229;
  BOOL v230;
  BOOL v231;

  v199 = a8;
  v198 = a7;
  v197 = a6;
  v196 = a5;
  v194 = a4;
  v200 = a3;
  v195 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v13, v14);
  v214 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v215 = (uint64_t)&v189 - v18;
  MEMORY[0x1E0C80A78](v19, v20);
  v212 = (char *)&v189 - v21;
  MEMORY[0x1E0C80A78](v22, v23);
  v213 = (uint64_t)&v189 - v24;
  MEMORY[0x1E0C80A78](v25, v26);
  v210 = (char *)&v189 - v27;
  MEMORY[0x1E0C80A78](v28, v29);
  v211 = (uint64_t)&v189 - v30;
  MEMORY[0x1E0C80A78](v31, v32);
  v208 = (char *)&v189 - v33;
  MEMORY[0x1E0C80A78](v34, v35);
  v209 = (char *)&v189 - v36;
  MEMORY[0x1E0C80A78](v37, v38);
  v216 = (void (**)(uint64_t, uint64_t))((char *)&v189 - v39);
  MEMORY[0x1E0C80A78](v40, v41);
  v207 = (uint64_t)&v189 - v42;
  MEMORY[0x1E0C80A78](v43, v44);
  v205 = (char *)&v189 - v45;
  MEMORY[0x1E0C80A78](v46, v47);
  v206 = (uint64_t)&v189 - v48;
  MEMORY[0x1E0C80A78](v49, v50);
  v203 = (char *)&v189 - v51;
  MEMORY[0x1E0C80A78](v52, v53);
  v204 = (uint64_t)&v189 - v54;
  MEMORY[0x1E0C80A78](v55, v56);
  v201 = (char *)&v189 - v57;
  MEMORY[0x1E0C80A78](v58, v59);
  v202 = (uint64_t)&v189 - v60;
  MEMORY[0x1E0C80A78](v61, v62);
  v191 = (char *)&v189 - v63;
  MEMORY[0x1E0C80A78](v64, v65);
  v190 = (uint64_t)&v189 - v66;
  MEMORY[0x1E0C80A78](v67, v68);
  v70 = (char *)&v189 - v69;
  MEMORY[0x1E0C80A78](v71, v72);
  v74 = (char *)&v189 - v73;
  v75 = sub_19CFDE90C();
  v76 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75, v77);
  v79 = (char *)&v189 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  v82 = MEMORY[0x1E0C80A78](v80, v81);
  v84 = (char *)&v189 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = *a1;
  v86 = objc_msgSend(*a1, sel_request, v82);
  sub_19CFDE8D0();

  sub_19CFDE8E8();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v79, v75);
  v87 = sub_19CFDEDE0();
  v88 = *(_QWORD *)(v87 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v84, 1, v87) == 1)
  {
    sub_19CCECFE4((uint64_t)v84, (uint64_t *)&unk_1ECEB3030);
    v193 = 0;
    v192 = 0;
  }
  else
  {
    v193 = sub_19CFDECFC();
    v192 = v89;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v84, v87);
  }
  v90 = v85;
  v91 = objc_msgSend(v85, sel_requestStartDate);
  v92 = v214;
  if (v91)
  {
    v93 = v91;
    sub_19CFDEF60();

    v94 = sub_19CFDEF84();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v70, 0, 1, v94);
  }
  else
  {
    v94 = sub_19CFDEF84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v70, 1, 1, v94);
  }
  sub_19CCC290C((uint64_t)v70, (uint64_t)v74, (uint64_t *)&unk_1ECEB2040);
  sub_19CFDEF84();
  v95 = *(char **)(v94 - 8);
  v96 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v95 + 6);
  if (v96((uint64_t)v74, 1, v94) == 1)
  {
    sub_19CCECFE4((uint64_t)v74, (uint64_t *)&unk_1ECEB2040);
    v97 = objc_msgSend(v90, sel_fetchStartDate);
    if (v97)
    {
      v98 = v97;
      v99 = v191;
      sub_19CFDEF60();

      v100 = 0;
    }
    else
    {
      v100 = 1;
      v99 = v191;
    }
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v95 + 7))(v99, v100, 1, v94);
    v102 = (uint64_t)v99;
    v103 = v190;
    sub_19CCC290C(v102, v190, (uint64_t *)&unk_1ECEB2040);
    if (v96(v103, 1, v94) == 1)
    {
      sub_19CCECFE4(v103, (uint64_t *)&unk_1ECEB2040);
      LODWORD(v190) = 1;
      v191 = 0;
      goto LABEL_16;
    }
    sub_19CFDEF48();
    v191 = v104;
    (*((void (**)(uint64_t, uint64_t))v95 + 1))(v103, v94);
  }
  else
  {
    sub_19CFDEF48();
    v191 = v101;
    (*((void (**)(char *, uint64_t))v95 + 1))(v74, v94);
  }
  LODWORD(v190) = 0;
LABEL_16:
  v105 = v201;
  v106 = objc_msgSend(v90, sel_responseStartDate);
  if (v106)
  {
    v107 = v106;
    sub_19CFDEF60();

    v108 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v95 + 7);
    v108(v105, 0, 1, v94);
  }
  else
  {
    v108 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v95 + 7);
    v108(v105, 1, 1, v94);
  }
  v109 = (uint64_t)v105;
  v110 = v202;
  sub_19CCC290C(v109, v202, (uint64_t *)&unk_1ECEB2040);
  LODWORD(v201) = v96(v110, 1, v94);
  if ((_DWORD)v201 == 1)
  {
    sub_19CCECFE4(v110, (uint64_t *)&unk_1ECEB2040);
    v111 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v111 = v112;
    (*((void (**)(uint64_t, uint64_t))v95 + 1))(v110, v94);
  }
  v113 = v203;
  v114 = objc_msgSend(v90, sel_responseEndDate);
  if (v114)
  {
    v115 = v114;
    sub_19CFDEF60();

    v116 = 0;
  }
  else
  {
    v116 = 1;
  }
  v108(v113, v116, 1, v94);
  v117 = (uint64_t)v113;
  v118 = v204;
  sub_19CCC290C(v117, v204, (uint64_t *)&unk_1ECEB2040);
  LODWORD(v203) = v96(v118, 1, v94);
  if ((_DWORD)v203 == 1)
  {
    sub_19CCECFE4(v118, (uint64_t *)&unk_1ECEB2040);
    v119 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v119 = v120;
    (*((void (**)(uint64_t, uint64_t))v95 + 1))(v118, v94);
  }
  v121 = v205;
  v205 = (char *)objc_msgSend(v90, sel_resourceFetchType);
  v122 = objc_msgSend(v90, sel_connectStartDate);
  if (v122)
  {
    v123 = v122;
    sub_19CFDEF60();

    v124 = 0;
  }
  else
  {
    v124 = 1;
  }
  v108(v121, v124, 1, v94);
  v125 = (uint64_t)v121;
  v126 = v206;
  sub_19CCC290C(v125, v206, (uint64_t *)&unk_1ECEB2040);
  LODWORD(v204) = v96(v126, 1, v94);
  if ((_DWORD)v204 == 1)
  {
    sub_19CCECFE4(v126, (uint64_t *)&unk_1ECEB2040);
    v127 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v127 = v128;
    (*((void (**)(uint64_t, uint64_t))v95 + 1))(v126, v94);
  }
  v129 = v216;
  v130 = objc_msgSend(v90, sel_connectEndDate);
  if (v130)
  {
    v131 = v130;
    sub_19CFDEF60();

    v132 = 0;
  }
  else
  {
    v132 = 1;
  }
  v108((char *)v129, v132, 1, v94);
  v133 = (uint64_t)v129;
  v134 = v207;
  sub_19CCC290C(v133, v207, (uint64_t *)&unk_1ECEB2040);
  LODWORD(v206) = v96(v134, 1, v94);
  v216 = (void (**)(uint64_t, uint64_t))v95;
  if ((_DWORD)v206 == 1)
  {
    sub_19CCECFE4(v134, (uint64_t *)&unk_1ECEB2040);
    v135 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v135 = v136;
    (*((void (**)(uint64_t, uint64_t))v95 + 1))(v134, v94);
  }
  v137 = (uint64_t)v209;
  v138 = (uint64_t)v92;
  v139 = objc_msgSend(v90, sel_domainLookupStartDate);
  if (v139)
  {
    v140 = v139;
    v141 = (uint64_t)v208;
    sub_19CFDEF60();

    v142 = 0;
    v143 = (uint64_t)v210;
  }
  else
  {
    v142 = 1;
    v143 = (uint64_t)v210;
    v141 = (uint64_t)v208;
  }
  v108((char *)v141, v142, 1, v94);
  sub_19CCC290C(v141, v137, (uint64_t *)&unk_1ECEB2040);
  LODWORD(v210) = v96(v137, 1, v94);
  if ((_DWORD)v210 == 1)
  {
    sub_19CCECFE4(v137, (uint64_t *)&unk_1ECEB2040);
    v144 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v144 = v145;
    v216[1](v137, v94);
  }
  v146 = v138;
  v147 = objc_msgSend(v90, sel_domainLookupEndDate);
  if (v147)
  {
    v148 = v147;
    sub_19CFDEF60();

    v149 = 0;
  }
  else
  {
    v149 = 1;
  }
  v150 = v216;
  v108((char *)v143, v149, 1, v94);
  v151 = v211;
  sub_19CCC290C(v143, v211, (uint64_t *)&unk_1ECEB2040);
  v152 = v96(v151, 1, v94);
  if (v152 == 1)
  {
    sub_19CCECFE4(v151, (uint64_t *)&unk_1ECEB2040);
    v153 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v153 = v154;
    v150[1](v151, v94);
  }
  v155 = (uint64_t)v212;
  v156 = objc_msgSend(v90, sel_fetchStartDate);
  if (v156)
  {
    v157 = v156;
    sub_19CFDEF60();

    v158 = 0;
  }
  else
  {
    v158 = 1;
  }
  v108((char *)v155, v158, 1, v94);
  v159 = v213;
  sub_19CCC290C(v155, v213, (uint64_t *)&unk_1ECEB2040);
  v160 = v96(v159, 1, v94);
  if (v160 == 1)
  {
    sub_19CCECFE4(v159, (uint64_t *)&unk_1ECEB2040);
    v161 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v161 = v162;
    v216[1](v159, v94);
  }
  v163 = objc_msgSend(v90, sel_secureConnectionStartDate);
  if (v163)
  {
    v164 = v163;
    sub_19CFDEF60();

    v165 = 0;
  }
  else
  {
    v165 = 1;
  }
  v108((char *)v146, v165, 1, v94);
  v166 = v215;
  sub_19CCC290C(v146, v215, (uint64_t *)&unk_1ECEB2040);
  v167 = v96(v166, 1, v94);
  if (v167 == 1)
  {
    sub_19CCECFE4(v166, (uint64_t *)&unk_1ECEB2040);
    v168 = 0;
  }
  else
  {
    sub_19CFDEF48();
    v168 = v169;
    v216[1](v166, v94);
  }
  v170 = objc_msgSend(v90, sel_isReusedConnection);
  v171 = objc_msgSend(v90, sel_countOfRequestBodyBytesSent);
  result = (char *)objc_msgSend(v90, sel_countOfRequestHeaderBytesSent);
  v173 = (uint64_t)&result[(_QWORD)v171];
  if (__OFADD__(v171, result))
  {
    __break(1u);
  }
  else
  {
    v174 = objc_msgSend(v90, sel_countOfResponseBodyBytesReceived);
    result = (char *)objc_msgSend(v90, sel_countOfResponseHeaderBytesReceived);
    if (!__OFADD__(v174, result))
    {
      v214 = &result[(_QWORD)v174];
      v216 = a11;
      v215 = a10;
      LODWORD(v209) = v167 == 1;
      LODWORD(v208) = v160 == 1;
      LODWORD(v207) = v152 == 1;
      LODWORD(v202) = (_DWORD)v210 == 1;
      v175 = (_DWORD)v206 == 1;
      v213 = v173;
      v176 = (_DWORD)v204 == 1;
      v177 = (_DWORD)v203 == 1;
      LODWORD(v212) = v170;
      v178 = (_DWORD)v201 == 1;
      LODWORD(v210) = v205 == (char *)3;
      v179 = v194[3];
      v180 = v194[4];
      __swift_project_boxed_opaque_existential_1(v194, v179);
      v217 = (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 32))(v179, v180);
      v211 = sub_19CFE0598();
      v182 = v181;
      v183 = v199;
      swift_bridgeObjectRetain();
      v184 = v197;
      swift_bridgeObjectRetain();
      v185 = objc_msgSend(v90, sel_isConstrained);
      LOBYTE(v217) = v190;
      v231 = v178;
      v230 = v177;
      v229 = 1;
      v228 = 1;
      v227 = 1;
      v226 = 1;
      v225 = v176;
      v224 = v175;
      v223 = v202;
      v222 = v207;
      v221 = (char)v208;
      v220 = (char)v209;
      v219 = 0;
      v218 = 0;
      v186 = v200;
      *(_QWORD *)a9 = v195;
      *(_QWORD *)(a9 + 8) = v186;
      v187 = v192;
      *(_QWORD *)(a9 + 16) = v193;
      *(_QWORD *)(a9 + 24) = v187;
      *(_QWORD *)(a9 + 32) = v191;
      *(_BYTE *)(a9 + 40) = v217;
      *(_QWORD *)(a9 + 48) = v111;
      *(_BYTE *)(a9 + 56) = v231;
      *(_QWORD *)(a9 + 64) = v119;
      *(_BYTE *)(a9 + 72) = v230;
      *(_BYTE *)(a9 + 73) = (_BYTE)v210;
      *(_QWORD *)(a9 + 80) = 0;
      *(_BYTE *)(a9 + 88) = v229;
      *(_QWORD *)(a9 + 96) = 0;
      *(_BYTE *)(a9 + 104) = v228;
      *(_QWORD *)(a9 + 112) = 0;
      *(_BYTE *)(a9 + 120) = v227;
      *(_QWORD *)(a9 + 128) = 0;
      *(_BYTE *)(a9 + 136) = v226;
      *(_QWORD *)(a9 + 144) = v127;
      *(_BYTE *)(a9 + 152) = v225;
      *(_QWORD *)(a9 + 160) = v135;
      *(_BYTE *)(a9 + 168) = v224;
      *(_QWORD *)(a9 + 176) = v144;
      *(_BYTE *)(a9 + 184) = v223;
      *(_QWORD *)(a9 + 192) = v153;
      *(_BYTE *)(a9 + 200) = v222;
      *(_QWORD *)(a9 + 208) = v161;
      *(_BYTE *)(a9 + 216) = v221;
      *(_QWORD *)(a9 + 224) = v168;
      *(_BYTE *)(a9 + 232) = v220;
      *(_BYTE *)(a9 + 233) = (_BYTE)v212;
      *(_QWORD *)(a9 + 240) = v213;
      *(_BYTE *)(a9 + 248) = v219;
      *(_QWORD *)(a9 + 256) = v214;
      *(_BYTE *)(a9 + 264) = v218;
      *(_QWORD *)(a9 + 272) = v211;
      *(_QWORD *)(a9 + 280) = v182;
      *(_QWORD *)(a9 + 288) = v196;
      *(_QWORD *)(a9 + 296) = v184;
      *(_QWORD *)(a9 + 304) = v198;
      *(_QWORD *)(a9 + 312) = v183;
      *(_BYTE *)(a9 + 320) = v185;
      v188 = v216;
      *(_QWORD *)(a9 + 328) = v215;
      *(_QWORD *)(a9 + 336) = v188;
      swift_bridgeObjectRetain();
      return (char *)swift_bridgeObjectRetain();
    }
  }
  __break(1u);
  return result;
}

uint64_t JSNetworkPerformanceMetrics.clientCorrelationKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.clientCorrelationKey.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.clientCorrelationKey.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.pageURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSNetworkPerformanceMetrics.pageURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.pageURL.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.requestStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t JSNetworkPerformanceMetrics.requestStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.requestStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t JSNetworkPerformanceMetrics.responseStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t JSNetworkPerformanceMetrics.responseEndTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseWasCached.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t JSNetworkPerformanceMetrics.responseWasCached.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseWasCached.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.parseStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t JSNetworkPerformanceMetrics.parseStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.parseStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.parseEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t JSNetworkPerformanceMetrics.parseEndTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.parseEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = result;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.modelConstructionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t JSNetworkPerformanceMetrics.modelConstructionEndTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = result;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.modelConstructionEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t JSNetworkPerformanceMetrics.connectionStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = result;
  *(_BYTE *)(v2 + 152) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t JSNetworkPerformanceMetrics.connectionEndTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = result;
  *(_BYTE *)(v2 + 168) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.domainLookupStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t JSNetworkPerformanceMetrics.domainLookupStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = result;
  *(_BYTE *)(v2 + 184) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.domainLookupStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.domainLookupEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t JSNetworkPerformanceMetrics.domainLookupEndTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = result;
  *(_BYTE *)(v2 + 200) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.domainLookupEndTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.fetchStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 208);
}

uint64_t JSNetworkPerformanceMetrics.fetchStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = result;
  *(_BYTE *)(v2 + 216) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.fetchStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.secureConnectionStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

uint64_t JSNetworkPerformanceMetrics.secureConnectionStartTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = result;
  *(_BYTE *)(v2 + 232) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.secureConnectionStartTime.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.connectionReused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 233);
}

uint64_t JSNetworkPerformanceMetrics.connectionReused.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 233) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.connectionReused.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.requestMessageSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 240);
}

uint64_t JSNetworkPerformanceMetrics.requestMessageSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 240) = result;
  *(_BYTE *)(v2 + 248) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.requestMessageSize.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.responseMessageSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

uint64_t JSNetworkPerformanceMetrics.responseMessageSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = result;
  *(_BYTE *)(v2 + 264) = a2 & 1;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.responseMessageSize.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.statusCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*JSNetworkPerformanceMetrics.statusCode.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.edgeNodeCacheStatus.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*JSNetworkPerformanceMetrics.edgeNodeCacheStatus.modify())()
{
  return nullsub_1;
}

uint64_t (*JSNetworkPerformanceMetrics.environmentDataCenter.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.isLowDataMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 320);
}

uint64_t JSNetworkPerformanceMetrics.isLowDataMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 320) = result;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.isLowDataMode.modify())()
{
  return nullsub_1;
}

uint64_t JSNetworkPerformanceMetrics.appleTimingApp.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 328);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*JSNetworkPerformanceMetrics.appleTimingApp.modify())()
{
  return nullsub_1;
}

void sub_19CF487A8()
{
  off_1EE442778 = &unk_1E3DDF210;
}

unint64_t JSNetworkPerformanceMetrics.jsRepresentation(in:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  id v6;
  unint64_t result;

  sub_19CD12F58();
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v5 = sub_19CFE0808();
  v6 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v6;
  return result;
}

uint64_t sub_19CF48874@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return JSNetworkPerformanceMetrics.init(deserializing:using:)(a1, a2);
}

unint64_t sub_19CF48898@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return JSNetworkPerformanceMetrics.jsRepresentation(in:)(a1, a2);
}

JSValue __swiftcall JSNetworkPerformanceMetrics.makeValue(in:)(JSContext in)
{
  objc_class *v2;
  uint64_t v3;
  id v4;
  JSValue result;

  sub_19CD12F58();
  v2 = in.super.isa;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v3 = sub_19CFE0808();
  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v3, v2);
  swift_unknownObjectRelease();

  if (v4)
    return (JSValue)v4;
  __break(1u);
  return result;
}

unint64_t static JSNetworkPerformanceMetrics.property.getter()
{
  return 0xD000000000000013;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataConnectionStartTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF4898C;
}

uint64_t sub_19CF4898C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 152) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataConnectionEndTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 168);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 160);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF489C8;
}

uint64_t sub_19CF489C8(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 168) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataDomainLookupStartTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 176);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48A04;
}

uint64_t sub_19CF48A04(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 176) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 184) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataDomainLookupEndTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 200);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 192);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48A40;
}

uint64_t sub_19CF48A40(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 192) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 200) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataFetchStartTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 208);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48A7C;
}

uint64_t sub_19CF48A7C(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 208) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 216) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataSecureConnectionStartTime.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 232);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 224);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48AB8;
}

uint64_t sub_19CF48AB8(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 224) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 232) = v2;
  return result;
}

_BYTE *(*JSNetworkPerformanceMetrics.primaryDataConnectionReused.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 233);
  return sub_19CF48AEC;
}

_BYTE *sub_19CF48AEC(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 233) = result[8];
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataRequestMessageSize.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 248);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 240);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48B20;
}

uint64_t sub_19CF48B20(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 240) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 248) = v2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataResponseMessageSize.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_BYTE *)(v1 + 264);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 256);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_19CF48B60;
}

uint64_t sub_19CF48B60(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 256) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 264) = v2;
  return result;
}

uint64_t _s9JetEngine27JSNetworkPerformanceMetricsV10statusCodeSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 272) = a1;
  *(_QWORD *)(v2 + 280) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataStatusCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 280);
  *a1 = *(_QWORD *)(v1 + 272);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19CF48BEC;
}

uint64_t sub_19CF48BEC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 272) = v4;
    *(_QWORD *)(v3 + 280) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 272) = v4;
    *(_QWORD *)(v3 + 280) = v2;
  }
  return result;
}

uint64_t _s9JetEngine27JSNetworkPerformanceMetricsV19edgeNodeCacheStatusSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 288) = a1;
  *(_QWORD *)(v2 + 296) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataEdgeNodeCacheStatus.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 296);
  *a1 = *(_QWORD *)(v1 + 288);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19CF48CC4;
}

uint64_t sub_19CF48CC4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 288) = v4;
    *(_QWORD *)(v3 + 296) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 288) = v4;
    *(_QWORD *)(v3 + 296) = v2;
  }
  return result;
}

uint64_t JSNetworkPerformanceMetrics.primaryDataEnvironmentDataCenter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s9JetEngine27JSNetworkPerformanceMetricsV21environmentDataCenterSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 304) = a1;
  *(_QWORD *)(v2 + 312) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataEnvironmentDataCenter.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 312);
  *a1 = *(_QWORD *)(v1 + 304);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19CF48DC8;
}

uint64_t sub_19CF48DC8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 304) = v4;
    *(_QWORD *)(v3 + 312) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 304) = v4;
    *(_QWORD *)(v3 + 312) = v2;
  }
  return result;
}

uint64_t _s9JetEngine27JSNetworkPerformanceMetricsV14appleTimingAppSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 328) = a1;
  *(_QWORD *)(v2 + 336) = a2;
  return result;
}

uint64_t (*JSNetworkPerformanceMetrics.primaryDataAppleTimingApp.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 336);
  *a1 = *(_QWORD *)(v1 + 328);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_19CF48EA0;
}

uint64_t sub_19CF48EA0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 328) = v4;
    *(_QWORD *)(v3 + 336) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 328) = v4;
    *(_QWORD *)(v3 + 336) = v2;
  }
  return result;
}

void *JSNetworkPerformanceMetrics.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  _BYTE v5[40];
  _BYTE __src[344];

  sub_19CD3E448(a1, (uint64_t)v5);
  sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  JSNetworkPerformanceMetrics.init(deserializing:using:)((uint64_t)v5, __src);
  sub_19CD3E3F8(a1);
  return memcpy(a2, __src, 0x158uLL);
}

double JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  double result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_BYTE *)(a9 + 73) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = 0;
  *(_BYTE *)(a9 + 120) = 1;
  *(_QWORD *)(a9 + 128) = 0;
  *(_BYTE *)(a9 + 136) = 1;
  *(_QWORD *)(a9 + 144) = 0;
  *(_BYTE *)(a9 + 152) = 1;
  *(_QWORD *)(a9 + 160) = 0;
  *(_BYTE *)(a9 + 168) = 1;
  *(_QWORD *)(a9 + 176) = 0;
  *(_BYTE *)(a9 + 184) = 1;
  *(_QWORD *)(a9 + 192) = 0;
  *(_BYTE *)(a9 + 200) = 1;
  *(_QWORD *)(a9 + 208) = 0;
  *(_BYTE *)(a9 + 216) = 1;
  *(_QWORD *)(a9 + 224) = 0;
  *(_BYTE *)(a9 + 232) = 1;
  *(_BYTE *)(a9 + 233) = 2;
  *(_QWORD *)(a9 + 240) = 0;
  *(_BYTE *)(a9 + 248) = 1;
  *(_QWORD *)(a9 + 256) = 0;
  *(_BYTE *)(a9 + 264) = 1;
  result = 0.0;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = 0u;
  *(_BYTE *)(a9 + 320) = 2;
  *(_QWORD *)(a9 + 328) = 0;
  *(_QWORD *)(a9 + 336) = 0;
  return result;
}

double JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  double result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_BYTE *)(a9 + 73) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = a17;
  *(_BYTE *)(a9 + 120) = a18 & 1;
  *(_QWORD *)(a9 + 128) = a19;
  *(_BYTE *)(a9 + 136) = a20 & 1;
  *(_QWORD *)(a9 + 144) = 0;
  *(_BYTE *)(a9 + 152) = 1;
  *(_QWORD *)(a9 + 160) = 0;
  *(_BYTE *)(a9 + 168) = 1;
  *(_QWORD *)(a9 + 176) = 0;
  *(_BYTE *)(a9 + 184) = 1;
  *(_QWORD *)(a9 + 192) = 0;
  *(_BYTE *)(a9 + 200) = 1;
  *(_QWORD *)(a9 + 208) = 0;
  *(_BYTE *)(a9 + 216) = 1;
  *(_QWORD *)(a9 + 224) = 0;
  *(_BYTE *)(a9 + 232) = 1;
  *(_BYTE *)(a9 + 233) = 2;
  *(_QWORD *)(a9 + 240) = 0;
  *(_BYTE *)(a9 + 248) = 1;
  *(_QWORD *)(a9 + 256) = 0;
  *(_BYTE *)(a9 + 264) = 1;
  result = 0.0;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = 0u;
  *(_BYTE *)(a9 + 320) = 2;
  *(_QWORD *)(a9 + 328) = 0;
  *(_QWORD *)(a9 + 336) = 0;
  return result;
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:primaryDataConnectionStartTime:primaryDataConnectionEndTime:primaryDataDomainLookupStartTime:primaryDataDomainLookupEndTime:primaryDataFetchStartTime:primaryDataSecureConnectionStartTime:primaryDataConnectionReused:primaryDataRequestMessageSize:primaryDataResponseMessageSize:primaryDataStatusCode:primaryDataEdgeNodeCacheStatus:primaryDataEnvironmentDataCenter:isLowDataMode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,__int128 a38,__n128 a39,uint64_t a40,uint64_t a41,char a42)
{
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_BYTE *)(a9 + 73) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = a17;
  *(_BYTE *)(a9 + 120) = a18 & 1;
  *(_QWORD *)(a9 + 128) = a19;
  *(_BYTE *)(a9 + 136) = a20 & 1;
  *(_QWORD *)(a9 + 144) = a21;
  *(_BYTE *)(a9 + 152) = a22 & 1;
  *(_QWORD *)(a9 + 160) = a23;
  *(_BYTE *)(a9 + 168) = a24 & 1;
  *(_QWORD *)(a9 + 176) = a25;
  *(_BYTE *)(a9 + 184) = a26 & 1;
  *(_QWORD *)(a9 + 192) = a27;
  *(_BYTE *)(a9 + 200) = a28 & 1;
  *(_QWORD *)(a9 + 208) = a29;
  *(_BYTE *)(a9 + 216) = a30 & 1;
  *(_QWORD *)(a9 + 224) = a31;
  *(_BYTE *)(a9 + 232) = a32 & 1;
  *(_BYTE *)(a9 + 233) = a33;
  *(_QWORD *)(a9 + 240) = a34;
  *(_BYTE *)(a9 + 248) = a35 & 1;
  *(_QWORD *)(a9 + 256) = a36;
  *(_BYTE *)(a9 + 264) = a37 & 1;
  *(_QWORD *)(a9 + 304) = a40;
  *(_QWORD *)(a9 + 312) = a41;
  *(_BYTE *)(a9 + 320) = a42;
  result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  *(_QWORD *)(a9 + 328) = 0;
  *(_QWORD *)(a9 + 336) = 0;
  return result;
}

__n128 JSNetworkPerformanceMetrics.init(clientCorrelationKey:pageURL:requestStartTime:responseStartTime:responseEndTime:responseWasCached:parseStartTime:parseEndTime:modelConstructionStartTime:modelConstructionEndTime:primaryDataConnectionStartTime:primaryDataConnectionEndTime:primaryDataDomainLookupStartTime:primaryDataDomainLookupEndTime:primaryDataFetchStartTime:primaryDataSecureConnectionStartTime:primaryDataConnectionReused:primaryDataRequestMessageSize:primaryDataResponseMessageSize:primaryDataStatusCode:primaryDataEdgeNodeCacheStatus:primaryDataEnvironmentDataCenter:isLowDataMode:primaryDataAppleTimingApp:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,__int128 a38,__n128 a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44)
{
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_BYTE *)(a9 + 73) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = a17;
  *(_BYTE *)(a9 + 120) = a18 & 1;
  *(_QWORD *)(a9 + 128) = a19;
  *(_BYTE *)(a9 + 136) = a20 & 1;
  *(_QWORD *)(a9 + 144) = a21;
  *(_BYTE *)(a9 + 152) = a22 & 1;
  *(_QWORD *)(a9 + 160) = a23;
  *(_BYTE *)(a9 + 168) = a24 & 1;
  *(_QWORD *)(a9 + 176) = a25;
  *(_BYTE *)(a9 + 184) = a26 & 1;
  *(_QWORD *)(a9 + 192) = a27;
  *(_BYTE *)(a9 + 200) = a28 & 1;
  *(_QWORD *)(a9 + 208) = a29;
  *(_BYTE *)(a9 + 216) = a30 & 1;
  *(_QWORD *)(a9 + 224) = a31;
  *(_BYTE *)(a9 + 232) = a32 & 1;
  *(_BYTE *)(a9 + 233) = a33;
  *(_QWORD *)(a9 + 240) = a34;
  *(_BYTE *)(a9 + 248) = a35 & 1;
  *(_QWORD *)(a9 + 256) = a36;
  *(_BYTE *)(a9 + 264) = a37 & 1;
  *(_QWORD *)(a9 + 304) = a40;
  *(_QWORD *)(a9 + 312) = a41;
  *(_BYTE *)(a9 + 320) = a42;
  *(_QWORD *)(a9 + 328) = a43;
  *(_QWORD *)(a9 + 336) = a44;
  result = a39;
  *(_OWORD *)(a9 + 272) = a38;
  *(__n128 *)(a9 + 288) = a39;
  return result;
}

uint64_t sub_19CF49604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  _BYTE v6[40];

  sub_19CD3E448(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  result = sub_19CF8AED8((uint64_t)v6, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF49664@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 152);
  *(_QWORD *)a2 = *(_QWORD *)(result + 144);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF49678(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 144) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 152) = v2;
  return result;
}

uint64_t sub_19CF4968C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 168);
  *(_QWORD *)a2 = *(_QWORD *)(result + 160);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF496A0(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 160) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 168) = v2;
  return result;
}

uint64_t sub_19CF496B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 184);
  *(_QWORD *)a2 = *(_QWORD *)(result + 176);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF496C8(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 176) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 184) = v2;
  return result;
}

uint64_t sub_19CF496DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 200);
  *(_QWORD *)a2 = *(_QWORD *)(result + 192);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF496F0(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 192) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 200) = v2;
  return result;
}

uint64_t sub_19CF49704@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 216);
  *(_QWORD *)a2 = *(_QWORD *)(result + 208);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF49718(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 208) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 216) = v2;
  return result;
}

uint64_t sub_19CF4972C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 232);
  *(_QWORD *)a2 = *(_QWORD *)(result + 224);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF49740(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 224) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 232) = v2;
  return result;
}

uint64_t sub_19CF49754@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 233);
  return result;
}

_BYTE *sub_19CF49760(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 233) = *result;
  return result;
}

uint64_t sub_19CF4976C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 248);
  *(_QWORD *)a2 = *(_QWORD *)(result + 240);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF49780(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 240) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 248) = v2;
  return result;
}

uint64_t sub_19CF49794@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 264);
  *(_QWORD *)a2 = *(_QWORD *)(result + 256);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_19CF497AC(uint64_t result, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 256) = *(_QWORD *)result;
  *(_BYTE *)(a2 + 264) = v2;
  return result;
}

uint64_t sub_19CF497C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 272);
  v3 = *(_QWORD *)(a1 + 280);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF497CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 272) = v4;
  *(_QWORD *)(a2 + 280) = v3;
  return result;
}

uint64_t sub_19CF4980C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 288);
  v3 = *(_QWORD *)(a1 + 296);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF49818(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 288) = v4;
  *(_QWORD *)(a2 + 296) = v3;
  return result;
}

uint64_t sub_19CF49858@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 304);
  v3 = *(_QWORD *)(a1 + 312);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF49864(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 304) = v4;
  *(_QWORD *)(a2 + 312) = v3;
  return result;
}

uint64_t sub_19CF498A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 328);
  v3 = *(_QWORD *)(a1 + 336);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF498B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 328) = v4;
  *(_QWORD *)(a2 + 336) = v3;
  return result;
}

uint64_t initializeWithCopy for JSNetworkPerformanceMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v6 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v6;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v7 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v7;
  v8 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v8;
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  v9 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v9;
  v10 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v10;
  v11 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v11;
  v12 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v12;
  v13 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v13;
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  v14 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSNetworkPerformanceMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v10;
  v11 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v11;
  v12 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v12;
  v13 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v13;
  v14 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v14;
  v15 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v15;
  v16 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v16;
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  v17 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v17;
  v18 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v18;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy344_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x158uLL);
}

uint64_t assignWithTake for JSNetworkPerformanceMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  v7 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v7;
  v8 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v8;
  v9 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  v12 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSNetworkPerformanceMetrics(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 344))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSNetworkPerformanceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 344) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 344) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_19CF49F04(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF46B14(a1, *(_QWORD *)(v1 + 16));
}

double sub_19CF49F1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF46B74(a1, a2);
}

uint64_t sub_19CF49F34@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_19CF46A3C(a1, a2);
}

double sub_19CF49F4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CF469DC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CF49F64(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF46974(a1, *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for MetricsFieldExclusionRequest, (uint64_t (*)(_BYTE *, uint64_t))sub_19CD42194);
}

uint64_t sub_19CF49F8C(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF46974(a1, *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for MetricsFieldInclusionRequest, (uint64_t (*)(_BYTE *, uint64_t))sub_19CD42194);
}

double sub_19CF49FB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CF46914(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CF49FCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_19CF46BD4(a1, *(_QWORD *)(v2 + 16), a2);
}

double sub_19CF49FE4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_19D05F750;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_QWORD *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_19CF4A024@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19CF49604(a1, *(_QWORD *)(v2 + 16), a2);
}

double sub_19CF4A03C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CF46D14(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t JSONArray.count.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t JSONArray.subscript.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t sub_19CF4A14C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  a2[3] = (uint64_t)&type metadata for FoundationValue;
  a2[4] = (uint64_t)&off_1E3DCC5B0;
  v4 = swift_allocObject();
  *a2 = v4;
  return sub_19CD436B0(a1, v4 + 16);
}

void sub_19CF4A1A0(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  char v5;
  char v6;

  v3 = *a1;
  v4 = sub_19CE1FCDC(v3);
  v6 = v5;

  *(_QWORD *)(a2 + 24) = &type metadata for DirectValue;
  *(_QWORD *)(a2 + 32) = &off_1E3DC91E0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v6;
}

uint64_t JSONArray.isEmpty.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t JSONArray.objects.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t JSONArray.flatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, a3, v7, v8);
}

uint64_t JSONArray.filter(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, a2, v5, v6);
}

uint64_t JSONArray.reduce<A>(_:nextResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;

  v9 = v4[3];
  v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 72))(a1, a2, a3, a4, v9, v10);
}

uint64_t JSONArray.contains(where:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88))(a1, a2, v5, v6) & 1;
}

uint64_t sub_19CF4A454()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

_QWORD *InMemoryMetricsEventRecorder.__allocating_init(historySize:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v2[3] = MEMORY[0x1E0DEE9D8];
  v2[4] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4427A8);
  v3 = swift_allocObject();
  v2[5] = sub_19CD51798(v3);
  return v2;
}

_QWORD *InMemoryMetricsEventRecorder.init(historySize:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  v2 = v1;
  v2[3] = MEMORY[0x1E0DEE9D8];
  v2[4] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4427A8);
  v4 = swift_allocObject();
  v2[5] = sub_19CD51798(v4);
  return v2;
}

uint64_t InMemoryMetricsEventRecorder.onEventRecorded.getter()
{
  return swift_retain();
}

uint64_t InMemoryMetricsEventRecorder.eventsSnapshot.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_unlock);
  return v2;
}

Swift::Void __swiftcall InMemoryMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  uint64_t v2;
  uint64_t countAndFlagsBits;
  void *rawValue;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  countAndFlagsBits = on.value._countAndFlagsBits;
  rawValue = _.issues._rawValue;
  v5 = *(_QWORD *)_.fields._rawValue;
  v6 = *((_QWORD *)_.fields._rawValue + 1);
  v7 = *(void **)(v2 + 32);
  objc_msgSend(v7, sel_lock, on.value._countAndFlagsBits, on.value._object);
  sub_19CF4A6B0(v2, (uint64_t)rawValue, countAndFlagsBits, v5, v6);
  objc_msgSend(v7, sel_unlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CE268A8((uint64_t)rawValue, countAndFlagsBits, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_19CF4A6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;

  v10 = a1 + 24;
  swift_beginAccess();
  v11 = *(_QWORD **)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 24) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_19CED6BB4(0, v11[2] + 1, 1, v11);
    *(_QWORD *)v10 = v11;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    v11 = sub_19CED6BB4((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    *(_QWORD *)v10 = v11;
  }
  v11[2] = v14 + 1;
  v15 = &v11[4 * v14];
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v15[7] = a5;
  v16 = *(_QWORD *)(a1 + 24);
  result = swift_endAccess();
  v18 = *(_QWORD *)(v16 + 16);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v20 < 1)
    return result;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v10 + 16) < (unint64_t)v20)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  sub_19CF7D318(0, v20);
  return swift_endAccess();
}

uint64_t InMemoryMetricsEventRecorder.flush()()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1608);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return v0;
}

uint64_t InMemoryMetricsEventRecorder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t InMemoryMetricsEventRecorder.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF4A8D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *v3;
  v7 = *a1;
  v8 = a1[1];
  v9 = *(void **)(v6 + 32);
  objc_msgSend(v9, sel_lock);
  sub_19CF4A6B0(v6, a2, a3, v7, v8);
  objc_msgSend(v9, sel_unlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CE268A8(a2, a3, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF4A9A0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1608);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return v0;
}

uint64_t type metadata accessor for InMemoryMetricsEventRecorder()
{
  return objc_opt_self();
}

uint64_t method lookup function for InMemoryMetricsEventRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InMemoryMetricsEventRecorder.__allocating_init(historySize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_19CF4AA34@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_19CF4C430(a3);
    result = sub_19CE6BC04(a1, a3);
    *a4 = result;
    a4[1] = v9;
    a4[2] = v10;
    return result;
  }
  sub_19CE04734();
  swift_allocError();
  v13 = v12;
  v14 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v14)
    sub_19CFA8E78((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
  *v13 = a2;
  return swift_willThrow();
}

void sub_19CF4AB34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v7 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  if (v7)
  {
    v8 = v7;
    sub_19CDC8E24(a2, (uint64_t)v23);
    if (v3)
    {
      swift_release();
    }
    else
    {
      v10 = *MEMORY[0x1E0CFD898];
      if (*MEMORY[0x1E0CFD898])
      {
        v11 = v24;
        v12 = *(_QWORD *)(v24 + 16);
        v13 = *(void **)(a3 + OBJC_IVAR____TtC9JetEngine16JSPlatformObject_process);
        v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9JetEngine16JSPlatformObject_bag);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v15 = sub_19CF4B8FC(0, v12, v10, v11, v10);
        swift_bridgeObjectRelease();
        swift_unknownObjectRetain();
        sub_19CF4C430((uint64_t)v23);
        v16 = v13;
        v17 = sub_19CF4BE20(v15, v14, (uint64_t)v23, (uint64_t)v16);

        sub_19CE6C41C((uint64_t)v23);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v17;
        v19 = v23[0];
        *(_OWORD *)(v18 + 40) = v23[1];
        v20 = v25;
        *(_OWORD *)(v18 + 56) = v24;
        *(_OWORD *)(v18 + 72) = v20;
        v21 = v26;
        *(_OWORD *)(v18 + 24) = v19;
        *(_QWORD *)(v18 + 88) = v21;
        *(_QWORD *)(v18 + 96) = v8;
        JSPromise.init(in:executor:)(a1, (uint64_t)sub_19CF4C4CC, v18, &v22);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v9 = 0xD00000000000002CLL;
    *(_QWORD *)(v9 + 8) = 0x800000019D077BE0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_BYTE *)(v9 + 24) = 1;
    *(_QWORD *)(v9 + 32) = 0;
    *(_BYTE *)(v9 + 40) = 1;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(_QWORD *)(v9 + 96) = 0;
    swift_willThrow();
  }
}

uint64_t sub_19CF4AD5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  id v19;
  __int128 v21;
  __int128 v22;
  _QWORD v23[5];
  char v24;
  _QWORD v25[5];
  _OWORD v26[2];
  uint64_t v27;

  v12 = swift_allocObject();
  v13 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v12 + 64) = v13;
  *(_QWORD *)(v12 + 80) = *(_QWORD *)(a5 + 64);
  v14 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v12 + 32) = v14;
  sub_19CF4C430(a5);
  sub_19CF2DACC(a4, sub_19CF4C528, v12);
  swift_release();
  sub_19CDF5C34(a2, (uint64_t)&v21);
  v15 = swift_allocObject();
  v16 = v22;
  *(_OWORD *)(v15 + 16) = v21;
  *(_OWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 48) = v23[0];
  *(_QWORD *)(v15 + 56) = a1;
  sub_19CDF5C34(a3, (uint64_t)v26);
  v17 = swift_allocObject();
  v18 = v26[1];
  *(_OWORD *)(v17 + 16) = v26[0];
  *(_OWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 48) = v27;
  *(_QWORD *)(v17 + 56) = a1;
  v25[3] = type metadata accessor for RunLoopWorkerThread();
  v25[4] = &protocol witness table for RunLoopWorkerThread;
  v25[0] = a6;
  *(_QWORD *)&v21 = sub_19CF4C544;
  *((_QWORD *)&v21 + 1) = v15;
  *(_QWORD *)&v22 = sub_19CF4C554;
  *((_QWORD *)&v22 + 1) = v17;
  sub_19CCD5B84((uint64_t)v25, (uint64_t)v23);
  v24 = 0;
  v19 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CDC1350();
  sub_19CCECFE4((uint64_t)&v21, (uint64_t *)&unk_1EE43E3C0);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
}

void sub_19CF4AF18(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  JSValue v18;
  JSValue v19;
  Class isa;
  id v21;
  void *v22;
  objc_class *v23;
  _BYTE v24[32];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  sub_19CE6A4CC(a3, &v29);
  v6 = *((_QWORD *)&v30 + 1);
  v7 = v31;
  __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
  v17 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a3, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  *(_QWORD *)(v5 + 56) = sub_19CD15680();
  *(_QWORD *)(v5 + 32) = v17;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v18.super.isa = JSReference.unwrap()().super.isa;
  if (v19.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1EE43AFF0 != -1)
      swift_once();
    v8 = (void *)qword_1EE465C20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v10 = swift_allocObject();
    v11 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
    v28 = v11;
    v27[0] = 0xD00000000000002DLL;
    v27[1] = 0x800000019D077C40;
    v29 = 0u;
    v30 = 0u;
    v12 = v8;
    sub_19CD40658((uint64_t)v27, (uint64_t)&v29);
    *(_BYTE *)(v10 + 64) = 0;
    v13 = v30;
    *(_OWORD *)(v10 + 32) = v29;
    *(_OWORD *)(v10 + 48) = v13;
    *(_QWORD *)(v9 + 32) = v10;
    swift_getErrorValue();
    v28 = v26;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v27);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v26);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
    sub_19CD40794((uint64_t)v27, (uint64_t)v24);
    v29 = 0u;
    v30 = 0u;
    sub_19CD40658((uint64_t)v24, (uint64_t)&v29);
    *(_BYTE *)(v15 + 64) = 0;
    v16 = v30;
    *(_OWORD *)(v15 + 32) = v29;
    *(_OWORD *)(v15 + 48) = v16;
    *(_QWORD *)(v9 + 40) = v15;
    sub_19CCECFE4((uint64_t)v27, &qword_1ECEB3370);
    *(_QWORD *)&v29 = v12;
    LOBYTE(v27[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)v27);
    swift_bridgeObjectRelease();

  }
  else
  {
    isa = v18.super.isa;
    v21 = -[objc_class context](v18.super.isa, sel_context);
    if (v21)
    {
      v22 = v21;
      v23 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19CF4B244(void *a1, _QWORD *a2, void *a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  JSValue v20;
  JSValue v21;
  Class isa;
  id v23;
  void *v24;
  objc_class *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  v7 = a1;
  sub_19CE21FD0(a1, (uint64_t)&v44);
  v33 = v44;
  v34 = v45;
  LOBYTE(v35) = BYTE8(v45);
  v36 = v46;
  v37 = v47;
  v38 = v48;
  v39 = v49;
  v40 = v50;
  v41 = v51;
  v28 = (void *)v52;
  v42 = v52;
  v43 = v53;
  JSError.jsRepresentation(in:)(a3, v30);
  v26 = a2;
  v27 = v6;
  v9 = v31;
  v8 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 16))(a3, v9, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 56) = sub_19CD15680();
  *(_QWORD *)(v27 + 32) = v19;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  v20.super.isa = JSReference.unwrap()().super.isa;
  if (v21.super.isa)
  {
    swift_bridgeObjectRelease();
    if (qword_1EE43AFF0 != -1)
      swift_once();
    v10 = (void *)qword_1EE465C20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v12 = swift_allocObject();
    v13 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v35 = v13;
    *(_QWORD *)&v33 = 0xD00000000000002CLL;
    *((_QWORD *)&v33 + 1) = 0x800000019D077C10;
    v44 = 0u;
    v45 = 0u;
    v14 = v10;
    sub_19CD40658((uint64_t)&v33, (uint64_t)&v44);
    *(_BYTE *)(v12 + 64) = 0;
    v15 = v45;
    *(_OWORD *)(v12 + 32) = v44;
    *(_OWORD *)(v12 + 48) = v15;
    *(_QWORD *)(v11 + 32) = v12;
    swift_getErrorValue();
    v35 = v29;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v33);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v29 - 8) + 16))(boxed_opaque_existential_2Tm);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
    sub_19CD40794((uint64_t)&v33, (uint64_t)v30);
    v44 = 0u;
    v45 = 0u;
    sub_19CD40658((uint64_t)v30, (uint64_t)&v44);
    *(_BYTE *)(v17 + 64) = 0;
    v18 = v45;
    *(_OWORD *)(v17 + 32) = v44;
    *(_OWORD *)(v17 + 48) = v18;
    *(_QWORD *)(v11 + 40) = v17;
    sub_19CCECFE4((uint64_t)&v33, &qword_1ECEB3370);
    *(_QWORD *)&v44 = v14;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);
    swift_bridgeObjectRelease();

  }
  else
  {
    isa = v20.super.isa;
    v23 = -[objc_class context](v20.super.isa, sel_context);
    if (v23)
    {
      v24 = v23;
      v25 = isa;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_19CF4B7FC(void *a1)
{
  sub_19CFBA710(a1);
}

void sub_19CF4B81C(void *a1)
{
  sub_19CFBD738(a1);
}

void sub_19CF4B83C(void *a1)
{
  sub_19CEB8EE4(a1);
}

void sub_19CF4B85C(void *a1)
{
  sub_19CEBA318(a1);
}

void sub_19CF4B87C(void *a1)
{
  sub_19CEBA334(a1);
}

void sub_19CF4B89C(void *a1)
{
  sub_19CEBADDC(a1);
}

void sub_19CF4B8BC(void *a1)
{
  sub_19CEBC0A8(a1);
}

void sub_19CF4B8DC(void *a1)
{
  sub_19CEBC36C(a1);
}

uint64_t sub_19CF4B8FC(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  _BOOL4 v10;
  BOOL v11;
  uint64_t result;
  int64_t v13;
  BOOL v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  BOOL v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  BOOL v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = a3;
  v7 = a1;
  v8 = 0;
  v9 = a1;
  while (1)
  {
    v10 = v9 <= a2;
    if (a3 > 0)
      v10 = v9 >= a2;
    if (v10)
      break;
    v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11)
      v9 = (v9 >> 63) ^ 0x8000000000000000;
    v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  v46 = MEMORY[0x1E0DEE9D8];
  sub_19CE4A2D8(0, v8, 0);
  result = v46;
  if (v8)
  {
    v41 = *(_QWORD *)(a4 + 16);
    v40 = a4 + 32;
    v13 = a2;
    while (1)
    {
      v14 = v7 <= v13;
      if (v6 > 0)
        v14 = v7 >= v13;
      if (v14)
        break;
      if (__OFADD__(v7, v6))
        v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      else
        v15 = v7 + v6;
      if (__OFADD__(v7, a5))
        goto LABEL_77;
      if (v7 + a5 >= v41)
        v16 = v41;
      else
        v16 = v7 + a5;
      v17 = v16 - v7;
      if (v16 < v7)
        goto LABEL_78;
      if (v7 < 0)
        goto LABEL_79;
      v44 = result;
      v18 = v6;
      sub_19CFE0754();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x1E0DEE9D8];
      }
      v20 = *(_QWORD *)(v19 + 16);
      swift_release();
      if (v20 == v17)
      {
        v21 = (_QWORD *)swift_dynamicCastClass();
        v6 = v18;
        v13 = a2;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v6 = v18;
        v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0)
              goto LABEL_83;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
            v21 = (_QWORD *)swift_allocObject();
            v24 = _swift_stdlib_malloc_size(v21);
            v25 = v24 - 32;
            if (v24 < 32)
              v25 = v24 - 17;
            v21[2] = v17;
            v21[3] = 2 * (v25 >> 4);
          }
          if (v40 + 16 * v7 < (unint64_t)&v21[2 * v17 + 4] && (unint64_t)(v21 + 4) < v40 + 16 * v16)
            goto LABEL_83;
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      result = v44;
      v23 = *(_QWORD *)(v44 + 16);
      v22 = *(_QWORD *)(v44 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_19CE4A2D8(v22 > 1, v23 + 1, 1);
        v13 = a2;
        result = v44;
      }
      *(_QWORD *)(result + 16) = v23 + 1;
      *(_QWORD *)(result + 8 * v23 + 32) = v21;
      v7 = v15;
      if (!--v8)
        goto LABEL_43;
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  else
  {
    v15 = v7;
    v13 = a2;
LABEL_43:
    v26 = v15 <= v13;
    if (v6 > 0)
      v26 = v15 >= v13;
    if (v26)
      return result;
    v45 = a4 + 32;
    while (1)
    {
      v27 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5))
        break;
      if (v15 + a5 >= *(_QWORD *)(a4 + 16))
        v28 = *(_QWORD *)(a4 + 16);
      else
        v28 = v15 + a5;
      v29 = v28 - v15;
      if (v28 < v15)
        goto LABEL_81;
      if (v15 < 0)
        goto LABEL_82;
      v30 = result;
      sub_19CFE0754();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v31 = swift_dynamicCastClass();
      if (!v31)
      {
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x1E0DEE9D8];
      }
      v32 = *(_QWORD *)(v31 + 16);
      swift_release();
      if (v32 == v29)
      {
        v33 = (_QWORD *)swift_dynamicCastClass();
        if (!v33)
        {
          swift_bridgeObjectRelease();
          v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (v28 != v15)
        {
          if (v29 < 1)
          {
            if (v29 < 0)
              goto LABEL_83;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
            v33 = (_QWORD *)swift_allocObject();
            v38 = _swift_stdlib_malloc_size(v33);
            v39 = v38 - 32;
            if (v38 < 32)
              v39 = v38 - 17;
            v33[2] = v29;
            v33[3] = 2 * (v39 >> 4);
          }
          if (v45 + 16 * v15 < (unint64_t)&v33[2 * v29 + 4] && (unint64_t)(v33 + 4) < v45 + 16 * v28)
            goto LABEL_83;
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      result = v30;
      v47 = v30;
      v35 = *(_QWORD *)(v30 + 16);
      v34 = *(_QWORD *)(v30 + 24);
      v36 = a2;
      if (v35 >= v34 >> 1)
      {
        sub_19CE4A2D8(v34 > 1, v35 + 1, 1);
        v36 = a2;
        result = v47;
      }
      *(_QWORD *)(result + 16) = v35 + 1;
      *(_QWORD *)(result + 8 * v35 + 32) = v33;
      v37 = v27 <= v36;
      if (v6 > 0)
        v37 = v27 >= v36;
      v15 = v27;
      if (v37)
        return result;
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CF4BE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t aBlock;
  uint64_t v31;
  void *v32;
  void *v33;
  void (*v34)(void *);
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  _QWORD v38[2];

  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    sub_19CFE0238();
    v8 = a1 + 32;
    v27 = *(_QWORD *)(a3 + 48);
    sub_19CF4C560(a3 + 56, (uint64_t)v37);
    v26 = *(_BYTE *)(a3 + 40);
    do
    {
      v16 = objc_allocWithZone(MEMORY[0x1E0CFDAF8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v17 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      v18 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v16, sel_initWithBag_caller_keyProfile_, a2, v17, v18);

      swift_unknownObjectRelease();
      objc_msgSend(v19, sel_setVersion_, v27);
      sub_19CF4C560((uint64_t)v37, (uint64_t)v38);
      if (v38[1])
        v20 = (void *)sub_19CFDF554();
      else
        v20 = 0;
      objc_msgSend(v19, sel_setPlatform_, v20);

      objc_msgSend(v19, sel_setClientInfo_, a4);
      v21 = (void *)sub_19CFDF854();
      if ((v26 & 1) != 0)
      {
        v9 = objc_msgSend(v19, sel_performLookupWithBundleIdentifiers_itemIdentifiers_, v21, 0);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4427C0);
        v10 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
        v11 = swift_allocObject();
        *(_DWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v10 + 16) = v11;
        *(_QWORD *)(v10 + 24) = MEMORY[0x1E0DEE9D8];
        *(_BYTE *)(v10 + 32) = 0;
        v34 = (void (*)(void *))sub_19CF4C5A8;
        v35 = v10;
        v12 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v31 = 1107296256;
        v32 = sub_19CCFA024;
        v33 = &block_descriptor_33;
        v13 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v9, sel_addSuccessBlock_, v13);
        _Block_release(v13);
        v34 = sub_19CF4C5AC;
        v35 = v10;
        aBlock = v12;
        v31 = 1107296256;
        v32 = sub_19CCDB9F8;
        v14 = &block_descriptor_14_1;
      }
      else
      {
        v9 = objc_msgSend(v19, sel_performLookupWithBundleIdentifiers_itemIdentifiers_, 0, v21);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4427C0);
        v22 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
        v23 = swift_allocObject();
        *(_DWORD *)(v23 + 16) = 0;
        *(_QWORD *)(v22 + 16) = v23;
        *(_QWORD *)(v22 + 24) = MEMORY[0x1E0DEE9D8];
        *(_BYTE *)(v22 + 32) = 0;
        v34 = (void (*)(void *))sub_19CF4C5B0;
        v35 = v22;
        v24 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v31 = 1107296256;
        v32 = sub_19CCFA024;
        v33 = &block_descriptor_18_2;
        v25 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v9, sel_addSuccessBlock_, v25);
        _Block_release(v25);
        v34 = sub_19CF4C5B4;
        v35 = v22;
        aBlock = v24;
        v31 = 1107296256;
        v32 = sub_19CCDB9F8;
        v14 = &block_descriptor_22;
      }
      v33 = v14;
      v15 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v9, sel_addErrorBlock_, v15);

      _Block_release(v15);
      swift_bridgeObjectRelease();

      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      v8 += 8;
      --v5;
    }
    while (v5);
    return v36;
  }
  return result;
}

uint64_t sub_19CF4C294()
{
  id v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  id v6;
  id v7;
  id v8;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentContext);
  if (v0)
  {
    v1 = v0;
    sub_19CDC98D8();
    v2 = (void *)swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000024;
    *(_QWORD *)(v3 + 8) = 0x800000019D077B90;
    *(_QWORD *)(v3 + 16) = 0;
    *(_BYTE *)(v3 + 24) = 1;
    *(_QWORD *)(v3 + 32) = 0;
    *(_BYTE *)(v3 + 40) = 1;
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
    *(_OWORD *)(v3 + 80) = 0u;
    *(_QWORD *)(v3 + 96) = 0;
    swift_willThrow();
    v4 = objc_msgSend(v1, sel_exceptionHandler);
    if (v4)
    {
      v5 = (void (**)(_QWORD, _QWORD, _QWORD))v4;
      _Block_copy(v4);
      v6 = sub_19CE7CC54(v2, v1);
      ((void (**)(_QWORD, void *, id))v5)[2](v5, v1, v6);
      _Block_release(v5);
      _Block_release(v5);

    }
    v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, v1);
    if (v7)
    {
      v8 = v7;

      return (uint64_t)v8;
    }
    __break(1u);
  }
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CF4C430(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CF4C480()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF4C4CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19CF4AD5C(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, *(_QWORD *)(v3 + 96));
}

uint64_t sub_19CF4C4EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF4C528@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_19CF4AA34(a1, a2, v3 + 16, a3);
}

void sub_19CF4C544(uint64_t a1)
{
  uint64_t v1;

  sub_19CF4AF18(a1, (_QWORD *)(v1 + 16), *(void **)(v1 + 56));
}

void sub_19CF4C554(void *a1)
{
  uint64_t v1;

  sub_19CF4B244(a1, (_QWORD *)(v1 + 16), *(void **)(v1 + 56));
}

uint64_t sub_19CF4C560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for MigrationMetricsIDService(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  return swift_release();
}

uint64_t initializeWithCopy for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v5;
  swift_unknownObjectRetain();
  v9(a1 + 56, a2 + 56, v8);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for MigrationMetricsIDService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationMetricsIDService(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MigrationMetricsIDService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationMetricsIDService()
{
  return &type metadata for MigrationMetricsIDService;
}

void sub_19CF4C890(void *a1)
{
  sub_19CEB9198(a1);
}

void sub_19CF4C8B0(void *a1)
{
  sub_19CEB9404(a1);
}

void sub_19CF4C8D0(void *a1)
{
  sub_19CEB9E30(a1);
}

void sub_19CF4C8F0(void *a1)
{
  sub_19CEBA0B0(a1);
}

void sub_19CF4C910(void *a1)
{
  sub_19CEBADF8(a1);
}

void sub_19CF4C930(void *a1)
{
  sub_19CEBB060(a1);
}

void sub_19CF4C950(void *a1)
{
  sub_19CEBAA90(a1);
}

void sub_19CF4C970(void *a1)
{
  sub_19CEBB598(a1);
}

void sub_19CF4C990(void *a1)
{
  sub_19CEBC020(a1);
}

void sub_19CF4C9B0(void *a1)
{
  sub_19CEB9174(a1);
}

void sub_19CF4C9D0(void *a1)
{
  sub_19CEBCBDC(a1);
}

void sub_19CF4C9F0(void *a1)
{
  sub_19CEBCE44(a1);
}

void sub_19CF4CA10(void *a1)
{
  sub_19CEBD0C0(a1);
}

void sub_19CF4CA30(void *a1)
{
  sub_19CEBD384(a1);
}

void sub_19CF4CA50(void *a1)
{
  sub_19CEB96A0(a1);
}

void sub_19CF4CA70(void *a1)
{
  sub_19CEBD62C(a1);
}

void sub_19CF4CA90(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_19CF4CAE4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = v0 + 1048;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_19CF4CB64;
  *(_QWORD *)(v0 + 256) = swift_continuation_init();
  *(_BYTE *)(v0 + 328) = 1;
  sub_19CD1E634();
  sub_19CCECFE4(v0 + 256, &qword_1EE440CC0);
  return swift_continuation_await();
}

uint64_t sub_19CF4CB64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 1240) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 1248) = *(_QWORD *)(v1 + 1048);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF4CBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  unsigned int v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  unint64_t v82;
  char v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  double v106;
  void *v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121[9];

  v1 = *(_QWORD *)(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1056);
  v121[0] = 1;
  sub_19CD04F24(v2, v1, v121, v3, (uint64_t)&v117);
  v4 = v118;
  if (!v118)
  {
    swift_bridgeObjectRelease();
LABEL_94:
    swift_release();
    v79 = *(_QWORD *)(v0 + 1248);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v79);
  }
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v5 + 16);
  v113 = v6;
  v115 = v117;
  if (v119)
  {
    if (v6)
    {
      v99 = v120;
      v7 = 0;
      v100 = v5 + 32;
      v8 = *(_QWORD *)(v119 + 16);
      v103 = v119;
      v98 = (_QWORD *)(v119 + 56);
      while (1)
      {
        if (v8)
        {
          v9 = v100 + 72 * v7;
          v11 = *(_QWORD *)v9;
          v10 = *(_QWORD *)(v9 + 8);
          v109 = *(_BYTE *)(v9 + 40);
          v106 = *(double *)(v9 + 32);
          v108 = *(_QWORD *)(v9 + 56);
          v111 = *(_QWORD *)(v9 + 64);
          if (*(_QWORD *)(v103 + 32) == *(_QWORD *)v9 && *(_QWORD *)(v103 + 40) == v10)
            goto LABEL_43;
          result = sub_19CFE06A0();
          if ((result & 1) != 0)
            goto LABEL_43;
          if (v8 != 1)
            break;
        }
LABEL_5:
        if (++v7 == v113)
          goto LABEL_93;
      }
      v14 = v98;
      v15 = 1;
      while (1)
      {
        v16 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (*(v14 - 1) == v11 && *v14 == v10)
          goto LABEL_43;
        result = sub_19CFE06A0();
        if ((result & 1) != 0)
          goto LABEL_43;
        ++v15;
        v14 += 2;
        if (v16 == v8)
          goto LABEL_5;
      }
      __break(1u);
LABEL_137:
      __break(1u);
      return result;
    }
    goto LABEL_93;
  }
  if (!v6)
  {
LABEL_93:
    sub_19CD04ED4((uint64_t)v115, v4);
    swift_bridgeObjectRelease();
    goto LABEL_94;
  }
  v99 = v120;
  v18 = 0;
  v104 = v5 + 32;
  v19 = (uint64_t)v117;
  while (1)
  {
    v20 = v104 + 72 * v18;
    v21 = *(_QWORD **)(v20 + 48);
    if (!v21)
      goto LABEL_25;
    v22 = v21[2];
    if (!v22)
      goto LABEL_25;
    v11 = *(_QWORD *)v20;
    v10 = *(_QWORD *)(v20 + 8);
    v109 = *(_BYTE *)(v20 + 40);
    v106 = *(double *)(v20 + 32);
    v108 = *(_QWORD *)(v20 + 56);
    v111 = *(_QWORD *)(v20 + 64);
    if (v21[4] == v19 && v4 == v21[5])
      break;
    result = sub_19CFE06A0();
    v19 = (uint64_t)v115;
    if ((result & 1) != 0)
      break;
    if (v22 != 1)
    {
      v24 = v21 + 7;
      v25 = 1;
      do
      {
        v26 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_137;
        if (*(v24 - 1) == v19 && v4 == *v24)
          goto LABEL_43;
        result = sub_19CFE06A0();
        v19 = (uint64_t)v115;
        if ((result & 1) != 0)
          goto LABEL_43;
        ++v25;
        v24 += 2;
      }
      while (v26 != v22);
    }
LABEL_25:
    if (++v18 == v113)
      goto LABEL_93;
  }
LABEL_43:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = *(_QWORD **)(v0 + 1064);
  sub_19CD04ED4((uint64_t)v115, v4);
  v29 = v28[3];
  v30 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v29);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v30 + 8))(&v117, v29, v30);
  v31 = (uint64_t)v117;
  *(_QWORD *)(v0 + 1256) = v117;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    sub_19CD04ED4(v11, v10);
    goto LABEL_94;
  }
  v114 = v0 + 329;
  v32 = *(unsigned __int8 *)(v0 + 329);
  v33 = *(_QWORD *)(v0 + 1072);
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB80]), sel_init, v99);
  *(_QWORD *)(v0 + 1264) = v34;
  v35 = (void *)v31;
  objc_msgSend(v34, sel_setAccount_, v31);
  objc_msgSend(v34, sel_setClientInfo_, v33);
  v36 = v34;
  v37 = (void *)sub_19CFDF554();
  objc_msgSend(v36, sel_setDomain_, v37);

  objc_msgSend(v36, sel_setIsActiveITunesAccountRequired_, v32);
  if ((v109 & 1) != 0)
  {
    if (v111)
    {
      if (v108 == 0x796C696164 && v111 == 0xE500000000000000)
      {
        sub_19CD04ED4(v11, v10);
        objc_msgSend(v36, sel_setResetInterval_, 86400.0, 0xE500000000000000);
      }
      else
      {
        v38 = sub_19CFE06A0();
        sub_19CD04ED4(v11, v10);
        if ((v38 & 1) != 0)
          objc_msgSend(v36, sel_setResetInterval_, 86400.0, v111);
      }
    }
    else
    {
      sub_19CD04ED4(v11, v10);
    }
  }
  else
  {
    sub_19CD04ED4(v11, v10);
    objc_msgSend(v36, sel_setResetInterval_, v106, v111);
  }
  v39 = v36;
  v40 = (void *)sub_19CFDF554();
  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_keyWithName_crossDeviceSync_, v40, 0);
  *(_QWORD *)(v0 + 1272) = v42;

  v43 = (void *)sub_19CFDF554();
  v44 = objc_msgSend(v41, sel_keyWithName_crossDeviceSync_, v43, 1);
  *(_QWORD *)(v0 + 1280) = v44;

  v45 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v46 = (void *)sub_19CFDF554();
  v47 = objc_msgSend(v45, sel_BOOLForKey_, v46);

  if (v47)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v39, sel_reset);

    goto LABEL_94;
  }
  v107 = v35;
  v110 = v0 + 456;
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1216);
  v49 = *(_QWORD *)(v0 + 1176);
  v50 = *(_QWORD *)(v0 + 1160);
  v51 = *(_QWORD *)(v0 + 1088);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_19D054B60;
  *(_QWORD *)(v52 + 32) = v42;
  *(_QWORD *)(v52 + 40) = v44;
  v117 = (void *)v52;
  sub_19CFDF878();
  sub_19CCE5204(0, qword_1EE43A340);
  v102 = v0;
  v116 = v39;
  v53 = v42;
  v101 = v44;
  v54 = (void *)sub_19CFDF854();
  swift_bridgeObjectRelease();
  sub_19CD1F0E4(v51, v50);
  v105 = v53;
  if (v48(v50, 1, v49) == 1)
  {
    v55 = *(_QWORD *)(v0 + 1160);
    sub_19CFDEF6C();
    sub_19CCECFE4(v55, (uint64_t *)&unk_1ECEB2040);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1184) + 32))(*(_QWORD *)(v0 + 1192), *(_QWORD *)(v0 + 1160), *(_QWORD *)(v0 + 1176));
  }
  v56 = (_QWORD *)v0;
  v57 = v0 + 416;
  v58 = (_OWORD *)(v0 + 880);
  v59 = *(_QWORD *)(v0 + 1192);
  v60 = *(_QWORD *)(v0 + 1184);
  v61 = v56[147];
  v62 = (void *)sub_19CFDEF0C();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  v63 = objc_msgSend(v116, sel_generateEventFieldsForKeys_date_, v54, v62);

  v64 = sub_19CFDF3C8();
  v56[120] = 0x644972657375;
  v56[121] = 0xE600000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v64 + 16) && (v65 = sub_19CD20240(v110), (v66 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v64 + 56) + 32 * v65, (uint64_t)v58);
  }
  else
  {
    *v58 = 0u;
    v58[1] = 0u;
  }
  sub_19CD20334(v110);
  if (*(_QWORD *)(v102 + 904))
  {
    v67 = swift_dynamicCast();
    if (v67)
      v68 = *(_QWORD *)(v102 + 1024);
    else
      v68 = 0;
    if (v67)
      v69 = *(_QWORD *)(v102 + 1032);
    else
      v69 = 0;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v58, &qword_1ECEB3370);
    v68 = 0;
    v69 = 0;
  }
  v70 = v102 + 536;
  v71 = (_OWORD *)(v102 + 720);
  v72 = *(_QWORD *)(v102 + 1248);
  *(_QWORD *)(v102 + 992) = 0x644972657375;
  *(_QWORD *)(v102 + 1000) = 0xE600000000000000;
  sub_19CFE00C4();
  v112 = v72;
  if (*(_QWORD *)(v72 + 16) && (v73 = sub_19CD20240(v57), (v74 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v102 + 1248) + 56) + 32 * v73, v102 + 720);
  }
  else
  {
    *v71 = 0u;
    *(_OWORD *)(v102 + 736) = 0u;
  }
  sub_19CD20334(v57);
  if (!*(_QWORD *)(v102 + 744))
  {
    sub_19CCECFE4((uint64_t)v71, &qword_1ECEB3370);
    if (v69)
      goto LABEL_89;
LABEL_92:
    v78 = 1;
    goto LABEL_97;
  }
  v75 = swift_dynamicCast();
  if (v75)
    v76 = *(_QWORD *)(v102 + 1008);
  else
    v76 = 0;
  if (v75)
    v77 = *(_QWORD *)(v102 + 1016);
  else
    v77 = 0;
  if (!v69)
  {
    if (v77)
    {
      v78 = 0;
      goto LABEL_96;
    }
    goto LABEL_92;
  }
  if (!v77)
  {
LABEL_89:
    v78 = 0;
    goto LABEL_96;
  }
  if (v68 == v76 && v69 == v77)
  {
    swift_bridgeObjectRelease();
    v78 = 1;
  }
  else
  {
    v78 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
  }
LABEL_96:
  swift_bridgeObjectRelease();
LABEL_97:
  v80 = v102 + 496;
  v81 = (_OWORD *)(v102 + 688);
  *(_BYTE *)(v114 + 1) = v78 & 1;
  *(_QWORD *)(v102 + 912) = 0x6449746E65696C63;
  *(_QWORD *)(v102 + 920) = 0xE800000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v64 + 16) && (v82 = sub_19CD20240(v70), (v83 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v64 + 56) + 32 * v82, v102 + 688);
  }
  else
  {
    *v81 = 0u;
    *(_OWORD *)(v102 + 704) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19CD20334(v70);
  v0 = v102;
  if (*(_QWORD *)(v102 + 712))
  {
    v84 = swift_dynamicCast();
    if (v84)
      v85 = *(_QWORD *)(v102 + 928);
    else
      v85 = 0;
    if (v84)
      v86 = *(_QWORD *)(v102 + 936);
    else
      v86 = 0;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v81, &qword_1ECEB3370);
    v85 = 0;
    v86 = 0;
  }
  *(_QWORD *)(v102 + 944) = 0x6449746E65696C63;
  *(_QWORD *)(v102 + 952) = 0xE800000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v112 + 16) && (v87 = sub_19CD20240(v80), (v88 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v102 + 1248) + 56) + 32 * v87, v102 + 784);
  }
  else
  {
    *(_OWORD *)(v102 + 784) = 0u;
    *(_OWORD *)(v102 + 800) = 0u;
  }
  sub_19CD20334(v80);
  if (!*(_QWORD *)(v102 + 808))
  {
    sub_19CCECFE4(v102 + 784, &qword_1ECEB3370);
    if (v86)
      goto LABEL_129;
LABEL_130:
    if ((v78 & 1) == 0)
      goto LABEL_131;
    goto LABEL_133;
  }
  v89 = swift_dynamicCast();
  if (v89)
    v90 = *(_QWORD *)(v102 + 976);
  else
    v90 = 0;
  if (v89)
    v91 = *(_QWORD *)(v102 + 984);
  else
    v91 = 0;
  if (!v86)
  {
    if (v91)
      goto LABEL_129;
    goto LABEL_130;
  }
  if (!v91)
  {
LABEL_129:
    swift_bridgeObjectRelease();
    v92 = 0;
    goto LABEL_135;
  }
  if (v85 != v90 || v86 != v91)
  {
    v93 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v78 & v93 & 1) == 0)
    {
      v92 = (v78 ^ 1) & v93;
      goto LABEL_135;
    }
LABEL_133:
    swift_bridgeObjectRelease();

    goto LABEL_94;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v78 & 1) != 0)
    goto LABEL_133;
LABEL_131:
  v92 = 1;
LABEL_135:
  *(_BYTE *)(v114 + 2) = v92 & 1;
  v94 = *(_QWORD *)(v102 + 1224);
  v95 = *(_QWORD *)(v102 + 1104);
  v96 = *(_QWORD *)(v102 + 1096);
  sub_19CD1F644(*(_QWORD *)(v102 + 1208), *(_QWORD *)(v102 + 1080));
  v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = xmmword_19D054B60;
  LOBYTE(v117) = 0;
  *(_QWORD *)(v97 + 32) = sub_19CDE2020(v96, v95, (unsigned __int8 *)&v117, v94);
  LOBYTE(v117) = 1;
  *(_QWORD *)(v97 + 40) = sub_19CDE2020(v96, v95, (unsigned __int8 *)&v117, v94);
  v117 = (void *)v97;
  sub_19CFDF878();
  *(_QWORD *)(v102 + 1288) = sub_19CF2D5A8((uint64_t)v117, sub_19CDE1E2C, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF4DA78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4DB48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = v0 + 1040;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_19CF4DBC8;
  *(_QWORD *)(v0 + 336) = swift_continuation_init();
  *(_BYTE *)(v0 + 408) = 1;
  sub_19CDC0104();
  sub_19CCECFE4(v0 + 336, &qword_1EE441050);
  return swift_continuation_await();
}

uint64_t sub_19CF4DBC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1296) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 1304) = *(_QWORD *)(v1 + 1040);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF4DC44()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;

  if ((*(_BYTE *)(v0 + 330) & 1) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 1304) + 16))
    {
      v1 = sub_19CE1213C(0);
      if ((v2 & 1) != 0)
      {
        v3 = *(_QWORD *)(v0 + 1152);
        v4 = *(_QWORD *)(v0 + 1144);
        v5 = *(_QWORD *)(v0 + 1120);
        sub_19CDE26B4(*(_QWORD *)(*(_QWORD *)(v0 + 1304) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 1128) + 72) * v1, v4);
        sub_19CDE2B4C(v4, v3);
        if ((*(_BYTE *)(v3 + *(int *)(v5 + 32)) & 1) != 0)
        {
          v6 = *(_QWORD *)(v0 + 1280);
          v7 = *(id *)(v0 + 1264);
          swift_bridgeObjectRetain();
          v8 = (void *)sub_19CFDF554();
          swift_bridgeObjectRelease();
          v9 = (void *)sub_19CFDEF0C();
          objc_msgSend(v7, sel__setIdentifier_withStartedDate_forKey_, v8, v9, v6);

        }
        sub_19CDE2B90(*(_QWORD *)(v0 + 1152));
      }
    }
  }
  if (*(_BYTE *)(v0 + 331) == 1)
  {
    v10 = *(void **)(v0 + 1280);
    v11 = *(void **)(v0 + 1272);
    v12 = *(void **)(v0 + 1256);

    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 1304) + 16))
    {
      v13 = 1;
      v14 = sub_19CE1213C(1);
      if ((v15 & 1) != 0)
      {
        sub_19CDE26B4(*(_QWORD *)(*(_QWORD *)(v0 + 1304) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 1128) + 72) * v14, *(_QWORD *)(v0 + 1112));
        v13 = 0;
      }
    }
    else
    {
      v13 = 1;
    }
    v16 = *(_QWORD *)(v0 + 1128);
    v17 = *(_QWORD *)(v0 + 1120);
    v18 = *(_QWORD *)(v0 + 1112);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, v13, 1, v17);
    swift_bridgeObjectRelease();
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17);
    v20 = *(void **)(v0 + 1280);
    v21 = *(void **)(v0 + 1272);
    v22 = *(void **)(v0 + 1264);
    v23 = *(void **)(v0 + 1256);
    if (v19 == 1)
    {
      v24 = *(_QWORD *)(v0 + 1112);

      sub_19CCECFE4(v24, &qword_1EE43EC50);
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 1136);
      sub_19CDE2B4C(*(_QWORD *)(v0 + 1112), v25);
      v26 = v22;
      swift_bridgeObjectRetain();
      v27 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      v28 = (void *)sub_19CFDEF0C();
      objc_msgSend(v26, sel__setIdentifier_withStartedDate_forKey_, v27, v28, v21);

      sub_19CDE2B90(v25);
    }
    swift_release();
  }
  v29 = *(_QWORD *)(v0 + 1248);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_19CF4DF84()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  char v13;

  swift_release();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 1280);
  v2 = *(void **)(v0 + 1272);
  v3 = *(void **)(v0 + 1264);
  v4 = *(void **)(v0 + 1256);
  v5 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 872) = v8;
  *(_QWORD *)(v0 + 848) = 0xD000000000000022;
  *(_QWORD *)(v0 + 856) = 0x800000019D076DB0;
  *(_OWORD *)(v0 + 616) = 0u;
  *(_OWORD *)(v0 + 632) = 0u;
  v9 = v5;
  sub_19CD40658(v0 + 848, v0 + 616);
  *(_BYTE *)(v0 + 648) = 0;
  *(_BYTE *)(v7 + 64) = 0;
  v10 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v7 + 48) = v10;
  *(_QWORD *)(v6 + 32) = v7;
  v13 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v13);
  swift_bridgeObjectRelease();

  swift_release();
  v11 = *(_QWORD *)(v0 + 1248);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_19CF4E180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 1568) = v1;
  *(_QWORD *)(v2 + 1560) = a1;
  return swift_task_switch();
}

uint64_t sub_19CF4E19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 1568);
  v2 = *(_QWORD *)(v0 + 1560);
  sub_19CF4EF14(v1, v0 + 1336);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 1576) = v3;
  v4 = *(_OWORD *)(v0 + 1416);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v0 + 1400);
  *(_OWORD *)(v3 + 96) = v4;
  *(_OWORD *)(v3 + 105) = *(_OWORD *)(v0 + 1425);
  v5 = *(_OWORD *)(v0 + 1352);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 1336);
  *(_OWORD *)(v3 + 32) = v5;
  v6 = *(_OWORD *)(v0 + 1384);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v0 + 1368);
  *(_OWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 128) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_asyncLet_begin();
  sub_19CF4EF14(v1, v0 + 1448);
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 1584) = v7;
  v8 = *(_OWORD *)(v0 + 1528);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(v0 + 1512);
  *(_OWORD *)(v7 + 96) = v8;
  *(_OWORD *)(v7 + 105) = *(_OWORD *)(v0 + 1537);
  v9 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 1448);
  *(_OWORD *)(v7 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 1496);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 1480);
  *(_OWORD *)(v7 + 64) = v10;
  *(_QWORD *)(v7 + 128) = v2;
  swift_bridgeObjectRetain();
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_19CF4E2F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1592) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return swift_asyncLet_get_throwing();
}

uint64_t sub_19CF4E320()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1600) = v0;
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E348()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E35C()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E370()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E384()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E3C8()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E3DC()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E3F0()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E404()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E448()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E45C()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E470()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E484()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = a3;
  return swift_task_switch();
}

uint64_t sub_19CF4E4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 96);
  v2 = swift_bridgeObjectRetain();
  sub_19CDFDE6C(v2);
  swift_bridgeObjectRelease();
  v3 = *(void **)(v1 + 16);
  v4 = (void *)sub_19CFDF854();
  v5 = objc_msgSend(v3, sel_resetIDForTopics_, v4);

  v6 = v5;
  sub_19CE69F7C(v6);
  *(_QWORD *)(v0 + 176) = sub_19CF4F1A0((uint64_t)nullsub_1, 0);
  swift_release();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF4E5B4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = v0;
  v0[3] = sub_19CF4E628;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBDCE8();
  sub_19CCECFE4(v1, &qword_1EE43D300);
  return swift_continuation_await();
}

uint64_t sub_19CF4E628()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 184) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_19CF4E694()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E6C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_19CF4E714()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[10];
  v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 40) + *(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_19CDEF010;
  return v6(v0[3], v2, v3);
}

uint64_t sub_19CF4E798()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1560) = v0;
  return swift_task_switch();
}

uint64_t sub_19CF4E7B0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 1560);
  sub_19CF4EF14(v1, v0 + 1336);
  v2 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 1568) = v2;
  v3 = *(_OWORD *)(v0 + 1416);
  v2[5] = *(_OWORD *)(v0 + 1400);
  v2[6] = v3;
  *(_OWORD *)((char *)v2 + 105) = *(_OWORD *)(v0 + 1425);
  v4 = *(_OWORD *)(v0 + 1352);
  v2[1] = *(_OWORD *)(v0 + 1336);
  v2[2] = v4;
  v5 = *(_OWORD *)(v0 + 1384);
  v2[3] = *(_OWORD *)(v0 + 1368);
  v2[4] = v5;
  swift_asyncLet_begin();
  sub_19CF4EF14(v1, v0 + 1448);
  v6 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 1576) = v6;
  v7 = *(_OWORD *)(v0 + 1528);
  v6[5] = *(_OWORD *)(v0 + 1512);
  v6[6] = v7;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)(v0 + 1537);
  v8 = *(_OWORD *)(v0 + 1464);
  v6[1] = *(_OWORD *)(v0 + 1448);
  v6[2] = v8;
  v9 = *(_OWORD *)(v0 + 1496);
  v6[3] = *(_OWORD *)(v0 + 1480);
  v6[4] = v9;
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_19CF4E8D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1584) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return swift_asyncLet_get_throwing();
}

uint64_t sub_19CF4E900()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1592) = v0;
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E928()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E93C()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E950()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E964()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4E9A4()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E9B8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4E9CC()
{
  return swift_task_switch();
}

uint64_t sub_19CF4E9E0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4EA20()
{
  return swift_task_switch();
}

uint64_t sub_19CF4EA34()
{
  return swift_asyncLet_finish();
}

uint64_t sub_19CF4EA48()
{
  return swift_task_switch();
}

uint64_t sub_19CF4EA5C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4EA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a2;
  return swift_task_switch();
}

uint64_t sub_19CF4EAB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0[20] + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
  v2 = swift_allocObject();
  v0[21] = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  v5 = *(void **)(v1 + 16);
  v0[14] = sub_19CDD91F4;
  v0[15] = v2;
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 1107296256;
  v0[12] = sub_19CF4CA90;
  v0[13] = &block_descriptor_34;
  v6 = _Block_copy(v0 + 10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performMaintenanceWithCompletion_, v6);
  _Block_release(v6);
  return swift_task_switch();
}

uint64_t sub_19CF4EBBC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = v0;
  v0[3] = sub_19CF4EC30;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBDCE8();
  sub_19CCECFE4(v1, &qword_1EE43D300);
  return swift_continuation_await();
}

uint64_t sub_19CF4EC30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 176) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_19CF4EC9C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4ECD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF4ED04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_19CF4ED1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[10];
  v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_19CF4ED98;
  return v6(v2, v3);
}

uint64_t sub_19CF4ED98()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CF4EDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_19CCC1F98;
  v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF4EE54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[196] = v1;
  v4[195] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF4EEB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19CCBE344;
  v2[195] = v0;
  return swift_task_switch();
}

uint64_t sub_19CF4EF14(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MigrationMetricsIDService(a2, a1);
  return a2;
}

uint64_t sub_19CF4EF4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19CD579FC;
  v2[20] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_19CF4EFB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19CCBE344;
  v2[2] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_19CF4F014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 128);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_19CD579FC;
  v4[20] = v2;
  v4[21] = v3;
  return swift_task_switch();
}

uint64_t objectdestroy_23Tm_1()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF4F0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 128);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_19CD579FC;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch();
}

void sub_19CF4F12C(uint64_t *a1, void (*a2)(uint64_t *))
{
  uint64_t v2;

  v2 = *a1;
  a2(&v2);
  sub_19CFBA2F4();
}

uint64_t sub_19CF4F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CF4F300;
  v9[1] = v7;
  v9[2] = sub_19CF4F30C;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBDE78();
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0538);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CF4F2D4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CF4F300(uint64_t *a1)
{
  uint64_t v1;

  sub_19CF4F12C(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_19CF4F310()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t BaseObjectGraph._injectIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t BaseObjectGraph._withAllDependenciesResolved.getter()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = *v0;
  return swift_task_switch();
}

uint64_t sub_19CF4F37C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_19CF4F3F0;
  v2 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 56) = v2;
  *(_OWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 24) = v0 + 16;
  *(_QWORD *)(v1 + 32) = &unk_1EE442878;
  return swift_task_switch();
}

uint64_t sub_19CF4F3F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF4F454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[59] = a3;
  v4[60] = a4;
  v4[57] = a1;
  v4[58] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439A60);
  v4[61] = swift_task_alloc();
  v5 = type metadata accessor for _ResolvedDependency();
  v4[62] = v5;
  v4[63] = *(_QWORD *)(v5 - 8);
  v4[64] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  v4[65] = v6;
  v4[66] = *(_QWORD *)(v6 - 8);
  v4[67] = swift_task_alloc();
  v4[68] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AE0);
  v4[69] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AF0);
  v4[70] = v7;
  v4[71] = *(_QWORD *)(v7 - 8);
  v4[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v4[73] = swift_task_alloc();
  v4[74] = swift_task_alloc();
  v4[75] = swift_task_alloc();
  v4[76] = swift_task_alloc();
  v8 = sub_19CFDF1AC();
  v4[77] = v8;
  v4[78] = *(_QWORD *)(v8 - 8);
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF4F5EC()
{
  uint64_t v0;
  __int128 *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t);
  uint8_t *v11;
  os_signpost_id_t v12;
  uint8_t *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  _QWORD *v64;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);

  if (qword_1EE43B4E8 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v1 = (__int128 *)(v0 + 176);
    v2 = (_OWORD *)(v0 + 216);
    v3 = v0 + 248;
    v69 = (__int128 *)(v0 + 96);
    v4 = sub_19CFDF1DC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    sub_19CFDF188();
    v5 = sub_19CFDF1C4();
    v6 = sub_19CFDFE84();
    v72 = v0 + 216;
    v73 = v0 + 136;
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      v7 = *(_QWORD *)(v0 + 632);
      v8 = *(_QWORD *)(v0 + 624);
      v9 = *(_QWORD *)(v0 + 616);
      v10 = *(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16);
      v10(v7, *(_QWORD *)(v0 + 640), v9);
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      v12 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v5, v6, v12, "ResolveDependencies", "", v11, 2u);
      v13 = v11;
      v2 = (_OWORD *)(v0 + 216);
      MEMORY[0x1A1ADBE9C](v13, -1, -1);

      v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v3 = v0 + 248;
      v14(v7, v9);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 624);

      v10 = *(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16);
    }
    v16 = (uint64_t *)(v0 + 16);
    v17 = v0 + 56;
    v18 = *(_QWORD *)(v0 + 480);
    v76 = *(_QWORD *)(v0 + 472);
    v10(*(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 616));
    sub_19CFDF20C();
    swift_allocObject();
    *(_QWORD *)(v0 + 648) = sub_19CFDF200();
    v71 = v18 + 64;
    v19 = -1;
    v20 = -1 << *(_BYTE *)(v18 + 32);
    if (-v20 < 64)
      v19 = ~(-1 << -(char)v20);
    v21 = v19 & *(_QWORD *)(v18 + 64);
    v22 = (unint64_t)(63 - v20) >> 6;
    v66 = v22 - 1;
    swift_bridgeObjectRetain();
    v75 = v18;
    v23 = v18 + 112;
    v24 = 0;
    v68 = v23;
    v74 = v22;
    v67 = v22 - 6;
    if (v21)
      break;
LABEL_12:
    v27 = v24 + 1;
    if (!__OFADD__(v24, 1))
    {
      if (v27 >= v74)
      {
        v29 = v24;
      }
      else
      {
        v28 = *(_QWORD *)(v71 + 8 * v27);
        if (v28)
        {
LABEL_15:
          v21 = (v28 - 1) & v28;
          v26 = __clz(__rbit64(v28)) + (v27 << 6);
          v24 = v27;
          goto LABEL_11;
        }
        v48 = v24 + 2;
        v29 = v24 + 1;
        if ((uint64_t)(v24 + 2) < v74)
        {
          v28 = *(_QWORD *)(v71 + 8 * v48);
          if (v28)
          {
LABEL_33:
            v27 = v48;
            goto LABEL_15;
          }
          v29 = v24 + 2;
          if ((uint64_t)(v24 + 3) < v74)
          {
            v28 = *(_QWORD *)(v71 + 8 * (v24 + 3));
            if (v28)
            {
              v27 = v24 + 3;
              goto LABEL_15;
            }
            v48 = v24 + 4;
            v29 = v24 + 3;
            if ((uint64_t)(v24 + 4) < v74)
            {
              v28 = *(_QWORD *)(v71 + 8 * v48);
              if (v28)
                goto LABEL_33;
              v27 = v24 + 5;
              v29 = v24 + 4;
              if ((uint64_t)(v24 + 5) < v74)
              {
                v28 = *(_QWORD *)(v71 + 8 * v27);
                if (v28)
                  goto LABEL_15;
                while (v67 != v24)
                {
                  v28 = *(_QWORD *)(v68 + 8 * v24++);
                  if (v28)
                  {
                    v27 = v24 + 5;
                    goto LABEL_15;
                  }
                }
                v29 = v66;
              }
            }
          }
        }
      }
      v21 = 0;
      *(_QWORD *)(v17 + 32) = 0;
      v24 = v29;
      *(_OWORD *)v17 = 0u;
      *(_OWORD *)(v17 + 16) = 0u;
      goto LABEL_18;
    }
    __break(1u);
  }
  while (1)
  {
    v25 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v26 = v25 | (v24 << 6);
LABEL_11:
    *(_QWORD *)v17 = *(_QWORD *)(*(_QWORD *)(v75 + 48) + 8 * v26);
    sub_19CD436B0(*(_QWORD *)(v75 + 56) + 32 * v26, v0 + 64);
LABEL_18:
    sub_19CCC290C(v17, (uint64_t)v16, &qword_1ECEB04E0);
    v30 = *v16;
    if (!*v16)
      break;
    sub_19CD433C0((_OWORD *)(v0 + 24), v2);
    if (*(_QWORD *)(v76 + 16) && (sub_19CD4B638(v30), (v31 & 1) != 0))
    {
      sub_19CD436B0((uint64_t)v2, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AC8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v32 = *(_QWORD *)(v0 + 608);
        v33 = *(_QWORD *)(v0 + 600);
        sub_19CCD14C4(v1, v73);
        v34 = sub_19CFDFA10();
        v35 = *(_QWORD *)(v34 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v32, 1, 1, v34);
        sub_19CCD5B84(v73, (uint64_t)v69);
        v36 = (_QWORD *)swift_allocObject();
        v36[2] = 0;
        v36[3] = 0;
        v36[4] = v30;
        sub_19CCD14C4(v69, (uint64_t)(v36 + 5));
        sub_19CCF8C5C(v32, v33, (uint64_t *)&unk_1ECEB29B0);
        v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
        v38 = *(_QWORD *)(v0 + 600);
        if (v37 == 1)
        {
          sub_19CCECFE4(*(_QWORD *)(v0 + 600), (uint64_t *)&unk_1ECEB29B0);
        }
        else
        {
          sub_19CFDFA04();
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v34);
        }
        if (v36[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v45 = sub_19CFDF998();
          v47 = v46;
          swift_unknownObjectRelease();
        }
        else
        {
          v45 = 0;
          v47 = 0;
        }
        v1 = (__int128 *)(v0 + 176);
        v2 = (_OWORD *)(v0 + 216);
        v49 = **(_QWORD **)(v0 + 464);
        v50 = swift_allocObject();
        *(_QWORD *)(v50 + 16) = &unk_1EE4428F8;
        *(_QWORD *)(v50 + 24) = v36;
        v51 = v47 | v45;
        if (v47 | v45)
        {
          v51 = v0 + 280;
          *(_QWORD *)(v0 + 280) = 0;
          *(_QWORD *)(v0 + 288) = 0;
          *(_QWORD *)(v0 + 296) = v45;
          *(_QWORD *)(v0 + 304) = v47;
        }
        v16 = (uint64_t *)(v0 + 16);
        v52 = *(_QWORD *)(v0 + 608);
        *(_QWORD *)(v0 + 400) = 1;
        *(_QWORD *)(v0 + 408) = v51;
        *(_QWORD *)(v0 + 416) = v49;
        swift_task_create();
        swift_release();
        sub_19CCECFE4(v52, (uint64_t *)&unk_1ECEB29B0);
        __swift_destroy_boxed_opaque_existential_1Tm(v73);
        __swift_destroy_boxed_opaque_existential_1Tm(v72);
        v3 = v0 + 248;
        v17 = v0 + 56;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v39 = *(_QWORD *)(v0 + 592);
          v40 = *(_QWORD *)(v0 + 584);
          v41 = sub_19CFDFA10();
          v42 = *(_QWORD *)(v41 - 8);
          v70 = *(_OWORD *)(v0 + 424);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v39, 1, 1, v41);
          v43 = swift_allocObject();
          *(_QWORD *)(v43 + 16) = 0;
          *(_QWORD *)(v43 + 24) = 0;
          *(_QWORD *)(v43 + 32) = v30;
          *(_OWORD *)(v43 + 40) = v70;
          sub_19CCF8C5C(v39, v40, (uint64_t *)&unk_1ECEB29B0);
          LODWORD(v40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41);
          swift_unknownObjectRetain();
          v44 = *(_QWORD *)(v0 + 584);
          if ((_DWORD)v40 == 1)
          {
            sub_19CCECFE4(*(_QWORD *)(v0 + 584), (uint64_t *)&unk_1ECEB29B0);
          }
          else
          {
            sub_19CFDFA04();
            (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v41);
          }
          if (*(_QWORD *)(v43 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            v53 = sub_19CFDF998();
            v55 = v54;
            swift_unknownObjectRelease();
          }
          else
          {
            v53 = 0;
            v55 = 0;
          }
          v56 = **(_QWORD **)(v0 + 464);
          v57 = swift_allocObject();
          *(_QWORD *)(v57 + 16) = &unk_1EE4428E8;
          *(_QWORD *)(v57 + 24) = v43;
          v58 = v55 | v53;
          if (v55 | v53)
          {
            v58 = v0 + 344;
            *(_QWORD *)(v0 + 344) = 0;
            *(_QWORD *)(v0 + 352) = 0;
            *(_QWORD *)(v0 + 360) = v53;
            *(_QWORD *)(v0 + 368) = v55;
          }
          v17 = v0 + 56;
          v59 = *(_QWORD *)(v0 + 592);
          *(_QWORD *)(v0 + 376) = 1;
          *(_QWORD *)(v0 + 384) = v58;
          *(_QWORD *)(v0 + 392) = v56;
          swift_task_create();
          swift_unknownObjectRelease();
          swift_release();
          sub_19CCECFE4(v59, (uint64_t *)&unk_1ECEB29B0);
          v2 = (_OWORD *)(v0 + 216);
          __swift_destroy_boxed_opaque_existential_1Tm(v72);
          v3 = v0 + 248;
          v16 = (uint64_t *)(v0 + 16);
          v1 = (__int128 *)(v0 + 176);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
        }
      }
      __swift_destroy_boxed_opaque_existential_1Tm(v3);
      if (!v21)
        goto LABEL_12;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
      if (!v21)
        goto LABEL_12;
    }
  }
  v60 = *(_QWORD *)(v0 + 480);
  swift_release();
  *(_QWORD *)(v0 + 440) = v60;
  v61 = swift_bridgeObjectRetain();
  sub_19CD4A298(v61, &v77);
  v62 = MEMORY[0x1E0DEE9D8];
  if (v77)
    v63 = v77;
  else
    v63 = (void (*)(uint64_t))MEMORY[0x1E0DEE9D8];
  sub_19CFDF9C8();
  *(_QWORD *)(v0 + 672) = v63;
  *(_QWORD *)(v0 + 656) = v62;
  v64 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 664) = v64;
  *v64 = v0;
  v64[1] = sub_19CF4FEDC;
  return sub_19CFDF9D4();
}

uint64_t sub_19CF4FEDC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

_OWORD *sub_19CF4FF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];

  v2 = *(_QWORD *)(v0 + 552);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 528) + 48))(v2, 1, *(_QWORD *)(v0 + 520)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 672);
    v4 = *(_QWORD *)(v0 + 656);
    v5 = *(_QWORD *)(v0 + 648);
    v6 = *(_QWORD *)(v0 + 640);
    v50 = *(_QWORD *)(v0 + 624);
    v51 = *(_QWORD *)(v0 + 616);
    v7 = *(_QWORD *)(v0 + 472);
    v8 = *(_QWORD *)(v0 + 456);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 568) + 8))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 560));
    v52[3] = &type metadata for AsyncObjectGraphMetrics;
    v52[0] = v3;
    sub_19CE111BC((uint64_t)v52, (uint64_t)&type metadata for AsyncObjectGraphMetrics);
    sub_19CEC5640(v4, (_QWORD *)(v0 + 440), v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CF51558(v5, v7);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v6, v51);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (_OWORD *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 544);
  v11 = *(_QWORD *)(v0 + 536);
  sub_19CCC290C(v2, v10, &qword_1EE439AD8);
  sub_19CCF8C5C(v10, v11, &qword_1EE439AD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = **(void ***)(v0 + 536);
    v13 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *(_QWORD **)(v0 + 656);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v15 = sub_19CED656C(0, v15[2] + 1, 1, *(_QWORD **)(v0 + 656));
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CED656C((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v15[v17 + 4] = v12;

    v18 = 1;
  }
  else
  {
    sub_19CEB0A20(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 488));
    v18 = 0;
    v15 = *(_QWORD **)(v0 + 656);
  }
  v19 = *(_QWORD *)(v0 + 496);
  v20 = *(_QWORD *)(v0 + 504);
  v21 = *(_QWORD *)(v0 + 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v18, 1, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    v22 = *(_QWORD *)(v0 + 488);
    sub_19CCECFE4(*(_QWORD *)(v0 + 544), &qword_1EE439AD8);
    sub_19CCECFE4(v22, (uint64_t *)&unk_1EE439A60);
LABEL_27:
    *(_QWORD *)(v0 + 656) = v15;
    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 664) = v49;
    *v49 = v0;
    v49[1] = sub_19CF4FEDC;
    return (_OWORD *)sub_19CFDF9D4();
  }
  v23 = v0 + 312;
  v24 = *(uint64_t **)(v0 + 512);
  sub_19CEB0A20(*(_QWORD *)(v0 + 488), (uint64_t)v24);
  v25 = *v24;
  sub_19CD436B0((uint64_t)(v24 + 1), v0 + 312);
  v26 = *(_QWORD **)(v0 + 440);
  v27 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 448) = v26;
  v29 = sub_19CD4B638(v25);
  v30 = v26[2];
  v31 = (v28 & 1) == 0;
  v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
    __break(1u);
    goto LABEL_29;
  }
  v33 = v28;
  if (v26[3] >= v32)
  {
    if ((v27 & 1) == 0)
      sub_19CD43200();
  }
  else
  {
    sub_19CD4BA3C(v32, v27);
    v34 = sub_19CD4B638(v25);
    if ((v33 & 1) != (v35 & 1))
      return (_OWORD *)sub_19CFE082C();
    v29 = v34;
  }
  v36 = *(_QWORD **)(v0 + 448);
  if ((v33 & 1) != 0)
  {
    v37 = (_OWORD *)(v36[7] + 32 * v29);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    sub_19CD433C0((_OWORD *)(v0 + 312), v37);
    goto LABEL_23;
  }
  v36[(v29 >> 6) + 8] |= 1 << v29;
  *(_QWORD *)(v36[6] + 8 * v29) = v25;
  result = sub_19CD433C0((_OWORD *)(v0 + 312), (_OWORD *)(v36[7] + 32 * v29));
  v38 = v36[2];
  v39 = __OFADD__(v38, 1);
  v40 = v38 + 1;
  if (!v39)
  {
    v36[2] = v40;
LABEL_23:
    *(_QWORD *)(v0 + 440) = v36;
    swift_bridgeObjectRelease();
    v23 = sub_19CFE0A90();
    v25 = v41;
    sub_19CFDEA38();
    v1 = v42;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v26 = *(_QWORD **)(v0 + 672);
    if ((v43 & 1) != 0)
    {
LABEL_24:
      v45 = v26[2];
      v44 = v26[3];
      if (v45 >= v44 >> 1)
        v26 = sub_19CD177A0((_QWORD *)(v44 > 1), v45 + 1, 1, v26);
      v46 = *(_QWORD *)(v0 + 544);
      v47 = *(_QWORD *)(v0 + 512);
      v26[2] = v45 + 1;
      v48 = &v26[3 * v45];
      v48[4] = v23;
      v48[5] = v25;
      v48[6] = v1;
      sub_19CF53C00(v47);
      sub_19CCECFE4(v46, &qword_1EE439AD8);
      *(_QWORD *)(v0 + 672) = v26;
      goto LABEL_27;
    }
LABEL_29:
    v26 = sub_19CD177A0(0, v26[2] + 1, 1, v26);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF504A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[59] = a3;
  v4[60] = a4;
  v4[57] = a1;
  v4[58] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439A60);
  v4[61] = swift_task_alloc();
  v5 = type metadata accessor for _ResolvedDependency();
  v4[62] = v5;
  v4[63] = *(_QWORD *)(v5 - 8);
  v4[64] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  v4[65] = v6;
  v4[66] = *(_QWORD *)(v6 - 8);
  v4[67] = swift_task_alloc();
  v4[68] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AE0);
  v4[69] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AF0);
  v4[70] = v7;
  v4[71] = *(_QWORD *)(v7 - 8);
  v4[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v4[73] = swift_task_alloc();
  v4[74] = swift_task_alloc();
  v4[75] = swift_task_alloc();
  v4[76] = swift_task_alloc();
  v8 = sub_19CFDF1AC();
  v4[77] = v8;
  v4[78] = *(_QWORD *)(v8 - 8);
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF50638()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_signpost_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t);
  uint8_t *v10;
  os_signpost_id_t v11;
  uint8_t *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  _QWORD *v68;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  __int128 *v74;
  __int128 v75;
  _QWORD *v76;
  uint64_t *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  __int128 *v86;
  uint64_t v87;
  _OWORD *v88;
  unint64_t v89;
  void (*v90)(uint64_t);

  if (qword_1EE43B4E8 != -1)
LABEL_68:
    swift_once();
  v82 = (__int128 *)(v0 + 22);
  v1 = v0 + 27;
  v2 = (uint64_t)(v0 + 31);
  v74 = (__int128 *)(v0 + 12);
  v3 = sub_19CFDF1DC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  sub_19CFDF188();
  v4 = sub_19CFDF1C4();
  v5 = sub_19CFDFE84();
  v79 = (uint64_t)(v0 + 27);
  v80 = v0 + 31;
  v81 = (uint64_t)(v0 + 17);
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v6 = v0[79];
    v7 = v0[78];
    v8 = v0[77];
    v9 = *(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16);
    v9(v6, v0[80], v8);
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v4, v5, v11, "ResolveDependencies", "", v10, 2u);
    v12 = v10;
    v1 = v0 + 27;
    MEMORY[0x1A1ADBE9C](v12, -1, -1);

    v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v2 = (uint64_t)(v0 + 31);
    v13(v6, v8);
  }
  else
  {
    v14 = v0[78];

    v9 = *(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16);
  }
  v15 = v0 + 2;
  v16 = (uint64_t)(v0 + 7);
  v73 = v0 + 35;
  v72 = v0 + 43;
  v18 = v0[59];
  v17 = v0[60];
  v9(v0[79], v0[80], v0[77]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[81] = sub_19CFDF200();
  v83 = v17 + 64;
  v19 = -1 << *(_BYTE *)(v17 + 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & *(_QWORD *)(v17 + 64);
  v22 = (unint64_t)(63 - v19) >> 6;
  v87 = (uint64_t)(v0 + 8);
  v88 = v0 + 3;
  v70 = v22 - 1;
  swift_bridgeObjectRetain();
  v23 = 0;
  v84 = v22;
  v71 = v22 - 6;
  v77 = v0 + 2;
  v78 = v0;
  v76 = v0 + 7;
  v85 = v18 + 56;
  v86 = (__int128 *)(v0 + 53);
  while (1)
  {
    if (v21)
    {
      v25 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v89 = v23;
      v26 = v25 | (v23 << 6);
LABEL_13:
      *(_QWORD *)v16 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v26);
      sub_19CD436B0(*(_QWORD *)(v17 + 56) + 32 * v26, v87);
      goto LABEL_20;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v27 >= v84)
    {
      v29 = v23;
    }
    else
    {
      v28 = *(_QWORD *)(v83 + 8 * v27);
      if (v28)
        goto LABEL_17;
      v49 = v23 + 2;
      v29 = v23 + 1;
      if ((uint64_t)(v23 + 2) < v84)
      {
        v28 = *(_QWORD *)(v83 + 8 * v49);
        if (v28)
          goto LABEL_35;
        v29 = v23 + 2;
        if ((uint64_t)(v23 + 3) < v84)
        {
          v28 = *(_QWORD *)(v83 + 8 * (v23 + 3));
          if (v28)
          {
            v27 = v23 + 3;
            goto LABEL_17;
          }
          v49 = v23 + 4;
          v29 = v23 + 3;
          if ((uint64_t)(v23 + 4) < v84)
          {
            v28 = *(_QWORD *)(v83 + 8 * v49);
            if (v28)
            {
LABEL_35:
              v27 = v49;
LABEL_17:
              v21 = (v28 - 1) & v28;
              v26 = __clz(__rbit64(v28)) + (v27 << 6);
              v89 = v27;
              goto LABEL_13;
            }
            v27 = v23 + 5;
            v29 = v23 + 4;
            if ((uint64_t)(v23 + 5) < v84)
            {
              v28 = *(_QWORD *)(v83 + 8 * v27);
              if (v28)
                goto LABEL_17;
              while (v71 != v23)
              {
                v28 = *(_QWORD *)(v17 + 112 + 8 * v23++);
                if (v28)
                {
                  v27 = v23 + 5;
                  goto LABEL_17;
                }
              }
              v29 = v70;
            }
          }
        }
      }
    }
    v21 = 0;
    *(_QWORD *)(v16 + 32) = 0;
    v89 = v29;
    *(_OWORD *)v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
LABEL_20:
    sub_19CCC290C(v16, (uint64_t)v15, &qword_1ECEB04E0);
    v30 = *v15;
    if (!*v15)
      break;
    sub_19CD433C0(v88, v1);
    if (!*(_QWORD *)(v18 + 16))
      goto LABEL_9;
    sub_19CFE08C8();
    sub_19CFE08D4();
    v31 = sub_19CFE0910();
    v32 = -1 << *(_BYTE *)(v18 + 32);
    v33 = v31 & ~v32;
    if (((*(_QWORD *)(v85 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
      goto LABEL_9;
    v34 = *(_QWORD *)(v18 + 48);
    if (*(_QWORD *)(v34 + 8 * v33) != v30)
    {
      v35 = ~v32;
      while (1)
      {
        v33 = (v33 + 1) & v35;
        if (((*(_QWORD *)(v85 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
          break;
        if (*(_QWORD *)(v34 + 8 * v33) == v30)
          goto LABEL_27;
      }
LABEL_9:
      v24 = (uint64_t)v1;
      goto LABEL_10;
    }
LABEL_27:
    sub_19CD436B0((uint64_t)v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AC8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v36 = v0[76];
      v37 = v0[75];
      sub_19CCD14C4(v82, v81);
      v38 = sub_19CFDFA10();
      v39 = *(_QWORD *)(v38 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v36, 1, 1, v38);
      sub_19CCD5B84(v81, (uint64_t)v74);
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = 0;
      v40[3] = 0;
      v40[4] = v30;
      sub_19CCD14C4(v74, (uint64_t)(v40 + 5));
      sub_19CCF8C5C(v36, v37, (uint64_t *)&unk_1ECEB29B0);
      v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
      v42 = v0[75];
      if (v41 == 1)
      {
        sub_19CCECFE4(v0[75], (uint64_t *)&unk_1ECEB29B0);
      }
      else
      {
        sub_19CFDFA04();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v38);
      }
      v0 = v78;
      v2 = (uint64_t)v80;
      if (v40[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v50 = sub_19CFDF998();
        v52 = v51;
        swift_unknownObjectRelease();
      }
      else
      {
        v50 = 0;
        v52 = 0;
      }
      v53 = *(_QWORD *)v78[58];
      v54 = swift_allocObject();
      *(_QWORD *)(v54 + 16) = &unk_1EE4428D0;
      *(_QWORD *)(v54 + 24) = v40;
      v55 = (_QWORD *)(v52 | v50);
      if (v52 | v50)
      {
        v55 = v73;
        *v73 = 0;
        v73[1] = 0;
        v78[37] = v50;
        v78[38] = v52;
      }
      v1 = (_OWORD *)v79;
      v15 = v77;
      v56 = v78[76];
      v78[50] = 1;
      v78[51] = v55;
      v78[52] = v53;
      swift_task_create();
      swift_release();
      sub_19CCECFE4(v56, (uint64_t *)&unk_1ECEB29B0);
      __swift_destroy_boxed_opaque_existential_1Tm(v81);
      __swift_destroy_boxed_opaque_existential_1Tm(v79);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
        v24 = v2;
        goto LABEL_10;
      }
      v43 = v0[74];
      v44 = v0[73];
      v45 = sub_19CFDFA10();
      v46 = *(_QWORD *)(v45 - 8);
      v75 = *v86;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v43, 1, 1, v45);
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = 0;
      *(_QWORD *)(v47 + 24) = 0;
      *(_QWORD *)(v47 + 32) = v30;
      *(_OWORD *)(v47 + 40) = v75;
      sub_19CCF8C5C(v43, v44, (uint64_t *)&unk_1ECEB29B0);
      LODWORD(v44) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
      swift_unknownObjectRetain();
      v48 = v0[73];
      if ((_DWORD)v44 == 1)
      {
        sub_19CCECFE4(v0[73], (uint64_t *)&unk_1ECEB29B0);
      }
      else
      {
        sub_19CFDFA04();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v45);
      }
      v0 = v78;
      v2 = (uint64_t)v80;
      if (*(_QWORD *)(v47 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v57 = sub_19CFDF998();
        v59 = v58;
        swift_unknownObjectRelease();
      }
      else
      {
        v57 = 0;
        v59 = 0;
      }
      v60 = *(_QWORD *)v78[58];
      v61 = swift_allocObject();
      *(_QWORD *)(v61 + 16) = &unk_1EE4428B8;
      *(_QWORD *)(v61 + 24) = v47;
      v62 = (_QWORD *)(v59 | v57);
      if (v59 | v57)
      {
        v62 = v72;
        *v72 = 0;
        v72[1] = 0;
        v78[45] = v57;
        v78[46] = v59;
      }
      v1 = (_OWORD *)v79;
      v63 = v78[74];
      v78[47] = 1;
      v78[48] = v62;
      v78[49] = v60;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      sub_19CCECFE4(v63, (uint64_t *)&unk_1ECEB29B0);
      __swift_destroy_boxed_opaque_existential_1Tm(v79);
      v15 = v77;
    }
    v16 = (uint64_t)v76;
    v24 = v2;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v24);
    v23 = v89;
  }
  v64 = v0[60];
  swift_release();
  v0[55] = v64;
  v65 = swift_bridgeObjectRetain();
  sub_19CD4A298(v65, &v90);
  v66 = MEMORY[0x1E0DEE9D8];
  if (v90)
    v67 = v90;
  else
    v67 = (void (*)(uint64_t))MEMORY[0x1E0DEE9D8];
  sub_19CFDF9C8();
  v0[84] = v67;
  v0[82] = v66;
  v68 = (_QWORD *)swift_task_alloc();
  v0[83] = v68;
  *v68 = v0;
  v68[1] = sub_19CF50F94;
  return sub_19CFDF9D4();
}

uint64_t sub_19CF50F94()
{
  swift_task_dealloc();
  return swift_task_switch();
}

_OWORD *sub_19CF50FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];

  v2 = *(_QWORD *)(v0 + 552);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 528) + 48))(v2, 1, *(_QWORD *)(v0 + 520)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 672);
    v4 = *(_QWORD *)(v0 + 656);
    v5 = *(_QWORD *)(v0 + 648);
    v6 = *(_QWORD *)(v0 + 640);
    v50 = *(_QWORD *)(v0 + 624);
    v51 = *(_QWORD *)(v0 + 616);
    v7 = *(_QWORD *)(v0 + 472);
    v8 = *(_QWORD *)(v0 + 456);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 568) + 8))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 560));
    v52[3] = &type metadata for AsyncObjectGraphMetrics;
    v52[0] = v3;
    sub_19CE111BC((uint64_t)v52, (uint64_t)&type metadata for AsyncObjectGraphMetrics);
    sub_19CEC5640(v4, (_QWORD *)(v0 + 440), v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CF51558(v5, v7);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v6, v51);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (_OWORD *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 544);
  v11 = *(_QWORD *)(v0 + 536);
  sub_19CCC290C(v2, v10, &qword_1EE439AD8);
  sub_19CCF8C5C(v10, v11, &qword_1EE439AD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = **(void ***)(v0 + 536);
    v13 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *(_QWORD **)(v0 + 656);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v15 = sub_19CED656C(0, v15[2] + 1, 1, *(_QWORD **)(v0 + 656));
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CED656C((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v15[v17 + 4] = v12;

    v18 = 1;
  }
  else
  {
    sub_19CEB0A20(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 488));
    v18 = 0;
    v15 = *(_QWORD **)(v0 + 656);
  }
  v19 = *(_QWORD *)(v0 + 496);
  v20 = *(_QWORD *)(v0 + 504);
  v21 = *(_QWORD *)(v0 + 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v18, 1, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    v22 = *(_QWORD *)(v0 + 488);
    sub_19CCECFE4(*(_QWORD *)(v0 + 544), &qword_1EE439AD8);
    sub_19CCECFE4(v22, (uint64_t *)&unk_1EE439A60);
LABEL_27:
    *(_QWORD *)(v0 + 656) = v15;
    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 664) = v49;
    *v49 = v0;
    v49[1] = sub_19CF50F94;
    return (_OWORD *)sub_19CFDF9D4();
  }
  v23 = v0 + 312;
  v24 = *(uint64_t **)(v0 + 512);
  sub_19CEB0A20(*(_QWORD *)(v0 + 488), (uint64_t)v24);
  v25 = *v24;
  sub_19CD436B0((uint64_t)(v24 + 1), v0 + 312);
  v26 = *(_QWORD **)(v0 + 440);
  v27 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 448) = v26;
  v29 = sub_19CD4B638(v25);
  v30 = v26[2];
  v31 = (v28 & 1) == 0;
  v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
    __break(1u);
    goto LABEL_29;
  }
  v33 = v28;
  if (v26[3] >= v32)
  {
    if ((v27 & 1) == 0)
      sub_19CD43200();
  }
  else
  {
    sub_19CD4BA3C(v32, v27);
    v34 = sub_19CD4B638(v25);
    if ((v33 & 1) != (v35 & 1))
      return (_OWORD *)sub_19CFE082C();
    v29 = v34;
  }
  v36 = *(_QWORD **)(v0 + 448);
  if ((v33 & 1) != 0)
  {
    v37 = (_OWORD *)(v36[7] + 32 * v29);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    sub_19CD433C0((_OWORD *)(v0 + 312), v37);
    goto LABEL_23;
  }
  v36[(v29 >> 6) + 8] |= 1 << v29;
  *(_QWORD *)(v36[6] + 8 * v29) = v25;
  result = sub_19CD433C0((_OWORD *)(v0 + 312), (_OWORD *)(v36[7] + 32 * v29));
  v38 = v36[2];
  v39 = __OFADD__(v38, 1);
  v40 = v38 + 1;
  if (!v39)
  {
    v36[2] = v40;
LABEL_23:
    *(_QWORD *)(v0 + 440) = v36;
    swift_bridgeObjectRelease();
    v23 = sub_19CFE0A90();
    v25 = v41;
    sub_19CFDEA38();
    v1 = v42;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v26 = *(_QWORD **)(v0 + 672);
    if ((v43 & 1) != 0)
    {
LABEL_24:
      v45 = v26[2];
      v44 = v26[3];
      if (v45 >= v44 >> 1)
        v26 = sub_19CD177A0((_QWORD *)(v44 > 1), v45 + 1, 1, v26);
      v46 = *(_QWORD *)(v0 + 544);
      v47 = *(_QWORD *)(v0 + 512);
      v26[2] = v45 + 1;
      v48 = &v26[3 * v45];
      v48[4] = v23;
      v48[5] = v25;
      v48[6] = v1;
      sub_19CF53C00(v47);
      sub_19CCECFE4(v46, &qword_1EE439AD8);
      *(_QWORD *)(v0 + 672) = v26;
      goto LABEL_27;
    }
LABEL_29:
    v26 = sub_19CD177A0(0, v26[2] + 1, 1, v26);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF51558(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  NSObject *v17;
  char v18;
  const char *v19;
  uint64_t v21;
  uint64_t v22;
  os_signpost_id_t v23;
  void (*v24)(_BYTE *, uint64_t);
  _BYTE v25[12];
  int v26;
  uint64_t v27;
  uint64_t v28;

  v3 = sub_19CFDF1E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_19CFDF1AC();
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = &v25[-v14];
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v16 = sub_19CFDF1DC();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EE465C48);
  swift_bridgeObjectRetain();
  v17 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v26 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v4 + 88))(v7, v3) == *MEMORY[0x1E0DF2190])
    {
      v18 = 0;
      v19 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
      v19 = "count=%ld";
      v18 = 1;
    }
    v21 = v27;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 16))(v11, v15, v8);
    v22 = swift_slowAlloc();
    *(_BYTE *)v22 = 0;
    *(_BYTE *)(v22 + 1) = v18;
    *(_WORD *)(v22 + 2) = 2048;
    v28 = *(_QWORD *)(a2 + 16);
    sub_19CFDFFC8();
    swift_bridgeObjectRelease();
    v23 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v17, (os_signpost_type_t)v26, v23, "ResolveDependencies", v19, (uint8_t *)v22, 0xCu);
    MEMORY[0x1A1ADBE9C](v22, -1, -1);

    v24 = *(void (**)(_BYTE *, uint64_t))(v21 + 8);
    v24(v15, v8);
    return ((uint64_t (*)(_BYTE *, uint64_t))v24)(v11, v8);
  }
  else
  {
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8))(v15, v8);
  }
}

uint64_t sub_19CF517F4()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;

  sub_19CD249F0();
  v2 = sub_19CFDF3F8();
  sub_19CD23D8C(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for BaseObjectGraph();
  v0 = (_QWORD *)swift_allocObject();
  v0[3] = 0xD00000000000001BLL;
  v0[4] = 0x800000019D077D10;
  v0[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3020);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1ECEB1320 = result;
  return result;
}

uint64_t sub_19CF518B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF518D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF518DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF51938()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_19CF51980())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *sub_19CF519BC()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_19CDFDD88(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19CF519F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v2 = *v1;
  v3 = v1[2];
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10[0] = v3;
  sub_19CEB0554(v4, (uint64_t)sub_19CD06024, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v10);
  v6 = v10[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = v1[4];
  v11 = v1[3];
  v12 = v7;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  v8 = v11;
  v11 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v2 + 96))(v8, v12, &v11);
}

unint64_t sub_19CF51B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17[6];
  unint64_t v18;
  unint64_t v19;

  v17[3] = 0;
  v17[4] = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000015;
  v17[1] = 0x800000019D06DAA0;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v18 = 0xD000000000000015;
  v19 = 0x800000019D06DAA0;
  v17[0] = *(_QWORD *)(v2 + 16);
  if (DependencyDictionary.types<A>(compatibleWith:)(a1, a2)[2])
  {
    v17[2] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDD0);
    sub_19CDB75C4();
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, " Did you mean ");
    HIBYTE(v17[1]) = -18;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = swift_bridgeObjectRetain();
    v6 = sub_19CDFDD88(v5);
    swift_bridgeObjectRelease();
    v17[0] = (uint64_t)v6;
    swift_retain();
    sub_19CF52948(v17);
    swift_release();
    v7 = *(_QWORD *)(v17[0] + 16);
    if (v7)
    {
      v16 = MEMORY[0x1E0DEE9D8];
      sub_19CD3C8F8(0, v7, 0);
      v8 = 0;
      v9 = v16;
      do
      {
        v17[0] = 60;
        v17[1] = 0xE100000000000000;
        sub_19CFE0A90();
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CFDF698();
        v10 = v17[0];
        v11 = v17[1];
        v13 = *(_QWORD *)(v16 + 16);
        v12 = *(_QWORD *)(v16 + 24);
        if (v13 >= v12 >> 1)
          sub_19CD3C8F8(v12 > 1, v13 + 1, 1);
        ++v8;
        *(_QWORD *)(v16 + 16) = v13 + 1;
        v14 = v16 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v11;
      }
      while (v7 != v8);
      swift_release();
    }
    else
    {
      swift_release();
      v9 = MEMORY[0x1E0DEE9D8];
    }
    v17[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD05BA0((unint64_t *)&qword_1ECEB32D8, &qword_1ECEB32D0, MEMORY[0x1E0DEAF20]);
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, " Candidates: ");
    HIWORD(v17[1]) = -4864;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_19CF51F40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  result = sub_19CFDF698();
  *a1 = 60;
  a1[1] = 0xE100000000000000;
  return result;
}

void sub_19CF51FB0(uint64_t a1, uint64_t a2)
{
  sub_19CF51B18(a1, a2);
  sub_19CFE0340();
  __break(1u);
}

void BaseObjectGraph.required<A>(_:)()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CF52044()
{
  uint64_t v1;

  v1 = sub_19CFE0A90();
  sub_19CFDF698();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437320);
  sub_19CD05BA0(&qword_1EE437318, &qword_1EE437320, MEMORY[0x1E0DEC858]);
  sub_19CD41144();
  sub_19CFDF7DC();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1;
}

uint64_t sub_19CF52178()
{
  return sub_19CF52044();
}

uint64_t BaseObjectGraph._dependencyPersonality<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_19CEAEC08(a1, a2, a3);
}

uint64_t BaseObjectGraph.dependencies<A>(compatibleWith:)()
{
  return sub_19CEAF160();
}

uint64_t sub_19CF521F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF52214()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BaseObjectGraph._withDependenciesResolved<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[7] = *v3;
  v5 = sub_19CFE0130();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_19CFE02C8();
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF522D0()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t *v8;

  v1 = v0[5].i64[1];
  v3 = v0[4].i64[1];
  v2 = v0[5].i64[0];
  v4 = v0[4].i64[0];
  v5 = v0[3].i64[0];
  sub_19CFDF794();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC330], v4);
  sub_19CFE0400();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_19CD249F0();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC858], v1);
  v6 = sub_19CFDFBF0();
  v0[6].i64[1] = v6;
  v7 = swift_task_alloc();
  v0[7].i64[0] = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  v8 = (int8x16_t *)swift_task_alloc();
  v0[7].i64[1] = (uint64_t)v8;
  v8->i64[0] = (uint64_t)v0;
  v8->i64[1] = (uint64_t)sub_19CF5241C;
  v8[3] = vextq_s8(v0[3], v0[3], 8uLL);
  v8[2].i64[0] = (uint64_t)&unk_1EE442890;
  v8[2].i64[1] = v7;
  v8[1].i64[1] = (uint64_t)v0[1].i64;
  return swift_task_switch();
}

uint64_t sub_19CF5241C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_19CF52490()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_19CF524D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF52534(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = *a3;
  return swift_task_switch();
}

uint64_t sub_19CF52558()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[9];
  v1 = (_QWORD *)v0[10];
  swift_beginAccess();
  v0[12] = v1[3];
  v0[13] = v1[4];
  v3 = v1[2];
  v0[14] = v3;
  v0[7] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  v4 = swift_task_alloc();
  v0[15] = v4;
  *(_QWORD *)(v4 + 16) = v0 + 7;
  *(_QWORD *)(v4 + 24) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440BF0);
  v5 = (_QWORD *)swift_task_alloc();
  v0[16] = v5;
  *v5 = v0;
  v5[1] = sub_19CF52658;
  return sub_19CFE0208();
}

uint64_t sub_19CF52658()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF526B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 104);
  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD **)(v0 + 64);
    swift_bridgeObjectRelease();
    v7 = v1;
    *v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 96))(v3, v2, &v7);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5275C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;

  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *a2;
  return swift_task_switch();
}

uint64_t sub_19CF5277C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)v0[8];
  swift_beginAccess();
  v0[10] = v1[3];
  v0[11] = v1[4];
  v0[6] = v1[2];
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_19CF52810;
  return sub_19CEAFF0C((uint64_t)(v0 + 5));
}

uint64_t sub_19CF52810()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF5287C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD **)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  *v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v3 + 96))(v1, v2, &v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF528D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF528E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[7] = a1;
  v4[8] = v1;
  v4[9] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF52948(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CE7411C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_19CF52B9C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19CF529B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD **)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_19CD579FC;
  v6[9] = v5;
  v6[10] = v4;
  v6[8] = a1;
  v6[11] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CF52A28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for BaseObjectGraph()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseObjectGraph.__allocating_init(name:dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BaseObjectGraph.performAsCurrent<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BaseObjectGraph.performAsCurrent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 112)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 112));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_19CCBE344;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BaseObjectGraph.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of BaseObjectGraph.name.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of BaseObjectGraph.availableCandidates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of BaseObjectGraph.adding(uniqueDependenciesOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of BaseObjectGraph.subtracting<A>(allDependenciesExcept:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of BaseObjectGraph.errorDescription<A>(forNoMemberSatisfying:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of BaseObjectGraph.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_19CF52B9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;

  v2 = v1;
  v4 = a1[1];
  result = sub_19CFE0580();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_152;
    if (v4)
      return sub_19CF53360(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_160;
  v107 = result;
  v103 = a1;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    v111 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v95 = v11;
      v106 = v9;
      if (v12 >= 2)
      {
        v96 = *v103;
        do
        {
          v97 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v96)
            goto LABEL_159;
          v98 = v95;
          v99 = *(_QWORD *)&v95[16 * v97 + 32];
          v100 = *(_QWORD *)&v95[16 * v12 + 24];
          sub_19CF5346C((char *)(v96 + 8 * v99), (char *)(v96 + 8 * *(_QWORD *)&v95[16 * v12 + 16]), v96 + 8 * v100, v111);
          if (v2)
            break;
          if (v100 < v99)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_19CF53AFC((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_149;
          v101 = &v98[16 * v97 + 32];
          *(_QWORD *)v101 = v99;
          *((_QWORD *)v101 + 1) = v100;
          v102 = *((_QWORD *)v98 + 2);
          if (v12 > v102)
            goto LABEL_150;
          memmove(&v98[16 * v12 + 16], &v98[16 * v12 + 32], 16 * (v102 - v12));
          v95 = v98;
          *((_QWORD *)v98 + 2) = v102 - 1;
          v12 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x1E0DEE9D8];
    v113 = v1;
  }
  else
  {
    v113 = v1;
    v7 = v6 >> 1;
    v8 = sub_19CFDF8C0();
    *(_QWORD *)(v8 + 16) = v7;
    v106 = v8;
    v111 = (char *)(v8 + 32);
  }
  v10 = 0;
  v104 = *a1 + 16;
  v112 = *a1;
  v105 = *a1 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v110 = v4;
  while (2)
  {
    v13 = v10++;
    v109 = v13;
    if (v10 >= v4)
      goto LABEL_45;
    v14 = sub_19CFE0A90();
    v16 = v15;
    v18 = 0;
    if (v14 != sub_19CFE0A90() || v16 != v17)
      v18 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v13 + 2;
    v4 = v110;
    if (v13 + 2 >= v110)
      goto LABEL_36;
    v20 = v104 + 8 * v13;
    while (1)
    {
      v22 = sub_19CFE0A90();
      v24 = v23;
      if (v22 == sub_19CFE0A90() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
        if ((v18 & 1) != 0)
        {
          v13 = v109;
          v4 = v110;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v21 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v18 ^ v21) & 1) != 0)
        break;
LABEL_25:
      ++v10;
      v20 += 8;
      v4 = v110;
      if (v110 == v10)
      {
        v10 = v110;
        goto LABEL_35;
      }
    }
    v4 = v110;
LABEL_35:
    v13 = v109;
LABEL_36:
    if ((v18 & 1) != 0)
    {
LABEL_37:
      if (v10 < v13)
        goto LABEL_153;
      if (v13 < v10)
      {
        v27 = (uint64_t *)(v105 + 8 * v10);
        v28 = v10;
        v29 = v13;
        v30 = (uint64_t *)(v112 + 8 * v13);
        do
        {
          if (v29 != --v28)
          {
            if (!v112)
              goto LABEL_158;
            v31 = *v30;
            *v30 = *v27;
            *v27 = v31;
          }
          ++v29;
          --v27;
          ++v30;
        }
        while (v29 < v28);
      }
    }
LABEL_45:
    if (v10 >= v4)
      goto LABEL_54;
    if (__OFSUB__(v10, v13))
      goto LABEL_151;
    if (v10 - v13 >= v107)
    {
LABEL_54:
      v33 = v112;
      if (v10 < v13)
        goto LABEL_146;
      goto LABEL_55;
    }
    if (__OFADD__(v13, v107))
      goto LABEL_154;
    if (v13 + v107 >= v4)
      v32 = v4;
    else
      v32 = v13 + v107;
    if (v32 >= v13)
    {
      if (v10 == v32)
        goto LABEL_54;
      v85 = (uint64_t *)(v105 + 8 * v10);
      v33 = v112;
      v108 = v32;
      do
      {
        v86 = v13;
        v87 = v85;
        while (1)
        {
          v88 = sub_19CFE0A90();
          v90 = v89;
          if (v88 == sub_19CFE0A90() && v90 == v91)
            break;
          v93 = sub_19CFE06A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v93 & 1) == 0)
            goto LABEL_103;
          if (!v112)
            goto LABEL_156;
          v94 = *v87;
          *v87 = v87[1];
          v87[1] = v94;
          --v87;
          if (v10 == ++v86)
            goto LABEL_103;
        }
        swift_bridgeObjectRelease_n();
LABEL_103:
        ++v10;
        ++v85;
        v13 = v109;
      }
      while (v10 != v108);
      v10 = v108;
      if (v108 < v109)
        goto LABEL_146;
LABEL_55:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_19CF537A8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v35 = *((_QWORD *)v11 + 2);
      v34 = *((_QWORD *)v11 + 3);
      v12 = v35 + 1;
      if (v35 >= v34 >> 1)
        v11 = sub_19CF537A8((char *)(v34 > 1), v35 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v12;
      v36 = v11 + 32;
      v37 = &v11[16 * v35 + 32];
      *(_QWORD *)v37 = v13;
      *((_QWORD *)v37 + 1) = v10;
      if (v35)
      {
        while (2)
        {
          v38 = v12 - 1;
          if (v12 >= 4)
          {
            v43 = &v36[16 * v12];
            v44 = *((_QWORD *)v43 - 8);
            v45 = *((_QWORD *)v43 - 7);
            v49 = __OFSUB__(v45, v44);
            v46 = v45 - v44;
            if (v49)
              goto LABEL_135;
            v48 = *((_QWORD *)v43 - 6);
            v47 = *((_QWORD *)v43 - 5);
            v49 = __OFSUB__(v47, v48);
            v41 = v47 - v48;
            v42 = v49;
            if (v49)
              goto LABEL_136;
            v50 = v12 - 2;
            v51 = &v36[16 * v12 - 32];
            v53 = *(_QWORD *)v51;
            v52 = *((_QWORD *)v51 + 1);
            v49 = __OFSUB__(v52, v53);
            v54 = v52 - v53;
            if (v49)
              goto LABEL_138;
            v49 = __OFADD__(v41, v54);
            v55 = v41 + v54;
            if (v49)
              goto LABEL_141;
            if (v55 >= v46)
            {
              v73 = &v36[16 * v38];
              v75 = *(_QWORD *)v73;
              v74 = *((_QWORD *)v73 + 1);
              v49 = __OFSUB__(v74, v75);
              v76 = v74 - v75;
              if (v49)
                goto LABEL_145;
              v66 = v41 < v76;
            }
            else
            {
LABEL_73:
              if ((v42 & 1) != 0)
                goto LABEL_137;
              v50 = v12 - 2;
              v56 = &v36[16 * v12 - 32];
              v58 = *(_QWORD *)v56;
              v57 = *((_QWORD *)v56 + 1);
              v59 = __OFSUB__(v57, v58);
              v60 = v57 - v58;
              v61 = v59;
              if (v59)
                goto LABEL_140;
              v62 = &v36[16 * v38];
              v64 = *(_QWORD *)v62;
              v63 = *((_QWORD *)v62 + 1);
              v49 = __OFSUB__(v63, v64);
              v65 = v63 - v64;
              if (v49)
                goto LABEL_143;
              if (__OFADD__(v60, v65))
                goto LABEL_144;
              if (v60 + v65 < v41)
                goto LABEL_85;
              v66 = v41 < v65;
            }
            if (v66)
              v38 = v50;
          }
          else
          {
            if (v12 == 3)
            {
              v40 = *((_QWORD *)v11 + 4);
              v39 = *((_QWORD *)v11 + 5);
              v49 = __OFSUB__(v39, v40);
              v41 = v39 - v40;
              v42 = v49;
              goto LABEL_73;
            }
            v67 = *((_QWORD *)v11 + 4);
            v68 = *((_QWORD *)v11 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
LABEL_85:
            if ((v61 & 1) != 0)
              goto LABEL_139;
            v69 = &v36[16 * v38];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v49 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v49)
              goto LABEL_142;
            if (v72 < v60)
              goto LABEL_15;
          }
          v77 = v38 - 1;
          if (v38 - 1 >= v12)
          {
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
          v78 = v33;
          if (!v33)
            goto LABEL_157;
          v79 = v11;
          v80 = &v36[16 * v77];
          v81 = *(_QWORD *)v80;
          v82 = &v36[16 * v38];
          v83 = *((_QWORD *)v82 + 1);
          sub_19CF5346C((char *)(v78 + 8 * *(_QWORD *)v80), (char *)(v78 + 8 * *(_QWORD *)v82), v78 + 8 * v83, v111);
          if (v113)
            goto LABEL_115;
          if (v83 < v81)
            goto LABEL_132;
          if (v38 > *((_QWORD *)v79 + 2))
            goto LABEL_133;
          *(_QWORD *)v80 = v81;
          *(_QWORD *)&v36[16 * v77 + 8] = v83;
          v84 = *((_QWORD *)v79 + 2);
          if (v38 >= v84)
            goto LABEL_134;
          v11 = v79;
          v12 = v84 - 1;
          memmove(&v36[16 * v38], v82 + 16, 16 * (v84 - 1 - v38));
          *((_QWORD *)v79 + 2) = v84 - 1;
          v33 = v112;
          if (v84 <= 2)
            goto LABEL_15;
          continue;
        }
      }
      v12 = 1;
LABEL_15:
      v4 = v110;
      if (v10 >= v110)
      {
        v2 = v113;
        v9 = v106;
        goto LABEL_118;
      }
      continue;
    }
    break;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_19CFE0334();
  __break(1u);
  return result;
}

uint64_t sub_19CF53360(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_6:
    v8 = v17;
    v9 = (uint64_t *)v7;
    while (1)
    {
      v10 = sub_19CFE0A90();
      v12 = v11;
      if (v10 == sub_19CFE0A90() && v12 == v13)
      {
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v15 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_5;
      if (!v6)
        break;
      v16 = *v9;
      result = v9[1];
      *v9 = result;
      v9[1] = v16;
      --v9;
      if (v4 == ++v8)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19CF5346C(char *a1, char *__src, unint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;

  v36 = a1;
  v5 = __src;
  v6 = __src - a1;
  v7 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v35 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_54;
    if (a4 != __src || &__src[8 * v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v21 = &a4[8 * v11];
    v34 = v21;
    v36 = v5;
    if (a1 >= v5 || v9 < 8)
    {
LABEL_53:
      sub_19CF53948((void **)&v36, (const void **)&v35, &v34);
      return 1;
    }
    v22 = (char *)(a3 - 8);
    v23 = v5;
    while (1)
    {
      v24 = v22 + 8;
      v23 -= 8;
      v25 = sub_19CFE0A90();
      v27 = v26;
      if (v25 == sub_19CFE0A90() && v27 == v28)
        break;
      v30 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
        goto LABEL_46;
      if (v24 != v5 || v22 >= v5)
        *(_QWORD *)v22 = *(_QWORD *)v23;
      v36 = v23;
LABEL_51:
      if (v23 > a1)
      {
        v22 -= 8;
        v5 = v23;
        if (v21 > a4)
          continue;
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    v34 = v21 - 8;
    if (v24 < v21 || v22 >= v21 || v24 != v21)
      *(_QWORD *)v22 = *((_QWORD *)v21 - 1);
    v23 = v5;
    v21 -= 8;
    goto LABEL_51;
  }
  if (v6 >= -7)
  {
    if (a4 != a1 || &a1[8 * v8] <= a4)
      memmove(a4, a1, 8 * v8);
    v34 = &a4[8 * v8];
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v12 = a4;
      v13 = a1;
      while (1)
      {
        v14 = sub_19CFE0A90();
        v16 = v15;
        if (v14 == sub_19CFE0A90() && v16 == v17)
          break;
        v19 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          goto LABEL_23;
        v20 = v5 + 8;
        if (v13 < v5 || v13 >= v20 || v13 != v5)
          *(_QWORD *)v13 = *(_QWORD *)v5;
LABEL_26:
        v13 += 8;
        if (v12 < &a4[8 * v8])
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v36 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12)
        *(_QWORD *)v13 = *(_QWORD *)v12;
      v12 += 8;
      v35 = v12;
      v20 = v5;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

char *sub_19CF537A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE437508);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_19CF538A0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    result = (char *)sub_19CFE03C4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

char *sub_19CF53948(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_19CFE03C4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_19CF539F0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_19CFDEF84();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_19CFE03C4();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_19CF53AFC(uint64_t a1)
{
  return sub_19CF537A8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19CF53B10(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CD579FC;
  return sub_19CF504A0(a1, a2, v8, a4);
}

uint64_t sub_19CF53B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;

  v7 = *(uint64_t **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1EE4428A0 + dword_1EE4428A0))(a1, a2, v7, v6);
}

uint64_t sub_19CF53C00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _ResolvedDependency();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CF53C40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return sub_19CEAF884(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF53CC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF53CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE4428C0 + dword_1EE4428C0))(a1, v4);
}

uint64_t sub_19CF53D58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19CD579FC;
  return sub_19CEAF724(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_19CF53DD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return sub_19CEAF884(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t OpenIntentModel.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = MEMORY[0x1E0DEE9E0];
  v7 = (char *)a5 + *(int *)(type metadata accessor for OpenIntentModel(0, a2, a3, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v7, a1, a2);
}

uint64_t type metadata accessor for OpenIntentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OpenIntentModel);
}

uint64_t OpenIntentModel.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t OpenIntentModel.kind.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t OpenIntentModel.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2 + *(int *)(v8 + 36), v3, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t OpenIntentModel<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;

  v35 = a4;
  v7 = a3;
  v8 = a1;
  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v39 = *v13;
  v34 = v39;
  swift_bridgeObjectRetain();
  sub_19CD143A0(0xD000000000000027, 0x800000019D06E560, v42);
  sub_19CCECFE4((uint64_t)v42, &qword_1ECEB3370);
  v14 = v39;
  sub_19CD3E448(v8, (uint64_t)v42);
  JSONObject.dictionary.getter((uint64_t)&v36);
  if (*((_QWORD *)&v37 + 1))
  {
    v32[1] = v32;
    v39 = v36;
    v40 = v37;
    v41 = v38;
    MEMORY[0x1E0C80A78](v15, v16);
    v32[-2] = v14;
    v33 = v8;
    v17 = v7;
    v18 = v12;
    v19 = v10;
    v20 = a5;
    v21 = a6;
    v22 = *((_QWORD *)&v40 + 1);
    v23 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v24 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t))(v23 + 48);
    v25 = v43;
    v26 = v23;
    a6 = v21;
    a5 = v20;
    v10 = v19;
    v12 = v18;
    v7 = v17;
    v8 = v33;
    v27 = v24(sub_19CDD5B00, &v32[-4], MEMORY[0x1E0DEA968], &type metadata for ScalarDictionary.Value, MEMORY[0x1E0DEA978], v22, v26);
    v43 = v25;
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v42);
    sub_19CDC6248((uint64_t)&v39);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v36, &qword_1EE43C1C8);
    sub_19CD3E3F8((uint64_t)v42);
    v27 = MEMORY[0x1E0DEE9E0];
  }
  *a6 = v27;
  sub_19CD3E448(v8, (uint64_t)v42);
  *(_QWORD *)&v39 = v34;
  v28 = v43;
  (*(void (**)(_OWORD *, __int128 *, uint64_t))(v35 + 8))(v42, &v39, v7);
  sub_19CD3E3F8(v8);
  if (v28)
    return swift_bridgeObjectRelease();
  v31 = type metadata accessor for OpenIntentModel(0, v7, a5, v29);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))((char *)a6 + *(int *)(v31 + 36), v12, v7);
}

uint64_t sub_19CF5425C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return OpenIntentModel<>.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), *(_QWORD *)(a3 + 24), a5);
}

void OpenIntentModel<>.jsRepresentation(in:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *v4;
  swift_bridgeObjectRetain();
  ScalarDictionary.jsRepresentation(in:)(a1, v22);
  if (v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = a4;
    v11 = v23;
    v10 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v11, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    swift_bridgeObjectRelease();
    v13 = (void *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a3 + 8) + 16))(a1, *(_QWORD *)(a2 + 16));
    JSValue.propertyNames.getter();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        v17 = (void *)sub_19CFDF554();
        v18 = objc_msgSend(v12, sel_valueForProperty_, v17);

        if (!v18)
          break;
        v16 += 16;
        v19 = v18;
        v20 = (void *)sub_19CFDF554();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setValue_forProperty_, v19, v20);

        if (!--v15)
          goto LABEL_7;
      }
      __break(1u);
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v21[3] = sub_19CD15680();
      v21[4] = &protocol witness table for JSValue;

      *v21 = v13;
    }
  }
}

__int128 *OpenIntentModel<>.makeValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19CF54558(a1, v3, *(_QWORD *)(a2 + 16), a3);
}

__int128 *sub_19CF54558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  _QWORD v26[4];
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v7 = type metadata accessor for OpenIntentModel(0, a3, *(_QWORD *)(a4 + 16), a4);
  OpenIntentModel<>.jsRepresentation(in:)(a1, v7, a4, &v28);
  if (v4)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v10 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v10;
    v27 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v26[3] = swift_getMetatypeMetadata();
    v26[0] = v7;
    sub_19CD40794((uint64_t)v26, (uint64_t)v25);
    v23 = 0u;
    v24 = 0u;
    sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
    LOBYTE(v30) = 0;
    v28 = v23;
    v29 = v24;
    v14 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_19CD40918(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_19CD40918((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[5 * v16];
    v18 = v28;
    v19 = v29;
    *((_BYTE *)v17 + 64) = v30;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    v27 = v14;
    sub_19CCECFE4((uint64_t)v26, &qword_1ECEB3370);
    v20._object = (void *)0x800000019D06E590;
    v20._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(_QWORD *)(v11 + 32) = v27;
    *(_QWORD *)&v28 = v12;
    LOBYTE(v23) = 1;
    v22 = &v28;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v8 = *((_QWORD *)&v29 + 1);
    v9 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    v22 = (__int128 *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v8, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  }
  return v22;
}

void sub_19CF547EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  OpenIntentModel<>.jsRepresentation(in:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

__int128 *sub_19CF54804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OpenIntentModel<>.makeValue(in:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t OpenIntentModel<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30[5];
  uint64_t v31[5];
  uint64_t v32;

  v27 = a4;
  v32 = a3;
  v26 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OpenIntentModel(0, v8, v9, v10);
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (uint64_t *)((char *)&v24 - v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_19CFE09DC();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
  v29[0] = v30[0];
  swift_bridgeObjectRetain();
  sub_19CD143A0(0xD000000000000027, 0x800000019D06E560, v31);
  sub_19CCECFE4((uint64_t)v31, &qword_1ECEB3370);
  swift_bridgeObjectRelease();
  v16 = v29[0];
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v30[0] = v16;
  v19 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v30);
  Decoder.withUserInfo(_:)(v19, v17, v18, v31);
  swift_bridgeObjectRelease();
  sub_19CCD5B84((uint64_t)v31, (uint64_t)v30);
  sub_19CCD5B84((uint64_t)v30, (uint64_t)v29);
  v20 = sub_19CDD1CF4(v29);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  *v14 = v20;
  sub_19CCD5B84((uint64_t)v31, (uint64_t)v30);
  v21 = v28;
  sub_19CFDFB90();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v14 + *(int *)(v11 + 36), v7, a2);
    v23 = v25;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v25 + 16))(v27, v14, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v23 + 8))(v14, v11);
  }
}

uint64_t OpenIntentModel<>.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_19CFDF4B8();
  if (!v2)
  {
    v5 = *v1;
    swift_bridgeObjectRetain();
    sub_19CDD23A0(a1, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CF54AB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OpenIntentModel<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_19CF54AD0(_QWORD *a1)
{
  return OpenIntentModel<>.encode(to:)(a1);
}

uint64_t _OpaqueIntentModelBody.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;

  sub_19CD3E448(a1, (uint64_t)v19);
  ScalarDictionary.init(deserializing:using:)((uint64_t)v19, &v20);
  if (!v4)
  {
    v9 = v20;
    if (*(_QWORD *)(v20 + 16))
    {
      v10 = sub_19CD3FD1C(0x646E696B24, 0xE500000000000000);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(v9 + 56) + 24 * v10;
        if (*(_BYTE *)(v12 + 16) == 3)
        {
          v14 = *(_QWORD *)v12;
          v13 = *(_QWORD *)(v12 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          result = sub_19CD3E3F8(a1);
          *a4 = v14;
          a4[1] = v13;
          return result;
        }
      }
    }
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for _OpaqueIntentModelBody(0, a2, a3, v16) | 0x2000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v18 = xmmword_19D060C40;
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = 0;
    swift_willThrow();
  }
  return sub_19CD3E3F8(a1);
}

uint64_t _OpaqueIntentModelBody.kind.getter()
{
  uint64_t v0;

  v0 = sub_19CD3F3F8();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t _OpaqueIntentModelBody.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v3;
  return result;
}

JSValue __swiftcall _OpaqueIntentModelBody.makeValue(in:)(JSContext in)
{
  JSValue result;

  result.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, in.super.isa);
  if (!result.super.isa)
    __break(1u);
  return result;
}

uint64_t sub_19CF54D08(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19CF54D7C()
{
  return 1684957547;
}

uint64_t sub_19CF54D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF54D08(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CF54DBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDBA69C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19CF54DE8(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D064C88, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CF54E1C(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D064C88, a1);
  return sub_19CFE0A54();
}

uint64_t sub_19CF54E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return _OpaqueIntentModelBody.init(deserializing:using:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

unint64_t sub_19CF54E6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return _OpaqueIntentModelBody.jsRepresentation(in:)(a1, a2);
}

id sub_19CF54E80(uint64_t a1)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, a1);
  if (!result)
    __break(1u);
  return result;
}

uint64_t _OpaqueIntentModelBody<>.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19[5];
  uint64_t v20[3];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_19CFE09DC();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v4);
  v18[0] = v19[0];
  swift_bridgeObjectRetain();
  sub_19CD143A0(0xD000000000000027, 0x800000019D06E560, v20);
  sub_19CCECFE4((uint64_t)v20, &qword_1ECEB3370);
  swift_bridgeObjectRelease();
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v19);
  Decoder.withUserInfo(_:)(v7, v5, v6, v20);
  swift_bridgeObjectRelease();
  sub_19CCD5B84((uint64_t)v20, (uint64_t)v19);
  sub_19CCD5B84((uint64_t)v19, (uint64_t)v18);
  v8 = sub_19CDD1CF4(v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  if (*(_QWORD *)(v8 + 16)
    && (v9 = sub_19CD3FD1C(0x646E696B24, 0xE500000000000000), (v10 & 1) != 0)
    && (v11 = *(_QWORD *)(v8 + 56) + 24 * v9, *(_BYTE *)(v11 + 16) == 3))
  {
    v13 = *(_QWORD *)v11;
    v12 = *(_QWORD *)(v11 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    *a2 = v13;
    a2[1] = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = sub_19CFE01B4();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F350);
    *(_QWORD *)(v16 + 24) = &type metadata for OpenCodingKey;
    *(_QWORD *)(v16 + 32) = sub_19CDD5ED8();
    *(_OWORD *)v16 = xmmword_19D060C40;
    *(_BYTE *)(v16 + 16) = 1;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_19CFE09B8();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC448], v14);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t _OpaqueIntentModelBody<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for _OpaqueIntentModelBody.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1A1ADBD7C](&unk_19D064C88, v6);
  v7 = sub_19CFE0574();
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v12 - v9;
  v12 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A24();
  sub_19CFE0538();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v7);
}

uint64_t sub_19CF55240@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return _OpaqueIntentModelBody<>.init(from:)(a1, a2);
}

uint64_t sub_19CF55254(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _OpaqueIntentModelBody<>.encode(to:)(a1, a2, a3, a4);
}

uint64_t type metadata accessor for _OpaqueIntentModelBody(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _OpaqueIntentModelBody);
}

uint64_t type metadata accessor for _OpaqueIntentModelBody.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _OpaqueIntentModelBody.CodingKeys);
}

uint64_t sub_19CF55280()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19CF552A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v6;

  v6 = *a3;
  *(_QWORD *)(a1 + 8) = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> OpenIntentModel<A>, a2, &v6);
  result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for OpenIntentModel<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19CF552FC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _OpaqueIntentModelBody<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19CF55328(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF553FC + 4 * byte_19D064930[(v9 - 1)]))();
}

void sub_19CF5546C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_19CF55660(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF556A0 + 4 * byte_19D06493E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF556C0 + 4 * byte_19D064943[v4]))();
}

_BYTE *sub_19CF556A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF556C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF556C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF556D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF556D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF556E0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_19CF556EC()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF556FC()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF5570C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF5571C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_19CF5665C(a1, (uint64_t)sub_19CF56E80, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t Bag.ValueOverride.init(deserializing:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _BYTE v5[40];
  unint64_t v6;

  sub_19CD3E448(a1, (uint64_t)v5);
  v6 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  Bag.ValueOverride.init(deserializing:using:)((uint64_t)v5, a2);
  return sub_19CD3E3F8(a1);
}

uint64_t Bag.ValueOverride.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _BYTE v74[48];
  uint64_t v75;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)v74);
  sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
  v13 = *((_QWORD *)&v72 + 1);
  if (!*((_QWORD *)&v72 + 1))
  {
    sub_19CCECFE4((uint64_t)&v71, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v74);
    goto LABEL_12;
  }
  v64 = a2;
  v14 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v17 = v16;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
  sub_19CD3E3F8((uint64_t)v74);
  if (!v17)
  {
LABEL_12:
    v28 = (_BYTE *)a1;
    v29 = type metadata accessor for Bag.ValueOverride() | 0x2000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v30 = xmmword_19D052960;
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = 0;
    swift_willThrow();
    v31 = v28;
    return sub_19CD3E3F8((uint64_t)v31);
  }
  v63 = v15;
  v75 = a1;
  JSONObject.subscript.getter(0x65756C6176, 0xE500000000000000, (uint64_t)v74);
  sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
  v18 = *((_QWORD *)&v72 + 1);
  if (!*((_QWORD *)&v72 + 1))
  {
    sub_19CCECFE4((uint64_t)&v71, &qword_1ECEB1328);
    goto LABEL_14;
  }
  v19 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
  LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
  if ((v19 & 1) != 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v32 = type metadata accessor for Bag.ValueOverride() | 0x2000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v33 = xmmword_19D064CE0;
LABEL_15:
    *(_QWORD *)(v33 + 16) = v32;
    *(_QWORD *)(v33 + 24) = 0;
LABEL_54:
    swift_willThrow();
    sub_19CD3E3F8(v75);
    v31 = v74;
    return sub_19CD3E3F8((uint64_t)v31);
  }
  v20 = v63;
  if (v63 == 0x676E69727473 && v17 == 0xE600000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
    v21 = *((_QWORD *)&v72 + 1);
    v22 = v64;
    if (*((_QWORD *)&v72 + 1))
    {
      v23 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v21, v23);
      v26 = v25;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      if (v26)
      {
        sub_19CD3E3F8(v75);
        sub_19CD3E3F8((uint64_t)v74);
        *v22 = v24;
        v22[1] = v26;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  v34 = v64;
  if (v20 == 0x7961727261 && v17 == 0xE500000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19CDE0324((uint64_t)v74, (uint64_t)v65);
    v35 = v66;
    if (v66)
    {
      v36 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 120))(&v68, v35, v36);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
      if (*((_QWORD *)&v69 + 1))
      {
        v71 = v68;
        v72 = v69;
        v37 = v70;
        v73 = v70;
        v38 = *((_QWORD *)&v69 + 1);
        __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v69 + 1));
        v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 40))(MEMORY[0x1E0DEE9B8] + 8, v38, v37);
        sub_19CE07F20((uint64_t)&v71);
        if (v39)
          goto LABEL_50;
        goto LABEL_53;
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v65, &qword_1ECEB1328);
      v68 = 0u;
      v69 = 0u;
      v70 = 0;
    }
    v40 = &qword_1EE43D068;
LABEL_25:
    v41 = (char *)&v68;
LABEL_52:
    sub_19CCECFE4((uint64_t)v41, v40);
    goto LABEL_53;
  }
  if (v20 == 1819242338 && v17 == 0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
    v42 = *((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v43 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 88))(v42, v43);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      if (v44 != 2)
      {
        sub_19CD3E3F8(v75);
        sub_19CD3E3F8((uint64_t)v74);
        *(_BYTE *)v34 = v44 & 1;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v20 == 0x616E6F6974636964 && v17 == 0xEA00000000007972 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    JSONObject.dictionary.getter((uint64_t)&v68);
    if (*((_QWORD *)&v69 + 1))
    {
      v71 = v68;
      v72 = v69;
      v45 = v70;
      v73 = v70;
      v46 = *((_QWORD *)&v69 + 1);
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v69 + 1));
      v39 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 32))(MEMORY[0x1E0DEC198], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEC1A0], v46, v45);
      sub_19CDC6248((uint64_t)&v71);
      if (v39)
        goto LABEL_50;
      goto LABEL_53;
    }
    v40 = &qword_1EE43C1C8;
    goto LABEL_25;
  }
  if (v20 == 0x656C62756F64 && v17 == 0xE600000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
    v47 = *((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v48 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
      v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 80))(v47, v48);
      LOBYTE(v48) = v50;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      if ((v48 & 1) == 0)
      {
        sub_19CD3E3F8(v75);
        sub_19CD3E3F8((uint64_t)v74);
        *v34 = v49;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v20 == 7630441 && v17 == 0xE300000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
    v51 = *((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v52 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 40))(v51, v52);
      LOBYTE(v52) = v53;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      if ((v52 & 1) == 0)
      {
LABEL_50:
        sub_19CD3E3F8(v75);
        sub_19CD3E3F8((uint64_t)v74);
        *v64 = v39;
        type metadata accessor for Bag.ValueOverride();
        return swift_storeEnumTagMultiPayload();
      }
LABEL_53:
      v54 = type metadata accessor for Bag.ValueOverride() | 0x4000000000000000;
      sub_19CDC5494();
      swift_allocError();
      *(_OWORD *)v55 = xmmword_19D064CE0;
      v56 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v55 + 16) = v54;
      *(_QWORD *)(v55 + 24) = v56;
      goto LABEL_54;
    }
LABEL_51:
    v40 = &qword_1ECEB1328;
    v41 = (char *)&v71;
    goto LABEL_52;
  }
  if ((v20 != 7107189 || v17 != 0xE300000000000000) && (sub_19CFE06A0() & 1) == 0)
  {
    v32 = type metadata accessor for Bag.ValueOverride() | 0x8000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_QWORD *)v33 = v63;
    *(_QWORD *)(v33 + 8) = v17;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  sub_19CDE0324((uint64_t)v74, (uint64_t)&v71);
  v57 = *((_QWORD *)&v72 + 1);
  if (!*((_QWORD *)&v72 + 1))
  {
    sub_19CCECFE4((uint64_t)&v71, &qword_1ECEB1328);
    goto LABEL_64;
  }
  v58 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
  (*(void (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
  v60 = v59;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
  if (!v60)
  {
LABEL_64:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_65;
  }
  sub_19CFDEDA4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_65:
    v40 = (uint64_t *)&unk_1ECEB3030;
    v41 = v7;
    goto LABEL_52;
  }
  sub_19CD3E3F8(v75);
  sub_19CD3E3F8((uint64_t)v74);
  v61 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v61(v12, v7, v8);
  v61((char *)v64, v12, v8);
  type metadata accessor for Bag.ValueOverride();
  return swift_storeEnumTagMultiPayload();
}

void sub_19CF56210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_19CFDEDE0();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = type metadata accessor for Bag.ValueOverride();
  MEMORY[0x1E0C80A78](v3, v4);
  sub_19CF565D0(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)&loc_19CF562C8 + *((int *)qword_19CF565A0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

id sub_19CF562D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_19CFDF854();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_frozenBagValueWithKey_value_valueType_, v0, v2, 0);

  return v3;
}

uint64_t sub_19CF565BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Bag.ValueOverride.init(deserializing:using:)(a1, a2);
}

uint64_t sub_19CF565D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF56614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43B6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF5665C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE252E8();
  if (!v7)
    goto LABEL_24;
  v9 = v7;
  v10 = v8;
  v11 = (_QWORD *)*a5;
  v13 = ((uint64_t (*)(void))sub_19CE12138)();
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v12;
  if (v11[3] >= v16)
  {
    if ((a4 & 1) != 0)
    {
      v20 = (_QWORD *)*a5;
      if ((v12 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_19CE1B58C();
      v20 = (_QWORD *)*a5;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    v22 = 8 * v13;
    *(_QWORD *)(v20[6] + v22) = v9;
    *(_QWORD *)(v20[7] + v22) = v10;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    sub_19CE252E8();
    if (v26)
    {
      v28 = v26;
      v29 = v27;
      do
      {
        v33 = (_QWORD *)*a5;
        v35 = sub_19CE12138(v28);
        v36 = v33[2];
        v37 = (v34 & 1) == 0;
        v38 = v36 + v37;
        if (__OFADD__(v36, v37))
          goto LABEL_25;
        v39 = v34;
        if (v33[3] < v38)
        {
          sub_19CE1639C(v38, 1);
          v40 = sub_19CE12138(v28);
          if ((v39 & 1) != (v41 & 1))
            goto LABEL_27;
          v35 = v40;
        }
        v42 = (_QWORD *)*a5;
        if ((v39 & 1) != 0)
        {

          v30 = v42[7];
          swift_unknownObjectRelease();
          *(_QWORD *)(v30 + 8 * v35) = v29;
        }
        else
        {
          v42[(v35 >> 6) + 8] |= 1 << v35;
          v43 = 8 * v35;
          *(_QWORD *)(v42[6] + v43) = v28;
          *(_QWORD *)(v42[7] + v43) = v29;
          v44 = v42[2];
          v24 = __OFADD__(v44, 1);
          v45 = v44 + 1;
          if (v24)
            goto LABEL_26;
          v42[2] = v45;
        }
        sub_19CE252E8();
        v28 = v31;
        v29 = v32;
      }
      while (v31);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CE1639C(v16, a4 & 1);
  v18 = sub_19CE12138(v9);
  if ((v17 & 1) == (v19 & 1))
  {
    v13 = v18;
    v20 = (_QWORD *)*a5;
    if ((v17 & 1) == 0)
      goto LABEL_11;
LABEL_9:

    v21 = v20[7];
    swift_unknownObjectRelease();
    *(_QWORD *)(v21 + 8 * v13) = v10;
    goto LABEL_13;
  }
LABEL_27:
  type metadata accessor for AMSBagKey(0);
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF56918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF5695C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Bag.ValueOverride();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *_s13ValueOverrideOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v10 = sub_19CFDEDE0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s13ValueOverrideOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 4:
    case 6:
      result = swift_bridgeObjectRelease();
      break;
    case 5:
      v3 = sub_19CFDEDE0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *_s13ValueOverrideOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      v7 = sub_19CFDEDE0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *_s13ValueOverrideOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_19CF5695C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        v6 = sub_19CFDEDE0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *_s13ValueOverrideOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v6 = sub_19CFDEDE0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s13ValueOverrideOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_19CF5695C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v6 = sub_19CFDEDE0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_19CF56E80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  *a2 = *(_QWORD *)a1;
  a2[1] = v3;
  v4 = v2;
  return swift_unknownObjectRetain();
}

uint64_t BaseObjectGraph.injectIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CCBE344;
  return BaseObjectGraph._injectIfAvailable<A>(_:)(a1, a2, a3);
}

void BaseObjectGraph.injectIfAvailable<A>(_:)()
{
  sub_19CF56F70();
}

void BaseObjectGraph.inject<A>(_:)()
{
  sub_19CF56F70();
}

{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

void sub_19CF56F70()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t *Promise.__allocating_init(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Promise.__allocating_init()(v8, v9, v10, v11);
  v13 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = v12;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v7, (uint64_t)&unk_1EE442A20, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t LazyPromise.TaskOutcome.resolve.getter(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t LazyPromise.TaskOutcome.reject.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  return a3;
}

uint64_t LazyPromise.__allocating_init(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;

  v8 = &type metadata for SyncTaskScheduler;
  v9 = &protocol witness table for SyncTaskScheduler;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = *(_QWORD *)(v2 + 80);
  v5[3] = a1;
  v5[4] = a2;
  return LazyPromise.__allocating_init(on:perform:)(&v7, (uint64_t)sub_19CF577D4, (uint64_t)v5);
}

uint64_t sub_19CF5729C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = a7;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a1;
  v19[8] = a2;
  v19[9] = a3;
  v19[10] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v17, (uint64_t)&unk_1EE442AB8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_19CF573AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  v8[5] = v14;
  v8[6] = v15;
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v8[7] = *(_QWORD *)(v15 - 8);
  v10 = swift_task_alloc();
  v8[8] = v10;
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[9] = v11;
  *v11 = v8;
  v11[1] = sub_19CF57444;
  return v13(v10);
}

uint64_t sub_19CF57444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF574A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF57504()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  (*(void (**)(void *))(v0 + 32))(v1);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5754C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  v6[3] = v8;
  v6[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v6[5] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v6[6] = v10;
  *v10 = v6;
  v10[1] = sub_19CF575E4;
  return v12(v9);
}

uint64_t sub_19CF575E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF57648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v4 + 32);
  v5 = *(_QWORD *)(v4 + 40);
  v7 = *(_QWORD *)(v4 + 24);
  Promise.resolve(_:)(v5, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19CF576A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;

  v5 = *(void **)(v4 + 56);
  Promise.reject(_:)(v5, a2, a3, a4);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19CF576E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF5771C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442A18
                                                                                     + dword_1EE442A18))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF577B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF577D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_19CF5729C(a1, a2, a3, a4, v4[3], v4[4], v4[2]);
}

uint64_t type metadata accessor for LazyPromise.TaskOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyPromise.TaskOutcome);
}

uint64_t sub_19CF577EC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CF57828()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_19CCBE344;
  __asm { BR              X9; sub_19CF573AC }
}

uint64_t OpaqueMetatype.description.getter()
{
  return sub_19CFE0A90();
}

uint64_t OpaqueMetatype.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OpaqueMetatype.init(of:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t DynamicType;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  DynamicType = swift_getDynamicType();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *a2 = DynamicType;
  return result;
}

uint64_t OpaqueMetatype.init<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void (*v8)(uint64_t, uint64_t);
  uint64_t DynamicType;
  uint64_t result;
  uint64_t v11[3];
  uint64_t AssociatedTypeWitness;

  v8 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(v11);
  v8(a2, a3);
  __swift_project_boxed_opaque_existential_1(v11, AssociatedTypeWitness);
  DynamicType = swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a4 = DynamicType;
  return result;
}

uint64_t OpaqueMetatype.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static OpaqueMetatype.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t OpaqueMetatype.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CF57A78()
{
  return sub_19CFE0A90();
}

uint64_t sub_19CF57A84()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CF57AC8()
{
  return sub_19CFE08D4();
}

uint64_t sub_19CF57AF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[19];
  v1 = v0[20];
  v4 = v0[15];
  v3 = (void *)v0[16];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_19CF57B68;
  v5 = swift_continuation_init();
  sub_19CCEA068(v5, v3, v4, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_19CF57B68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 168) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 176) = *(_QWORD *)(v1 + 80);
  return swift_task_switch();
}

uint64_t sub_19CF57BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_19CF57C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF57C90()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

JetEngine::AppleServicesEncoder::SigningStyle_optional __swiftcall AppleServicesEncoder.SigningStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  JetEngine::AppleServicesEncoder::SigningStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_19CFE0424();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AppleServicesEncoder.SigningStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF57D4C + 4 * byte_19D064E60[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_19CF57D4C()
{
  return 0x746C7561666564;
}

uint64_t sub_19CF57D64()
{
  return 0x656D697270;
}

uint64_t sub_19CF57D78()
{
  return 0x6D726F6674616C70;
}

void sub_19CF57D90(char *a1)
{
  sub_19CE8114C(*a1);
}

void sub_19CF57D9C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF57DE0()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF57E4C()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF57E80()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF57ED8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF57F18()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

JetEngine::AppleServicesEncoder::SigningStyle_optional sub_19CF57F84(Swift::String *a1)
{
  return AppleServicesEncoder.SigningStyle.init(rawValue:)(*a1);
}

uint64_t sub_19CF57F90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF57FB8 + 4 * byte_19D064E70[*v0]))();
}

void sub_19CF57FB8(_QWORD *a1@<X8>)
{
  *a1 = 0x746C7561666564;
  a1[1] = 0xE700000000000000;
}

void sub_19CF57FD4(_QWORD *a1@<X8>)
{
  *a1 = 0x656D697270;
  a1[1] = 0xE500000000000000;
}

void sub_19CF57FEC(_QWORD *a1@<X8>)
{
  *a1 = 0x6D726F6674616C70;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_19CF58008()
{
  sub_19CF58604();
  return sub_19CFDF83C();
}

uint64_t sub_19CF58064()
{
  sub_19CF58604();
  return sub_19CFDF80C();
}

uint64_t AppleServicesEncoder.Configuration.withAllowedSchemes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_19CD04098(v2, a2);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 72) = a1;
  return result;
}

uint64_t sub_19CF580FC(void *a1)
{
  _QWORD *v2;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  swift_allocError();
  *v2 = a1;
  v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19CF5815C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE594;
  return AppleServicesEncoder.encodeRequest(fromContentsOf:)(a2);
}

uint64_t sub_19CF581AC(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  _BYTE v7[40];
  _OWORD v8[2];

  *(_QWORD *)&v5 = &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty;
  sub_19CD249F0();
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_19CD20240((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  sub_19CD20334((uint64_t)v7);
  if (*((_QWORD *)&v6 + 1))
  {
    sub_19CD433C0(&v5, v8);
    sub_19CD436B0((uint64_t)v8, (uint64_t)v7);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v5, &qword_1ECEB3370);
    if (qword_1EE43C1C0 != -1)
      swift_once();
    sub_19CFE0A6C();
    if ((v7[0] & 1) != 0)
      sub_19CFA8E24((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    return 0;
  }
  return result;
}

uint64_t sub_19CF582FC(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  _BYTE v7[40];
  _OWORD v8[2];

  *(_QWORD *)&v5 = &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty;
  sub_19CD249F0();
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_19CD20240((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  sub_19CD20334((uint64_t)v7);
  if (*((_QWORD *)&v6 + 1))
  {
    sub_19CD433C0(&v5, v8);
    sub_19CD436B0((uint64_t)v8, (uint64_t)v7);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v5, &qword_1ECEB3370);
    if (qword_1EE43C1C0 != -1)
      swift_once();
    sub_19CFE0A6C();
    if ((v7[0] & 1) != 0)
      sub_19CFA8E08((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    return 0;
  }
  return result;
}

uint64_t sub_19CF5844C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  _BYTE v7[40];
  _OWORD v8[2];

  *(_QWORD *)&v5 = &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty;
  sub_19CD249F0();
  sub_19CFE00C4();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_19CD20240((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  sub_19CD20334((uint64_t)v7);
  if (*((_QWORD *)&v6 + 1))
  {
    sub_19CD433C0(&v5, v8);
    sub_19CD436B0((uint64_t)v8, (uint64_t)v7);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      return v5 & 1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v5, &qword_1ECEB3370);
    if (qword_1EE43C1C0 != -1)
      swift_once();
    sub_19CFE0A6C();
    if ((v7[0] & 1) != 0)
      sub_19CFA8538((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160);
    return 0;
  }
  return result;
}

unint64_t sub_19CF585A0()
{
  unint64_t result;

  result = qword_1EE442AD0;
  if (!qword_1EE442AD0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AppleServicesEncoder.SigningStyle, &type metadata for AppleServicesEncoder.SigningStyle);
    atomic_store(result, (unint64_t *)&qword_1EE442AD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleServicesEncoder.FixUp()
{
  return &type metadata for AppleServicesEncoder.FixUp;
}

unint64_t sub_19CF58604()
{
  unint64_t result;

  result = qword_1EE43B4F8;
  if (!qword_1EE43B4F8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AppleServicesEncoder.SigningStyle, &type metadata for AppleServicesEncoder.SigningStyle);
    atomic_store(result, (unint64_t *)&qword_1EE43B4F8);
  }
  return result;
}

uint64_t sub_19CF58648()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF58674()
{
  return swift_deallocObject();
}

uint64_t sub_19CF58684(void *a1)
{
  return sub_19CF580FC(a1);
}

uint64_t StandardMetricsIDService.init(accountProvider:process:bag:topic:shouldMigrate:eventRecorder:resetInterval:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W5>, uint64_t a5@<X6>, uint64_t *a6@<X8>, double a7@<D0>)
{
  _BYTE v15[40];
  uint64_t v16;

  swift_bridgeObjectRelease();
  v16 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v15);
  StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)(&v16, (uint64_t)v15, a2, 0, a4, a6, a7);
  __swift_destroy_boxed_opaque_existential_1Tm(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t *a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  char v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;
  _OWORD v29[2];
  __int128 v30;
  __int128 v31;
  char v32;

  v13 = *a1;
  sub_19CCD5B84(a2, (uint64_t)v29);
  *((_QWORD *)&v30 + 1) = a3;
  *(_QWORD *)&v31 = v13;
  *((double *)&v31 + 1) = a7;
  v32 = a4;
  if ((a5 & 1) != 0)
  {
    v14 = a4 & 1;
    sub_19CCD5B84(a2, (uint64_t)&v26);
    v24 = &type metadata for AMSMetricsIDService;
    v25 = &off_1E3DCF268;
    *(_QWORD *)&v23 = swift_allocObject();
    sub_19CE94AF8((uint64_t)v29, v23 + 16);
    type metadata accessor for MTStandardIDServiceWrapper();
    v15 = (_QWORD *)swift_allocObject();
    v16 = objc_allocWithZone((Class)JESoftLinkedMTStandardIDService);
    swift_unknownObjectRetain_n();
    v17 = a3;
    v15[2] = objc_msgSend(v16, sel_initWithAMSBag_, v13);
    v15[3] = v13;
    v15[4] = 0;
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    sub_19CE94BEC((uint64_t)v29);
    a6[3] = (uint64_t)&type metadata for MigrationMetricsIDService;
    a6[4] = (uint64_t)&off_1E3DD42E0;
    v18 = swift_allocObject();
    *a6 = v18;
    sub_19CCD14C4(&v26, v18 + 16);
    *(_QWORD *)(v18 + 56) = v17;
    *(_QWORD *)(v18 + 64) = v13;
    result = sub_19CCD14C4(&v23, v18 + 72);
    *(_QWORD *)(v18 + 112) = v15;
    *(_BYTE *)(v18 + 120) = v14;
  }
  else
  {
    v27 = &type metadata for AMSMetricsIDService;
    v28 = &off_1E3DCF268;
    v20 = swift_allocObject();
    *(_QWORD *)&v26 = v20;
    v21 = v31;
    *(_OWORD *)(v20 + 48) = v30;
    *(_OWORD *)(v20 + 64) = v21;
    *(_BYTE *)(v20 + 80) = v32;
    v22 = v29[1];
    *(_OWORD *)(v20 + 16) = v29[0];
    *(_OWORD *)(v20 + 32) = v22;
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    return sub_19CCD14C4(&v26, (uint64_t)a6);
  }
  return result;
}

uint64_t sub_19CF5890C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF58940()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_release();
  return swift_deallocObject();
}

uint64_t StandardMetricsIDService.init(bag:accountProvider:process:shouldMigrate:perfEventRecorder:resetInterval:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>)
{
  _BYTE v14[40];
  uint64_t v15;

  v15 = *a1;
  sub_19CCD5B84(a2, (uint64_t)v14);
  StandardMetricsIDService.init(bag:accountProvider:process:activeITunesAccountRequired:shouldMigrate:resetInterval:)(&v15, (uint64_t)v14, a3, 0, a4, a6, a7);
  sub_19CF58A18(a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a2);
}

uint64_t sub_19CF58A18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BCA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StandardMetricsIDService.idFields(forTopic:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF58A74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_19CF58AF4;
  return v6(v0[2], v0[3], v2, v3);
}

uint64_t sub_19CF58AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t StandardMetricsIDService.idFields(forTopic:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF58B64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[5];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_19CF58BE8;
  return v6(v0[2], v0[3], v0[4], v2, v3);
}

uint64_t sub_19CF58BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t StandardMetricsIDService.queryID(forTopic:withType:)(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 57) = *a3;
  return swift_task_switch();
}

uint64_t sub_19CF58C60()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 57);
  v2 = *(_QWORD **)(v0 + 32);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(_BYTE *)(v0 + 56) = v1;
  v7 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_19CF58CF8;
  return v7(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 56, v3, v4);
}

uint64_t sub_19CF58CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 48) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t StandardMetricsIDService.queryID(forTopic:withType:on:)(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_BYTE *)(v5 + 65) = *a3;
  return swift_task_switch();
}

uint64_t StandardMetricsIDService.resetID(forTopics:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CF58DBC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 40) + *(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_19CDEF010;
  return v6(v0[2], v2, v3);
}

uint64_t StandardMetricsIDService.performMaintenance()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19CF58E54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_19CF4ED98;
  return v6(v2, v3);
}

uint64_t sub_19CF58ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF58EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF58F04(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 57) = *a3;
  return swift_task_switch();
}

uint64_t sub_19CF58F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CF58F40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for StandardMetricsIDService()
{
  return &type metadata for StandardMetricsIDService;
}

void Dependency.init<A>(satisfying:with:)()
{
  sub_19CF58FC0();
}

{
  sub_19CF58FC0();
}

{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

void sub_19CF58FC0()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t destroy for JetPackAssetSQLiteRecord(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >> 60 != 15)
    return sub_19CD3BE18(*(_QWORD *)(a1 + 40), v3);
  return result;
}

uint64_t initializeWithCopy for JetPackAssetSQLiteRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = (uint64_t *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  else
  {
    v7 = *v5;
    sub_19CD3BE5C(*v5, v6);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for JetPackAssetSQLiteRecord(uint64_t a1, int *a2)
{
  int v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a2 + 10);
  v6 = *((_QWORD *)a2 + 6);
  if (*(_QWORD *)(a1 + 48) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      v8 = *v5;
      sub_19CD3BE5C(*v5, v6);
      v9 = *(_QWORD *)(a1 + 40);
      v10 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v6;
      sub_19CD3BE18(v9, v10);
      return a1;
    }
    sub_19CF59248(a1 + 40);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
    return a1;
  }
  v7 = *v5;
  sub_19CD3BE5C(*v5, v6);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v6;
  return a1;
}

uint64_t sub_19CF59248(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t assignWithTake for JetPackAssetSQLiteRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 48);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *v6;
      *(_QWORD *)(a1 + 48) = v8;
      sub_19CD3BE18(v9, v7);
      return a1;
    }
    sub_19CF59248(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackAssetSQLiteRecord(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackAssetSQLiteRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetSQLiteRecord()
{
  return &type metadata for JetPackAssetSQLiteRecord;
}

uint64_t LocalizerDefaultValue.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_BYTE *)(a4 + 17) = 1;
  return result;
}

uint64_t LocalizerDefaultValue.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 17) & 1) != 0)
  {
    v4 = sub_19CFE013C();
    sub_19CE46C58(v1, v2, v3, 1);
    return v4;
  }
  else
  {
    sub_19CE46C68(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16), 0);
  }
  return v1;
}

unint64_t sub_19CF59494()
{
  unint64_t result;

  result = qword_1EE442B40;
  if (!qword_1EE442B40)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LocalizerDefaultValue, &type metadata for LocalizerDefaultValue);
    atomic_store(result, (unint64_t *)&qword_1EE442B40);
  }
  return result;
}

uint64_t sub_19CF594D8()
{
  return MEMORY[0x1E0DEC350];
}

uint64_t sub_19CF594E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 17) & 1) != 0)
  {
    v4 = sub_19CFE013C();
    sub_19CE46C58(v1, v2, v3, 1);
    return v4;
  }
  else
  {
    sub_19CE46C68(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16), 0);
  }
  return v1;
}

unint64_t sub_19CF59578()
{
  unint64_t result;

  result = qword_1EE442B48;
  if (!qword_1EE442B48)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LocalizerDefaultValue, &type metadata for LocalizerDefaultValue);
    atomic_store(result, (unint64_t *)&qword_1EE442B48);
  }
  return result;
}

uint64_t sub_19CF595BC()
{
  return MEMORY[0x1E0DEC368];
}

uint64_t sub_19CF595C8()
{
  return MEMORY[0x1E0DEC360];
}

__n128 sub_19CF595D4@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  a2[1].n128_u8[1] = 1;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for LocalizerDefaultValue()
{
  return &type metadata for LocalizerDefaultValue;
}

uint64_t destroy for LocalizerDefaultValue.Store(uint64_t a1)
{
  return sub_19CE46C58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_19CE46C68(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_19CE46C68(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v10 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  sub_19CE46C58(v7, v8, v10, v9);
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  sub_19CE46C58(v5, v6, v8, v7);
  return a1;
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s9JetEngine21LocalizerDefaultValueV5StoreOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CF597E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_19CF597E8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizerDefaultValue.Store()
{
  return &type metadata for LocalizerDefaultValue.Store;
}

uint64_t sub_19CF59808(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_19CF59870;
  return v9(v6 + 16);
}

uint64_t sub_19CF59870()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF598D4()
{
  uint64_t v0;

  sub_19CCF4E08(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59910()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEB8F00(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59950(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_19CF599B8;
  return v9(v6 + 16);
}

uint64_t sub_19CF599B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF59A1C()
{
  uint64_t v0;

  sub_19CCE882C(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59A58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEB96A0(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59A98(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_19CF59B00;
  return v9(v6 + 16);
}

uint64_t sub_19CF59B00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF59B64()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_19CD5A91C(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59B9C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEB9914(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59BDC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 32) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 40) = v7;
  *v7 = v6;
  v7[1] = sub_19CF59C44;
  return v9(v6 + 16);
}

uint64_t sub_19CF59C44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF59CA8()
{
  uint64_t v0;

  sub_19CD1946C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59CFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  sub_19CEB9E30(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59D3C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_19CF59DA4;
  return v9(v6 + 16);
}

uint64_t sub_19CF59DA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF59E08()
{
  uint64_t v0;

  sub_19CD0C9BC(*(_QWORD *)(v0 + 16));
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59E44()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEB9198(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59E84(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 56) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v7;
  *v7 = v6;
  v7[1] = sub_19CF59EEC;
  return v9(v6 + 16);
}

uint64_t sub_19CF59EEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF59F50()
{
  uint64_t v0;

  sub_19CFBB66C(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59F90()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  sub_19CEBB07C(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF59FD0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 16) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v7;
  *v7 = v6;
  v7[1] = sub_19CF5A038;
  return v9(v6 + 40);
}

uint64_t sub_19CF5A038()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A09C()
{
  uint64_t v0;

  sub_19CFBCA50(*(_BYTE *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A0D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_19CEBB87C(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A110(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 112) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 120) = v7;
  *v7 = v6;
  v7[1] = sub_19CF5A178;
  return v9(v6 + 64);
}

uint64_t sub_19CF5A178()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A1DC()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 96);
  sub_19CCEC24C((_QWORD *)(v0 + 16));
  sub_19CCEC5C8(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A22C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_19CEBBAE0(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A26C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 56) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v7;
  *v7 = v6;
  v7[1] = sub_19CF5A2D4;
  return v9(v6 + 16);
}

uint64_t sub_19CF5A2D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A338(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 16) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v7;
  *v7 = v6;
  v7[1] = sub_19CF5A3A0;
  return v9(v6 + 40);
}

uint64_t sub_19CF5A3A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A404()
{
  uint64_t v0;

  sub_19CFBC820(*(_BYTE *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A438()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_19CEBB860(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A478(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_19CF5A4E0;
  return v9(v6 + 16);
}

uint64_t sub_19CF5A4E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A544()
{
  uint64_t v0;

  sub_19CFBFB14(*(_QWORD *)(v0 + 16));
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A580()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEBD0E4(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A5C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6[2] = a6;
  type metadata accessor for JSIntentResult();
  v8 = swift_task_alloc();
  v6[3] = v8;
  v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_19CF5A650;
  return v11(v8);
}

uint64_t sub_19CF5A650()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A6B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CFBFB30(v1);
  sub_19CCEACE4(v1, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A700()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEBD100(v1);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A748(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6[2] = a6;
  type metadata accessor for NetResponse();
  v8 = swift_task_alloc();
  v6[3] = v8;
  v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_19CF5A7D8;
  return v11(v8);
}

uint64_t sub_19CF5A7D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF5A83C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CCEA90C(v1);
  sub_19CCEACE4(v1, (uint64_t (*)(_QWORD))type metadata accessor for NetResponse);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5A888()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_19CEBD650(v1);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

__n128 Bag.FetchConfiguration.init(profile:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;
  unint64_t v3;
  unint64_t v4;

  result = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  *a2 = *a1;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u64[0] = 0;
  a2[2].n128_u8[8] = 0;
  return result;
}

uint64_t Bag.FetchConfiguration.profile.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Bag.FetchConfiguration.profile.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Bag.FetchConfiguration.profile.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withProfile(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  id v8;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *(void **)(v2 + 32);
  v7 = *(_BYTE *)(v2 + 40);
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = v7;
  v8 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *Bag.FetchConfiguration.process.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void Bag.FetchConfiguration.process.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*Bag.FetchConfiguration.process.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withProcess(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 40);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = a1;
  *(_BYTE *)(a2 + 40) = v6;
  v7 = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Bag.FetchConfiguration.wantsAutomaticUpdates.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Bag.FetchConfiguration.wantsAutomaticUpdates.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*Bag.FetchConfiguration.wantsAutomaticUpdates.modify())()
{
  return nullsub_1;
}

uint64_t Bag.FetchConfiguration.withWantsAutomaticUpdates(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = v2[1];
  v4 = v2[2];
  v5 = v2[3];
  v6 = (void *)v2[4];
  *(_QWORD *)a2 = *v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = a1;
  v7 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF5AAE4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[15] = v0 + 40;
  v0[10] = v0;
  v0[11] = sub_19CF5AB60;
  v0[18] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 18);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD5A95C();
  sub_19CCECFE4(v1, &qword_1ECEB0700);
  return swift_continuation_await();
}

uint64_t sub_19CF5AB60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 368) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 320);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF5ABDC()
{
  uint64_t v0;
  void *v1;

  if ((*(_BYTE *)(v0 + 264) & 1) != 0)
  {
    **(_QWORD **)(v0 + 328) = *(_QWORD *)(v0 + 376);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = *(void **)(v0 + 376);
    *(_QWORD *)(v0 + 56) = v0 + 312;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_19CF5ACF0;
    *(_QWORD *)(v0 + 304) = swift_continuation_init();
    *(_QWORD *)(v0 + 272) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 280) = 0x40000000;
    *(_QWORD *)(v0 + 288) = sub_19CD59864;
    *(_QWORD *)(v0 + 296) = &block_descriptor_35;
    objc_msgSend(v1, sel_createSnapshotWithCompletion_, v0 + 272);
    return swift_continuation_await();
  }
}

uint64_t sub_19CF5ACB4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5ACF0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19CF5AD50()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 328);

  *v1 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF5AD98()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 376);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Bag.fetchBag(forProfile:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v6 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v6;
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)(v10 + 40) = v8;
  *(_QWORD *)(v10 + 48) = 0;
  *(_BYTE *)(v10 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
  v11 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v11 + 24) = v13;
  *(_BYTE *)(v11 + 32) = 0;
  v14 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = &unk_1EE442B88;
  v15[5] = v10;
  v15[6] = v11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v5, (uint64_t)&unk_1EE442B90, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v11;
}

uint64_t static Bag.fetchBag(forProfile:as:wantsAutomaticUpdates:)(uint64_t *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  v13 = a1[2];
  v12 = a1[3];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v12;
  *(_QWORD *)(v14 + 48) = a2;
  *(_BYTE *)(v14 + 56) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
  v15 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v17;
  *(_BYTE *)(v15 + 32) = 0;
  v18 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_1EE442B98;
  v19[5] = v14;
  v19[6] = v15;
  v20 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v21 = v20;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v9, (uint64_t)&unk_1EE442BA0, (uint64_t)v19);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v15;
}

uint64_t static Bag.fetchBag(forProfile:wantsAutomaticUpdates:)(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v8;
  *(_QWORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = v10;
  *(_QWORD *)(v12 + 48) = 0;
  *(_BYTE *)(v12 + 56) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
  v13 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = 0;
  v16 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = &unk_1EE442BA8;
  v17[5] = v12;
  v17[6] = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v7, (uint64_t)&unk_1EE442BB0, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

uint64_t Bag.withLatestChanges.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v24[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v24[1] = &unk_1EE46A658;
  v6 = swift_dynamicCastObjCProtocolConditional();
  if (!v6)
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_profile);
      v10 = sub_19CFDF578();
      v12 = v11;

      v13 = objc_msgSend(v5, sel_profileVersion);
      v14 = sub_19CFDF578();
      v16 = v15;
      swift_unknownObjectRelease();

      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v10;
      *(_QWORD *)(v17 + 24) = v12;
      *(_QWORD *)(v17 + 32) = v14;
      *(_QWORD *)(v17 + 40) = v16;
      *(_QWORD *)(v17 + 48) = 0;
      *(_BYTE *)(v17 + 56) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
      v8 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
      v18 = swift_allocObject();
      *(_DWORD *)(v18 + 16) = 0;
      v19 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v8 + 16) = v18;
      *(_QWORD *)(v8 + 24) = v19;
      *(_BYTE *)(v8 + 32) = 0;
      v20 = sub_19CFDFA10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
      v21 = (_QWORD *)swift_allocObject();
      v21[2] = 0;
      v21[3] = 0;
      v21[4] = &unk_1EE442BB8;
      v21[5] = v17;
      v21[6] = v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_19CF5B8E4((uint64_t)v4, (uint64_t)&unk_1EE442BC0, (uint64_t)v21);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      return v8;
    }
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
    v8 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v22 = swift_allocObject();
    *(_DWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v8 + 16) = v22;
    *(_QWORD *)(v8 + 24) = v5;
    *(_BYTE *)(v8 + 32) = 1;
    swift_unknownObjectRetain();
    return v8;
  }
  v7 = (void *)v6;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v7, sel_replacingSnapshotIfNeeded))
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  swift_getObjectType();
  sub_19CFC75CC();
  v8 = sub_19CF5BC88((uint64_t)sub_19CF5B598, 0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_19CF5B598@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

uint64_t Bag.snapshot.getter()
{
  uint64_t v0;

  swift_getObjectType();
  sub_19CFC75CC();
  v0 = sub_19CF5BC88((uint64_t)sub_19CF5BFF4, 0);
  swift_release();
  return v0;
}

uint64_t Bag.withLatestChanges()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_19CF5B620()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = Bag.withLatestChanges.getter();
  return swift_task_switch();
}

uint64_t sub_19CF5B668()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CF5B6E4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD5A9A4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB06E0);
  return swift_continuation_await();
}

uint64_t sub_19CF5B6E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 192) = v2;
  if (v2)
    swift_willThrow();
  else
    **(_QWORD **)(v1 + 168) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t Bag.snapshot()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_19CF5B774()
{
  uint64_t v0;

  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_19CFC75CC();
  *(_QWORD *)(v0 + 184) = sub_19CF5BC88((uint64_t)sub_19CF5BFF4, 0);
  swift_release();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF5B7F4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CF5B870;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD5A9A4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB06E0);
  return swift_continuation_await();
}

uint64_t sub_19CF5B870()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 192) = v2;
  if (v2)
    swift_willThrow();
  else
    **(_QWORD **)(v1 + 168) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_19CF5B8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_19CFDFA10();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19CFDFA04();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_19CCECFE4(a1, (uint64_t *)&unk_1ECEB29B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDF998();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_19CF5BA3C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_19CCBE344;
  v5 = *(_OWORD *)((char *)v1 + 41);
  v6 = v1[2];
  *(_OWORD *)(v4 + 16) = v1[1];
  *(_OWORD *)(v4 + 32) = v6;
  *(_OWORD *)(v4 + 41) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v7;
  *v7 = v4;
  v7[1] = sub_19CCDEA80;
  return static Bag.fetchBag(using:)(a1, (_OWORD *)(v4 + 16));
}

uint64_t sub_19CF5BAD0(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_19CD579FC;
  v5 = *(_OWORD *)((char *)v1 + 41);
  v6 = v1[2];
  *(_OWORD *)(v4 + 16) = v1[1];
  *(_OWORD *)(v4 + 32) = v6;
  *(_OWORD *)(v4 + 41) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v7;
  *v7 = v4;
  v7[1] = sub_19CCDEA80;
  return static Bag.fetchBag(using:)(a1, (_OWORD *)(v4 + 16));
}

uint64_t sub_19CF5BB60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442B68
                                                                                     + dword_1EE442B68))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF5BC04(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  a2(&v3, &v4);
  sub_19CCE882C(v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_19CF5BC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CF5BF3C;
  v9[1] = v7;
  v9[2] = sub_19CF5BF48;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC1544();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE439FA0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

void _s18FetchConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t _s18FetchConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t _s18FetchConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t _s18FetchConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for Bag.FetchConfiguration()
{
  return &type metadata for Bag.FetchConfiguration;
}

uint64_t sub_19CF5BF3C(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF5BC04(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19CF5BF48(void *a1)
{
  sub_19CF4CA50(a1);
}

uint64_t sub_19CF5BF50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF5BF74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE442C38 + dword_1EE442C38))(a1, v4);
}

uint64_t sub_19CF5BFF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CF5B598(a1, a2);
}

uint64_t static JetNWActivityDomain.jet.getter()
{
  return 45;
}

unint64_t sub_19CF5C018()
{
  unint64_t result;

  result = qword_1EE442C50;
  if (!qword_1EE442C50)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetNWActivityDomain, &type metadata for JetNWActivityDomain);
    atomic_store(result, (unint64_t *)&qword_1EE442C50);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetNWActivityDomain()
{
  return &type metadata for JetNWActivityDomain;
}

ValueMetadata *type metadata accessor for RemovePreferenceMigrationRule()
{
  return &type metadata for RemovePreferenceMigrationRule;
}

uint64_t sub_19CF5C088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v4, ObjectType, a2);
  v8 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(v4, v8, a4);
}

uint64_t static URLRequestEncoder.PropertyScope.allProperties.getter()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9D8];
  v1 = sub_19CD02AAC(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_19CF5C198()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9D8];
  v1 = sub_19CD02AAC(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_19CF5C228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  return URLRequestEncoder.encodeRequest(fromContentsOf:)(a1, a2);
}

_UNKNOWN **sub_19CF5C280()
{
  return &protocol witness table for URLRequestEncoder.PropertyScope;
}

ValueMetadata *type metadata accessor for URLRequestEncoder()
{
  return &type metadata for URLRequestEncoder;
}

ValueMetadata *type metadata accessor for URLRequestEncoder.PropertyScope()
{
  return &type metadata for URLRequestEncoder.PropertyScope;
}

uint64_t sub_19CF5C2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t *boxed_opaque_existential_2Tm;

  a4[3] = (uint64_t *)&type metadata for _Wrapped_Encoder;
  a4[4] = (uint64_t *)sub_19CF5C33C();
  v9 = (uint64_t *)swift_allocObject();
  *a4 = v9;
  v9[5] = a2;
  v9[6] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v9 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v4, a2);
  v9[7] = a1;
  return swift_bridgeObjectRetain();
}

unint64_t sub_19CF5C33C()
{
  unint64_t result;

  result = qword_1EE442C68;
  if (!qword_1EE442C68)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0653F4, &type metadata for _Wrapped_Encoder);
    atomic_store(result, (unint64_t *)&qword_1EE442C68);
  }
  return result;
}

uint64_t sub_19CF5C380()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for _Wrapped_Encoder(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _Wrapped_Encoder(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for _Wrapped_Encoder(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for _Wrapped_Encoder(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _Wrapped_Encoder()
{
  return &type metadata for _Wrapped_Encoder;
}

uint64_t sub_19CF5C4A8()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19CFE0A24();
}

uint64_t sub_19CF5C518()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19CFE09B8();
}

uint64_t sub_19CF5C55C(uint64_t a1, uint64_t a2)
{
  return sub_19CF5C574(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE258]);
}

uint64_t sub_19CF5C568(uint64_t a1, uint64_t a2)
{
  return sub_19CF5C574(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE260]);
}

uint64_t sub_19CF5C574(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3[3];
  v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return a3(v5, v6);
}

uint64_t JetpackBundle.url(forResource:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[2];
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v2;
  v9 = a1[1];
  v13[0] = *a1;
  v13[1] = v9;
  JetpackBundle.url(forOptionalResource:)((uint64_t)v13, (uint64_t)v8);
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, v10);
  sub_19CD3BBD0((uint64_t)v8);
  sub_19CEB1658();
  swift_allocError();
  return swift_willThrow();
}

uint64_t JetpackBundle.init(bundleURL:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  sub_19CFDED8C();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v5 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithPath_, v5);

  v7 = sub_19CFDEDE0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  *a2 = v6;
  return result;
}

uint64_t static JetpackBundleError.== infix(_:_:)()
{
  return 1;
}

uint64_t JetpackBundleError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetpackBundleError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

id JetpackBundle.bundle.getter()
{
  id *v0;

  return *v0;
}

uint64_t JetpackBundle.sourceFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = (void *)sub_19CFDF554();
  v5 = (void *)sub_19CFDF554();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_19CFDED74();

    v7 = sub_19CFDEDE0();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_19CFDEDE0();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

void JetpackBundle.url(forOptionalResource:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v27 - v11;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *v2;
  if (v13)
  {
    if (v13 == 1)
    {
      v16 = v15;
      v17 = (void *)sub_19CFDF554();
      v18 = (void *)sub_19CFDF554();
      v19 = objc_msgSend(v16, sel_URLForResource_withExtension_, v17, v18);

      if (v19)
      {
        sub_19CFDED74();

        v20 = sub_19CFDEDE0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 0, 1, v20);
      }
      else
      {
        v26 = sub_19CFDEDE0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
      }
      sub_19CEDEE18((uint64_t)v12, a2);

      return;
    }
    v21 = (void *)sub_19CFDF554();
    if (!v14)
      goto LABEL_8;
  }
  else
  {
    v21 = 0;
    if (!v14)
    {
LABEL_8:
      v22 = 0;
      goto LABEL_9;
    }
  }
  v22 = (void *)sub_19CFDF554();
LABEL_9:
  v23 = objc_msgSend(v15, sel_URLForResource_withExtension_, v21, v22);

  if (v23)
  {
    sub_19CFDED74();

    v24 = sub_19CFDEDE0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
  }
  else
  {
    v25 = sub_19CFDEDE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
  }
  sub_19CEDEE18((uint64_t)v8, a2);
}

unint64_t sub_19CF5CADC()
{
  unint64_t result;

  result = qword_1EE442C70;
  if (!qword_1EE442C70)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetpackBundleError, &type metadata for JetpackBundleError);
    atomic_store(result, (unint64_t *)&qword_1EE442C70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JetpackBundleError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF5CB60 + 4 * byte_19D065440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF5CB80 + 4 * byte_19D065445[v4]))();
}

_BYTE *sub_19CF5CB60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF5CB80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF5CB88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF5CB90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF5CB98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF5CBA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JetpackBundleError()
{
  return &type metadata for JetpackBundleError;
}

ValueMetadata *type metadata accessor for JetpackBundle()
{
  return &type metadata for JetpackBundle;
}

unint64_t destroy for JetpackBundle.Resource(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for JetpackBundle.Resource(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
  }
  return a1;
}

_QWORD *assignWithCopy for JetpackBundle.Resource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for JetpackBundle.Resource(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v10;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackBundle.Resource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t sub_19CF5CE3C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_19CF5CE60(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackBundle.Resource()
{
  return &type metadata for JetpackBundle.Resource;
}

uint64_t sub_19CF5CEA4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for LocalizationError(uint64_t a1)
{
  return sub_19CF5CECC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_19CF5CECC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9JetEngine17LocalizationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CF5CEA4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LocalizationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CF5CEA4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CF5CECC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LocalizationError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CF5CECC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CF5D050(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_19CF5D068(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationError()
{
  return &type metadata for LocalizationError;
}

BOOL static JetPackAssetRequestSourcePolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackAssetRequestSourcePolicy.debugDescription.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E4F65746F6D6572;
  if (*v0 != 1)
    v1 = 0x6C6E4F6C61636F6CLL;
  if (*v0)
    return v1;
  else
    return 0x647261646E617473;
}

uint64_t JetPackAssetRequestSourcePolicy.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetPackAssetRequestSourcePolicy.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CF5D178()
{
  unint64_t result;

  result = qword_1EE442C78;
  if (!qword_1EE442C78)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackAssetRequestSourcePolicy, &type metadata for JetPackAssetRequestSourcePolicy);
    atomic_store(result, (unint64_t *)&qword_1EE442C78);
  }
  return result;
}

uint64_t dispatch thunk of JetPackAssetRequest._cacheKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JetPackAssetRequest._sourcePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

JetEngine::OptionalLogger::Key __swiftcall OptionalLogger.Key.init(_:)(JetEngine::OptionalLogger::Key result)
{
  JetEngine::OptionalLogger::Key *v1;

  *v1 = result;
  return result;
}

uint64_t OptionalLogger.Key.lookupName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OptionalLogger.Key.lookupName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OptionalLogger.Key.lookupName.modify())()
{
  return nullsub_1;
}

uint64_t OptionalLogger.Key.encode(_:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_19CF5D270 + 4 * byte_19D0656A8[*a1]))();
}

void sub_19CF5D270(_QWORD *a1@<X8>)
{
  uint64_t v1;

  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0x726F727265;
  a1[1] = v1;
}

char OptionalLogger.Key.decode(_:)@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  int v3;
  Swift::String v5;
  _BYTE v6[32];

  sub_19CD436B0(a1, (uint64_t)v6);
  v3 = swift_dynamicCast();
  if (v3)
    LOBYTE(v3) = LogMessageLevel.init(name:)(v5);
  else
    *a2 = 4;
  return v3;
}

uint64_t sub_19CF5D324(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_19CF5D350 + 4 * byte_19D0656AC[*a1]))();
}

void sub_19CF5D350(_QWORD *a1@<X8>)
{
  uint64_t v1;

  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0x726F727265;
  a1[1] = v1;
}

char sub_19CF5D398@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  int v3;
  Swift::String v5;
  _BYTE v6[32];

  sub_19CD436B0(a1, (uint64_t)v6);
  v3 = swift_dynamicCast();
  if (v3)
    LOBYTE(v3) = LogMessageLevel.init(name:)(v5);
  else
    *a2 = 4;
  return v3;
}

uint64_t static OptionalLogger.preferences.getter()
{
  if (qword_1ECEB0590 != -1)
    swift_once();
  return swift_unknownObjectRetain();
}

uint64_t OptionalLogger.levelNameKey.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = *(_QWORD *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void OptionalLogger.defaultVerbosityLevel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

uint64_t OptionalLogger.verbosityLevel.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t result;
  char v7;
  _QWORD v8[2];
  char v9;

  if (qword_1ECEB0590 != -1)
    swift_once();
  v3 = unk_1ECEB0570;
  ObjectType = swift_getObjectType();
  v5 = *(_QWORD *)(v1 + 64);
  v8[0] = *(_QWORD *)(v1 + 56);
  v8[1] = v5;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter((uint64_t)v8, ObjectType, (uint64_t)&type metadata for OptionalLogger.Key, v3, (uint64_t)&protocol witness table for OptionalLogger.Key, (uint64_t)&v9);
  result = swift_bridgeObjectRelease();
  v7 = v9;
  if (v9 == 4)
    v7 = *(_BYTE *)(v1 + 72);
  *a1 = v7;
  return result;
}

uint64_t OptionalLogger.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OptionalLogger.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for OptionalLogger()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for OptionalLogger.Key()
{
  return &type metadata for OptionalLogger.Key;
}

void static PageID.random.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[6];

  v2 = sub_19CFDEFA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF9C();
  v7 = sub_19CFDEF90();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v14[4] = v7;
  v14[5] = v9;
  v14[2] = 45;
  v14[3] = 0xE100000000000000;
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_19CD41144();
  v10 = sub_19CFE0004();
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
    sub_19CFAE69C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  *a1 = v10;
  a1[1] = v12;
}

JetEngine::PageID __swiftcall PageID.init(with:)(Swift::String with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  JetEngine::PageID result;

  v2 = v1;
  sub_19CD41144();
  v3 = sub_19CFE0004();
  v5 = v4;
  v6 = swift_bridgeObjectRelease();
  v8 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v8 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    sub_19CFAE69C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  *v2 = v3;
  v2[1] = v5;
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

uint64_t PageID.init<A>(id:kind:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_19CFDF7F4();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CD41144();
  v6 = sub_19CFE0004();
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
    sub_19CFAE69C((unint64_t)"JetEngine/PageID.swift", 0x16uLL, 2, 0x39uLL);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a3 = v6;
  a3[1] = v8;
  return result;
}

void sub_19CF5D8AC(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_19CFE01A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v12 = *(_QWORD *)(*a1 + 16);
  if (v11 == v12)
  {
    sub_19CE35380(0x65756C6176, 0xE500000000000000, 1, a2);
    swift_bridgeObjectRelease();
    sub_19CFE019C();
    v13 = sub_19CFE01B4();
    swift_allocError();
    v15 = v14;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v14, v10, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC458], v13);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else if (v11 >= v12)
  {
    __break(1u);
  }
  else
  {
    v16 = (_QWORD *)(*a1 + 32 * v11);
    v17 = v16[4];
    v18 = v16[5];
    v19 = v16[6];
    v20 = v16[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[1] = v11 + 1;
    v21 = MEMORY[0x1A1AD9838](v17, v18, v19, v20);
    v23 = v22;
    swift_bridgeObjectRelease();
    *a3 = v21;
    a3[1] = v23;
  }
}

uint64_t PageID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[4];
  uint64_t *v28;

  v5 = sub_19CFE01A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  v10 = sub_19CFE06AC();
  v12 = v11;
  v28 = a2;
  v25 = 45;
  v26 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v10, v11);
  *(&v23 - 2) = (uint64_t)&v25;
  swift_bridgeObjectRetain();
  v13 = sub_19CD3C1F0(0x7FFFFFFFFFFFFFFFLL, 1, sub_19CD3C68C, (uint64_t)(&v23 - 4), v10, v12);
  swift_bridgeObjectRelease();
  v25 = v13;
  v26 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = (_QWORD *)sub_19CFE09B8();
  sub_19CF5D8AC(&v25, v14, v24);
  v16 = v24[1];
  v23 = v24[0];
  v17 = v26;
  v18 = *(_QWORD *)(v13 + 16);
  result = swift_bridgeObjectRelease();
  if (v17 == v18)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    v19 = v28;
    *v28 = v23;
    v19[1] = v16;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v17 >= v18)
  {
    __break(1u);
  }
  else
  {
    v26 = v17 + 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    v20 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v21, v9, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v20);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PageID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_19CFE070C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t PageID.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall PageID.isParent(of:)(JetEngine::ShelfID of)
{
  _QWORD *v1;

  if (*(_QWORD *)of.parent.value._countAndFlagsBits == *v1
    && *(_QWORD *)(of.parent.value._countAndFlagsBits + 8) == v1[1])
  {
    return 1;
  }
  else
  {
    return sub_19CFE06A0();
  }
}

Swift::Bool __swiftcall PageID.isParent(of:)(JetEngine::ComponentID *of)
{
  uint64_t v1;

  if (of->parent.parent.value._countAndFlagsBits == *(_QWORD *)v1
    && of->parent.parent.value._object == *(void **)(v1 + 8))
  {
    return 1;
  }
  else
  {
    return sub_19CFE06A0();
  }
}

uint64_t PageID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t static PageID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t PageID.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CF5DF20()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CF5DF68()
{
  return sub_19CFDF650();
}

uint64_t sub_19CF5DF70()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CF5DFB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PageID.init(from:)(a1, a2);
}

uint64_t sub_19CF5DFC8(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_19CFE070C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

unint64_t sub_19CF5E070()
{
  unint64_t result;

  result = qword_1EE442C80;
  if (!qword_1EE442C80)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PageID, &type metadata for PageID);
    atomic_store(result, (unint64_t *)&qword_1EE442C80);
  }
  return result;
}

ValueMetadata *type metadata accessor for PageID()
{
  return &type metadata for PageID;
}

double static Models.ToastAction.defaultToastDuration.getter()
{
  return 1.5;
}

__int128 *Models.ToastAction.init(actionMetrics:icon:title:message:duration:)@<X0>(__int128 *result@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v8 = *result;
  v9 = a2[2];
  v10 = a2[4];
  *(_OWORD *)(a7 + 64) = a2[3];
  *(_OWORD *)(a7 + 80) = v10;
  v11 = *a2;
  v12 = a2[1];
  *(_OWORD *)a7 = v8;
  *(_OWORD *)(a7 + 16) = v11;
  v13 = *((_QWORD *)a2 + 10);
  *(_OWORD *)(a7 + 32) = v12;
  *(_OWORD *)(a7 + 48) = v9;
  *(_QWORD *)(a7 + 96) = v13;
  *(_QWORD *)(a7 + 104) = a3;
  *(_QWORD *)(a7 + 112) = a4;
  *(_QWORD *)(a7 + 120) = a5;
  *(_QWORD *)(a7 + 128) = a6;
  *(double *)(a7 + 136) = a8;
  return result;
}

uint64_t sub_19CF5E100()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF5E13C + 4 * byte_19D065834[*v0]))(0x654D6E6F69746361, 0xED00007363697274);
}

uint64_t sub_19CF5E13C()
{
  return 1852793705;
}

uint64_t sub_19CF5E14C()
{
  return 0x656C746974;
}

uint64_t sub_19CF5E160()
{
  return 0x6567617373656DLL;
}

uint64_t sub_19CF5E178()
{
  return 0x6E6F697461727564;
}

uint64_t sub_19CF5E190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF5F444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF5E1B4()
{
  sub_19CF5E7F4();
  return sub_19CFE0A48();
}

uint64_t sub_19CF5E1DC()
{
  sub_19CF5E7F4();
  return sub_19CFE0A54();
}

uint64_t Models.ToastAction.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  int v19;
  id v20;
  void *v21;
  char v22;
  id v23;
  __int128 v24;
  ValueMetadata *v25;
  _UNKNOWN **v26;
  void *v27;
  void *v28;
  double v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _DWORD v44[2];
  char v45;
  void *v46;
  void *v47;
  char v48;
  _BYTE v49[7];
  void *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  ValueMetadata *v54;
  _UNKNOWN **v55;
  _OWORD v56[5];
  uint64_t v57;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442C88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF5E7F4();
  sub_19CFE09E8();
  if (!v2)
  {
    LOBYTE(v46) = 0;
    sub_19CE8C13C();
    sub_19CFE0484();
    v10 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)&v56[0])
      v10 = *(_QWORD *)&v56[0];
    v41 = v10;
    if (*(_QWORD *)&v56[0])
      v11 = *((_QWORD *)&v56[0] + 1);
    else
      v11 = MEMORY[0x1E0DEE9E0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442C98);
    LOBYTE(v42) = 1;
    sub_19CD20AFC(&qword_1EE442CA0, &qword_1EE442C98, (uint64_t)&protocol witness table for MediaArtwork, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0484();
    v40 = a2;
    if (v46)
    {
      sub_19CF00C18((uint64_t)&v46, (uint64_t)v56);
      sub_19CCECFE4((uint64_t)&v46, &qword_1EE442C98);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v46, &qword_1EE442CA8);
      memset(v56, 0, sizeof(v56));
      v57 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
    LOBYTE(v42) = 2;
    sub_19CF43860();
    sub_19CFE0484();
    v39 = v11;
    v13 = (uint64_t)v46;
    v14 = v47;
    v38 = v46;
    if (v47 == (void *)1)
      v13 = 0;
    v37 = v13;
    if (v47 == (void *)1)
      v15 = 0;
    else
      v15 = v47;
    v36 = v15;
    LOBYTE(v42) = 3;
    sub_19CFE0484();
    v35 = v14;
    v34[2] = v46;
    if (v47 == (void *)1)
      v16 = 0;
    else
      v16 = v46;
    v34[1] = v47;
    if (v47 == (void *)1)
      v17 = 0;
    else
      v17 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFB0);
    LOBYTE(v42) = 4;
    sub_19CE6F800();
    sub_19CFE0484();
    v38 = v17;
    v18 = *(double *)&v46;
    v19 = BYTE1(v47);
    LODWORD(v35) = BYTE1(v47) | v47;
    sub_19CCF8C5C((uint64_t)v56, (uint64_t)&v46, &qword_1EE442CB0);
    if (v46)
    {
      sub_19CCECFE4((uint64_t)v56, &qword_1EE442CB0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v20 = v46;
      v21 = v47;
      v22 = v48;
      v44[0] = *(_DWORD *)v49;
      *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)&v49[3];
      v23 = v50;
      v24 = v51;
      v42 = v52;
      v25 = v54;
      v43 = v53;
      v26 = v55;
    }
    else
    {
      v27 = (void *)*MEMORY[0x1E0CFD8F0];
      v28 = (void *)*MEMORY[0x1E0CFD8D8];
      v45 = 1;
      v20 = v27;
      v23 = v28;
      sub_19CCECFE4((uint64_t)v56, &qword_1EE442CB0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      sub_19CCECFE4((uint64_t)&v46, &qword_1EE442CB0);
      v21 = 0;
      v24 = 0uLL;
      v25 = &_s12_EmptySourceVN;
      v26 = &off_1EE4379C0;
      v22 = v45;
    }
    v29 = 0.0;
    if (!v19)
      v29 = v18;
    v30 = v40;
    v31 = v39;
    *v40 = v41;
    v30[1] = v31;
    if ((v35 & 1) != 0)
      v29 = 1.5;
    v30[2] = v20;
    v30[3] = v21;
    *((_BYTE *)v30 + 32) = v22;
    *(_DWORD *)((char *)v30 + 33) = v44[0];
    *((_DWORD *)v30 + 9) = *(_DWORD *)((char *)v44 + 3);
    v30[5] = v23;
    v32 = v42;
    *((_OWORD *)v30 + 3) = v24;
    *((_OWORD *)v30 + 4) = v32;
    v30[10] = v43;
    v30[11] = v25;
    v33 = v37;
    v30[12] = v26;
    v30[13] = v33;
    v30[14] = v36;
    v30[15] = v16;
    v30[16] = v38;
    *((double *)v30 + 17) = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19CF5E7F4()
{
  unint64_t result;

  result = qword_1EE442C90;
  if (!qword_1EE442C90)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D065998, &_s11ToastActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442C90);
  }
  return result;
}

uint64_t sub_19CF5E838(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t Models.ToastAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  double v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];
  _OWORD v43[5];
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;

  v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v43);
  v42[0] = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)v43, v42, v45);
  if (v3)
  {
    sub_19CD3E3F8(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v45[0];
    v9 = v45[1];
    JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)v42);
    v39[0] = v6;
    MediaArtwork.init(deserializing:using:)((uint64_t)v42, v39, (uint64_t)v43);
    JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v42);
    sub_19CCF8C5C((uint64_t)v42, (uint64_t)v39, &qword_1ECEB1328);
    v10 = v40;
    if (v40)
    {
      v11 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      v46 = v13;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v39, &qword_1ECEB1328);
      v12 = 0;
      v46 = 0;
    }
    sub_19CD3E3F8((uint64_t)v42);
    JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000, (uint64_t)v39);
    sub_19CCF8C5C((uint64_t)v39, (uint64_t)v36, &qword_1ECEB1328);
    v14 = v37;
    if (v37)
    {
      v15 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
      v32 = v16;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v36, &qword_1ECEB1328);
      v32 = 0;
    }
    sub_19CD3E3F8((uint64_t)v39);
    JSONObject.subscript.getter(0x6E6F697461727564, 0xE800000000000000, (uint64_t)v36);
    sub_19CCF8C5C((uint64_t)v36, (uint64_t)v33, &qword_1ECEB1328);
    v17 = v34;
    if (v34)
    {
      v31 = v9;
      v18 = v8;
      v19 = v14;
      v20 = v12;
      v21 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 80);
      v23 = v21;
      v12 = v20;
      v14 = v19;
      v8 = v18;
      v9 = v31;
      v24 = v22(v17, v23);
      v26 = v25;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      sub_19CD3E3F8(a1);
      result = sub_19CD3E3F8((uint64_t)v36);
      v27 = *(double *)&v24;
      if ((v26 & 1) != 0)
        v27 = 1.5;
    }
    else
    {
      sub_19CCECFE4((uint64_t)v33, &qword_1ECEB1328);
      sub_19CD3E3F8(a1);
      result = sub_19CD3E3F8((uint64_t)v36);
      v27 = 1.5;
    }
    *(_QWORD *)a3 = v8;
    *(_QWORD *)(a3 + 8) = v9;
    v28 = v43[3];
    *(_OWORD *)(a3 + 48) = v43[2];
    *(_OWORD *)(a3 + 64) = v28;
    *(_OWORD *)(a3 + 80) = v43[4];
    v29 = v44;
    v30 = v43[1];
    *(_OWORD *)(a3 + 16) = v43[0];
    *(_OWORD *)(a3 + 32) = v30;
    *(_QWORD *)(a3 + 96) = v29;
    *(_QWORD *)(a3 + 104) = v12;
    *(_QWORD *)(a3 + 112) = v46;
    *(_QWORD *)(a3 + 120) = v14;
    *(_QWORD *)(a3 + 128) = v32;
    *(double *)(a3 + 136) = v27;
  }
  return result;
}

uint64_t Models.ToastAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.ToastAction.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CF00C18(v1 + 16, a1);
}

uint64_t Models.ToastAction.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.ToastAction.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

double Models.ToastAction.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

uint64_t Models.ToastAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442CB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF5E7F4();
  sub_19CFE0A24();
  v12 = *v3;
  v11[15] = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_19CF5EDDC();
    sub_19CFE0568();
    LOBYTE(v12) = 2;
    sub_19CFE04FC();
    LOBYTE(v12) = 3;
    sub_19CFE04FC();
    LOBYTE(v12) = 4;
    sub_19CFE0550();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_19CF5EDDC()
{
  unint64_t result;

  result = qword_1EE442CC0;
  if (!qword_1EE442CC0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MediaArtwork, &type metadata for MediaArtwork);
    atomic_store(result, (unint64_t *)&qword_1EE442CC0);
  }
  return result;
}

uint64_t sub_19CF5EE20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Models.ToastAction.init(from:)(a1, a2);
}

uint64_t sub_19CF5EE34(_QWORD *a1)
{
  return Models.ToastAction.encode(to:)(a1);
}

uint64_t sub_19CF5EE48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.ToastAction.init(deserializing:using:)(a1, a2, a3);
}

__n128 Models.ToastAction.init(actionMetrics:title:message:duration:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>, double a7@<D0>)
{
  __n128 result;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;

  v16 = &_s12_EmptySourceVN;
  v17 = &off_1EE4379C0;
  MediaArtwork.init(_:)(&v15, (uint64_t)&a6[1]);
  result = *a1;
  *a6 = *a1;
  a6[6].n128_u64[1] = a2;
  a6[7].n128_u64[0] = a3;
  a6[7].n128_u64[1] = a4;
  a6[8].n128_u64[0] = a5;
  a6[8].n128_f64[1] = a7;
  return result;
}

uint64_t _s11ToastActionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11ToastActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = a2 + 64;
  v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v6;
  v13 = v7;
  v11(a1 + 64, v8, v10);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  v15 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v15;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11ToastActionVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(void **)(a2 + 40);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s11ToastActionVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t _s11ToastActionVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11ToastActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.ToastAction()
{
  return &type metadata for Models.ToastAction;
}

uint64_t _s11ToastActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CF5F2EC + 4 * byte_19D06583E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CF5F320 + 4 * byte_19D065839[v4]))();
}

uint64_t sub_19CF5F320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF5F328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF5F330);
  return result;
}

uint64_t sub_19CF5F33C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF5F344);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CF5F348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF5F350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11ToastActionV10CodingKeysOMa()
{
  return &_s11ToastActionV10CodingKeysON;
}

unint64_t sub_19CF5F370()
{
  unint64_t result;

  result = qword_1EE442CC8;
  if (!qword_1EE442CC8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D065970, &_s11ToastActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442CC8);
  }
  return result;
}

unint64_t sub_19CF5F3B8()
{
  unint64_t result;

  result = qword_1EE442CD0;
  if (!qword_1EE442CD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0658E0, &_s11ToastActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442CD0);
  }
  return result;
}

unint64_t sub_19CF5F400()
{
  unint64_t result;

  result = qword_1EE442CD8;
  if (!qword_1EE442CD8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D065908, &_s11ToastActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442CD8);
  }
  return result;
}

uint64_t sub_19CF5F444(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_19CF5F66C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF5F68C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0[3] + 16);
  sub_19CD249F0();
  swift_bridgeObjectRetain();
  v2 = sub_19CFDFBB4();
  if (v1)
  {
    v3 = (uint64_t *)(v0[3] + 32);
    do
    {
      v4 = *v3++;
      sub_19CE89694(&v9, v4);
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[6] = v2;
  v5 = v0[4];
  v6 = swift_task_alloc();
  v0[7] = v6;
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_19CF5F784;
  return sub_19CF518B0((uint64_t)(v0 + 2), (uint64_t)&unk_1EE442890, v6, v0[5]);
}

uint64_t sub_19CF5F784()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_19CF5F7F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t bootstrap(objects:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CF5F84C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 32) = (*(uint64_t (**)(void))(v0 + 16))();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_19CF5F8A4;
  return BaseObjectGraph._withAllDependenciesResolved.getter();
}

uint64_t sub_19CF5F8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_19CF5F918()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
}

uint64_t partialBootstrap(_:objects:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF5F96C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  *(_QWORD *)(v0 + 40) = (*(uint64_t (**)(void))(v0 + 24))();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1EE442CF0 + dword_1EE442CF0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_19CF5F9DC;
  return v3(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19CF5F9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  v5 = swift_release();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t dispatch thunk of FrameworkBootstrap.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t JSIncident.IncidentType.displayName.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x20676E697373696DLL;
  else
    return 0x6570797420646162;
}

uint64_t JSIncident.problemSummary.getter()
{
  uint64_t v0;
  _QWORD v2[2];

  sub_19CFE010C();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "Encountered ");
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v0 = v2[0];
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "Recovered by ");
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

JetEngine::JSIncident::IncidentType_optional __swiftcall JSIncident.IncidentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  JetEngine::JSIncident::IncidentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_19CFE0424();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t JSIncident.IncidentType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x756C61566C6C756ELL;
  else
    return 0x65707954646162;
}

uint64_t sub_19CF5FE30(char *a1, char *a2)
{
  return sub_19CE82208(*a1, *a2);
}

uint64_t sub_19CF5FE3C()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF5FEC0()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF5FF20()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

JetEngine::JSIncident::IncidentType_optional sub_19CF5FFA0(Swift::String *a1)
{
  return JSIncident.IncidentType.init(rawValue:)(*a1);
}

void sub_19CF5FFAC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65707954646162;
  if (*v1)
    v2 = 0x756C61566C6C756ELL;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t JSIncident.RecoveryAction.sentenceFragment.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000015;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

JetEngine::JSIncident::RecoveryAction_optional __swiftcall JSIncident.RecoveryAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  JetEngine::JSIncident::RecoveryAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_19CFE0424();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t JSIncident.RecoveryAction.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aCoercedvdefaul_0[8 * *v0];
}

uint64_t sub_19CF600C4(char *a1, char *a2)
{
  return sub_19CE822B0(*a1, *a2);
}

uint64_t sub_19CF600D0()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF60138()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF60174()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

JetEngine::JSIncident::RecoveryAction_optional sub_19CF601D8(Swift::String *a1)
{
  return JSIncident.RecoveryAction.init(rawValue:)(*a1);
}

void sub_19CF601E4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aCoercedvdefaul_0[8 * *v1];
  a1[1] = 0xEC00000065756C61;
}

uint64_t static JSIncident.property.getter()
{
  return 0x6E656469636E6924;
}

void sub_19CF60224(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[5];
  uint64_t v23;
  uint64_t v24[3];
  uint64_t v25;
  _BYTE v26[40];
  uint64_t v27;
  __int128 v28;
  unsigned __int8 v29;
  uint64_t v30;

  sub_19CD3E448(a1, (uint64_t)v24);
  v22[0] = a2;
  swift_bridgeObjectRetain();
  sub_19CF6048C((uint64_t)v24, v22, (uint64_t)v26);
  if (v3)
  {
    if (qword_1EE43AFF0 != -1)
      swift_once();
    v6 = (void *)qword_1EE465C20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
    v25 = v9;
    v24[0] = 0xD000000000000032;
    v24[1] = 0x800000019D0780F0;
    memset(v26, 0, 32);
    v10 = v6;
    sub_19CD40658((uint64_t)v24, (uint64_t)v26);
    *(_BYTE *)(v8 + 64) = 0;
    v11 = *(_OWORD *)&v26[16];
    *(_OWORD *)(v8 + 32) = *(_OWORD *)v26;
    *(_OWORD *)(v8 + 48) = v11;
    *(_QWORD *)(v7 + 32) = v8;
    swift_getErrorValue();
    v12 = v22[4];
    v13 = v23;
    v25 = v23;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_2Tm, v12, v13);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
    sub_19CCF8C5C((uint64_t)v24, (uint64_t)v22, &qword_1ECEB3370);
    memset(v26, 0, 32);
    sub_19CD40658((uint64_t)v22, (uint64_t)v26);
    *(_BYTE *)(v15 + 64) = 0;
    v16 = *(_OWORD *)&v26[16];
    *(_OWORD *)(v15 + 32) = *(_OWORD *)v26;
    *(_OWORD *)(v15 + 48) = v16;
    *(_QWORD *)(v7 + 40) = v15;
    sub_19CCECFE4((uint64_t)v24, &qword_1ECEB3370);
    *(_QWORD *)v26 = v10;
    LOBYTE(v24[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)v24);
    swift_bridgeObjectRelease();

    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    v17 = *(_OWORD *)&v26[8];
    v18 = *(_OWORD *)&v26[24];
    v19 = v27;
    v20 = v29;
    v21 = v30;
    *(_QWORD *)a3 = v26[0];
    *(_OWORD *)(a3 + 8) = v17;
    *(_OWORD *)(a3 + 24) = v18;
    *(_QWORD *)(a3 + 40) = v19;
    *(_OWORD *)(a3 + 48) = v28;
    *(_QWORD *)(a3 + 64) = v20;
    *(_QWORD *)(a3 + 72) = v21;
  }
}

uint64_t sub_19CF6048C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  v6 = *a2;
  JSONObject.subscript.getter(1701869940, 0xE400000000000000, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v7 = v69;
  if (!v69)
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v8 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  if (!v10)
  {
LABEL_7:
    sub_19CD3E3F8((uint64_t)&v71);
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v13 = 1701869940;
    v14 = 0xE400000000000000;
LABEL_8:
    v13[1] = v14;
    v13[2] = 0x20000001E3DC8BC0uLL;
    v13[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  v11 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (v11 == 1)
    {
      v12 = 1;
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  v12 = 0;
LABEL_10:
  sub_19CD3E3F8((uint64_t)&v71);
  JSONObject.subscript.getter(0x6465746365707865, 0xE800000000000000, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v16 = v69;
  if (!v69)
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)&v71);
    goto LABEL_28;
  }
  v17 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v20 = v19;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19CD3E3F8((uint64_t)&v71);
  if (!v20)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v13 = 0x6465746365707865;
    v14 = 0xE800000000000000;
    goto LABEL_8;
  }
  v74 = v18;
  JSONObject.subscript.getter(0x6C6175746361, 0xE600000000000000, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v21 = v69;
  if (!v69)
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)&v71);
    goto LABEL_30;
  }
  v63 = v12;
  v22 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  v25 = v24;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19CD3E3F8((uint64_t)&v71);
  if (!v25)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *v13 = 0x6C6175746361;
    v14 = 0xE600000000000000;
    goto LABEL_8;
  }
  v64 = v25;
  v14 = 0xEA00000000006874;
  JSONObject.subscript.getter(0x61507463656A626FLL, 0xEA00000000006874, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v26 = v69;
  if (!v69)
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)&v71);
    goto LABEL_32;
  }
  v61 = v23;
  v27 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
  v30 = v29;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  sub_19CD3E3F8((uint64_t)&v71);
  if (!v30)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    v53 = 0x61507463656A626FLL;
LABEL_40:
    *v13 = v53;
    goto LABEL_8;
  }
  v62 = v30;
  v14 = 0xEC00000073656D61;
  JSONObject.subscript.getter(0x4E747865746E6F63, 0xEC00000073656D61, (uint64_t)v68);
  sub_19CCF8C5C((uint64_t)v68, (uint64_t)v65, &qword_1ECEB1328);
  v31 = v66;
  if (!v66)
  {
    sub_19CCECFE4((uint64_t)v65, &qword_1ECEB1328);
    v71 = 0u;
    v72 = 0u;
    v73 = 0;
    sub_19CD3E3F8((uint64_t)v68);
    goto LABEL_34;
  }
  v60 = v28;
  v32 = v67;
  __swift_project_boxed_opaque_existential_1(v65, v66);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v32 + 120))(&v71, v31, v32);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
  v33 = *((_QWORD *)&v72 + 1);
  sub_19CD3E3F8((uint64_t)v68);
  if (!v33)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v71, &qword_1EE43D068);
LABEL_35:
    sub_19CDC5494();
    swift_allocError();
    v53 = 0x4E747865746E6F63;
    goto LABEL_40;
  }
  v34 = v73;
  __swift_project_boxed_opaque_existential_1(&v71, v33);
  v35 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v34 + 40))(MEMORY[0x1E0DEA968], v33, v34);
  sub_19CE07F20((uint64_t)&v71);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v14 = 0xEE006E6F69746341;
  JSONObject.subscript.getter(0x797265766F636572, 0xEE006E6F69746341, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v36 = v69;
  if (!v69)
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    goto LABEL_38;
  }
  v59 = v35;
  v37 = v70;
  __swift_project_boxed_opaque_existential_1(v68, v69);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
  v40 = v39;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  if (!v40)
  {
LABEL_38:
    sub_19CD3E3F8((uint64_t)&v71);
    goto LABEL_39;
  }
  v41._countAndFlagsBits = v38;
  v41._object = v40;
  JSIncident.RecoveryAction.init(rawValue:)(v41);
  v42 = LOBYTE(v65[0]);
  sub_19CD3E3F8((uint64_t)&v71);
  if (v42 == 3)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    v53 = 0x797265766F636572;
    goto LABEL_40;
  }
  v58 = v42;
  JSONObject.subscript.getter(0x6B63617473, 0xE500000000000000, (uint64_t)&v71);
  sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, &qword_1ECEB1328);
  v43 = v69;
  if (v69)
  {
    v44 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
    v47 = v46;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_19CD3E3F8((uint64_t)&v71);
    if (v47)
    {
      v48 = sub_19CE234D8(v45, v47);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, v6, (uint64_t)&v71);
        swift_bridgeObjectRelease();
        sub_19CCF8C5C((uint64_t)&v71, (uint64_t)v68, qword_1EE43A238);
        v49 = v69;
        v50 = v63;
        v51 = v64;
        if (v69)
        {
          v52 = v70;
          __swift_project_boxed_opaque_existential_1(v68, v69);
          (*(void (**)(_QWORD, void *, uint64_t, uint64_t))(v52 + 8))(MEMORY[0x1E0DEA968], v3, v49, v52);
          v50 = v63;

          sub_19CD3E3F8(a1);
          sub_19CCECFE4((uint64_t)&v71, qword_1EE43A238);
          result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
        }
        else
        {

          sub_19CD3E3F8(a1);
          sub_19CCECFE4((uint64_t)&v71, qword_1EE43A238);
          result = sub_19CCECFE4((uint64_t)v68, qword_1EE43A238);
        }
        v43 = 0;
        v54 = v74;
        v55 = v61;
        v56 = v62;
        v57 = v58;
        goto LABEL_47;
      }
      v43 = (uint64_t)v48;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v43 = 0;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v68, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)&v71);
    swift_bridgeObjectRelease();
  }
  v54 = v74;
  v55 = v61;
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  v56 = v62;
  v57 = v58;
  v51 = v64;
  v50 = v63;
LABEL_47:
  *(_BYTE *)a3 = v50;
  *(_QWORD *)(a3 + 8) = v54;
  *(_QWORD *)(a3 + 16) = v20;
  *(_QWORD *)(a3 + 24) = v55;
  *(_QWORD *)(a3 + 32) = v51;
  *(_QWORD *)(a3 + 40) = v60;
  *(_QWORD *)(a3 + 48) = v56;
  *(_QWORD *)(a3 + 56) = v59;
  *(_BYTE *)(a3 + 64) = v57;
  *(_QWORD *)(a3 + 72) = v43;
  return result;
}

void JSIncident.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t JSIncident.expected.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.actual.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.objectPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSIncident.contextNames.getter()
{
  return swift_bridgeObjectRetain();
}

void JSIncident.recoveryAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t JSIncident.contextSummary.getter()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
  sub_19CD1632C();
  v0 = sub_19CFDF4F4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t JSIncident.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 56) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD1632C();
    sub_19CFDF4F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
  }
  JSIncident.problemSummary.getter();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s9JetEngine10JSIncidentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 40);
  v26 = *(_QWORD *)(a1 + 32);
  v5 = *(char *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)a1 == 0;
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a2 + 40);
  v21 = *(_QWORD **)(a1 + 56);
  v22 = *(_QWORD *)(a2 + 48);
  if (*(_BYTE *)a1)
    v11 = 0x756C61566C6C756ELL;
  else
    v11 = 0x65707954646162;
  if (v10)
    v12 = 0xE700000000000000;
  else
    v12 = 0xE900000000000065;
  if (*(_BYTE *)a2)
    v13 = 0x756C61566C6C756ELL;
  else
    v13 = 0x65707954646162;
  if (*(_BYTE *)a2)
    v14 = 0xE900000000000065;
  else
    v14 = 0xE700000000000000;
  v18 = *(char *)(a2 + 64);
  v19 = v5;
  v20 = *(_QWORD **)(a2 + 56);
  if (v11 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = 0;
    if ((v15 & 1) == 0)
      return v16 & 1;
  }
  if (v2 == v7 && v3 == v6 || (v16 = 0, (sub_19CFE06A0() & 1) != 0))
  {
    if (v4 == v8 && v26 == v9 || (v16 = 0, (sub_19CFE06A0() & 1) != 0))
    {
      if (v25 == v24 && v23 == v22 || (v16 = 0, (sub_19CFE06A0() & 1) != 0))
      {
        if ((sub_19CDCC618(v21, v20) & 1) != 0)
        {
          if (*(_QWORD *)&aCoercedvdefaul_0[8 * v19] == *(_QWORD *)&aCoercedvdefaul_0[8 * v18])
            v16 = 1;
          else
            v16 = sub_19CFE06A0();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v16 = 0;
        }
      }
    }
  }
  return v16 & 1;
}

unint64_t sub_19CF6126C()
{
  unint64_t result;

  result = qword_1EE442CF8;
  if (!qword_1EE442CF8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSIncident.IncidentType, &type metadata for JSIncident.IncidentType);
    atomic_store(result, (unint64_t *)&qword_1EE442CF8);
  }
  return result;
}

unint64_t sub_19CF612B4()
{
  unint64_t result;

  result = qword_1EE442D00;
  if (!qword_1EE442D00)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSIncident.RecoveryAction, &type metadata for JSIncident.RecoveryAction);
    atomic_store(result, (unint64_t *)&qword_1EE442D00);
  }
  return result;
}

uint64_t destroy for JSIncident()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSIncident(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSIncident(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSIncident(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSIncident(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSIncident(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JSIncident.IncidentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF615FC + 4 * byte_19D065A0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF61630 + 4 * byte_19D065A08[v4]))();
}

uint64_t sub_19CF61630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF61638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF61640);
  return result;
}

uint64_t sub_19CF6164C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF61654);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF61658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF61660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSIncident.IncidentType()
{
  return &type metadata for JSIncident.IncidentType;
}

uint64_t storeEnumTagSinglePayload for JSIncident.RecoveryAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF616C8 + 4 * byte_19D065A17[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF616FC + 4 * byte_19D065A12[v4]))();
}

uint64_t sub_19CF616FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF61704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF6170CLL);
  return result;
}

uint64_t sub_19CF61718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF61720);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF61724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF6172C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSIncident.RecoveryAction()
{
  return &type metadata for JSIncident.RecoveryAction;
}

uint64_t sub_19CF61748(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v2 = *a2;
  JSONObject.subscript.getter(0x6E656469636E6924, 0xEA00000000007374, (uint64_t)v19);
  sub_19CCF8C5C((uint64_t)v19, (uint64_t)v13, &qword_1ECEB1328);
  v3 = v14;
  if (!v14)
  {
    sub_19CCECFE4((uint64_t)v13, &qword_1ECEB1328);
    v16 = 0u;
    v17 = 0u;
    v18 = 0;
    sub_19CD3E3F8((uint64_t)v19);
    goto LABEL_5;
  }
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 120))(&v16, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  v5 = *((_QWORD *)&v17 + 1);
  v6 = sub_19CD3E3F8((uint64_t)v19);
  if (!v5)
  {
LABEL_5:
    sub_19CCECFE4((uint64_t)&v16, &qword_1EE43D068);
    return MEMORY[0x1E0DEE9D8];
  }
  v20 = v16;
  v21 = v17;
  v22 = v18;
  MEMORY[0x1E0C80A78](v6, v7);
  v12[2] = v2;
  v8 = *((_QWORD *)&v21 + 1);
  v9 = v22;
  __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
  v10 = (*(uint64_t (**)(void (*)(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v9 + 56))(sub_19CF618C0, v12, &type metadata for JSIncident, v8, v9);
  sub_19CE07F20((uint64_t)&v20);
  return v10;
}

void sub_19CF618C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CF60224(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CF618D8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[23];
  v0[2] = v0;
  v0[3] = sub_19CF61950;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCFD7CC();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB06D0);
  return swift_continuation_await();
}

uint64_t sub_19CF61950()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 200) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CD61A9C(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 160));
  return swift_task_switch();
}

uint64_t sub_19CF619C8()
{
  _QWORD *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  sub_19CD4C0D4(v0[7], v0[8]);
  if (v0[12])
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 9));
  return swift_deallocObject();
}

uint64_t sub_19CF61A04()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

void sub_19CF61A2C(void *a1)
{
  sub_19CF4CA70(a1);
}

uint64_t sub_19CF61A34()
{
  _QWORD *v0;

  sub_19CD4C0D4(v0[2], v0[3]);
  if (v0[7])
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  return swift_deallocObject();
}

void sub_19CF61A6C(void *a1)
{
  sub_19CF4CA30(a1);
}

uint64_t sub_19CF61A78()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_underlyingDictionary);
  v2 = sub_19CFDF3C8();

  return v2;
}

unint64_t sub_19CF61AD8(uint64_t a1)
{
  unint64_t result;

  result = sub_19CF61AFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19CF61AFC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE442D10;
  if (!qword_1EE442D10)
  {
    v1 = sub_19CDB88D4();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EE442D10);
  }
  return result;
}

uint64_t static IntentDispatchTimeout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_19CF61B70(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntentDispatchTimeout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IntentDispatchTimeout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_19CF61BEC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_19CF61C08()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release();
  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 176);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
      v6 = "";
    }
    v7 = (uint64_t *)(v0 + 272);
    v11 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 240);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 296))(*(_QWORD *)(v0 + 272), v10, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v14, "Perform JetPack Request", v6, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    v7 = (uint64_t *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 248);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 280);
  v16 = *(_QWORD *)(v0 + 240);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF61E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  v5 = sub_19CFDF1E8();
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v6 = sub_19CFDF1AC();
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF61ECC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  char v45;

  if (qword_1ECEB09F0 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECEB09D8);
  sub_19CFDF1C4();
  sub_19CFDF188();
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16);
    v7(v4, *(_QWORD *)(v0 + 224), v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v9, "Perform JetPack Request", "", v8, 2u);
    MEMORY[0x1A1ADBE9C](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 192);

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v11 = (__int128 *)(v0 + 16);
  *(_QWORD *)(v0 + 240) = v7;
  v7(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184));
  sub_19CFDF20C();
  swift_allocObject();
  *(_QWORD *)(v0 + 248) = sub_19CFDF200();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v12 = *(_QWORD *)(v0 + 128);
  v13 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  v42 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
  v16._object = (void *)0x800000019D073710;
  v16._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v0 + 80) = &type metadata for SilverBulletJetPackAssetRequest;
  v17 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v17;
  v18 = *(_BYTE *)(v12 + 32);
  v19 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v12;
  *(_OWORD *)(v17 + 32) = v19;
  *(_BYTE *)(v17 + 48) = v18;
  sub_19CCF8C5C(v0 + 56, v0 + 88, &qword_1ECEB3370);
  *v11 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CCEC5FC(v12);
  sub_19CD40658(v0 + 88, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v20 = *(_OWORD *)(v0 + 32);
  v43 = *v11;
  v44 = v20;
  v45 = *(_BYTE *)(v0 + 48);
  v21 = v42;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v42[2] + 1, 1, v42);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v25 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 128);
  v21[2] = v23 + 1;
  v27 = &v21[5 * v23];
  v28 = v43;
  v29 = v44;
  *((_BYTE *)v27 + 64) = v45;
  *((_OWORD *)v27 + 2) = v28;
  *((_OWORD *)v27 + 3) = v29;
  v42 = v21;
  sub_19CCECFE4(v0 + 56, &qword_1ECEB3370);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *(_QWORD *)(v14 + 32) = v21;
  *(_QWORD *)&v43 = v15;
  LOBYTE(v42) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v42);
  swift_bridgeObjectRelease();

  v31 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v31;
  *(_QWORD *)(v31 + 16) = v24;
  v33 = *(_OWORD *)v26;
  v32 = *(_OWORD *)(v26 + 16);
  *(_BYTE *)(v31 + 56) = *(_BYTE *)(v26 + 32);
  *(_OWORD *)(v31 + 24) = v33;
  *(_OWORD *)(v31 + 40) = v32;
  v35 = *(_OWORD *)v25;
  v34 = *(_OWORD *)(v25 + 16);
  *(_QWORD *)(v31 + 96) = *(_QWORD *)(v25 + 32);
  *(_OWORD *)(v31 + 64) = v35;
  *(_OWORD *)(v31 + 80) = v34;
  sub_19CCEC5FC(v26);
  sub_19CF6EE10(v25);
  swift_retain();
  v36 = swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v36;
  *(_QWORD *)v36 = v0;
  *(_QWORD *)(v36 + 8) = sub_19CF6230C;
  v37 = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 120);
  v38 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v36 + 72) = v31;
  *(_QWORD *)(v36 + 80) = v37;
  *(_QWORD *)(v36 + 56) = v39;
  *(_QWORD *)(v36 + 64) = &unk_1EE442E60;
  LOBYTE(v37) = *(_BYTE *)(v38 + 32);
  v40 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v38;
  *(_OWORD *)(v36 + 32) = v40;
  *(_BYTE *)(v36 + 48) = v37;
  return swift_task_switch();
}

uint64_t sub_19CF6230C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF62378()
{
  uint64_t v0;
  uint64_t *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (uint64_t *)(v0 + 208);
  v2 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v3 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 160);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x1E0DF2190])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
      v7 = "";
    }
    v1 = (uint64_t *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 192);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 240))(*(_QWORD *)(v0 + 216), v10, v11);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v14, "Perform JetPack Request", v7, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 192);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 184);
  v9(*v1, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF62568()
{
  uint64_t v0;
  uint64_t *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (uint64_t *)(v0 + 200);
  swift_release();
  v2 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v3 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 152);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E0DF2190])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v7 = "";
    }
    v1 = (uint64_t *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 240))(*(_QWORD *)(v0 + 216), v10, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v14, "Perform JetPack Request", v7, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 192);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 184);
  v9(*v1, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6275C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unsigned int v104;
  void *v105;
  void *v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  _QWORD *v109;
  __int128 v110;
  __int128 v111;
  char v112;

  v1 = (__int128 *)(v0 + 176);
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 808);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v102 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v109 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 376) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 352, v0 + 416, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 416, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v10 = *(_OWORD *)(v0 + 192);
  v110 = *v1;
  v111 = v10;
  v112 = *(_BYTE *)(v0 + 208);
  v11 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, v109[2] + 1, 1, v109);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v110;
  v16 = v111;
  *((_BYTE *)v14 + 64) = v112;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  v109 = v11;
  sub_19CCECFE4(v0 + 352, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v110 = v5;
  LOBYTE(v109) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v109);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 760);
  v19 = *(_QWORD *)(v0 + 736);
  v20 = *(_QWORD *)(v0 + 672);
  v21 = *(_QWORD *)(v0 + 664);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, (uint64_t)v102);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v107(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 696);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 736), v23, type metadata accessor for JetPackAsset);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v102, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v110, v23, v24, v25);
    v22 = v110;
    sub_19CCEACE4(v23, type metadata accessor for JetPackAsset);
  }
  v104 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 760);
  v28 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 664);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  v109 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v107(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 728);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 664);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFE8AC(v35, (uint64_t)v36, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v37 = *(_OWORD *)(v0 + 232);
  v110 = *v26;
  v111 = v37;
  v112 = *(_BYTE *)(v0 + 248);
  v38 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v110;
  v44 = v111;
  *((_BYTE *)v42 + 64) = v112;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  v109 = v38;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v104 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v104;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v110 = *v41;
  v111 = v46;
  v112 = *(_BYTE *)(v0 + 168);
  v47 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 624);
  v51 = *(_QWORD *)(v0 + 576);
  v47[2] = v49 + 1;
  v52 = &v47[5 * v49];
  v53 = v110;
  v54 = v111;
  *((_BYTE *)v52 + 64) = v112;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  v109 = v47;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *(_QWORD *)(v31 + 32) = v109;
  *(_QWORD *)&v110 = v32;
  LOBYTE(v109) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v109);
  swift_bridgeObjectRelease();

  v56 = *(int *)(v50 + 20);
  v57 = *(unsigned __int8 *)(v51 + v56);
  if ((v57 | 2) == 2)
  {
    if (v104 != 4)
    {
      v58 = *(_QWORD *)(v0 + 720);
      v59 = *(_QWORD *)(v0 + 664);
      sub_19CCF8C5C(*(_QWORD *)(v0 + 760), v58, (uint64_t *)&unk_1ECEB1140);
      v60 = v107(v58, 1, v59);
      v61 = *(_QWORD *)(v0 + 720);
      if (v60 == 1)
      {
        sub_19CCECFE4(v61, (uint64_t *)&unk_1ECEB1140);
      }
      else
      {
        sub_19CCFE8AC(v61, *(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
        if (v104 < 2)
        {
          v62 = *(_QWORD *)(v0 + 656);
          v63 = *(_QWORD *)(v0 + 576);
          v64 = (void *)qword_1ECEB0B60;
          v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_19D0522A0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
          v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v0 + 472) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v0 + 448) = 0xD000000000000012;
          *(_QWORD *)(v0 + 456) = 0x800000019D073850;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v67 = v64;
          sub_19CD40658(v0 + 448, v0 + 96);
          *(_BYTE *)(v0 + 128) = 0;
          v68 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v66 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v66 + 48) = v68;
          *(_BYTE *)(v66 + 64) = *(_BYTE *)(v0 + 128);
          *(_QWORD *)(v65 + 32) = v66;
          *(_QWORD *)&v110 = v67;
          LOBYTE(v109) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v65, (JetEngine::LogMessageLevel)&v109);
          swift_bridgeObjectRelease();

          sub_19CCFECEC(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          v69 = *(_QWORD *)(v0 + 656);
          if (v104 - 1 >= 2)
          {
            sub_19CCEACE4(v69, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            v70 = *(unsigned __int8 *)(v69 + *(int *)(v50 + 20));
            sub_19CCEACE4(v69, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
            if (v70 < 2)
            {
              v71 = *(_QWORD *)(v0 + 696);
              v72 = *(_QWORD *)(v0 + 688);
              v101 = *(_QWORD *)(v0 + 672);
              v73 = *(_QWORD *)(v0 + 648);
              v74 = *(_QWORD *)(v0 + 640);
              v75 = *(_QWORD *)(v0 + 632);
              v76 = *(_QWORD *)(v0 + 616);
              v108 = v76;
              v77 = *(void **)(v0 + 600);
              v105 = *(void **)(v0 + 592);
              v106 = *(void **)(v0 + 608);
              v103 = *(_QWORD *)(v0 + 584);
              v78 = *(_QWORD *)(v0 + 576);
              v79 = *(_QWORD *)(v0 + 568);
              v80 = sub_19CFDFA10();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v76, 1, 1, v80);
              sub_19CCFECEC(v78, v73, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              sub_19CCFECEC(v72, v71, type metadata accessor for JetPackAsset);
              v81 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
              v82 = (v74 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
              v83 = (*(unsigned __int8 *)(v101 + 80) + v82 + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
              v84 = (_QWORD *)swift_allocObject();
              v84[2] = 0;
              v84[3] = 0;
              v84[4] = v79;
              sub_19CCFE8AC(v73, (uint64_t)v84 + v81, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              v85 = (_QWORD *)((char *)v84 + v82);
              *v85 = v103;
              v85[1] = v105;
              v85[2] = v77;
              v85[3] = v106;
              sub_19CCFE8AC(v71, (uint64_t)v84 + v83, type metadata accessor for JetPackAsset);
              v86 = v77;
              v87 = v106;
              swift_retain();
              swift_unknownObjectRetain();
              v88 = v105;
              sub_19CF69A9C(v108, (uint64_t)&unk_1EE442DF0, (uint64_t)v84);
              swift_release();
            }
          }
          v96 = *(_QWORD *)(v0 + 688);
          v97 = *(_QWORD *)(v0 + 560);
          sub_19CCECFE4(*(_QWORD *)(v0 + 760), (uint64_t *)&unk_1ECEB1140);
          sub_19CCFE8AC(v96, v97, type metadata accessor for JetPackAsset);
          v98 = *(_QWORD **)(v0 + 568);
          v100 = v98[5];
          v99 = v98[6];
          __swift_project_boxed_opaque_existential_1(v98 + 2, v100);
          (*(void (**)(uint64_t, uint64_t))(v99 + 56))(v100, v99);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v93 = *(uint64_t (**)(void))(v0 + 8);
          return v93();
        }
        sub_19CCEACE4(*(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
      }
    }
    v57 = *(unsigned __int8 *)(v51 + v56);
  }
  if (v57 > 1)
  {
    v89 = *(_QWORD *)(v0 + 760);
    v90 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v89, (uint64_t *)&unk_1ECEB1140);
    v91 = v90[5];
    v92 = v90[6];
    __swift_project_boxed_opaque_existential_1(v90 + 2, v91);
    (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v93 = *(uint64_t (**)(void))(v0 + 8);
    return v93();
  }
  if (v104 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 768))(*(_QWORD *)(v0 + 712), 1, 1, *(_QWORD *)(v0 + 664));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 712), (uint64_t *)&unk_1ECEB1140);
  v95 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 832) = v95;
  *v95 = v0;
  v95[1] = sub_19CF64AC4;
  return sub_19CF68880(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 712));
}

uint64_t sub_19CF633B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF63414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  __int128 *v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  __int128 v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  Swift::String v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(void);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  unsigned int v88;
  void *v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  _QWORD *v92;
  __int128 v93;
  __int128 v94;
  char v95;

  sub_19CCEACE4(*(_QWORD *)(v0 + 704), type metadata accessor for JetPackAsset);
  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 664);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, v0 + 16);
  sub_19CCF8C5C(v1, v2, (uint64_t *)&unk_1ECEB1140);
  v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v90(v2, 1, v4) == 1)
  {
    v5 = 4;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 696);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 736), v6, type metadata accessor for JetPackAsset);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v93, v6, v7, v8);
    v5 = v93;
    sub_19CCEACE4(v6, type metadata accessor for JetPackAsset);
  }
  v88 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v9 = (__int128 *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 760);
  v11 = *(_QWORD *)(v0 + 728);
  v12 = *(_QWORD *)(v0 + 664);
  v13 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  v92 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v16._countAndFlagsBits = 0x7341646568636163;
  v16._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19CCF8C5C(v10, v11, (uint64_t *)&unk_1ECEB1140);
  v17 = v90(v11, 1, v12);
  v18 = *(_QWORD *)(v0 + 728);
  if (v17 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 664);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFE8AC(v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v9 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v20 = *(_OWORD *)(v0 + 232);
  v93 = *v9;
  v94 = v20;
  v95 = *(_BYTE *)(v0 + 248);
  v21 = v92;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v92[2] + 1, 1, v92);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v24 = (__int128 *)(v0 + 136);
  v21[2] = v23 + 1;
  v25 = &v21[5 * v23];
  v26 = v93;
  v27 = v94;
  *((_BYTE *)v25 + 64) = v95;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v92 = v21;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v28._countAndFlagsBits = 0x3D73757461747320;
  v28._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v88 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v88;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v29 = *(_OWORD *)(v0 + 152);
  v93 = *v24;
  v94 = v29;
  v95 = *(_BYTE *)(v0 + 168);
  v30 = v92;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_19CD40918(0, v92[2] + 1, 1, v92);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v33 = *(_QWORD *)(v0 + 624);
  v34 = *(_QWORD *)(v0 + 576);
  v30[2] = v32 + 1;
  v35 = &v30[5 * v32];
  v36 = v93;
  v37 = v94;
  *((_BYTE *)v35 + 64) = v95;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
  v92 = v30;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  *(_QWORD *)(v14 + 32) = v30;
  *(_QWORD *)&v93 = v15;
  LOBYTE(v92) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v92);
  swift_bridgeObjectRelease();

  v39 = *(int *)(v33 + 20);
  v40 = *(unsigned __int8 *)(v34 + v39);
  if ((v40 | 2) == 2)
  {
    if (v88 != 4)
    {
      v41 = *(_QWORD *)(v0 + 720);
      v42 = *(_QWORD *)(v0 + 664);
      sub_19CCF8C5C(*(_QWORD *)(v0 + 760), v41, (uint64_t *)&unk_1ECEB1140);
      v43 = v90(v41, 1, v42);
      v44 = *(_QWORD *)(v0 + 720);
      if (v43 == 1)
      {
        sub_19CCECFE4(v44, (uint64_t *)&unk_1ECEB1140);
      }
      else
      {
        sub_19CCFE8AC(v44, *(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
        if (v88 < 2)
        {
          v45 = *(_QWORD *)(v0 + 656);
          v46 = *(_QWORD *)(v0 + 576);
          v47 = (void *)qword_1ECEB0B60;
          v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_19D0522A0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
          v49 = swift_allocObject();
          v50 = MEMORY[0x1E0DEA968];
          *(_OWORD *)(v49 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v0 + 472) = v50;
          *(_QWORD *)(v0 + 448) = 0xD000000000000012;
          *(_QWORD *)(v0 + 456) = 0x800000019D073850;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v51 = v47;
          sub_19CD40658(v0 + 448, v0 + 96);
          *(_BYTE *)(v0 + 128) = 0;
          v52 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v49 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v49 + 48) = v52;
          *(_BYTE *)(v49 + 64) = *(_BYTE *)(v0 + 128);
          *(_QWORD *)(v48 + 32) = v49;
          *(_QWORD *)&v93 = v51;
          LOBYTE(v92) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v48, (JetEngine::LogMessageLevel)&v92);
          swift_bridgeObjectRelease();

          sub_19CCFECEC(v46, v45, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          v53 = *(_QWORD *)(v0 + 656);
          if (v88 - 1 >= 2)
          {
            sub_19CCEACE4(v53, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            v54 = *(unsigned __int8 *)(v53 + *(int *)(v33 + 20));
            sub_19CCEACE4(v53, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
            if (v54 < 2)
            {
              v55 = *(_QWORD *)(v0 + 696);
              v56 = *(_QWORD *)(v0 + 688);
              v85 = *(_QWORD *)(v0 + 672);
              v57 = *(_QWORD *)(v0 + 648);
              v58 = *(_QWORD *)(v0 + 640);
              v59 = *(_QWORD *)(v0 + 632);
              v60 = *(_QWORD *)(v0 + 616);
              v89 = *(void **)(v0 + 608);
              v91 = v60;
              v61 = *(void **)(v0 + 600);
              v86 = *(_QWORD *)(v0 + 584);
              v87 = *(void **)(v0 + 592);
              v62 = *(_QWORD *)(v0 + 576);
              v63 = *(_QWORD *)(v0 + 568);
              v64 = sub_19CFDFA10();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v60, 1, 1, v64);
              sub_19CCFECEC(v62, v57, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              sub_19CCFECEC(v56, v55, type metadata accessor for JetPackAsset);
              v65 = (*(unsigned __int8 *)(v59 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
              v66 = (v58 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
              v67 = (*(unsigned __int8 *)(v85 + 80) + v66 + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
              v68 = (_QWORD *)swift_allocObject();
              v68[2] = 0;
              v68[3] = 0;
              v68[4] = v63;
              sub_19CCFE8AC(v57, (uint64_t)v68 + v65, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              v69 = (_QWORD *)((char *)v68 + v66);
              *v69 = v86;
              v69[1] = v87;
              v69[2] = v61;
              v69[3] = v89;
              sub_19CCFE8AC(v55, (uint64_t)v68 + v67, type metadata accessor for JetPackAsset);
              v70 = v61;
              v71 = v89;
              swift_retain();
              swift_unknownObjectRetain();
              v72 = v87;
              sub_19CF69A9C(v91, (uint64_t)&unk_1EE442DF0, (uint64_t)v68);
              swift_release();
            }
          }
          v80 = *(_QWORD *)(v0 + 688);
          v81 = *(_QWORD *)(v0 + 560);
          sub_19CCECFE4(*(_QWORD *)(v0 + 760), (uint64_t *)&unk_1ECEB1140);
          sub_19CCFE8AC(v80, v81, type metadata accessor for JetPackAsset);
          v82 = *(_QWORD **)(v0 + 568);
          v84 = v82[5];
          v83 = v82[6];
          __swift_project_boxed_opaque_existential_1(v82 + 2, v84);
          (*(void (**)(uint64_t, uint64_t))(v83 + 56))(v84, v83);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v77 = *(uint64_t (**)(void))(v0 + 8);
          return v77();
        }
        sub_19CCEACE4(*(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
      }
    }
    v40 = *(unsigned __int8 *)(v34 + v39);
  }
  if (v40 > 1)
  {
    v73 = *(_QWORD *)(v0 + 760);
    v74 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v73, (uint64_t *)&unk_1ECEB1140);
    v75 = v74[5];
    v76 = v74[6];
    __swift_project_boxed_opaque_existential_1(v74 + 2, v75);
    (*(void (**)(uint64_t, uint64_t))(v76 + 56))(v75, v76);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v77 = *(uint64_t (**)(void))(v0 + 8);
    return v77();
  }
  if (v88 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 768))(*(_QWORD *)(v0 + 712), 1, 1, *(_QWORD *)(v0 + 664));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 712), (uint64_t *)&unk_1ECEB1140);
  v79 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 832) = v79;
  *v79 = v0;
  v79[1] = sub_19CF64AC4;
  return sub_19CF68880(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 712));
}

uint64_t sub_19CF63E68()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unsigned int v104;
  void *v105;
  void *v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  _QWORD *v109;
  __int128 v110;
  __int128 v111;
  char v112;

  v1 = (__int128 *)(v0 + 176);
  sub_19CCEACE4(*(_QWORD *)(v0 + 704), type metadata accessor for JetPackAsset);
  v2 = *(void **)(v0 + 824);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v102 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v109 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 376) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 352, v0 + 416, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 416, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v10 = *(_OWORD *)(v0 + 192);
  v110 = *v1;
  v111 = v10;
  v112 = *(_BYTE *)(v0 + 208);
  v11 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, v109[2] + 1, 1, v109);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v110;
  v16 = v111;
  *((_BYTE *)v14 + 64) = v112;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  v109 = v11;
  sub_19CCECFE4(v0 + 352, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v110 = v5;
  LOBYTE(v109) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v109);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 760);
  v19 = *(_QWORD *)(v0 + 736);
  v20 = *(_QWORD *)(v0 + 672);
  v21 = *(_QWORD *)(v0 + 664);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, (uint64_t)v102);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v107(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 696);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 736), v23, type metadata accessor for JetPackAsset);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v102, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v110, v23, v24, v25);
    v22 = v110;
    sub_19CCEACE4(v23, type metadata accessor for JetPackAsset);
  }
  v104 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 760);
  v28 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 664);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  v109 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v107(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 728);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 664);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFE8AC(v35, (uint64_t)v36, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v37 = *(_OWORD *)(v0 + 232);
  v110 = *v26;
  v111 = v37;
  v112 = *(_BYTE *)(v0 + 248);
  v38 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v110;
  v44 = v111;
  *((_BYTE *)v42 + 64) = v112;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  v109 = v38;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v104 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v104;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v110 = *v41;
  v111 = v46;
  v112 = *(_BYTE *)(v0 + 168);
  v47 = v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 624);
  v51 = *(_QWORD *)(v0 + 576);
  v47[2] = v49 + 1;
  v52 = &v47[5 * v49];
  v53 = v110;
  v54 = v111;
  *((_BYTE *)v52 + 64) = v112;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  v109 = v47;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *(_QWORD *)(v31 + 32) = v109;
  *(_QWORD *)&v110 = v32;
  LOBYTE(v109) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v109);
  swift_bridgeObjectRelease();

  v56 = *(int *)(v50 + 20);
  v57 = *(unsigned __int8 *)(v51 + v56);
  if ((v57 | 2) == 2)
  {
    if (v104 != 4)
    {
      v58 = *(_QWORD *)(v0 + 720);
      v59 = *(_QWORD *)(v0 + 664);
      sub_19CCF8C5C(*(_QWORD *)(v0 + 760), v58, (uint64_t *)&unk_1ECEB1140);
      v60 = v107(v58, 1, v59);
      v61 = *(_QWORD *)(v0 + 720);
      if (v60 == 1)
      {
        sub_19CCECFE4(v61, (uint64_t *)&unk_1ECEB1140);
      }
      else
      {
        sub_19CCFE8AC(v61, *(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
        if (v104 < 2)
        {
          v62 = *(_QWORD *)(v0 + 656);
          v63 = *(_QWORD *)(v0 + 576);
          v64 = (void *)qword_1ECEB0B60;
          v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_19D0522A0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
          v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v0 + 472) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v0 + 448) = 0xD000000000000012;
          *(_QWORD *)(v0 + 456) = 0x800000019D073850;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v67 = v64;
          sub_19CD40658(v0 + 448, v0 + 96);
          *(_BYTE *)(v0 + 128) = 0;
          v68 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v66 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v66 + 48) = v68;
          *(_BYTE *)(v66 + 64) = *(_BYTE *)(v0 + 128);
          *(_QWORD *)(v65 + 32) = v66;
          *(_QWORD *)&v110 = v67;
          LOBYTE(v109) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v65, (JetEngine::LogMessageLevel)&v109);
          swift_bridgeObjectRelease();

          sub_19CCFECEC(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          v69 = *(_QWORD *)(v0 + 656);
          if (v104 - 1 >= 2)
          {
            sub_19CCEACE4(v69, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
          }
          else
          {
            v70 = *(unsigned __int8 *)(v69 + *(int *)(v50 + 20));
            sub_19CCEACE4(v69, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
            if (v70 < 2)
            {
              v71 = *(_QWORD *)(v0 + 696);
              v72 = *(_QWORD *)(v0 + 688);
              v101 = *(_QWORD *)(v0 + 672);
              v73 = *(_QWORD *)(v0 + 648);
              v74 = *(_QWORD *)(v0 + 640);
              v75 = *(_QWORD *)(v0 + 632);
              v76 = *(_QWORD *)(v0 + 616);
              v108 = v76;
              v77 = *(void **)(v0 + 600);
              v105 = *(void **)(v0 + 592);
              v106 = *(void **)(v0 + 608);
              v103 = *(_QWORD *)(v0 + 584);
              v78 = *(_QWORD *)(v0 + 576);
              v79 = *(_QWORD *)(v0 + 568);
              v80 = sub_19CFDFA10();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v76, 1, 1, v80);
              sub_19CCFECEC(v78, v73, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              sub_19CCFECEC(v72, v71, type metadata accessor for JetPackAsset);
              v81 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
              v82 = (v74 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
              v83 = (*(unsigned __int8 *)(v101 + 80) + v82 + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
              v84 = (_QWORD *)swift_allocObject();
              v84[2] = 0;
              v84[3] = 0;
              v84[4] = v79;
              sub_19CCFE8AC(v73, (uint64_t)v84 + v81, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
              v85 = (_QWORD *)((char *)v84 + v82);
              *v85 = v103;
              v85[1] = v105;
              v85[2] = v77;
              v85[3] = v106;
              sub_19CCFE8AC(v71, (uint64_t)v84 + v83, type metadata accessor for JetPackAsset);
              v86 = v77;
              v87 = v106;
              swift_retain();
              swift_unknownObjectRetain();
              v88 = v105;
              sub_19CF69A9C(v108, (uint64_t)&unk_1EE442DF0, (uint64_t)v84);
              swift_release();
            }
          }
          v96 = *(_QWORD *)(v0 + 688);
          v97 = *(_QWORD *)(v0 + 560);
          sub_19CCECFE4(*(_QWORD *)(v0 + 760), (uint64_t *)&unk_1ECEB1140);
          sub_19CCFE8AC(v96, v97, type metadata accessor for JetPackAsset);
          v98 = *(_QWORD **)(v0 + 568);
          v100 = v98[5];
          v99 = v98[6];
          __swift_project_boxed_opaque_existential_1(v98 + 2, v100);
          (*(void (**)(uint64_t, uint64_t))(v99 + 56))(v100, v99);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v93 = *(uint64_t (**)(void))(v0 + 8);
          return v93();
        }
        sub_19CCEACE4(*(_QWORD *)(v0 + 688), type metadata accessor for JetPackAsset);
      }
    }
    v57 = *(unsigned __int8 *)(v51 + v56);
  }
  if (v57 > 1)
  {
    v89 = *(_QWORD *)(v0 + 760);
    v90 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v89, (uint64_t *)&unk_1ECEB1140);
    v91 = v90[5];
    v92 = v90[6];
    __swift_project_boxed_opaque_existential_1(v90 + 2, v91);
    (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v93 = *(uint64_t (**)(void))(v0 + 8);
    return v93();
  }
  if (v104 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 768))(*(_QWORD *)(v0 + 712), 1, 1, *(_QWORD *)(v0 + 664));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 712), (uint64_t *)&unk_1ECEB1140);
  v95 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 832) = v95;
  *v95 = v0;
  v95[1] = sub_19CF64AC4;
  return sub_19CF68880(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 712));
}

uint64_t sub_19CF64AC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 840) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF64B28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 760);
  sub_19CCECFE4(*(_QWORD *)(v0 + 712), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v2 = *(_QWORD **)(v0 + 568);
  v4 = v2[5];
  v3 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF64C6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD **)(v0 + 568);
  v3 = v2 + 2;
  sub_19CCECFE4(*(_QWORD *)(v0 + 712), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF64DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[77] = a4;
  v4[76] = a3;
  v4[75] = a2;
  v4[74] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v4[78] = swift_task_alloc();
  v5 = type metadata accessor for JetPackAsset(0);
  v4[79] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[80] = v6;
  v4[81] = *(_QWORD *)(v6 + 64);
  v4[82] = swift_task_alloc();
  v4[83] = swift_task_alloc();
  v4[84] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v4[85] = swift_task_alloc();
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  v4[88] = swift_task_alloc();
  v4[89] = swift_task_alloc();
  v4[90] = swift_task_alloc();
  v4[91] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF64ECC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  __int128 v13;

  sub_19CFDFAB8();
  v1 = *(_QWORD **)(v0 + 600);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 632);
  v6 = *(__int128 **)(v0 + 608);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 640) + 56);
  *(_QWORD *)(v0 + 736) = v7;
  v7(v4, 1, 1, v5);
  v8 = v1[5];
  v9 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v8);
  *(_OWORD *)(v0 + 536) = *v6;
  *(_QWORD *)(v0 + 744) = *((_QWORD *)v6 + 2);
  *(_QWORD *)(v0 + 752) = *((_QWORD *)v6 + 3);
  *(_OWORD *)(v0 + 568) = *v6;
  v13 = *v6;
  sub_19CD0F7F4(v0 + 536);
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 760) = *((_QWORD *)&v13 + 1);
  v12 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v9 + 16) + *(_QWORD *)(v9 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 768) = v10;
  *v10 = v0;
  v10[1] = sub_19CF650EC;
  return v12(*(_QWORD *)(v0 + 720), v13, *((_QWORD *)&v13 + 1), v8, v9);
}

uint64_t sub_19CF650EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 776) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF65158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  Swift::String v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  __int128 *v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  Swift::String v52;
  __int128 v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  __int128 v59;
  __int128 v60;
  Swift::String v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  unint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  void (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v100)(_QWORD, uint64_t, uint64_t);
  unsigned int (*v101)(uint64_t, uint64_t, uint64_t);
  __int128 v102;
  __int128 v103;
  char v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 632);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  sub_19CCC290C(v2, v1, (uint64_t *)&unk_1ECEB1140);
  sub_19CCF8C5C(v1, v3, (uint64_t *)&unk_1ECEB1140);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 712);
  if (v6 == 1)
  {
    sub_19CCECFE4(v7, (uint64_t *)&unk_1ECEB1140);
LABEL_10:
    v25 = *(_QWORD *)(v0 + 728);
    v26 = *(_QWORD *)(v0 + 704);
    v27 = *(_QWORD *)(v0 + 640);
    v28 = *(_QWORD *)(v0 + 632);
    sub_19CCD5B84(*(_QWORD *)(v0 + 600) + 56, v0 + 16);
    sub_19CCF8C5C(v25, v26, (uint64_t *)&unk_1ECEB1140);
    v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v101(v26, 1, v28) == 1)
    {
      v29 = 4;
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 664);
      sub_19CCFE8AC(*(_QWORD *)(v0 + 704), v30, type metadata accessor for JetPackAsset);
      v31 = *(_QWORD *)(v0 + 40);
      v32 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v31);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v32 + 8))(&v105, v30, v31, v32);
      v29 = v105;
      sub_19CCEACE4(v30, type metadata accessor for JetPackAsset);
    }
    v98 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v33 = (__int128 *)(v0 + 176);
    v34 = *(_QWORD *)(v0 + 728);
    v35 = *(_QWORD *)(v0 + 696);
    v36 = *(_QWORD *)(v0 + 632);
    v37 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_19D0522A0;
    v39 = v37;
    *(_QWORD *)&v102 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
    v40._countAndFlagsBits = 0x7341646568636163;
    v40._object = (void *)0xEC0000003D746573;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    sub_19CCF8C5C(v34, v35, (uint64_t *)&unk_1ECEB1140);
    v41 = v101(v35, 1, v36);
    v42 = *(_QWORD *)(v0 + 696);
    if (v41 == 1)
    {
      sub_19CCECFE4(*(_QWORD *)(v0 + 696), (uint64_t *)&unk_1ECEB1140);
      *(_OWORD *)(v0 + 320) = 0u;
      *(_OWORD *)(v0 + 336) = 0u;
    }
    else
    {
      *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 632);
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
      sub_19CCFE8AC(v42, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
    }
    sub_19CCF8C5C(v0 + 320, v0 + 352, &qword_1ECEB3370);
    *v33 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19CD40658(v0 + 352, v0 + 176);
    *(_BYTE *)(v0 + 208) = 0;
    v44 = *(_OWORD *)(v0 + 192);
    v105 = *v33;
    v106 = v44;
    LOBYTE(v107) = *(_BYTE *)(v0 + 208);
    v45 = (_QWORD *)v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v45 = sub_19CD40918(0, *(_QWORD *)(v102 + 16) + 1, 1, (_QWORD *)v102);
    v47 = v45[2];
    v46 = v45[3];
    if (v47 >= v46 >> 1)
      v45 = sub_19CD40918((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
    v48 = (__int128 *)(v0 + 136);
    v45[2] = v47 + 1;
    v49 = &v45[5 * v47];
    v50 = v105;
    v51 = v106;
    *((_BYTE *)v49 + 64) = v107;
    *((_OWORD *)v49 + 2) = v50;
    *((_OWORD *)v49 + 3) = v51;
    *(_QWORD *)&v102 = v45;
    sub_19CCECFE4(v0 + 320, &qword_1ECEB3370);
    v52._countAndFlagsBits = 0x3D73757461747320;
    v52._object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    if (v98 == 4)
    {
      *(_OWORD *)(v0 + 416) = 0u;
      *(_OWORD *)(v0 + 432) = 0u;
    }
    else
    {
      *(_QWORD *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
      *(_BYTE *)(v0 + 416) = v98;
    }
    sub_19CCF8C5C(v0 + 416, v0 + 448, &qword_1ECEB3370);
    *v48 = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_19CD40658(v0 + 448, v0 + 136);
    *(_BYTE *)(v0 + 168) = 0;
    v53 = *(_OWORD *)(v0 + 152);
    v105 = *v48;
    v106 = v53;
    LOBYTE(v107) = *(_BYTE *)(v0 + 168);
    v54 = (_QWORD *)v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v54 = sub_19CD40918(0, *(_QWORD *)(v102 + 16) + 1, 1, (_QWORD *)v102);
    v56 = v54[2];
    v55 = v54[3];
    if (v56 >= v55 >> 1)
      v54 = sub_19CD40918((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
    v57 = *(_QWORD *)(v0 + 608);
    v54[2] = v56 + 1;
    v58 = &v54[5 * v56];
    v59 = v105;
    v60 = v106;
    *((_BYTE *)v58 + 64) = v107;
    *((_OWORD *)v58 + 2) = v59;
    *((_OWORD *)v58 + 3) = v60;
    *(_QWORD *)&v102 = v54;
    sub_19CCECFE4(v0 + 416, &qword_1ECEB3370);
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v61);
    *(_QWORD *)(v38 + 32) = v54;
    *(_QWORD *)&v105 = v39;
    LOBYTE(v102) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v38, (JetEngine::LogMessageLevel)&v102);
    swift_bridgeObjectRelease();

    v62 = *(unsigned __int8 *)(v57 + 32);
    if (v62 != 2)
    {
      if (v62 == 1)
      {
LABEL_36:
        if (v98 == 3)
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 736))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 632));
        else
          sub_19CCF8C5C(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
        v67 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 800) = v67;
        *v67 = v0;
        v67[1] = sub_19CF67F10;
        return sub_19CF690EC(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 680));
      }
      if (*(_BYTE *)(v57 + 32))
        goto LABEL_45;
    }
    if (v98 != 4)
    {
      v63 = *(_QWORD *)(v0 + 688);
      v64 = *(_QWORD *)(v0 + 632);
      sub_19CCF8C5C(*(_QWORD *)(v0 + 728), v63, (uint64_t *)&unk_1ECEB1140);
      v65 = v101(v63, 1, v64);
      v66 = *(_QWORD *)(v0 + 688);
      if (v65 != 1)
      {
        sub_19CCFE8AC(v66, *(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
        if (v98 < 2)
        {
          v68 = (void *)qword_1ECEB0B60;
          v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = xmmword_19D0522A0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
          v70 = swift_allocObject();
          v71 = MEMORY[0x1E0DEA968];
          *(_OWORD *)(v70 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v0 + 504) = v71;
          *(_QWORD *)(v0 + 480) = 0xD000000000000012;
          *(_QWORD *)(v0 + 488) = 0x800000019D073850;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v72 = v68;
          sub_19CD40658(v0 + 480, v0 + 96);
          *(_BYTE *)(v0 + 128) = 0;
          v73 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v70 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v70 + 48) = v73;
          *(_BYTE *)(v70 + 64) = *(_BYTE *)(v0 + 128);
          *(_QWORD *)(v69 + 32) = v70;
          *(_QWORD *)&v105 = v72;
          LOBYTE(v102) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v69, (JetEngine::LogMessageLevel)&v102);
          swift_bridgeObjectRelease();

          if ((v62 | (v98 - 1)) <= 1u)
          {
            v74 = *(_QWORD *)(v0 + 664);
            v75 = *(_QWORD *)(v0 + 656);
            v76 = *(_QWORD *)(v0 + 640);
            v77 = *(_QWORD *)(v0 + 624);
            v78 = *(_QWORD *)(v0 + 616);
            v79 = *(_QWORD *)(v0 + 608);
            v80 = *(_QWORD *)(v0 + 600);
            v81 = sub_19CFDFA10();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v77, 1, 1, v81);
            v82 = *(_OWORD *)(v79 + 16);
            v102 = *(_OWORD *)v79;
            v103 = v82;
            v104 = *(_BYTE *)(v79 + 32);
            v83 = *(_OWORD *)(v78 + 16);
            v105 = *(_OWORD *)v78;
            v106 = v83;
            v107 = *(_QWORD *)(v78 + 32);
            sub_19CCFECEC(v75, v74, type metadata accessor for JetPackAsset);
            v84 = (*(unsigned __int8 *)(v76 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
            v85 = swift_allocObject();
            *(_QWORD *)(v85 + 16) = 0;
            *(_QWORD *)(v85 + 24) = 0;
            *(_QWORD *)(v85 + 32) = v80;
            v86 = v103;
            *(_OWORD *)(v85 + 40) = v102;
            *(_OWORD *)(v85 + 56) = v86;
            *(_BYTE *)(v85 + 72) = v104;
            v87 = v106;
            *(_OWORD *)(v85 + 80) = v105;
            *(_OWORD *)(v85 + 96) = v87;
            *(_QWORD *)(v85 + 112) = v107;
            sub_19CCFE8AC(v74, v85 + v84, type metadata accessor for JetPackAsset);
            sub_19CCEC5FC(v79);
            sub_19CF6EE10(v78);
            swift_retain();
            sub_19CF69A9C(v77, (uint64_t)&unk_1EE442E98, v85);
            swift_release();
          }
          v88 = *(_QWORD *)(v0 + 656);
          v89 = *(_QWORD *)(v0 + 592);
          sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
          sub_19CCFE8AC(v88, v89, type metadata accessor for JetPackAsset);
          v90 = *(_QWORD **)(v0 + 600);
          v91 = v90[5];
          v92 = v90[6];
          __swift_project_boxed_opaque_existential_1(v90 + 2, v91);
          (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v93 = *(uint64_t (**)(void))(v0 + 8);
          return v93();
        }
        sub_19CCEACE4(*(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
        if (v62 <= 1)
          goto LABEL_36;
LABEL_45:
        v94 = *(_QWORD *)(v0 + 728);
        v95 = *(_QWORD **)(v0 + 600);
        sub_19CEAC74C();
        swift_allocError();
        swift_willThrow();
        sub_19CCECFE4(v94, (uint64_t *)&unk_1ECEB1140);
        v96 = v95[5];
        v97 = v95[6];
        __swift_project_boxed_opaque_existential_1(v95 + 2, v96);
        (*(void (**)(uint64_t, uint64_t))(v97 + 56))(v96, v97);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v93 = *(uint64_t (**)(void))(v0 + 8);
        return v93();
      }
      sub_19CCECFE4(v66, (uint64_t *)&unk_1ECEB1140);
    }
    if (v62 <= 1)
      goto LABEL_36;
    goto LABEL_45;
  }
  sub_19CCFE8AC(v7, *(_QWORD *)(v0 + 672), type metadata accessor for JetPackAsset);
  if (qword_1ECEB0870 != -1)
    swift_once();
  v8 = qword_1ECEB5270;
  v105 = *(_OWORD *)(v0 + 568);
  sub_19CD0F7F4(v0 + 536);
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)&v105 + 1);
  *(_QWORD *)(v0 + 552) = v105;
  *(_QWORD *)(v0 + 560) = v9;
  v10 = *(_QWORD *)(v8 + 16);
  v11 = swift_task_alloc();
  *(_QWORD *)(v11 + 16) = v0 + 552;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v12 = sub_19CD19780(**(_QWORD **)(v11 + 16), *(_QWORD *)(*(_QWORD *)(v11 + 16) + 8), *(_QWORD *)(v10 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if ((v12 & 1) == 0)
  {
    sub_19CCEACE4(*(_QWORD *)(v0 + 672), type metadata accessor for JetPackAsset);
    goto LABEL_10;
  }
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 736);
  v13 = *(_QWORD *)(v0 + 728);
  v14 = *(_QWORD *)(v0 + 632);
  v15 = *(_QWORD **)(v0 + 600);
  v16 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 408) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 384) = 0xD000000000000054;
  *(_QWORD *)(v0 + 392) = 0x800000019D073870;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  v19 = v16;
  sub_19CD40658(v0 + 384, v0 + 56);
  *(_BYTE *)(v0 + 88) = 0;
  *(_BYTE *)(v18 + 64) = 0;
  v20 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v18 + 48) = v20;
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)&v105 = v19;
  LOBYTE(v102) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v102);
  swift_bridgeObjectRelease();

  sub_19CCECFE4(v13, (uint64_t *)&unk_1ECEB1140);
  v99(v13, 1, 1, v14);
  v21 = v15[5];
  v22 = v15[6];
  __swift_project_boxed_opaque_existential_1(v15 + 2, v21);
  v100 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v22 + 24) + *(_QWORD *)(v22 + 24));
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 784) = v23;
  *v23 = v0;
  v23[1] = sub_19CF669A0;
  return v100(*(_QWORD *)(v0 + 672), v21, v22);
}

uint64_t sub_19CF65E20()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  _QWORD *v60;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unsigned int v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  __int128 v94;
  __int128 v95;
  char v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v1 = (__int128 *)(v0 + 216);
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 776);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v91 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  *(_QWORD *)&v94 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 312) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 288));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 288, v0 + 256, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 256, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v10 = *(_OWORD *)(v0 + 232);
  v97 = *v1;
  v98 = v10;
  LOBYTE(v99) = *(_BYTE *)(v0 + 248);
  v11 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, *(_QWORD *)(v94 + 16) + 1, 1, (_QWORD *)v94);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v97;
  v16 = v98;
  *((_BYTE *)v14 + 64) = v99;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  *(_QWORD *)&v94 = v11;
  sub_19CCECFE4(v0 + 288, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v97 = v5;
  LOBYTE(v94) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v94);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 640);
  v21 = *(_QWORD *)(v0 + 632);
  sub_19CCD5B84(*(_QWORD *)(v0 + 600) + 56, (uint64_t)v91);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v93(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 664);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 704), v23, type metadata accessor for JetPackAsset);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v91, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v97, v23, v24, v25);
    v22 = v97;
    sub_19CCEACE4(v23, type metadata accessor for JetPackAsset);
  }
  v92 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v91);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 728);
  v28 = *(_QWORD *)(v0 + 696);
  v29 = *(_QWORD *)(v0 + 632);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  *(_QWORD *)&v94 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v93(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 696);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 696), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 632);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19CCFE8AC(v35, (uint64_t)v36, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 320, v0 + 352, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 352, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v37 = *(_OWORD *)(v0 + 192);
  v97 = *v26;
  v98 = v37;
  LOBYTE(v99) = *(_BYTE *)(v0 + 208);
  v38 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v97;
  v44 = v98;
  *((_BYTE *)v42 + 64) = v99;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  *(_QWORD *)&v94 = v38;
  sub_19CCECFE4(v0 + 320, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v92 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 416) = v92;
  }
  sub_19CCF8C5C(v0 + 416, v0 + 448, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 448, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v97 = *v41;
  v98 = v46;
  LOBYTE(v99) = *(_BYTE *)(v0 + 168);
  v47 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 608);
  v47[2] = v49 + 1;
  v51 = &v47[5 * v49];
  v52 = v97;
  v53 = v98;
  *((_BYTE *)v51 + 64) = v99;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  *(_QWORD *)&v94 = v47;
  sub_19CCECFE4(v0 + 416, &qword_1ECEB3370);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(_QWORD *)(v31 + 32) = v94;
  *(_QWORD *)&v97 = v32;
  LOBYTE(v94) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v94);
  swift_bridgeObjectRelease();

  v55 = *(unsigned __int8 *)(v50 + 32);
  if (v55 == 2)
  {
LABEL_29:
    if (v92 == 4)
      goto LABEL_32;
    v56 = *(_QWORD *)(v0 + 688);
    v57 = *(_QWORD *)(v0 + 632);
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), v56, (uint64_t *)&unk_1ECEB1140);
    v58 = v93(v56, 1, v57);
    v59 = *(_QWORD *)(v0 + 688);
    if (v58 == 1)
    {
      sub_19CCECFE4(v59, (uint64_t *)&unk_1ECEB1140);
LABEL_32:
      if (v55 <= 1)
        goto LABEL_33;
      goto LABEL_42;
    }
    sub_19CCFE8AC(v59, *(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v92 < 2)
    {
      v62 = (void *)qword_1ECEB0B60;
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 504) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 480) = 0xD000000000000012;
      *(_QWORD *)(v0 + 488) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v65 = v62;
      sub_19CD40658(v0 + 480, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v66 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v64 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v64 + 48) = v66;
      *(_BYTE *)(v64 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v63 + 32) = v64;
      *(_QWORD *)&v97 = v65;
      LOBYTE(v94) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v63, (JetEngine::LogMessageLevel)&v94);
      swift_bridgeObjectRelease();

      if ((v55 | (v92 - 1)) <= 1u)
      {
        v67 = *(_QWORD *)(v0 + 664);
        v68 = *(_QWORD *)(v0 + 656);
        v69 = *(_QWORD *)(v0 + 640);
        v70 = *(_QWORD *)(v0 + 624);
        v71 = *(_QWORD *)(v0 + 616);
        v72 = *(_QWORD *)(v0 + 608);
        v73 = *(_QWORD *)(v0 + 600);
        v74 = sub_19CFDFA10();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
        v75 = *(_OWORD *)(v72 + 16);
        v94 = *(_OWORD *)v72;
        v95 = v75;
        v96 = *(_BYTE *)(v72 + 32);
        v76 = *(_OWORD *)(v71 + 16);
        v97 = *(_OWORD *)v71;
        v98 = v76;
        v99 = *(_QWORD *)(v71 + 32);
        sub_19CCFECEC(v68, v67, type metadata accessor for JetPackAsset);
        v77 = (*(unsigned __int8 *)(v69 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v78 = swift_allocObject();
        *(_QWORD *)(v78 + 16) = 0;
        *(_QWORD *)(v78 + 24) = 0;
        *(_QWORD *)(v78 + 32) = v73;
        v79 = v95;
        *(_OWORD *)(v78 + 40) = v94;
        *(_OWORD *)(v78 + 56) = v79;
        *(_BYTE *)(v78 + 72) = v96;
        v80 = v98;
        *(_OWORD *)(v78 + 80) = v97;
        *(_OWORD *)(v78 + 96) = v80;
        *(_QWORD *)(v78 + 112) = v99;
        sub_19CCFE8AC(v67, v78 + v77, type metadata accessor for JetPackAsset);
        sub_19CCEC5FC(v72);
        sub_19CF6EE10(v71);
        swift_retain();
        sub_19CF69A9C(v70, (uint64_t)&unk_1EE442E98, v78);
        swift_release();
      }
      v81 = *(_QWORD *)(v0 + 656);
      v82 = *(_QWORD *)(v0 + 592);
      sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFE8AC(v81, v82, type metadata accessor for JetPackAsset);
      v83 = *(_QWORD **)(v0 + 600);
      v84 = v83[5];
      v85 = v83[6];
      __swift_project_boxed_opaque_existential_1(v83 + 2, v84);
      (*(void (**)(uint64_t, uint64_t))(v85 + 56))(v84, v85);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v86 = *(uint64_t (**)(void))(v0 + 8);
      return v86();
    }
    sub_19CCEACE4(*(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v55 <= 1)
      goto LABEL_33;
LABEL_42:
    v87 = *(_QWORD *)(v0 + 728);
    v88 = *(_QWORD **)(v0 + 600);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v87, (uint64_t *)&unk_1ECEB1140);
    v89 = v88[5];
    v90 = v88[6];
    __swift_project_boxed_opaque_existential_1(v88 + 2, v89);
    (*(void (**)(uint64_t, uint64_t))(v90 + 56))(v89, v90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v86 = *(uint64_t (**)(void))(v0 + 8);
    return v86();
  }
  if (v55 != 1)
  {
    if (*(_BYTE *)(v50 + 32))
      goto LABEL_42;
    goto LABEL_29;
  }
LABEL_33:
  if (v92 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 736))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 632));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
  v60 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v60;
  *v60 = v0;
  v60[1] = sub_19CF67F10;
  return sub_19CF690EC(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 680));
}

uint64_t sub_19CF669A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 792) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF66A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  __int128 *v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  __int128 v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  _QWORD *v43;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  __int128 v77;
  __int128 v78;
  char v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  sub_19CCEACE4(*(_QWORD *)(v0 + 672), type metadata accessor for JetPackAsset);
  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 704);
  v3 = *(_QWORD *)(v0 + 640);
  v4 = *(_QWORD *)(v0 + 632);
  sub_19CCD5B84(*(_QWORD *)(v0 + 600) + 56, v0 + 16);
  sub_19CCF8C5C(v1, v2, (uint64_t *)&unk_1ECEB1140);
  v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v76(v2, 1, v4) == 1)
  {
    v5 = 4;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 664);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 704), v6, type metadata accessor for JetPackAsset);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v80, v6, v7, v8);
    v5 = v80;
    sub_19CCEACE4(v6, type metadata accessor for JetPackAsset);
  }
  v75 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v9 = (__int128 *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 728);
  v11 = *(_QWORD *)(v0 + 696);
  v12 = *(_QWORD *)(v0 + 632);
  v13 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  *(_QWORD *)&v77 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v16._countAndFlagsBits = 0x7341646568636163;
  v16._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19CCF8C5C(v10, v11, (uint64_t *)&unk_1ECEB1140);
  v17 = v76(v11, 1, v12);
  v18 = *(_QWORD *)(v0 + 696);
  if (v17 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 696), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 632);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19CCFE8AC(v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 320, v0 + 352, &qword_1ECEB3370);
  *v9 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 352, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v20 = *(_OWORD *)(v0 + 192);
  v80 = *v9;
  v81 = v20;
  LOBYTE(v82) = *(_BYTE *)(v0 + 208);
  v21 = (_QWORD *)v77;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, *(_QWORD *)(v77 + 16) + 1, 1, (_QWORD *)v77);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v24 = (__int128 *)(v0 + 136);
  v21[2] = v23 + 1;
  v25 = &v21[5 * v23];
  v26 = v80;
  v27 = v81;
  *((_BYTE *)v25 + 64) = v82;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  *(_QWORD *)&v77 = v21;
  sub_19CCECFE4(v0 + 320, &qword_1ECEB3370);
  v28._countAndFlagsBits = 0x3D73757461747320;
  v28._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v75 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 416) = v75;
  }
  sub_19CCF8C5C(v0 + 416, v0 + 448, &qword_1ECEB3370);
  *v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 448, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v29 = *(_OWORD *)(v0 + 152);
  v80 = *v24;
  v81 = v29;
  LOBYTE(v82) = *(_BYTE *)(v0 + 168);
  v30 = (_QWORD *)v77;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_19CD40918(0, *(_QWORD *)(v77 + 16) + 1, 1, (_QWORD *)v77);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v33 = *(_QWORD *)(v0 + 608);
  v30[2] = v32 + 1;
  v34 = &v30[5 * v32];
  v35 = v80;
  v36 = v81;
  *((_BYTE *)v34 + 64) = v82;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  *(_QWORD *)&v77 = v30;
  sub_19CCECFE4(v0 + 416, &qword_1ECEB3370);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(_QWORD *)(v14 + 32) = v30;
  *(_QWORD *)&v80 = v15;
  LOBYTE(v77) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v77);
  swift_bridgeObjectRelease();

  v38 = *(unsigned __int8 *)(v33 + 32);
  if (v38 == 2)
  {
LABEL_23:
    if (v75 == 4)
      goto LABEL_26;
    v39 = *(_QWORD *)(v0 + 688);
    v40 = *(_QWORD *)(v0 + 632);
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), v39, (uint64_t *)&unk_1ECEB1140);
    v41 = v76(v39, 1, v40);
    v42 = *(_QWORD *)(v0 + 688);
    if (v41 == 1)
    {
      sub_19CCECFE4(v42, (uint64_t *)&unk_1ECEB1140);
LABEL_26:
      if (v38 <= 1)
        goto LABEL_27;
      goto LABEL_36;
    }
    sub_19CCFE8AC(v42, *(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v75 < 2)
    {
      v45 = (void *)qword_1ECEB0B60;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v47 = swift_allocObject();
      v48 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v47 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 504) = v48;
      *(_QWORD *)(v0 + 480) = 0xD000000000000012;
      *(_QWORD *)(v0 + 488) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v49 = v45;
      sub_19CD40658(v0 + 480, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v50 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v47 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v47 + 48) = v50;
      *(_BYTE *)(v47 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v46 + 32) = v47;
      *(_QWORD *)&v80 = v49;
      LOBYTE(v77) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v46, (JetEngine::LogMessageLevel)&v77);
      swift_bridgeObjectRelease();

      if ((v38 | (v75 - 1)) <= 1u)
      {
        v51 = *(_QWORD *)(v0 + 664);
        v52 = *(_QWORD *)(v0 + 656);
        v53 = *(_QWORD *)(v0 + 640);
        v54 = *(_QWORD *)(v0 + 624);
        v55 = *(_QWORD *)(v0 + 616);
        v56 = *(_QWORD *)(v0 + 608);
        v57 = *(_QWORD *)(v0 + 600);
        v58 = sub_19CFDFA10();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v54, 1, 1, v58);
        v59 = *(_OWORD *)(v56 + 16);
        v77 = *(_OWORD *)v56;
        v78 = v59;
        v79 = *(_BYTE *)(v56 + 32);
        v60 = *(_OWORD *)(v55 + 16);
        v80 = *(_OWORD *)v55;
        v81 = v60;
        v82 = *(_QWORD *)(v55 + 32);
        sub_19CCFECEC(v52, v51, type metadata accessor for JetPackAsset);
        v61 = (*(unsigned __int8 *)(v53 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        v62 = swift_allocObject();
        *(_QWORD *)(v62 + 16) = 0;
        *(_QWORD *)(v62 + 24) = 0;
        *(_QWORD *)(v62 + 32) = v57;
        v63 = v78;
        *(_OWORD *)(v62 + 40) = v77;
        *(_OWORD *)(v62 + 56) = v63;
        *(_BYTE *)(v62 + 72) = v79;
        v64 = v81;
        *(_OWORD *)(v62 + 80) = v80;
        *(_OWORD *)(v62 + 96) = v64;
        *(_QWORD *)(v62 + 112) = v82;
        sub_19CCFE8AC(v51, v62 + v61, type metadata accessor for JetPackAsset);
        sub_19CCEC5FC(v56);
        sub_19CF6EE10(v55);
        swift_retain();
        sub_19CF69A9C(v54, (uint64_t)&unk_1EE442E98, v62);
        swift_release();
      }
      v65 = *(_QWORD *)(v0 + 656);
      v66 = *(_QWORD *)(v0 + 592);
      sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFE8AC(v65, v66, type metadata accessor for JetPackAsset);
      v67 = *(_QWORD **)(v0 + 600);
      v68 = v67[5];
      v69 = v67[6];
      __swift_project_boxed_opaque_existential_1(v67 + 2, v68);
      (*(void (**)(uint64_t, uint64_t))(v69 + 56))(v68, v69);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v70 = *(uint64_t (**)(void))(v0 + 8);
      return v70();
    }
    sub_19CCEACE4(*(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v38 <= 1)
      goto LABEL_27;
LABEL_36:
    v71 = *(_QWORD *)(v0 + 728);
    v72 = *(_QWORD **)(v0 + 600);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v71, (uint64_t *)&unk_1ECEB1140);
    v73 = v72[5];
    v74 = v72[6];
    __swift_project_boxed_opaque_existential_1(v72 + 2, v73);
    (*(void (**)(uint64_t, uint64_t))(v74 + 56))(v73, v74);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v70 = *(uint64_t (**)(void))(v0 + 8);
    return v70();
  }
  if (v38 != 1)
  {
    if (*(_BYTE *)(v33 + 32))
      goto LABEL_36;
    goto LABEL_23;
  }
LABEL_27:
  if (v75 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 736))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 632));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v43;
  *v43 = v0;
  v43[1] = sub_19CF67F10;
  return sub_19CF690EC(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 680));
}

uint64_t sub_19CF67388()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  _QWORD *v60;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unsigned int v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  __int128 v94;
  __int128 v95;
  char v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v1 = (__int128 *)(v0 + 216);
  sub_19CCEACE4(*(_QWORD *)(v0 + 672), type metadata accessor for JetPackAsset);
  v2 = *(void **)(v0 + 792);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v91 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  *(_QWORD *)&v94 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 312) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 288));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 288, v0 + 256, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 256, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v10 = *(_OWORD *)(v0 + 232);
  v97 = *v1;
  v98 = v10;
  LOBYTE(v99) = *(_BYTE *)(v0 + 248);
  v11 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, *(_QWORD *)(v94 + 16) + 1, 1, (_QWORD *)v94);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v97;
  v16 = v98;
  *((_BYTE *)v14 + 64) = v99;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  *(_QWORD *)&v94 = v11;
  sub_19CCECFE4(v0 + 288, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v97 = v5;
  LOBYTE(v94) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v94);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 640);
  v21 = *(_QWORD *)(v0 + 632);
  sub_19CCD5B84(*(_QWORD *)(v0 + 600) + 56, (uint64_t)v91);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v93(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 664);
    sub_19CCFE8AC(*(_QWORD *)(v0 + 704), v23, type metadata accessor for JetPackAsset);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v91, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v97, v23, v24, v25);
    v22 = v97;
    sub_19CCEACE4(v23, type metadata accessor for JetPackAsset);
  }
  v92 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v91);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 728);
  v28 = *(_QWORD *)(v0 + 696);
  v29 = *(_QWORD *)(v0 + 632);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  *(_QWORD *)&v94 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v93(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 696);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 696), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 320) = 0u;
    *(_OWORD *)(v0 + 336) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 632);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 320));
    sub_19CCFE8AC(v35, (uint64_t)v36, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 320, v0 + 352, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 352, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v37 = *(_OWORD *)(v0 + 192);
  v97 = *v26;
  v98 = v37;
  LOBYTE(v99) = *(_BYTE *)(v0 + 208);
  v38 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v97;
  v44 = v98;
  *((_BYTE *)v42 + 64) = v99;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  *(_QWORD *)&v94 = v38;
  sub_19CCECFE4(v0 + 320, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v92 == 4)
  {
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 432) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 440) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 416) = v92;
  }
  sub_19CCF8C5C(v0 + 416, v0 + 448, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 448, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v97 = *v41;
  v98 = v46;
  LOBYTE(v99) = *(_BYTE *)(v0 + 168);
  v47 = (_QWORD *)v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 608);
  v47[2] = v49 + 1;
  v51 = &v47[5 * v49];
  v52 = v97;
  v53 = v98;
  *((_BYTE *)v51 + 64) = v99;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  *(_QWORD *)&v94 = v47;
  sub_19CCECFE4(v0 + 416, &qword_1ECEB3370);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(_QWORD *)(v31 + 32) = v94;
  *(_QWORD *)&v97 = v32;
  LOBYTE(v94) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v94);
  swift_bridgeObjectRelease();

  v55 = *(unsigned __int8 *)(v50 + 32);
  if (v55 == 2)
  {
LABEL_29:
    if (v92 == 4)
      goto LABEL_32;
    v56 = *(_QWORD *)(v0 + 688);
    v57 = *(_QWORD *)(v0 + 632);
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), v56, (uint64_t *)&unk_1ECEB1140);
    v58 = v93(v56, 1, v57);
    v59 = *(_QWORD *)(v0 + 688);
    if (v58 == 1)
    {
      sub_19CCECFE4(v59, (uint64_t *)&unk_1ECEB1140);
LABEL_32:
      if (v55 <= 1)
        goto LABEL_33;
      goto LABEL_42;
    }
    sub_19CCFE8AC(v59, *(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v92 < 2)
    {
      v62 = (void *)qword_1ECEB0B60;
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 504) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 480) = 0xD000000000000012;
      *(_QWORD *)(v0 + 488) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v65 = v62;
      sub_19CD40658(v0 + 480, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v66 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v64 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v64 + 48) = v66;
      *(_BYTE *)(v64 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v63 + 32) = v64;
      *(_QWORD *)&v97 = v65;
      LOBYTE(v94) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v63, (JetEngine::LogMessageLevel)&v94);
      swift_bridgeObjectRelease();

      if ((v55 | (v92 - 1)) <= 1u)
      {
        v67 = *(_QWORD *)(v0 + 664);
        v68 = *(_QWORD *)(v0 + 656);
        v69 = *(_QWORD *)(v0 + 640);
        v70 = *(_QWORD *)(v0 + 624);
        v71 = *(_QWORD *)(v0 + 616);
        v72 = *(_QWORD *)(v0 + 608);
        v73 = *(_QWORD *)(v0 + 600);
        v74 = sub_19CFDFA10();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
        v75 = *(_OWORD *)(v72 + 16);
        v94 = *(_OWORD *)v72;
        v95 = v75;
        v96 = *(_BYTE *)(v72 + 32);
        v76 = *(_OWORD *)(v71 + 16);
        v97 = *(_OWORD *)v71;
        v98 = v76;
        v99 = *(_QWORD *)(v71 + 32);
        sub_19CCFECEC(v68, v67, type metadata accessor for JetPackAsset);
        v77 = (*(unsigned __int8 *)(v69 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v78 = swift_allocObject();
        *(_QWORD *)(v78 + 16) = 0;
        *(_QWORD *)(v78 + 24) = 0;
        *(_QWORD *)(v78 + 32) = v73;
        v79 = v95;
        *(_OWORD *)(v78 + 40) = v94;
        *(_OWORD *)(v78 + 56) = v79;
        *(_BYTE *)(v78 + 72) = v96;
        v80 = v98;
        *(_OWORD *)(v78 + 80) = v97;
        *(_OWORD *)(v78 + 96) = v80;
        *(_QWORD *)(v78 + 112) = v99;
        sub_19CCFE8AC(v67, v78 + v77, type metadata accessor for JetPackAsset);
        sub_19CCEC5FC(v72);
        sub_19CF6EE10(v71);
        swift_retain();
        sub_19CF69A9C(v70, (uint64_t)&unk_1EE442E98, v78);
        swift_release();
      }
      v81 = *(_QWORD *)(v0 + 656);
      v82 = *(_QWORD *)(v0 + 592);
      sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFE8AC(v81, v82, type metadata accessor for JetPackAsset);
      v83 = *(_QWORD **)(v0 + 600);
      v84 = v83[5];
      v85 = v83[6];
      __swift_project_boxed_opaque_existential_1(v83 + 2, v84);
      (*(void (**)(uint64_t, uint64_t))(v85 + 56))(v84, v85);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v86 = *(uint64_t (**)(void))(v0 + 8);
      return v86();
    }
    sub_19CCEACE4(*(_QWORD *)(v0 + 656), type metadata accessor for JetPackAsset);
    if (v55 <= 1)
      goto LABEL_33;
LABEL_42:
    v87 = *(_QWORD *)(v0 + 728);
    v88 = *(_QWORD **)(v0 + 600);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v87, (uint64_t *)&unk_1ECEB1140);
    v89 = v88[5];
    v90 = v88[6];
    __swift_project_boxed_opaque_existential_1(v88 + 2, v89);
    (*(void (**)(uint64_t, uint64_t))(v90 + 56))(v89, v90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v86 = *(uint64_t (**)(void))(v0 + 8);
    return v86();
  }
  if (v55 != 1)
  {
    if (*(_BYTE *)(v50 + 32))
      goto LABEL_42;
    goto LABEL_29;
  }
LABEL_33:
  if (v92 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 736))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 632));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
  v60 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v60;
  *v60 = v0;
  v60[1] = sub_19CF67F10;
  return sub_19CF690EC(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 680));
}

uint64_t sub_19CF67F10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 808) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF67F74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 728);
  sub_19CCECFE4(*(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v2 = *(_QWORD **)(v0 + 600);
  v3 = v2[5];
  v4 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6809C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD **)(v0 + 600);
  v3 = v2 + 2;
  sub_19CCECFE4(*(_QWORD *)(v0 + 680), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF681C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[16] = v11;
  v8[17] = v12;
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v8[18] = swift_task_alloc();
  v9 = type metadata accessor for JetPackAsset(0);
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF68254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  _QWORD *v10;
  char v12;

  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = 0xD000000000000020;
  *(_QWORD *)(v0 + 64) = 0x800000019D0738D0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v8 = v5;
  sub_19CD40658(v0 + 56, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  *(_BYTE *)(v7 + 64) = 0;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v6 + 32) = v7;
  v12 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v12);
  swift_bridgeObjectRelease();

  sub_19CCFECEC(v4, v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v10;
  *v10 = v0;
  v10[1] = sub_19CF68418;
  return sub_19CF68880(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 144));
}

uint64_t sub_19CF68418()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  sub_19CCECFE4(v3, (uint64_t *)&unk_1ECEB1140);
  if (!v0)
    sub_19CCEACE4(*(_QWORD *)(v2 + 168), type metadata accessor for JetPackAsset);
  return swift_task_switch();
}

uint64_t sub_19CF684A8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF684E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF68528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v7[15] = swift_task_alloc();
  v8 = type metadata accessor for JetPackAsset(0);
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 - 8);
  v7[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF685B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  _QWORD *v10;
  char v12;

  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = 0xD000000000000020;
  *(_QWORD *)(v0 + 64) = 0x800000019D0738D0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v8 = v5;
  sub_19CD40658(v0 + 56, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  *(_BYTE *)(v7 + 64) = 0;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v6 + 32) = v7;
  v12 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v12);
  swift_bridgeObjectRelease();

  sub_19CCFECEC(v4, v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v10;
  *v10 = v0;
  v10[1] = sub_19CF68770;
  return sub_19CF690EC(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120));
}

uint64_t sub_19CF68770()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  sub_19CCECFE4(v3, (uint64_t *)&unk_1ECEB1140);
  if (!v0)
    sub_19CCEACE4(*(_QWORD *)(v2 + 144), type metadata accessor for JetPackAsset);
  return swift_task_switch();
}

uint64_t sub_19CF68800()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF68840()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF68880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v13;

  v8[38] = a7;
  v8[39] = v7;
  v8[36] = a1;
  v8[37] = a2;
  v13 = type metadata accessor for JetPackAsset(0);
  v8[40] = v13;
  v8[41] = *(_QWORD *)(v13 - 8);
  v8[42] = swift_task_alloc();
  v8[43] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v8[44] = swift_task_alloc();
  v8[20] = a3;
  v8[21] = a4;
  v8[22] = a5;
  v8[23] = a6;
  return swift_task_switch();
}

uint64_t sub_19CF68940()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  int v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  _QWORD *v20;
  id v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  char v26;

  sub_19CFDFAB8();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = (__int128 *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = (void *)qword_1ECEB0B60;
  *(_QWORD *)(v0 + 360) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v22 = v6;
  v23 = sub_19CD40918(0, 51, 0, MEMORY[0x1E0DEE9D8]);
  v8._object = (void *)0x800000019D073900;
  v8._countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19CCF8C5C(v5, v2, (uint64_t *)&unk_1ECEB1140);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  v10 = *(_QWORD *)(v0 + 352);
  if (v9 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 352), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 320);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 128));
    sub_19CCFE8AC(v10, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 128, v0 + 96, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_19CD40658(v0 + 96, v0 + 56);
  *(_BYTE *)(v0 + 88) = 0;
  v12 = *(_OWORD *)(v0 + 72);
  v24 = *v1;
  v25 = v12;
  v26 = *(_BYTE *)(v0 + 88);
  v13 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v23[2] + 1, 1, v23);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v24;
  v18 = v25;
  *((_BYTE *)v16 + 64) = v26;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v23 = v13;
  sub_19CCECFE4(v0 + 128, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v7 + 32) = v13;
  *(_QWORD *)&v24 = v22;
  LOBYTE(v23) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v23);
  swift_bridgeObjectRelease();

  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v20;
  *v20 = v0;
  v20[1] = sub_19CF68C44;
  return URLJetPackAssetFetcher._fetch(_:candidate:)(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304));
}

uint64_t sub_19CF68C44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF68CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 288);
  sub_19CCFE8AC(*(_QWORD *)(v0 + 344), v2, type metadata accessor for JetPackAsset);
  v3 = *(int *)(v1 + 20);
  v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(_BYTE *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    v6 = *(_QWORD **)(v0 + 312);
    v7 = v6[5];
    v8 = v6[6];
    __swift_project_boxed_opaque_existential_1(v6 + 2, v7);
    v10 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v9;
    *v9 = v0;
    v9[1] = sub_19CF68E00;
    return v10(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 288), v7, v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF68DB0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF68E00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_19CCEACE4(*(_QWORD *)(v2 + 336), type metadata accessor for JetPackAsset);
  return swift_task_switch();
}

uint64_t sub_19CF68E74()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF68EBC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v1 = (void *)qword_1ECEB0B60;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v3 = v1;
  v18 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
  v4._object = (void *)0x800000019D073940;
  v4._countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 248) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 224));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19CCF8C5C(v0 + 224, v0 + 192, &qword_1ECEB3370);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CD40658(v0 + 192, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v21 = 0;
  v8 = *(_OWORD *)(v0 + 32);
  v19 = *(_OWORD *)(v0 + 16);
  v20 = v8;
  v9 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v12 = *(void **)(v0 + 392);
  v9[2] = v11 + 1;
  v13 = &v9[5 * v11];
  v14 = v19;
  v15 = v20;
  *((_BYTE *)v13 + 64) = v21;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v18 = v9;
  sub_19CCECFE4(v0 + 224, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)&v19 = v3;
  LOBYTE(v18) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF690EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)(v5 + 344) = a4;
  *(_QWORD *)(v5 + 352) = v4;
  *(_QWORD *)(v5 + 336) = a1;
  v8 = type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v5 + 360) = v8;
  *(_QWORD *)(v5 + 368) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 376) = swift_task_alloc();
  *(_QWORD *)(v5 + 384) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  *(_QWORD *)(v5 + 392) = swift_task_alloc();
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 72) = v9;
  *(_BYTE *)(v5 + 88) = *(_BYTE *)(a2 + 32);
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v5 + 32) = v10;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(a3 + 32);
  return swift_task_switch();
}

uint64_t sub_19CF691B8()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  int v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  _QWORD *v20;
  id v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  char v26;

  sub_19CFDFAB8();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = (__int128 *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 344);
  v6 = (void *)qword_1ECEB0B60;
  *(_QWORD *)(v0 + 400) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v22 = v6;
  v23 = sub_19CD40918(0, 51, 0, MEMORY[0x1E0DEE9D8]);
  v8._object = (void *)0x800000019D073900;
  v8._countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19CCF8C5C(v5, v2, (uint64_t *)&unk_1ECEB1140);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  v10 = *(_QWORD *)(v0 + 392);
  if (v9 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 392), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 232) = *(_QWORD *)(v0 + 360);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 208));
    sub_19CCFE8AC(v10, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for JetPackAsset);
  }
  sub_19CCF8C5C(v0 + 208, v0 + 176, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 176, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v12 = *(_OWORD *)(v0 + 152);
  v24 = *v1;
  v25 = v12;
  v26 = *(_BYTE *)(v0 + 168);
  v13 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v23[2] + 1, 1, v23);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v24;
  v18 = v25;
  *((_BYTE *)v16 + 64) = v26;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v23 = v13;
  sub_19CCECFE4(v0 + 208, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v7 + 32) = v13;
  *(_QWORD *)&v24 = v22;
  LOBYTE(v23) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v23);
  swift_bridgeObjectRelease();

  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v20;
  *v20 = v0;
  v20[1] = sub_19CF694C4;
  return SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(*(_QWORD *)(v0 + 384), (__int128 *)(v0 + 56), *(_QWORD *)(v0 + 344));
}

uint64_t sub_19CF694C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF69528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  sub_19CCFE8AC(*(_QWORD *)(v0 + 384), v2, type metadata accessor for JetPackAsset);
  v3 = *(int *)(v1 + 20);
  v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(_BYTE *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    v6 = *(_QWORD **)(v0 + 352);
    v7 = v6[5];
    v8 = v6[6];
    __swift_project_boxed_opaque_existential_1(v6 + 2, v7);
    v10 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 424) = v9;
    *v9 = v0;
    v9[1] = sub_19CF69680;
    return v10(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 336), v7, v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF69630()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF69680()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 432) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_19CCEACE4(*(_QWORD *)(v2 + 376), type metadata accessor for JetPackAsset);
  return swift_task_switch();
}

uint64_t sub_19CF696F4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6973C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v1 = (void *)qword_1ECEB0B60;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v3 = v1;
  v18 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
  v4._object = (void *)0x800000019D073940;
  v4._countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 264) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 240));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19CCF8C5C(v0 + 240, v0 + 272, &qword_1ECEB3370);
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_19CD40658(v0 + 272, v0 + 96);
  *(_BYTE *)(v0 + 128) = 0;
  v21 = 0;
  v8 = *(_OWORD *)(v0 + 112);
  v19 = *(_OWORD *)(v0 + 96);
  v20 = v8;
  v9 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v12 = *(void **)(v0 + 432);
  v9[2] = v11 + 1;
  v13 = &v9[5 * v11];
  v14 = v19;
  v15 = v20;
  *((_BYTE *)v13 + 64) = v21;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v18 = v9;
  sub_19CCECFE4(v0 + 240, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)&v19 = v3;
  LOBYTE(v18) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6996C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_19CFDFA10();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_19CFDFA04();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_19CCECFE4(a1, (uint64_t *)&unk_1ECEB29B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDF998();
    swift_unknownObjectRelease();
  }
LABEL_5:
  type metadata accessor for JetPackAsset(0);
  return swift_task_create();
}

uint64_t sub_19CF69A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_19CFDFA10();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_19CFDFA04();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_19CCECFE4(a1, (uint64_t *)&unk_1ECEB29B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDF998();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_19CF69BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF69BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v5 + 72) = a4;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a3;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 32) = v6;
  *(_BYTE *)(v5 + 48) = *(_BYTE *)(a2 + 32);
  return swift_task_switch();
}

uint64_t sub_19CF69C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  _OWORD v10[2];
  char v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 96);
  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v3;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_OWORD *)(v5 + 16);
  v10[0] = *(_OWORD *)v5;
  v10[1] = v7;
  v11 = *(_BYTE *)(v5 + 32);
  *(_QWORD *)(v0 + 88) = sub_19CF69E98((uint64_t *)(v1 + 16), (uint64_t)v10, v4, v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  swift_task_dealloc();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v8;
  type metadata accessor for JetPackAsset(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  *v8 = v0;
  v8[1] = sub_19CF69D48;
  return sub_19CFDFA94();
}

uint64_t sub_19CF69D48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_19CF69DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release();
  v3 = *(os_unfair_lock_s **)(v2 + 96);
  *(_QWORD *)(swift_task_alloc() + 16) = v0 + 16;
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_19CF6E97C();
  os_unfair_lock_unlock(v3 + 6);
  if (!v1)
  {
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF69E64()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF69E98(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v36[32];
  _QWORD v37[4];
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  char v41;
  __int128 v42;
  __int128 v43;
  char v44;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_OWORD *)(a2 + 16);
  v39 = *(_OWORD *)a2;
  v40 = v12;
  v41 = *(_BYTE *)(a2 + 32);
  sub_19CCEC5FC(a2);
  sub_19CF3DF50();
  sub_19CFE00C4();
  v13 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v14 = sub_19CD20240((uint64_t)&v42), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_retain();
    sub_19CD20334((uint64_t)&v42);
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v17 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
    v19 = v17;
    v38 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
    v20._object = (void *)0x800000019D073800;
    v20._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    v37[3] = &type metadata for SilverBulletJetPackAssetRequest;
    v21 = swift_allocObject();
    v37[0] = v21;
    v22 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v21 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v21 + 32) = v22;
    *(_BYTE *)(v21 + 48) = *(_BYTE *)(a2 + 32);
    sub_19CCF8C5C((uint64_t)v37, (uint64_t)v36, &qword_1ECEB3370);
    v39 = 0u;
    v40 = 0u;
    sub_19CCEC5FC(a2);
    sub_19CD40658((uint64_t)v36, (uint64_t)&v39);
    v44 = 0;
    v42 = v39;
    v43 = v40;
    v23 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
    v25 = v23[2];
    v24 = v23[3];
    if (v25 >= v24 >> 1)
      v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v23[2] = v25 + 1;
    v26 = &v23[5 * v25];
    v27 = v42;
    v28 = v43;
    *((_BYTE *)v26 + 64) = v44;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    v38 = v23;
    sub_19CCECFE4((uint64_t)v37, &qword_1ECEB3370);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(_QWORD *)(v18 + 32) = v38;
    *(_QWORD *)&v42 = v19;
    LOBYTE(v39) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v39);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CD20334((uint64_t)&v42);
    v30 = sub_19CFDFA10();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = 0;
    v31[3] = 0;
    v31[4] = a3;
    v31[5] = a4;
    swift_retain();
    v16 = sub_19CF6996C((uint64_t)v11, (uint64_t)&unk_1EE442E78, (uint64_t)v31);
    v32 = *(_OWORD *)(a2 + 16);
    v39 = *(_OWORD *)a2;
    v40 = v32;
    v41 = *(_BYTE *)(a2 + 32);
    sub_19CCEC5FC(a2);
    sub_19CFE00C4();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v39 = *a1;
    *a1 = 0x8000000000000000;
    sub_19CCCDAA4(v16, (uint64_t)&v42, isUniquelyReferenced_nonNull_native);
    *a1 = v39;
    swift_bridgeObjectRelease();
    sub_19CD20334((uint64_t)&v42);
  }
  return v16;
}

uint64_t ValidatedJetPackAssetLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = a3;
  v17 = a4;
  v18 = v4;
  v19 = a2;
  v20 = a1;
  type metadata accessor for JetPackAsset(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0DF0A50], v9);
  return sub_19CFDFB60();
}

uint64_t sub_19CF6A34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a6;
  v36 = a3;
  v37 = a4;
  v33 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v9 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  v32 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v14, v15);
  v16 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v20;
  v21 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, a2, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v8);
  v22 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v9 + 80) + v24 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = 0;
  *((_QWORD *)v26 + 3) = 0;
  v27 = v35;
  *((_QWORD *)v26 + 4) = a5;
  *((_QWORD *)v26 + 5) = v27;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v22], v16, a5);
  v28 = v37;
  *(_QWORD *)&v26[v23] = v36;
  *(_QWORD *)&v26[v24] = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v26[v25], v32, v31);
  swift_unknownObjectRetain();
  swift_retain();
  sub_19CE72184((uint64_t)v34, (uint64_t)&unk_1EE442E48, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_19CF6A548(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CF6A34C(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_19CF6A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0708);
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  v7[13] = type metadata accessor for URLJetPackAssetRequest();
  v7[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF6A614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[13];
  v1 = v0[14];
  v4 = v0[4];
  v3 = v0[5];
  v5 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v4, v5);
  *(_BYTE *)(v1 + *(int *)(v2 + 20)) = *(_BYTE *)(v4
                                                + *(int *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation()
                                                         + 20));
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  v0[15] = v6;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_init);
  v0[16] = v7;
  v8 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  swift_unknownObjectRetain();
  v9 = (void *)sub_19CFDF554();
  v10 = objc_msgSend(v8, sel_initWithContainerID_bag_, v9, v3);
  v0[17] = v10;

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442DA0
                                                                                     + dword_1EE442DA0);
  v11 = (_QWORD *)swift_task_alloc();
  v0[18] = v11;
  *v11 = v0;
  v11[1] = sub_19CF6A77C;
  return v13(v0[12], v0[14], v0[5], (uint64_t)v6, (uint64_t)v7, (uint64_t)v10);
}

uint64_t sub_19CF6A77C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6A7E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  void *v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 120);
  v7 = *(void **)(v0 + 128);
  v8 = *(void **)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  sub_19CCFECEC(v2, *(_QWORD *)(v0 + 88), type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB00();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(_QWORD *)(v0 + 24) = 0;
  sub_19CFDFB0C();
  sub_19CCEACE4(v2, type metadata accessor for JetPackAsset);
  swift_unknownObjectRelease();

  sub_19CCEACE4(v9, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6A904()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(void **)(v0 + 120);
  swift_unknownObjectRelease();

  sub_19CCEACE4(v4, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6A9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v8[8] = a8;
  v8[9] = v17;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0708);
  v8[10] = v10;
  v8[11] = *(_QWORD *)(v10 - 8);
  v8[12] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  v8[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  v8[19] = v12;
  v8[20] = *(_QWORD *)(v12 - 8);
  v13 = swift_task_alloc();
  v8[21] = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v17 + 24) + *(_QWORD *)(v17 + 24));
  v14 = (_QWORD *)swift_task_alloc();
  v8[22] = v14;
  *v14 = v8;
  v14[1] = sub_19CF6AB4C;
  return v16(v13, a8);
}

uint64_t sub_19CF6AB4C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[23] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[9] + 32)
                                                                      + *(_QWORD *)(v2[9] + 32));
  v4 = (_QWORD *)swift_task_alloc();
  v2[24] = v4;
  *v4 = v2;
  v4[1] = sub_19CF6AC04;
  return v5(v2[17], v2[21], v2[5], v2[8], v2[9]);
}

uint64_t sub_19CF6AC04()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[26] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_19CF6ACA4;
  return JetPackAssetSession.jetPack<A>(for:fetcher:)(v2[14], v2[21], v2[17], v2[15], v2[18]);
}

uint64_t sub_19CF6ACA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6AD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  sub_19CCFECEC(v3, *(_QWORD *)(v0 + 104), type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB00();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  *(_QWORD *)(v0 + 24) = 0;
  sub_19CFDFB0C();
  sub_19CCEACE4(v3, type metadata accessor for JetPackAsset);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v8, v2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6AE30()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6AEBC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6AF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 216);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ValidatedJetPackAssetLocations.URLLocation.init(_:requestConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for ValidatedJetPackAssetLocations.URLLocation();
  *(_BYTE *)(a4 + *(int *)(result + 20)) = 0;
  v10 = (_QWORD *)(a4 + *(int *)(result + 24));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t ValidatedJetPackAssetLocations.URLLocation._buildRequest()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CF6B090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  LOBYTE(v2) = *(_BYTE *)(v2 + *(int *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() + 20));
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ValidatedJetPackAssetLocations.URLLocation._buildFetcher(_:bag:)(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_init);
  v6 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  v7 = v5;
  swift_unknownObjectRetain();
  v8 = v4;
  v9 = (void *)sub_19CFDF554();
  v10 = objc_msgSend(v6, sel_initWithContainerID_bag_, v9, a1);

  *a2 = a1;
  a2[1] = (uint64_t)v8;
  a2[2] = (uint64_t)v5;
  a2[3] = (uint64_t)v10;
}

uint64_t sub_19CF6B1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = v2;
  v3[4] = a2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF6B218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v1, v4);
  LOBYTE(v1) = *(_BYTE *)(v1 + *(int *)(v2 + 20));
  *(_BYTE *)(v3 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6B28C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_init);
  v8 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  swift_unknownObjectRetain();
  v9 = v6;
  v10 = v7;
  v11 = (void *)sub_19CFDF554();
  v12 = objc_msgSend(v8, sel_initWithContainerID_bag_, v11, a3);

  *a1 = a3;
  a1[1] = (uint64_t)v9;
  a1[2] = (uint64_t)v7;
  a1[3] = (uint64_t)v12;
  return sub_19CE71E70(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_19CF6B394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CF6B418()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6B458()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[30];
  v0[2] = v0;
  v0[3] = sub_19CF6B4D4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCDCFA4();
  sub_19CCECFE4(v1, &qword_1ECEB0C60);
  return swift_continuation_await();
}

uint64_t sub_19CF6B4D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    sub_19CCC290C(*(_QWORD *)(v1 + 240), *(_QWORD *)(v1 + 248), (uint64_t *)&unk_1ECEB3030);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF6B55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  sub_19CCF8C5C(*(_QWORD *)(v0 + 248), v1, (uint64_t *)&unk_1ECEB3030);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v5 = 1;
  if (v4(v1, 1, v3) != 1)
  {
    v6 = *(void (**)(uint64_t))(v0 + 280);
    v7 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(v7, *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));
    v6(v7);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    v5 = 0;
  }
  v9 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 56))(v8, v5, 1, v10);
  sub_19CCECFE4(v9, (uint64_t *)&unk_1ECEB3030);
  if (v4(v8, 1, v10) == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ECEB3030);
    sub_19CF6E898();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 208));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6B774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  sub_19CCECFE4(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ECEB3030);
  sub_19CF6E898();
  swift_allocError();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6B854(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_19CFDF3C8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation.init(_:bag:sourcePolicy:urlTransformer:requestConfiguration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t (*a4)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v8;
  uint64_t (*v9)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v10;

  v8 = *a3;
  *(_QWORD *)a8 = a2;
  *(_QWORD *)(a8 + 8) = result;
  *(_BYTE *)(a8 + 16) = v8;
  if (a4)
    v9 = a4;
  else
    v9 = sub_19CF6B8EC;
  if (a4)
    v10 = a5;
  else
    v10 = 0;
  *(_QWORD *)(a8 + 24) = v9;
  *(_QWORD *)(a8 + 32) = v10;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_19CF6B8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._buildRequest()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 72) = a1;
  v3 = sub_19CFDEDE0();
  *(_QWORD *)(v2 + 80) = v3;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v4;
  v5 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v2 + 120) = v5;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_BYTE *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v6;
  *v6 = v2;
  v6[1] = sub_19CF6B9D8;
  return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v4);
}

uint64_t sub_19CF6B9D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6BA3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(v2, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  *(_BYTE *)(v2 + *(int *)(type metadata accessor for URLJetPackAssetRequest() + 20)) = v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6BAA4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._buildFetcher(_:bag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_19CF6BAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = *(uint64_t **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_init);
  v5 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  v6 = v4;
  swift_unknownObjectRetain();
  v7 = v3;
  v8 = (void *)sub_19CFDF554();
  v9 = objc_msgSend(v5, sel_initWithContainerID_bag_, v8, v1);

  *v2 = v1;
  v2[1] = (uint64_t)v7;
  v2[2] = (uint64_t)v4;
  v2[3] = (uint64_t)v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ValidatedJetPackAssetLocations.BagKeyLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  _BYTE v12[16];
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_OWORD *)(v2 + 16);
  v16[0] = *(_OWORD *)v2;
  v16[1] = v10;
  v16[2] = *(_OWORD *)(v2 + 32);
  v17 = *(_QWORD *)(v2 + 48);
  v13 = v16;
  v14 = a2;
  v15 = a1;
  type metadata accessor for JetPackAsset(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0DF0A50], v5);
  return sub_19CFDFB60();
}

unint64_t sub_19CF6BCE8()
{
  unint64_t result;

  result = qword_1EE43AF08;
  if (!qword_1EE43AF08)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for URLJetPackAssetFetcher, &type metadata for URLJetPackAssetFetcher);
    atomic_store(result, (unint64_t *)&qword_1EE43AF08);
  }
  return result;
}

uint64_t sub_19CF6BD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;

  *(_QWORD *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 176) = a7;
  *(_QWORD *)(v7 + 152) = a4;
  *(_QWORD *)(v7 + 160) = a5;
  v9 = sub_19CFDF9A4();
  *(_QWORD *)(v7 + 184) = v9;
  *(_QWORD *)(v7 + 192) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 200) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  *(_QWORD *)(v7 + 208) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 216) = v11;
  *(_QWORD *)(v7 + 224) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v7 + 232) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  *(_QWORD *)(v7 + 240) = swift_task_alloc();
  v12 = sub_19CFDEDE0();
  *(_QWORD *)(v7 + 248) = v12;
  *(_QWORD *)(v7 + 256) = *(_QWORD *)(v12 - 8);
  v13 = swift_task_alloc();
  *(_QWORD *)(v7 + 264) = v13;
  v14 = type metadata accessor for URLJetPackAssetRequest();
  *(_QWORD *)(v7 + 272) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v7 + 280) = v15;
  *(_QWORD *)(v7 + 288) = *(_QWORD *)(v15 + 64);
  *(_QWORD *)(v7 + 296) = swift_task_alloc();
  *(_QWORD *)(v7 + 304) = swift_task_alloc();
  v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v7 + 32) = v16;
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(a4 + 48);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 312) = v17;
  *v17 = v7;
  v17[1] = sub_19CF6BE8C;
  return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v13);
}

uint64_t sub_19CF6BE8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6BEF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD *v32;
  id v33;
  id v34;
  id v35;
  _QWORD *v36;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  void *v44;
  id v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;

  v1 = v0[38];
  v58 = v0[37];
  v2 = v0[34];
  v49 = v0[35];
  v50 = v0[36];
  v3 = v0[30];
  v4 = v0[29];
  v53 = v4;
  v55 = v0[27];
  v57 = v0[26];
  v5 = v0[22];
  v59 = v0[21];
  v6 = v0[19];
  v7 = v0[20];
  v52 = v6;
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[32] + 32))(v1, v0[33], v0[31]);
  *(_BYTE *)(v1 + *(int *)(v2 + 20)) = *(_BYTE *)(v6 + 16);
  v8 = v1;
  v46 = v1;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  v0[41] = v9;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_init);
  v0[42] = v10;
  v11 = v10;
  v60 = v10;
  v12 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  v13 = v11;
  v14 = v7;
  v54 = v7;
  swift_unknownObjectRetain();
  v38 = v9;
  v15 = (void *)sub_19CFDF554();
  v40 = objc_msgSend(v12, sel_initWithContainerID_bag_, v15, v14);
  v0[43] = v40;

  v44 = v13;
  v16 = sub_19CFDFA10();
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v48 = v16;
  v17 = v3;
  v47(v3, 1, 1, v16);
  sub_19CCFECEC(v8, v58, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
  v43(v4, v5, v57);
  v18 = *(unsigned __int8 *)(v49 + 80);
  v19 = (v18 + 40) & ~v18;
  v42 = v50 + 7;
  v20 = (v19 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(unsigned __int8 *)(v55 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = 0;
  *((_QWORD *)v21 + 3) = 0;
  *((_QWORD *)v21 + 4) = v59;
  sub_19CCFE8AC(v58, (uint64_t)&v21[v19], (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  v22 = &v21[v20];
  *(_QWORD *)v22 = v54;
  *((_QWORD *)v22 + 1) = v38;
  *((_QWORD *)v22 + 2) = v60;
  *((_QWORD *)v22 + 3) = v40;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
  v56(&v21[(v20 + v41 + 32) & ~v41], v53, v57);
  swift_retain();
  swift_unknownObjectRetain();
  v39 = v38;
  v51 = v44;
  v45 = v40;
  v23 = sub_19CF69A9C(v17, (uint64_t)&unk_1EE442E18, (uint64_t)v21);
  v0[44] = v23;
  v47(v17, 1, 1, v48);
  sub_19CCFECEC(v46, v58, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  v43(v53, v5, v57);
  v24 = (v18 + 88) & ~v18;
  v25 = (v24 + v42) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0;
  v29 = *(_OWORD *)v52;
  v30 = *(_OWORD *)(v52 + 16);
  v31 = *(_OWORD *)(v52 + 32);
  *(_QWORD *)(v28 + 80) = *(_QWORD *)(v52 + 48);
  *(_OWORD *)(v28 + 48) = v30;
  *(_OWORD *)(v28 + 64) = v31;
  *(_OWORD *)(v28 + 32) = v29;
  sub_19CCFE8AC(v58, v28 + v24, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  *(_QWORD *)(v28 + v25) = v23;
  *(_QWORD *)(v28 + v26) = v59;
  v32 = (_QWORD *)(v28 + v27);
  *v32 = v54;
  v32[1] = v39;
  v32[2] = v60;
  v32[3] = v45;
  v56((char *)(v28 + ((v27 + v41 + 32) & ~v41)), v53, v57);
  swift_retain();
  swift_unknownObjectRetain();
  v33 = v39;
  v34 = v51;
  v35 = v45;
  swift_retain();
  sub_19CCD31D4(v52);
  v0[45] = sub_19CF69A9C(v17, (uint64_t)&unk_1EE442E28, v28);
  v36 = (_QWORD *)swift_task_alloc();
  v0[46] = v36;
  v0[47] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  *v36 = v0;
  v36[1] = sub_19CF6C378;
  return sub_19CFDFAAC();
}

uint64_t sub_19CF6C378()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 384) = *(_QWORD *)(v1 + 88);
  *(_BYTE *)(v1 + 81) = *(_BYTE *)(v1 + 96);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 392) = v3;
  *v3 = v2;
  v3[1] = sub_19CF6C418;
  return sub_19CFDFAAC();
}

uint64_t sub_19CF6C418()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6C46C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;

  if (*(_BYTE *)(v0 + 81) != 1)
  {
    v11 = *(void **)(v0 + 336);
    v10 = *(void **)(v0 + 344);
    v12 = *(void **)(v0 + 328);
    v13 = *(_QWORD *)(v0 + 304);
    sub_19CD4EAF4(*(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
    *(_QWORD *)(v0 + 112) = 0;
    sub_19CFDFB0C();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    v14 = v13;
LABEL_8:
    sub_19CCEACE4(v14, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
    goto LABEL_9;
  }
  v1 = *(void **)(v0 + 384);
  if (!*(_BYTE *)(v0 + 80))
  {
    v15 = *(void **)(v0 + 336);
    v16 = *(void **)(v0 + 328);
    v28 = *(void **)(v0 + 344);
    v30 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 120) = v1;
    v17 = v1;
    v18 = v1;
    sub_19CFDFB0C();
    swift_release();
    sub_19CD4EAF4(v1, 1);
    sub_19CD4EAF4(v1, 1);
    swift_release();
    swift_unknownObjectRelease();

    v14 = v30;
    goto LABEL_8;
  }
  v2 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 128) = v1;
  v3 = v1;
  v4 = swift_dynamicCast();
  v5 = *(void **)(v0 + 384);
  v26 = *(void **)(v0 + 336);
  v25 = *(void **)(v0 + 328);
  v27 = *(_QWORD *)(v0 + 304);
  v29 = *(void **)(v0 + 344);
  if (!v4)
  {

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19D052350;
    *(_QWORD *)(v19 + 32) = v1;
    *(_QWORD *)(v19 + 40) = v2;
    sub_19CE04734();
    v20 = swift_allocError();
    v22 = v21;
    sub_19CD08E2C(v5, 1);
    sub_19CD08E2C(v2, 1);
    sub_19CD08E2C(v5, 1);
    sub_19CD08E2C(v2, 1);
    *v22 = v19;
    *(_QWORD *)(v0 + 136) = v20;
    sub_19CFDFB0C();
    swift_release();
    sub_19CD4EAF4(v5, 1);
    sub_19CD4EAF4(v2, 1);
    sub_19CD4EAF4(v2, 1);
    sub_19CD4EAF4(v5, 1);
    swift_release();
    swift_unknownObjectRelease();

    v14 = v27;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 144) = v2;
  v8 = v2;
  v9 = v2;
  sub_19CFDFB0C();
  swift_release();
  sub_19CD4EAF4(v5, 1);
  sub_19CD4EAF4(v2, 1);
  sub_19CD4EAF4(v2, 1);
  swift_release();
  swift_unknownObjectRelease();

  sub_19CCEACE4(v27, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v24, v7);

LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6C840()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 320);
  sub_19CFDFB0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6C8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v8[2] = v19;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0708);
  v8[3] = v13;
  v8[4] = *(_QWORD *)(v13 - 8);
  v8[5] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v8[6] = swift_task_alloc();
  v14 = swift_task_alloc();
  v8[7] = v14;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442DA0
                                                                                     + dword_1EE442DA0);
  v15 = (_QWORD *)swift_task_alloc();
  v8[8] = v15;
  *v15 = v8;
  v15[1] = sub_19CF6C9D8;
  return v17(v14, a5, a6, a7, a8, v18);
}

uint64_t sub_19CF6C9D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6CA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  sub_19CFDFAB8();
  if (v1)
  {
    sub_19CCEACE4(*(_QWORD *)(v0 + 56), type metadata accessor for JetPackAsset);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    sub_19CCFECEC(v2, *(_QWORD *)(v0 + 48), type metadata accessor for JetPackAsset);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
    sub_19CFDFB00();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_19CCEACE4(v2, type metadata accessor for JetPackAsset);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6CB38()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6CB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 200) = v17;
  *(_QWORD *)(v8 + 208) = v18;
  *(_OWORD *)(v8 + 184) = v16;
  *(_QWORD *)(v8 + 168) = a7;
  *(_QWORD *)(v8 + 176) = a8;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 144) = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0708);
  *(_QWORD *)(v8 + 216) = v10;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  *(_QWORD *)(v8 + 240) = type metadata accessor for URLJetPackAssetRequest();
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  v11 = sub_19CFDEDE0();
  *(_QWORD *)(v8 + 272) = v11;
  *(_QWORD *)(v8 + 280) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  v12 = swift_task_alloc();
  *(_QWORD *)(v8 + 296) = v12;
  v13 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v8 + 32) = v13;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a4 + 48);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 304) = v14;
  *v14 = v8;
  v14[1] = sub_19CF6CCD4;
  return sub_19CCC4AEC(v12);
}

uint64_t sub_19CF6CCD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF6CD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  char v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v20;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 152), v2);
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v5 = sub_19CFDF548();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 320) = v6;
  v6(v1, v2);
  if ((v5 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    sub_19CFDFAA0();
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 248);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 240);
    v11 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 112) = 0xD000000000000055;
    *(_QWORD *)(v0 + 120) = 0x800000019D078130;
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    v14 = v11;
    sub_19CD40658(v0 + 112, v0 + 72);
    *(_BYTE *)(v0 + 104) = 0;
    *(_BYTE *)(v13 + 64) = 0;
    v15 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v13 + 48) = v15;
    *(_QWORD *)(v12 + 32) = v13;
    v20 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();

    v4(v10, v8, v9);
    *(_BYTE *)(v10 + *(int *)(v18 + 20)) = *(_BYTE *)(v17 + 16);
    v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442DA0
                                                                                       + dword_1EE442DA0);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v16;
    *v16 = v0;
    v16[1] = sub_19CF6D020;
    return v19(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  }
}

uint64_t sub_19CF6D020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  sub_19CCEACE4(v2, (uint64_t (*)(_QWORD))type metadata accessor for URLJetPackAssetRequest);
  return swift_task_switch();
}

uint64_t sub_19CF6D098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 216);
  sub_19CCFECEC(v1, *(_QWORD *)(v0 + 256), type metadata accessor for JetPackAsset);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  sub_19CFDFB00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_19CCEACE4(v1, type metadata accessor for JetPackAsset);
  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6D184()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6D1FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF6D284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 72) = a1;
  v3 = sub_19CFDEDE0();
  *(_QWORD *)(v2 + 80) = v3;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v3 - 8);
  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v4;
  v5 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v2 + 120) = v5;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_BYTE *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v6;
  *v6 = v2;
  v6[1] = sub_19CF6B9D8;
  return ValidatedJetPackAssetLocations.BagKeyLocation.url()(v4);
}

uint64_t sub_19CF6D334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_19CCBE344;
  v6[2] = a1;
  v6[3] = a3;
  return swift_task_switch();
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._buildRequest()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CD579FC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._buildFetcher(_:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 32) + *(_QWORD *)(a5 + 32));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CCBE344;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ValidatedJetPackAssetLocation._jetPackAssetStream(session:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocations()
{
  return &type metadata for ValidatedJetPackAssetLocations;
}

uint64_t assignWithCopy for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackAssetLocations.URLLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_19CF6D614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_19CF6D690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t assignWithCopy for ValidatedJetPackAssetLocations.BagKeyLocation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ValidatedJetPackAssetLocations.BagKeyLocation(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19CF6D7FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v3 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  v7 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_19CF6D900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for ValidatedJetPackAssetLocations.URLLocation() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88) - 8) + 80);
  v9 = v8 + v7 + 8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + v5;
  v14 = *(_QWORD *)(v1 + v7);
  v15 = v1 + (v9 & ~v8);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_19CCBE344;
  return sub_19CF6A558(a1, v10, v11, v13, v12, v14, v15);
}

uint64_t sub_19CF6D9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[5];

  v9[0] = MEMORY[0x1E0DEE9D8];
  v10[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437398);
  v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  sub_19CCC290C((uint64_t)v9, v1 + 24, (uint64_t *)&unk_1EE437350);
  sub_19CE6A0D8(objc_msgSend(*(id *)(v0 + 16), sel_valuePromise));
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v4;
  v5[4] = v3;
  v6 = sub_19CD48F8C();
  swift_retain_n();
  swift_retain();
  v7 = sub_19CFDFDB8();
  v11[3] = v6;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = v7;
  v9[0] = sub_19CF6F074;
  v9[1] = v5;
  v9[2] = sub_19CF6F0C4;
  v9[3] = v1;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain();
  swift_retain();
  sub_19CDBFF30();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE437390);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v1;
}

uint64_t sub_19CF6DB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF10);
  v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = 0;
  sub_19CE6A0D8(objc_msgSend(*(id *)(v0 + 16), sel_valuePromise));
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v1;
  v6[3] = v5;
  v6[4] = v4;
  v7 = sub_19CD48F8C();
  swift_retain_n();
  swift_retain();
  v11[3] = v7;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = sub_19CFDFDB8();
  v9[0] = sub_19CF6ECAC;
  v9[1] = v6;
  v9[2] = sub_19CF6ECFC;
  v9[3] = v1;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain();
  swift_retain();
  sub_19CDBFF30();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE437390);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v1;
}

void sub_19CF6DCDC(void *a1)
{
  _QWORD v2[3];
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  swift_getErrorValue();
  if ((sub_19CD2C1BC(v4, v5) & 1) != 0)
  {
    memset(v2, 0, sizeof(v2));
    v3 = xmmword_19D04BBA0;
    sub_19CFBD48C((uint64_t)v2);
    sub_19CCECFE4((uint64_t)v2, &qword_1EE43C2D8);
  }
  else
  {
    sub_19CEBC084(a1);
  }
}

void sub_19CF6DD68(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_getErrorValue();
  if ((sub_19CD2C1BC(v2, v3) & 1) != 0)
    sub_19CFBD9D8(0);
  else
    sub_19CEBC0E8(a1);
}

void sub_19CF6DDD0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  if ((sub_19CD2C1BC(v7[1], v7[2]) & 1) != 0)
  {
    v6 = sub_19CFDEDE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    sub_19CCDFA80((uint64_t)v5);
    sub_19CCECFE4((uint64_t)v5, (uint64_t *)&unk_1ECEB3030);
  }
  else
  {
    sub_19CEBC348(a1);
  }
}

uint64_t sub_19CF6DEA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v4 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_19CF6DF5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19CD579FC;
  return sub_19CEAA94C(a1, v4, v5, v6);
}

uint64_t sub_19CF6DFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v11 = *a6;
  v12 = a6[1];
  v13 = a6[2];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v14;
  *v14 = v6;
  v14[1] = sub_19CD579FC;
  return sub_19CF681C0(a1, a2, a3, a4, a5, v11, v12, v13);
}

uint64_t sub_19CF6E080()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = type metadata accessor for JetPackAsset(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v3 + v5 + 32) & ~v5;
  swift_unknownObjectRelease();
  swift_release();
  v7 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v6);
  v8 = v0 + v6 + *(int *)(v4 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  v10 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF6E1DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for JetPackAsset(0);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1EE442DE8
                                                                                         + dword_1EE442DE8))(a1, v7, v8, v9, (uint64_t)v1 + v5, (_QWORD *)((char *)v1 + v6));
}

uint64_t sub_19CF6E2C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CD19780(*a2, a2[1], *a1);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CF6E2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19CF6E3A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (uint64_t)(v1 + 4);
  v8 = v1[11];
  v9 = v1[12];
  v10 = (uint64_t)v1 + ((v4 + 104) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_19CD579FC;
  return sub_19CF6BD2C(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_19CF6E450()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v7 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_19CF6E54C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (char *)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + v5);
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CF6C8CC(a1, v6, v7, v8, (uint64_t)v1 + v4, v10, v11, v12);
}

uint64_t sub_19CF6E640()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v3 + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  v7 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_19CF6E77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = *(_QWORD *)(type metadata accessor for URLJetPackAssetRequest() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + v5);
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CF6CB88(a1, v8, v9, v1 + 32, v1 + v4, v10, v11, v12);
}

unint64_t sub_19CF6E898()
{
  unint64_t result;

  result = qword_1EE442E38;
  if (!qword_1EE442E38)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D065E3C, &type metadata for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError);
    atomic_store(result, &qword_1EE442E38);
  }
  return result;
}

void sub_19CF6E8E0(void *a1)
{
  sub_19CF6DDD0(a1);
}

uint64_t sub_19CF6E8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;

  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 72) = v7;
  *(_BYTE *)(v4 + 88) = *(_BYTE *)(a3 + 32);
  v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a4 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v9;
  *v9 = v4;
  v9[1] = sub_19CEA8408;
  return sub_19CF64DAC(a1, a2, v4 + 56, v4 + 16);
}

uint64_t sub_19CF6E97C()
{
  _BYTE v1[40];

  sub_19CF3DF50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFE00C4();
  sub_19CCCB25C((uint64_t)v1);
  sub_19CD20334((uint64_t)v1);
  return swift_release();
}

uint64_t sub_19CF6EA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;

  v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)a5;
  *(_OWORD *)(v7 + 72) = v13;
  *(_BYTE *)(v7 + 88) = *(_BYTE *)(a5 + 32);
  v14 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v7 + 32) = v14;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a6 + 32);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 96) = v15;
  *v15 = v7;
  v15[1] = sub_19CF6F1B0;
  return sub_19CF68528(a1, a2, a3, a4, v7 + 56, v7 + 16, a7);
}

uint64_t sub_19CF6EAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_19CF6EBB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = v1[4];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B88) - 8) + 80);
  v10 = v9 + v8 + 8;
  v11 = v1[2];
  v12 = v1[3];
  v13 = *(_QWORD *)((char *)v1 + v7);
  v14 = (uint64_t)v1 + v6;
  v15 = *(_QWORD *)((char *)v1 + v8);
  v16 = (uint64_t)v1 + (v10 & ~v9);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_19CD579FC;
  return sub_19CF6A9B8(a1, v11, v12, v14, v13, v15, v16, v4);
}

uint64_t sub_19CF6ECAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr, _QWORD))(v1 + 24))(&v3, *a1);
  sub_19CFBD9D8(v3);
  return swift_bridgeObjectRelease();
}

void sub_19CF6ECFC(void *a1)
{
  sub_19CF6DD68(a1);
}

uint64_t sub_19CF6ED04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF6ED30()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_19CF6ED8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442E58 + dword_1EE442E58))(a1, v4, v1 + 24, v1 + 64);
}

uint64_t sub_19CF6EE10(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 32);
  v4 = *(id *)(a1 + 24);
  v5 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v2;
  return a1;
}

uint64_t sub_19CF6EE6C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for JetPackAsset(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 120) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  v4 = (uint64_t)v0 + v3;
  __swift_destroy_boxed_opaque_existential_1Tm(v4);
  v5 = v4 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  v7 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF6EF8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JetPackAsset(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)(v1 + 5);
  v9 = (uint64_t)(v1 + 10);
  v10 = (uint64_t)v1 + ((v4 + 120) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442E90
                                                                                                + dword_1EE442E90))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_65Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF6F074(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr, _QWORD))(v1 + 24))(v3, *a1);
  sub_19CFBD48C((uint64_t)v3);
  return sub_19CCECFE4((uint64_t)v3, &qword_1EE43C2D8);
}

void sub_19CF6F0C4(void *a1)
{
  sub_19CF6DCDC(a1);
}

uint64_t storeEnumTagSinglePayload for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF6F10C + 4 * byte_19D065CE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF6F12C + 4 * byte_19D065CE5[v4]))();
}

_BYTE *sub_19CF6F10C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF6F12C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF6F134(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF6F13C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF6F144(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF6F14C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError()
{
  return &type metadata for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError;
}

unint64_t sub_19CF6F16C()
{
  unint64_t result;

  result = qword_1EE442EB0[0];
  if (!qword_1EE442EB0[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D065E14, &type metadata for ValidatedJetPackAssetLocations.BagKeyLocation.BagKeyLocationError);
    atomic_store(result, qword_1EE442EB0);
  }
  return result;
}

uint64_t static DeepLinkRouterBuilder.buildOptional(_:)(uint64_t a1)
{
  uint64_t v1;

  if (a1)
    v1 = a1;
  else
    v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for DeepLinkRouterBuilder()
{
  return &type metadata for DeepLinkRouterBuilder;
}

uint64_t sub_19CF6F204@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *);
  uint64_t v30;

  v27 = a5;
  v28 = a2;
  v30 = a4;
  v29 = a1;
  v26 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x1E0C80A78](v10, v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v20);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v23 + 16))(v22, v6);
  v24 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v22, v14);
    v29(v19, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v27, v12, v26);
    v24 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a6, v24, 1);
}

uint64_t _CodeByKind_OrNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a2, 1, 1, AssociatedTypeWitness);
  v5 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
}

uint64_t _CodeByKind_OrNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v3 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _CodeByKind_OrNil.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v3 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*_CodeByKind_OrNil.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _CodeByKind_OrNil.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v1 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = sub_19CFDFF5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v16 - v6;
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v1, v3, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v7, AssociatedTypeWitness);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_19CFE0670();
    v14 = v16[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
  }
  return v14;
}

uint64_t _CodeByKind_OrNil.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_19CFDFF5C();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v30 = (uint64_t)&v29 - v11;
  v13 = type metadata accessor for CodeByKind(255, a2, a3, v12);
  v14 = sub_19CFDFF5C();
  v29 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v29 - v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v35 = a4;
  v19(a4, 1, 1, AssociatedTypeWitness, v16);
  sub_19CCD5B84(a1, (uint64_t)v34);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v13);
  v20 = v33;
  v21 = sub_19CFDFF80();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    v24 = type metadata accessor for _CodeByKind_OrNil(0, a2, a3, v23);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v35, v24);
  }
  else
  {
    MEMORY[0x1E0C80A78](v21, v22);
    *(&v29 - 2) = a2;
    *(&v29 - 1) = a3;
    KeyPath = swift_getKeyPath();
    v27 = v30;
    sub_19CF6F204((void (*)(char *, char *))sub_19CF6F884, KeyPath, MEMORY[0x1E0DEDCE8], AssociatedTypeWitness, v28, v30);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v14);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v35, v27, v32);
  }
}

uint64_t type metadata accessor for _CodeByKind_OrNil(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _CodeByKind_OrNil);
}

uint64_t sub_19CF6F884()
{
  return swift_getAtKeyPath();
}

uint64_t _CodeByKind_OrNil.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v25 = a4;
  v26 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v9);
  v11 = (char *)&v24 - v10;
  v13 = type metadata accessor for CodeByKind(255, a2, a3, v12);
  v14 = sub_19CFDFF5C();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v19 = (char *)&v24 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a4, 1, 1, AssociatedTypeWitness, v17);
  v20 = v26;
  sub_19CCD5B84(v26, (uint64_t)v30);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v13);
  Optional<A>.init(_partiallyFrom:)(v30, v13, (uint64_t)v19);
  v28 = a2;
  v29 = a3;
  KeyPath = swift_getKeyPath();
  sub_19CF6F204((void (*)(char *, char *))sub_19CF6F884, KeyPath, MEMORY[0x1E0DEDCE8], AssociatedTypeWitness, v22, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1Tm(v20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v25, v11, v27);
}

uint64_t _CodeByKind_OrNil.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v24 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  v6 = sub_19CFDFF5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v21[-v9];
  v12 = type metadata accessor for CodeByKind(255, v5, v4, v11);
  v13 = sub_19CFDFF5C();
  v20 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = &v21[-v16];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, v6, v15);
  v22 = v5;
  v23 = v4;
  sub_19CF6F204((void (*)(char *, char *))sub_19CF70BAC, (uint64_t)v21, MEMORY[0x1E0DEDCE8], v12, v18, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v12);
  sub_19CFDFF68();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v13);
}

uint64_t _CodeByKind_OrNil._partiallyEncode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;

  v22 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  v5 = sub_19CFDFF5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v21 - v8;
  v11 = type metadata accessor for CodeByKind(255, v4, v3, v10);
  v12 = sub_19CFDFF5C();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, v2, v5, v15);
  v24 = v4;
  v25 = v3;
  sub_19CF6F204((void (*)(char *, char *))sub_19CF6FE40, (uint64_t)v23, MEMORY[0x1E0DEDCE8], v11, v18, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v19 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v11);
  Optional<A>._partiallyEncode(to:)(v22, v12, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
}

uint64_t sub_19CF6FD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, double))(v9 + 16))((char *)&v11 - v7, a1, v6);
  return CodeByKind.init(wrappedValue:)((uint64_t)v8, a2);
}

uint64_t sub_19CF6FE40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF6FD8C(a1, a2);
}

uint64_t sub_19CF6FE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _CodeByKind_OrNil.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_19CF6FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _CodeByKind_OrNil.init(_partiallyFrom:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_19CF6FE88(uint64_t a1, uint64_t a2)
{
  return _CodeByKind_OrNil.encode(to:)(a1, a2);
}

BOOL static _CodeByKind_OrNil<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, double);
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a5;
  v43 = a1;
  v44 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v7);
  v40 = (char *)&v39 - v8;
  v9 = sub_19CFDFF5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v42 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2, v11);
  v13 = (char *)&v39 - v12;
  v14 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v39 - v21;
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)&v39 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v28((char *)&v39 - v26, v43, v9, v25);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v22, v44, v9);
  v43 = TupleTypeMetadata2;
  v29 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v28)(v13, v27, v9);
  ((void (*)(char *, char *, uint64_t))v28)(v29, v22, v9);
  v44 = v6;
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v30(v13, 1, AssociatedTypeWitness) == 1)
  {
    v31 = *(void (**)(char *, uint64_t))(v14 + 8);
    v31(v22, v9);
    v31(v27, v9);
    if (v30(v29, 1, AssociatedTypeWitness) == 1)
    {
      v31(v13, v9);
      return 1;
    }
    goto LABEL_6;
  }
  ((void (*)(char *, char *, uint64_t))v28)(v18, v13, v9);
  if (v30(v29, 1, AssociatedTypeWitness) == 1)
  {
    v32 = *(void (**)(char *, uint64_t))(v14 + 8);
    v32(v22, v9);
    v32(v27, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v18, AssociatedTypeWitness);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
    return 0;
  }
  v33 = v44;
  v34 = v40;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v40, v29, AssociatedTypeWitness);
  v35 = sub_19CFDF548();
  v36 = *(void (**)(char *, uint64_t))(v33 + 8);
  v36(v34, AssociatedTypeWitness);
  v37 = *(void (**)(char *, uint64_t))(v14 + 8);
  v37(v22, v9);
  v37(v27, v9);
  v36(v18, AssociatedTypeWitness);
  v37(v13, v9);
  return (v35 & 1) != 0;
}

BOOL sub_19CF7019C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static _CodeByKind_OrNil<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8));
}

uint64_t _CodeByKind_OrNil<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  sub_19CFDFF5C();
  return sub_19CFDFF74();
}

uint64_t _CodeByKind_OrNil<>.hashValue.getter()
{
  sub_19CFE08C8();
  _CodeByKind_OrNil<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CF70260()
{
  return _CodeByKind_OrNil<>.hashValue.getter();
}

uint64_t sub_19CF70268()
{
  return _CodeByKind_OrNil<>.hash(into:)();
}

uint64_t sub_19CF70270()
{
  sub_19CFE08C8();
  _CodeByKind_OrNil<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CF702C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> _CodeByKind_OrNil<A>, a1, &v4);
}

uint64_t sub_19CF702F8()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_19CFDFF5C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CF70380(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (v6 & 0x100000) != 0 || v7 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_19CF70474(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_19CF704F4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_19CF705A8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_19CF706A8(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_19CF7075C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_19CF7085C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  if (a2 > v6)
  {
    v8 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (v9)
        goto LABEL_15;
    }
    else
    {
      if (v10 <= 0xFF)
      {
        if (v10 < 2)
          goto LABEL_22;
LABEL_8:
        v9 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_22;
LABEL_15:
        v11 = (v9 - 1) << v8;
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 > 3)
            LODWORD(v7) = 4;
          __asm { BR              X12 }
        }
        return v6 + v11 + 1;
      }
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v13 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_19CF709B8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = 0u;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  if (a3 > v9)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 >= a2)
LABEL_20:
        __asm { BR              X11 }
LABEL_13:
      v12 = ~v9 + a2;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v13 = v12 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v13;
            a1[2] = BYTE2(v13);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v13;
          }
          else
          {
            *a1 = v13;
          }
        }
      }
      else
      {
        bzero(a1, v10);
        *(_DWORD *)a1 = v12;
      }
      __asm { BR              X10 }
    }
    v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      v6 = 4u;
      if (v9 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v11 >= 0x100)
      v6 = 2;
    else
      v6 = v11 > 1;
  }
  if (v9 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_19CF70B80()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19CF70B88()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_19CF70BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF6FE40(a1, a2);
}

id LookupBagContract.__allocating_init(_:)(uint64_t *a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  objc_super v9;
  objc_super v10;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing] = v4;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v4;
  v5 = (objc_class *)type metadata accessor for MescalBagContract();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v4;
  v10.receiver = v6;
  v10.super_class = v5;
  swift_unknownObjectRetain_n();
  v7 = v3;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v10, sel_init);

  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v9, sel_init);
}

id LookupBagContract.init(_:)(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  objc_super v7;
  objc_super v8;

  v2 = *a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing] = *a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v2;
  v3 = (objc_class *)type metadata accessor for MescalBagContract();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v2;
  v8.receiver = v4;
  v8.super_class = v3;
  swift_unknownObjectRetain_n();
  v5 = v1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v8, sel_init);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_19CF70DC0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine17LookupBagContract_backing);
  v2 = (void *)sub_19CFDF554();
  v3 = objc_msgSend(v1, sel_URLForKey_, v2);

  return v3;
}

uint64_t sub_19CF70E2C()
{
  return swift_unknownObjectRelease();
}

id LookupBagContract.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LookupBagContract();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LookupBagContract()
{
  return objc_opt_self();
}

uint64_t method lookup function for LookupBagContract()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LookupBagContract.unpersonalizedLookupURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

unint64_t sub_19CF70EC4()
{
  unint64_t result;

  result = qword_1EE442FB0;
  if (!qword_1EE442FB0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067F30, &type metadata for SQLiteStatementError);
    atomic_store(result, (unint64_t *)&qword_1EE442FB0);
  }
  return result;
}

_QWORD *MutableStateRef.init(pointingTo:in:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

__n128 MutableStateRef.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t MutableStateRef<>.current.getter(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v9;

  v9 = *v2;
  v5 = a1[3];
  v4 = a1[4];
  v6 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = a1[2];
  swift_bridgeObjectRetain();
  v6(&v9, v5, a2, v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t MutableStateRef<>.reset()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  v9 = (char *)&v13 - v8;
  v10 = *v1;
  (*(void (**)(uint64_t, uint64_t, double))(v2 + 32))(v3, v2, v7);
  v14 = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(&v14, 0, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 40))(v9, v3, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
}

uint64_t MutableStateRef<>.performChanges(_:)(void (*a1)(char *), uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, double);
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  void (*v31)(char *, uint64_t);
  uint64_t v33[2];
  void (*v34)(char *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t AssociatedTypeWitness;
  _QWORD v40[2];

  v33[0] = a4;
  v33[1] = a2;
  v34 = a1;
  v6 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v33 - v12;
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v17);
  v20 = (char *)v33 - v19;
  v22 = *v4;
  v21 = v4[1];
  v23 = *(void (**)(uint64_t, uint64_t, double))(v15 + 32);
  v36 = v16;
  v23(v16, v15, v18);
  v38 = v22;
  v40[0] = v22;
  v40[1] = v21;
  v35 = v21;
  v24 = a3;
  v25 = v33[0];
  MutableStateRef<>.current.getter(v24, v33[0]);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  v34(v9);
  if ((sub_19CFDF548() & 1) != 0)
  {
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v9, v6);
    v26(v13, v6);
    v27 = v36;
  }
  else
  {
    v40[0] = v38;
    v28 = v36;
    v29 = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v40, v9, v6, v25, v29, AssociatedConformanceWitness);
    v31 = *(void (**)(char *, uint64_t))(v7 + 8);
    v31(v9, v6);
    v31(v13, v6);
    v27 = v28;
  }
  sub_19CF712F0(v38, v35, (uint64_t)v20, v27, v6, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, AssociatedTypeWitness);
}

uint64_t sub_19CF712F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v16 - v13, a3, AssociatedTypeWitness, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(a6 + 40))(v14, a4, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, AssociatedTypeWitness);
}

double _s9JetEngine8StateRefVyACyxq_GAA07MutablecD0Vyxq_GcfC_0@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  __int128 v6;

  v3 = a1[1];
  v5 = *a1;
  StateRef.init(pointingTo:in:)(&v5, v3, &v6);
  result = *(double *)&v6;
  *a2 = v6;
  return result;
}

_QWORD *sub_19CF71410(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for MutableStateRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MutableStateRef);
}

uint64_t MetricsIdentifierType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6469746E65696C63;
  else
    return 0x646972657375;
}

uint64_t sub_19CF714B0(char *a1, char *a2)
{
  return sub_19CE803A8(*a1, *a2);
}

unint64_t sub_19CF714C0()
{
  unint64_t result;

  result = qword_1EE442FB8;
  if (!qword_1EE442FB8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsIdentifierType, &type metadata for MetricsIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EE442FB8);
  }
  return result;
}

uint64_t sub_19CF71504()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF71580()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF715D8()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF71650(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x646972657375;
  if (*v1)
    v2 = 0x6469746E65696C63;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19CF7168C()
{
  sub_19CCE26EC();
  return sub_19CFDF80C();
}

uint64_t storeEnumTagSinglePayload for MetricsIdentifierType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF71724 + 4 * byte_19D0660B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF71758 + 4 * asc_19D0660B0[v4]))();
}

uint64_t sub_19CF71758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF71760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF71768);
  return result;
}

uint64_t sub_19CF71774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF7177CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF71780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF71788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierSchemes()
{
  return &type metadata for MetricsIdentifierSchemes;
}

void sub_19CF717A4(char *a1)
{
  sub_19CE80F84(*a1);
}

void sub_19CF717B0()
{
  char *v0;

  sub_19CF98D84(*v0);
}

void sub_19CF717B8()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF717F8()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF71880(uint64_t a1)
{
  char *v1;

  sub_19CE11684(a1, *v1);
}

uint64_t sub_19CF71888@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF72C2C();
  *a1 = result;
  return result;
}

uint64_t sub_19CF718B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF718E8 + 4 * byte_19D0660C0[*v0]))();
}

void sub_19CF718E8(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

void sub_19CF718FC(_QWORD *a1@<X8>)
{
  *a1 = 0x736369706F74;
  a1[1] = 0xE600000000000000;
}

void sub_19CF71914(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6170736566696CLL;
  a1[1] = 0xE800000000000000;
}

void sub_19CF71930(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "correlations");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_19CF71954(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461746F72;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_19CF71970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF72C2C();
  *a1 = result;
  return result;
}

uint64_t sub_19CF71994()
{
  sub_19CD1C13C();
  return sub_19CFE0A48();
}

uint64_t sub_19CF719BC()
{
  sub_19CD1C13C();
  return sub_19CFE0A54();
}

uint64_t sub_19CF719E4()
{
  uint64_t result;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CD09560((unint64_t *)&qword_1ECEB24E0, &qword_1ECEB24E8, (uint64_t (*)(void))sub_19CD1632C, MEMORY[0x1E0DEC850]);
  result = sub_19CFDF4F4();
  qword_1EE43A598 = result;
  unk_1EE43A5A0 = v1;
  return result;
}

uint64_t sub_19CF71A7C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08D4();
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  if ((v2 & 1) != 0)
  {
    sub_19CFE08E0();
    if (v3)
      goto LABEL_7;
  }
  else
  {
    sub_19CFE08E0();
    sub_19CFE08F8();
    if (v3)
    {
LABEL_7:
      sub_19CFE08E0();
      sub_19CFE08D4();
      v7 = *(_QWORD *)(v3 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain();
        v8 = v3 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_19CFDF650();
          swift_bridgeObjectRelease();
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
      }
      if (v4)
        goto LABEL_12;
      return sub_19CFE08E0();
    }
  }
  sub_19CFE08E0();
  if (v4)
  {
LABEL_12:
    sub_19CFE08E0();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    return swift_bridgeObjectRelease();
  }
  return sub_19CFE08E0();
}

uint64_t sub_19CF71C90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442FE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v17 = *(_QWORD *)(v1 + 32);
  v18 = v8;
  v16 = *(unsigned __int8 *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v14[1] = *(_QWORD *)(v1 + 56);
  v15 = v9;
  v14[0] = *(_QWORD *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CD1C13C();
  sub_19CFE0A24();
  LOBYTE(v20) = 0;
  v10 = v19;
  sub_19CFE0538();
  if (!v10)
  {
    v11 = v18;
    LOBYTE(v20) = v21;
    v22 = 1;
    sub_19CF72B00();
    sub_19CFE0568();
    v20 = v11;
    v22 = 2;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD1C6C0(&qword_1EE442FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_19CFE0568();
    v19 = v12;
    LOBYTE(v20) = 3;
    sub_19CFE0514();
    v20 = v15;
    v22 = 4;
    sub_19CFE052C();
    LOBYTE(v20) = 5;
    sub_19CFE04FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_19CF71EF4(_QWORD *a1)
{
  return sub_19CF71C90(a1);
}

uint64_t sub_19CF71F08()
{
  sub_19CFE08C8();
  sub_19CF71A7C();
  return sub_19CFE0910();
}

uint64_t sub_19CF71F7C()
{
  sub_19CFE08C8();
  sub_19CF71A7C();
  return sub_19CFE0910();
}

uint64_t sub_19CF71FEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  v4 = *a1;
  v3 = a1[1];
  v40 = *((_OWORD *)a1 + 3);
  v5 = *(_QWORD *)(a2 + 16);
  v49 = (_QWORD *)a1[6];
  v50 = v5;
  v41 = a1[8];
  v42 = a1[3];
  v39 = *((_BYTE *)a1 + 16);
  v38 = a1[4];
  v37 = *((_BYTE *)a1 + 40);
  if (!(_QWORD)v40)
  {
    if (!v5)
      goto LABEL_48;
    v20 = 0;
    v36 = a2 + 32;
    while (1)
    {
      v21 = v36 + 72 * v20;
      v12 = *(_QWORD **)(v21 + 48);
      if (v12)
      {
        v22 = v12[2];
        if (v22)
        {
          v9 = *(_QWORD *)v21;
          v10 = *(_QWORD *)(v21 + 8);
          v31 = *(_BYTE *)(v21 + 16);
          v34 = *(_QWORD *)(v21 + 24);
          v46 = *(_BYTE *)(v21 + 40);
          v47 = *(_QWORD *)(v21 + 32);
          v48 = *(_QWORD *)(v21 + 56);
          v32 = *(_QWORD *)(v21 + 64);
          if (v12[4] == v4 && v12[5] == v3)
            goto LABEL_44;
          result = sub_19CFE06A0();
          if ((result & 1) != 0)
            goto LABEL_44;
          if (v22 != 1)
            break;
        }
      }
LABEL_23:
      if (++v20 == v50)
        goto LABEL_48;
    }
    v24 = v12 + 7;
    v25 = 1;
    while (1)
    {
      v26 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
LABEL_50:
        __break(1u);
        return result;
      }
      if (*(v24 - 1) == v4 && *v24 == v3)
        break;
      result = sub_19CFE06A0();
      if ((result & 1) != 0)
        break;
      v24 += 2;
      ++v25;
      if (v26 == v22)
        goto LABEL_23;
    }
LABEL_44:
    v43 = v4;
    swift_bridgeObjectRetain();
    v28 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v32;
    swift_bridgeObjectRetain();
    if ((v31 & 1) != 0)
      goto LABEL_42;
LABEL_45:
    result = swift_bridgeObjectRelease();
    v30 = 0;
LABEL_46:
    *(_QWORD *)a3 = v9;
    *(_QWORD *)(a3 + 8) = v10;
    *(_BYTE *)(a3 + 16) = v30;
    *(_QWORD *)(a3 + 24) = v28;
    *(_QWORD *)(a3 + 32) = v47;
    *(_BYTE *)(a3 + 40) = v46;
    *(_QWORD *)(a3 + 48) = v12;
    *(_QWORD *)(a3 + 56) = v48;
    *(_QWORD *)(a3 + 64) = v13;
    return result;
  }
  if (!v5)
    goto LABEL_48;
  v6 = 0;
  v35 = a2 + 32;
  v7 = v49[2];
  v43 = *a1;
  v44 = a1[1];
  while (1)
  {
    if (!v7)
      goto LABEL_4;
    v8 = v35 + 72 * v6;
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v33 = *(_BYTE *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v46 = *(_BYTE *)(v8 + 40);
    v12 = *(_QWORD **)(v8 + 48);
    v47 = *(_QWORD *)(v8 + 32);
    v48 = *(_QWORD *)(v8 + 56);
    v13 = *(_QWORD *)(v8 + 64);
    if (v49[4] == *(_QWORD *)v8 && v49[5] == v10)
      break;
    result = sub_19CFE06A0();
    if ((result & 1) != 0)
      break;
    if (v7 != 1)
    {
      v16 = v49 + 7;
      v17 = 1;
      while (1)
      {
        v18 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (*(v16 - 1) == v9 && *v16 == v10)
          goto LABEL_41;
        result = sub_19CFE06A0();
        if ((result & 1) != 0)
          goto LABEL_41;
        v16 += 2;
        ++v17;
        if (v18 == v7)
          goto LABEL_4;
      }
      __break(1u);
      goto LABEL_50;
    }
LABEL_4:
    ++v6;
    v4 = v43;
    v3 = v44;
    if (v6 == v50)
      goto LABEL_48;
  }
LABEL_41:
  swift_bridgeObjectRetain();
  v28 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v44;
  if ((v33 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v29 = sub_19CFE06A0();
  result = swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
    v30 = 1;
    goto LABEL_46;
  }
  sub_19CD04ED4(v9, v10);
  v4 = v43;
LABEL_48:
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v39;
  *(_QWORD *)(a3 + 24) = v42;
  *(_QWORD *)(a3 + 32) = v38;
  *(_BYTE *)(a3 + 40) = v37;
  *(_OWORD *)(a3 + 48) = v40;
  *(_QWORD *)(a3 + 64) = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF723AC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442FC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CD1C720();
  sub_19CFE0A24();
  v10[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A908);
  sub_19CD09560(&qword_1EE442FC8, &qword_1EE43A908, (uint64_t (*)(void))sub_19CF727D8, MEMORY[0x1E0DEAF10]);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CF724D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73656D65686373 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19CF72564()
{
  sub_19CD1C720();
  return sub_19CFE0A48();
}

uint64_t sub_19CF7258C()
{
  sub_19CD1C720();
  return sub_19CFE0A54();
}

uint64_t sub_19CF725B4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CF723AC(a1, *v1);
}

BOOL sub_19CF725CC(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  double v4;
  char v5;
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  double v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _BOOL8 result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD **)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD **)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD **)(a2 + 24);
  v9 = *(double *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  v11 = *(_QWORD **)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v13 = sub_19CFE06A0(), result = 0, (v13 & 1) != 0))
  {
    if (v2)
      v15 = 0x6469746E65696C63;
    else
      v15 = 0x646972657375;
    if (v2)
      v16 = 0xE800000000000000;
    else
      v16 = 0xE600000000000000;
    if (v7)
      v17 = 0x6469746E65696C63;
    else
      v17 = 0x646972657375;
    if (v7)
      v18 = 0xE800000000000000;
    else
      v18 = 0xE600000000000000;
    if (v15 == v17 && v16 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v19 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v19 & 1) == 0)
        return result;
    }
    if ((sub_19CDCC618(v3, v8) & 1) == 0)
      return 0;
    if ((v5 & 1) != 0)
    {
      if (!v10)
        return 0;
    }
    else
    {
      if (v4 == v9)
        v20 = v10;
      else
        v20 = 1;
      if ((v20 & 1) != 0)
        return 0;
    }
    if (v6)
    {
      if (!v11 || (sub_19CDCC618(v6, v11) & 1) == 0)
        return 0;
    }
    else if (v11)
    {
      return 0;
    }
    if (v23)
      return v12 && (v22 == v21 && v23 == v12 || (sub_19CFE06A0() & 1) != 0);
    return !v12;
  }
  return result;
}

unint64_t sub_19CF72794()
{
  unint64_t result;

  result = qword_1EE43A8D8;
  if (!qword_1EE43A8D8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0663A0, &type metadata for MetricsIdentifierScheme);
    atomic_store(result, (unint64_t *)&qword_1EE43A8D8);
  }
  return result;
}

unint64_t sub_19CF727D8()
{
  unint64_t result;

  result = qword_1EE442FD0;
  if (!qword_1EE442FD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066378, &type metadata for MetricsIdentifierScheme);
    atomic_store(result, (unint64_t *)&qword_1EE442FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierSchemes.CodingKeys()
{
  return &type metadata for MetricsIdentifierSchemes.CodingKeys;
}

uint64_t initializeWithCopy for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsIdentifierScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetricsIdentifierScheme()
{
  return &type metadata for MetricsIdentifierScheme;
}

unint64_t sub_19CF729E4()
{
  unint64_t result;

  result = qword_1EE442FD8;
  if (!qword_1EE442FD8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066350, &type metadata for MetricsIdentifierSchemes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE442FD8);
  }
  return result;
}

unint64_t sub_19CF72A2C()
{
  unint64_t result;

  result = qword_1EE43A8F0;
  if (!qword_1EE43A8F0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0662C0, &type metadata for MetricsIdentifierSchemes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43A8F0);
  }
  return result;
}

unint64_t sub_19CF72A74()
{
  unint64_t result;

  result = qword_1EE43A8E8;
  if (!qword_1EE43A8E8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0662E8, &type metadata for MetricsIdentifierSchemes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43A8E8);
  }
  return result;
}

unint64_t sub_19CF72ABC()
{
  unint64_t result;

  result = qword_1EE437330;
  if (!qword_1EE437330)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066298, &type metadata for MetricsIdentifierScheme);
    atomic_store(result, (unint64_t *)&qword_1EE437330);
  }
  return result;
}

unint64_t sub_19CF72B00()
{
  unint64_t result;

  result = qword_1EE442FE8;
  if (!qword_1EE442FE8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsIdentifierType, &type metadata for MetricsIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EE442FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIdentifierScheme.CodingKeys()
{
  return &type metadata for MetricsIdentifierScheme.CodingKeys;
}

unint64_t sub_19CF72B58()
{
  unint64_t result;

  result = qword_1EE442FF8;
  if (!qword_1EE442FF8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066520, &type metadata for MetricsIdentifierScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE442FF8);
  }
  return result;
}

unint64_t sub_19CF72BA0()
{
  unint64_t result;

  result = qword_1EE43A8C8;
  if (!qword_1EE43A8C8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066458, &type metadata for MetricsIdentifierScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43A8C8);
  }
  return result;
}

unint64_t sub_19CF72BE8()
{
  unint64_t result;

  result = qword_1EE43A8C0;
  if (!qword_1EE43A8C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D066480, &type metadata for MetricsIdentifierScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43A8C0);
  }
  return result;
}

uint64_t sub_19CF72C2C()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t AsyncObjectGraphError.errors.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t AsyncObjectGraphError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (!v2)
    return 0xD000000000000036;
  if (v2 == 1)
  {
    v3 = *(void **)(v1 + 32);
    swift_getErrorValue();
    v4 = v3;
    v5 = sub_19CFE0868();

  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CD3C8F8(0, v2, 0);
    v6 = 0;
    do
    {
      v7 = *(void **)(v1 + 8 * v6 + 32);
      swift_getErrorValue();
      v8 = v7;
      v9 = sub_19CFE0868();
      v11 = v10;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19CD3C8F8(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_19CD3C8F8(v12 > 1, v13 + 1, 1);
      ++v6;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
    }
    while (v2 != v6);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
    sub_19CD1632C();
    v5 = sub_19CFDF4F4();
    swift_release();
  }
  return v5;
}

uint64_t AsyncObjectGraphError.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t inited;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2 != 1)
  {
    if (!v2)
      return sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = sub_19CFDF578();
    *(_QWORD *)(inited + 40) = v7;
    *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F250);
    *(_QWORD *)(inited + 48) = v1;
    swift_bridgeObjectRetain();
    return sub_19CD30650(inited);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  result = sub_19CFDF578();
  *(_QWORD *)(inited + 32) = result;
  *(_QWORD *)(inited + 40) = v5;
  if (*(_QWORD *)(v1 + 16))
  {
    swift_getErrorValue();
    *(_QWORD *)(inited + 72) = v8;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm);
    return sub_19CD30650(inited);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF72FB0()
{
  sub_19CF73014();
  return sub_19CFE085C();
}

uint64_t sub_19CF72FD8()
{
  sub_19CF73014();
  return sub_19CFE0850();
}

ValueMetadata *type metadata accessor for AsyncObjectGraphError()
{
  return &type metadata for AsyncObjectGraphError;
}

unint64_t sub_19CF73014()
{
  unint64_t result;

  result = qword_1EE443000;
  if (!qword_1EE443000)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AsyncObjectGraphError, &type metadata for AsyncObjectGraphError);
    atomic_store(result, (unint64_t *)&qword_1EE443000);
  }
  return result;
}

unint64_t JetPackageWriterError.errorDescription.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000020;
  if (*v0 != 1)
    v1 = 0xD000000000000023;
  if (*v0)
    return v1;
  else
    return 0xD000000000000021;
}

BOOL static JetPackageWriter.Step.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageWriter.Step.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetPackageWriter.init(encryption:compression:serialization:versionIdentifier:keyIdentifier:keyURL:)@<X0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  char v8;
  uint64_t v9;

  v8 = *a2;
  *(_BYTE *)a7 = *a1;
  *(_BYTE *)(a7 + 1) = v8;
  *(_QWORD *)(a7 + 8) = a3;
  *(_QWORD *)(a7 + 16) = a4;
  *(_WORD *)(a7 + 24) = a5;
  *(_BYTE *)(a7 + 26) = BYTE2(a5) & 1;
  v9 = a7 + *(int *)(type metadata accessor for JetPackageWriter() + 36);
  return sub_19CEDEE18(a6, v9);
}

uint64_t type metadata accessor for JetPackageWriter()
{
  uint64_t result;

  result = qword_1EE443020;
  if (!qword_1EE443020)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *JetPackageWriter.writePackage(to:source:artifactStoreURL:progressCallback:)(uint64_t a1, uint64_t a2, char *a3, void (*a4)(id *, double), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *result;
  _QWORD v20[5];

  v11 = sub_19CFDEDE0();
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v16 + 16))(v15, a1, v13);
  v17 = type metadata accessor for FileOutputStream();
  swift_allocObject();
  result = sub_19CE8FD6C((uint64_t)v15);
  if (!v5)
  {
    v20[3] = v17;
    v20[4] = &off_1E3DCD4D8;
    v20[0] = result;
    swift_retain();
    sub_19CF732B4((uint64_t)v20, a2, a3, a4, a5);
    swift_release();
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  return result;
}

uint64_t sub_19CF732B4(uint64_t a1, uint64_t a2, char *a3, void (*a4)(id *, double), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(id *, double);
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  _QWORD *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v69;
  uint64_t v70;
  unsigned __int8 *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  void *v77;
  void *v78;
  __int16 v79;
  uint64_t inited;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  _QWORD *v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _UNKNOWN **v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  char *v129;
  uint64_t v130;
  void (*v131)(uint64_t, char *, uint64_t);
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned __int8 *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  void (*v142)(char *, char *, uint64_t);
  void (*v143)(id *, double);
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  _UNKNOWN **v151;
  id v152[3];
  uint64_t v153;
  _UNKNOWN **v154;
  _QWORD v155[2];
  __int128 v156;
  uint64_t v157;
  ValueMetadata *v158;
  _UNKNOWN **v159;
  uint64_t v160;

  v144 = a5;
  v143 = a4;
  v146 = a3;
  v140 = a2;
  v136 = a1;
  v160 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v5, v6);
  v135 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FileArtifact();
  MEMORY[0x1E0C80A78](v8, v9);
  v132 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v137 = (uint64_t)&v127 - v13;
  MEMORY[0x1E0C80A78](v14, v15);
  v139 = (uint64_t)&v127 - v16;
  MEMORY[0x1E0C80A78](v17, v18);
  v147 = (uint64_t)&v127 - v19;
  v20 = sub_19CFDEFA8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_19CFDEDE0();
  v25 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148, v26);
  v133 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v29);
  v134 = (char *)&v127 - v30;
  MEMORY[0x1E0C80A78](v31, v32);
  v141 = (char *)&v127 - v33;
  MEMORY[0x1E0C80A78](v34, v35);
  v145 = (char *)&v127 - v36;
  MEMORY[0x1E0C80A78](v37, v38);
  v40 = (char *)&v127 - v39;
  MEMORY[0x1E0C80A78](v41, v42);
  v44 = (char *)&v127 - v43;
  sub_19CFDEF9C();
  sub_19CFDEF90();
  v45 = *(void (**)(char *, uint64_t))(v21 + 8);
  v46 = v20;
  v45(v24, v20);
  sub_19CFDED38();
  swift_bridgeObjectRelease();
  v47 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v48 = (void *)sub_19CFDED2C();
  v152[0] = 0;
  LODWORD(v20) = objc_msgSend(v47, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v48, 0, 0, v152);

  v49 = v152[0];
  if (!(_DWORD)v20)
  {
    v69 = v152[0];
    sub_19CFDEC9C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v44, v148);
  }
  v50 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v146 = v44;
  v51 = v44;
  v52 = v148;
  v50(v40, v51, v148);
  v53 = v49;
  sub_19CFDEF9C();
  sub_19CFDEF90();
  v130 = v46;
  v128 = v45;
  v45(v24, v46);
  v54 = v145;
  sub_19CFDED38();
  swift_bridgeObjectRelease();
  v55 = *(void (**)(char *, uint64_t))(v25 + 8);
  v129 = v40;
  v55(v40, v52);
  v56 = v147;
  v131 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v131(v147, v54, v52);
  v57 = v52;
  v58 = v56;
  v59 = v143;
  if (v143)
  {
    LOBYTE(v152[0]) = 0;
    v143(v152, 0.0);
    v58 = v56;
  }
  v60 = (uint64_t)v141;
  v50(v141, (char *)v58, v57);
  v61 = v50;
  v62 = type metadata accessor for FileOutputStream();
  swift_allocObject();
  v63 = (void (*)(_QWORD, _QWORD, _QWORD))v142;
  v64 = sub_19CE8FD6C(v60);
  if (v63)
  {
    sub_19CECAD94(v147);
    v65 = v146;
    sub_19CF74B0C();
    v66 = v65;
    v67 = v148;
    return ((uint64_t (*)(char *, uint64_t))v55)(v66, v67);
  }
  v142 = v61;
  v153 = v62;
  v154 = &off_1E3DCD4D8;
  v152[0] = v64;
  sub_19CEE0558(v140, (uint64_t)v152, 0x19000uLL);
  v140 = v25;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v152);
  if (v59)
  {
    LOBYTE(v152[0]) = 0;
    v59(v152, 1.0);
  }
  v70 = v139;
  sub_19CF74CE0(v147, v139);
  v71 = v138;
  if ((v138[1] & 1) == 0)
  {
    v81 = v129;
    v82 = v148;
    v142(v129, v146, v148);
    sub_19CFDEF9C();
    v127 = 0;
    sub_19CFDEF90();
    v128(v24, v130);
    v83 = v145;
    sub_19CFDED38();
    swift_bridgeObjectRelease();
    v141 = (char *)v55;
    v55(v81, v82);
    v84 = v137;
    v85 = v83;
    v86 = v139;
    v131(v137, v85, v82);
    sub_19CFDED8C();
    v87 = type metadata accessor for FileInputStream();
    swift_allocObject();
    v88 = v127;
    v89 = sub_19CE90378();
    if (v88)
    {
      sub_19CECAD94(v84);
      sub_19CECAD94(v147);
      sub_19CECAD94(v86);
      v90 = v146;
      sub_19CF74B0C();
      v104 = v90;
      v105 = v82;
      return ((uint64_t (*)(char *, uint64_t))v141)(v104, v105);
    }
    v55 = (void (*)(char *, uint64_t))v141;
    v158 = (ValueMetadata *)v87;
    v159 = &off_1E3DCC580;
    *(_QWORD *)&v156 = v89;
    v95 = (uint64_t)v134;
    v142(v134, (char *)v84, v82);
    swift_allocObject();
    v96 = sub_19CE8FD6C(v95);
    v151 = &off_1E3DCD4D8;
    v150 = v62;
    *(_QWORD *)&v149 = v96;
    sub_19CCD14C4(&v156, (uint64_t)v152);
    sub_19CCD14C4(&v149, (uint64_t)v155);
    v106 = swift_allocObject();
    v59 = v143;
    v107 = v144;
    *(_QWORD *)(v106 + 16) = v143;
    *(_QWORD *)(v106 + 24) = v107;
    sub_19CCEA360((uint64_t)v59);
    sub_19CE207B4((void (*)(uint64_t, double))sub_19CF74F58);
    sub_19CECADD0((uint64_t)v152);
    swift_release();
    v70 = v139;
    sub_19CF74EE8(v137, v139);
    v71 = v138;
  }
  v72 = v145;
  if ((*v71 & 1) == 0)
  {
    v91 = (uint64_t)&v71[*(int *)(type metadata accessor for JetPackageWriter() + 36)];
    v92 = v135;
    sub_19CD3BB88(v91, v135);
    v93 = v148;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v92, 1, v148) == 1)
    {
      sub_19CD3BBD0(v92);
      sub_19CF7422C();
      swift_allocError();
      *v94 = 2;
      swift_willThrow();
      sub_19CECAD94(v147);
      sub_19CECAD94(v70);
      v100 = v146;
      sub_19CF74B0C();
      v66 = v100;
      v67 = v93;
      return ((uint64_t (*)(_QWORD, _QWORD))v55)(v66, v67);
    }
    v97 = (void (*)(char *, char *, uint64_t))v131;
    v131((uint64_t)v133, (char *)v92, v93);
    v98 = sub_19CFDEDF8();
    v127 = 0;
    v158 = &type metadata for CommonCryptoPackageEncryption;
    v159 = &off_1E3DD6980;
    *(_QWORD *)&v156 = v98;
    *((_QWORD *)&v156 + 1) = v99;
    v157 = 0x20000;
    sub_19CCD14C4(&v156, (uint64_t)v152);
    v108 = v129;
    v142(v129, v146, v93);
    sub_19CFDEF9C();
    sub_19CFDEF90();
    v141 = (char *)v55;
    v128(v24, v130);
    sub_19CFDED38();
    v109 = (void (*)(char *, uint64_t))v141;
    swift_bridgeObjectRelease();
    v109(v108, v93);
    v110 = v72;
    v111 = (uint64_t)v132;
    v97(v132, v110, v93);
    if (v59)
    {
      LOBYTE(v156) = 2;
      v59((id *)&v156, 0.0);
      v112 = v139;
      v113 = v127;
      sub_19CF74D24(v152, v139, v111);
      v73 = v113;
      if (!v113)
      {
        LOBYTE(v156) = 2;
        v59((id *)&v156, 1.0);
        v112 = v139;
LABEL_37:
        v74 = v147;
        v109(v133, v148);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v152);
        sub_19CF74EE8(v111, v112);
        v71 = v138;
        v75 = *v138;
        goto LABEL_14;
      }
    }
    else
    {
      v112 = v139;
      v124 = v127;
      sub_19CF74D24(v152, v139, v111);
      v73 = v124;
      if (!v124)
        goto LABEL_37;
    }
    v125 = v148;
    v109(v133, v148);
    sub_19CECAD94(v111);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v152);
    sub_19CECAD94(v147);
    sub_19CECAD94(v112);
    v126 = v146;
    sub_19CF74B0C();
    return ((uint64_t (*)(char *, uint64_t))v109)(v126, v125);
  }
  v73 = 0;
  v141 = (char *)v55;
  v74 = v147;
  v75 = 1;
LABEL_14:
  v76 = v71[1];
  v78 = (void *)*((_QWORD *)v71 + 1);
  v77 = (void *)*((_QWORD *)v71 + 2);
  if (v71[26])
    v79 = 0;
  else
    v79 = *((_WORD *)v71 + 12);
  sub_19CCD5B84(v136, (uint64_t)&v156);
  type metadata accessor for JetPackageFormatWriter();
  inited = swift_initStackObject();
  *(_BYTE *)(inited + 56) = 0;
  sub_19CCD14C4(&v156, inited + 16);
  LOBYTE(v152[0]) = 0;
  *(_WORD *)((char *)v152 + 1) = v76;
  *(_WORD *)((char *)v152 + 3) = v75;
  v152[1] = v78;
  v152[2] = v77;
  LOWORD(v153) = v79;
  v154 = 0;
  v155[0] = 0;
  v155[1] = 0xF000000000000000;
  swift_bridgeObjectRetain();
  sub_19CE7A0C4((uint64_t)v152);
  if (v73)
  {
    swift_release();
    sub_19CECAD94(v74);
    swift_bridgeObjectRelease();
    sub_19CE7B434(0, 0, 0xF000000000000000);
LABEL_19:
    sub_19CECAD94(v139);
    v103 = v146;
    sub_19CF74B0C();
    v104 = v103;
    v105 = v148;
    return ((uint64_t (*)(_QWORD, _QWORD))v141)(v104, v105);
  }
  sub_19CFDED8C();
  v101 = type metadata accessor for FileInputStream();
  swift_allocObject();
  v102 = (void *)sub_19CE90378();
  v153 = v101;
  v154 = &off_1E3DCC580;
  v152[0] = v102;
  __swift_project_boxed_opaque_existential_1(v152, v101);
  if (sub_19CE905EC())
  {
    while (1)
    {
      v114 = v153;
      v115 = v154;
      __swift_project_boxed_opaque_existential_1(v152, v153);
      v116 = ((uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))v115[3])(0x20000, v114, v115);
      v118 = v117;
      if ((*(_BYTE *)(inited + 56) & 1) == 0)
        break;
      v119 = *(_QWORD *)(inited + 40);
      v120 = *(_QWORD *)(inited + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(inited + 16), v119);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v120 + 8))(v116, v118, v119, v120);
      sub_19CD3BE18(v116, v118);
      v121 = v153;
      v122 = v154;
      __swift_project_boxed_opaque_existential_1(v152, v153);
      if ((((uint64_t (*)(uint64_t, _UNKNOWN **))v122[1])(v121, v122) & 1) == 0)
        goto LABEL_34;
    }
    sub_19CE7A5A8();
    swift_allocError();
    swift_willThrow();
    sub_19CD3BE18(v116, v118);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v152);
    swift_bridgeObjectRelease();
    swift_release();
    sub_19CE7B434(0, 0, 0xF000000000000000);
    sub_19CECAD94(v74);
    goto LABEL_19;
  }
LABEL_34:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  sub_19CE7B434(0, 0, 0xF000000000000000);
  sub_19CECAD94(v74);
  sub_19CECAD94(v139);
  v123 = v146;
  sub_19CF74B0C();
  return ((uint64_t (*)(char *, uint64_t))v141)(v123, v148);
}

unint64_t sub_19CF741E4()
{
  unint64_t result;

  result = qword_1EE443008;
  if (!qword_1EE443008)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageWriterError, &type metadata for JetPackageWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE443008);
  }
  return result;
}

unint64_t sub_19CF7422C()
{
  unint64_t result;

  result = qword_1EE443010;
  if (!qword_1EE443010)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageWriterError, &type metadata for JetPackageWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE443010);
  }
  return result;
}

unint64_t sub_19CF74274()
{
  unint64_t result;

  result = qword_1EE443018;
  if (!qword_1EE443018)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageWriter.Step, &type metadata for JetPackageWriter.Step);
    atomic_store(result, (unint64_t *)&qword_1EE443018);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageWriterError()
{
  return &type metadata for JetPackageWriterError;
}

_QWORD *initializeBufferWithCopyOfBuffer for JetPackageWriter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    v6 = *(int *)(a3 + 36);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
    v9 = sub_19CFDEDE0();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for JetPackageWriter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for JetPackageWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackageWriter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF74894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackageWriter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF7492C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_19CF749A4()
{
  unint64_t v0;

  sub_19CCC8A30();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s9JetEngine21JetPackageWriterErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF74A8C + 4 * byte_19D066695[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF74AC0 + 4 * asc_19D066690[v4]))();
}

uint64_t sub_19CF74AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF74AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF74AD0);
  return result;
}

uint64_t sub_19CF74ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF74AE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF74AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF74AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageWriter.Step()
{
  return &type metadata for JetPackageWriter.Step;
}

void sub_19CF74B0C()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_19CFDED2C();
  v6 = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, &v6);

  if (v2)
  {
    v3 = v6;
  }
  else
  {
    v4 = v6;
    v5 = (void *)sub_19CFDEC9C();

    swift_willThrow();
    v6 = 0;
    v7 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFDEDE0();
    sub_19CECAD4C();
    sub_19CFE0598();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_getErrorValue();
    sub_19CFE0868();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CF13494((uint64_t)v6, v7);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_19CF74CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF74D24(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v20[5];
  _QWORD v21[5];
  uint64_t v22;

  v22 = a3;
  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FileArtifact();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF74CE0(a2, (uint64_t)v14);
  sub_19CFDED8C();
  v15 = type metadata accessor for FileInputStream();
  swift_allocObject();
  v16 = sub_19CE90378();
  if (v3)
    return sub_19CECAD94((uint64_t)v14);
  v21[3] = v15;
  v21[4] = &off_1E3DCC580;
  v21[0] = v16;
  sub_19CECAD94((uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v22, v6);
  v18 = type metadata accessor for FileOutputStream();
  swift_allocObject();
  v19 = sub_19CE8FD6C((uint64_t)v10);
  v20[3] = v18;
  v20[4] = &off_1E3DCD4D8;
  v20[0] = v19;
  sub_19CF86460((uint64_t)v21, (uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
}

uint64_t sub_19CF74EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF74F2C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF74F58()
{
  uint64_t v0;
  uint64_t (*v1)(char *);
  uint64_t result;
  char v3;

  v1 = *(uint64_t (**)(char *))(v0 + 16);
  if (v1)
  {
    v3 = 1;
    return v1(&v3);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigBaseFieldsProvider()
{
  return &type metadata for ConfigBaseFieldsProvider;
}

uint64_t sub_19CF74FAC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v3[31] = a1;
  v3[32] = v4;
  v5 = v2[1];
  v3[33] = *v2;
  v3[34] = v5;
  return swift_task_switch();
}

uint64_t sub_19CF74FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + 40;
  v3 = a2 + 40;
  sub_19CD23A14(a1, a2);
  return sub_19CD436B0(v2, v3);
}

uint64_t sub_19CF75000(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  _OWORD v30[2];
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v39 = a1;
  v40 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v41 = v8;
  v42 = 0;
  v43 = v11 & v9;
  v44 = a2;
  v45 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE247E0((uint64_t)&v35);
  if (!*((_QWORD *)&v36 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  while (1)
  {
    v32 = v35;
    v33 = v36;
    v34 = v37;
    sub_19CD433C0(&v38, v31);
    v13 = *a5;
    v15 = sub_19CD20240((uint64_t)&v32);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      break;
    v19 = v14;
    if (*(_QWORD *)(v13 + 24) >= v18)
    {
      if ((a4 & 1) != 0)
      {
        if ((v14 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_19CE18490();
        if ((v19 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_19CD20454(v18, a4 & 1);
      v20 = sub_19CD20240((uint64_t)&v32);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_22;
      v15 = v20;
      if ((v19 & 1) != 0)
      {
LABEL_6:
        sub_19CD436B0((uint64_t)v31, (uint64_t)v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        sub_19CD20334((uint64_t)&v32);
        v12 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v15);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
        sub_19CD433C0(v30, v12);
        goto LABEL_7;
      }
    }
    v22 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v23 = v22[6] + 40 * v15;
    v24 = v32;
    v25 = v33;
    *(_QWORD *)(v23 + 32) = v34;
    *(_OWORD *)v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    sub_19CD433C0(v31, (_OWORD *)(v22[7] + 32 * v15));
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_21;
    v22[2] = v28;
LABEL_7:
    sub_19CE247E0((uint64_t)&v35);
    a4 = 1;
    if (!*((_QWORD *)&v36 + 1))
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

Swift::Void __swiftcall IntervalSignpost.emitBeginTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  JESignpostEmitTrace();
}

Swift::Void __swiftcall IntervalSignpost.emitEndTrace(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5[0] = 0;
  v2 = 0;
  v3 = 0;
  v1 = (void *)sub_19CFDF554();
  JESignpostArgumentsFromString(v1, v5, &v4, &v3, &v2);

  JESignpostEmitTrace();
}

uint64_t IntervalSignpost.init(component:beginEvent:endEvent:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t ImpulseSignpost.init(component:event:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ImpulseSignpost.component.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t ImpulseSignpost.event.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

Swift::Void __swiftcall ImpulseSignpost.emitTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  JESignpostEmitTrace();
}

Swift::Void __swiftcall ImpulseSignpost.emitTrace(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5[0] = 0;
  v2 = 0;
  v3 = 0;
  v1 = (void *)sub_19CFDF554();
  JESignpostArgumentsFromString(v1, v5, &v4, &v3, &v2);

  JESignpostEmitTrace();
}

uint64_t IntervalSignpost.component.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t IntervalSignpost.beginEvent.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t IntervalSignpost.endEvent.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

Swift::Void __swiftcall IntervalSignpost.emitEndTrace(_:_:_:_:)(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  JESignpostEmitTrace();
}

ValueMetadata *type metadata accessor for ImpulseSignpost()
{
  return &type metadata for ImpulseSignpost;
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntervalSignpost(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IntervalSignpost(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IntervalSignpost()
{
  return &type metadata for IntervalSignpost;
}

uint64_t sub_19CF7548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11;
  char v12;
  char v13;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];

  sub_19CD436B0(a3, (uint64_t)v17);
  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_19CD3FD1C(a1, a2);
    if ((v12 & 1) != 0)
    {
      sub_19CD436B0(*(_QWORD *)(a4 + 56) + 32 * v11, (uint64_t)&v15);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  v13 = sub_19CF75568(v17, &v15, a5, a6);
  sub_19CCECFE4((uint64_t)&v15, &qword_1ECEB3370);
  sub_19CCECFE4((uint64_t)v17, &qword_1ECEB3370);
  return v13 & 1;
}

uint64_t sub_19CF75568(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  uint64_t DynamicType;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[32];
  _BYTE v37[32];
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;

  sub_19CD40794(a1, (uint64_t)&v50);
  if (!v51)
    goto LABEL_7;
  sub_19CD433C0(&v50, &v54);
  sub_19CD40794(a2, (uint64_t)&v50);
  if (!v51)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
LABEL_7:
    sub_19CCECFE4((uint64_t)&v50, &qword_1ECEB3370);
    v7 = 0;
    return v7 & 1;
  }
  sub_19CD433C0(&v50, v53);
  sub_19CD436B0((uint64_t)&v54, (uint64_t)&v50);
  sub_19CD436B0((uint64_t)v53, (uint64_t)v52);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB1F20);
      v7 = sub_19CFDFEF0();

LABEL_50:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
      goto LABEL_51;
    }

  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
    v7 = v39 ^ v44 ^ 1;
LABEL_51:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v50);
    return v7 & 1;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
    v7 = *(double *)&v39 == *(double *)&v44;
    goto LABEL_51;
  }
  v8 = MEMORY[0x1E0DEA968];
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (v39 == v44)
        v7 = 1;
      else
        v7 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
  if (!swift_dynamicCast())
  {
LABEL_36:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        if (a4 < a3)
        {
          swift_bridgeObjectRetain();
          v13 = swift_bridgeObjectRetain();
          v14 = sub_19CE07520(v13, v39);
          swift_bridgeObjectRelease();
          v15 = swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
          {
            MEMORY[0x1E0C80A78](v15, v16);
            v7 = sub_19CE07D3C(v39, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE07F54);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v7 = 0;
          }
          goto LABEL_50;
        }
LABEL_53:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v50);
        v7 = 0;
        return v7 & 1;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1ECEB31D8 != -1)
      goto LABEL_63;
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if (a4 >= a3)
    goto LABEL_53;
  v9 = *(_QWORD *)(v49 + 16);
  v10 = *(_QWORD *)(v43 + 16);
  v32 = v43 + 32;
  v33 = v49 + 32;
  v35 = v49;
  swift_bridgeObjectRetain();
  v34 = v43;
  swift_bridgeObjectRetain();
  v8 = 0;
  v11 = 0;
  while (1)
  {
    if (v11 == v9)
    {
      v44 = 0u;
      v45 = 0u;
      v11 = v9;
      if (v8 == v10)
        goto LABEL_26;
      goto LABEL_29;
    }
    if (v11 >= *(_QWORD *)(v35 + 16))
      break;
    sub_19CD436B0(v33 + 32 * v11++, (uint64_t)&v44);
    if (v8 == v10)
    {
LABEL_26:
      v47 = 0u;
      v48 = 0u;
      v8 = v10;
      goto LABEL_31;
    }
LABEL_29:
    if (v8 >= *(_QWORD *)(v34 + 16))
      goto LABEL_62;
    sub_19CD436B0(v32 + 32 * v8++, (uint64_t)&v47);
LABEL_31:
    sub_19CD407DC((uint64_t)&v44, (uint64_t)&v39);
    sub_19CD407DC((uint64_t)&v47, (uint64_t)&v41);
    if (!*((_QWORD *)&v40 + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42)
      {
        sub_19CCECFE4((uint64_t)&v41, &qword_1ECEB3370);
        goto LABEL_58;
      }
      v7 = 1;
LABEL_59:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    if (!v42)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
LABEL_58:
      v7 = 0;
      goto LABEL_59;
    }
    sub_19CD433C0(&v39, v46);
    sub_19CD433C0(&v41, v38);
    sub_19CD436B0((uint64_t)v46, (uint64_t)v37);
    sub_19CD436B0((uint64_t)v38, (uint64_t)v36);
    v12 = sub_19CF75568(v37, v36, a3, a4 + 1);
    sub_19CCECFE4((uint64_t)v36, &qword_1ECEB3370);
    sub_19CCECFE4((uint64_t)v37, &qword_1ECEB3370);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  swift_once();
LABEL_43:
  v17 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19D052350;
  v19 = v17;
  *(_QWORD *)&v38[0] = sub_19CD40918(0, 64, 0, MEMORY[0x1E0DEE9D8]);
  v20._object = (void *)0x800000019D0782D0;
  v20._countAndFlagsBits = 0xD000000000000034;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  __swift_project_boxed_opaque_existential_1(&v54, v55);
  DynamicType = swift_getDynamicType();
  *((_QWORD *)&v48 + 1) = swift_getMetatypeMetadata();
  *(_QWORD *)&v47 = DynamicType;
  sub_19CD40794((uint64_t)&v47, (uint64_t)v46);
  v44 = 0u;
  v45 = 0u;
  sub_19CD40658((uint64_t)v46, (uint64_t)&v44);
  LOBYTE(v41) = 0;
  v39 = v44;
  v40 = v45;
  v22 = *(_QWORD **)&v38[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
    v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
  v22[2] = v24 + 1;
  v25 = &v22[5 * v24];
  v26 = v39;
  v27 = v40;
  *((_BYTE *)v25 + 64) = v41;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  *(_QWORD *)&v38[0] = v22;
  sub_19CCECFE4((uint64_t)&v47, &qword_1ECEB3370);
  v28._countAndFlagsBits = 0x756F662073617720;
  v28._object = (void *)0xEB000000002E646ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)&v38[0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v45 + 1) = v8;
  *(_QWORD *)&v44 = 0xD000000000000059;
  *((_QWORD *)&v44 + 1) = 0x800000019D078310;
  v39 = 0u;
  v40 = 0u;
  sub_19CD40658((uint64_t)&v44, (uint64_t)&v39);
  *(_BYTE *)(v29 + 64) = 0;
  v30 = v40;
  *(_OWORD *)(v29 + 32) = v39;
  *(_OWORD *)(v29 + 48) = v30;
  *(_QWORD *)(v18 + 40) = v29;
  *(_QWORD *)&v39 = v19;
  LOBYTE(v44) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v44);

  swift_bridgeObjectRelease();
  v7 = _isStructurallyEqual(_:to:with:at:)(&v54, v53, a3, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
  sub_19CCECFE4((uint64_t)&v50, &qword_1EE4372C8);
  return v7 & 1;
}

_QWORD *StateRef.init(pointingTo:in:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

__n128 StateRef.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t StateRef<>.current.getter(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v9;

  v9 = *v2;
  v5 = a1[3];
  v4 = a1[4];
  v6 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = a1[2];
  swift_bridgeObjectRetain();
  v6(&v9, v5, a2, v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StateRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateRef);
}

ValueMetadata *type metadata accessor for InvalidFileEncodingError()
{
  return &type metadata for InvalidFileEncodingError;
}

id Net.jsExport.getter()
{
  uint64_t v0;
  objc_class *v1;
  id v2;
  id v3;
  objc_super v5;
  _BYTE v6[40];

  sub_19CCD5B84(v0, (uint64_t)v6);
  v1 = (objc_class *)type metadata accessor for JSNetObject();
  v2 = objc_allocWithZone(v1);
  sub_19CCD5B84((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v5.receiver = v2;
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v3;
}

uint64_t Net.fetch(contentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF75FE8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_19CF768E8;
  return v6(v0[2], v0[3], v2, v3);
}

uint64_t Net.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;
  _BYTE v9[40];

  v2 = v1;
  sub_19CCD5B84(v2, (uint64_t)v9);
  v4 = (objc_class *)type metadata accessor for JSNetObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1E3DC9450;
  *a1 = v6;
  return result;
}

uint64_t sub_19CF76100@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;
  _BYTE v9[40];

  v2 = v1;
  sub_19CCD5B84(v2, (uint64_t)v9);
  v4 = (objc_class *)type metadata accessor for JSNetObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1E3DC9450;
  *a1 = v6;
  return result;
}

uint64_t sub_19CF76198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF761B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF761D0(void *a1, void *a2, void *a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;

  v6 = a1;
  sub_19CE21FD0(a1, (uint64_t)&v31);
  v7 = v40;
  v8 = v41;
  if (a2)
  {
    v22 = a2;
    v26 = v38;
    v27 = v39;
    v9 = v31;
    v10 = v33;
    v11 = v34;
    v12 = v35;
    v13 = v36;
    v24 = v41;
    v14 = v43;
    v15 = v37;
    v23 = v42;
    v16 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
    v31 = v9;
    v32 = v16;
    v33 = v10;
    v34 = v11;
    v35 = v12;
    v36 = v13;
    v37 = v15;
    v38 = v26;
    v39 = v27;
    v40 = v7;
    v41 = v24;
    v42 = v23;
    v43 = v14;
    JSError.jsRepresentation(in:)(a3, &v28);
    v17 = v29;
    v18 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 16))(a3, v17, v18);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    *(_QWORD *)(v25 + 56) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
    *(_QWORD *)(v25 + 32) = v19;
    v20 = (void *)sub_19CFDF854();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CF76648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NetRequest() - 8) + 80);
  v2 = (v1 + 56) & ~v1;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v3 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF76714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF7675C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF76790(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442BE0
                                                                                     + dword_1EE442BE0))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF76824()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF76858()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_19CF76884(void *a1)
{
  uint64_t v1;

  return sub_19CF761D0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_19CF7688C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96))
    swift_release();

  return swift_deallocObject();
}

uint64_t type metadata accessor for RenamePreferenceMigrationRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenamePreferenceMigrationRule);
}

_QWORD *sub_19CF768FC@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = result[1];
  v4 = *a2;
  v5 = a2[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  return result;
}

uint64_t sub_19CF76910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;

  v37 = a4;
  v38 = a3;
  v7 = *(_QWORD *)(a5 + 16);
  v8 = sub_19CFDFF5C();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v34 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v5;
  v20 = v5[1];
  v22 = v5[3];
  v32 = v5[2];
  v33 = v22;
  ObjectType = swift_getObjectType();
  v35 = v21;
  v42 = v21;
  v43 = v20;
  swift_bridgeObjectRetain();
  v36 = ObjectType;
  v39 = a2;
  Preferences.subscript.getter(&v42, ObjectType, v7, a2, (uint64_t)v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v41);
  v25 = v34;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v34, v15, v7);
  v26 = swift_getObjectType();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v25, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v7);
  v42 = v32;
  v43 = v33;
  swift_bridgeObjectRetain();
  sub_19CEC2C48((uint64_t)v11, &v42, v26, v7, v37);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  v44 = type metadata accessor for PreferenceKey(0, v7, v27, v28);
  v45 = &protocol witness table for PreferenceKey<A>;
  v42 = v35;
  v43 = v20;
  v29 = v39;
  v30 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 32);
  swift_bridgeObjectRetain();
  v30(&v42, v36, v29);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v7);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
}

uint64_t sub_19CF76B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19CF76910(a1, a2, a3, a4, a5);
}

BOOL sub_19CF76B74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = MEMORY[0x1A1ADBF98](v0 + 56);
  if (v1)
    swift_unknownObjectRelease();
  return v1 != 0;
}

uint64_t sub_19CF76BAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void (*v17)(uint64_t (*)(), char *, uint64_t, uint64_t);
  _QWORD v18[2];

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v2 + 7, a2);
  v9 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1A1ADBF98](v8);
  if (result)
  {
    v11 = result;
    v12 = v2[5];
    v13 = v2[6];
    v18[1] = __swift_project_boxed_opaque_existential_1(v2 + 2, v12);
    v14 = v2[8];
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    v15 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v16 = (char *)swift_allocObject();
    *((_QWORD *)v16 + 2) = *(_QWORD *)(v4 + 80);
    *((_QWORD *)v16 + 3) = v5;
    *((_QWORD *)v16 + 4) = v11;
    *((_QWORD *)v16 + 5) = v14;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v16[v15], v9, v5);
    v17 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v13 + 8);
    swift_unknownObjectRetain();
    swift_retain();
    v17(sub_19CF77054, v16, v12, v13);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_19CF76CE4(uint64_t a1, uint64_t a2)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v3 = MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(char *, uint64_t, double))(v4 + 16))((char *)v8 - v5, v6, v3);
  v8[1] = a1;
  swift_unknownObjectRetain();
  swift_setAtReferenceWritableKeyPath();
  return swift_unknownObjectRelease();
}

uint64_t sub_19CF76D8C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_19CF76DB8()
{
  sub_19CF76D8C();
  return swift_deallocClassInstance();
}

BOOL sub_19CF76DD8()
{
  return sub_19CF76B74();
}

uint64_t sub_19CF76DFC(uint64_t a1, uint64_t a2)
{
  return sub_19CF76BAC(a1, a2);
}

uint64_t EventEmitter.addObserver<A>(on:target:property:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void (*v11)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  __int128 v14[2];

  v10 = type metadata accessor for PropertyEventObserver(0, *(_QWORD *)(*a3 + *MEMORY[0x1E0DED210]), *(_QWORD *)(*a3 + *MEMORY[0x1E0DED210] + 8), a4);
  sub_19CCD5B84(a1, (uint64_t)v14);
  swift_allocObject();
  *(_QWORD *)&v14[0] = sub_19CF76F28(v14, a2, (uint64_t)a3);
  v11 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  v12 = MEMORY[0x1A1ADBD7C](&unk_19D066AC0, v10);
  v11(v14, v10, v12, a4, a5);
  return swift_release();
}

uint64_t type metadata accessor for PropertyEventObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PropertyEventObserver);
}

uint64_t sub_19CF76F28(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_unknownObjectWeakInit();
  sub_19CCD14C4(a1, v3 + 16);
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_19CF76F8C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19CF76FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19CF77054()
{
  uint64_t v0;

  return sub_19CF76CE4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t static PipelinePhase<>.fetchJSIndex(urlSession:urlEncoder:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t (**a3)(uint64_t a1)@<X8>)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v6 = a1;
  v7 = a2;
  v8 = sub_19CD51798(v7);
  type metadata accessor for JSRemoteIndexFetcher();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 4;
  *(_BYTE *)(v9 + 56) = 1;
  *(_QWORD *)(v9 + 64) = v8;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_19CF7717C;
  *(_QWORD *)(result + 24) = v9;
  *a3 = sub_19CF7750C;
  a3[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t type metadata accessor for JSRemoteIndexFetcher()
{
  return objc_opt_self();
}

_QWORD *sub_19CF7715C(uint64_t a1)
{
  return sub_19CF77180(a1);
}

_QWORD *sub_19CF77180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31[8];

  v2 = v1;
  v25 = a1;
  v3 = sub_19CFDEDE0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3, v6);
  v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v25 - v9;
  sub_19CFDED38();
  v11 = *(_OWORD *)(v1 + 48);
  v12 = *(_OWORD *)(v1 + 16);
  v28 = *(_OWORD *)(v1 + 32);
  v29 = v11;
  v27 = v12;
  v30 = *(_QWORD *)(v1 + 64);
  v13 = (void *)*((_QWORD *)&v12 + 1);
  sub_19CEB6448((uint64_t)v10, *((void **)&v12 + 1), *((uint64_t *)&v28 + 1), v11, SBYTE8(v11));
  v14 = swift_allocObject();
  v15 = v28;
  v16 = v29;
  *(_OWORD *)(v14 + 16) = v27;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = v16;
  *(_QWORD *)(v14 + 64) = v30;
  v17 = (void *)v27;
  sub_19CCC290C((uint64_t)&v28, (uint64_t)v31, &qword_1EE43CA58);
  v18 = v17;
  v19 = v13;
  sub_19CD0F81C((uint64_t)v31);
  swift_retain();
  sub_19CF7739C((uint64_t)sub_19CDE81AC, v14);
  swift_release();
  swift_release();
  v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v26, v25, v3);
  v21 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v20, v3);
  swift_retain();
  v23 = sub_19CF77514((uint64_t)sub_19CF77774, v22);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  return v23;
}

uint64_t sub_19CF7739C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1EF0);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CF77C50;
  v9[1] = v7;
  v9[2] = sub_19CE6A4AC;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE460((uint64_t)v9);
  sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1EE43CF60);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CF774E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF7750C(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEAD684(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *sub_19CF77514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[48];
  __int128 v13[2];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B90);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96), (uint64_t *)&unk_1EE43E400);
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19CCD14C4(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19CF777B4;
  v11[1] = v9;
  v11[2] = sub_19CF777C8;
  v11[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CCE8808();
  sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1ECEB1280);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CF776C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF77700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_19CFDEDE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

_QWORD *sub_19CF77774(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDEDE0() - 8) + 80);
  return sub_19CF777D0(*a1, v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_19CF777B4(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF7858C(*a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_19CF777C8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF79D5C(a1, v1);
}

_QWORD *sub_19CF777D0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  unint64_t *v23;
  char v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  _QWORD v35[2];
  id v36;
  _OWORD v37[2];
  __int128 v38;
  uint64_t v39;
  _QWORD v40[6];

  v35[0] = a2;
  v40[5] = *MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (_QWORD *)((char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSPackageIndex();
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a1, sel_data, v14);
  v18 = sub_19CFDEE70();
  v20 = v19;

  if (qword_1EE43D1E0 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465C90, *(uint64_t *)algn_1EE465C98);
  if ((v21 & 1) != 0)
  {
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
    v23 = (unint64_t *)&unk_1ECEB2F00;
LABEL_9:
    v39 = sub_19CCE5204(0, v23);
    *(_QWORD *)&v38 = v22;
    goto LABEL_10;
  }
  if (qword_1EE43D2D8 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465CD0, *(uint64_t *)algn_1EE465CD8);
  if ((v24 & 1) != 0)
  {
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    v23 = (unint64_t *)&qword_1ECEB1710;
    goto LABEL_9;
  }
  v29 = (void *)objc_opt_self();
  v30 = (void *)sub_19CFDEE58();
  v36 = 0;
  v31 = objc_msgSend(v29, sel_JSONObjectWithData_options_error_, v30, 4, &v36);

  v32 = v36;
  if (!v31)
  {
    v33 = v32;
    v34 = sub_19CFDEC9C();

    swift_willThrow();
    sub_19CD3BE18(v18, v20);
    *v6 = v34;
    goto LABEL_11;
  }
  sub_19CFE004C();
  swift_unknownObjectRelease();
LABEL_10:
  sub_19CD433C0(&v38, v37);
  v40[3] = &type metadata for FoundationValue;
  v40[4] = &off_1E3DCC5B0;
  v40[0] = swift_allocObject();
  sub_19CD436B0((uint64_t)v37, v40[0] + 16);
  sub_19CD3BE18(v18, v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  v25 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  sub_19CD3E448((uint64_t)v40, (uint64_t)v37);
  *(_QWORD *)&v38 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v11, v35[0], v7);
  JSPackageIndex.init(deserializing:using:from:)((uint64_t)v37, (uint64_t)v11, (uint64_t)v16);
  sub_19CD3E3F8((uint64_t)v40);
  sub_19CF77C08((uint64_t)v16, (uint64_t)v6);
LABEL_11:
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B90);
  v26 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  v26[2] = v27;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v26 + *(_QWORD *)(*v26 + 96), (uint64_t *)&unk_1EE43E400);
  return v26;
}

uint64_t sub_19CF77BE4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF77C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF77C50(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF77C60(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_19CF77C60(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D24;
  v8[1] = a4;
  v8[2] = sub_19CF79D2C;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CCE8808();
  sub_19CCECFE4((uint64_t)v8, (uint64_t *)&unk_1ECEB1280);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF77D00(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v8[0] = sub_19CF79D4C;
  v8[1] = a4;
  v8[2] = sub_19CF79D54;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDBD8F0();
  sub_19CCECFE4((uint64_t)v8, &qword_1ECEB25B0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF77DA8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D44;
  v8[1] = a4;
  v8[2] = sub_19CF0BBE0;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CCDFA5C();
  sub_19CCECFE4((uint64_t)v8, qword_1ECEB1C80);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF77E48(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  v9[0] = sub_19CF79D3C;
  v9[1] = a5;
  v9[2] = sub_19CF79D40;
  v9[3] = a5;
  sub_19CCD5B84(a6, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  sub_19CDBECC4();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE43E3F8);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF77EF0(char a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[47];
  char v10;

  v10 = a1 & 1;
  a2(&v10);
  v8[0] = sub_19CF79D34;
  v8[1] = a4;
  v8[2] = sub_19CEE9624;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDBF598();
  sub_19CCECFE4((uint64_t)v8, &qword_1EE439CD0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF77F9C(__int128 *a1, void (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v13[4];
  _BYTE v14[48];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  uint64_t v22;

  v7 = *((_QWORD *)a1 + 2);
  v8 = *((_QWORD *)a1 + 3);
  v9 = *((_BYTE *)a1 + 64);
  v10 = *((_QWORD *)a1 + 11);
  v15 = *a1;
  v16 = v7;
  v17 = v8;
  v11 = a1[3];
  v18 = a1[2];
  v19 = v11;
  v20 = v9;
  v21 = *(__int128 *)((char *)a1 + 72);
  v22 = v10;
  a2(&v15);
  v13[0] = sub_19CF79D74;
  v13[1] = a4;
  v13[2] = sub_19CF79D64;
  v13[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v14);
  v14[40] = 0;
  swift_retain_n();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v13, &qword_1ECEB0B50);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF78070(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D30;
  v8[1] = a4;
  v8[2] = sub_19CF0BA00;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDBE6E0((uint64_t)v8);
  sub_19CCECFE4((uint64_t)v8, &qword_1EE43D310);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF78110(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D20;
  v8[1] = a4;
  v8[2] = sub_19CF0BB54;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC0AF4();
  sub_19CCECFE4((uint64_t)v8, (uint64_t *)&unk_1EE443AF0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF781B0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  v9[0] = sub_19CF79D10;
  v9[1] = a5;
  v9[2] = sub_19CF79D1C;
  v9[3] = a5;
  sub_19CCD5B84(a6, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  sub_19CDBEB10();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE43E3F0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF78258(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D78;
  v8[1] = a4;
  v8[2] = sub_19CF79D68;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC0D70();
  sub_19CCECFE4((uint64_t)v8, &qword_1EE440CF0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF782F8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v8[0] = sub_19CF79D74;
  v8[1] = a4;
  v8[2] = sub_19CF79D64;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v8, &qword_1ECEB0B50);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF783A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v10[4];
  _BYTE v11[48];
  _QWORD v12[3];

  v12[0] = a1;
  v12[1] = a2;
  v12[2] = a3;
  a4(v12);
  v10[0] = sub_19CD18514;
  v10[1] = a6;
  v10[2] = sub_19CF79D0C;
  v10[3] = a6;
  sub_19CCD5B84(a7, (uint64_t)v11);
  v11[40] = 0;
  swift_retain_n();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v10, &qword_1ECEB0B50);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF7844C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79D00;
  v8[1] = a4;
  v8[2] = sub_19CF79D08;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC0F48();
  sub_19CCECFE4((uint64_t)v8, qword_1EE43B200);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF784EC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];

  a2();
  v8[0] = sub_19CF79CF4;
  v8[1] = a4;
  v8[2] = sub_19CF0BAA4;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC0D70();
  sub_19CCECFE4((uint64_t)v8, &qword_1EE440CF0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF7858C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v8[0] = sub_19CF79D6C;
  v8[1] = a4;
  v8[2] = sub_19CF79D70;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC0AF4();
  sub_19CCECFE4((uint64_t)v8, (uint64_t *)&unk_1EE443AF0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_19CF78634(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v8[4];
  _BYTE v9[48];
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v8[0] = sub_19CF79CF0;
  v8[1] = a4;
  v8[2] = sub_19CF79D60;
  v8[3] = a4;
  sub_19CCD5B84(a5, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CD3810C();
  sub_19CCECFE4((uint64_t)v8, &qword_1ECEB1270);
  swift_release();
  return swift_release_n();
}

void sub_19CF786DC(void *a1)
{
  sub_19CEBB0A0(a1);
}

void sub_19CF786FC(void *a1)
{
  sub_19CEBB860(a1);
}

void sub_19CF7871C(void *a1)
{
  sub_19CEBC950(a1);
}

void sub_19CF7873C(void *a1)
{
  sub_19CEBA838(a1);
}

void sub_19CF7875C(void *a1)
{
  sub_19CEBD0A4(a1);
}

uint64_t sub_19CF7877C()
{
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_19CF787A8()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE443180 = result;
  return result;
}

id static ReloadableJSStack.didReloadJSStackNotification.getter()
{
  if (qword_1EE43D738 != -1)
    swift_once();
  return (id)qword_1EE443180;
}

uint64_t ReloadableJSStack.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;

  v5 = (_QWORD *)swift_allocObject();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_19CCC1F98;
  v6[3] = a2;
  v6[4] = v5;
  v6[2] = a1;
  v6[5] = *v5;
  return swift_task_switch();
}

uint64_t ReloadableJSStack.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_19CF788CC()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[3];
  v2 = (int *)v0[2];
  *(_DWORD *)(v0[4] + 24) = -1;
  v0[6] = type metadata accessor for StackContainer();
  v3 = swift_allocObject();
  v0[7] = v3;
  swift_retain();
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = v2;
  *(_QWORD *)(v3 + 120) = v1;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_19CF78974;
  return v6();
}

uint64_t sub_19CF78974(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 128) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_19CF78A24()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF78A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v2 + 16) = v1;
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_19CF78AA0()
{
  uint64_t v0;

  swift_release();
  swift_deallocPartialClassInstance();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for StackContainer()
{
  return objc_opt_self();
}

uint64_t ReloadableJSStack.deinit()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 24);
  if (v1 != -1)
    notify_cancel(v1);
  swift_release();
  return v0;
}

uint64_t ReloadableJSStack.__deallocating_deinit()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 24);
  if (v1 != -1)
    notify_cancel(v1);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ReloadableJSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF78B8C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[3];
  v2 = (_QWORD *)v0[2];
  v2[3] = v0[4];
  v2[4] = &protocol witness table for ReloadableJSStack;
  *v2 = v1;
  v4 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v4();
}

uint64_t *ReloadableJSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v32;
  _BYTE v33[24];
  ValueMetadata *v34;
  _UNKNOWN **v35;

  v32 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = *a2;
  v16 = *(_QWORD *)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4431B0);
  v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v17 + 24) = v19;
  *(_BYTE *)(v17 + 32) = 0;
  v20 = sub_19CFDFA10();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = &unk_1EE4431A8;
  v21[5] = v16;
  v21[6] = v17;
  swift_retain();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v14, (uint64_t)&unk_1EE4431B8, (uint64_t)v21);
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v32, a3);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = (v9 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a3;
  *(_QWORD *)(v24 + 24) = a4;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v24 + v22, v10, a3);
  *(_QWORD *)(v24 + v23) = v15;
  type metadata accessor for JSStack();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = type metadata accessor for Promise(0, AssociatedTypeWitness, v26, v27);
  v29 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v28);
  v34 = &type metadata for SyncTaskScheduler;
  v35 = &protocol witness table for SyncTaskScheduler;
  swift_bridgeObjectRetain();
  v30 = Promise.flatMap<A>(on:_:)((uint64_t)v33, (uint64_t)sub_19CF797BC, v24, v28, v29);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return v30;
}

uint64_t sub_19CF78E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CF78E74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 128);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_19CF78EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_19CF78F1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442BF0
                                                                                     + dword_1EE442BF0))(a1, v4, v5, v6, v7, v8);
}

uint64_t ReloadableJSStack.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF78FD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16);
  return swift_task_switch();
}

uint64_t sub_19CF78FEC()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[9] = *(_QWORD *)(v0[8] + 128);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_19CF7905C;
  return JSStack.dispatch<A>(_:objectGraph:)(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_19CF7905C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *ReloadableJSStack.performRequest(_:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v18 = *a1;
  v19 = v7;
  v20 = a1[2];
  v21 = *((_QWORD *)a1 + 6);
  v8 = *(_QWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4431B0);
  v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = 0;
  v12 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = &unk_1EE4431D0;
  v13[5] = v8;
  v13[6] = v9;
  swift_retain();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v6, (uint64_t)&unk_1EE4431D8, (uint64_t)v13);
  swift_release();
  v14 = swift_allocObject();
  v15 = v19;
  *(_OWORD *)(v14 + 16) = v18;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = v20;
  *(_QWORD *)(v14 + 64) = v21;
  sub_19CF79B38((uint64_t)&v18);
  v16 = sub_19CF79990((uint64_t)sub_19CF79948, v14);
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_19CF79274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CF79288()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 128);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_19CF792CC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReloadableJSStack.performRequest(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v2;
  type metadata accessor for JSResponse();
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  *(_OWORD *)(v3 + 240) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 256) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 264) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(v3 + 153) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(v3 + 280) = *(_QWORD *)(a2 + 48);
  return swift_task_switch();
}

uint64_t sub_19CF7936C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 16);
  return swift_task_switch();
}

uint64_t sub_19CF79388()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = *(_QWORD *)(*(_QWORD *)(v0 + 288) + 128);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_19CF793CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_BYTE *)(v0 + 153);
  v3 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v4 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 192) = v3;
  *(_BYTE *)(v0 + 200) = v1;
  *(_QWORD *)(v0 + 208) = v2;
  *(_QWORD *)(v0 + 304) = JSStack.performRequest(_:)(v0 + 160);
  return swift_task_switch();
}

uint64_t sub_19CF79430()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[29];
  v0[2] = v0;
  v0[3] = sub_19CF794AC;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD3810C();
  sub_19CCECFE4(v1, &qword_1ECEB1270);
  return swift_continuation_await();
}

uint64_t sub_19CF794AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 312) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CF79B80(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 216));
  return swift_task_switch();
}

uint64_t sub_19CF79524()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF7956C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF795B4(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CF79620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *v5;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_19CD579FC;
  v13[6] = a5;
  v13[7] = v12;
  v13[4] = a3;
  v13[5] = a4;
  v13[2] = a1;
  v13[3] = a2;
  return swift_task_switch();
}

uint64_t *sub_19CF796AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return ReloadableJSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

_QWORD *sub_19CF796CC(__int128 *a1)
{
  return ReloadableJSStack.performRequest(_:)(a1);
}

uint64_t sub_19CF796EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return ReloadableJSStack.performRequest(_:)(a1, a2);
}

uint64_t sub_19CF79750()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *sub_19CF797BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8));
  return JSStack.dispatch<A>(intent:jsonContext:)(v0 + v4, &v6, v1, v2);
}

uint64_t sub_19CF7981C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_19CF79880(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442BF0
                                                                                     + dword_1EE442BF0))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF79914()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_19CF79948()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[3];
  uint64_t v4;

  v1 = *(_OWORD *)(v0 + 32);
  v3[0] = *(_OWORD *)(v0 + 16);
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 64);
  return JSStack.performRequest(_:)((uint64_t)v3);
}

_QWORD *sub_19CF79990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[48];
  __int128 v13[2];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2420);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2440);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CF79C5C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96));
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19CCD14C4(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19CF79CD8;
  v11[1] = v9;
  v11[2] = sub_19CF79CEC;
  v11[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC1568();
  sub_19CCECFE4((uint64_t)v11, (uint64_t *)&unk_1EE43E3E0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CF79B38(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CF79B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ReloadableJSStack()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReloadableJSStack()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadableJSStack.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 96) + *(_QWORD *)(v2 + 96));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_19CE66350;
  return v8(a1, a2);
}

uint64_t sub_19CF79C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF79CA4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CF79CD8(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF78634(*a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CF79CF4(uint64_t a1)
{
  sub_19CFBB3F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_19CF79D00(void **a1)
{
  sub_19CFBF874(*a1);
}

void sub_19CF79D10(uint64_t *a1)
{
  sub_19CFBAD68(*a1, a1[1]);
}

void sub_19CF79D24(void **a1)
{
  sub_19CCFA370(*a1);
}

void sub_19CF79D34(char *a1)
{
  sub_19CFBC820(*a1);
}

void sub_19CF79D44(void **a1)
{
  sub_19CFBB650(*a1);
}

void sub_19CF79D4C(uint64_t *a1)
{
  sub_19CD0C9BC(*a1);
}

uint64_t sub_19CF79D80()
{
  return swift_deallocObject();
}

uint64_t OperationID.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_19CFDECFC();
  v3 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

uint64_t OperationID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  sub_19CFDF7F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t OperationID.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_19CFE06AC();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v3;
}

uint64_t OperationID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t OperationID.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CF79FC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v5 = sub_19CFE06AC();
  v7 = v6;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

JetEngine::OperationID __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OperationID.init(_:)(JSValue a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  JetEngine::OperationID result;

  if (-[objc_class isString](a1.super.isa, sel_isString)
    && (v2 = -[objc_class toString](a1.super.isa, sel_toString)) != 0)
  {
    v3 = v2;
    v4 = sub_19CFDF578();
    v6 = v5;

    v7 = v4;
    v8 = v6;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v10 = v9;
    v11 = a1.super.isa;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();

  }
  result.rawValue._object = v8;
  result.rawValue._countAndFlagsBits = v7;
  return result;
}

void sub_19CF7A160(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (objc_msgSend(a1, sel_isString)
    && (v4 = objc_msgSend(a1, sel_toString)) != 0)
  {
    v5 = v4;
    v6 = sub_19CFDF578();
    v8 = v7;

    *a2 = v6;
    a2[1] = v8;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v10 = v9;
    v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();

  }
}

unint64_t OperationID.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v6;
  uint64_t v7;
  id v8;
  unint64_t result;

  swift_bridgeObjectRetain();
  v6 = a1;
  v7 = sub_19CFE0808();
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, v6, a2, a3);
  swift_unknownObjectRelease();

  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a4[4] = result;
  *a4 = v8;
  return result;
}

JSValue __swiftcall OperationID.makeValue(in:)(JSContext in)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  uint64_t v5;
  id v6;
  JSValue result;
  uint64_t v8;
  uint64_t v9;

  v8 = v1;
  v9 = v2;
  swift_bridgeObjectRetain();
  v4 = in.super.isa;
  v5 = sub_19CFE0808();
  v6 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v5, v4, v8, v9);
  swift_unknownObjectRelease();

  if (v6)
    return (JSValue)v6;
  __break(1u);
  return result;
}

unint64_t sub_19CF7A388@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  id v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;

  v9 = *v2;
  v10 = v2[1];
  swift_bridgeObjectRetain();
  v5 = a1;
  v6 = sub_19CFE0808();
  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v6, v5, v9, v10);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v7;
  return result;
}

void sub_19CF7A444(void *a1)
{
  uint64_t *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *v1;
  v7 = v1[1];
  swift_bridgeObjectRetain();
  v3 = a1;
  v4 = sub_19CFE0808();
  v5 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v4, v3, v6, v7);
  swift_unknownObjectRelease();

  if (!v5)
    __break(1u);
}

uint64_t EmptyActionImplementation.perform(_:asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return v0;
}

_UNKNOWN **sub_19CF7A540()
{
  return &protocol witness table for EmptyAction;
}

uint64_t sub_19CF7A54C()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return v0;
}

uint64_t type metadata accessor for EmptyActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EmptyActionImplementation);
}

uint64_t JSONTypeCluster.tryToMakeInstance(ofKind:byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t AssociatedTypeWitness;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v11 = *a3;
  sub_19CCF8C5C(a2, (uint64_t)v20, &qword_1ECEB1328);
  v12 = v21;
  if (!v21)
  {
    sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  if ((v14 & 1) != 0)
  {
LABEL_5:
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
    v18 = a6;
    v19 = 1;
    return v17(v18, v19, 1, AssociatedTypeWitness);
  }
  v20[0] = v11;
  (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a5 + 24))(a1, a2, v20, a4, a5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v18 = a6;
  v19 = 0;
  return v17(v18, v19, 1, AssociatedTypeWitness);
}

uint64_t JSONTypeCluster.makeInstances(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  _QWORD v8[8];

  v5 = *a3;
  v8[2] = a4;
  v8[3] = a5;
  v8[5] = a1;
  v8[6] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return JSONArray.map<A>(_:)((uint64_t)sub_19CF7A8B0, (uint64_t)v8, AssociatedTypeWitness);
}

uint64_t sub_19CF7A8B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[5];
  v7 = v1[6];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v4 + 24))(v5, a1, &v7, v3);
}

uint64_t JSONTypeCluster.tryToMakeInstances(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  _QWORD v8[8];

  v5 = *a3;
  v8[2] = a4;
  v8[3] = a5;
  v8[5] = a1;
  v8[6] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return JSONArray.compactMap<A>(_:)((uint64_t)sub_19CF7AC14, (uint64_t)v8, AssociatedTypeWitness);
}

uint64_t sub_19CF7A968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_19CCF8C5C(a1, (uint64_t)v27, &qword_1ECEB1328);
  v13 = v28;
  if (!v28)
  {
    sub_19CCECFE4((uint64_t)v27, &qword_1ECEB1328);
    goto LABEL_7;
  }
  v30 = a6;
  v14 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 104);
  v16 = v14;
  a6 = v30;
  v17 = v15(v13, v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  if ((v17 & 1) != 0)
  {
LABEL_7:
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a6, 1, 1, AssociatedTypeWitness);
  }
  v27[0] = a3;
  (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a5 + 24))(a2, a1, v27, a4, a5);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a3, (uint64_t)v27);
    swift_bridgeObjectRelease();
    sub_19CCF8C5C((uint64_t)v27, (uint64_t)v24, qword_1EE43A238);
    v18 = v25;
    if (v25)
    {
      v19 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      v20 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v19 + 8))(v20, v6, v18, v19);

      sub_19CCECFE4((uint64_t)v27, qword_1EE43A238);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    }
    else
    {
      sub_19CCECFE4((uint64_t)v27, qword_1EE43A238);

      sub_19CCECFE4((uint64_t)v24, qword_1EE43A238);
      v20 = swift_getAssociatedTypeWitness();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v30, 1, 1, v20);
  }
  else
  {
    v23 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a6, 0, 1, v23);
  }
}

uint64_t sub_19CF7AC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_19CF7A968(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t dispatch thunk of JSONTypeCluster.makeInstance(ofKind:byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t *assignWithCopy for JetPackSigningPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_19CCD6870(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_19CD4C0D4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for JetPackSigningPolicy(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19CD4C0D4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackSigningPolicy(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if ((~*(_QWORD *)(a1 + 8) & 0x3000000000000000) != 0)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackSigningPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_OWORD *)result = xmmword_19D066DB0;
  }
  return result;
}

uint64_t sub_19CF7AD54(uint64_t a1)
{
  if (((*(_QWORD *)(a1 + 8) >> 60) & 2) != 0)
    return (*(_DWORD *)a1 + 2);
  else
    return (*(_QWORD *)(a1 + 8) >> 60) & 3;
}

uint64_t sub_19CF7AD74(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

_QWORD *JSBoundReference.__allocating_init(value:ownedBy:)(void *a1, void *a2)
{
  swift_allocObject();
  return JSBoundReference.init(value:ownedBy:)(a1, a2);
}

_QWORD *JSBoundReference.init(value:ownedBy:)(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  _BYTE v28[224];

  v3 = v2;
  v6 = sub_19CFDEFA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for JSWeakReference();
  swift_allocObject();
  v11 = a2;
  v12 = JSWeakReference.init(_:)(v11);
  if (v12)
  {
    v13 = v12;
    sub_19CFDEF9C();
    v14 = sub_19CFDEF90();
    v16 = v15;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    v3[2] = v14;
    v3[3] = v16;
    v3[4] = v13;
    swift_retain();
    v17 = (void *)sub_19CFDF554();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D055650;
    v19 = sub_19CFDF578();
    v20 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(inited + 40) = v21;
    *(_QWORD *)(inited + 72) = v20;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 80) = sub_19CFDF578();
    *(_QWORD *)(inited + 88) = v22;
    *(_QWORD *)(inited + 120) = v20;
    *(_BYTE *)(inited + 96) = 0;
    *(_QWORD *)(inited + 128) = sub_19CFDF578();
    *(_QWORD *)(inited + 136) = v23;
    *(_QWORD *)(inited + 168) = v20;
    *(_BYTE *)(inited + 144) = 1;
    *(_QWORD *)(inited + 176) = sub_19CFDF578();
    *(_QWORD *)(inited + 184) = v24;
    *(_QWORD *)(inited + 216) = sub_19CD15680();
    *(_QWORD *)(inited + 192) = a1;
    v25 = a1;
    sub_19CD30650(inited);
    v26 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_defineProperty_descriptor_, v17, v26);
    swift_release();

  }
  else
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t JSBoundReference.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Object;
  id v3;
  void *v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 32);
  Object = JSWeakGetObject();
  if (Object)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, Object, *(_QWORD *)(v1 + 16));
    if (v3)
    {
      v4 = v3;
      v5 = (void *)sub_19CFDF554();
      objc_msgSend(v4, sel_deleteProperty_, v5);

    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

id JSBoundReference.owner.getter()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + 32);
  result = (id)JSWeakGetObject();
  if (result)
    return objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, result, *(_QWORD *)(v1 + 16));
  return result;
}

uint64_t JSBoundReference.__deallocating_deinit()
{
  JSBoundReference.deinit();
  return swift_deallocClassInstance();
}

void JSBoundReference.referent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Object;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 32);
  Object = JSWeakGetObject();
  if (Object)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, Object, *(_QWORD *)(v1 + 16));
    if (v3)
    {
      v4 = v3;
      v5 = (void *)sub_19CFDF554();
      v6 = objc_msgSend(v4, sel_valueForProperty_, v5);

      if (v6)
      else
        __break(1u);
    }
  }
}

void sub_19CF7B1DC()
{
  JSBoundReference.referent.getter();
}

uint64_t type metadata accessor for JSBoundReference()
{
  return objc_opt_self();
}

uint64_t method lookup function for JSBoundReference()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSBoundReference.__allocating_init(value:ownedBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_19CF7B248(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t (*a7)(void *, id, id, id, id, id))
{
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id result;

  v13 = (void *)objc_opt_self();
  v14 = a3;
  v15 = a4;
  v16 = a5;
  v17 = a6;
  v18 = a1;
  v19 = objc_msgSend(v13, sel_currentContext);
  if (v19)
  {
    v20 = v19;
    v21 = v14;
    v22 = v15;
    v23 = v16;
    v24 = v17;
    v25 = v18;
    v26 = (void *)a7(v20, v21, v22, v23, v24, v25);

    return v26;
  }
  else
  {
    result = (id)sub_19CFE0340();
    __break(1u);
  }
  return result;
}

void sub_19CF7B660(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;

  v53 = a5;
  v54 = a1;
  v57 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v51 - v13;
  v15 = sub_19CFDEF84();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v18)
    || (v21 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    v30 = v29;
    v31 = a2;
    v32 = v30;
LABEL_11:
    JSError.init(badValue:expected:)(v31, v32);
    swift_willThrow();
    return;
  }
  v22 = v21;
  v52 = sub_19CFDF578();
  v24 = v23;

  if ((objc_msgSend(a3, sel_isDate) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_19CDEABB4((uint64_t)v14);
    sub_19CDC98D8();
    swift_allocError();
    v34 = v33;
    v31 = a3;
    v32 = v34;
    goto LABEL_11;
  }
  v25 = v24;
  v26 = objc_msgSend(a3, sel_toDate);
  if (v26)
  {
    v27 = v26;
    sub_19CFDEF60();

    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, v28, 1, v15);
  sub_19CD057DC((uint64_t)v10, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_10;
  v35 = v20;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, v15);
  v36 = v57;
  if (objc_msgSend(v57, sel_isString)
    && (v37 = objc_msgSend(v36, sel_toString)) != 0)
  {
    v38 = v37;
    v39 = sub_19CFDF578();
    v41 = v40;

    v42 = *(_QWORD *)(v53 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
    v43 = *(_QWORD *)(v53 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v53 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v42);
    v44 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 128))(v52, v25, v35, v39, v41, v42, v43);
    v46 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v44;
    v56 = v46;
    v47 = v54;
    v48 = sub_19CFE0808();
    v49 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v48, v47);
    swift_unknownObjectRelease();

    if (v49)
      (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v15);
    else
      __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(v36, v50);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v15);
  }
}

id sub_19CF7BA7C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t (*a6)(void *, id, id, id, id))
{
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id result;

  v11 = (void *)objc_opt_self();
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a1;
  v16 = objc_msgSend(v11, sel_currentContext);
  if (v16)
  {
    v17 = v16;
    v18 = v12;
    v19 = v13;
    v20 = v14;
    v21 = v15;
    v22 = (void *)a6(v17, v18, v19, v20, v21);

    return v22;
  }
  else
  {
    result = (id)sub_19CFE0340();
    __break(1u);
  }
  return result;
}

void sub_19CF7BBC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  _QWORD v32[2];
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v32 - v12;
  v14 = sub_19CFDEF84();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isDate, v17))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_7:
    sub_19CDEABB4((uint64_t)v13);
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v24);
    swift_willThrow();
    return;
  }
  v33 = a3;
  v20 = a1;
  v21 = objc_msgSend(a2, sel_toDate);
  if (v21)
  {
    v22 = v21;
    sub_19CFDEF60();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v9, v23, 1, v14);
  sub_19CD057DC((uint64_t)v9, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_7;
  v25 = v20;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
  v26 = *(_QWORD *)(v33 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  v27 = *(_QWORD *)(v33 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v26);
  LOBYTE(v32[0]) = 0;
  v32[0] = (*(uint64_t (**)(char *, _QWORD *, uint64_t, uint64_t))(v27 + 136))(v19, v32, v26, v27);
  v32[1] = v28;
  v29 = v25;
  v30 = sub_19CFE0808();
  v31 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v30, v29);
  swift_unknownObjectRelease();

  if (v31)
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  else
    __break(1u);
}

id sub_19CF7BE74(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void *, id, id))
{
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id result;

  v7 = (void *)objc_opt_self();
  v8 = a3;
  v9 = a1;
  v10 = objc_msgSend(v7, sel_currentContext);
  if (v10)
  {
    v11 = v10;
    v12 = v8;
    v13 = v9;
    v14 = (void *)a4(v11, v12, v13);

    return v14;
  }
  else
  {
    result = (id)sub_19CFE0340();
    __break(1u);
  }
  return result;
}

void sub_19CF7BFAC(void *a1, id a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *rawValue;
  unsigned int v40;
  _QWORD v41[2];
  id v42;

  if (!objc_msgSend(a2, sel_isNumber)
    || (v12 = objc_msgSend(a2, sel_toNumber)) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v15);
    swift_willThrow();
    return;
  }
  v42 = v12;
  v13 = objc_msgSend(a3, sel_isUndefined);
  if ((v13 & 1) != 0)
  {
    v14 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isNumber) & 1) == 0)
    {
      sub_19CDC98D8();
      swift_allocError();
      v37 = v36;
      v34 = a3;
LABEL_22:
      v35 = v37;
      goto LABEL_23;
    }
    v14 = (int)objc_msgSend(a3, sel_toInt32);
  }
  v40 = objc_msgSend(a4, sel_isUndefined);
  if ((v40 & 1) != 0)
  {
    v16 = 0;
    goto LABEL_12;
  }
  if ((objc_msgSend(a4, sel_isNumber) & 1) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    v37 = v38;
    v34 = a4;
    goto LABEL_22;
  }
  v16 = (int)objc_msgSend(a4, sel_toInt32);
LABEL_12:
  v17 = v14;
  if ((objc_msgSend(a5, sel_isUndefined) & 1) == 0)
  {
    if ((objc_msgSend(a5, sel_isString) & 1) != 0)
    {
      v27 = objc_msgSend(a5, sel_toString);
      if (v27)
      {
        v28 = v27;
        v29 = sub_19CFDF578();
        rawValue = v30;

        v31._countAndFlagsBits = v29;
        v31._object = rawValue;
        LocalizerContext.init(rawValue:)(v31);
        v18 = v41[0];
        if (LOBYTE(v41[0]) != 6)
          goto LABEL_14;
      }
    }
    sub_19CDC98D8();
    swift_allocError();
    v33 = v32;
    v34 = a5;
    v35 = v33;
LABEL_23:
    JSError.init(badValue:expected:)(v34, v35);
    swift_willThrow();

    return;
  }
  v18 = 0;
LABEL_14:
  v19 = (_QWORD *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v20 = *(_QWORD *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  v21 = v19[5];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  LOBYTE(v41[0]) = v18;
  v22 = v42;
  v41[0] = (*(uint64_t (**)(id, uint64_t, id, uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v21 + 64))(v42, v17, v13, v16, v40, v41, v20, v21);
  v41[1] = v23;
  v24 = a1;
  v25 = sub_19CFE0808();
  v26 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v25, v24);
  swift_unknownObjectRelease();

  if (v26)
  else
    __break(1u);
}

void sub_19CF7C304(void *a1, id a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *rawValue;
  unsigned int v40;
  _QWORD v41[2];
  id v42;

  if (!objc_msgSend(a2, sel_isNumber)
    || (v12 = objc_msgSend(a2, sel_toNumber)) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v15);
    swift_willThrow();
    return;
  }
  v42 = v12;
  v13 = objc_msgSend(a3, sel_isUndefined);
  if ((v13 & 1) != 0)
  {
    v14 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isNumber) & 1) == 0)
    {
      sub_19CDC98D8();
      swift_allocError();
      v37 = v36;
      v34 = a3;
LABEL_22:
      v35 = v37;
      goto LABEL_23;
    }
    v14 = (int)objc_msgSend(a3, sel_toInt32);
  }
  v40 = objc_msgSend(a4, sel_isUndefined);
  if ((v40 & 1) != 0)
  {
    v16 = 0;
    goto LABEL_12;
  }
  if ((objc_msgSend(a4, sel_isNumber) & 1) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    v37 = v38;
    v34 = a4;
    goto LABEL_22;
  }
  v16 = (int)objc_msgSend(a4, sel_toInt32);
LABEL_12:
  v17 = v14;
  if ((objc_msgSend(a5, sel_isUndefined) & 1) == 0)
  {
    if ((objc_msgSend(a5, sel_isString) & 1) != 0)
    {
      v27 = objc_msgSend(a5, sel_toString);
      if (v27)
      {
        v28 = v27;
        v29 = sub_19CFDF578();
        rawValue = v30;

        v31._countAndFlagsBits = v29;
        v31._object = rawValue;
        LocalizerContext.init(rawValue:)(v31);
        v18 = v41[0];
        if (LOBYTE(v41[0]) != 6)
          goto LABEL_14;
      }
    }
    sub_19CDC98D8();
    swift_allocError();
    v33 = v32;
    v34 = a5;
    v35 = v33;
LABEL_23:
    JSError.init(badValue:expected:)(v34, v35);
    swift_willThrow();

    return;
  }
  v18 = 0;
LABEL_14:
  v19 = (_QWORD *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v20 = *(_QWORD *)(a6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  v21 = v19[5];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  LOBYTE(v41[0]) = v18;
  v22 = v42;
  v41[0] = (*(uint64_t (**)(id, uint64_t, id, uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v21 + 72))(v42, v17, v13, v16, v40, v41, v20, v21);
  v41[1] = v23;
  v24 = a1;
  v25 = sub_19CFE0808();
  v26 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v25, v24);
  swift_unknownObjectRelease();

  if (v26)
  else
    __break(1u);
}

id sub_19CF7C65C(void *a1, id a2, id a3, uint64_t a4)
{
  id v6;
  signed int v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v6 = a2;
  if ((objc_msgSend(a2, sel_isNumber) & 1) == 0)
    goto LABEL_6;
  v8 = objc_msgSend(v6, sel_toInt32);
  if ((objc_msgSend(a3, sel_isUndefined) & 1) != 0)
  {
    v9 = 0;
  }
  else
  {
    if ((objc_msgSend(a3, sel_isString) & 1) == 0)
      goto LABEL_10;
    v19 = objc_msgSend(a3, sel_toString);
    if (!v19)
      goto LABEL_10;
    v20 = v19;
    v21 = sub_19CFDF578();
    v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    LocalizerContext.init(rawValue:)(v24);
    v9 = v28[0];
    if (LOBYTE(v28[0]) == 6)
    {
LABEL_10:
      sub_19CDC98D8();
      swift_allocError();
      v26 = v25;
      v17 = a3;
      v18 = v26;
      goto LABEL_11;
    }
  }
  v10 = v8;
  v11 = (_QWORD *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v12 = *(_QWORD *)(a4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  v6 = (id)v11[5];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  LOBYTE(v28[0]) = v9;
  v28[0] = (*((uint64_t (**)(uint64_t, _QWORD *, uint64_t, id))v6 + 10))(v10, v28, v12, v6);
  v28[1] = v13;
  v14 = a1;
  v15 = sub_19CFE0808();
  a3 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v15, v14);
  swift_unknownObjectRelease();

  if (!a3)
  {
    __break(1u);
LABEL_6:
    sub_19CDC98D8();
    swift_allocError();
    a3 = v16;
    v17 = v6;
    v18 = (uint64_t)a3;
LABEL_11:
    JSError.init(badValue:expected:)(v17, v18);
    swift_willThrow();
  }
  return a3;
}

void sub_19CF7C888(void *a1, id a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  id v16;
  unsigned int v17;
  signed int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD v40[2];
  id v41;

  v41 = a1;
  if (objc_msgSend(a2, sel_isString)
    && (v11 = objc_msgSend(a2, sel_toString)) != 0
    || objc_msgSend(a3, sel_isString)
    && (v11 = objc_msgSend(a3, sel_toString)) != 0)
  {
    v12 = sub_19CFDF578();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = objc_msgSend(a3, sel_isNumber);
  v16 = a3;
  if ((v15 & 1) == 0)
  {
    if (!objc_msgSend(a2, sel_isNumber))
    {
      if (v14)
      {
        swift_bridgeObjectRelease();
        sub_19CDC98D8();
        swift_allocError();
        v21 = v20;
        v22 = a2;
        v23 = v21;
LABEL_16:
        JSError.init(badValue:expected:)(v22, v23);
        swift_willThrow();
        return;
      }
LABEL_15:
      sub_19CDC98D8();
      swift_allocError();
      v25 = v24;
      v22 = a3;
      v23 = v25;
      goto LABEL_16;
    }
    v16 = a2;
  }
  v17 = objc_msgSend(v16, sel_toInt32);
  if (!v14)
    goto LABEL_15;
  v18 = v17;
  v19 = sub_19CCEF174(a4);
  if (v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = v19;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), *(_QWORD *)(a5 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24));
    v38 = v18;
    if ((objc_msgSend(a6, sel_isString) & 1) != 0
      && (v27 = objc_msgSend(a6, sel_toString, v18)) != 0)
    {
      v28 = v27;
      v29 = sub_19CFDF578();
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    LOBYTE(v40[0]) = 0;
    v32 = sub_19CD266DC(v38, v12, v14, v26, v29, v31, (char *)v40);
    v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40[0] = v32;
    v40[1] = v34;
    v35 = v41;
    v36 = sub_19CFE0808();
    v37 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v36, v35);
    swift_unknownObjectRelease();

    if (!v37)
      __break(1u);
  }
}

void sub_19CF7CB8C(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _QWORD v56[2];
  id v57;

  v54 = a5;
  v55 = a1;
  v57 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v52 - v13;
  v15 = sub_19CFDEF84();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v18)
    || (v21 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    v29 = v28;
    v30 = a2;
    v31 = v29;
LABEL_11:
    JSError.init(badValue:expected:)(v30, v31);
    swift_willThrow();
    return;
  }
  v22 = v21;
  v52 = sub_19CFDF578();
  v24 = v23;

  if ((objc_msgSend(a3, sel_isDate) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_19CDEABB4((uint64_t)v14);
    sub_19CDC98D8();
    swift_allocError();
    v33 = v32;
    v30 = a3;
    v31 = v33;
    goto LABEL_11;
  }
  v53 = v24;
  v25 = objc_msgSend(a3, sel_toDate);
  if (v25)
  {
    v26 = v25;
    sub_19CFDEF60();

    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, v27, 1, v15);
  sub_19CD057DC((uint64_t)v10, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_10;
  v34 = v20;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, v15);
  v35 = v57;
  if ((objc_msgSend(v57, sel_isUndefined) & 1) != 0)
  {
    v36 = 0;
  }
  else
  {
    if ((objc_msgSend(v35, sel_isString) & 1) == 0)
      goto LABEL_19;
    v45 = objc_msgSend(v35, sel_toString);
    if (!v45)
      goto LABEL_19;
    v46 = v45;
    v47 = sub_19CFDF578();
    v49 = v48;

    v50._countAndFlagsBits = v47;
    v50._object = v49;
    LocalizerContext.init(rawValue:)(v50);
    v36 = v56[0];
    if (LOBYTE(v56[0]) == 6)
    {
LABEL_19:
      sub_19CDC98D8();
      swift_allocError();
      JSError.init(badValue:expected:)(v35, v51);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v34, v15);
      swift_bridgeObjectRelease();
      return;
    }
  }
  v37 = *(_QWORD *)(v54 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 24);
  v38 = *(_QWORD *)(v54 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v54 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer), v37);
  LOBYTE(v56[0]) = v36;
  v39 = (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD *, uint64_t, uint64_t))(v38 + 120))(v52, v53, v34, v56, v37, v38);
  v41 = v40;
  swift_bridgeObjectRelease();
  v56[0] = v39;
  v56[1] = v41;
  v42 = v55;
  v43 = sub_19CFE0808();
  v44 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v43, v42);
  swift_unknownObjectRelease();

  if (v44)
    (*(void (**)(char *, uint64_t))(v16 + 8))(v34, v15);
  else
    __break(1u);
}

uint64_t DiscardOnError.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t static DiscardOnError<A>.== infix(_:_:)()
{
  return sub_19CFDF548() & 1;
}

uint64_t DiscardOnError.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DiscardOnError.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DiscardOnError.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DiscardOnError<A>.init()()
{
  return sub_19CFE05A4();
}

uint64_t sub_19CF7D06C()
{
  return static DiscardOnError<A>.== infix(_:_:)();
}

uint64_t DiscardOnError<A>.hash(into:)()
{
  return sub_19CFDF4D0();
}

uint64_t DiscardOnError<A>.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF4D0();
  return sub_19CFE0910();
}

uint64_t sub_19CF7D0D4()
{
  return DiscardOnError<A>.hashValue.getter();
}

uint64_t sub_19CF7D0DC()
{
  return DiscardOnError<A>.hash(into:)();
}

uint64_t sub_19CF7D0E4()
{
  sub_19CFE08C8();
  DiscardOnError<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t DiscardOnError<A>.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a3 + 8))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_19CF7D140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiscardOnError<A>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_19CF7D168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, a1, &v4);
}

uint64_t sub_19CF7D1A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF7D250 + 4 * byte_19D066E78[(v7 - 1)]))();
}

void PageHistoryFieldProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t PageHistoryFieldProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PageHistoryFieldProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_19CF7D2EC(_QWORD *a1)
{
  PageHistoryFieldProvider.addMetricsFields(into:using:)(a1);
}

uint64_t method lookup function for PageHistoryFieldProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_19CF7D318(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_19CED6BB4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4410E0);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (_QWORD *)&v16[32 * v15])
      result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CF7D488(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_19CD10844(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CF7D5F0(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_19CD4D730(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

_OWORD *_isStructurallyEqual(_:to:with:at:)(_QWORD *a1, _QWORD *a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  _OWORD *result;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t DynamicType;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  unsigned __int8 v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  char v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  _OWORD *v83;
  __int128 *ObjectType;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _OWORD v101[2];

  v89 = a4;
  v90 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A528);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v88 = (uint64_t)&v79 - v12;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v79 - v15;
  v17 = sub_19CFE0964();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v79 - v24;
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&v79 - v28;
  sub_19CD436B0((uint64_t)a1, (uint64_t)&v91);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A710);
  v30 = MEMORY[0x1E0DEE9B8] + 8;
  if (swift_dynamicCast())
  {
    sub_19CCD14C4(&v94, (uint64_t)&v97);
    v31 = *((_QWORD *)&v98 + 1);
    v32 = v99;
    v33 = __swift_project_boxed_opaque_existential_1(&v97, *((uint64_t *)&v98 + 1));
    v34 = sub_19CF7E588((uint64_t)v33, (uint64_t)a2, v31, v30, v32);
LABEL_5:
    v38 = v34;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v97);
    return (_OWORD *)v38;
  }
  *(_QWORD *)&v96 = 0;
  v94 = 0u;
  v95 = 0u;
  sub_19CCECFE4((uint64_t)&v94, (uint64_t *)&unk_1EE439CD8);
  sub_19CD436B0((uint64_t)a1, (uint64_t)&v91);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B10);
  if (swift_dynamicCast())
  {
    sub_19CCD14C4(&v94, (uint64_t)&v97);
    v35 = *((_QWORD *)&v98 + 1);
    v36 = v99;
    v37 = __swift_project_boxed_opaque_existential_1(&v97, *((uint64_t *)&v98 + 1));
    v34 = sub_19CF7E720((uint64_t)v37, (uint64_t)a2, v35, MEMORY[0x1E0DEE9B8] + 8, v36);
    goto LABEL_5;
  }
  *(_QWORD *)&v96 = 0;
  v94 = 0u;
  v95 = 0u;
  sub_19CCECFE4((uint64_t)&v94, &qword_1EE439B18);
  if (v89 >= v90)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    DynamicType = swift_getDynamicType();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    return (_OWORD *)(DynamicType == swift_getDynamicType());
  }
  v87 = v17;
  sub_19CD436B0((uint64_t)a1, (uint64_t)&v97);
  sub_19CFE0928();
  sub_19CD436B0((uint64_t)a2, (uint64_t)&v97);
  sub_19CFE0928();
  v40 = sub_19CFE0934();
  if (v40 != sub_19CFE0934()
    || (sub_19CFE0958(),
        v86 = sub_19CFE031C(),
        swift_release(),
        sub_19CFE0958(),
        v41 = sub_19CFE031C(),
        swift_release(),
        v86 != v41))
  {
    v52 = *(void (**)(char *, uint64_t))(v18 + 8);
    v53 = v87;
    v52(v25, v87);
    v52(v29, v53);
    return 0;
  }
  v42 = (_QWORD *)sub_19CFE0958();
  v43 = v42[2];
  v86 = v42[3];
  v80 = v42;
  v44 = (void (*)(char *, uint64_t))v42[4];
  v85 = v42[5];
  ObjectType = (__int128 *)swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v81 = v43;
  v83 = (_OWORD *)sub_19CFE0148();
  swift_getObjectType();
  v82 = v44;
  result = (_OWORD *)sub_19CFE0148();
  if (v83 == result)
  {
    LODWORD(v86) = sub_19CFE0154();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v45 = v87;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v25, v87);
    if ((v86 & 1) == 0)
    {
      v82 = *(void (**)(char *, uint64_t))(v18 + 8);
      v82(v21, v45);
      goto LABEL_19;
    }
    v46 = (_QWORD *)sub_19CFE0958();
    v47 = v46[2];
    v86 = v46[3];
    v80 = v46;
    v48 = (void (*)(char *, uint64_t))v46[4];
    v85 = v46[5];
    ObjectType = (__int128 *)swift_getObjectType();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v81 = v47;
    v83 = (_OWORD *)sub_19CFE0148();
    swift_getObjectType();
    v82 = v48;
    result = (_OWORD *)sub_19CFE0148();
    if (v83 == result)
    {
      LODWORD(v86) = sub_19CFE0154();
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v18 + 8);
      v50 = v87;
      v49(v21, v87);
      if ((v86 & 1) != 0)
      {
        v49(v25, v50);
        v49(v29, v50);
        return (_OWORD *)1;
      }
      v82 = v49;
LABEL_19:
      sub_19CFE094C();
      v54 = sub_19CFE0940();
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      v57 = v56(v16, 1, v54);
      sub_19CCECFE4((uint64_t)v16, &qword_1EE43A528);
      if (v57 == 1)
      {
        v58 = a1[3];
        v59 = __swift_project_boxed_opaque_existential_1(a1, v58);
        if (*(_QWORD *)(*(_QWORD *)(v58 - 8) + 64))
        {
          MEMORY[0x1E0C80A78](v59, v60);
          *(&v79 - 2) = (uint64_t)v29;
          requirementFailure(_:file:line:)(sub_19CF7EC9C, (uint64_t)(&v79 - 4), (uint64_t)"JetEngine/StructuralEquality.swift", 34, 2, 67);
          v61 = v87;
          v62 = v82;
          v82(v25, v87);
          v62(v29, v61);
          return 0;
        }
        v66 = v87;
        v72 = v82;
        v82(v25, v87);
LABEL_47:
        v72(v29, v66);
        return (_OWORD *)1;
      }
      v63 = v88;
      sub_19CFE094C();
      if (v56((char *)v63, 1, v54) != 1)
      {
        sub_19CF7ECA4(v88, (uint64_t)v9);
        v64 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v9, v54);
        v65 = v87;
        if (v64 == *MEMORY[0x1E0DEDFA0])
        {
          sub_19CD436B0((uint64_t)a1, (uint64_t)&v97);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_19CD436B0((uint64_t)a2, (uint64_t)&v97);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v66 = v65;
              v67 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
              v68 = (void *)sub_19CFDF3B0();
              swift_bridgeObjectRelease();
              v69 = objc_msgSend(v67, sel_initWithDictionary_, v68);

              v70 = (void *)sub_19CFDF3B0();
              swift_bridgeObjectRelease();
              v71 = objc_msgSend(v69, sel_isEqualToDictionary_, v70);

              v72 = v82;
              v82(v25, v66);
              if ((v71 & 1) == 0)
              {
LABEL_50:
                v72(v29, v66);
LABEL_51:
                sub_19CCECFE4(v88, &qword_1EE43A528);
                return 0;
              }
LABEL_46:
              sub_19CCECFE4(v88, &qword_1EE43A528);
              goto LABEL_47;
            }
            swift_bridgeObjectRelease();
          }
          v72 = v82;
          v82(v25, v65);
          v66 = v65;
          goto LABEL_50;
        }
        (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v54);
      }
      sub_19CFE0958();
      sub_19CFE0958();
      v73 = sub_19CFE02D4();
      swift_release();
      v86 = sub_19CFE02D4();
      swift_release();
      v85 = v73;
      sub_19CFE03D0();
      if (*((_QWORD *)&v93 + 1))
      {
        ObjectType = &v98;
        v83 = v101;
        ++v89;
        v74 = v87;
        while (1)
        {
          v94 = v91;
          v95 = v92;
          v96 = v93;
          sub_19CFE03D0();
          if (!*((_QWORD *)&v93 + 1))
            break;
          v100 = v91;
          v101[0] = v92;
          v101[1] = v93;
          v97 = v94;
          v98 = v95;
          v99 = v96;
          v75 = v94;
          v76 = v91;
          sub_19CD433C0(ObjectType, &v95);
          v91 = v76;
          sub_19CD433C0(v83, &v92);
          if (*((_QWORD *)&v75 + 1))
          {
            if (!*((_QWORD *)&v76 + 1) || v75 != v76 && (sub_19CFE06A0() & 1) == 0)
            {
LABEL_42:
              sub_19CCECFE4((uint64_t)&v91, &qword_1EE441D68);
              sub_19CCECFE4((uint64_t)&v94, &qword_1EE441D68);
LABEL_43:
              swift_release();
              swift_release();
              v78 = v82;
              v82(v25, v74);
              v78(v29, v74);
              goto LABEL_51;
            }
          }
          else if (*((_QWORD *)&v76 + 1))
          {
            goto LABEL_42;
          }
          v77 = _isStructurallyEqual(_:to:with:at:)(&v95, &v92, v90, v89);
          sub_19CCECFE4((uint64_t)&v91, &qword_1EE441D68);
          sub_19CCECFE4((uint64_t)&v94, &qword_1EE441D68);
          if ((v77 & 1) == 0)
            goto LABEL_43;
          sub_19CFE03D0();
          if (!*((_QWORD *)&v93 + 1))
            goto LABEL_45;
        }
        sub_19CCECFE4((uint64_t)&v94, &qword_1EE441D68);
      }
LABEL_45:
      sub_19CCECFE4((uint64_t)&v91, &qword_1EE443218);
      swift_release();
      swift_release();
      v66 = v87;
      v72 = v82;
      v82(v25, v87);
      goto LABEL_46;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Array<A>._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v29 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = sub_19CFDFF5C();
  v31 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)v29 - v22;
  v24 = MEMORY[0x1A1AD9B14](a2, a3, v21);
  v29[1] = a1;
  if (v24 != MEMORY[0x1A1AD9B14](a1, a3))
    return 0;
  v33 = a2;
  v25 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v25);
  sub_19CFDF794();
  v33 = v34;
  sub_19CFE037C();
  sub_19CFE0358();
  sub_19CFE0370();
  while (1)
  {
    sub_19CFE0364();
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v23, v18, v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v23, 1, TupleTypeMetadata2) == 1)break;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, &v23[*(int *)(TupleTypeMetadata2 + 48)], a3);
    sub_19CFDF980();
    v26 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, a3);
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v9, a3);
    v27(v13, a3);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_19CF7E588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char v26;
  _QWORD v28[2];

  v28[1] = a5;
  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v28 - v11;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v16, a2, a4, v20);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v24)
  {
    v25(v12, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v12, a3);
    v26 = sub_19CFDF548();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, a3);
  }
  else
  {
    v25(v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_19CF7E720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a5;
  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v16, a2, a4, v20);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v24)
  {
    v25(v12, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v12, a3);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v22, a3);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, a3);
  }
  else
  {
    v25(v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_19CF7E8B8()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0934();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CF7E950(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return Array<A>._isEqual(to:)(*a1, *v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t Optional<A>._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, double);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = v3;
  v35 = a3;
  v5 = a2;
  v37 = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD **)(v6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v33 = (char *)&v32 - v11;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v14, v12);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v19 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v18);
  v21 = (char *)&v32 - v20;
  v23 = (char *)&v32 + *(int *)(v22 + 48) - v20;
  v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v24((char *)&v32 - v20, v4, v5, v19);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v23, v37, v5);
  v25 = (unsigned int (*)(char *, uint64_t, uint64_t))v7[6];
  if (v25(v21, 1, v6) == 1)
  {
    v26 = 1;
    if (v25(v23, 1, v6) == 1)
      goto LABEL_8;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v24)(v16, v21, v5);
    if (v25(v23, 1, v6) != 1)
    {
      v27 = (void (*)(char *, char *, uint64_t))v7[4];
      v28 = v33;
      v27(v33, v16, v6);
      v29 = v34;
      v27(v34, v23, v6);
      v26 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v29, v6);
      v30 = (void (*)(char *, uint64_t))v7[1];
      v30(v29, v6);
      v30(v28, v6);
      goto LABEL_8;
    }
    ((void (*)(char *, uint64_t))v7[1])(v16, v6);
  }
  v26 = 0;
  v13 = v36;
  v5 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v5);
  return v26 & 1;
}

uint64_t sub_19CF7EBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>._isEqual(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t _AsEquatable.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t _AsEquatable.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t static _AsEquatable.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a2, a3, a4) & 1;
}

uint64_t sub_19CF7EC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static _AsEquatable.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t _EquatableForJetOnly._equatable.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, v3);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, a1);
}

uint64_t sub_19CF7EC9C()
{
  return sub_19CF7E8B8();
}

uint64_t sub_19CF7ECA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of _EquatableForJetOnly._isEqual(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19CF7ECF4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF7EDA4 + 4 * byte_19D067030[(v7 - 1)]))();
}

void sub_19CF7EDF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _AsEquatable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsEquatable);
}

uint64_t sub_19CF7EFB0(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_19CF81984(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_19CFDF878();
      return v10;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CF7F090@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CF7F0A8(a1, (uint64_t (*)(uint64_t))sub_19CF81A78, a2);
}

uint64_t sub_19CF7F09C@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CF7F0A8(a1, (uint64_t (*)(uint64_t))sub_19CF81AA0, a2);
}

uint64_t sub_19CF7F0A8@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v7 = *v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = a2(v7);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v7 + 8 * a1;
    v12 = *(_QWORD *)(v10 + 32);
    v11 = v10 + 32;
    *a3 = v12;
    v13 = v8 - 1 - a1;
    if (v13 >= 0)
    {
      result = (uint64_t)memmove((void *)v11, (const void *)(v11 + 8), 8 * v13);
      *(_QWORD *)(v7 + 16) = v9;
      *v3 = v7;
      return result;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CF7F188@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_19CF81AB4(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[5 * a1];
    v9 = *((_OWORD *)v8 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v8 + 2);
    *(_OWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 32) = v8[8];
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v8 + 4, v8 + 9, 40 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

id sub_19CF7F278(void *a1)
{
  uint64_t v1;
  void *v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  JSValue v17;
  JSValue v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *isa;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v28;
  __int128 v29;
  os_log_type_t v30;
  _BYTE *v31;
  os_unfair_lock_s *v32;
  int v33;
  char has_internal_content;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _BYTE v51[32];
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56[3];
  uint64_t v57;
  _QWORD v58[4];

  v2 = a1;
  result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    v4 = result;
    v5 = sub_19CFDF578();
    v7 = v6;

    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName);
    swift_beginAccess();
    v9 = *v8;
    if (*(_QWORD *)(v9 + 16) && (v10 = sub_19CD3FD1C(v5, v7), (v11 & 1) != 0))
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = v12 + 32;
        v50 = v2;
        while (1)
        {
          sub_19CDF5C34(v14, (uint64_t)v58);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
          v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v15 + 56) = sub_19CD15680();
          *(_QWORD *)(v15 + 32) = v2;
          __swift_project_boxed_opaque_existential_1(v58, v58[3]);
          v16 = v2;
          v17.super.isa = JSReference.unwrap()().super.isa;
          if (v18.super.isa)
            break;
          isa = v17.super.isa;
          result = -[objc_class context](v17.super.isa, sel_context);
          if (!result)
          {
            __break(1u);
            goto LABEL_30;
          }
          v35 = result;
          v36 = (void *)sub_19CFDF854();
          v37 = -[NSObject callWithArguments:](isa, sel_callWithArguments_, v36);

          if (!v37)
          {
            sub_19CDC98D8();
            v19 = (void *)swift_allocError();
            *(_QWORD *)v49 = 0xD000000000000017;
            *(_QWORD *)(v49 + 8) = 0x800000019D06FCF0;
            *(_QWORD *)(v49 + 16) = 0;
            *(_BYTE *)(v49 + 24) = 1;
            *(_QWORD *)(v49 + 32) = 0;
            *(_BYTE *)(v49 + 40) = 1;
            *(_OWORD *)(v49 + 48) = 0u;
            *(_OWORD *)(v49 + 64) = 0u;
            *(_OWORD *)(v49 + 80) = 0u;
            *(_QWORD *)(v49 + 96) = 0;
            swift_willThrow();
            swift_bridgeObjectRelease();

            goto LABEL_8;
          }
          v38 = objc_msgSend(v35, sel_exception);
          if (v38)
          {
            v39 = v38;
            objc_msgSend(v35, sel_setException_, 0);
            sub_19CDC98D8();
            v19 = (void *)swift_allocError();
            v41 = v40;
            v42 = v39;
            JSError.init(_:)(v42, v41);
            swift_willThrow();
            swift_bridgeObjectRelease();

            goto LABEL_8;
          }

          swift_bridgeObjectRelease();
LABEL_23:

          sub_19CD2FAC8((uint64_t)v58);
          v14 += 40;
          if (!--v13)
            return (id)swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v19 = v18.super.isa;
LABEL_8:
        if (qword_1EE43AFF0 != -1)
          swift_once();
        v20 = (void *)qword_1EE465C20;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_19D052350;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
        v57 = MEMORY[0x1E0DEA968];
        v56[0] = 0xD000000000000028;
        v56[1] = 0x800000019D078A50;
        v54 = 0u;
        v55 = 0u;
        isa = v20;
        sub_19CD40658((uint64_t)v56, (uint64_t)&v54);
        *(_BYTE *)(v22 + 64) = 0;
        v24 = v55;
        *(_OWORD *)(v22 + 32) = v54;
        *(_OWORD *)(v22 + 48) = v24;
        *(_QWORD *)(v21 + 32) = v22;
        swift_getErrorValue();
        v25 = v52;
        v26 = v53;
        v57 = v53;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v56);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v26);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_19D0522A0;
        sub_19CD40794((uint64_t)v56, (uint64_t)v51);
        v54 = 0u;
        v55 = 0u;
        sub_19CD40658((uint64_t)v51, (uint64_t)&v54);
        *(_BYTE *)(v28 + 64) = 0;
        v29 = v55;
        *(_OWORD *)(v28 + 32) = v54;
        *(_OWORD *)(v28 + 48) = v29;
        *(_QWORD *)(v21 + 40) = v28;
        sub_19CCECFE4((uint64_t)v56, &qword_1ECEB3370);
        v30 = sub_19CFDFD34();
        if (os_log_type_enabled(isa, v30))
        {
          if (qword_1ECEB1958 != -1)
            swift_once();
          v31 = (char *)off_1ECEB1948 + 16;
          v32 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
          swift_retain();
          os_unfair_lock_lock(v32);
          sub_19CD3EA18(v31, &v54);
          os_unfair_lock_unlock(v32);
          v33 = v54;
          swift_release();
          if (v33 == 2)
            has_internal_content = os_variant_has_internal_content();
          else
            has_internal_content = v33 & 1;
          v43 = has_internal_content ^ 1;
          v44 = swift_allocObject();
          *(_BYTE *)(v44 + 16) = v43;
          *(_QWORD *)&v54 = v21;
          *((_QWORD *)&v54 + 1) = sub_19CCBDD10;
          *(_QWORD *)&v55 = v44;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3310);
          sub_19CD420CC();
          v45 = sub_19CFDF4F4();
          v47 = v46;
          swift_release();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
          v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v48 + 64) = sub_19CD42088();
          *(_QWORD *)(v48 + 32) = v45;
          *(_QWORD *)(v48 + 40) = v47;
          sub_19CFDF158();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v2 = v50;
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        goto LABEL_23;
      }
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (id)swift_endAccess();
    }
  }
  else
  {
LABEL_30:
    __break(1u);
  }
  return result;
}

uint64_t sub_19CF7F8D0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  id v39;
  uint64_t result;
  _QWORD *v41;
  _QWORD v42[3];
  uint64_t v43;
  _UNKNOWN **v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;
  id v50;

  v43 = type metadata accessor for JSNotifyObject();
  v42[0] = a3;
  v8 = type metadata accessor for JSConditionalReference();
  v9 = swift_allocObject();
  sub_19CD436B0((uint64_t)v42, (uint64_t)&v41);
  sub_19CD15680();
  v10 = a2;
  v11 = a3;
  if (swift_dynamicCast())
  {

    sub_19CFAB974((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_managedValueWithValue_andOwner_, v10, v42[0]);
  if (!v12)
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v13 = v12;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
  *(_QWORD *)(v9 + 16) = v13;

  v43 = v8;
  v44 = &protocol witness table for JSConditionalReference;
  v42[0] = v9;
  JSCallable.init(_:)(v42, (uint64_t)&v45);
  if (!*((_QWORD *)&v46 + 1))
  {
    sub_19CCECFE4((uint64_t)&v45, (uint64_t *)&unk_1ECEB0860);
    sub_19CDC98D8();
    swift_allocError();
    v31 = v30;
    JSError.init(badValue:expected:)(v10, v30);
    swift_willThrow();
    return v31;
  }
  v48[0] = v45;
  v48[1] = v46;
  v49 = v47;
  v14 = objc_msgSend(a4, sel_toString);
  if (!v14)
    goto LABEL_24;
  v15 = v14;
  v16 = sub_19CFDF578();
  v18 = v17;

  sub_19CDF5C34((uint64_t)v48, (uint64_t)&v45);
  v19 = &v11[OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName];
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = *(_QWORD **)v19;
  v21 = v41;
  *(_QWORD *)v19 = 0x8000000000000000;
  v23 = sub_19CD3FD1C(v16, v18);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_22;
  }
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_19CE1B8F4();
LABEL_13:
    *(_QWORD *)v19 = v41;
    swift_bridgeObjectRelease();
    v32 = *(_QWORD **)v19;
    swift_bridgeObjectRetain();
    if ((v27 & 1) == 0)
    {
      sub_19CE1822C(v23, v16, v18, MEMORY[0x1E0DEE9D8], v32);
      swift_bridgeObjectRetain();
    }
    v19 = (char *)v32[7];
    swift_bridgeObjectRelease();
    v21 = *(_QWORD **)&v19[8 * v23];
    v33 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v19[8 * v23] = v21;
    if ((v33 & 1) != 0)
    {
LABEL_16:
      v35 = v21[2];
      v34 = v21[3];
      if (v35 >= v34 >> 1)
      {
        v21 = sub_19CED6D10((_QWORD *)(v34 > 1), v35 + 1, 1, v21);
        *(_QWORD *)&v19[8 * v23] = v21;
      }
      v21[2] = v35 + 1;
      v36 = &v21[5 * v35];
      v37 = v45;
      v38 = v46;
      v36[8] = v47;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      swift_endAccess();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
      if (v39)
      {
        v31 = (uint64_t)v39;
        sub_19CD2FAC8((uint64_t)v48);
        return v31;
      }
      goto LABEL_25;
    }
LABEL_22:
    v21 = sub_19CED6D10(0, v21[2] + 1, 1, v21);
    *(_QWORD *)&v19[8 * v23] = v21;
    goto LABEL_16;
  }
  sub_19CE166B8(v26, isUniquelyReferenced_nonNull_native);
  v28 = sub_19CD3FD1C(v16, v18);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    goto LABEL_13;
  }
LABEL_26:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

id sub_19CF7FDF0(void *a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;

  result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    v6 = result;
    v7 = sub_19CFDF578();
    v9 = v8;

    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC9JetEngine14JSNotifyObject_observersByName);
    swift_beginAccess();
    v11 = *v10;
    if (*(_QWORD *)(*v10 + 16))
    {
      v12 = sub_19CD3FD1C(v7, v9);
      if ((v13 & 1) != 0)
      {
        v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v14 = *(_QWORD *)(v30 + 16);
        if (!v14)
          return (id)swift_bridgeObjectRelease();
        v15 = (_QWORD *)(v30 + 32);
        swift_bridgeObjectRetain();
        v16 = 0;
        while (1)
        {
          v17 = v15[3];
          v18 = v15[4];
          __swift_project_boxed_opaque_existential_1(v15, v17);
          v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
          if (v19)
          {
            v20 = v19;
            v21 = objc_msgSend(v19, sel_isEqualToObject_, a2);

            if ((v21 & 1) != 0)
              break;
          }
          ++v16;
          v15 += 5;
          if (v14 == v16)
            return (id)swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRelease();
        sub_19CF7F188(v16, (uint64_t)v29);
        sub_19CD2FAC8((uint64_t)v29);
        result = objc_msgSend(a1, sel_toString);
        if (!result)
          goto LABEL_16;
        v22 = result;
        v23 = sub_19CFDF578();
        v25 = v24;

        v26 = v30;
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = *v10;
        *v10 = 0x8000000000000000;
        sub_19CE17E60(v26, v23, v25, isUniquelyReferenced_nonNull_native);
        *v10 = v28;
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return (id)swift_endAccess();
  }
  else
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_19CF800E0()
{
  return swift_deallocObject();
}

uint64_t DeferredLazy.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DeferredLazy.init()();
  return v0;
}

uint64_t DeferredLazy.value(or:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DeferredLazy.value(or:)(a1, a2, a3);
}

{
  _QWORD *v3;
  uint64_t v5;

  return sub_19CF802D8((char *)(v3[2] + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3[2] + 16)), v3[2] + ((*(unsigned int *)(*(_QWORD *)v3[2] + 48) + 3) & 0x1FFFFFFFCLL), a1, a2, *(_QWORD *)(*v3 + 80), &v5, a3);
}

uint64_t DeferredLazy.valueIfLoaded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CF801F8(*(_QWORD *)(v1 + 16) + *(_QWORD *)(*MEMORY[0x1E0DEC528] + **(_QWORD **)(v1 + 16) + 16), a1);
}

Swift::Void __swiftcall DeferredLazy.removeValue()()
{
  _QWORD *v0;

  sub_19CF8047C(v0[2] + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v0[2] + 16), v0[2] + ((*(unsigned int *)(*(_QWORD *)v0[2] + 48) + 3) & 0x1FFFFFFFCLL), *(_QWORD *)(*v0 + 80));
}

uint64_t sub_19CF801F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  os_unfair_recursive_lock_lock_with_options();
  v4 = sub_19CFDFF5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_19CF802D8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  v23 = a6;
  v24 = a4;
  v25 = a3;
  v26 = a7;
  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFF5C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v22 - v17;
  os_unfair_recursive_lock_lock_with_options();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, a5) == 1)
  {
    v22 = a2;
    v19 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v20 = v19(v18, v14);
    v25(v20);
    if (v7)
    {
      result = os_unfair_recursive_lock_unlock();
      *v23 = v7;
      return result;
    }
    v19(a1, v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, v13, a5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, a5);
  }
  else
  {
    v13 = v18;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v26, v13, a5);
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_19CF8047C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = sub_19CFDFF5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v11 - v8;
  os_unfair_recursive_lock_lock_with_options();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v9, 1, 1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(a1, v9, v5);
  return os_unfair_recursive_lock_unlock();
}

uint64_t DeferredLazy.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DeferredLazy.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for DeferredLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeferredLazy.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19CF80594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AEE8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  v10 = sub_19CFE0664();
  if (v10)
  {
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  }
  else
  {
    v11 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12, v8, a2);
  }
  *(_QWORD *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AEC8);
  *(_QWORD *)(v9 + 64) = sub_19CD05BA0(&qword_1EE43AEC0, &qword_1EE43AEC8, MEMORY[0x1E0DEC620]);
  *(_QWORD *)(v9 + 32) = v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

unint64_t _ErrorTraverser.Iterator.next()()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (_QWORD *)*v0;
  if (!*(_QWORD *)(*v0 + 16))
    return 0;
  v5 = v0;
  while (1)
  {
    v6 = v4[2];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (!v6)
        goto LABEL_11;
    }
    else
    {
      v4 = sub_19CF8153C(v4);
      *v5 = v4;
      if (!v6)
      {
LABEL_11:
        __break(1u);
        return 0;
      }
    }
    v8 = v4[2];
    if (v6 > v8)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v3 = (unint64_t)(v4 + 4);
    v9 = (uint64_t)&v4[5 * v6 - 1];
    v1 = *(_QWORD *)(v9 + 24);
    v2 = *(_QWORD *)(v9 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v9, v1);
    sub_19CFDFFBC();
    *v5 = v4;
    v6 = v13;
    if ((_QWORD)v13)
      break;
    v8 = v4[2];
    if (!v8)
      goto LABEL_19;
    *v5 = v4;
    v6 = v8 - 1;
    __swift_destroy_boxed_opaque_existential_1Tm(v3 + 40 * (v8 - 1));
    v4[2] = v6;
    *v5 = v4;
    if (!v6)
      return v6;
  }
  v10 = (void *)sub_19CFDEC90();
  v11 = objc_msgSend(v10, sel_underlyingErrors);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  v1 = sub_19CFDF86C();

  if (*(_QWORD *)(v1 + 16))
  {
    v3 = v4[2];
    v8 = v4[3];
    v2 = v3 + 1;
    if (v3 < v8 >> 1)
    {
LABEL_15:
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43AED8);
      v15 = sub_19CD05BA0(&qword_1EE43AED0, (uint64_t *)&unk_1EE43AED8, MEMORY[0x1E0DEC908]);
      v13 = (unint64_t)v1;
      v4[2] = v2;
      sub_19CCD14C4(&v13, (uint64_t)&v4[5 * v3 + 4]);
      *v5 = v4;
      return v6;
    }
LABEL_20:
    v4 = sub_19CED55F8((_QWORD *)(v8 > 1), v2, 1, v4);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_19CF808B8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = _ErrorTraverser.Iterator.next()();
  *a1 = result;
  return result;
}

uint64_t _ErrorTraverser.init(startingWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t _ErrorTraverser.allSatisfy(_:)(_OWORD *a1, uint64_t a2)
{
  return sub_19CF80940(a1, a2, (uint64_t)sub_19CF81550, MEMORY[0x1E0DEAAA0]);
}

uint64_t _ErrorPredicate.callAsFunction(_:)()
{
  uint64_t (**v0)(void);

  return (*v0)() & 1;
}

uint64_t _ErrorTraverser.contains(_:)(_OWORD *a1, uint64_t a2)
{
  return sub_19CF80940(a1, a2, (uint64_t)sub_19CF81550, MEMORY[0x1E0DEAB48]);
}

uint64_t sub_19CF80940(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _OWORD *, uint64_t, uint64_t))
{
  uint64_t v7;
  _OWORD v9[3];

  v9[1] = *a1;
  v7 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _ErrorTraverser<A>);
  return a4(a3, v9, a2, v7) & 1;
}

uint64_t _ErrorTraverser.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0C80A78](a1, v3);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  return sub_19CF80594((uint64_t)v8, v5, a2);
}

uint64_t sub_19CF80A28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  _ErrorTraverser.makeIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_19CF80A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_19CF3C188(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_19CF80AA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v0 = sub_19CFDF0F8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1578];
  v24 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A980);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D050760;
  sub_19CFDF0E0();
  sub_19CFDF110();
  v23[1] = sub_19CCC5C88(&qword_1EE43ADD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B0]);
  v6 = sub_19CFDEAB0();
  v8 = v7;
  sub_19CCC5C88(&qword_1EE43ADC8, v1, MEMORY[0x1E0CB1590]);
  sub_19CFDF7F4();
  v9 = v25;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v6;
  v10[3] = v8;
  v10[4] = v9;
  v11 = *(void (**)(char *, uint64_t))(v24 + 8);
  v11(v4, v0);
  *(_QWORD *)(v5 + 32) = sub_19CF81B50;
  *(_QWORD *)(v5 + 40) = v10;
  sub_19CFDF0BC();
  v12 = sub_19CFDEAB0();
  v14 = v13;
  sub_19CFDF7F4();
  v15 = v25;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v16[3] = v14;
  v16[4] = v15;
  v11(v4, v0);
  *(_QWORD *)(v5 + 48) = sub_19CF81B50;
  *(_QWORD *)(v5 + 56) = v16;
  sub_19CFDF0D4();
  v17 = sub_19CFDEAB0();
  v19 = v18;
  sub_19CFDF7F4();
  v20 = v25;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v17;
  v21[3] = v19;
  v21[4] = v20;
  result = ((uint64_t (*)(char *, uint64_t))v11)(v4, v0);
  *(_QWORD *)(v5 + 64) = sub_19CF81B50;
  *(_QWORD *)(v5 + 72) = v21;
  qword_1EE43AE00 = v5;
  return result;
}

uint64_t _ErrorPredicate.init<A, B>(domain:code:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t result;
  uint64_t v11;

  v6 = sub_19CFDEAB0();
  v8 = v7;
  sub_19CFDF7F4();
  v9 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v9 + 2) = v6;
  *((_QWORD *)v9 + 3) = v8;
  *((_QWORD *)v9 + 4) = v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a3 = sub_19CF815BC;
  a3[1] = v9;
  return result;
}

_QWORD *sub_19CF80DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A980);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19D050760;
  v1 = sub_19CFDF578();
  v3 = v2;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = 206;
  *(_QWORD *)(v0 + 32) = sub_19CF81B50;
  *(_QWORD *)(v0 + 40) = v4;
  v5 = sub_19CFDF578();
  v7 = v6;
  result = (_QWORD *)swift_allocObject();
  result[2] = v5;
  result[3] = v7;
  result[4] = 1;
  *(_QWORD *)(v0 + 48) = sub_19CF81B50;
  *(_QWORD *)(v0 + 56) = result;
  *(_QWORD *)(v0 + 64) = sub_19CF81334;
  *(_QWORD *)(v0 + 72) = 0;
  qword_1EE43AE10 = v0;
  return result;
}

uint64_t _ErrorPredicate.init<A>(domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t (*v10)();
  uint64_t result;
  uint64_t v12;

  sub_19CFDF7F4();
  v10 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v10 + 2) = a1;
  *((_QWORD *)v10 + 3) = a2;
  *((_QWORD *)v10 + 4) = v12;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a3, a4);
  *a5 = sub_19CF81B50;
  a5[1] = v10;
  return result;
}

uint64_t (*_ErrorPredicate.init<A>(type:test:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (**a5)(void *a1)@<X8>))(void *a1)
{
  uint64_t (*result)(void *);

  result = (uint64_t (*)(void *))swift_allocObject();
  *((_QWORD *)result + 2) = a3;
  *((_QWORD *)result + 3) = a4;
  *((_QWORD *)result + 4) = a1;
  *((_QWORD *)result + 5) = a2;
  *a5 = sub_19CF815EC;
  a5[1] = result;
  return result;
}

uint64_t sub_19CF80F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_1EE43AE08 != -1)
    swift_once();
  v0 = qword_1EE43AE00;
  if (qword_1EE43AE20 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  sub_19CDC75DC(v1);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  qword_1EE43ADE0 = (uint64_t)sub_19CF81B48;
  unk_1EE43ADE8 = result;
  return result;
}

uint64_t _ErrorPredicate.init<A>(anyOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_19CF815FC;
  a4[1] = (uint64_t (*)(uint64_t))v10;
  return result;
}

uint64_t static _ErrorPredicate.noConnection.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1EE43ADF8 != -1)
    swift_once();
  v2 = unk_1EE43ADE8;
  *a1 = qword_1EE43ADE0;
  a1[1] = v2;
  return swift_retain();
}

uint64_t (*_ErrorPredicate.init(domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>))()
{
  uint64_t (*result)();

  result = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)result + 2) = a1;
  *((_QWORD *)result + 3) = a2;
  *((_QWORD *)result + 4) = a3;
  *a4 = sub_19CF81B50;
  a4[1] = result;
  return result;
}

uint64_t sub_19CF811AC()
{
  void *v0;
  void *v1;
  uint64_t IsEqual;

  v0 = (void *)sub_19CFDEC90();
  v1 = (void *)sub_19CFDF554();
  IsEqual = AMSErrorIsEqual();

  return IsEqual;
}

uint64_t _ErrorPredicate.init<A>(allOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *a4 = sub_19CF81614;
  a4[1] = (uint64_t (*)(uint64_t))v10;
  return result;
}

uint64_t sub_19CF812A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = v2 - 1;
    v6 = a2 + 40;
    do
    {
      v7 = v5;
      v8 = *(uint64_t (**)(uint64_t))(v6 - 8);
      swift_retain();
      LOBYTE(v2) = v8(a1);
      swift_release();
      if ((v2 & 1) != 0)
        break;
      v5 = v7 - 1;
      v6 += 16;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_19CF81334(void *a1)
{
  id v1;
  uint64_t result;
  char v3;
  uint64_t v4;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    result = v4;
    if (v4)
    {
      swift_bridgeObjectRelease();
      return (v3 & 1) == 0;
    }
  }
  return result;
}

uint64_t sub_19CF813A0(void *a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char v20;
  _QWORD v22[2];

  v7 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v22 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = a1;
  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v18 & 1) != 0)
  {
    v19(v11, 0, 1, a4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v11, a4);
    v20 = a2(v16);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a4);
  }
  else
  {
    v19(v11, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v20 = 0;
  }
  return v20 & 1;
}

_QWORD *sub_19CF81500(_QWORD *a1)
{
  return sub_19CED506C(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81514(_QWORD *a1)
{
  return sub_19CED5298(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81528(_QWORD *a1)
{
  return sub_19CED55E4(0, a1[2], 0, a1);
}

_QWORD *sub_19CF8153C(_QWORD *a1)
{
  return sub_19CED55F8(0, a1[2], 0, a1);
}

uint64_t sub_19CF81550(_QWORD *a1)
{
  return sub_19CF81568(a1) & 1;
}

uint64_t sub_19CF81568(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1) & 1;
}

uint64_t sub_19CF81598()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF815BC()
{
  return sub_19CF811AC();
}

uint64_t sub_19CF815C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF815EC(void *a1)
{
  uint64_t v1;

  return sub_19CF813A0(a1, *(uint64_t (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CF815FC(uint64_t a1)
{
  return sub_19CF81628(a1, (uint64_t)sub_19CF81B70, MEMORY[0x1E0DEAB48]);
}

uint64_t sub_19CF81614(uint64_t a1)
{
  return sub_19CF81628(a1, (uint64_t)sub_19CF81AF0, MEMORY[0x1E0DEAAA0]);
}

uint64_t sub_19CF81628(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  _QWORD v4[4];

  v4[2] = a1;
  return a3(a2, v4) & 1;
}

void sub_19CF81688()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF81698(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF81748 + 4 * byte_19D067160[(v7 - 1)]))();
}

void sub_19CF81798(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _ErrorTraverser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ErrorTraverser);
}

uint64_t type metadata accessor for _ErrorTraverser.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ErrorTraverser.Iterator);
}

ValueMetadata *type metadata accessor for _ErrorPredicate()
{
  return &type metadata for _ErrorPredicate;
}

_QWORD *sub_19CF81970(_QWORD *a1)
{
  return sub_19CED5A94(0, a1[2], 0, a1);
}

void sub_19CF81984(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1A1ADA39CLL);
}

_QWORD *sub_19CF819EC(_QWORD *a1)
{
  return sub_19CED5E44(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A00(_QWORD *a1)
{
  return sub_19CD3C6FC(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A14(_QWORD *a1)
{
  return sub_19CED6408(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A28(_QWORD *a1)
{
  return sub_19CED6544(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A3C(_QWORD *a1)
{
  return sub_19CD10844(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A50(_QWORD *a1)
{
  return sub_19CED6678(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A64(_QWORD *a1)
{
  return sub_19CD1A218(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A78(_QWORD *a1)
{
  return sub_19CED69DC(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81A8C(_QWORD *a1)
{
  return sub_19CED69F0(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81AA0(_QWORD *a1)
{
  return sub_19CED6B8C(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81AB4(_QWORD *a1)
{
  return sub_19CED6D10(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81AC8(_QWORD *a1)
{
  return sub_19CED6F3C(0, a1[2], 0, a1);
}

_QWORD *sub_19CF81ADC(_QWORD *a1)
{
  return sub_19CED6F50(0, a1[2], 0, a1);
}

uint64_t sub_19CF81AF0(uint64_t (**a1)(_QWORD))
{
  uint64_t v1;

  return (*a1)(*(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_19CF81B24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF81B48(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF812A0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CF81B70(uint64_t (**a1)(_QWORD))
{
  return sub_19CF81AF0(a1) & 1;
}

uint64_t sub_19CF81B88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8CC2C(a1, *a2, a3);
}

uint64_t sub_19CF81B90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF8AED8(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF81BB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8CA48(a1, *a2, a3);
}

double sub_19CF81BC4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_19CF8E344(a1, *a2, a3).n128_u64[0];
  return result;
}

unint64_t sub_19CF81BCC@<X0>(uint64_t a1@<X0>, id *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t result;
  unint64_t v6;

  result = sub_19CF8F91C(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void ExpressibleByJSON<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v7 = sub_19CFE01B4();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v21 - v13;
  JSONObject.decode<A>(_:using:)(a3, a2);
  if (v3)
  {
    v23 = v3;
    v15 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if ((swift_dynamicCast() & 1) != 0)
    {

      v16 = v22;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v10, v7);
      sub_19CDC5494();
      swift_allocError();
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v19 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v20, v14, v7);
      *v18 = a3;
      v18[1] = v19;
      v18[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19CD3E3F8(a1);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v7);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_19CD3E3F8(a1);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
  }
}

unint64_t sub_19CF81E04@<X0>(uint64_t a1@<X0>, void **a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result;
  unint64_t v5;

  result = sub_19CF8E170(a1, *a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

double sub_19CF81E2C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8D5D0(a1, *a2, a3);
}

double sub_19CF81E34@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CD53624(a1, *a2, a3);
}

double sub_19CF81E3C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8D9B0(a1, *a2, a3);
}

double sub_19CF81E44@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CD42198(a1, *a2, a3);
}

void sub_19CF81E4C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_19CF8F714(a1, *a2, a3);
}

double sub_19CF81E64@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8DDA8(a1, *a2, a3);
}

double sub_19CF81E6C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8C56C(a1, *a2, a3);
}

uint64_t sub_19CF81E74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BC9C(a1, *a2, a3);
}

uint64_t sub_19CF81E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = sub_19CF8C750(a1);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_19CF81EA8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_19CF8AE24(a1, a2);
}

double sub_19CF81EB0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8CE0C(a1, *a2, a3);
}

unint64_t sub_19CF81EB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result;
  char v5;

  result = sub_19CF8DFA0(a1, *a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

double sub_19CF81EE8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_19CF8DB94(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19CF81EF0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8D7A8(a1, *a2, a3);
}

uint64_t sub_19CF81EF8(uint64_t a1, _QWORD *a2)
{
  return sub_19CD42194(a1, *a2);
}

uint64_t sub_19CF81F00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8C544(a1, *a2, a3);
}

uint64_t sub_19CF81F08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BA7C(a1, *a2, a3);
}

double sub_19CF81F10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF8BA90(a1, a2);
}

uint64_t sub_19CF81F18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_19CF8C930(a1, a2);
}

uint64_t sub_19CF81F20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8C558(a1, *a2, a3);
}

void sub_19CF81F28(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_19CF8F514(a1, *a2, a3);
}

uint64_t sub_19CF81F40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CF8B280(a1, *a2, a3);
}

double sub_19CF81F48@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_19CF8BF14(a1, *a2, a3).n128_u64[0];
  return result;
}

uint64_t dispatch thunk of ExpressibleByJSON.init(tryDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_19CF81F58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8DF8C(a1, *a2, a3);
}

double sub_19CF81F60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF8D1F0(a1, a2);
}

double sub_19CF81F68@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8CFE4(a1, *a2, a3);
}

double sub_19CF81F70@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_19CF8C348(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19CF81F78@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8C124(a1, *a2, a3);
}

double sub_19CF81F80@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8D3EC(a1, *a2, a3);
}

void sub_19CF81F88(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_19CF8F30C(a1, *a2, a3);
}

double sub_19CF81FA0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8B0A0(a1, *a2, a3);
}

uint64_t sub_19CF81FA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8B65C(a1, *a2, a3);
}

double sub_19CF81FB0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_19CF8B854(a1, *a2, a3).n128_u64[0];
  return result;
}

double sub_19CF81FB8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_19CF8B454(a1, *a2, a3);
}

uint64_t CookieProvider.init(accountProvider:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCD14C4(a1, a2);
}

ValueMetadata *type metadata accessor for CookieProvider()
{
  return &type metadata for CookieProvider;
}

uint64_t storeEnumTagSinglePayload for ImpressionsSnapshotMetricsFieldsProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF82024 + 4 * byte_19D0672A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF82058 + 4 * asc_19D0672A0[v4]))();
}

uint64_t sub_19CF82058(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF82060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF82068);
  return result;
}

uint64_t sub_19CF82074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF8207CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF82080(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF82088(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsSnapshotMetricsFieldsProvider()
{
  return &type metadata for ImpressionsSnapshotMetricsFieldsProvider;
}

uint64_t sub_19CF820A4(uint64_t a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[4];

  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = *v2;
  swift_bridgeObjectRetain();
  v13 = sub_19CDF2194(0xD000000000000026, 0x800000019D06F290, v11);
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v13)
  {
    ObjectType = swift_getObjectType();
    LOBYTE(v35[0]) = v12;
    sub_19CFDEF78();
    (*(void (**)(__int128 *__return_ptr, _QWORD *, char *, uint64_t, uint64_t))(v15 + 56))(&v33, v35, v10, ObjectType, v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v17 = v33;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    *((_QWORD *)&v34 + 1) = v18;
    *(_QWORD *)&v33 = v17;
    v19 = *(_QWORD *)(a1 + 24);
    v20 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v19);
    v21 = *(void (**)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    v21(&v33, 0x6973736572706D69, 0xEB00000000736E6FLL, v19, v20);
    if (!v3)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
      *((_QWORD *)&v34 + 1) = v18;
      *(_QWORD *)&v33 = *((_QWORD *)&v17 + 1);
      v22 = *(_QWORD *)(a1 + 24);
      v23 = *(_QWORD *)(a1 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(a1, v22);
      v24 = *(void (**)(__int128 *, uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 16);
      swift_bridgeObjectRetain();
      v24(&v33, 0x4363696D616E7964, 0xEE007365676E6168, v22, v23);
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
  }
  else
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v26 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v27 = swift_allocObject();
    v32 = xmmword_19D0522A0;
    *(_OWORD *)(v27 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v28 = swift_allocObject();
    v29 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v28 + 16) = v32;
    v35[3] = v29;
    v35[0] = 0xD000000000000037;
    v35[1] = 0x800000019D078B10;
    v33 = 0u;
    v34 = 0u;
    v30 = v26;
    sub_19CD40658((uint64_t)v35, (uint64_t)&v33);
    *(_BYTE *)(v28 + 64) = 0;
    v31 = v34;
    *(_OWORD *)(v28 + 32) = v33;
    *(_OWORD *)(v28 + 48) = v31;
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)&v33 = v30;
    LOBYTE(v35[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)v35);

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CF823B8(uint64_t a1, uint64_t *a2)
{
  return sub_19CF820A4(a1, a2);
}

uint64_t sub_19CF823CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_19CFDFA4C();
  v5 = sub_19CFDFF5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  v6 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v4);
}

uint64_t sub_19CF82450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDFA1C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, v4, v11);
  sub_19CFDFA4C();
  sub_19CFDFA40();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t _AsyncChannel.Receiver.next()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF82564()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  sub_19CFDFA70();
  *v1 = v0;
  v1[1] = sub_19CF825F0;
  return sub_19CFDFA64();
}

uint64_t sub_19CF825F0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t _AsyncChannel.Receiver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_19CFDFA4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v4 = sub_19CFDFA70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t _AsyncChannel.Receiver.__deallocating_deinit()
{
  return sub_19CF82DDC((void (*)(void))_AsyncChannel.Receiver.deinit);
}

uint64_t sub_19CF826CC(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CE7329C;
  v5[5] = a1;
  v5[6] = v4;
  v5[7] = *v4;
  return swift_task_switch();
}

uint64_t static _AsyncChannel.BufferingPolicy.bufferingNewest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF82750(a1, MEMORY[0x1E0DF07A8], a2);
}

uint64_t static _AsyncChannel.BufferingPolicy.bufferingOldest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF82750(a1, MEMORY[0x1E0DF07B0], a2);
}

uint64_t sub_19CF82750@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v6 = sub_19CFDFA34();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v13 - v10;
  *(uint64_t *)((char *)&v13 - v10) = a1;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v7 + 104))((char *)&v13 - v10, *a2, v6, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v11, v6);
}

uint64_t static _AsyncChannel.BufferingPolicy.unbounded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_19CFDFA34();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2, v4);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v9 - v6, *MEMORY[0x1E0DF07B8], v2, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v7, v2);
}

_QWORD *_AsyncChannel.__allocating_init(bufferingPolicy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  swift_allocObject();
  v4 = sub_19CF830F4(a1);
  v7 = type metadata accessor for _AsyncChannel.BufferingPolicy(0, *(_QWORD *)(v2 + 80), v5, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v4;
}

_QWORD *_AsyncChannel.init(bufferingPolicy:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = sub_19CF830F4(a1);
  v7 = type metadata accessor for _AsyncChannel.BufferingPolicy(0, *(_QWORD *)(v3 + 80), v5, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v4;
}

id _AsyncChannel.yield(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  _QWORD v23[3];

  v2 = v1;
  v4 = *v1;
  v5 = (void *)v2[2];
  objc_msgSend(v5, sel_lock);
  v21 = *(_QWORD *)(v4 + 80);
  v6 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 112));
  swift_beginAccess();
  v9 = type metadata accessor for _AsyncChannel.WeakReceiver(255, v21, v7, v8);
  v10 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF28], v10);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v10);
  sub_19CFDFCBC();
  swift_endAccess();
  v23[0] = *v6;
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v10);
  if ((sub_19CFDFC5C() & 1) != 0)
  {
    swift_beginAccess();
    swift_retain();
    sub_19CF82450(a1, v11);
    swift_release();
    return objc_msgSend(v5, sel_unlock);
  }
  objc_msgSend(v5, sel_unlock);
  v13 = *v6;
  v14 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1A1AD9B44](v14, v9))
    return (id)swift_bridgeObjectRelease();
  v15 = 0;
  for (i = v13 + 32; ; i += 8)
  {
    v17 = sub_19CFDF8D8();
    sub_19CFDF890();
    if ((v17 & 1) == 0)
      break;
    v18 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 16))(v23, i, v9);
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_12;
LABEL_8:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 32))(v22, v23, v9);
    if (swift_weakLoadStrong())
    {
      sub_19CF82450(a1, v20);
      swift_release();
    }
    (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v22, v9);
    ++v15;
    if (v19 == MEMORY[0x1A1AD9B44](v13, v9))
      return (id)swift_bridgeObjectRelease();
  }
  v22[0] = sub_19CFE0160();
  v18 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v23, v22, v9);
  swift_unknownObjectRelease();
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
    goto LABEL_8;
LABEL_12:
  __break(1u);
  return (id)swift_bridgeObjectRelease();
}

uint64_t _AsyncChannel.makeAsyncIterator()()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  v2 = (void *)v0[2];
  sub_19CD0C664();
  type metadata accessor for _AsyncChannel.Receiver(0, *(_QWORD *)(v1 + 80), v3, v4);
  withLock<A, B>(_:_:)(v2, (void (*)(id))sub_19CF831E4);
  return v6;
}

uint64_t sub_19CF82C40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  type metadata accessor for _AsyncChannel.Receiver(0, v7, a2, a3);
  v8 = (uint64_t)a1 + *(_QWORD *)(v6 + 96);
  swift_allocObject();
  *a4 = sub_19CF82E3C(v8);
  swift_beginAccess();
  sub_19CFE0814();
  swift_endAccess();
  swift_retain();
  sub_19CF022B0();
  swift_beginAccess();
  type metadata accessor for _AsyncChannel.WeakReceiver(255, v7, v9, v10);
  sub_19CFDF938();
  sub_19CFDF908();
  return swift_endAccess();
}

id *_AsyncChannel.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;

  v2 = (char *)v0 + *((_QWORD *)*v0 + 12);
  v5 = type metadata accessor for _AsyncChannel.BufferingPolicy(0, v1[10], v3, v4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _AsyncChannel.__deallocating_deinit()
{
  return sub_19CF82DDC((void (*)(void))_AsyncChannel.deinit);
}

uint64_t sub_19CF82DDC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF82E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _AsyncChannel.makeAsyncIterator()();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_19CF82E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v37 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = sub_19CFDFA70();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v42 = (char *)&v35 - v5;
  v6 = sub_19CFDFA4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v41 = (char *)&v35 - v9;
  v36 = sub_19CFDFA34();
  v10 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36, v11);
  v13 = (char *)&v35 - v12;
  v14 = sub_19CFDFA7C();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v35 - v16;
  v18 = sub_19CFDFF5C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)&v35 - v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56))((char *)&v35 - v26, 1, 1, v6, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v37, v36);
  v45 = v2;
  v46 = v27;
  nullsub_1(v2);
  v28 = v18;
  sub_19CFDFA88();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v27, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    __break(1u);
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v30 = v41;
    v29(v41, v22, v6);
    v31 = v40;
    v29((char *)(v40 + *(_QWORD *)(*(_QWORD *)v40 + 88)), v30, v6);
    v32 = v42;
    v33 = v39;
    sub_19CFDFA58();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v33);
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v31 + *(_QWORD *)(*(_QWORD *)v31 + 96), v32, v44);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v28);
    return v31;
  }
  return result;
}

_QWORD *sub_19CF830F4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = *v2;
  v2[2] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v5 = (char *)v2 + *(_QWORD *)(*v2 + 96);
  v6 = *(_QWORD *)(v4 + 80);
  v9 = type metadata accessor for _AsyncChannel.BufferingPolicy(0, v6, v7, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v5, a1, v9);
  type metadata accessor for _AsyncChannel.Receiver(0, v6, v10, v11);
  swift_allocObject();
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = sub_19CF82E3C(a1);
  type metadata accessor for _AsyncChannel.WeakReceiver(0, v6, v12, v13);
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 112)) = sub_19CFDF8B4();
  return v2;
}

uint64_t type metadata accessor for _AsyncChannel.BufferingPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncChannel.BufferingPolicy);
}

uint64_t type metadata accessor for _AsyncChannel.WeakReceiver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncChannel.WeakReceiver);
}

uint64_t sub_19CF831E4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_19CF82C40(v3, a1, a2, a3);
}

uint64_t type metadata accessor for _AsyncChannel.Receiver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncChannel.Receiver);
}

void sub_19CF83208()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF83218()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDFA34();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _AsyncChannel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncChannel);
}

uint64_t method lookup function for _AsyncChannel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _AsyncChannel.__allocating_init(bufferingPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_19CF832D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_19CFDFA4C();
  if (v1 <= 0x3F)
  {
    result = sub_19CFDFA70();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _AsyncChannel.Receiver()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_19CF83374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDFA34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19CF833E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_19CF83420(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CFDFA34();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_19CF83458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_19CF834A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_19CF834E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_19CF83530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_19CF83578()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF83584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_19CF835C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF835D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDFA34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_19CF83614(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF823CC(a1, *(_QWORD *)(v1 + 24));
}

uint64_t AppleServicesFetcherInstrumented.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AppleServicesFetcherInstrumented.fetch(contentsOf:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 232) = *(_QWORD *)a1;
  *(_OWORD *)(v2 + 240) = *(_OWORD *)(a1 + 8);
  *(_BYTE *)(v2 + 153) = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(v2 + 256) = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF83658()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CF836CC;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCE8808();
  sub_19CCE87C8(v1);
  return swift_continuation_await();
}

uint64_t sub_19CF836CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 296) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 304) = *(_QWORD *)(v1 + 160);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF83748()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 304));
}

uint64_t sub_19CF83794()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 280);
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF837E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v3 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    v4 = 6;
  else
    v4 = 5;
  v5 = qword_1EE43BB80;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (os_unfair_lock_s *)(qword_1EE465C60 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE465C60 + 40));
  sub_19CCC84D8(v2, v1, v4, &v9);
  os_unfair_lock_unlock(v6);
  v7 = v9;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t static ActionDispatcher.Builder.buildBlock(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[4];

  v9[3] = a1;
  ActionDispatcher.init()(a2, a3, a4, v9);
  type metadata accessor for ActionDispatcher(255, a2, v5, v6);
  v7 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v7);
  return sub_19CFDF7C4();
}

uint64_t sub_19CF83974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for ActionDispatcher(0, *(_QWORD *)(v4 + 16), a3, a4);
  return ActionDispatcher.add(contentsOf:)(a2, v6);
}

void static ActionDispatcher.Builder.buildExpression<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14[3];

  ActionDispatcher.init()(a2, a3, a4, v14);
  v12 = type metadata accessor for ActionDispatcher(0, a2, v10, v11);
  ActionDispatcher.adding<A>(_:)(a1, v12, a3, a4, a5);
  v13 = (id)v14[2];
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t static ActionDispatcher.Builder.buildOptional(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = *a1;
  v6 = a1[1];
  v7 = (void *)a1[2];
  if (*a1)
  {
    *a5 = v5;
    a5[1] = v6;
    a5[2] = (uint64_t)v7;
  }
  else
  {
    ActionDispatcher.init()(a2, a3, a4, a5);
  }
  return sub_19CD24A40(v5, v6, v7);
}

uint64_t _s9JetEngine16ActionDispatcherV7BuilderO11buildEither5firstACyxGAH_tFZ_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = a1[1];
  v3 = (void *)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  v4 = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ActionDispatcher.init(implementations:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for ActionDispatcher.Builder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionDispatcher.Builder);
}

unsigned __int8 *sub_19CF83B0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  FILE *v7;
  unsigned __int8 *v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  char *v16;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  uint64_t v26;
  _QWORD *v27;
  size_t __linecapp[2];
  __int128 v29;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  char v33;
  char *__linep[5];

  __linep[4] = *(char **)MEMORY[0x1E0C80C00];
  v2 = sub_19CFDEA14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)__linecapp - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BB70);
  sub_19CFDED68();
  v7 = (FILE *)v31;
  if (!(_QWORD)v31)
  {
    if (qword_1ECEB2C88 != -1)
      swift_once();
    v12 = (void *)qword_1ECEB29D0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v14 = v12;
    v27 = sub_19CD40918(0, 29, 0, MEMORY[0x1E0DEE9D8]);
    v15._countAndFlagsBits = 0xD00000000000001CLL;
    v15._object = (void *)0x800000019D078BF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v16 = (char *)sub_19CFDEDE0();
    __linep[3] = v16;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)__linep);
    (*(void (**)(uint64_t *, uint64_t, char *))(*((_QWORD *)v16 - 1) + 16))(boxed_opaque_existential_2Tm, a1, v16);
    sub_19CD40794((uint64_t)__linep, (uint64_t)v30);
    *(_OWORD *)__linecapp = 0u;
    v29 = 0u;
    sub_19CD40658((uint64_t)v30, (uint64_t)__linecapp);
    v33 = 0;
    v31 = *(_OWORD *)__linecapp;
    v32 = v29;
    v18 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[5 * v20];
    v22 = v31;
    v23 = v32;
    *((_BYTE *)v21 + 64) = v33;
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    v27 = v18;
    sub_19CD3F190((uint64_t)__linep);
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v13 + 32) = v27;
    *(_QWORD *)&v31 = v14;
    LOBYTE(__linecapp[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)__linecapp);

    swift_bridgeObjectRelease();
    return 0;
  }
  __linecapp[0] = 0;
  __linep[0] = 0;
  if (getline(__linep, __linecapp, (FILE *)v31) == -1)
  {
LABEL_24:
    fclose(v7);
    if (__linep[0])
      MEMORY[0x1A1ADBE9C](__linep[0], -1, -1);
    return 0;
  }
  while (1)
  {
    v8 = (unsigned __int8 *)__linep[0];
    if (!__linep[0])
    {
      fclose(v7);
      return v8;
    }
    v9 = __linecapp[0];
    if (((unint64_t)"ceProvider.swift" & 0x1000000000000000) != 0)
    {
      v11 = sub_19CFDF6D4();
    }
    else
    {
      if (((unint64_t)"ceProvider.swift" & 0x2000000000000000) == 0)
      {
        if ((uint64_t)__linecapp[0] >= 21)
          v10 = 21;
        else
          v10 = __linecapp[0];
        goto LABEL_13;
      }
      v11 = (0x800000019D078BD0 >> 56) & 0xF;
    }
    v10 = v11 >= v9 ? v9 : v11;
LABEL_13:
    if ((sub_19CE07990(0xD000000000000015, 0x800000019D078BD0, v8, v10) & 1) != 0)
      break;
    if (getline(__linep, __linecapp, v7) == -1)
      goto LABEL_24;
  }
  if (((unint64_t)"ceProvider.swift" & 0x1000000000000000) != 0)
    sub_19CFDF6D4();
  *(_QWORD *)&v31 = sub_19CFDF6B0();
  *((_QWORD *)&v31 + 1) = v26;
  sub_19CFDEA08();
  sub_19CD41144();
  v8 = (unsigned __int8 *)sub_19CFDFFF8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  fclose(v7);
  if (__linep[0])
    MEMORY[0x1A1ADBE9C](__linep[0], -1, -1);
  return v8;
}

uint64_t JSSourceProvider.supportsBytecodeCaching.getter()
{
  return 0;
}

uint64_t JSSourceProvider.isUsingBytecodeCache.getter()
{
  return 0;
}

void sub_19CF83F38()
{
  sub_19CFAB350((unint64_t)"JetEngine/JSSourceProvider.swift", 0x20uLL, 2, 0x41uLL);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSSourceProvider.cacheBytecode()()
{
  sub_19CFAB350((unint64_t)"JetEngine/JSSourceProvider.swift", 0x20uLL, 2, 0x41uLL);
}

uint64_t dispatch thunk of JSSourceProvider.evaluate(against:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSSourceProvider.supportsBytecodeCaching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JSSourceProvider.isUsingBytecodeCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of JSSourceProvider.cacheBytecode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

FILE *sub_19CF83FE8@<X0>(const char *a1@<X0>, FILE **a2@<X8>)
{
  FILE *result;

  result = fopen(a1, "r");
  *a2 = result;
  return result;
}

uint64_t sub_19CF8401C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v4 = sub_19CFDEA14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  v22 = a2;
  v19 = 0xD000000000000015;
  v20 = 0x800000019D078BD0;
  sub_19CF841A0();
  sub_19CF841E4();
  sub_19CFDF4DC();
  v9 = 0;
  if ((v17 & 1) != 0)
    return v9;
  result = v16;
  v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v11 = a1 & 0xFFFFFFFFFFFFLL;
  if (4 * v11 >= v16 >> 14)
  {
    v15 = sub_19CFDF764();
    v16 = v12;
    v17 = v13;
    v18 = v14;
    sub_19CFDE9FC();
    sub_19CF84228();
    v9 = sub_19CFDFFF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

unint64_t sub_19CF841A0()
{
  unint64_t result;

  result = qword_1EE43A708;
  if (!qword_1EE43A708)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE43A708);
  }
  return result;
}

unint64_t sub_19CF841E4()
{
  unint64_t result;

  result = qword_1EE4434D8;
  if (!qword_1EE4434D8)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE4434D8);
  }
  return result;
}

unint64_t sub_19CF84228()
{
  unint64_t result;

  result = qword_1EE4434E0;
  if (!qword_1EE4434E0)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE4434E0);
  }
  return result;
}

uint64_t sub_19CF8426C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  uint64_t result;
  uint64_t v45;
  objc_class *ObjectType;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;
  _QWORD *v55;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_19CFDEFA8();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v5 = sub_19CFE0394();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v49 = a1 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v7 = 4;
      v48 = a1;
      do
      {
        if (v49)
          v8 = (id)MEMORY[0x1A1ADA390](v7 - 4, a1);
        else
          v8 = *(id *)(a1 + 8 * v7);
        v9 = v8;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        v53 = v7 - 3;
        v10 = v50;
        sub_19CFDEF9C();
        v11 = sub_19CFDEF90();
        v13 = v12;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
        a1 = v9;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = v6;
        v16 = sub_19CD3FD1C(v11, v13);
        v17 = v6[2];
        v18 = (v15 & 1) == 0;
        v19 = v17 + v18;
        if (__OFADD__(v17, v18))
          goto LABEL_29;
        v20 = v15;
        if (v6[3] >= v19)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v6 = v55;
            if ((v15 & 1) != 0)
              goto LABEL_17;
          }
          else
          {
            sub_19CE1BAAC();
            v6 = v55;
            if ((v20 & 1) != 0)
              goto LABEL_17;
          }
        }
        else
        {
          sub_19CE169CC(v19, isUniquelyReferenced_nonNull_native);
          v21 = sub_19CD3FD1C(v11, v13);
          if ((v20 & 1) != (v22 & 1))
          {
            result = sub_19CFE082C();
            __break(1u);
            return result;
          }
          v16 = v21;
          v6 = v55;
          if ((v20 & 1) != 0)
          {
LABEL_17:
            v23 = v6[7];
            v24 = 8 * v16;

            *(_QWORD *)(v23 + v24) = a1;
            goto LABEL_21;
          }
        }
        v6[(v16 >> 6) + 8] |= 1 << v16;
        v25 = (uint64_t *)(v6[6] + 16 * v16);
        *v25 = v11;
        v25[1] = v13;
        *(_QWORD *)(v6[7] + 8 * v16) = a1;
        v26 = v6[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_30;
        v6[2] = v28;
        swift_bridgeObjectRetain();
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = qword_1EE43D6F0;
        v30 = (id)a1;
        if (v29 != -1)
          swift_once();
        v31 = -[_JEAtomicFlag currentValue](qword_1EE441CA8);
        a1 = v48;
        if ((v31 & 1) != 0)
        {
          if (qword_1EE43D6F8 != -1)
            swift_once();
          v32 = qword_1EE465D18;
          swift_retain();
          sub_19CE74144(v30, v32);

          swift_release();
        }
        else
        {

        }
        ++v7;
      }
      while (v53 != v5);
    }
  }
  swift_bridgeObjectRelease();
  v33 = sub_19CDDE100();
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v35 = *(void **)&v47[OBJC_IVAR____TtC9JetEngine24AMSMetricsWithInspection_urlSession];
    v36 = (uint64_t *)(v33 + 48);
    do
    {
      v37 = *(v36 - 2);
      v38 = *(v36 - 1);
      v39 = *v36;
      v36 += 3;
      swift_bridgeObjectRetain();
      v40 = swift_bridgeObjectRetain();
      v41 = sub_19CDB8250(v40);
      swift_bridgeObjectRelease();
      sub_19CFC5D90(v41, v35, v37, v38, v39);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      --v34;
    }
    while (v34);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CCE5204(0, (unint64_t *)&qword_1EE43C2B8);
  v42 = (void *)sub_19CFDF854();
  v54.receiver = v47;
  v54.super_class = ObjectType;
  v43 = objc_msgSendSuper2(&v54, sel_promiseForEnqueueingEvents_, v42);

  return (uint64_t)v43;
}

void sub_19CF8477C()
{
  swift_unknownObjectRetain();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InMemoryJetPackResourceBundle.contentsOfDirectory(atPath:)(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_19CD163D0(v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_19CF84848()
{
  unint64_t result;

  result = qword_1EE4434F8;
  if (!qword_1EE4434F8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackResourceBundleMissingFileError, &type metadata for JetPackResourceBundleMissingFileError);
    atomic_store(result, (unint64_t *)&qword_1EE4434F8);
  }
  return result;
}

_QWORD *assignWithCopy for InMemoryJetPackResourceBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for InMemoryJetPackResourceBundle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for InMemoryJetPackResourceBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_19CF84BA8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

char *sub_19CF84C28(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstraintTreatmentFilter()
{
  return &type metadata for ConstraintTreatmentFilter;
}

uint64_t sub_19CF84CB0(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  __int128 v14;
  _BYTE v15[40];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_19CD5227C(0, v2, 0);
    v3 = v18;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *v6;
      *(_QWORD *)&v16 = *(v6 - 1);
      *((_QWORD *)&v16 + 1) = v7;
      swift_bridgeObjectRetain_n();
      sub_19CFE00C4();
      if (*(_QWORD *)(a2 + 16) && (v8 = sub_19CD20240((uint64_t)v15), (v9 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(a2 + 56) + 32 * v8, (uint64_t)&v13);
      }
      else
      {
        v13 = 0u;
        v14 = 0u;
      }
      sub_19CD20334((uint64_t)v15);
      if (*((_QWORD *)&v14 + 1))
      {
        sub_19CD433C0(&v13, &v16);
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
        *(_QWORD *)&v16 = MEMORY[0x1E0DEE9E0];
        sub_19CD3F190((uint64_t)&v13);
      }
      swift_bridgeObjectRelease();
      v18 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_19CD5227C(v10 > 1, v11 + 1, 1);
        v3 = v18;
      }
      v6 += 2;
      *(_QWORD *)(v3 + 16) = v11 + 1;
      sub_19CD433C0(&v16, (_OWORD *)(v3 + 32 * v11 + 32));
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t JetPackDataStreamSource.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (char *)a3 + *(int *)(type metadata accessor for JetPackDataStreamSource() + 24);
  v7 = sub_19CFDEDE0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = 0;
  return result;
}

uint64_t type metadata accessor for JetPackDataStreamSource()
{
  uint64_t result;

  result = qword_1EE43D038;
  if (!qword_1EE43D038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t JetPackDataStreamSource.init(data:dataSourceURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for JetPackDataStreamSource();
  a4[2] = 0;
  a4[3] = 0;
  return sub_19CEDEE18(a3, (uint64_t)a4 + *(int *)(v6 + 24));
}

uint64_t JetPackDataStreamSource.makeStream()()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = v0[1];
  v3 = objc_allocWithZone(MEMORY[0x1E0D41868]);
  sub_19CD3BE5C(v1, v2);
  v4 = (void *)sub_19CFDEE58();
  v5 = objc_msgSend(v3, sel_initWithData_, v4);
  sub_19CD3BE18(v1, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = 1;
  return v6;
}

uint64_t sub_19CF84FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t result;
  _BYTE v5[16];
  uint64_t v6[2];

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (qword_1ECEB0870 != -1)
      swift_once();
    v6[0] = v2;
    v6[1] = v1;
    v3 = *(os_unfair_lock_s **)(qword_1ECEB5270 + 16);
    swift_retain();
    os_unfair_lock_lock(v3 + 6);
    sub_19CF8797C(v6, (uint64_t)v5);
    os_unfair_lock_unlock(v3 + 6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_19CF850A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6[2];

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (qword_1ECEB0870 != -1)
      swift_once();
    v6[0] = v2;
    v6[1] = v1;
    v3 = *(os_unfair_lock_s **)(qword_1ECEB5270 + 16);
    swift_retain();
    os_unfair_lock_lock(v3 + 6);
    sub_19CF87940(v6, &v5);
    os_unfair_lock_unlock(v3 + 6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CF85174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CD3BB88(v2 + *(int *)(a1 + 24), a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_19CD3BE5C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_19CFDEDE0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for JetPackDataStreamSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_19CD3BE18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t *initializeWithCopy for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v6 = *a2;
  v7 = a2[1];
  sub_19CD3BE5C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_19CFDEDE0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t *assignWithCopy for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_19CD3BE5C(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_19CD3BE18(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_19CFDEDE0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for JetPackDataStreamSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t *assignWithTake for JetPackDataStreamSource(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19CD3BE18(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)(a2 + v9);
  v12 = sub_19CFDEDE0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackDataStreamSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF85740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackDataStreamSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF857D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_19CF85850()
{
  unint64_t v0;

  sub_19CCC8A30();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_19CF858CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    sub_19CDBAADC();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    sub_19CFDE9C0();
    swift_allocObject();
    sub_19CFDE9B4();
    sub_19CF86BA0();
    sub_19CFDE9A8();
    v4 = v3;
    result = swift_release();
    if (!v1)
      __asm { BR              X11 }
  }
  return result;
}

uint64_t sub_19CF85B8C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_BYTE *)(v0 + 56))
  {
    sub_19CF875B0();
    swift_allocError();
    *v2 = 0;
    return swift_willThrow();
  }
  else
  {
    v4 = v0;
    v5 = (_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v4 + 48);
    __swift_project_boxed_opaque_existential_1(v5, v6);
    result = sub_19CDEA794(v6, v7);
    if (!v1)
    {
      v8 = result;
      v9 = *(_QWORD *)(v4 + 40);
      v10 = *(_QWORD *)(v4 + 48);
      __swift_project_boxed_opaque_existential_1(v5, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v8, v9, v10);
      __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t sub_19CF85DAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE v21[40];
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  __int128 v25[3];
  void *v26;

  v5 = *v2;
  v6 = v2[1];
  v7 = (void *)v2[2];
  sub_19CCD5B84(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15C0);
  inited = swift_initStackObject();
  v9 = inited + 16;
  sub_19CCD14C4(v25, inited + 16);
  *(_BYTE *)(inited + 56) = 0;
  sub_19CF85B8C();
  if (!v3)
  {
    v26 = v7;
    v10 = v22[1];
    v12 = v23;
    v11 = v24;
    if (*(_BYTE *)(inited + 56) == 1)
    {
      v19 = v23;
      v20 = v24;
      v13 = v22[0];
      sub_19CCD5B84(v9, (uint64_t)v22);
      sub_19CCD5B84(a2, (uint64_t)v21);
      type metadata accessor for CommonCryptoAESGCMCryptor();
      swift_allocObject();
      sub_19CD3BE5C(v5, v6);
      sub_19CD3BE5C(v13, v10);
      sub_19CF86898((uint64_t)v22, (uint64_t)v21, v5, v6, v13, v10, 1, (uint64_t)v26);
      sub_19CF8600C();
      v26 = sub_19CF86268(v19, v20);
      v18 = v17;
      swift_release();
      swift_setDeallocating();
      __swift_destroy_boxed_opaque_existential_1Tm(v9);
      sub_19CD3BE18(v13, v10);
      sub_19CD3BE18(v19, v20);
      return sub_19CD3BE18((uint64_t)v26, v18);
    }
    v14 = v22[0];
    sub_19CF875B0();
    swift_allocError();
    *v15 = 0;
    swift_willThrow();
    sub_19CD3BE18(v14, v10);
    sub_19CD3BE18(v12, v11);
  }
  swift_setDeallocating();
  return __swift_destroy_boxed_opaque_existential_1Tm(v9);
}

uint64_t sub_19CF8600C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  _CCCryptor *v13;
  int64_t OutputLength;
  int64_t v15;
  void *v16;
  int64_t v17;
  CCCryptorStatus v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CCCryptorStatus v23;
  size_t v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v0 + 136) & 1) != 0)
  {
    sub_19CF86B5C();
    swift_allocError();
    v3 = 2;
    *(_DWORD *)v2 = 2;
LABEL_3:
    *(_BYTE *)(v2 + 4) = v3;
    return swift_willThrow();
  }
  else
  {
    v5 = v0;
    v6 = (_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), v7);
    for (result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
          (result & 1) != 0;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
    {
      v9 = *(_QWORD *)(v5 + 48);
      v10 = *(_QWORD *)(v5 + 56);
      __swift_project_boxed_opaque_existential_1(v6, v9);
      v11 = *(_QWORD *)(v5 + 128);
      result = (*(uint64_t (**)(_QWORD, size_t, uint64_t, uint64_t))(v10 + 32))(*(_QWORD *)(v5 + 104), v11, v9, v10);
      if (v1)
        break;
      v12 = result;
      if (result < 1)
        goto LABEL_15;
      v13 = *(_CCCryptor **)(v5 + 16);
      OutputLength = CCCryptorGetOutputLength(v13, v11, 1);
      v16 = *(void **)(v5 + 112);
      v15 = *(_QWORD *)(v5 + 120);
      if (v15 < OutputLength)
      {
        v17 = OutputLength;
        if (v16)
          MEMORY[0x1A1ADBE9C](*(_QWORD *)(v5 + 112), -1, -1);
        v16 = (void *)swift_slowAlloc();
        *(_QWORD *)(v5 + 112) = v16;
        *(_QWORD *)(v5 + 120) = v17;
        v15 = v17;
      }
      if (!v16)
      {
LABEL_15:
        sub_19CF86B5C();
        swift_allocError();
        *(_DWORD *)v2 = 4;
        v3 = 2;
        goto LABEL_3;
      }
      v24[0] = 0;
      v18 = CCCryptorUpdate(v13, *(const void **)(v5 + 104), v12, v16, v15, v24);
      if (v18)
      {
        v23 = v18;
        sub_19CF86B5C();
        swift_allocError();
        *(_DWORD *)v2 = v23;
        v3 = 1;
        goto LABEL_3;
      }
      v19 = *(_QWORD *)(v5 + 88);
      v20 = *(_QWORD *)(v5 + 96);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 64), v19);
      (*(void (**)(void *, size_t, uint64_t, uint64_t))(v20 + 16))(v16, v24[0], v19, v20);
      v21 = *(_QWORD *)(v5 + 48);
      v22 = *(_QWORD *)(v5 + 56);
      __swift_project_boxed_opaque_existential_1(v6, v21);
    }
  }
  return result;
}

void *sub_19CF86268(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *result;
  CCCryptorStatus v9;
  CCCryptorStatus v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t dataOutMoved;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v2 + 136) & 1) != 0)
  {
    sub_19CF86B5C();
    swift_allocError();
    v5 = 2;
    *(_DWORD *)v4 = 2;
LABEL_3:
    *(_BYTE *)(v4 + 4) = v5;
    return (void *)swift_willThrow();
  }
  *(_BYTE *)(v2 + 136) = 1;
  result = (void *)sub_19CF86BE4(1);
  if (!v3)
  {
    dataOutMoved = 0;
    v9 = CCCryptorFinal(*(CCCryptorRef *)(v2 + 16), result, *(_QWORD *)(v2 + 120), &dataOutMoved);
    if (v9)
    {
      v10 = v9;
      sub_19CF86B5C();
      swift_allocError();
      *(_DWORD *)v4 = v10;
      v5 = 1;
      goto LABEL_3;
    }
    if (a2 >> 60 == 15)
    {
      sub_19CFDEBD0();
      swift_allocObject();
      v16 = 0x1000000000;
      v17 = sub_19CFDEBAC();
      sub_19CF86C84((int *)&v16, 0);
      v11 = v16;
      v12 = v17 | 0x4000000000000000;
    }
    else
    {
      v11 = a1;
      v12 = a2;
    }
    v19 = v11;
    v20 = v12;
    sub_19CD61F18(a1, a2);
    swift_retain();
    sub_19CF87260((uint64_t)&v19);
    v14 = v13;
    swift_release();
    if (v14)
    {
      sub_19CF86B5C();
      swift_allocError();
      *(_DWORD *)v15 = v14;
      *(_BYTE *)(v15 + 4) = 1;
      swift_willThrow();
      return (void *)sub_19CD3BE18(v19, v20);
    }
    else
    {
      return (void *)v19;
    }
  }
  return result;
}

uint64_t sub_19CF86460(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _BYTE v28[40];
  __int128 bytes[2];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  *(_QWORD *)((char *)bytes + 6) = 0;
  *(_QWORD *)&bytes[0] = 0;
  BYTE14(bytes[0]) = 12;
  if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E0CD7000], 0xCuLL, bytes))
  {
    sub_19CF86B5C();
    swift_allocError();
    *(_DWORD *)v9 = 3;
    *(_BYTE *)(v9 + 4) = 2;
    return swift_willThrow();
  }
  else
  {
    v25 = DWORD2(bytes[0]) | ((unint64_t)BYTE12(bytes[0]) << 32) | ((unint64_t)BYTE13(bytes[0]) << 40) | ((unint64_t)BYTE14(bytes[0]) << 48);
    v26 = *(_QWORD *)&bytes[0];
    v11 = type metadata accessor for DataOutputStream();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D05ACB0;
    sub_19CCD5B84(a2, (uint64_t)bytes);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443510);
    inited = swift_initStackObject();
    *(_BYTE *)(inited + 56) = 0;
    sub_19CCD14C4(bytes, inited + 16);
    sub_19CCD5B84(a1, (uint64_t)v28);
    v27[3] = v11;
    v27[4] = &off_1E3DCD4C0;
    v27[0] = v12;
    type metadata accessor for CommonCryptoAESGCMCryptor();
    swift_allocObject();
    swift_retain();
    sub_19CD3BE5C(v6, v7);
    sub_19CF86898((uint64_t)v28, (uint64_t)v27, v6, v7, v26, v25, 0, v8);
    if (v3)
    {
      swift_release();
    }
    else
    {
      sub_19CF8600C();
      v14 = sub_19CF86268(0, 0xF000000000000000);
      v16 = v15;
      v17 = (uint64_t)v14;
      sub_19CD3BE5C((uint64_t)v14, v15);
      v24 = v16;
      sub_19CF858CC();
      swift_beginAccess();
      v18 = (_QWORD *)(inited + 16);
      if (*(_BYTE *)(inited + 56) == 1)
      {
        v20 = *(_QWORD *)(v12 + 16);
        v19 = *(_QWORD *)(v12 + 24);
        v21 = *(_QWORD *)(inited + 40);
        v22 = *(_QWORD *)(inited + 48);
        __swift_project_boxed_opaque_existential_1(v18, v21);
        v23 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v22 + 8);
        sub_19CD3BE5C(v20, v19);
        v23(v20, v19, v21, v22);
        sub_19CD3BE18(v20, v19);
      }
      else
      {
        sub_19CDBAADC();
        swift_allocError();
        swift_willThrow();
      }
      sub_19CD3BE18(v26, v25);
      sub_19CD3BE18(v17, v24);
      sub_19CD3BE18(v17, v24);
      swift_release();
      swift_setDeallocating();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    }
    return swift_release();
  }
}

uint64_t sub_19CF86898(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 112) = 0;
  sub_19CF86D04(a3, a4);
  if (v9)
  {
    sub_19CD3BE18(a5, a6);
    sub_19CD3BE18(a3, a4);
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v8 + 16) = v17;
    *(_BYTE *)(v8 + 136) = 0;
    *(_QWORD *)(v8 + 128) = a8;
    sub_19CCD5B84(a1, v8 + 24);
    sub_19CCD5B84(a2, v8 + 64);
    v18 = swift_slowAlloc();
    sub_19CD3BE18(a5, a6);
    sub_19CD3BE18(a3, a4);
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    *(_QWORD *)(v8 + 104) = v18;
    *(_QWORD *)(v8 + 120) = 0;
  }
  return v8;
}

uint64_t sub_19CF869D0()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1A1ADBE9C](*(_QWORD *)(v0 + 104), -1, -1);
  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
    MEMORY[0x1A1ADBE9C](v1, -1, -1);
  CCCryptorRelease(*(CCCryptorRef *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CommonCryptoAESGCMCryptor()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for CommonCryptoAESGCMCryptor.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF86A94 + 4 * byte_19D067605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF86AC8 + 4 * byte_19D067600[v4]))();
}

uint64_t sub_19CF86AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF86AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF86AD8);
  return result;
}

uint64_t sub_19CF86AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF86AECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF86AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF86AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommonCryptoAESGCMCryptor.State()
{
  return &type metadata for CommonCryptoAESGCMCryptor.State;
}

unint64_t sub_19CF86B18()
{
  unint64_t result;

  result = qword_1EE443500;
  if (!qword_1EE443500)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0676B0, &type metadata for CommonCryptoAESGCMCryptor.State);
    atomic_store(result, (unint64_t *)&qword_1EE443500);
  }
  return result;
}

unint64_t sub_19CF86B5C()
{
  unint64_t result;

  result = qword_1EE443508;
  if (!qword_1EE443508)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackageEncryptionError, &type metadata for PackageEncryptionError);
    atomic_store(result, (unint64_t *)&qword_1EE443508);
  }
  return result;
}

unint64_t sub_19CF86BA0()
{
  unint64_t result;

  result = qword_1EE443518;
  if (!qword_1EE443518)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A78C, &type metadata for EncryptedBlobHeader);
    atomic_store(result, (unint64_t *)&qword_1EE443518);
  }
  return result;
}

uint64_t sub_19CF86BE4(char a1)
{
  uint64_t v1;
  int64_t OutputLength;
  uint64_t result;
  uint64_t v4;

  OutputLength = CCCryptorGetOutputLength(*(CCCryptorRef *)(v1 + 16), *(_QWORD *)(v1 + 128), a1 & 1);
  result = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v1 + 120) < OutputLength)
  {
    if (result)
      MEMORY[0x1A1ADBE9C](result, -1, -1);
    result = swift_slowAlloc();
    *(_QWORD *)(v1 + 112) = result;
    *(_QWORD *)(v1 + 120) = OutputLength;
  }
  if (!result)
  {
    sub_19CF86B5C();
    swift_allocError();
    *(_DWORD *)v4 = 4;
    *(_BYTE *)(v4 + 4) = 2;
    return swift_willThrow();
  }
  return result;
}

char *sub_19CF86C84(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_19CFDEE1C();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_19CFDEBA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_19CFDEBC4();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_19CFDEBB8();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

void sub_19CF86D04(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

CCCryptorRef sub_19CF86D70@<X0>(int a1@<W8>, size_t tweakLength, uint64_t a3, CCCryptorRef *cryptorRef, int a5, CCPadding padding, uint64_t a7, uint64_t a8, uint64_t key, uint64_t a10, CCCryptorRef a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unint64_t v25;
  CCCryptorRef v26;
  CCAlgorithm v27;
  CCMode v28;
  CCOperation v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  __int16 v42;
  char v43;
  char v44;
  char v45;
  char v46;
  CCCryptorRef v47[14];

  if (BYTE6(v25) == 16)
  {
    v47[0] = 0;
    if (!a1)
    {
      v41 = v30;
      v42 = v25;
      v43 = BYTE2(v25);
      v44 = BYTE3(v25);
      v45 = BYTE4(v25);
      v46 = BYTE5(v25);
      v26 = (CCCryptorRef)CCCryptorCreateWithMode(v29, v28, v27, (CCPadding)v26, 0, &v41, BYTE6(v25), 0, 0, 0, 0, v47);
      if ((_DWORD)v26)
      {
LABEL_20:
        sub_19CF86B5C();
        swift_allocError();
        *(_DWORD *)v33 = (_DWORD)v26;
LABEL_21:
        v34 = 1;
        goto LABEL_22;
      }
LABEL_12:
      v26 = v47[0];
      if (v47[0])
        __asm { BR              X10 }
      sub_19CF86B5C();
      swift_allocError();
      *(_DWORD *)v33 = 0;
      goto LABEL_21;
    }
    if (a1 == 1)
    {
      if ((int)v30 > v30 >> 32)
      {
        __break(1u);
      }
      else
      {
        sub_19CD3BE5C(v30, v25);
        v31 = (char *)sub_19CFDEBA0();
        if (v31)
        {
          v32 = sub_19CFDEBC4();
          if (__OFSUB__((int)v30, v32))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v31 += (int)v30 - v32;
        }
        sub_19CFDEBB8();
        if (!__OFSUB__(HIDWORD(v30), (_DWORD)v30))
        {
          v26 = (CCCryptorRef)CCCryptorCreateWithMode(v29, v28, v27, (CCPadding)v26, 0, v31, HIDWORD(v30) - (int)v30, 0, 0, 0, 0, v47);
          sub_19CD3BE18(v30, v25);
          goto LABEL_19;
        }
      }
      __break(1u);
    }
    else
    {
      v35 = *(_QWORD *)(v30 + 16);
      swift_retain();
      swift_retain();
      v36 = (char *)sub_19CFDEBA0();
      if (v36)
      {
        v37 = sub_19CFDEBC4();
        if (__OFSUB__(v35, v37))
        {
LABEL_28:
          __break(1u);
          JUMPOUT(0x19CF87228);
        }
        v36 += v35 - v37;
      }
      sub_19CFDEBB8();
      v39 = *(_QWORD *)(v30 + 16);
      v38 = *(_QWORD *)(v30 + 24);
      if (!__OFSUB__(v38, v39))
      {
        v26 = (CCCryptorRef)CCCryptorCreateWithMode(v29, v28, v27, (CCPadding)v26, 0, v36, v38 - v39, 0, 0, 0, 0, v47);
        swift_release();
        swift_release();
LABEL_19:
        if ((_DWORD)v26)
          goto LABEL_20;
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_19CF86B5C();
  swift_allocError();
  *(_DWORD *)v33 = 0;
  v34 = 2;
LABEL_22:
  *(_BYTE *)(v33 + 4) = v34;
  swift_willThrow();
  return v26;
}

void sub_19CF87260(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_19CF872BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  unsigned int v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  LOWORD(v4) = a1;
  BYTE2(v4) = BYTE2(a1);
  HIBYTE(v4) = BYTE3(a1);
  v5 = BYTE4(a1);
  v6 = BYTE5(a1);
  v7 = BYTE6(a1);
  result = CCCryptorGCMFinalize();
  *v1 = v2;
  v1[1] = v4 | ((unint64_t)v5 << 32) | ((unint64_t)v6 << 40) | ((unint64_t)v7 << 48);
  return result;
}

unint64_t sub_19CF875B0()
{
  unint64_t result;

  result = qword_1EE443520;
  if (!qword_1EE443520)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0633F4, &type metadata for PackageDataBlobFormatError);
    atomic_store(result, (unint64_t *)&qword_1EE443520);
  }
  return result;
}

unint64_t sub_19CF875F4()
{
  unint64_t result;

  result = qword_1ECEB1458;
  if (!qword_1ECEB1458)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A764, &type metadata for EncryptedBlobHeader);
    atomic_store(result, (unint64_t *)&qword_1ECEB1458);
  }
  return result;
}

uint64_t destroy for CommonCryptoPackageEncryption(uint64_t a1)
{
  return sub_19CD3BE18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s9JetEngine29CommonCryptoPackageEncryptionVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_19CD3BE5C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for CommonCryptoPackageEncryption(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_19CD3BE5C(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_19CD3BE18(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for CommonCryptoPackageEncryption(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19CD3BE18(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonCryptoPackageEncryption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CommonCryptoPackageEncryption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonCryptoPackageEncryption()
{
  return &type metadata for CommonCryptoPackageEncryption;
}

void SystemInfoMetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CF877E4(uint64_t a1)
{
  return SystemInfoMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for SystemInfoMetricsFieldsProvider()
{
  return &type metadata for SystemInfoMetricsFieldsProvider;
}

uint64_t JetPackFileStreamSource.path.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_19CF87834()
{
  unint64_t result;

  result = qword_1EE443528;
  if (!qword_1EE443528)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackUnknownError, &type metadata for JetPackUnknownError);
    atomic_store(result, (unint64_t *)&qword_1EE443528);
  }
  return result;
}

uint64_t sub_19CF87878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t result;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (qword_1ECEB0870 != -1)
      swift_once();
    v3 = *(os_unfair_lock_s **)(qword_1ECEB5270 + 16);
    swift_retain();
    os_unfair_lock_lock(v3 + 6);
    swift_bridgeObjectRetain();
    sub_19CE8891C(&v5, v2, v1);
    os_unfair_lock_unlock(v3 + 6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_19CF87940@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_19CCCBB84(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_19CF8797C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[2];

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  result = sub_19CE8891C(v8, v3, v4);
  v6 = v8[0];
  v7 = v8[1];
  *(_BYTE *)a2 = result & 1;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  return result;
}

ValueMetadata *type metadata accessor for FoundationDictionary()
{
  return &type metadata for FoundationDictionary;
}

double sub_19CF879F0@<D0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  double result;
  _OWORD v8[2];

  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v4);

  if (v5)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    *(_QWORD *)(a2 + 24) = &type metadata for FoundationValue;
    *(_QWORD *)(a2 + 32) = &off_1E3DCC5B0;
    v6 = swift_allocObject();
    *(_QWORD *)a2 = v6;
    sub_19CD433C0(v8, (_OWORD *)(v6 + 16));
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    sub_19CD3F190((uint64_t)v8);
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)(a2 + 32) = 0;
  }
  return result;
}

uint64_t sub_19CF87ABC(void *a1)
{
  id v2;
  uint64_t v4;

  sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  sub_19CFDF464();
  v2 = a1;
  if (swift_dynamicCast())
    return v4;
  else
    return 0;
}

void sub_19CF87B5C(void (*a1)(char *, char *, uint64_t, uint64_t, __int128 *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BOOL4 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  void *v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  os_log_type_t v62;
  _BYTE *v63;
  os_unfair_lock_s *v64;
  int v65;
  char has_internal_content;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _BOOL4 v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t, uint64_t, __int128 *);
  uint64_t v83;
  void *v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _BYTE v92[32];
  __int128 v93;
  __int128 v94;
  unint64_t v95;
  unint64_t v96;
  ValueMetadata *v97;
  _OWORD v98[2];
  _OWORD v99[2];
  __int128 v100;
  __int128 v101;
  _UNKNOWN **v102;
  __int128 v103;
  uint64_t v104;
  _QWORD v105[7];

  v7 = v6;
  v82 = a1;
  v83 = a2;
  v12 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v12, v13);
  v79 = (char *)&v73 - v14;
  v78 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v76 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v73 - v24;
  v80 = a4;
  v81 = a5;
  v75 = a6;
  v105[6] = sub_19CFDF38C();
  v84 = a3;
  sub_19CFDFCF8();
  v89 = swift_retain();
  sub_19CFDFD04();
  sub_19CF88FEC((uint64_t)&v100, (uint64_t)&v103);
  if (!v104)
  {
LABEL_34:
    swift_release_n();
    return;
  }
  v88 = v105;
  v73 = (unint64_t)"ffer";
  v27 = (0x800000019D078D80 & 0x2000000000000000) == 0 || (0x800000019D078D80 & 0xF00000000000000) != 0;
  v74 = v27;
  v87 = MEMORY[0x1E0DEE9B8] + 8;
  v85 = xmmword_19D0522A0;
  v90 = v25;
  v91 = v18;
  while (1)
  {
    sub_19CD433C0(&v103, v99);
    sub_19CD433C0(v88, v98);
    sub_19CD436B0((uint64_t)v99, (uint64_t)&v100);
    sub_19CCE5204(0, &qword_1ECEB24D0);
    if (!swift_dynamicCast())
      break;
    v28 = (void *)v93;
    *((_QWORD *)&v101 + 1) = &type metadata for FoundationValue;
    v102 = &off_1E3DCC5B0;
    *(_QWORD *)&v100 = swift_allocObject();
    sub_19CD436B0((uint64_t)v98, v100 + 16);
    v29 = sub_19CFDF578();
    v82(v25, v18, v29, v30, &v100);
    if (v7)
    {

      swift_release_n();
      swift_bridgeObjectRelease();
      sub_19CD3E3F8((uint64_t)&v100);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v99);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    v31 = v77;
    v32 = v80;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v90, v80);
    v34 = v78;
    v33 = v79;
    v35 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    v86 = 0;
    v36 = v81;
    v35(v79, v91, v81);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v36);
    sub_19CFDF464();
    v25 = v90;
    v18 = v91;
    sub_19CFDF4AC();

    v37 = v36;
    v7 = v86;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v37);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
    sub_19CD3E3F8((uint64_t)&v100);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v99);
    sub_19CFDFD04();
    sub_19CF88FEC((uint64_t)&v100, (uint64_t)&v103);
    if (!v104)
      goto LABEL_34;
  }
  if (qword_1EE43BE78 != -1)
    swift_once();
  v38 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v85;
  v40 = v38;
  v41 = sub_19CD40918(0, 43, 0, MEMORY[0x1E0DEE9D8]);
  v97 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v95 = 0x697274532D6E6F4ELL;
  v96 = 0xEF2079656B20676ELL;
  v93 = 0u;
  v94 = 0u;
  sub_19CD40658((uint64_t)&v95, (uint64_t)&v93);
  LOBYTE(v102) = 0;
  v100 = v93;
  v101 = v94;
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_19CD40918((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  v44 = &v41[5 * v43];
  *((_OWORD *)v44 + 2) = v100;
  *((_OWORD *)v44 + 3) = v101;
  *((_BYTE *)v44 + 64) = (_BYTE)v102;
  sub_19CD436B0((uint64_t)v99, (uint64_t)&v95);
  sub_19CD40794((uint64_t)&v95, (uint64_t)v92);
  v93 = 0u;
  v94 = 0u;
  sub_19CD40658((uint64_t)v92, (uint64_t)&v93);
  LOBYTE(v102) = 0;
  v100 = v93;
  v101 = v94;
  v46 = v41[2];
  v45 = v41[3];
  if (v46 >= v45 >> 1)
    v41 = sub_19CD40918((_QWORD *)(v45 > 1), v46 + 1, 1, v41);
  v41[2] = v46 + 1;
  v47 = &v41[5 * v46];
  v48 = v100;
  v49 = v101;
  *((_BYTE *)v47 + 64) = (_BYTE)v102;
  *((_OWORD *)v47 + 2) = v48;
  *((_OWORD *)v47 + 3) = v49;
  sub_19CD3F190((uint64_t)&v95);
  if (v74)
  {
    v97 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v95 = 0xD00000000000001ALL;
    v96 = v73 | 0x8000000000000000;
    v93 = 0u;
    v94 = 0u;
    sub_19CD40658((uint64_t)&v95, (uint64_t)&v93);
    LOBYTE(v102) = 0;
    v100 = v93;
    v101 = v94;
    v51 = v41[2];
    v50 = v41[3];
    if (v51 >= v50 >> 1)
      v41 = sub_19CD40918((_QWORD *)(v50 > 1), v51 + 1, 1, v41);
    v41[2] = v51 + 1;
    v52 = &v41[5 * v51];
    v53 = v100;
    v54 = v101;
    *((_BYTE *)v52 + 64) = (_BYTE)v102;
    *((_OWORD *)v52 + 2) = v53;
    *((_OWORD *)v52 + 3) = v54;
  }
  v97 = &type metadata for FoundationDictionary;
  v55 = v84;
  v95 = (unint64_t)v84;
  sub_19CD40794((uint64_t)&v95, (uint64_t)v92);
  v93 = 0u;
  v94 = 0u;
  v56 = v55;
  sub_19CD40658((uint64_t)v92, (uint64_t)&v93);
  LOBYTE(v102) = 0;
  v100 = v93;
  v101 = v94;
  v58 = v41[2];
  v57 = v41[3];
  if (v58 >= v57 >> 1)
    v41 = sub_19CD40918((_QWORD *)(v57 > 1), v58 + 1, 1, v41);
  v41[2] = v58 + 1;
  v59 = &v41[5 * v58];
  v60 = v100;
  v61 = v101;
  *((_BYTE *)v59 + 64) = (_BYTE)v102;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  sub_19CD3F190((uint64_t)&v95);
  *(_QWORD *)(v39 + 32) = v41;
  v62 = sub_19CFDFD34();
  if (!os_log_type_enabled(v40, v62))
  {

    swift_bridgeObjectRelease();
    v18 = v91;
    goto LABEL_10;
  }
  if (qword_1ECEB1958 != -1)
    swift_once();
  v63 = (char *)off_1ECEB1948 + 16;
  v64 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v64);
  sub_19CD3EA18(v63, &v100);
  if (!v7)
  {
    v7 = 0;
    os_unfair_lock_unlock(v64);
    v65 = v100;
    swift_release();
    if (v65 == 2)
      has_internal_content = os_variant_has_internal_content();
    else
      has_internal_content = v65 & 1;
    v67 = has_internal_content ^ 1;
    v68 = swift_allocObject();
    *(_BYTE *)(v68 + 16) = v67;
    *(_QWORD *)&v100 = v39;
    *((_QWORD *)&v100 + 1) = sub_19CDE627C;
    *(_QWORD *)&v101 = v68;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3310);
    sub_19CD420CC();
    v69 = sub_19CFDF4F4();
    v71 = v70;
    swift_release();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v85;
    *(_QWORD *)(v72 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v72 + 64) = sub_19CD42088();
    *(_QWORD *)(v72 + 32) = v69;
    *(_QWORD *)(v72 + 40) = v71;
    sub_19CFDF158();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v90;
    v18 = v91;
    goto LABEL_10;
  }
  os_unfair_lock_unlock(v64);
  __break(1u);
}

void sub_19CF883C4(void (*a1)(uint64_t), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _BOOL4 v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  os_log_type_t v59;
  _BYTE *v60;
  os_unfair_lock_s *v61;
  int v62;
  char has_internal_content;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _BOOL4 v93;
  char *v94;
  uint64_t v95;
  uint64_t TupleTypeMetadata2;
  void *v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  char *v100;
  __int128 v101;
  uint64_t v102;
  _BYTE v103[32];
  __int128 v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  ValueMetadata *v108;
  _OWORD v109[2];
  _OWORD v110[2];
  __int128 v111;
  __int128 v112;
  _UNKNOWN **v113;
  __int128 v114;
  uint64_t v115;
  _QWORD v116[7];

  v7 = v6;
  v98 = a1;
  v99 = a2;
  v12 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v12, v13);
  v86 = (char *)&v79 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = sub_19CFDFF5C();
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v79 - v17;
  v83 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v82 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v81 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v94 = (char *)&v79 - v27;
  v87 = a4;
  v88 = a5;
  v89 = a6;
  v116[6] = sub_19CFDF38C();
  v97 = a3;
  v28 = sub_19CFDFCF8();
  swift_retain();
  sub_19CFDFD04();
  sub_19CF88FEC((uint64_t)&v111, (uint64_t)&v114);
  if (!v115)
  {
LABEL_37:
    swift_release_n();
    return;
  }
  v29 = v116;
  v80 = (unint64_t)"ffer";
  v31 = (0x800000019D078D80 & 0x2000000000000000) == 0 || (0x800000019D078D80 & 0xF00000000000000) != 0;
  v93 = v31;
  v102 = MEMORY[0x1E0DEE9B8] + 8;
  v101 = xmmword_19D0522A0;
  v100 = v18;
  v91 = v116;
  v92 = v28;
  while (1)
  {
    sub_19CD433C0(&v114, v110);
    sub_19CD433C0(v29, v109);
    sub_19CD436B0((uint64_t)v110, (uint64_t)&v111);
    sub_19CCE5204(0, &qword_1ECEB24D0);
    if (!swift_dynamicCast())
      break;
    v32 = (void *)v104;
    *((_QWORD *)&v112 + 1) = &type metadata for FoundationValue;
    v113 = &off_1E3DCC5B0;
    *(_QWORD *)&v111 = swift_allocObject();
    sub_19CD436B0((uint64_t)v109, v111 + 16);
    v33 = sub_19CFDF578();
    v98(v33);
    if (v7)
    {

      swift_release_n();
      swift_bridgeObjectRelease();
      sub_19CD3E3F8((uint64_t)&v111);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v109);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    v34 = TupleTypeMetadata2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v18, 1, TupleTypeMetadata2) == 1)
    {

      sub_19CD3E3F8((uint64_t)&v111);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v109);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v18, v85);
    }
    else
    {
      v64 = &v18[*(int *)(v34 + 48)];
      v90 = 0;
      v65 = v95;
      v66 = v94;
      v67 = v87;
      (*(void (**)(void))(v95 + 32))();
      v68 = v82;
      v69 = v83;
      v70 = v88;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v64, v88);
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v81, v66, v67);
      v71 = v86;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v86, v68, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v71, 0, 1, v70);
      sub_19CFDF464();
      v18 = v100;
      sub_19CFDF4AC();

      v72 = *(void (**)(char *, uint64_t))(v69 + 8);
      v29 = v91;
      v72(v68, v70);
      v7 = v90;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v67);
      sub_19CD3E3F8((uint64_t)&v111);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v109);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    }
LABEL_11:
    sub_19CFDFD04();
    sub_19CF88FEC((uint64_t)&v111, (uint64_t)&v114);
    if (!v115)
      goto LABEL_37;
  }
  if (qword_1EE43BE78 != -1)
    swift_once();
  v35 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v101;
  v37 = v35;
  v38 = sub_19CD40918(0, 43, 0, MEMORY[0x1E0DEE9D8]);
  v108 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v106 = 0x697274532D6E6F4ELL;
  v107 = 0xEF2079656B20676ELL;
  v104 = 0u;
  v105 = 0u;
  sub_19CD40658((uint64_t)&v106, (uint64_t)&v104);
  LOBYTE(v113) = 0;
  v111 = v104;
  v112 = v105;
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v38[2] = v40 + 1;
  v41 = &v38[5 * v40];
  *((_OWORD *)v41 + 2) = v111;
  *((_OWORD *)v41 + 3) = v112;
  *((_BYTE *)v41 + 64) = (_BYTE)v113;
  sub_19CD436B0((uint64_t)v110, (uint64_t)&v106);
  sub_19CD40794((uint64_t)&v106, (uint64_t)v103);
  v104 = 0u;
  v105 = 0u;
  sub_19CD40658((uint64_t)v103, (uint64_t)&v104);
  LOBYTE(v113) = 0;
  v111 = v104;
  v112 = v105;
  v43 = v38[2];
  v42 = v38[3];
  if (v43 >= v42 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v42 > 1), v43 + 1, 1, v38);
  v38[2] = v43 + 1;
  v44 = &v38[5 * v43];
  v45 = v111;
  v46 = v112;
  *((_BYTE *)v44 + 64) = (_BYTE)v113;
  *((_OWORD *)v44 + 2) = v45;
  *((_OWORD *)v44 + 3) = v46;
  sub_19CD3F190((uint64_t)&v106);
  if (v93)
  {
    v108 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v106 = 0xD00000000000001ALL;
    v107 = v80 | 0x8000000000000000;
    v104 = 0u;
    v105 = 0u;
    sub_19CD40658((uint64_t)&v106, (uint64_t)&v104);
    LOBYTE(v113) = 0;
    v111 = v104;
    v112 = v105;
    v48 = v38[2];
    v47 = v38[3];
    if (v48 >= v47 >> 1)
      v38 = sub_19CD40918((_QWORD *)(v47 > 1), v48 + 1, 1, v38);
    v38[2] = v48 + 1;
    v49 = &v38[5 * v48];
    v50 = v111;
    v51 = v112;
    *((_BYTE *)v49 + 64) = (_BYTE)v113;
    *((_OWORD *)v49 + 2) = v50;
    *((_OWORD *)v49 + 3) = v51;
  }
  v108 = &type metadata for FoundationDictionary;
  v52 = v97;
  v106 = (unint64_t)v97;
  sub_19CD40794((uint64_t)&v106, (uint64_t)v103);
  v104 = 0u;
  v105 = 0u;
  v53 = v52;
  sub_19CD40658((uint64_t)v103, (uint64_t)&v104);
  LOBYTE(v113) = 0;
  v111 = v104;
  v112 = v105;
  v55 = v38[2];
  v54 = v38[3];
  if (v55 >= v54 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v54 > 1), v55 + 1, 1, v38);
  v38[2] = v55 + 1;
  v56 = &v38[5 * v55];
  v57 = v111;
  v58 = v112;
  *((_BYTE *)v56 + 64) = (_BYTE)v113;
  *((_OWORD *)v56 + 2) = v57;
  *((_OWORD *)v56 + 3) = v58;
  sub_19CD3F190((uint64_t)&v106);
  *(_QWORD *)(v36 + 32) = v38;
  v59 = sub_19CFDFD34();
  if (!os_log_type_enabled(v37, v59))
  {

    swift_bridgeObjectRelease();
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v109);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    v18 = v100;
    goto LABEL_11;
  }
  if (qword_1ECEB1958 != -1)
    swift_once();
  v60 = (char *)off_1ECEB1948 + 16;
  v61 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v61);
  sub_19CD3EA18(v60, &v111);
  if (!v7)
  {
    v7 = 0;
    os_unfair_lock_unlock(v61);
    v62 = v111;
    swift_release();
    if (v62 == 2)
      has_internal_content = os_variant_has_internal_content();
    else
      has_internal_content = v62 & 1;
    v73 = has_internal_content ^ 1;
    v74 = swift_allocObject();
    *(_BYTE *)(v74 + 16) = v73;
    *(_QWORD *)&v111 = v36;
    *((_QWORD *)&v111 + 1) = sub_19CCBDD10;
    *(_QWORD *)&v112 = v74;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3310);
    sub_19CD420CC();
    v75 = sub_19CFDF4F4();
    v77 = v76;
    swift_release();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v101;
    *(_QWORD *)(v78 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v78 + 64) = sub_19CD42088();
    *(_QWORD *)(v78 + 32) = v75;
    *(_QWORD *)(v78 + 40) = v77;
    sub_19CFDF158();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v91;
    goto LABEL_10;
  }
  os_unfair_lock_unlock(v61);
  __break(1u);
}

_QWORD *sub_19CF88D24(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v15;
  uint64_t v16;
  _BYTE v17[32];
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  v2 = sub_19CFDECB4();
  v16 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_keyEnumerator, v4);
  sub_19CFDFD10();
  v15 = v7;

  sub_19CF88FA4();
  sub_19CFDFFBC();
  if (v22)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_19CD433C0(&v21, v20);
      sub_19CD436B0((uint64_t)v20, (uint64_t)v17);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v18 = 0;
        v19 = 0;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      v10 = v19;
      if (v19)
      {
        v11 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_19CD4D730(0, v8[2] + 1, 1, v8);
        v13 = v8[2];
        v12 = v8[3];
        if (v13 >= v12 >> 1)
          v8 = sub_19CD4D730((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
        v8[2] = v13 + 1;
        v9 = &v8[2 * v13];
        v9[4] = v11;
        v9[5] = v10;
      }
      sub_19CFDFFBC();
    }
    while (v22);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v2);

  return v8;
}

BOOL sub_19CF88F10()
{
  id *v0;

  return objc_msgSend(*v0, sel_count) == 0;
}

double sub_19CF88F38@<D0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_19CF879F0(*v1, a1);
}

uint64_t sub_19CF88F40()
{
  void **v0;

  return sub_19CF87ABC(*v0);
}

void sub_19CF88F54(void (*a1)(char *, char *, uint64_t, uint64_t, __int128 *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v5;

  sub_19CF87B5C(a1, a2, *v5, a3, a4, a5);
}

void sub_19CF88F78(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v5;

  sub_19CF883C4(a1, a2, *v5, a3, a4, a5);
}

_QWORD *sub_19CF88F9C()
{
  void **v0;

  return sub_19CF88D24(*v0);
}

unint64_t sub_19CF88FA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43D078;
  if (!qword_1EE43D078)
  {
    v1 = sub_19CFDECB4();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43D078);
  }
  return result;
}

uint64_t sub_19CF88FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF89034()
{
  return swift_deallocObject();
}

uint64_t sub_19CF89044()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF89068()
{
  return swift_deallocObject();
}

BOOL static ImpressionsTracking.ImpressionableItem.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImpressionsTracking.ImpressionableItem.State.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ImpressionsTracking.ImpressionableItem.State.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double MinY;
  double v19;
  BOOL v20;
  CGFloat v21;
  double v22;
  double v23;
  CGFloat v25;
  double v26;
  double v27;
  double MinX;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v7 + 168) = 0;
  *(_OWORD *)(v7 + 72) = *(_OWORD *)a1;
  *(_QWORD *)(v7 + 88) = v13;
  *(_QWORD *)(v7 + 96) = v14;
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v7 + 120) = v15;
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v7 + 144) = v16;
  *(_BYTE *)(v7 + 161) = 1;
  *(CGFloat *)(v7 + 184) = a3;
  *(CGFloat *)(v7 + 192) = a4;
  *(CGFloat *)(v7 + 200) = a5;
  *(CGFloat *)(v7 + 208) = a6;
  *(double *)(v7 + 16) = a7;
  *(_BYTE *)(v7 + 24) = a2;
  v17 = CGRectGetWidth(*(CGRect *)&a3) * a7;
  v29.origin.x = a3;
  v29.origin.y = a4;
  v29.size.width = a5;
  v29.size.height = a6;
  v27 = CGRectGetHeight(v29) * a7;
  v30.origin.x = a3;
  v30.origin.y = a4;
  v30.size.width = a5;
  v30.size.height = a6;
  MinX = CGRectGetMinX(v30);
  v31.origin.x = a3;
  v31.origin.y = a4;
  v31.size.width = a5;
  v31.size.height = a6;
  MinY = CGRectGetMinY(v31);
  v19 = fabs(a7 + -0.5);
  if (v19 >= 0.01)
  {
    v32.origin.x = a3;
    v32.origin.y = a4;
    v26 = MinY;
    v32.size.width = a5;
    v32.size.height = a6;
    v25 = CGRectGetMaxX(v32) - v17 + 0.0;
    v33.origin.x = a3;
    v33.origin.y = a4;
    v33.size.width = a5;
    v33.size.height = a6;
    v22 = CGRectGetMaxY(v33) - v27 + 0.0;
    v20 = a7 > 0.5;
    v23 = v27;
    v21 = v25;
    MinY = v26;
  }
  else
  {
    v20 = 0;
    v21 = 0.0;
    v22 = 0.0;
    v23 = v27;
  }
  *(double *)(v7 + 32) = v17 + MinX + 0.0;
  *(double *)(v7 + 40) = v23 + MinY + 0.0;
  *(CGFloat *)(v7 + 48) = v21;
  *(double *)(v7 + 56) = v22;
  *(_BYTE *)(v7 + 64) = v19 < 0.01;
  *(_BYTE *)(v7 + 65) = v20;
  *(_BYTE *)(v7 + 176) = 0;
  *(_QWORD *)(v7 + 152) = 0;
  *(_BYTE *)(v7 + 160) = 1;
  return v7;
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(uint64_t a1, char a2, uint64_t a3, char a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  char v17;
  uint64_t v18;

  v17 = a4 & 1;
  v18 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(a1, a2, a3, v17, a5, a6, a7, a8, a9);
  return v18;
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double MinY;
  double v18;
  BOOL v19;
  CGFloat v20;
  double v21;
  double v22;
  CGFloat v24;
  double v25;
  double v26;
  double MinX;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v6 + 168) = 0;
  *(_OWORD *)(v6 + 72) = *(_OWORD *)a1;
  *(_QWORD *)(v6 + 88) = v12;
  *(_QWORD *)(v6 + 96) = v13;
  *(_OWORD *)(v6 + 104) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v6 + 120) = v14;
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v6 + 144) = v15;
  *(_BYTE *)(v6 + 161) = 1;
  *(CGFloat *)(v6 + 184) = a2;
  *(CGFloat *)(v6 + 192) = a3;
  *(CGFloat *)(v6 + 200) = a4;
  *(CGFloat *)(v6 + 208) = a5;
  *(double *)(v6 + 16) = a6;
  *(_BYTE *)(v6 + 24) = 1;
  v16 = CGRectGetWidth(*(CGRect *)&a2) * a6;
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  v26 = CGRectGetHeight(v28) * a6;
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  MinX = CGRectGetMinX(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  MinY = CGRectGetMinY(v30);
  v18 = fabs(a6 + -0.5);
  if (v18 >= 0.01)
  {
    v31.origin.x = a2;
    v31.origin.y = a3;
    v25 = MinY;
    v31.size.width = a4;
    v31.size.height = a5;
    v24 = CGRectGetMaxX(v31) - v16 + 0.0;
    v32.origin.x = a2;
    v32.origin.y = a3;
    v32.size.width = a4;
    v32.size.height = a5;
    v21 = CGRectGetMaxY(v32) - v26 + 0.0;
    v19 = a6 > 0.5;
    v22 = v26;
    v20 = v24;
    MinY = v25;
  }
  else
  {
    v19 = 0;
    v20 = 0.0;
    v21 = 0.0;
    v22 = v26;
  }
  *(double *)(v6 + 32) = v16 + MinX + 0.0;
  *(double *)(v6 + 40) = v22 + MinY + 0.0;
  *(CGFloat *)(v6 + 48) = v20;
  *(double *)(v6 + 56) = v21;
  *(_BYTE *)(v6 + 64) = v18 < 0.01;
  *(_BYTE *)(v6 + 65) = v19;
  *(_BYTE *)(v6 + 176) = 0;
  *(_QWORD *)(v6 + 152) = 0;
  *(_BYTE *)(v6 + 160) = 1;
  return v6;
}

uint64_t ImpressionsTracking.ImpressionableItem.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 80);
  *(_QWORD *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.ImpressionableItem.position.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t ImpressionsTracking.ImpressionableItem.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 161);
  return result;
}

uint64_t ImpressionsTracking.ImpressionableItem.state.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  swift_beginAccess();
  *(_BYTE *)(v1 + 161) = v2;
  return sub_19CD2A958();
}

uint64_t (*ImpressionsTracking.ImpressionableItem.state.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19CF89790;
}

uint64_t sub_19CF89790(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_19CD2A958();
  return result;
}

uint64_t ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.setter(uint64_t a1)
{
  sub_19CD2BA80(a1);
  return swift_release();
}

void ImpressionsTracking.ImpressionableItem.isContainer.setter(char a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_BYTE *)(v1 + 176) = a1;
  sub_19CD2BBD8();
}

void (*ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(_QWORD *)(v1 + 168);
  swift_retain();
  return sub_19CF898C0;
}

void sub_19CF898C0(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = swift_retain();
    sub_19CD2BA80(v4);
    swift_release();
  }
  else
  {
    sub_19CD2BA80(v3);
  }
  swift_release();
  free(v2);
}

uint64_t ImpressionsTracking.ImpressionableItem.childCalculator.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    v2 = 0;
  }
  swift_retain();
  return v2;
}

uint64_t sub_19CF8998C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 168);
  if (v4)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_19CF899FC(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)a1)
  {
    v1 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    swift_retain();
  }
  else
  {
    v1 = 0;
  }
  swift_retain();
  sub_19CD2BA80(v1);
  swift_release();
  return swift_release();
}

uint64_t ImpressionsTracking.ImpressionableItem.childCalculator.setter(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    v1 = *(_QWORD *)(a1 + 16);
    swift_retain();
  }
  else
  {
    v1 = 0;
  }
  sub_19CD2BA80(v1);
  swift_release();
  return swift_release();
}

void (*ImpressionsTracking.ImpressionableItem.childCalculator.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = v3 + 3;
  v3[4] = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 168);
  if (v5)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
  }
  else
  {
    v6 = 0;
  }
  *v4 = v6;
  swift_retain();
  return sub_19CF89B38;
}

void sub_19CF89B38(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v4 = *(_QWORD *)(v3 + 16);
      swift_retain();
    }
    else
    {
      v4 = 0;
    }
    swift_retain();
    sub_19CD2BA80(v4);
    swift_release();
    swift_release();
  }
  else
  {
    if (v3)
    {
      v5 = *(_QWORD *)(v3 + 16);
      swift_retain();
    }
    else
    {
      v5 = 0;
    }
    sub_19CD2BA80(v5);
    swift_release();
  }
  swift_release();
  free(v2);
}

uint64_t ImpressionsTracking.ImpressionableItem.isContainer.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t (*ImpressionsTracking.ImpressionableItem.isContainer.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19CF89C54;
}

double ImpressionsTracking.ImpressionableItem.itemFrame.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 184);
}

void sub_19CF89C8C(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v4 + 184) = v5;
  *(_QWORD *)(v4 + 200) = v2;
  *(_QWORD *)(v4 + 208) = v3;
  sub_19CD2BBD8();
}

void ImpressionsTracking.ImpressionableItem.itemFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  swift_beginAccess();
  v4[23] = a1;
  v4[24] = a2;
  v4[25] = a3;
  v4[26] = a4;
  sub_19CD2BBD8();
}

uint64_t (*ImpressionsTracking.ImpressionableItem.itemFrame.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19CF89C54;
}

void sub_19CF89D80(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_19CD2BBD8();
}

uint64_t ImpressionsTracking.ImpressionableItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

void sub_19CF89E20(double a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D4>)
{
  double v18;
  double v19;
  double v20;
  double v21;
  double MinY;
  double v23;
  BOOL v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double MinX;
  double v31;
  double v32;
  double v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v33 = CGRectGetWidth(*(CGRect *)&a5) * a9;
  v34.origin.x = a5;
  v34.origin.y = a6;
  v34.size.width = a7;
  v34.size.height = a8;
  v18 = CGRectGetHeight(v34) * a9;
  v19 = a1;
  v20 = a2;
  v21 = 0.0;
  if ((a3 & 1) != 0)
    v20 = 0.0;
  v29 = v20;
  if ((a3 & 1) != 0)
    v19 = 0.0;
  v31 = v18;
  v32 = v19;
  v35.origin.x = a5;
  v35.origin.y = a6;
  v35.size.width = a7;
  v35.size.height = a8;
  MinX = CGRectGetMinX(v35);
  v36.origin.x = a5;
  v36.origin.y = a6;
  v36.size.width = a7;
  v36.size.height = a8;
  MinY = CGRectGetMinY(v36);
  v23 = fabs(a9 + -0.5);
  if (v23 >= 0.01)
  {
    v37.origin.x = a5;
    v37.origin.y = a6;
    v37.size.width = a7;
    v28 = MinY;
    v37.size.height = a8;
    v21 = v32 + CGRectGetMaxX(v37) - v33;
    v38.origin.x = a5;
    v38.origin.y = a6;
    v38.size.width = a7;
    v38.size.height = a8;
    v25 = v29 + CGRectGetMaxY(v38) - v31;
    v24 = a9 > 0.5;
    v26 = v31;
    v27 = v29;
    MinY = v28;
  }
  else
  {
    v24 = 0;
    v25 = 0.0;
    v26 = v31;
    v27 = v29;
  }
  *(double *)a4 = v32 + v33 + MinX;
  *(double *)(a4 + 8) = v27 + v26 + MinY;
  *(double *)(a4 + 16) = v21;
  *(double *)(a4 + 24) = v25;
  *(_BYTE *)(a4 + 32) = v23 < 0.01;
  *(_BYTE *)(a4 + 33) = v24;
}

unint64_t sub_19CF89FCC()
{
  unint64_t result;

  result = qword_1EE443530;
  if (!qword_1EE443530)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionsTracking.ImpressionableItem.State, &type metadata for ImpressionsTracking.ImpressionableItem.State);
    atomic_store(result, (unint64_t *)&qword_1EE443530);
  }
  return result;
}

uint64_t sub_19CF8A010@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 161);
  return result;
}

uint64_t sub_19CF8A054(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_BYTE *)(v3 + 161) = v2;
  return sub_19CD2A958();
}

uint64_t sub_19CF8A098@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 168);
  return swift_retain();
}

uint64_t sub_19CF8A0E0()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_19CD2BA80(v0);
  return swift_release();
}

uint64_t sub_19CF8A118@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 176);
  return result;
}

void sub_19CF8A15C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_BYTE *)(v3 + 176) = v2;
  sub_19CD2BBD8();
}

__n128 sub_19CF8A1A0@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1;
  swift_beginAccess();
  result = *(__n128 *)(v3 + 184);
  v5 = *(_OWORD *)(v3 + 200);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t method lookup function for ImpressionsTracking.ImpressionableItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 160))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t _s18ImpressionableItemC5StateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF8A260 + 4 * byte_19D067805[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF8A294 + 4 * byte_19D067800[v4]))();
}

uint64_t sub_19CF8A294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF8A29C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF8A2A4);
  return result;
}

uint64_t sub_19CF8A2B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF8A2B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF8A2BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF8A2C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.ImpressionableItem.State()
{
  return &type metadata for ImpressionsTracking.ImpressionableItem.State;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18ImpressionableItemC16ImpressionPointsVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 33);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s18ImpressionableItemC16ImpressionPointsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s18ImpressionableItemC16ImpressionPointsVMa()
{
  return &_s18ImpressionableItemC16ImpressionPointsVN;
}

uint64_t sub_19CF8A3A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF8A3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_19CF8A3E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF8A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FileArtifact()
{
  uint64_t result;

  result = qword_1ECEB13F8;
  if (!qword_1ECEB13F8)
    return swift_getSingletonMetadata();
  return result;
}

id Bag.jsExport.getter()
{
  uint64_t *v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  objc_super v5;

  v1 = *v0;
  v2 = (objc_class *)type metadata accessor for JSBagObject();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v5, sel_init);
}

id Bag.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id result;
  objc_super v7;

  v3 = *v1;
  v4 = (objc_class *)type metadata accessor for JSBagObject();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  result = objc_msgSendSuper2(&v7, sel_init);
  a1[3] = v4;
  a1[4] = &off_1E3DC9430;
  *a1 = result;
  return result;
}

id sub_19CF8A554@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id result;
  objc_super v7;

  v3 = *v1;
  v4 = (objc_class *)type metadata accessor for JSBagObject();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  result = objc_msgSendSuper2(&v7, sel_init);
  a1[3] = v4;
  a1[4] = &off_1E3DC9430;
  *a1 = result;
  return result;
}

id sub_19CF8A5D8(id a1, uint64_t a2, void *a3)
{
  void *v5;
  id result;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;

  v5 = *(void **)(a2 + OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag);
  swift_unknownObjectRetain();
  result = objc_msgSend(a3, sel_toString);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(v5, sel_integerForKey_, result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0850);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v8;
    v9[3] = sub_19CD5AED0;
    v9[4] = 0;
    swift_unknownObjectRelease();

    v10 = sub_19CD2DA44(v9);
    if ((v11 & 1) == 0)
    {
      a1 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, a1, (double)v10);
      if (a1)
      {
LABEL_6:
        swift_release();
        return a1;
      }
      __break(1u);
    }
    result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
    a1 = result;
    if (result)
      goto LABEL_6;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF8A770()
{
  uint64_t v0;

  return swift_deallocObject();
}

JetEngine::JSArrayBuffer_optional __swiftcall JSArrayBuffer.init(_:)(JSValue a1)
{
  Class *v1;
  Class isa;
  Class *v3;
  id TypedArrayType;
  Swift::Bool v5;
  void *v6;
  const OpaqueJSContext *v7;
  JetEngine::JSArrayBuffer_optional result;

  isa = a1.super.isa;
  v3 = v1;
  TypedArrayType = -[objc_class context](a1.super.isa, sel_context);
  if (TypedArrayType)
  {
    v6 = TypedArrayType;
    v7 = (const OpaqueJSContext *)objc_msgSend(TypedArrayType, sel_JSGlobalContextRef);

    TypedArrayType = (id)JSValueGetTypedArrayType(v7, (JSValueRef)-[objc_class JSValueRef](isa, sel_JSValueRef), 0);
    if ((_DWORD)TypedArrayType != 9)
    {

      isa = 0;
    }
    *v3 = isa;
  }
  else
  {
    __break(1u);
  }
  result.value.value.super.isa = (Class)TypedArrayType;
  result.is_nil = v5;
  return result;
}

void JSArrayBuffer.init(bytesNoCopy:count:deallocator:in:)(void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, _QWORD *a6@<X8>)
{
  _QWORD *v12;
  JSObjectRef ArrayBufferWithBytesNoCopy;
  id v14;
  id v15;
  JSValueRef v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void (**v21)(const void *, void *, id);
  void (**v22)(const void *, void *, id);
  void (*v23)(const void *, void *, id);
  id v24;
  JSValueRef v25[2];

  v25[1] = *(JSValueRef *)MEMORY[0x1E0C80C00];
  type metadata accessor for JSBytesDeallocatorHolder();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v25[0] = 0;
  swift_retain();
  ArrayBufferWithBytesNoCopy = JSObjectMakeArrayBufferWithBytesNoCopy((JSContextRef)objc_msgSend(a5, sel_JSGlobalContextRef), a1, a2, (JSTypedArrayBytesDeallocator)sub_19CF07288, v12, v25);
  if (ArrayBufferWithBytesNoCopy)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, ArrayBufferWithBytesNoCopy, a5);
    if (v14)
    {
      v15 = v14;
      swift_release();

      *a6 = v15;
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  swift_release();
  v16 = v25[0];
  sub_19CDC98D8();
  swift_allocError();
  v18 = v17;
  v19 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, v16, a5);
  if (!v19)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v20 = v19;
  v21 = (void (**)(const void *, void *, id))objc_msgSend(a5, sel_exceptionHandler);
  if (v21)
  {
    v22 = v21;
    v23 = v21[2];
    v24 = v20;
    v23(v22, a5, v24);
    _Block_release(v22);

  }
  JSError.init(_:)(v20, v18);
  swift_willThrow();
  swift_release();

}

void JSArrayBuffer.init(data:in:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19CF8AA68()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t result;
  uint64_t v7;

  v5 = (void *)swift_slowAlloc();
  sub_19CFDEEB8();
  JSArrayBuffer.init(bytesNoCopy:count:deallocator:in:)(v5, BYTE6(v1), (uint64_t)sub_19CF8AB78, 0, v4, &v7);
  result = sub_19CD3BE18(v2, v1);
  if (!v3)
    *v0 = v7;
  return result;
}

uint64_t sub_19CF8AB78(uint64_t result)
{
  if (result)
    JUMPOUT(0x1A1ADBE9CLL);
  return result;
}

id JSArrayBuffer.value.getter()
{
  id *v0;

  return *v0;
}

id JSArrayBuffer.data.getter()
{
  id *v0;
  id v1;
  id result;
  void *v3;
  const OpaqueJSContext *v4;
  _BYTE *v5;
  void *v6;
  const OpaqueJSContext *v7;
  size_t ArrayBufferByteLength;

  v1 = *v0;
  result = objc_msgSend(*v0, sel_context);
  if (!result)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v3 = result;
  v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

  result = JSObjectGetArrayBufferBytesPtr(v4, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
  if (result)
  {
    v5 = result;
    result = objc_msgSend(v1, sel_context);
    if (result)
    {
      v6 = result;
      v7 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

      ArrayBufferByteLength = JSObjectGetArrayBufferByteLength(v7, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
      return (id)sub_19CCC4FA0(v5, ArrayBufferByteLength);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t static JSArrayBuffer.== infix(_:_:)()
{
  sub_19CD5956C();
  return sub_19CFDFEF0() & 1;
}

uint64_t JSArrayBuffer.description.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_description);
  v2 = sub_19CFDF578();

  return v2;
}

uint64_t sub_19CF8AD14()
{
  sub_19CD5956C();
  return sub_19CFDFEF0() & 1;
}

uint64_t sub_19CF8AD54()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_description);
  v2 = sub_19CFDF578();

  return v2;
}

ValueMetadata *type metadata accessor for JSArrayBuffer()
{
  return &type metadata for JSArrayBuffer;
}

id sub_19CF8ADE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WrappedMetricsPipeline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19CF8AE24@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_19CCF8C5C(a1, (uint64_t)v8, &qword_1ECEB1328);
  v4 = v9;
  if (v9)
  {
    v5 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v8, &qword_1ECEB1328);
    v6 = 1;
  }
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v6 & 1;
  return result;
}

uint64_t sub_19CF8AED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9[3];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_19CCF8C5C(a1, (uint64_t)v10, &qword_1ECEB1328);
  v4 = v11;
  if (!v11)
  {
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19CD3E448(a1, (uint64_t)v10);
  v9[0] = a2;
  swift_bridgeObjectRetain();
  v8 = sub_19CDC5838((uint64_t)v10, v9);
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  return v8;
}

double sub_19CF8B0A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_19CCF8C5C(a1, (uint64_t)v15, &qword_1ECEB1328);
  v6 = v16;
  if (v16)
  {
    v7 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v15);
      swift_bridgeObjectRetain();
      sub_19CF8F30C((uint64_t)v15, a2, (uint64_t)&v12);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = *(double *)&v12;
      v10 = v13;
      v11 = v14;
      *(_OWORD *)a3 = v12;
      *(_QWORD *)(a3 + 16) = v10;
      *(_QWORD *)(a3 + 24) = v11;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v15, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19CF8B280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[3];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_19CCF8C5C(a1, (uint64_t)v12, &qword_1ECEB1328);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v12);
      swift_bridgeObjectRetain();
      sub_19CF8F514((uint64_t)v12, a2, (uint64_t)v11);
      sub_19CD3E3F8(a1);
      result = swift_bridgeObjectRelease();
      v10 = v11[1];
      *a3 = v11[0];
      a3[1] = v10;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v12, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  *a3 = 0;
  a3[1] = 0;
  return result;
}

double sub_19CF8B454@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[24];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  sub_19CCF8C5C(a1, (uint64_t)&v17, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v16);
      v15 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v22;
      v10 = v23;
      a3[4] = v21;
      a3[5] = v9;
      v11 = v24;
      a3[6] = v10;
      a3[7] = v11;
      v12 = v18;
      *a3 = v17;
      a3[1] = v12;
      result = *(double *)&v19;
      v14 = v20;
      a3[2] = v19;
      a3[3] = v14;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v17, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  a3[6] = 0u;
  a3[7] = 0u;
  a3[4] = 0u;
  a3[5] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_19CF8B65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[24];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  sub_19CCF8C5C(a1, (uint64_t)&v12, &qword_1ECEB1328);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, v13);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v11);
      v10 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.Child.init(deserializing:using:)((uint64_t)v11, &v10, (uint64_t)&v12);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      return sub_19CF936D8(&v12, a3);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v12, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_WORD *)(a3 + 160) = -256;
  return result;
}

__n128 sub_19CF8B854@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  uint64_t v15;
  _BYTE v16[24];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __n128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;

  sub_19CCF8C5C(a1, (uint64_t)&v17, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v16);
      v15 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.Item.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v24;
      v10 = v26;
      *(_OWORD *)(a3 + 128) = v25;
      *(_OWORD *)(a3 + 144) = v10;
      v11 = v22;
      v12 = v23;
      *(_OWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 80) = v11;
      *(_BYTE *)(a3 + 160) = v27;
      *(_OWORD *)(a3 + 96) = v12;
      *(_OWORD *)(a3 + 112) = v9;
      v13 = v18;
      *(_OWORD *)a3 = v17;
      *(_OWORD *)(a3 + 16) = v13;
      result = v20;
      *(_OWORD *)(a3 + 32) = v19;
      *(__n128 *)(a3 + 48) = result;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v17, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a3 + 160) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19CF8BA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BCB0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Models.HTTPTemplateAction, (void (*)(_QWORD *, _QWORD *))Models.HTTPTemplateAction.init(deserializing:using:), a3);
}

double sub_19CF8BA90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  char v11;
  double result;
  _BYTE v13[24];
  _QWORD v14[2];
  __int16 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  char v19;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v4 = v16;
  if ((_QWORD)v16)
  {
    v5 = *((_QWORD *)&v16 + 1);
    __swift_project_boxed_opaque_existential_1(v14, v16);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v6 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v13);
      swift_bridgeObjectRetain();
      Models.HTTPTemplateAction.Parameter.init(deserializing:using:)((uint64_t)v13, (uint64_t)v14);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v7 = v14[1];
      v8 = v15;
      v9 = v17;
      v10 = v18;
      v11 = v19;
      *(_QWORD *)a2 = v14[0];
      *(_QWORD *)(a2 + 8) = v7;
      *(_WORD *)(a2 + 16) = v8;
      result = *(double *)&v16;
      *(_OWORD *)(a2 + 24) = v16;
      *(_BYTE *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 48) = v10;
      *(_BYTE *)(a2 + 56) = v11;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)(a2 + 41) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t sub_19CF8BC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BCB0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Models.ExternalURLAction, (void (*)(_QWORD *, _QWORD *))Models.ExternalURLAction.init(deserializing:using:), a3);
}

uint64_t sub_19CF8BCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(_QWORD *, _QWORD *)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  char v18;
  uint64_t v19;
  _QWORD v21[2];
  void (*v22)(_QWORD *, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v22 = a4;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v21 - v13;
  sub_19CCF8C5C(a1, (uint64_t)v26, &qword_1ECEB1328);
  v15 = v27;
  v24 = v10;
  if (!v27)
  {
    sub_19CCECFE4((uint64_t)v26, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v21[1] = v5;
  v16 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 104);
  v23 = a5;
  v18 = v17(v15, v16);
  a5 = v23;
  LOBYTE(v16) = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  if ((v16 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    v19 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, v19, 1, v24);
  }
  sub_19CD3E448(a1, (uint64_t)v26);
  v25[0] = a2;
  swift_bridgeObjectRetain();
  v22(v26, v25);
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  a5 = v23;
  sub_19CCFE8AC((uint64_t)v14, v23, a3);
  v19 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, v19, 1, v24);
}

__n128 sub_19CF8BF14@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 result;
  uint64_t v14;
  _BYTE v15[24];
  __int128 v16;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  sub_19CCF8C5C(a1, (uint64_t)&v16, &qword_1ECEB1328);
  v6 = v17.n128_u64[1];
  if (v17.n128_u64[1])
  {
    v7 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, v17.n128_i64[1]);
    v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v15);
      v14 = a2;
      swift_bridgeObjectRetain();
      Models.ToastAction.init(deserializing:using:)((uint64_t)v15, &v14, (uint64_t)&v16);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v21;
      v10 = v23;
      v11 = v24;
      *(_OWORD *)(a3 + 96) = v22;
      *(_OWORD *)(a3 + 112) = v10;
      *(_OWORD *)(a3 + 128) = v11;
      v12 = v19;
      *(_OWORD *)(a3 + 32) = v18;
      *(_OWORD *)(a3 + 48) = v12;
      *(_OWORD *)(a3 + 64) = v20;
      *(_OWORD *)(a3 + 80) = v9;
      result = v17;
      *(_OWORD *)a3 = v16;
      *(__n128 *)(a3 + 16) = result;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v16, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19CF8C124@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[24];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  sub_19CCF8C5C(a1, (uint64_t)&v17, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v16);
      v15 = a2;
      swift_bridgeObjectRetain();
      Models.AlertAction.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v24;
      v10 = v25;
      v11 = v22;
      *(_OWORD *)(a3 + 96) = v23;
      *(_OWORD *)(a3 + 112) = v9;
      *(_OWORD *)(a3 + 128) = v10;
      *(_QWORD *)(a3 + 144) = v26;
      v12 = v20;
      *(_OWORD *)(a3 + 32) = v19;
      *(_OWORD *)(a3 + 48) = v12;
      *(_OWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 80) = v11;
      result = *(double *)&v17;
      v14 = v18;
      *(_OWORD *)a3 = v17;
      *(_OWORD *)(a3 + 16) = v14;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v17, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

__n128 sub_19CF8C348@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __n128 result;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  __n128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  sub_19CCF8C5C(a1, (uint64_t)&v13, &qword_1ECEB1328);
  v6 = v14.n128_u64[1];
  if (v14.n128_u64[1])
  {
    v7 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, v14.n128_i64[1]);
    v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v12);
      v11 = a2;
      swift_bridgeObjectRetain();
      Models.AlertAction.Button.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)&v13);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v16;
      *(_OWORD *)(a3 + 32) = v15;
      *(_OWORD *)(a3 + 48) = v9;
      *(_QWORD *)(a3 + 64) = v17;
      result = v14;
      *(_OWORD *)a3 = v13;
      *(__n128 *)(a3 + 16) = result;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v13, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 64) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19CF8C544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BCB0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Models.HTTPAction, (void (*)(_QWORD *, _QWORD *))Models.HTTPAction.init(deserializing:using:), a3);
}

uint64_t sub_19CF8C558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BCB0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Bag.ValueOverride, (void (*)(_QWORD *, _QWORD *))Bag.ValueOverride.init(deserializing:using:), a3);
}

double sub_19CF8C56C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  double result;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (v15)
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      v13 = a2;
      swift_bridgeObjectRetain();
      sub_19CE6F304((uint64_t)v14, (uint64_t)v11);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v11[1];
      *(_QWORD *)a3 = v11[0];
      *(_QWORD *)(a3 + 8) = v9;
      result = *(double *)&v12;
      *(_OWORD *)(a3 + 16) = v12;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19CF8C750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_19CCF8C5C(a1, (uint64_t)v7, &qword_1ECEB1328);
  v2 = v8;
  if (!v8)
  {
    sub_19CCECFE4((uint64_t)v7, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v3 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  if ((v4 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19CD3E448(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  v6 = sub_19CCD2994((uint64_t)v7);
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19CF8C930@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[40];
  uint64_t __src[43];

  sub_19CCF8C5C(a1, (uint64_t)__src, &qword_1ECEB1328);
  v4 = __src[3];
  if (__src[3])
  {
    v5 = __src[4];
    __swift_project_boxed_opaque_existential_1(__src, __src[3]);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)__src);
    if ((v6 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v8);
      swift_bridgeObjectRetain();
      JSNetworkPerformanceMetrics.init(deserializing:using:)((uint64_t)v8, __src);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      memcpy(a2, __src, 0x158uLL);
      return nullsub_1(a2);
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)__src, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  sub_19CF49FE4((uint64_t)__src);
  return sub_19CF93750((uint64_t)__src, (uint64_t)a2);
}

uint64_t sub_19CF8CA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  char v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (!v15)
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  if ((v8 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v10 = -1;
    goto LABEL_6;
  }
  sub_19CD3E448(a1, (uint64_t)v14);
  v13 = a2;
  swift_bridgeObjectRetain();
  JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)((uint64_t)v14, (uint64_t)&v11);
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  v10 = v12;
  *(_OWORD *)a3 = v11;
LABEL_6:
  *(_BYTE *)(a3 + 16) = v10;
  return result;
}

uint64_t sub_19CF8CC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (v15)
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      v13 = a2;
      swift_bridgeObjectRetain();
      sub_19CDC37F8((uint64_t)v14, &v13, (uint64_t)v11);
      sub_19CD3E3F8(a1);
      result = swift_bridgeObjectRelease();
      v10 = v12;
      *(_BYTE *)a3 = v11[0];
      *(_QWORD *)(a3 + 8) = v10;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  return result;
}

double sub_19CF8CE0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  double v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_19CCF8C5C(a1, (uint64_t)v12, &qword_1ECEB1328);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v12);
      v11 = a2;
      swift_bridgeObjectRetain();
      LintedMetricsEvent.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)v10);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = v10[0];
      *(_OWORD *)a3 = *(_OWORD *)v10;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v12, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  return result;
}

double sub_19CF8CFE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  _BYTE v15[24];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  sub_19CCF8C5C(a1, (uint64_t)&v16, &qword_1ECEB1328);
  v6 = v18;
  if (v18)
  {
    v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v16, v18);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v15);
      v14 = a2;
      swift_bridgeObjectRetain();
      ImpressionMetrics.init(deserializing:using:)((uint64_t)v15, &v14, &v16);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v17;
      v10 = v18;
      v11 = v20;
      v12 = v22;
      *(_OWORD *)a3 = v16;
      *(_QWORD *)(a3 + 16) = v9;
      *(_QWORD *)(a3 + 24) = v10;
      *(_OWORD *)(a3 + 32) = v19;
      *(_QWORD *)(a3 + 48) = v11;
      result = *(double *)&v21;
      *(_OWORD *)(a3 + 56) = v21;
      *(_QWORD *)(a3 + 72) = v12;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v16, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19CF8D1F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)&v12, &qword_1ECEB1328);
  v4 = v14;
  if (v14)
  {
    v5 = v15;
    __swift_project_boxed_opaque_existential_1(&v12, v14);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
    if ((v6 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v11);
      swift_bridgeObjectRetain();
      ImpressionMetrics.ID.init(deserializing:using:)((uint64_t)v11, (uint64_t)&v12);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v7 = v13;
      v8 = v14;
      v9 = v16;
      *(_OWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v7;
      *(_QWORD *)(a2 + 24) = v8;
      result = *(double *)&v15;
      *(_OWORD *)(a2 + 32) = v15;
      *(_QWORD *)(a2 + 48) = v9;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v12, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

double sub_19CF8D3EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  double result;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (v15)
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      v13 = a2;
      swift_bridgeObjectRetain();
      CompoundAction.init(deserializing:using:)((uint64_t)v14, &v13, (uint64_t *)&v11);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v12;
      result = *(double *)&v11;
      *(_OWORD *)a3 = v11;
      *(_QWORD *)(a3 + 16) = v9;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  return result;
}

double sub_19CF8D5D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  double v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_19CCF8C5C(a1, (uint64_t)v12, &qword_1ECEB1328);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v12);
      v11 = a2;
      swift_bridgeObjectRetain();
      ActionMetrics.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)v10);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = v10[0];
      *(_OWORD *)a3 = *(_OWORD *)v10;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v12, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  return result;
}

double sub_19CF8D7A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  double result;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  sub_19CCF8C5C(a1, (uint64_t)&v14, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v13);
      v12 = a2;
      swift_bridgeObjectRetain();
      MediaArtwork.init(deserializing:using:)((uint64_t)v13, &v12, (uint64_t)&v14);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v17;
      *(_OWORD *)(a3 + 32) = v16;
      *(_OWORD *)(a3 + 48) = v9;
      *(_OWORD *)(a3 + 64) = v18;
      *(_QWORD *)(a3 + 80) = v19;
      result = *(double *)&v14;
      v11 = v15;
      *(_OWORD *)a3 = v14;
      *(_OWORD *)(a3 + 16) = v11;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19CF8D9B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  double result;
  uint64_t v11[2];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (v15)
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      v13 = a2;
      swift_bridgeObjectRetain();
      PageMetrics.init(deserializing:using:)((uint64_t)v14, &v13, v11);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      v9 = v11[1];
      *(_QWORD *)a3 = v11[0];
      *(_QWORD *)(a3 + 8) = v9;
      result = *(double *)&v12;
      *(_OWORD *)(a3 + 16) = v12;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

__n128 sub_19CF8DB94@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 result;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];
  __n128 v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_19CCF8C5C(a1, (uint64_t)v14, &qword_1ECEB1328);
  v6 = v15;
  if (v15)
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      swift_bridgeObjectRetain();
      JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v12);
      v11 = a2;
      ActionMetrics.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)&v13);
      sub_19CD3E3F8((uint64_t)v14);
      v10 = v13;
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = v10;
      *a3 = v10;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

double sub_19CF8DDA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_19CCF8C5C(a1, (uint64_t)&v14, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v13);
      swift_bridgeObjectRetain();
      sub_19CF8F714((uint64_t)v13, a2, (uint64_t)&v14);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = *(double *)&v14;
      v10 = v15;
      v11 = v16;
      v12 = v17;
      *(_OWORD *)a3 = v14;
      *(_OWORD *)(a3 + 16) = v10;
      *(_QWORD *)(a3 + 32) = v11;
      *(_QWORD *)(a3 + 40) = v12;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v14, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_19CF8DF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF8BCB0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for NetRequest, (void (*)(_QWORD *, _QWORD *))NetRequest.init(deserializing:using:), a3);
}

unint64_t sub_19CF8DFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_19CCF8C5C(a1, (uint64_t)v10, &qword_1ECEB1328);
  v4 = v11;
  if (!v11)
  {
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19CD3E448(a1, (uint64_t)v10);
  v9 = a2;
  swift_bridgeObjectRetain();
  v8 = sub_19CCBF1DC((uint64_t)v10);
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_19CF8E170(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v8;
  id v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_19CCF8C5C(a1, (uint64_t)v10, &qword_1ECEB1328);
  v4 = v11;
  if (!v11)
  {
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19CD3E448(a1, (uint64_t)v10);
  v9 = a2;
  swift_bridgeObjectRetain();
  v8 = sub_19CF8F91C((uint64_t)v10, &v9);
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  return v8;
}

__n128 sub_19CF8E344@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 result;
  __int128 v10;
  uint64_t v11;
  _BYTE v12[40];
  __int128 v13[2];
  _BYTE v14[24];
  __n128 v15;
  __int128 v16;
  uint64_t v17;

  sub_19CCF8C5C(a1, (uint64_t)&v15, &qword_1ECEB1328);
  v6 = *((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v15);
    if ((v8 & 1) == 0)
    {
      sub_19CD3E448(a1, (uint64_t)v14);
      swift_bridgeObjectRetain();
      JSONObject.subscript.getter(0x6575676573, 0xE500000000000000, (uint64_t)v12);
      v11 = a2;
      static AnyActionTypes.makeInstance(byDeserializing:using:)((uint64_t)v12, &v11, (uint64_t)v13);
      sub_19CD3E3F8((uint64_t)v14);
      sub_19CD3E3F8((uint64_t)v12);
      swift_bridgeObjectRelease();
      sub_19CCD14C4(v13, (uint64_t)&v15);
      sub_19CD3E3F8(a1);
      swift_bridgeObjectRelease();
      result = v15;
      v10 = v16;
      *(__n128 *)a3 = v15;
      *(_OWORD *)(a3 + 16) = v10;
      *(_QWORD *)(a3 + 32) = v17;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v15, &qword_1ECEB1328);
  }
  sub_19CD3E3F8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 32) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

double sub_19CF8E570@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  double result;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  _QWORD v28[4];
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v30 = 0u;
    v31 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  if ((v9 & 1) == 0)
  {
    v30 = 0u;
    v31 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
  {
LABEL_8:
    sub_19CCECFE4((uint64_t)&v30, &qword_1ECEB3370);
    goto LABEL_9;
  }
  sub_19CD433C0(&v30, v33);
  sub_19CD436B0((uint64_t)v33, (uint64_t)&v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436C30);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    sub_19CCD14C4(&v30, a4);
    return result;
  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  sub_19CCECFE4((uint64_t)&v30, qword_1EE43A238);
  if (qword_1EE43BE78 != -1)
    swift_once();
  v11 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19D052350;
  v13 = v11;
  v29 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
  v14._object = (void *)0x800000019D070120;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B10);
  v28[0] = a1;
  v28[1] = a2;
  sub_19CCF8C5C((uint64_t)v28, (uint64_t)v27, &qword_1ECEB3370);
  v25 = 0u;
  v26 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
  LOBYTE(v32) = 0;
  v30 = v25;
  v31 = v26;
  v15 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v18 = &v15[5 * v17];
  v19 = v30;
  v20 = v31;
  *((_BYTE *)v18 + 64) = v32;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  v29 = v15;
  sub_19CCECFE4((uint64_t)v28, &qword_1ECEB3370);
  v21._countAndFlagsBits = 96;
  v21._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v12 + 32) = v29;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v22 = swift_allocObject();
  v23 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v26 + 1) = v23;
  *(_QWORD *)&v25 = 0xD000000000000027;
  *((_QWORD *)&v25 + 1) = 0x800000019D06F490;
  v30 = 0u;
  v31 = 0u;
  sub_19CD40658((uint64_t)&v25, (uint64_t)&v30);
  *(_BYTE *)(v22 + 64) = 0;
  v24 = v31;
  *(_OWORD *)(v22 + 32) = v30;
  *(_OWORD *)(v22 + 48) = v24;
  *(_QWORD *)(v12 + 40) = v22;
  *(_QWORD *)&v30 = v13;
  LOBYTE(v25) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v25);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
LABEL_9:
  *(_QWORD *)(a4 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_19CF8E8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD22F24(a1, a2, a3, &qword_1EE43CAA8, qword_1EE443650);
}

uint64_t sub_19CF8E900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t result;
  __int128 v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  char v31;
  _QWORD v32[4];
  _QWORD *v33;
  _OWORD v34[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v29 = 0u;
    v30 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  if ((v9 & 1) == 0)
  {
    v29 = 0u;
    v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
  {
LABEL_8:
    result = sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
LABEL_9:
    v11 = xmmword_19D067A00;
    goto LABEL_10;
  }
  sub_19CD433C0(&v29, v34);
  sub_19CD436B0((uint64_t)v34, (uint64_t)&v29);
  if (!swift_dynamicCast())
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v12 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D052350;
    v14 = v12;
    v33 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
    v15._object = (void *)0x800000019D070120;
    v15._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443640);
    v32[0] = a1;
    v32[1] = a2;
    sub_19CCF8C5C((uint64_t)v32, (uint64_t)v28, &qword_1ECEB3370);
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
    v31 = 0;
    v29 = v26;
    v30 = v27;
    v16 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v29;
    v21 = v30;
    *((_BYTE *)v19 + 64) = v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v33 = v16;
    sub_19CCECFE4((uint64_t)v32, &qword_1ECEB3370);
    v22._countAndFlagsBits = 96;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(_QWORD *)(v13 + 32) = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v23 = swift_allocObject();
    v24 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v27 + 1) = v24;
    *(_QWORD *)&v26 = 0xD000000000000027;
    *((_QWORD *)&v26 + 1) = 0x800000019D06F490;
    v29 = 0u;
    v30 = 0u;
    sub_19CD40658((uint64_t)&v26, (uint64_t)&v29);
    *(_BYTE *)(v23 + 64) = 0;
    v25 = v30;
    *(_OWORD *)(v23 + 32) = v29;
    *(_OWORD *)(v23 + 48) = v25;
    *(_QWORD *)(v13 + 40) = v23;
    *(_QWORD *)&v29 = v14;
    LOBYTE(v26) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

    swift_bridgeObjectRelease();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    goto LABEL_9;
  }
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  v11 = v26;
LABEL_10:
  *a4 = v11;
  return result;
}

uint64_t sub_19CF8EC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD22F24(a1, a2, a3, &qword_1EE441AF0, &qword_1EE441AF8);
}

uint64_t sub_19CF8EC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  char v31;
  _QWORD v32[4];
  _QWORD *v33;
  _OWORD v34[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v29 = 0u;
    v30 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_19CD3FD1C(a1, a2);
  if ((v9 & 1) == 0)
  {
    v29 = 0u;
    v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
  {
LABEL_8:
    result = sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
    goto LABEL_9;
  }
  sub_19CD433C0(&v29, v34);
  sub_19CD436B0((uint64_t)v34, (uint64_t)&v29);
  if (swift_dynamicCast())
  {
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    v11 = v27;
    *(_OWORD *)a4 = v26;
    *(_QWORD *)(a4 + 16) = v11;
    return result;
  }
  if (qword_1EE43BE78 != -1)
    swift_once();
  v12 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19D052350;
  v14 = v12;
  v33 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
  v15._object = (void *)0x800000019D070120;
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443648);
  v32[0] = a1;
  v32[1] = a2;
  sub_19CCF8C5C((uint64_t)v32, (uint64_t)v28, &qword_1ECEB3370);
  v26 = 0u;
  v27 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
  v31 = 0;
  v29 = v26;
  v30 = v27;
  v16 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v19 = &v16[5 * v18];
  v20 = v29;
  v21 = v30;
  *((_BYTE *)v19 + 64) = v31;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  v33 = v16;
  sub_19CCECFE4((uint64_t)v32, &qword_1ECEB3370);
  v22._countAndFlagsBits = 96;
  v22._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(_QWORD *)(v13 + 32) = v33;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v27 + 1) = v24;
  *(_QWORD *)&v26 = 0xD000000000000027;
  *((_QWORD *)&v26 + 1) = 0x800000019D06F490;
  v29 = 0u;
  v30 = 0u;
  sub_19CD40658((uint64_t)&v26, (uint64_t)&v29);
  *(_BYTE *)(v23 + 64) = 0;
  v25 = v30;
  *(_OWORD *)(v23 + 32) = v29;
  *(_OWORD *)(v23 + 48) = v25;
  *(_QWORD *)(v13 + 40) = v23;
  *(_QWORD *)&v29 = v14;
  LOBYTE(v26) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
LABEL_9:
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  return result;
}

uint64_t sub_19CF8EFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  void *v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  char v28;
  _QWORD v29[4];
  _QWORD *v30;
  _OWORD v31[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v26 = 0u;
    v27 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v6 = sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) == 0)
  {
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_8:
    sub_19CCECFE4((uint64_t)&v26, &qword_1ECEB3370);
    return 0;
  }
  sub_19CD433C0(&v26, v31);
  sub_19CD436B0((uint64_t)v31, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B00);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1EE43BE78 != -1)
    swift_once();
  v9 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D052350;
  v11 = v9;
  v30 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
  v12._object = (void *)0x800000019D070120;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B08);
  v29[0] = a1;
  v29[1] = a2;
  sub_19CCF8C5C((uint64_t)v29, (uint64_t)v25, &qword_1ECEB3370);
  v23 = 0u;
  v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
  v28 = 0;
  v26 = v23;
  v27 = v24;
  v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v26;
  v18 = v27;
  *((_BYTE *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v30 = v13;
  sub_19CCECFE4((uint64_t)v29, &qword_1ECEB3370);
  v19._countAndFlagsBits = 96;
  v19._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v20 = swift_allocObject();
  v21 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v24 + 1) = v21;
  *(_QWORD *)&v23 = 0xD000000000000027;
  *((_QWORD *)&v23 + 1) = 0x800000019D06F490;
  v26 = 0u;
  v27 = 0u;
  sub_19CD40658((uint64_t)&v23, (uint64_t)&v26);
  *(_BYTE *)(v20 + 64) = 0;
  v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v10 + 40) = v20;
  *(_QWORD *)&v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

void sub_19CF8F30C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v7 = sub_19CFE01B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v23 - v14;
  sub_19CF8FBBC(a2, (uint64_t *)&v23);
  if (v3)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v23 = v3;
    v16 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
      sub_19CDC5494();
      swift_allocError();
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v19 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v11, v7);
      *v18 = &type metadata for ShelfID;
      v18[1] = v19;
      v18[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19CD3E3F8(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      sub_19CD3E3F8(a1);
    }

  }
  else
  {
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    v21 = v24;
    v22 = v25;
    *(_OWORD *)a3 = v23;
    *(_QWORD *)(a3 + 16) = v21;
    *(_QWORD *)(a3 + 24) = v22;
  }
}

void sub_19CF8F514(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22[2];

  v7 = sub_19CFE01B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v22 - v14;
  sub_19CF8FC84(a2, (uint64_t *)v22);
  if (v3)
  {
    swift_bridgeObjectRelease();
    v22[0] = v3;
    v16 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
      sub_19CDC5494();
      swift_allocError();
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v19 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v11, v7);
      *v18 = &type metadata for PageID;
      v18[1] = v19;
      v18[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19CD3E3F8(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      sub_19CD3E3F8(a1);
    }

  }
  else
  {
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    v21 = v22[1];
    *(id *)a3 = v22[0];
    *(_QWORD *)(a3 + 8) = v21;
  }
}

void sub_19CF8F714(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v7 = sub_19CFE01B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v24 - v14;
  sub_19CF8FD4C(a2, (uint64_t *)v24);
  if (v3)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v24[0] = v3;
    v16 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
      sub_19CDC5494();
      swift_allocError();
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v19 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v11, v7);
      *v18 = &type metadata for ComponentID;
      v18[1] = v19;
      v18[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19CD3E3F8(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      sub_19CD3E3F8(a1);
    }

  }
  else
  {
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    v21 = v24[1];
    v22 = v25;
    v23 = v26;
    *(_OWORD *)a3 = v24[0];
    *(_OWORD *)(a3 + 16) = v21;
    *(_QWORD *)(a3 + 32) = v22;
    *(_QWORD *)(a3 + 40) = v23;
  }
}

unint64_t sub_19CF8F91C(uint64_t a1, id *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  _QWORD v24[5];
  id v25[9];

  v5 = sub_19CFE01B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v23 - v12;
  v23[1] = a2;
  v25[0] = *a2;
  swift_bridgeObjectRetain();
  v14 = (void *)_sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)v25);
  sub_19CD3E448(a1, (uint64_t)v25);
  v25[5] = v14;
  v25[6] = (id)MEMORY[0x1E0DEE9D8];
  v24[3] = &type metadata for _JSONObjectDecoder;
  v24[4] = sub_19CD21828();
  v24[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v25, v24[0] + 16);
  swift_bridgeObjectRetain();
  v15 = sub_19CDE7368(v24);
  v25[8] = v16;
  if (v2)
  {
    sub_19CD21708((uint64_t)v25);
    swift_bridgeObjectRelease();
    v25[0] = v2;
    v17 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, v5);
      sub_19CDC5494();
      swift_allocError();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v20 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v21, v9, v5);
      *v19 = &type metadata for Models.AdamID;
      v19[1] = v20;
      v19[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19CD3E3F8(a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_19CD3E3F8(a1);
    }

  }
  else
  {
    sub_19CD21708((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
  }
  return v15;
}

uint64_t sub_19CF8FBBC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7[7];

  v7[0] = a1;
  swift_bridgeObjectRetain();
  v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19CD3E448(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E0DEE9D8];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19CD21828();
  v6[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  ShelfID.init(from:)(v6, a2);
  sub_19CD21708((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF8FC84@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7[7];

  v7[0] = a1;
  swift_bridgeObjectRetain();
  v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19CD3E448(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E0DEE9D8];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19CD21828();
  v6[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  PageID.init(from:)(v6, a2);
  sub_19CD21708((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF8FD4C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7[7];

  v7[0] = a1;
  swift_bridgeObjectRetain();
  v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19CD3E448(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E0DEE9D8];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19CD21828();
  v6[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  ComponentID.init(from:)(v6, a2);
  sub_19CD21708((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t NetRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t result;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t *v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  _QWORD *v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  _OWORD v109[2];
  __int128 v110;
  uint64_t v111;
  uint64_t v112[3];
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  _QWORD *v119;

  v96 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v3, v4);
  v99 = (char *)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_19CFDEDE0();
  v98 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100, v6);
  v97 = (char *)v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443548);
  v8 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101, v9);
  v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v15[v16[5]];
  *(_QWORD *)v17 = 5522759;
  *((_QWORD *)v17 + 1) = 0xE300000000000000;
  *(_QWORD *)&v108 = v17;
  v18 = v16[6];
  *(_QWORD *)&v15[v18] = 0;
  v19 = v16[7];
  v20 = MEMORY[0x1E0DEE9D8];
  v21 = sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  v106 = v19;
  *(_QWORD *)&v15[v19] = v21;
  v22 = v12[8];
  *(_QWORD *)&v15[v22] = 0x403E000000000000;
  v23 = &v15[v12[9]];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v102 = v23;
  v23[16] = 0;
  v24 = &v15[v12[10]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v103 = v24;
  v25 = v12[11];
  v26 = sub_19CD20744(v20);
  v105 = v15;
  v107 = v25;
  *(_QWORD *)&v15[v25] = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF92924();
  v27 = v104;
  sub_19CFE09E8();
  if (v27)
    goto LABEL_4;
  v28 = v99;
  v94 = v18;
  v93 = v21;
  v92 = v22;
  v95 = v8;
  v104 = a1;
  LOBYTE(v117) = 0;
  v29 = v101;
  sub_19CFE0490();
  v30 = v29;
  v31 = (uint64_t)v28;
  sub_19CFDEDA4();
  swift_bridgeObjectRelease();
  v32 = v98;
  v33 = v28;
  v34 = v100;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v33, 1, v100) == 1)
  {
    sub_19CCECFE4(v31, (uint64_t *)&unk_1ECEB3030);
    v35 = sub_19CFE01B4();
    swift_allocError();
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
    *v37 = v100;
    a1 = v104;
    __swift_project_boxed_opaque_existential_1(v104, v104[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x1E0DEC450], v35);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v11, v101);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v39 = v31;
  v40 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v97, v39, v34);
  v41 = (uint64_t)v105;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v105, v40, v34);
  v42 = v11;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
  LOBYTE(v114) = 2;
  v44 = sub_19CF43860();
  sub_19CFE04B4();
  v99 = 0;
  v91[1] = v44;
  v45 = *((_QWORD *)&v117 + 1);
  if (*((_QWORD *)&v117 + 1))
  {
    v46 = v108;
    *(_QWORD *)v108 = v117;
    *(_QWORD *)(v46 + 8) = v45;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443558);
  LOBYTE(v114) = 4;
  sub_19CF92968();
  v47 = v99;
  sub_19CFE04B4();
  if (v47)
  {
    v48 = v40;
    v49 = *(void (**)(char *, uint64_t))(v98 + 8);
    v49(v48, v34);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v42, v30);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
    v49((char *)v41, v34);
    goto LABEL_5;
  }
  if (BYTE8(v117) != 1)
    *(_QWORD *)(v41 + v94) = v117;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443580);
  LOBYTE(v114) = 5;
  sub_19CF92A48();
  sub_19CFE0484();
  v99 = (char *)v43;
  v50 = v117;
  if ((_QWORD)v117)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + v106) = v50;
  }
  v51 = v92;
  v52 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFB0);
  LOBYTE(v114) = 3;
  sub_19CE6F800();
  sub_19CFE04B4();
  if ((BYTE8(v117) & 1) == 0)
    *(_QWORD *)(v41 + v51) = v117;
  LOBYTE(v114) = 1;
  sub_19CFE0484();
  v53 = *((_QWORD *)&v117 + 1);
  v54 = v104;
  if (*((_QWORD *)&v117 + 1) >= 2uLL)
  {
    v55 = v103;
    *(_QWORD *)v103 = v117;
    *((_QWORD *)v55 + 1) = v53;
  }
  v56 = 0xD00000000000001FLL;
  __swift_project_boxed_opaque_existential_1(v54, v54[3]);
  v57 = sub_19CFE09DC();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v57);
  v58 = v117;
  swift_bridgeObjectRetain();
  v59 = sub_19CD22F24(0xD00000000000001FLL, 0x800000019D06E010, v58, &qword_1EE43CAA8, qword_1EE443650);
  v99 = (char *)v58;
  swift_bridgeObjectRelease();
  if (!v59)
  {
    v91[0] = v52;
    swift_bridgeObjectRelease();
    if (qword_1EE43BE78 != -1)
LABEL_40:
      swift_once();
    v60 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v62 = swift_allocObject();
    v108 = xmmword_19D0522A0;
    v63 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v62 + 16) = xmmword_19D0522A0;
    v116 = v63;
    v114 = (char *)(v56 + 19);
    v115 = 0x800000019D079080;
    v117 = 0u;
    v118 = 0u;
    v64 = v60;
    sub_19CD40658((uint64_t)&v114, (uint64_t)&v117);
    *(_BYTE *)(v62 + 64) = 0;
    v65 = v118;
    *(_OWORD *)(v62 + 32) = v117;
    *(_OWORD *)(v62 + 48) = v65;
    *(_QWORD *)(v61 + 32) = v62;
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v108;
    v116 = v63;
    v114 = (char *)(v56 + 15);
    v115 = 0x800000019D0790C0;
    v117 = 0u;
    v118 = 0u;
    sub_19CD40658((uint64_t)&v114, (uint64_t)&v117);
    *(_BYTE *)(v66 + 64) = 0;
    v67 = v118;
    *(_OWORD *)(v66 + 32) = v117;
    *(_OWORD *)(v66 + 48) = v67;
    *(_QWORD *)(v61 + 40) = v66;
    *(_QWORD *)&v117 = v64;
    LOBYTE(v114) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v61, (JetEngine::LogMessageLevel)&v114);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v100);
    (*(void (**)(_QWORD, uint64_t))(v95 + 8))(v91[0], v101);
    goto LABEL_37;
  }
  sub_19CCD5B84((uint64_t)v54, (uint64_t)&v114);
  JSONObject.init(from:)(&v114, (uint64_t *)&v117);
  v68 = *(_QWORD *)(v59 + 16);
  v94 = v59;
  if (!v68)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)&v117);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v100);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v52, v101);
LABEL_37:
    sub_19CD03280(v41, v96);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
    return sub_19CD033A8(v41);
  }
  v69 = (uint64_t *)(v59 + 40);
  v56 = 0x8000000000000000;
  v91[0] = v52;
  while (1)
  {
    v71 = *(v69 - 1);
    v72 = *v69;
    v114 = v99;
    sub_19CD20368((uint64_t)&v117, (uint64_t *)&v114, v71, v72, v112);
    sub_19CD20410();
    v73 = v113;
    v74 = __swift_project_boxed_opaque_existential_1(v112, v113);
    v111 = v73;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v110);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(boxed_opaque_existential_2Tm, v74, v73);
    sub_19CD433C0(&v110, v109);
    v76 = v107;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v119 = *(_QWORD **)(v41 + v76);
    v78 = v119;
    *(_QWORD *)(v41 + v76) = 0x8000000000000000;
    v80 = sub_19CD20240((uint64_t)&v114);
    v81 = v78[2];
    v82 = (v79 & 1) == 0;
    v83 = v81 + v82;
    if (__OFADD__(v81, v82))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v78[3] < v83)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v84 = v79;
      sub_19CE18490();
      goto LABEL_30;
    }
LABEL_32:
    v87 = v119;
    if ((v79 & 1) != 0)
    {
      v70 = (_OWORD *)(v119[7] + 32 * v80);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
      sub_19CD433C0(v109, v70);
    }
    else
    {
      v119[(v80 >> 6) + 8] |= 1 << v80;
      sub_19CD23A14((uint64_t)&v114, v87[6] + 40 * v80);
      sub_19CD433C0(v109, (_OWORD *)(v87[7] + 32 * v80));
      v88 = v87[2];
      v89 = __OFADD__(v88, 1);
      v90 = v88 + 1;
      if (v89)
        goto LABEL_39;
      v87[2] = v90;
    }
    v52 = (char *)v91[0];
    *(_QWORD *)(v41 + v107) = v87;
    swift_bridgeObjectRelease();
    sub_19CD20334((uint64_t)&v114);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v112);
    v69 += 2;
    if (!--v68)
      goto LABEL_36;
  }
  v84 = v79;
  sub_19CD20454(v83, isUniquelyReferenced_nonNull_native);
  v85 = sub_19CD20240((uint64_t)&v114);
  if ((v84 & 1) == (v86 & 1))
  {
    v80 = v85;
LABEL_30:
    v79 = v84;
    goto LABEL_32;
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t NetRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *boxed_opaque_existential_2Tm;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443598);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF92924();
  sub_19CFE0A24();
  LOBYTE(v37) = 0;
  sub_19CFDEDE0();
  sub_19CCC5C88(&qword_1EE440540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_19CFE0568();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NetRequest();
    LOBYTE(v37) = 2;
    sub_19CFE0538();
    *(_QWORD *)&v37 = *(_QWORD *)(v1 + v10[6]);
    LOBYTE(v39) = 4;
    type metadata accessor for CachePolicy(0);
    sub_19CCC5C88(qword_1EE4435A0, (uint64_t (*)(uint64_t))type metadata accessor for CachePolicy, (uint64_t)&protocol conformance descriptor for NSURLRequestCachePolicy);
    sub_19CFE0568();
    *(_QWORD *)&v37 = *(_QWORD *)(v1 + v10[7]);
    LOBYTE(v39) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
    sub_19CF92ACC();
    sub_19CFE0568();
    LOBYTE(v37) = 3;
    sub_19CFE0550();
    v37 = *(_OWORD *)(v1 + v10[10]);
    LOBYTE(v39) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
    sub_19CD20AFC((unint64_t *)&qword_1EE43F7B8, &qword_1ECEB2550, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_19CFE0568();
    v11 = a1[3];
    *(_QWORD *)&v34 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    v12 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v12);
    v13 = sub_19CD22F24(0xD00000000000001FLL, 0x800000019D06E010, v37, &qword_1EE43CAA8, qword_1EE443650);
    swift_bridgeObjectRelease();
    if (v13)
    {
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = v10[11];
        v31[1] = v13;
        v32 = v15;
        v16 = (uint64_t *)(v13 + 40);
        do
        {
          *(_QWORD *)&v34 = v14;
          v17 = *(v16 - 1);
          v18 = *(_QWORD *)(v3 + v32);
          v33 = *v16;
          v41 = v17;
          sub_19CD20410();
          if (*(_QWORD *)(v18 + 16) && (v19 = sub_19CD20240((uint64_t)&v37), (v20 & 1) != 0))
          {
            sub_19CD436B0(*(_QWORD *)(v18 + 56) + 32 * v19, (uint64_t)&v35);
          }
          else
          {
            v35 = 0u;
            v36 = 0u;
          }
          sub_19CD20334((uint64_t)&v37);
          if (*((_QWORD *)&v36 + 1))
          {
            sub_19CD433C0(&v35, &v39);
            v21 = v40;
            v22 = __swift_project_boxed_opaque_existential_1(&v39, v40);
            *((_QWORD *)&v38 + 1) = v21;
            boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v37);
            (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v22, v21);
            sub_19CEEE5F4((uint64_t)&v37, (uint64_t)a1, v41, v33);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
          }
          else
          {
            sub_19CCECFE4((uint64_t)&v35, &qword_1ECEB3370);
          }
          v16 += 2;
          v14 = v34 - 1;
        }
        while ((_QWORD)v34 != 1);
      }
    }
    else
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v24 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v25 = swift_allocObject();
      v34 = xmmword_19D0522A0;
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v26 = swift_allocObject();
      v27 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v26 + 16) = v34;
      v40 = v27;
      *(_QWORD *)&v39 = 0xD000000000000058;
      *((_QWORD *)&v39 + 1) = 0x800000019D0790F0;
      v37 = 0u;
      v38 = 0u;
      v28 = v24;
      sub_19CD40658((uint64_t)&v39, (uint64_t)&v37);
      *(_BYTE *)(v26 + 64) = 0;
      v29 = v38;
      *(_OWORD *)(v26 + 32) = v37;
      *(_OWORD *)(v26 + 48) = v29;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)&v37 = v28;
      LOBYTE(v39) = 1;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v39);

    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t NetRequest.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v7 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for NetRequest() + 44));
  return sub_19CF91114(v7, v6, a2, a3);
}

uint64_t NetRequest.ScopeContainer.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_19CF91114(*v3, a1, a2, a3);
}

uint64_t sub_19CF91114@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[40];
  _OWORD v25[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v22 - v12;
  sub_19CD20410();
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_19CD20240((uint64_t)v24), (v15 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_19CD20334((uint64_t)v24);
  if (*((_QWORD *)&v23 + 1))
  {
    sub_19CD433C0(&v22, v25);
    sub_19CD436B0((uint64_t)v25, (uint64_t)v24);
    v16 = swift_dynamicCast();
    v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    if (v16)
    {
      v18(v13, 0, 1, AssociatedTypeWitness);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a4, v13, AssociatedTypeWitness);
    }
    else
    {
      v18(v13, 1, 1, AssociatedTypeWitness);
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      __break(1u);
    }
  }
  else
  {
    v20 = sub_19CCECFE4((uint64_t)&v22, &qword_1ECEB3370);
    MEMORY[0x1E0C80A78](v20, v21);
    *((_QWORD *)&v22 - 2) = a2;
    *((_QWORD *)&v22 - 1) = a3;
    if (qword_1EE43C1C0 != -1)
      swift_once();
    sub_19CFE0A6C();
    if (v24[0] == 1)
      sub_19CFB28B8((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160, sub_19CF93798);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  }
  return result;
}

uint64_t NetRequest.ScopeContainer.subscript.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  sub_19CF92D78(a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

{
  uint64_t AssociatedTypeWitness;

  sub_19CF92E20(a1);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void (*NetRequest.ScopeContainer.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, char a2)
{
  uint64_t *v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  sub_19CF91114(*v5, a4, a5, (uint64_t)v15);
  return sub_19CF9149C;
}

void sub_19CF9149C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 56), v4, v5);
    sub_19CF92D78((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_19CF92D78(*(_QWORD *)(*(_QWORD *)a1 + 64));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.ScopeContainer.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_19CF91114(*v3, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8), a2, a3);
}

uint64_t sub_19CF91594@<X0>(_QWORD **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  v5 = *a1;
  swift_bridgeObjectRetain();
  NetRequest.ScopeContainer.subscript.getter(v5, v4, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF915FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for NetRequest.ScopeContainer(0, *(_QWORD *)(a4 + a3 - 32), *(_QWORD *)(a4 + a3 - 16), a4);
  return sub_19CF92E20(a1);
}

void (*NetRequest.ScopeContainer.subscript.modify(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  size_t v13;
  void *v14;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *v9 = a3;
  v10 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8);
  v9[3] = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v9[6] = malloc(v13);
  v14 = malloc(v13);
  v9[7] = v14;
  sub_19CF91114(*v4, v10, a4, (uint64_t)v14);
  return sub_19CF917B8;
}

void sub_19CF917B8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    sub_19CF92D78((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_19CF92D78(*(_QWORD *)(*(_QWORD *)a1 + 56));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (int *)type metadata accessor for NetRequest();
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 5522759;
  v5[1] = 0xE300000000000000;
  *(_QWORD *)(a2 + v4[6]) = 0;
  v6 = v4[7];
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + v6) = sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(a2 + v4[8]) = 0x403E000000000000;
  v8 = a2 + v4[9];
  *(_QWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_BYTE *)(v8 + 16) = 0;
  v9 = (_QWORD *)(a2 + v4[10]);
  *v9 = 0;
  v9[1] = 0;
  v10 = v4[11];
  *(_QWORD *)(a2 + v10) = sub_19CD20744(v7);
  v11 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a2, a1, v11);
}

uint64_t NetRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NetRequest.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NetRequest.url.modify())()
{
  return nullsub_1;
}

uint64_t NetRequest.method.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetRequest.method.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetRequest() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetRequest.method.modify())(_QWORD)
{
  type metadata accessor for NetRequest();
  return nullsub_1;
}

uint64_t NetRequest.cache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetRequest() + 24));
}

uint64_t NetRequest.cache.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetRequest();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NetRequest.cache.modify())(_QWORD)
{
  type metadata accessor for NetRequest();
  return nullsub_1;
}

uint64_t NetRequest.headers.getter()
{
  type metadata accessor for NetRequest();
  return swift_bridgeObjectRetain();
}

uint64_t NetRequest.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NetRequest() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetRequest.headers.modify())(_QWORD)
{
  type metadata accessor for NetRequest();
  return nullsub_1;
}

double NetRequest.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for NetRequest() + 32));
}

uint64_t NetRequest.timeout.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetRequest();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*NetRequest.timeout.modify())(_QWORD)
{
  type metadata accessor for NetRequest();
  return nullsub_1;
}

uint64_t NetRequest.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetRequest() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetRequest.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetRequest() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetRequest.body.modify())(_QWORD)
{
  type metadata accessor for NetRequest();
  return nullsub_1;
}

uint64_t sub_19CF91C88()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAD8);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE43C1A8 = result;
  return result;
}

uint64_t sub_19CF91CD8()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t NetRequest.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for NetRequest() + 44));
  return sub_19CF91114(v7, a1, a2, a3);
}

uint64_t NetRequest.subscript.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  sub_19CF92E34(a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

{
  uint64_t AssociatedTypeWitness;

  sub_19CF92EE8(a1);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void (*NetRequest.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  v14 = type metadata accessor for NetRequest();
  sub_19CF91114(*(_QWORD *)(v4 + *(int *)(v14 + 44)), a3, a4, (uint64_t)v13);
  return sub_19CF91F40;
}

void sub_19CF91F40(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    sub_19CF92E34((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_19CF92E34(*(_QWORD *)(*(_QWORD *)a1 + 56));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void (*NetRequest.subscript.modify(_QWORD *a1, _QWORD *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  size_t v11;
  void *v12;
  uint64_t v13;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = a3;
  v7[1] = v3;
  v8 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8);
  v7[2] = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[4] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v7[5] = malloc(v11);
  v12 = malloc(v11);
  v7[6] = v12;
  v13 = type metadata accessor for NetRequest();
  sub_19CF91114(*(_QWORD *)(v3 + *(int *)(v13 + 44)), v8, a3, (uint64_t)v12);
  return sub_19CF92170;
}

void sub_19CF92170(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 40), v4, v5);
    sub_19CF92E34((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_19CF92E34(*(_QWORD *)(*(_QWORD *)a1 + 48));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.subscript.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for NetRequest() + 44));
  return swift_bridgeObjectRetain();
}

{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for NetRequest() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t NetRequest.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  _OWORD *v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  _OWORD v34[2];
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  _BYTE v40[40];
  _OWORD v41[2];
  uint64_t v42;

  v5 = v4;
  v6 = *a1;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v9 = *(int *)(type metadata accessor for NetRequest() + 44);
  for (i = v7 + 40; ; i += 16)
  {
    sub_19CD20410();
    sub_19CD23A14((uint64_t)v41, (uint64_t)v40);
    v38[0] = v41[0];
    v38[1] = v41[1];
    v39 = v42;
    if (*(_QWORD *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_19CD20240((uint64_t)v38);
      if ((v13 & 1) != 0)
      {
        sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v12, (uint64_t)&v36);
      }
      else
      {
        v36 = 0u;
        v37 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    sub_19CD20334((uint64_t)v38);
    if (!*((_QWORD *)&v37 + 1))
    {
      sub_19CCECFE4((uint64_t)&v36, &qword_1ECEB3370);
      swift_bridgeObjectRetain();
      v25 = sub_19CD20240((uint64_t)v40);
      v27 = v26;
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v29 = *(_QWORD *)(v5 + v9);
        *(_QWORD *)&v35[0] = v29;
        *(_QWORD *)(v5 + v9) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19CE18490();
          v29 = *(_QWORD *)&v35[0];
        }
        sub_19CD20334(*(_QWORD *)(v29 + 48) + 40 * v25);
        sub_19CD433C0((_OWORD *)(*(_QWORD *)(v29 + 56) + 32 * v25), v34);
        sub_19CDD35C4(v25, v29);
        *(_QWORD *)(v5 + v9) = v29;
        swift_bridgeObjectRelease();
        sub_19CD433C0(v34, v35);
      }
      else
      {
        memset(v35, 0, sizeof(v35));
      }
      sub_19CD20334((uint64_t)v40);
      sub_19CCECFE4((uint64_t)v35, &qword_1ECEB3370);
      goto LABEL_5;
    }
    sub_19CD433C0(&v36, v35);
    v14 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v34[0] = *(_QWORD *)(v5 + v9);
    v15 = *(_QWORD *)&v34[0];
    *(_QWORD *)(v5 + v9) = 0x8000000000000000;
    v17 = sub_19CD20240((uint64_t)v40);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (*(_QWORD *)(v15 + 24) >= v20)
    {
      if ((v14 & 1) != 0)
      {
        v24 = *(_QWORD **)&v34[0];
        if ((v16 & 1) == 0)
          goto LABEL_24;
      }
      else
      {
        sub_19CE18490();
        v24 = *(_QWORD **)&v34[0];
        if ((v21 & 1) == 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_19CD20454(v20, v14);
      v22 = sub_19CD20240((uint64_t)v40);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_34;
      v17 = v22;
      v24 = *(_QWORD **)&v34[0];
      if ((v21 & 1) == 0)
      {
LABEL_24:
        v24[(v17 >> 6) + 8] |= 1 << v17;
        sub_19CD23A14((uint64_t)v40, v24[6] + 40 * v17);
        sub_19CD433C0(v35, (_OWORD *)(v24[7] + 32 * v17));
        v30 = v24[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_33;
        v24[2] = v32;
        goto LABEL_4;
      }
    }
    v11 = (_OWORD *)(v24[7] + 32 * v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_19CD433C0(v35, v11);
LABEL_4:
    *(_QWORD *)(v5 + v9) = v24;
    swift_bridgeObjectRelease();
    sub_19CD20334((uint64_t)v40);
LABEL_5:
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

{
  sub_19CF92EF4(a1, a3, a4);
  return swift_release();
}

void (*NetRequest.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = malloc(0x28uLL);
  *a1 = v9;
  v9[3] = a4;
  v9[4] = v4;
  v9[1] = a2;
  v9[2] = a3;
  *v9 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for NetRequest() + 44));
  swift_bridgeObjectRetain();
  return sub_19CF92648;
}

void sub_19CF92648(uint64_t **a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (*a1)[2];
  v6 = **a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    NetRequest.subscript.setter(&v6, v5, v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    NetRequest.subscript.setter(&v6, a2, v4, v3);
  }
  free(v2);
}

uint64_t (*NetRequest.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  a1[2] = a4;
  a1[3] = v4;
  a1[1] = a3;
  *a1 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for NetRequest() + 44));
  swift_bridgeObjectRetain();
  return sub_19CF92768;
}

uint64_t sub_19CF92768(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = a1[2];
  v3 = *a1;
  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = v3;
    NetRequest.subscript.setter(&v7, v5, v4, v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *a1;
    return NetRequest.subscript.setter(&v7, a2, v4, v2);
  }
}

uint64_t sub_19CF927E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return NetRequest.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19CF927F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF92820 + 4 * byte_19D067A10[*v0]))(7107189, 0xE300000000000000);
}

uint64_t sub_19CF92820()
{
  return 2036625250;
}

uint64_t sub_19CF92830()
{
  return 0x646F6874656DLL;
}

uint64_t sub_19CF92844()
{
  return 0x74756F656D6974;
}

uint64_t sub_19CF9285C()
{
  return 0x6568636163;
}

uint64_t sub_19CF92870()
{
  return 0x73726564616568;
}

uint64_t sub_19CF92888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF92B28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF928AC()
{
  sub_19CF92924();
  return sub_19CFE0A48();
}

uint64_t sub_19CF928D4()
{
  sub_19CF92924();
  return sub_19CFE0A54();
}

uint64_t sub_19CF928FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NetRequest.init(from:)(a1, a2);
}

uint64_t sub_19CF92910(_QWORD *a1)
{
  return NetRequest.encode(to:)(a1);
}

unint64_t sub_19CF92924()
{
  unint64_t result;

  result = qword_1EE443550;
  if (!qword_1EE443550)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067BF4, &type metadata for NetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443550);
  }
  return result;
}

unint64_t sub_19CF92968()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE443560;
  if (!qword_1EE443560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE443558);
    v2 = sub_19CF929CC();
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE443560);
  }
  return result;
}

unint64_t sub_19CF929CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE443568;
  if (!qword_1EE443568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE443570);
    v2 = sub_19CCC5C88(&qword_1EE443578, (uint64_t (*)(uint64_t))type metadata accessor for CachePolicy, (uint64_t)&protocol conformance descriptor for NSURLRequestCachePolicy);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE443568);
  }
  return result;
}

unint64_t sub_19CF92A48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE443588;
  if (!qword_1EE443588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE443580);
    v2 = sub_19CD20AFC(&qword_1EE443590, &qword_1ECEB0750, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> [A : B]);
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE443588);
  }
  return result;
}

unint64_t sub_19CF92ACC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE436E88;
  if (!qword_1EE436E88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB0750);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE436E88);
  }
  return result;
}

uint64_t sub_19CF92B28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F6874656DLL && a2 == 0xE600000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6568636163 && a2 == 0xE500000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564616568 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_19CF92D78(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v5[4];
  _BYTE v6[40];

  sub_19CD20410();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_2Tm, a1, AssociatedTypeWitness);
  return sub_19CE10F74((uint64_t)v5, (uint64_t)v6);
}

uint64_t sub_19CF92E20(uint64_t a1)
{
  return sub_19CF92D78(a1);
}

uint64_t sub_19CF92E34(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v5[4];
  _BYTE v6[40];

  sub_19CD20410();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_2Tm, a1, AssociatedTypeWitness);
  type metadata accessor for NetRequest();
  return sub_19CE10F74((uint64_t)v5, (uint64_t)v6);
}

uint64_t sub_19CF92EE8(uint64_t a1)
{
  return sub_19CF92E34(a1);
}

uint64_t sub_19CF92EF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *a1;
  return NetRequest.subscript.setter(&v4, a2, a2, a3);
}

uint64_t sub_19CF92F2C()
{
  return 32;
}

__n128 sub_19CF92F38(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_19CF92F44@<X0>(_QWORD **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return NetRequest.subscript.getter(*a1, *(uint64_t *)((char *)a1 + a2 - 8), a3);
}

uint64_t sub_19CF92F74(uint64_t a1)
{
  return sub_19CF92EE8(a1);
}

uint64_t sub_19CF92F9C()
{
  return 16;
}

__n128 sub_19CF92FA8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_19CF92FB4@<X0>(_QWORD *a1@<X8>)
{
  return NetRequest.subscript.getter(a1);
}

uint64_t sub_19CF92FD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *a1;
  swift_bridgeObjectRetain();
  return sub_19CF92EF4(&v7, v4, v5);
}

uint64_t sub_19CF93024()
{
  return 16;
}

__n128 sub_19CF93030(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v16[16] = v17[16];
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a3[10];
  v11 = a1 + v9;
  v12 = (__int128 *)(a2 + v9);
  v13 = *v12;
  *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
  *(_OWORD *)v11 = v13;
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13);
  v17 = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF93420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NetRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF934AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for NetRequest.ScopeContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetRequest.ScopeContainer);
}

uint64_t storeEnumTagSinglePayload for NetRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CF93580 + 4 * byte_19D067A1B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CF935B4 + 4 * byte_19D067A16[v4]))();
}

uint64_t sub_19CF935B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF935BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF935C4);
  return result;
}

uint64_t sub_19CF935D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF935D8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CF935DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF935E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetRequest.CodingKeys()
{
  return &type metadata for NetRequest.CodingKeys;
}

unint64_t sub_19CF93604()
{
  unint64_t result;

  result = qword_1EE443628;
  if (!qword_1EE443628)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067BCC, &type metadata for NetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443628);
  }
  return result;
}

unint64_t sub_19CF9364C()
{
  unint64_t result;

  result = qword_1EE443630;
  if (!qword_1EE443630)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067B3C, &type metadata for NetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443630);
  }
  return result;
}

unint64_t sub_19CF93694()
{
  unint64_t result;

  result = qword_1EE443638;
  if (!qword_1EE443638)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067B64, &type metadata for NetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443638);
  }
  return result;
}

uint64_t sub_19CF936D8(__int128 *a1, uint64_t a2)
{
  __swift_memcpy162_8(a2, a1);
  return a2;
}

uint64_t sub_19CF93714()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF93750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF93798()
{
  return sub_19CF91CD8();
}

uint64_t _CodeByKind_Many.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*_CodeByKind_Many.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _CodeByKind_Many.description.getter()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  v0 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF68], v0);
  sub_19CFE067C();
  return 0;
}

uint64_t _CodeByKind_Many.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char *AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[5];

  sub_19CCD5B84(a1, (uint64_t)v17);
  v8 = type metadata accessor for CodeByKind(0, a2, a3, v7);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v8);
  v9 = sub_19CFDF968();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    v17[0] = v9;
    MEMORY[0x1E0C80A78](v9, v10);
    KeyPath = swift_getKeyPath();
    v12 = sub_19CFDF938();
    AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
    v14 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v12);
    a2 = sub_19CE974CC((void (*)(char *, char *))sub_19CF6F884, KeyPath, v12, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v15);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return a2;
}

uint64_t _CodeByKind_Many.init(_partiallyFrom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  char *AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  sub_19CCD5B84(a1, (uint64_t)v15);
  v7 = type metadata accessor for CodeByKind(0, a2, a3, v6);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v7);
  v15[0] = Array<A>.init(_partiallyFrom:)(v15, v7);
  KeyPath = swift_getKeyPath();
  v9 = sub_19CFDF938();
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v9);
  v13 = sub_19CE974CC((void (*)(char *, char *))sub_19CF6F884, KeyPath, v9, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

uint64_t _CodeByKind_Many.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];

  v12[5] = a2;
  v12[2] = a3;
  v12[3] = a4;
  swift_getAssociatedTypeWitness();
  v6 = sub_19CFDF938();
  v8 = (char *)type metadata accessor for CodeByKind(0, a3, a4, v7);
  swift_bridgeObjectRetain();
  v9 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v6);
  sub_19CE974CC((void (*)(char *, char *))sub_19CF70BAC, (uint64_t)v12, v6, v8, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v8);
  sub_19CFDF944();
  return swift_bridgeObjectRelease();
}

uint64_t _CodeByKind_Many._partiallyEncode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];

  v15[5] = a2;
  v15[2] = a3;
  v15[3] = a4;
  swift_getAssociatedTypeWitness();
  v7 = sub_19CFDF938();
  v9 = (char *)type metadata accessor for CodeByKind(0, a3, a4, v8);
  swift_bridgeObjectRetain();
  v10 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v7);
  v12 = sub_19CE974CC((void (*)(char *, char *))sub_19CF6FE40, (uint64_t)v15, v7, v9, MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v11);
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v9);
  Array<A>._partiallyEncode(to:)(a1, v12, (uint64_t)v9, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF93D40()
{
  return _CodeByKind_Many.description.getter();
}

uint64_t sub_19CF93D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = _CodeByKind_Many.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_19CF93D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = _CodeByKind_Many.init(_partiallyFrom:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  *a3 = result;
  return result;
}

uint64_t sub_19CF93DAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return _CodeByKind_Many.encode(to:)(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_19CF93DCC(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return _CodeByKind_Many._partiallyEncode(to:)(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t static _CodeByKind_Many<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19CFDF95C();
}

uint64_t sub_19CF93E38()
{
  return static _CodeByKind_Many<>.== infix(_:_:)();
}

uint64_t _CodeByKind_Many<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  sub_19CFDF950();
  return swift_bridgeObjectRelease();
}

uint64_t _CodeByKind_Many<>.hashValue.getter()
{
  sub_19CFE08C8();
  _CodeByKind_Many<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CF93F24()
{
  return _CodeByKind_Many<>.hashValue.getter();
}

uint64_t sub_19CF93F38()
{
  return _CodeByKind_Many<>.hash(into:)();
}

uint64_t sub_19CF93F4C()
{
  sub_19CFE08C8();
  _CodeByKind_Many<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CF93FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> _CodeByKind_Many<A>, a1, &v4);
}

uint64_t type metadata accessor for _CodeByKind_Many(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _CodeByKind_Many);
}

uint64_t Bag.Value.currentOrNil()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[23] = a1;
  v3[24] = a2;
  v3[25] = *v2;
  return swift_task_switch();
}

uint64_t sub_19CF94004()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 208) = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 200) + 88))();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v2;
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v1 + 16);
  v3 = sub_19CFDFF5C();
  v6 = type metadata accessor for Promise(0, v3, v4, v5);
  v7 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v6);
  *v2 = v0;
  v2[1] = sub_19CF940AC;
  return Future.result.getter(*(_QWORD *)(v0 + 184), v6, v7);
}

uint64_t sub_19CF940AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF94110()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF94140()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  swift_release();
  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136)) & 1) != 0)
  {

  }
  else
  {
    v1 = (__int128 *)(v0 + 16);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v19 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 80) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CD40794(v0 + 56, v0 + 88);
    *v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19CD40658(v0 + 88, v0 + 16);
    *(_BYTE *)(v0 + 48) = 0;
    v9 = *(_OWORD *)(v0 + 32);
    v20 = *v1;
    v21 = v9;
    v22 = *(_BYTE *)(v0 + 48);
    v10 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v19[2] + 1, 1, v19);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v13 = *(void **)(v0 + 232);
    v10[2] = v12 + 1;
    v14 = &v10[5 * v12];
    v15 = v20;
    v16 = v21;
    *((_BYTE *)v14 + 64) = v22;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    v19 = v10;
    sub_19CCECFE4(v0 + 56, &qword_1ECEB3370);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v20 = v4;
    LOBYTE(v19) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
    swift_bridgeObjectRelease();

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 224) - 8) + 56))(*(_QWORD *)(v0 + 184), 1, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF943D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
  return swift_task_switch();
}

uint64_t sub_19CF943F0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CF9446C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD1EED4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43D1C0);
  return swift_continuation_await();
}

uint64_t sub_19CF9446C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_19CF944E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 312);
  swift_release();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 312));
  v3 = sub_19CD20744(MEMORY[0x1E0DEE9D8]);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v3);
}

uint64_t sub_19CF9452C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  void *v17;
  unint64_t v18;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  char v23;

  swift_release();
  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240)) & 1) == 0)
  {
    v1 = (__int128 *)(v0 + 80);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v20 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CD40794(v0 + 160, v0 + 192);
    *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19CD40658(v0 + 192, v0 + 80);
    *(_BYTE *)(v0 + 112) = 0;
    v9 = *(_OWORD *)(v0 + 96);
    v21 = *v1;
    v22 = v9;
    v23 = *(_BYTE *)(v0 + 112);
    v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v20[2] + 1, 1, v20);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[5 * v12];
    v14 = v21;
    v15 = v22;
    *((_BYTE *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    v20 = v10;
    sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();

  }
  v17 = *(void **)(v0 + 304);
  v18 = sub_19CD20744(MEMORY[0x1E0DEE9D8]);

  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v18);
}

uint64_t Bag.Value.current(or:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v5[26] = *(_QWORD *)(a4 + 16);
  v6 = sub_19CFDFF5C();
  v5[27] = v6;
  v5[28] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *v4;
  v5[29] = v7;
  v5[30] = v8;
  return swift_task_switch();
}

uint64_t sub_19CF9481C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 248) = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 240) + 88))();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v2;
  v5 = type metadata accessor for Promise(0, v1, v3, v4);
  v6 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v5);
  *v2 = v0;
  v2[1] = sub_19CF948B8;
  return Future.result.getter(*(_QWORD *)(v0 + 232), v5, v6);
}

uint64_t sub_19CF948B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF94924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 208);
  swift_release();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 232);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    (*(void (**)(void))(v0 + 192))();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 32))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF949C8()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  void *v17;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136)) & 1) == 0)
  {
    v1 = (__int128 *)(v0 + 16);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v19 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 80) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CD40794(v0 + 56, v0 + 88);
    *v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19CD40658(v0 + 88, v0 + 16);
    *(_BYTE *)(v0 + 48) = 0;
    v9 = *(_OWORD *)(v0 + 32);
    v20 = *v1;
    v21 = v9;
    v22 = *(_BYTE *)(v0 + 48);
    v10 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v19[2] + 1, 1, v19);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[5 * v12];
    v14 = v20;
    v15 = v21;
    *((_BYTE *)v13 + 64) = v22;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    v19 = v10;
    sub_19CCECFE4(v0 + 56, &qword_1ECEB3370);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v20 = v4;
    LOBYTE(v19) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
    swift_bridgeObjectRelease();

  }
  v17 = *(void **)(v0 + 264);
  (*(void (**)(void))(v0 + 192))();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19CF94C38()
{
  sub_19CFE0340();
  __break(1u);
}

void sub_19CF94C90()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CF94CE8()
{
  uint64_t v0;

  return swift_release();
}

id sub_19CF94D04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  a2[3] = (uint64_t)&type metadata for FoundationValue;
  a2[4] = (uint64_t)&off_1E3DCC5B0;
  v3 = swift_allocObject();
  *a2 = v3;
  *(_QWORD *)(v3 + 40) = sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  *(_QWORD *)(v3 + 16) = a1;
  return a1;
}

uint64_t sub_19CF94D80(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t sub_19CF94DAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF94DD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF94DFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

void sub_19CF94E20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19CF94E78()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v9 = v2;
  v10 = v3;
  v11 = BYTE2(v3);
  v12 = BYTE3(v3);
  v13 = BYTE4(v3);
  v14 = BYTE5(v3);
  v4 = *(sqlite3_stmt **)(v0 + 16);
  v5 = qword_1ECEB0AE8;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = sqlite3_bind_blob(v4, v1, &v9, BYTE6(v3), (void (__cdecl *)(void *))qword_1ECEB0AF0);
  swift_release();
  if (qword_1ECEB12A8 != -1)
    swift_once();
  if (!sub_19CCE4984(v6, qword_1ECEB52B8))
  {
    sub_19CE379F8();
    swift_allocError();
    *v7 = v6;
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_19CF95148()
{
  uint64_t v0;

  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF95174(uint64_t a1, uint64_t a2, int a3, sqlite3_stmt *a4, int a5)
{
  uint64_t v7;
  char *v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  LODWORD(v7) = a3;
  v10 = (char *)sub_19CFDEBA0();
  if (!v10)
  {
LABEL_4:
    v12 = __OFSUB__(a2, a1);
    v13 = a2 - a1;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      v14 = sub_19CFDEBB8();
      if (v14 >= v13)
        v15 = v13;
      else
        v15 = v14;
      if (v10)
        v7 = v15;
      else
        v7 = 0;
      if (v7 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v7 <= 0x7FFFFFFF)
        {
          a4 = (sqlite3_stmt *)*((_QWORD *)a4 + 2);
          if (qword_1ECEB0AE8 == -1)
            return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_1ECEB0AF0);
LABEL_18:
          swift_once();
          return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_1ECEB0AF0);
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  result = sub_19CFDEBC4();
  if (!__OFSUB__(a1, result))
  {
    v10 += a1 - result;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for SQLiteStatementError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF952A8 + 4 * byte_19D067E70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF952C8 + 4 * byte_19D067E75[v4]))();
}

_BYTE *sub_19CF952A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF952C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF952D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF952D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF952E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF952E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteStatementError()
{
  return &type metadata for SQLiteStatementError;
}

unint64_t sub_19CF95308()
{
  unint64_t result;

  result = qword_1EE4436F0[0];
  if (!qword_1EE4436F0[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067F08, &type metadata for SQLiteStatementError);
    atomic_store(result, qword_1EE4436F0);
  }
  return result;
}

uint64_t sub_19CF9534C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v26[5];

  v12 = type metadata accessor for JSIntentRequest(0, a4, a5, a4);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a6, a1, v12);
  v15 = (int *)type metadata accessor for JSIntentResponse(0, a4, a5, v14);
  v16 = a6 + v15[9];
  v17 = sub_19CFDEA44();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  sub_19CD47288(a3, a6 + v15[10]);
  v19 = MEMORY[0x1E0DEE9D8];
  v26[0] = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v20 = sub_19CF61748(a3, v26);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v15[11]) = v20;
  JSONObject.subscript.getter(0xD000000000000013, 0x800000019D072120, (uint64_t)v26);
  v21 = sub_19CD30650(v19);
  v22 = sub_19CD30784((uint64_t)v26, v21);
  sub_19CD30A60(a3);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  *(_QWORD *)(a6 + v15[12]) = v22;
  return result;
}

uint64_t JSIntentResponse.intentRequest.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = type metadata accessor for JSIntentRequest(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v3, v5);
}

uint64_t JSIntentResponse.requestDuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_19CFDEA44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t JSIntentResponse.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CD47288(v2 + *(int *)(a1 + 40), a2);
}

uint64_t JSIntentResponse.incidents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JSIntentResponse.networkPerformance.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_19CF95568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  type metadata accessor for JSIntentRequest(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v4 <= 0x3F)
  {
    sub_19CFDEA44();
    if (v5 <= 0x3F)
    {
      sub_19CD5FBCC(319, v5, v6, v7);
      if (v8 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_19CF9561C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  unint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_19CFDEA44();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 9;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v10 | 7;
  v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((v10 + 40) & ~v10) + v12 + 7 + (((v10 | 7) + v12 + (v11 & ~v10)) & ~(v10 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7));
    swift_retain();
  }
  else
  {
    v39 = v10 + 40;
    v40 = ((v10 + 40) & ~v10) + v12 + 7;
    v19 = ~v10;
    v38 = ~v13;
    v20 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v21 = v8;
    v20(a1, a2, v5);
    v22 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_BYTE *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_BYTE *)(v22 + 8) = v24;
    v41 = a1;
    v25 = ((unint64_t)a1 + v11) & v19;
    v26 = ((unint64_t)a2 + v11) & v19;
    v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v27(v25, v26, v21);
    v28 = v25 + v12 + v13;
    v29 = (_OWORD *)(v28 & v38);
    v30 = v26 + v12 + v13;
    v31 = (__int128 *)(v30 & v38);
    v32 = *(_QWORD *)((v30 & v38) + 0x18);
    if (v32)
    {
      *(_QWORD *)((v28 & v38) + 0x18) = v32;
      *(_QWORD *)((v28 & v38) + 0x20) = *(_QWORD *)((v30 & v38) + 0x20);
      (**(void (***)(_OWORD *, __int128 *))(v32 - 8))(v29, v31);
    }
    else
    {
      v33 = *v31;
      v34 = *(_OWORD *)((v30 & v38) + 0x10);
      *(_QWORD *)((v28 & v38) + 0x20) = *(_QWORD *)((v30 & v38) + 0x20);
      *v29 = v33;
      *(_OWORD *)((v28 & v38) + 0x10) = v34;
    }
    v27(((unint64_t)v29 + v39) & v19, ((unint64_t)v31 + v39) & v19, v21);
    v35 = (_QWORD *)(((unint64_t)v29 + v40) & 0xFFFFFFFFFFFFF8);
    v36 = (_QWORD *)(((unint64_t)v31 + v40) & 0xFFFFFFFFFFFFF8);
    *v35 = *v36;
    *(_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v41;
  }
  return (uint64_t *)v18;
}

uint64_t sub_19CF95840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_19CFDEA44();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (a1 + v7 + v4 + 9) & ~v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v8, v5);
  v10 = (v7 | 7) + *(_QWORD *)(v6 + 64) + v8;
  v11 = v10 & ~(v7 | 7);
  if (*(_QWORD *)(v11 + 0x18))
    __swift_destroy_boxed_opaque_existential_1Tm(v10 & ~(v7 | 7));
  v9((v7 + 40 + v11) & ~v7, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF9591C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  v11 = sub_19CFDEA44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v10 + v13 + 9;
  v15 = ~v13;
  v16 = (v14 + a1) & ~v13;
  v17 = (v14 + a2) & ~v13;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v18(v16, v17, v11);
  v19 = *(_QWORD *)(v12 + 64);
  v20 = (v13 | 7) + v19;
  v21 = (v20 + v16) & ~(v13 | 7);
  v22 = v20 + v17;
  v23 = v22 & ~(v13 | 7);
  v24 = *(_QWORD *)(v23 + 0x18);
  if (v24)
  {
    *(_QWORD *)(v21 + 24) = v24;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)((v22 & ~(v13 | 7)) + 0x20);
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v21, v22 & ~(v13 | 7));
  }
  else
  {
    v25 = *(_OWORD *)v23;
    v26 = *(_OWORD *)((v22 & ~(v13 | 7)) + 0x10);
    *(_QWORD *)(v21 + 32) = *(_QWORD *)((v22 & ~(v13 | 7)) + 0x20);
    *(_OWORD *)v21 = v25;
    *(_OWORD *)(v21 + 16) = v26;
  }
  v18((v13 + 40 + v21) & v15, (v13 + 40 + v23) & v15, v11);
  v27 = ((v13 + 40) & v15) + v19 + 7;
  v28 = (_QWORD *)((v27 + v21) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v27 + v23) & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CF95A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  v11 = sub_19CFDEA44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v10 + v13 + 9;
  v15 = ~v13;
  v16 = (v14 + a1) & ~v13;
  v17 = (v14 + a2) & ~v13;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24);
  v18(v16, v17, v11);
  v19 = *(_QWORD *)(v12 + 64);
  v20 = (v13 | 7) + v19;
  v21 = (v20 + v16) & ~(v13 | 7);
  v22 = v20 + v17;
  v23 = v22 & ~(v13 | 7);
  v24 = *(_QWORD *)(v23 + 0x18);
  if (!*(_QWORD *)(v21 + 24))
  {
    if (v24)
    {
      *(_QWORD *)(v21 + 24) = v24;
      *(_QWORD *)(v21 + 32) = *(_QWORD *)((v22 & ~(v13 | 7)) + 0x20);
      (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v21, v22 & ~(v13 | 7));
      goto LABEL_8;
    }
LABEL_7:
    v25 = *(_OWORD *)v23;
    v26 = *(_OWORD *)(v23 + 16);
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v23 + 32);
    *(_OWORD *)v21 = v25;
    *(_OWORD *)(v21 + 16) = v26;
    goto LABEL_8;
  }
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v21);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, (uint64_t *)(v22 & ~(v13 | 7)));
LABEL_8:
  v18((v13 + 40 + v21) & v15, (v13 + 40 + v23) & v15, v11);
  v27 = ((v13 + 40) & v15) + v19 + 7;
  v28 = (_QWORD *)((v27 + v21) & 0xFFFFFFFFFFFFFFF8);
  v29 = v27 + v23;
  v30 = (v29 & 0xFFFFFFFFFFFFF8) + 15;
  *v28 = *(_QWORD *)(v29 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v30 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CF95C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  v11 = sub_19CFDEA44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v10 + v13 + 9;
  v15 = (v14 + a1) & ~v13;
  v16 = (v14 + a2) & ~v13;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v17(v15, v16, v11);
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (v13 | 7) + v18;
  v20 = (v19 + v15) & ~(v13 | 7);
  v21 = (v19 + v16) & ~(v13 | 7);
  v22 = *(_QWORD *)(v21 + 0x20);
  v23 = *(_OWORD *)(v21 + 0x10);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  *(_QWORD *)(v20 + 32) = v22;
  v17((v13 + 40 + v20) & ~v13, (v13 + 40 + v21) & ~v13, v11);
  v24 = ((v13 + 40) & ~v13) + v18 + 7;
  v25 = (_QWORD *)((v24 + v20) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)((v24 + v21) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CF95D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  v11 = sub_19CFDEA44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v10 + v13 + 9;
  v15 = ~v13;
  v16 = (v14 + a1) & ~v13;
  v17 = (v14 + a2) & ~v13;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  v18(v16, v17, v11);
  v19 = *(_QWORD *)(v12 + 64);
  v20 = (v13 | 7) + v19;
  v21 = v20 + v16;
  v22 = ~(v13 | 7);
  v23 = v21 & v22;
  if (*(_QWORD *)((v21 & v22) + 0x18))
    __swift_destroy_boxed_opaque_existential_1Tm(v21 & v22);
  v24 = (v20 + v17) & v22;
  v25 = *(_OWORD *)v24;
  v26 = *(_OWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_OWORD *)v23 = v25;
  *(_OWORD *)(v23 + 16) = v26;
  v18((v13 + 40 + v23) & v15, (v13 + 40 + v24) & v15, v11);
  v27 = ((v13 + 40) & v15) + v19 + 7;
  v28 = (_QWORD *)((v27 + v23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v27 + v24) & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CF95ED8(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t (*v23)(unint64_t, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_19CFDEA44();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = v8;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v13 + 9;
  v15 = *(_QWORD *)(v9 + 64);
  v16 = v13 | 7;
  v17 = (v13 | 7) + v15;
  v18 = ((v13 + 40) & ~v13) + v15 + 7;
  if (v11 < a2)
  {
    if (((((((v18 + ((v17 + (v14 & ~v13)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v19 = 2;
    else
      v19 = a2 - v11 + 1;
    if (v19 >= 0x10000)
      v20 = 4;
    else
      v20 = 2;
    if (v19 < 0x100)
      v20 = 1;
    if (v19 >= 2)
      v21 = v20;
    else
      v21 = 0;
    __asm { BR              X3 }
  }
  if ((_DWORD)v7 == v11)
  {
    v23 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v24 = a1;
    v10 = v7;
    v12 = v5;
    return v23(v24, v10, v12);
  }
  v24 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
  {
    v23 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
    return v23(v24, v10, v12);
  }
  v25 = *(_QWORD *)((v18 + ((v17 + v24) & ~v16)) & 0xFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  return (v25 + 1);
}

void sub_19CF960A4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_19CFDEA44() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0u;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if ((((((((_DWORD)v11 + 40) & ~(_DWORD)v11)
           + *(_DWORD *)(v9 + 64)
           + 7
           + (((v11 | 7)
             + *(_DWORD *)(v9 + 64)
             + ((((*(_DWORD *)(v7 + 64) + 7) & 0xFFFFFFF8) + (_DWORD)v11 + 9) & ~(_DWORD)v11)) & ~(v11 | 7))) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X17 }
  }
  if ((((((((_DWORD)v11 + 40) & ~(_DWORD)v11)
         + *(_DWORD *)(v9 + 64)
         + 7
         + (((v11 | 7)
           + *(_DWORD *)(v9 + 64)
           + ((((*(_DWORD *)(v7 + 64) + 7) & 0xFFFFFFF8) + (_DWORD)v11 + 9) & ~(_DWORD)v11)) & ~(v11 | 7))) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((((((v11 + 40) & ~v11)+ *(_QWORD *)(v9 + 64)+ 7+ (((v11 | 7) + *(_QWORD *)(v9 + 64) + ((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 9) & ~v11)) & ~(v11 | 7))) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_19CF96208()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x19CF962A8);
}

void sub_19CF96210()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x19CF96218);
  JUMPOUT(0x19CF962A8);
}

void sub_19CF96268()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x19CF962A8);
}

void sub_19CF96270()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x19CF962A8);
}

uint64_t sub_19CF96278@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v11 + v14) = 0;
  if (!(_DWORD)v10)
    JUMPOUT(0x19CF962A8);
  if ((_DWORD)v13 == v7)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v4 = v11;
    v5 = v10;
    a1 = v13;
    a2 = v12;
  }
  else
  {
    v4 = (v8 + v11) & v9;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x19CF96284);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v10;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t type metadata accessor for JSIntentResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSIntentResponse);
}

uint64_t Decoder.withUserInfo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v12[5];

  v12[3] = a2;
  v12[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v4, a2);
  a4[3] = (uint64_t)&type metadata for _Wrapped_Decoder;
  a4[4] = sub_19CF96814();
  v9 = swift_allocObject();
  v10 = (_OWORD *)(v9 + 16);
  *a4 = v9;
  swift_bridgeObjectRetain();
  return sub_19CF963E8(v12, a1, v10);
}

uint64_t sub_19CF9636C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_19CF96AA8(a1, (uint64_t)sub_19CF96A30, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19CF963E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  uint64_t DynamicType;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _BYTE v29[32];
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  ValueMetadata *MetatypeMetadata;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = sub_19CFE09DC();
  v7 = sub_19CF9636C(a2, v6);
  sub_19CCD5B84((uint64_t)a1, (uint64_t)&v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BF28);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v38 = v31;
    v39 = v32;
    v40 = v33;
    v41 = v34;
    MetatypeMetadata = &type metadata for _JSONObjectDecoder;
    v37 = sub_19CD21828();
    v8 = swift_allocObject();
    *(_QWORD *)&v35 = v8;
    sub_19CD3E448((uint64_t)&v38, v8 + 16);
    v9 = v41;
    *(_QWORD *)(v8 + 56) = v7;
    *(_QWORD *)(v8 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CD21708((uint64_t)&v38);
    sub_19CCD14C4(&v35, (uint64_t)&v31);
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
    v31 = 0u;
    sub_19CCECFE4((uint64_t)&v31, &qword_1EE443780);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v10 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D050760;
    v12 = v10;
    v30 = sub_19CD40918(0, 60, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0xD000000000000028;
    v13._object = (void *)0x800000019D079300;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    DynamicType = swift_getDynamicType();
    MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
    *(_QWORD *)&v35 = DynamicType;
    sub_19CD40794((uint64_t)&v35, (uint64_t)v29);
    v31 = 0u;
    v32 = 0u;
    sub_19CD40658((uint64_t)v29, (uint64_t)&v31);
    LOBYTE(v40) = 0;
    v38 = v31;
    v39 = v32;
    v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v38;
    v20 = v39;
    *((_BYTE *)v18 + 64) = v40;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v30 = v15;
    sub_19CCECFE4((uint64_t)&v35, &qword_1ECEB3370);
    v21._object = (void *)0x800000019D079330;
    v21._countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v11 + 32) = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v22 = swift_allocObject();
    v23 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v32 + 1) = v23;
    *(_QWORD *)&v31 = 0xD000000000000057;
    *((_QWORD *)&v31 + 1) = 0x800000019D079350;
    v38 = 0u;
    v39 = 0u;
    sub_19CD40658((uint64_t)&v31, (uint64_t)&v38);
    *(_BYTE *)(v22 + 64) = 0;
    v24 = v39;
    *(_OWORD *)(v22 + 32) = v38;
    *(_OWORD *)(v22 + 48) = v24;
    *(_QWORD *)(v11 + 40) = v22;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v32 + 1) = v23;
    *(_QWORD *)&v31 = 0xD000000000000026;
    *((_QWORD *)&v31 + 1) = 0x800000019D0793B0;
    v38 = 0u;
    v39 = 0u;
    sub_19CD40658((uint64_t)&v31, (uint64_t)&v38);
    *(_BYTE *)(v25 + 64) = 0;
    v26 = v39;
    *(_OWORD *)(v25 + 32) = v38;
    *(_OWORD *)(v25 + 48) = v26;
    *(_QWORD *)(v11 + 48) = v25;
    *(_QWORD *)&v38 = v12;
    LOBYTE(v31) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v31);

    swift_bridgeObjectRelease();
    sub_19CCD5B84((uint64_t)a1, (uint64_t)&v31);
  }
  *((_QWORD *)&v33 + 1) = v7;
  v27 = v32;
  *a3 = v31;
  a3[1] = v27;
  a3[2] = v33;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19CF96814()
{
  unint64_t result;

  result = qword_1EE443778;
  if (!qword_1EE443778)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D067FF4, &type metadata for _Wrapped_Decoder);
    atomic_store(result, (unint64_t *)&qword_1EE443778);
  }
  return result;
}

uint64_t sub_19CF96858()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for _Wrapped_Decoder()
{
  return &type metadata for _Wrapped_Decoder;
}

uint64_t sub_19CF96894()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19CFE09E8();
}

uint64_t sub_19CF9690C()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19CFE09B8();
}

uint64_t sub_19CF9694C()
{
  return sub_19CF96894();
}

uint64_t sub_19CF96960(uint64_t a1, uint64_t a2)
{
  return sub_19CF96998(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE228]);
}

uint64_t sub_19CF9697C(uint64_t a1, uint64_t a2)
{
  return sub_19CF96998(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE230]);
}

uint64_t sub_19CF96998(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3[3];
  v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return a3(v5, v6);
}

uint64_t sub_19CF969F4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF96A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F48) + 48);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620) + 48);
  v6 = sub_19CFE0310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_19CD436B0(v4, v5);
}

uint64_t sub_19CF96AA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(char *, char *, uint64_t);
  _OWORD *v26;
  char *v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD v41[2];
  _OWORD v42[2];
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v10 = sub_19CFE0310();
  v51 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443788);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = -1 << *(_BYTE *)(a1 + 32);
  v19 = ~v18;
  v20 = *(_QWORD *)(a1 + 64);
  v21 = -v18;
  v44 = a1;
  v45 = a1 + 64;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v46 = v19;
  v47 = 0;
  v48 = v22 & v20;
  v49 = a2;
  v50 = a3;
  v41[1] = a1;
  swift_bridgeObjectRetain();
  v41[0] = a3;
  swift_retain();
  sub_19CE244A0((uint64_t)v17);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  while (1)
  {
    v27 = &v17[*(int *)(v23 + 48)];
    v25(v13, v17, v10);
    sub_19CD433C0(v27, v43);
    v28 = *a5;
    v30 = sub_19CD2258C((uint64_t)v13);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v34 = v29;
    if (*(_QWORD *)(v28 + 24) >= v33)
    {
      if ((a4 & 1) != 0)
      {
        if ((v29 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_19CE18D70();
        if ((v34 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_19CE13A18(v33, a4 & 1);
      v35 = sub_19CD2258C((uint64_t)v13);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_22;
      v30 = v35;
      if ((v34 & 1) != 0)
      {
LABEL_7:
        sub_19CD436B0((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v10);
        v26 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
        sub_19CD433C0(v42, v26);
        goto LABEL_8;
      }
    }
    v37 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v25((char *)(v37[6] + *(_QWORD *)(v51 + 72) * v30), v13, v10);
    sub_19CD433C0(v43, (_OWORD *)(v37[7] + 32 * v30));
    v38 = v37[2];
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v39)
      goto LABEL_21;
    v37[2] = v40;
LABEL_8:
    sub_19CE244A0((uint64_t)v17);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

unint64_t NativeIntentDispatcher.init()@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v2;
  unint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  v2 = (_OWORD *)(a1 + 8);
  sub_19CCECFE4(a1 + 8, qword_1EE437050);
  *v2 = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = 0;
  result = sub_19CE10E20(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)a1 = result;
  return result;
}

uint64_t NativeIntentDispatcher.register(contentsOf:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;

  v2 = *a1;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5 = *v1;
  *v1 = 0x8000000000000000;
  sub_19CF32DA4(v2, (uint64_t)sub_19CF32D64, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v5);
  *v1 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t NativeIntentDispatcher.registering<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;

  sub_19CF33104(v4, a4);
  return NativeIntentDispatcher.register<A>(_:)(a1, a2, a3);
}

uint64_t NativeIntentDispatcher.next.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCF8C5C(v1 + 8, a1, qword_1EE437050);
}

uint64_t NativeIntentDispatcher.next.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_19CD1A39C(a1, v1 + 8, qword_1EE437050);
}

uint64_t (*NativeIntentDispatcher.next.modify())()
{
  return nullsub_1;
}

uint64_t NativeIntentDispatcher.withNext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _BYTE v6[40];

  sub_19CF33104(v2, a2);
  sub_19CCF8C5C(a1, (uint64_t)v6, qword_1EE437050);
  return sub_19CD1A39C((uint64_t)v6, a2 + 8, qword_1EE437050);
}

uint64_t NativeIntentDispatcher.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v11[5];

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v8 = v7;
  v11[3] = a2;
  v11[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, a1, a2);
  return sub_19CE113A8((uint64_t)v11, v6, v8);
}

uint64_t NativeIntentDispatcher.registering(contentsOf:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  sub_19CF33104(v2, (uint64_t)a2);
  v5 = *a1;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *a2;
  *a2 = 0x8000000000000000;
  sub_19CF32DA4(v5, (uint64_t)sub_19CF32D64, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *a2 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t NativeIntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CF970F4()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = *(_QWORD **)(v0 + 24);
  v1[3] = (uint64_t)&type metadata for NativeIntentDispatcher;
  v1[4] = (uint64_t)&protocol witness table for NativeIntentDispatcher;
  v3 = swift_allocObject();
  *v1 = v3;
  sub_19CF33104(v2, v3 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NativeIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v10 = type metadata accessor for IntentOutcome(0, AssociatedTypeWitness, v8, v9);
  v6[9] = v10;
  v6[10] = *(_QWORD *)(v10 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF97234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  sub_19CF975B4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 128) = v4;
  if (v4(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
    *(_QWORD *)(v0 + 136) = v7;
    v7(v5, v6);
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v8;
    *(_QWORD *)v8 = v0;
    *(_QWORD *)(v8 + 8) = sub_19CF9736C;
    v9 = *(_QWORD *)(v0 + 88);
    v10 = *(_OWORD *)(v0 + 24);
    v11 = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v8 + 176) = *(_QWORD *)(v0 + 56);
    *(_OWORD *)(v8 + 144) = v10;
    *(_OWORD *)(v8 + 160) = v11;
    *(_QWORD *)(v8 + 136) = v9;
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 16);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32);
    v16(v13, *(_QWORD *)(v0 + 96), v14);
    v16(v15, v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF9736C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF973D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 128))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v0 + 136))(v1, *(_QWORD *)(v0 + 72));
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *(_QWORD *)v3 = v0;
    *(_QWORD *)(v3 + 8) = sub_19CF974EC;
    v4 = *(_OWORD *)(v0 + 16);
    v5 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v3 + 112) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v3 + 128) = v5;
    *(_OWORD *)(v3 + 96) = v4;
    return swift_task_switch();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 16);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32);
    v9(v7, v1, v2);
    v9(v8, v7, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF974EC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CF9755C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF975B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  static StaticIntent._unwrapData<A>(of:)(AssociatedTypeWitness, a1, a2, (uint64_t)&v15 - v10);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v13 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v11, AssociatedTypeWitness);
    v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a3, v13, 1, AssociatedTypeWitness);
}

uint64_t sub_19CF976D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF976F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v1 = **(_QWORD **)(v0 + 176);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 168) + 40))(*(_QWORD *)(v0 + 160));
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if (*(_QWORD *)(v1 + 16) && (v6 = sub_19CD3FD1C(v4, v5), (v7 & 1) != 0))
  {
    sub_19CCD5B84(*(_QWORD *)(v1 + 56) + 40 * v6, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 168);
  if (*(_QWORD *)(v0 + 120))
  {
    v19 = *(_OWORD *)(v0 + 144);
    sub_19CCD14C4((__int128 *)(v0 + 96), v0 + 16);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    v10 = swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v10;
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v10 + 32) = v0 + 16;
    *(_OWORD *)(v10 + 40) = v19;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v11;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v15 = type metadata accessor for IntentOutcome(0, AssociatedTypeWitness, v13, v14);
    *v11 = v0;
    v11[1] = sub_19CF978EC;
    return sub_19CF518B0(*(_QWORD *)(v0 + 136), (uint64_t)&unk_1EE4437C8, v10, v15);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 136);
    sub_19CCECFE4(v0 + 96, qword_1EE4371F0);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    v18 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF978EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF97958()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF9798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF979AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _BYTE *v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  sub_19CCF8C5C(*(_QWORD *)(v0 + 136) + 8, v0 + 56, qword_1EE437050);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_19CCD14C4((__int128 *)(v0 + 56), v0 + 16);
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16)
                                                                                          + *(_QWORD *)(v2 + 16));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v3;
    *v3 = v0;
    v3[1] = sub_19CF97AC8;
    return v6(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v1, v2);
  }
  else
  {
    sub_19CCECFE4(v0 + 56, qword_1EE437050);
    sub_19CE8E210();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF97AC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF97B2C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF97B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF97B80()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[3];
  v3 = v1[3];
  v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_19CF97BFC;
  return sub_19CF97C44(v0[2], v0[4], v0[5], v3, v0[6], v2, v0[7]);
}

uint64_t sub_19CF97BFC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CF97C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8[40] = a7;
  v8[41] = v7;
  v8[38] = a5;
  v8[39] = a6;
  v8[36] = a3;
  v8[37] = a4;
  v8[34] = a1;
  v8[35] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[42] = AssociatedTypeWitness;
  v8[43] = type metadata accessor for IntentOutcome(255, AssociatedTypeWitness, v10, v11);
  v12 = sub_19CFDFF5C();
  v8[44] = v12;
  v8[45] = *(_QWORD *)(v12 - 8);
  v8[46] = swift_task_alloc();
  v13 = swift_getAssociatedTypeWitness();
  v8[47] = v13;
  swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedTypeWitness();
  v17 = type metadata accessor for IntentOutcome(0, v14, v15, v16);
  v8[48] = v17;
  v8[49] = *(_QWORD *)(v17 - 8);
  v8[50] = swift_task_alloc();
  v8[51] = swift_task_alloc();
  v18 = sub_19CFDFF5C();
  v8[52] = v18;
  v8[53] = *(_QWORD *)(v18 - 8);
  v8[54] = swift_task_alloc();
  v8[55] = *(_QWORD *)(v13 - 8);
  v8[56] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF97DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t DynamicType;
  __int128 v20;
  _QWORD *v21;
  __int128 *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  __int128 v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  uint64_t (*v40)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 320) + 40))(*(_QWORD *)(v0 + 304));
  *(_QWORD *)(v0 + 264) = v2;
  swift_getExtendedExistentialTypeMetadata();
  v3 = swift_dynamicCast();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    v6 = *(_QWORD *)(v0 + 440);
    v5 = *(_QWORD *)(v0 + 448);
    v7 = *(_QWORD *)(v0 + 432);
    v8 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 312);
    v4(v7, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v7, v8);
    v40 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v9 + 32) + *(_QWORD *)(v9 + 32));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v10;
    *v10 = v0;
    v10[1] = sub_19CF982B8;
    return v40(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 312));
  }
  else
  {
    v12 = (__int128 *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 432);
    v15 = *(_QWORD *)(v0 + 416);
    v4(v13, 1, 1, *(_QWORD *)(v0 + 376));
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v16 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
    v41 = v16;
    v42 = sub_19CD40918(0, 50, 0, MEMORY[0x1E0DEE9D8]);
    v18._countAndFlagsBits = 0x7420746E65746E49;
    v18._object = (void *)0xED00006020657079;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    DynamicType = swift_getDynamicType();
    *(_QWORD *)(v0 + 160) = swift_getMetatypeMetadata();
    *(_QWORD *)(v0 + 136) = DynamicType;
    sub_19CCF8C5C(v0 + 136, v0 + 168, &qword_1ECEB3370);
    *v12 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_19CD1A39C(v0 + 168, v0 + 56, &qword_1ECEB3370);
    *(_BYTE *)(v0 + 88) = 0;
    v20 = *(_OWORD *)(v0 + 72);
    v43 = *v12;
    v44 = v20;
    v45 = *(_BYTE *)(v0 + 88);
    v21 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_19CD40918(0, v42[2] + 1, 1, v42);
    v22 = (__int128 *)(v0 + 96);
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
      v21 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    v25 = *(_QWORD *)(v0 + 376);
    v21[2] = v24 + 1;
    v26 = &v21[5 * v24];
    v27 = v43;
    v28 = v44;
    *((_BYTE *)v26 + 64) = v45;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    v42 = v21;
    sub_19CCECFE4(v0 + 136, &qword_1ECEB3370);
    v29._object = (void *)0x800000019D0793E0;
    v29._countAndFlagsBits = 0xD000000000000022;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(_QWORD *)(v0 + 224) = swift_getMetatypeMetadata();
    *(_QWORD *)(v0 + 200) = v25;
    sub_19CCF8C5C(v0 + 200, v0 + 232, &qword_1ECEB3370);
    *v22 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_19CD1A39C(v0 + 232, v0 + 96, &qword_1ECEB3370);
    *(_BYTE *)(v0 + 128) = 0;
    v30 = *(_OWORD *)(v0 + 112);
    v43 = *v22;
    v44 = v30;
    v45 = *(_BYTE *)(v0 + 128);
    v31 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_19CD40918(0, v42[2] + 1, 1, v42);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v34 = *(_QWORD *)(v0 + 336);
    v35 = *(_QWORD *)(v0 + 272);
    v31[2] = v33 + 1;
    v36 = &v31[5 * v33];
    v37 = v43;
    v38 = v44;
    *((_BYTE *)v36 + 64) = v45;
    *((_OWORD *)v36 + 2) = v37;
    *((_OWORD *)v36 + 3) = v38;
    v42 = v31;
    sub_19CCECFE4(v0 + 200, &qword_1ECEB3370);
    v39._countAndFlagsBits = 96;
    v39._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    *(_QWORD *)(v17 + 32) = v31;
    *(_QWORD *)&v43 = v41;
    LOBYTE(v42) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v42);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v35, 1, 1, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF982B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF9831C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 16))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384));
  if (swift_dynamicCast())
  {
    v1 = *(_QWORD *)(v0 + 440);
    v14 = *(_QWORD *)(v0 + 448);
    v2 = *(_QWORD *)(v0 + 408);
    v3 = *(_QWORD *)(v0 + 384);
    v4 = *(_QWORD *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 368);
    v5 = *(_QWORD *)(v0 + 376);
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 360);
    v11 = *(_QWORD *)(v0 + 368);
    v13 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 344) - 8) + 56))(v11, 1, 1, *(_QWORD *)(v0 + 344));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CF98580()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 376));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF98600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_19CF98660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CD579FC;
  return NativeIntentDispatcher.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19CF986E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocObject();
}

uint64_t destroy for NativeIntentDispatcher(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  return result;
}

uint64_t initializeWithCopy for NativeIntentDispatcher(uint64_t a1, _QWORD *a2)
{
  _OWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = a2 + 1;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    v8 = *((_OWORD *)v5 + 1);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for NativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 8);
    v6 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for NativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for NativeIntentDispatcher()
{
  return &type metadata for NativeIntentDispatcher;
}

uint64_t sub_19CF988F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 16);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_19CCBE344;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_19CF98970(char a1)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CF989C8()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF98A3C(char a1)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CF98A8C()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF98B38(char a1)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CF98B80()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF98C2C()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF98CB4(char a1)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CF98CF8()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF98D84(char a1)
{
  sub_19CFE08C8();
  __asm { BR              X10 }
}

uint64_t sub_19CF98DD8()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void __swiftcall ImpressionMetrics.ID.init(parent:element:index:uniqueID:)(JetEngine::ImpressionMetrics::ID *__return_ptr retstr, Swift::String_optional parent, Swift::String element, Swift::Int index, Swift::String_optional uniqueID)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  _QWORD v19[2];

  object = uniqueID.value._object;
  countAndFlagsBits = uniqueID.value._countAndFlagsBits;
  v8 = element._object;
  v19[0] = element._countAndFlagsBits;
  v9 = parent.value._object;
  v10 = parent.value._countAndFlagsBits;
  v12 = sub_19CFDEFA8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (object)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (index == -1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CFDEF9C();
    countAndFlagsBits = sub_19CFDEF90();
    object = v18;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  else
  {
    v19[1] = index;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    countAndFlagsBits = sub_19CFE0598();
    object = v17;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  retstr->parent.value._countAndFlagsBits = v10;
  retstr->parent.value._object = v9;
  retstr->element._countAndFlagsBits = v19[0];
  retstr->element._object = v8;
  retstr->index = index;
  retstr->uniqueID.value._countAndFlagsBits = countAndFlagsBits;
  retstr->uniqueID.value._object = object;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void __swiftcall ImpressionMetrics.ID.init(element:)(JetEngine::ImpressionMetrics::ID *__return_ptr retstr, Swift::String element)
{
  uint64_t countAndFlagsBits;
  void *object;
  void *v5;
  __int128 v6;
  JetEngine::ImpressionMetrics::ID v7;

  ImpressionMetrics.ID.init(parent:element:index:uniqueID:)(&v7, (Swift::String_optional)0, element, -1, (Swift::String_optional)0);
  countAndFlagsBits = v7.element._countAndFlagsBits;
  object = v7.element._object;
  v5 = v7.uniqueID.value._object;
  v6 = *(_OWORD *)&v7.index;
  retstr->parent = v7.parent;
  retstr->element._countAndFlagsBits = countAndFlagsBits;
  retstr->element._object = object;
  *(_OWORD *)&retstr->index = v6;
  retstr->uniqueID.value._object = v5;
}

uint64_t ImpressionMetrics.ID.parent.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ImpressionMetrics.ID.parent.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.element.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ImpressionMetrics.ID.element.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.index.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*ImpressionMetrics.ID.index.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_19CFE08E0();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CFE08E0();
  }
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_19CFE08E0();
  sub_19CFE08E0();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t ImpressionMetrics.ID.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  sub_19CFE08C8();
  sub_19CFE08E0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08E0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  return sub_19CFE0910();
}

uint64_t sub_19CF992C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ImpressionMetrics.ID.init(deserializing:using:)(a1, a2);
}

__n128 ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)@<Q0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  __n128 v15;
  __int128 v16;
  __int128 v17;

  v16 = a1[1];
  v17 = *a1;
  v15 = (__n128)a1[2];
  v10 = *((_QWORD *)a1 + 6);
  v11 = *a3;
  swift_bridgeObjectRetain();
  v12 = sub_19CE33280(a2, a4);
  v13 = sub_19CE33280(a5, a4);
  *(_OWORD *)a6 = v17;
  *(_OWORD *)(a6 + 16) = v16;
  result = v15;
  *(__n128 *)(a6 + 32) = v15;
  *(_QWORD *)(a6 + 48) = v10;
  *(_QWORD *)(a6 + 56) = v12;
  *(_QWORD *)(a6 + 64) = v11;
  *(_QWORD *)(a6 + 72) = v13;
  return result;
}

uint64_t (*ImpressionMetrics.id.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.fields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ImpressionMetrics.fields.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*ImpressionMetrics.custom.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionMetrics.clickLocationFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*ImpressionMetrics.clickLocationFields.modify())()
{
  return nullsub_1;
}

void sub_19CF9944C(char *a1)
{
  sub_19CE81550(*a1);
}

void sub_19CF99458()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF994A4()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CF99510()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF9954C()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF995A4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CF995EC()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF99658@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9B284();
  *a1 = result;
  return result;
}

uint64_t sub_19CF99684()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF996B4 + 4 * byte_19D0680A7[*v0]))();
}

void sub_19CF996B4(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

void sub_19CF996C4(_QWORD *a1@<X8>)
{
  *a1 = 0x6973736572706D69;
  a1[1] = 0xEF7865646E496E6FLL;
}

void sub_19CF996EC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x4449657571696E75;
  a1[1] = v1;
}

uint64_t sub_19CF99704()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF99734 + 4 * byte_19D0680AB[*v0]))(0x6449746E65726170, 0xE800000000000000);
}

uint64_t sub_19CF99734()
{
  return 25705;
}

uint64_t sub_19CF99740()
{
  return 0x6973736572706D69;
}

uint64_t sub_19CF99764()
{
  return 0x4449657571696E75;
}

uint64_t sub_19CF99778@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9B284();
  *a1 = result;
  return result;
}

uint64_t sub_19CF9979C()
{
  sub_19CF9ABBC();
  return sub_19CFE0A48();
}

uint64_t sub_19CF997C4()
{
  sub_19CF9ABBC();
  return sub_19CFE0A54();
}

uint64_t ImpressionMetrics.ID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *object;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  Swift::Int v17;
  uint64_t v18;
  void *v19;
  Swift::String_optional v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t countAndFlagsBits;
  JetEngine::ImpressionMetrics::ID v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4437D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF9ABBC();
  sub_19CFE09E8();
  if (!v2)
  {
    LOBYTE(v30.parent.value._countAndFlagsBits) = 0;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
      v31 = 0;
      sub_19CF43860();
      sub_19CFE04B4();
      object = v30.parent.value._object;
      countAndFlagsBits = v30.parent.value._countAndFlagsBits;
    }
    else
    {
      countAndFlagsBits = 0;
      object = 0;
    }
    LOBYTE(v30.parent.value._countAndFlagsBits) = 1;
    v11 = sub_19CFE0490();
    v13 = v12;
    v28 = v11;
    LOBYTE(v30.parent.value._countAndFlagsBits) = 2;
    v14 = sub_19CFE0478();
    if ((v15 & 1) != 0)
      v17 = -1;
    else
      v17 = v14;
    v27 = v17;
    LOBYTE(v30.parent.value._countAndFlagsBits) = 3;
    if ((sub_19CFE04CC() & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
      v31 = 3;
      sub_19CF43860();
      sub_19CFE04B4();
      v18 = v30.parent.value._countAndFlagsBits;
      v19 = v30.parent.value._object;
    }
    else
    {
      v18 = 0;
      v19 = 0;
    }
    v21._countAndFlagsBits = v28;
    v20.value._countAndFlagsBits = countAndFlagsBits;
    v20.value._object = object;
    v21._object = v13;
    ImpressionMetrics.ID.init(parent:element:index:uniqueID:)(&v30, v20, v21, v27, *(Swift::String_optional *)&v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v22 = v30.element._countAndFlagsBits;
    v23 = v30.element._object;
    v24 = v30.uniqueID.value._object;
    v25 = *(_OWORD *)&v30.index;
    *(Swift::String_optional *)a2 = v30.parent;
    *(_QWORD *)(a2 + 16) = v22;
    *(_QWORD *)(a2 + 24) = v23;
    *(_OWORD *)(a2 + 32) = v25;
    *(_QWORD *)(a2 + 48) = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ImpressionMetrics.ID.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4437E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = v1[2];
  v18 = v1[3];
  v19 = v10;
  v11 = v1[4];
  v16 = v1[5];
  v17 = v11;
  v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF9ABBC();
  sub_19CFE0A24();
  v21 = v9;
  v22 = v8;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  sub_19CD20AFC((unint64_t *)&qword_1EE43F7B8, &qword_1ECEB2550, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
  v12 = v20;
  sub_19CFE0568();
  if (!v12)
  {
    v13 = v16;
    LOBYTE(v21) = 1;
    sub_19CFE0538();
    LOBYTE(v21) = 2;
    sub_19CFE055C();
    v21 = v13;
    v22 = v15;
    v23 = 3;
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_19CF99C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ImpressionMetrics.ID.init(from:)(a1, a2);
}

uint64_t sub_19CF99C6C(_QWORD *a1)
{
  return ImpressionMetrics.ID.encode(to:)(a1);
}

void sub_19CF99C80(char *a1)
{
  sub_19CE816A4(*a1);
}

void sub_19CF99C8C()
{
  char *v0;

  sub_19CF98CB4(*v0);
}

void sub_19CF99C94()
{
  __asm { BR              X10 }
}

uint64_t sub_19CF99CC4()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CF99D3C(uint64_t a1)
{
  char *v1;

  sub_19CE1187C(a1, *v1);
}

uint64_t sub_19CF99D44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9B23C();
  *a1 = result;
  return result;
}

uint64_t sub_19CF99D70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CF99D94 + 4 * byte_19D0680B4[*v0]))();
}

void sub_19CF99D94(_QWORD *a1@<X8>)
{
  *a1 = 0x73646C656966;
  a1[1] = 0xE600000000000000;
}

void sub_19CF99DAC(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74737563;
  a1[1] = 0xE600000000000000;
}

void sub_19CF99DC4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "commonFields");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_19CF99DE8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019D06C800;
}

uint64_t sub_19CF99E08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF99E2C + 4 * byte_19D0680B9[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_19CF99E2C()
{
  return 0x73646C656966;
}

uint64_t sub_19CF99E40()
{
  return 0x6D6F74737563;
}

uint64_t sub_19CF99E54()
{
  return 0x69466E6F6D6D6F63;
}

unint64_t sub_19CF99E74()
{
  return 0xD000000000000013;
}

uint64_t sub_19CF99E90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9B23C();
  *a1 = result;
  return result;
}

uint64_t sub_19CF99EB4()
{
  sub_19CE35D98();
  return sub_19CFE0A48();
}

uint64_t sub_19CF99EDC()
{
  sub_19CE35D98();
  return sub_19CFE0A54();
}

uint64_t ImpressionMetrics.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _BYTE v48[40];
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[8];
  char v53;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4437F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE35D98();
  sub_19CFE09E8();
  if (!v2)
  {
    LOBYTE(v49[0]) = 0;
    sub_19CF9AC00();
    sub_19CFE04B4();
    v46 = a2;
    v47 = v6;
    v10 = v52[1];
    v11 = v52[3];
    v44 = v52[2];
    v45 = v52[0];
    v43 = v52[4];
    v12 = v52[6];
    v42 = v52[5];
    LOBYTE(v49[0]) = 1;
    v13 = sub_19CE080B8();
    sub_19CFE04B4();
    v41 = v5;
    v37 = v13;
    v40 = v11;
    v39 = v10;
    JSONObject.dictionary.getter((uint64_t)v49);
    v15 = v50;
    if (v50)
    {
      v38 = v12;
      v16 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      v17 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v15, v16);
      sub_19CDC6248((uint64_t)v49);
      if (v17)
      {
        LOBYTE(v49[0]) = 2;
        v18 = v41;
        if ((sub_19CFE04CC() & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
          v48[0] = 2;
          sub_19CD20AFC(&qword_1EE43EDF8, &qword_1EE43EDF0, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
          sub_19CFE04B4();
          v19 = v49[0];
        }
        else
        {
          v19 = MEMORY[0x1E0DEE9E0];
        }
        v36 = v19;
        v24 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
        LOBYTE(v49[0]) = 3;
        if ((sub_19CFE04CC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v53 = 3;
          sub_19CFE04B4();
          JSONObject.dictionary.getter((uint64_t)v49);
          sub_19CD3E3F8((uint64_t)v48);
          v25 = v50;
          if (v50)
          {
            v26 = v51;
            __swift_project_boxed_opaque_existential_1(v49, v50);
            v24 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v25, v26);
            sub_19CDC6248((uint64_t)v49);
            if (v24)
              goto LABEL_18;
          }
          else
          {
            sub_19CCECFE4((uint64_t)v49, &qword_1EE43C1C8);
          }
          v24 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
        }
LABEL_18:
        v27 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
        LOBYTE(v49[0]) = 4;
        if ((sub_19CFE04CC() & 1) == 0)
        {
          v28 = v39;
LABEL_27:
          swift_bridgeObjectRetain();
          v31 = sub_19CE33280(v17, v24);
          v32 = sub_19CE33280(v27, v24);
          sub_19CD3E3F8((uint64_t)v52);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v18);
          v33 = v46;
          *v46 = v45;
          v33[1] = v28;
          v34 = v40;
          v33[2] = v44;
          v33[3] = v34;
          v35 = v42;
          v33[4] = v43;
          v33[5] = v35;
          v33[6] = v38;
          v33[7] = v31;
          v33[8] = v36;
          v33[9] = v32;
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        }
        swift_bridgeObjectRelease();
        v53 = 4;
        sub_19CFE04B4();
        v37 = v17;
        JSONObject.dictionary.getter((uint64_t)v49);
        sub_19CD3E3F8((uint64_t)v48);
        v29 = v50;
        if (v50)
        {
          v30 = v51;
          __swift_project_boxed_opaque_existential_1(v49, v50);
          v27 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v29, v30);
          sub_19CDC6248((uint64_t)v49);
          v28 = v39;
          if (v27)
          {
LABEL_26:
            v17 = v37;
            goto LABEL_27;
          }
        }
        else
        {
          sub_19CCECFE4((uint64_t)v49, &qword_1EE43C1C8);
          v28 = v39;
        }
        v27 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19CCECFE4((uint64_t)v49, &qword_1EE43C1C8);
    }
    v20 = sub_19CFE01B4();
    swift_allocError();
    v22 = v21;
    v46 = (uint64_t *)((char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530) + 48));
    *v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v23 = (_QWORD *)sub_19CFE09B8();
    sub_19CE35464(1, v23);
    swift_bridgeObjectRelease();
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    sub_19CD3E3F8((uint64_t)v52);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v41);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ImpressionMetrics.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443800);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v21 = v1[1];
  v22 = v9;
  v20 = v1[2];
  v11 = *((_QWORD *)v1 + 6);
  v10 = *((_QWORD *)v1 + 7);
  v18 = *((_QWORD *)v1 + 8);
  v19 = v10;
  v17 = *((_QWORD *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE35D98();
  sub_19CFE0A24();
  v23 = v22;
  v24 = v21;
  v25 = v20;
  v26 = v11;
  v27 = 0;
  sub_19CF9AC44();
  sub_19CFE0568();
  if (!v2)
  {
    *((_QWORD *)&v24 + 1) = &type metadata for FoundationValue;
    *(_QWORD *)&v25 = &off_1E3DCC5B0;
    v13 = swift_allocObject();
    *(_QWORD *)&v23 = v13;
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    *(_QWORD *)(v13 + 40) = v14;
    *(_QWORD *)(v13 + 16) = v19;
    v27 = 1;
    sub_19CE081CC();
    swift_bridgeObjectRetain();
    sub_19CFE0568();
    sub_19CD3E3F8((uint64_t)&v23);
    *(_QWORD *)&v23 = v18;
    v27 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EDF0);
    sub_19CD20AFC(&qword_1EE43EE48, &qword_1EE43EDF0, (uint64_t)&protocol witness table for ScalarDictionary, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
    *((_QWORD *)&v24 + 1) = &type metadata for FoundationValue;
    *(_QWORD *)&v25 = &off_1E3DCC5B0;
    v15 = swift_allocObject();
    *(_QWORD *)&v23 = v15;
    *(_QWORD *)(v15 + 40) = v14;
    *(_QWORD *)(v15 + 16) = v17;
    v27 = 4;
    swift_bridgeObjectRetain();
    sub_19CFE0568();
    sub_19CD3E3F8((uint64_t)&v23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CF9A9D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ImpressionMetrics.init(from:)(a1, a2);
}

uint64_t sub_19CF9A9E8(_QWORD *a1)
{
  return ImpressionMetrics.encode(to:)(a1);
}

uint64_t _s9JetEngine17ImpressionMetricsV2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 6);
  v5 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  v6 = *((_QWORD *)a1 + 9);
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 6);
  v11 = *((_QWORD *)a2 + 8);
  v28 = *a1;
  v29 = v2;
  v30 = v3;
  v31 = a1[2];
  v32 = v4;
  v23 = *a2;
  v24 = v8;
  v25 = v9;
  v26 = a2[2];
  v27 = v10;
  if ((_s9JetEngine17ImpressionMetricsV2IDV2eeoiySbAE_AEtFZ_0((uint64_t *)&v28, (uint64_t *)&v23) & 1) == 0)
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_19CE07520(v12, v5);
  swift_bridgeObjectRelease();
  v14 = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_7;
  MEMORY[0x1E0C80A78](v14, v15);
  if ((sub_19CE07D3C(v5, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE07F54) & 1) == 0)
    goto LABEL_7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_19CDD0DBC(v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_19CE07520(v17, v6);
  swift_bridgeObjectRelease();
  v19 = swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v19, v20);
    v21 = sub_19CE07D3C(v6, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE08BC0);
  }
  else
  {
LABEL_7:
    v21 = 0;
  }
  return v21 & 1;
}

unint64_t sub_19CF9ABBC()
{
  unint64_t result;

  result = qword_1EE4437E0;
  if (!qword_1EE4437E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0684A0, &type metadata for ImpressionMetrics.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE4437E0);
  }
  return result;
}

unint64_t sub_19CF9AC00()
{
  unint64_t result;

  result = qword_1EE4437F8;
  if (!qword_1EE4437F8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionMetrics.ID, &type metadata for ImpressionMetrics.ID);
    atomic_store(result, (unint64_t *)&qword_1EE4437F8);
  }
  return result;
}

unint64_t sub_19CF9AC44()
{
  unint64_t result;

  result = qword_1EE443808;
  if (!qword_1EE443808)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionMetrics.ID, &type metadata for ImpressionMetrics.ID);
    atomic_store(result, (unint64_t *)&qword_1EE443808);
  }
  return result;
}

uint64_t sub_19CF9AC88()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

_QWORD *assignWithCopy for ImpressionMetrics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImpressionMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithCopy for ImpressionMetrics.ID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImpressionMetrics.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for ImpressionMetrics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CF9AF40 + 4 * byte_19D0680C3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CF9AF74 + 4 * byte_19D0680BE[v4]))();
}

uint64_t sub_19CF9AF74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9AF7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF9AF84);
  return result;
}

uint64_t sub_19CF9AF90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF9AF98);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CF9AF9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9AFA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionMetrics.CodingKeys()
{
  return &type metadata for ImpressionMetrics.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ImpressionMetrics.ID.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CF9B00C + 4 * byte_19D0680CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CF9B040 + 4 * byte_19D0680C8[v4]))();
}

uint64_t sub_19CF9B040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9B048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF9B050);
  return result;
}

uint64_t sub_19CF9B05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF9B064);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CF9B068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9B070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionMetrics.ID.CodingKeys()
{
  return &type metadata for ImpressionMetrics.ID.CodingKeys;
}

unint64_t sub_19CF9B090()
{
  unint64_t result;

  result = qword_1EE443810;
  if (!qword_1EE443810)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068338, &type metadata for ImpressionMetrics.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443810);
  }
  return result;
}

unint64_t sub_19CF9B0D8()
{
  unint64_t result;

  result = qword_1EE443818;
  if (!qword_1EE443818)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068428, &type metadata for ImpressionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443818);
  }
  return result;
}

unint64_t sub_19CF9B120()
{
  unint64_t result;

  result = qword_1EE443820;
  if (!qword_1EE443820)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068360, &type metadata for ImpressionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443820);
  }
  return result;
}

unint64_t sub_19CF9B168()
{
  unint64_t result;

  result = qword_1EE443828;
  if (!qword_1EE443828)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068388, &type metadata for ImpressionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443828);
  }
  return result;
}

unint64_t sub_19CF9B1B0()
{
  unint64_t result;

  result = qword_1EE443830;
  if (!qword_1EE443830)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068270, &type metadata for ImpressionMetrics.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443830);
  }
  return result;
}

unint64_t sub_19CF9B1F8()
{
  unint64_t result;

  result = qword_1EE443838;
  if (!qword_1EE443838)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068298, &type metadata for ImpressionMetrics.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443838);
  }
  return result;
}

uint64_t sub_19CF9B23C()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_19CF9B284()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t *sub_19CF9B2CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_19CFDEF84();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v41 = v20[1];
    *v19 = *v20;
    v19[1] = v41;
    v21 = a3[9];
    v22 = a3[10];
    v23 = (uint64_t *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (uint64_t *)((char *)v4 + v22);
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v29) = *(uint64_t *)((char *)a2 + v29);
    v30 = a3[13];
    v31 = a3[14];
    v32 = (uint64_t *)((char *)v4 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v32[2] = v33[2];
    v35 = (uint64_t *)((char *)v4 + v31);
    v36 = (uint64_t *)((char *)a2 + v31);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v36[3];
    v35[2] = v36[2];
    v35[3] = v38;
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_19CF9B488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_19CF9B568(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEF84();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)((char *)a1 + v14);
  v19 = (_QWORD *)((char *)a2 + v14);
  v39 = v19[1];
  *v18 = *v19;
  v18[1] = v39;
  v20 = a3[9];
  v21 = a3[10];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  v29 = a3[13];
  v30 = a3[14];
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (_QWORD *)((char *)a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v31[2] = v32[2];
  v34 = (_QWORD *)((char *)a1 + v30);
  v35 = (_QWORD *)((char *)a2 + v30);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = v35[3];
  v34[2] = v35[2];
  v34[3] = v37;
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_19CF9B6F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[10];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[13];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (char *)a2 + v22;
  *v23 = *(_QWORD *)((char *)a2 + v22);
  v23[1] = *(_QWORD *)((char *)a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[2] = *((_QWORD *)v24 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[14];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  *v26 = *(_QWORD *)((char *)a2 + v25);
  v26[1] = *(_QWORD *)((char *)a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[2] = *((_QWORD *)v27 + 2);
  v26[3] = *((_QWORD *)v27 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  return a1;
}

_OWORD *sub_19CF9B920(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[13];
  v15 = a3[14];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *(_OWORD *)v17;
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *(_OWORD *)v16 = v18;
  v19 = (_OWORD *)((char *)a1 + v15);
  v20 = (_OWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  return a1;
}

_QWORD *sub_19CF9BA00(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEF84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[10];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)((char *)a2 + v32 + 8);
  *v33 = *(_QWORD *)((char *)a2 + v32);
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v33[2] = *((_QWORD *)v34 + 2);
  swift_bridgeObjectRelease();
  v36 = a3[14];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)((char *)a2 + v36 + 8);
  *v37 = *(_QWORD *)((char *)a2 + v36);
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v40 = *((_QWORD *)v38 + 3);
  v37[2] = *((_QWORD *)v38 + 2);
  v37[3] = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  return a1;
}

uint64_t sub_19CF9BB80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF9BB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_19CF9BC08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF9BC14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CF9BC88(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19CF9BD04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];

  v15 = a2;
  v14 = a5;
  v6 = type metadata accessor for SentryArray.CodingKeys(255, a3, a4, a5);
  MEMORY[0x1A1ADBD7C](&unk_19D0689A0, v6);
  v7 = sub_19CFE0574();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A24();
  v16[2] = v15;
  v12 = sub_19CFDF938();
  v16[0] = v14;
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF10], v12, v16);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

_QWORD *sub_19CF9BE54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD v17[3];

  v15[1] = a2;
  v16 = a3;
  v6 = type metadata accessor for SentryArray.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1A1ADBD7C](&unk_19D0689A0, v6);
  v7 = sub_19CFE04D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v15 - v10;
  v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09E8();
  if (!v4)
  {
    v13 = sub_19CFDF938();
    v17[0] = v16;
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF40], v13, v17);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v12 = (_QWORD *)v17[2];
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v12;
}

uint64_t sub_19CF9BFD0()
{
  return 0x7365756C6176;
}

uint64_t sub_19CF9BFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF9BC88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CF9C018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDBA69C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19CF9C04C(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0689A0, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CF9C080(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0689A0, a1);
  return sub_19CFE0A54();
}

_QWORD *sub_19CF9C0B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = sub_19CF9BE54(a1, a2[2], a2[3], a2[4]);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_19CF9C0E8(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_19CF9BD04(a1, *v2, a2[2], a2[3], a2[4]);
}

uint64_t sub_19CF9C10C()
{
  sub_19CF9D774();
  return sub_19CFDF83C();
}

uint64_t sub_19CF9C168()
{
  sub_19CF9D774();
  return sub_19CFDF80C();
}

uint64_t sub_19CF9C1B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF9C1E8 + 4 * byte_19D068500[a1]))(0x64695F746E657665, 0xE800000000000000);
}

uint64_t sub_19CF9C1E8()
{
  return 0x7463656A6F7270;
}

uint64_t sub_19CF9C200()
{
  return 0x6D617473656D6974;
}

uint64_t sub_19CF9C220()
{
  return 0x6D726F6674616C70;
}

uint64_t sub_19CF9C234()
{
  return 0x657361656C6572;
}

uint64_t sub_19CF9C24C()
{
  return 1953720676;
}

uint64_t sub_19CF9C25C()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_19CF9C27C()
{
  return 1936154996;
}

uint64_t sub_19CF9C28C()
{
  return 0x6F69747065637865;
}

uint64_t sub_19CF9C2A8()
{
  return 0x74736575716572;
}

uint64_t sub_19CF9C2C0()
{
  return 7038067;
}

uint64_t sub_19CF9C2D0()
{
  return 118;
}

uint64_t sub_19CF9C2DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF9C310 + 4 * byte_19D06850C[a1]))(0x64695F746E657665, 0xE800000000000000);
}

uint64_t sub_19CF9C310()
{
  return 0x7463656A6F7270;
}

uint64_t sub_19CF9C328()
{
  return 0x6D617473656D6974;
}

uint64_t sub_19CF9C348()
{
  return 0x6D726F6674616C70;
}

uint64_t sub_19CF9C35C()
{
  return 0x657361656C6572;
}

uint64_t sub_19CF9C374()
{
  return 1953720676;
}

uint64_t sub_19CF9C384()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_19CF9C3A4()
{
  return 1936154996;
}

uint64_t sub_19CF9C3B4()
{
  return 0x6F69747065637865;
}

uint64_t sub_19CF9C3D0()
{
  return 0x74736575716572;
}

uint64_t sub_19CF9C3E8()
{
  return 7038067;
}

uint64_t sub_19CF9C3F8()
{
  return 118;
}

uint64_t sub_19CF9C404(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_19CF9C1B4(*a1);
  v5 = v4;
  if (v3 == sub_19CF9C1B4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19CF9C48C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_19CFE08C8();
  sub_19CF9C1B4(v1);
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF9C4EC()
{
  unsigned __int8 *v0;

  sub_19CF9C1B4(*v0);
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF9C52C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_19CFE08C8();
  sub_19CF9C1B4(v1);
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CF9C588@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9D72C();
  *a1 = result;
  return result;
}

uint64_t sub_19CF9C5B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19CF9C1B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19CF9C5DC()
{
  unsigned __int8 *v0;

  return sub_19CF9C2DC(*v0);
}

uint64_t sub_19CF9C5E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CF9D72C();
  *a1 = result;
  return result;
}

void sub_19CF9C608(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_19CF9C614()
{
  sub_19CF9D194();
  return sub_19CFE0A48();
}

uint64_t sub_19CF9C63C()
{
  sub_19CF9D194();
  return sub_19CFE0A54();
}

uint64_t sub_19CF9C664(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];
  uint64_t v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF9D194();
  sub_19CFE0A24();
  v21[0] = 0;
  sub_19CFE0538();
  if (!v2)
  {
    v21[0] = 1;
    sub_19CFE0538();
    v10 = (int *)type metadata accessor for SentryEvent();
    v21[0] = 2;
    sub_19CFDEF84();
    sub_19CCC5220(&qword_1ECEB07F8, MEMORY[0x1E0CB0890]);
    sub_19CFE0568();
    v11 = (uint64_t *)(v3 + v10[7]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v21 = v13;
    *(_QWORD *)&v21[8] = v12;
    v23 = 3;
    sub_19CF9D1D8();
    sub_19CFE0568();
    v21[0] = 4;
    sub_19CFE04FC();
    v21[0] = 5;
    sub_19CFE04FC();
    v21[0] = 6;
    sub_19CFE04FC();
    *(_QWORD *)v21 = *(_QWORD *)(v3 + v10[11]);
    v23 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
    sub_19CF9D2E8((unint64_t *)&qword_1EE436E88, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_19CFE052C();
    *(_QWORD *)v21 = *(_QWORD *)(v3 + v10[12]);
    v23 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436D78);
    sub_19CF9D348(&qword_1EE436D70, (uint64_t)&unk_19D068834);
    sub_19CFE052C();
    v14 = v3 + v10[13];
    *(_QWORD *)v21 = *(_QWORD *)v14;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v14 + 8);
    v23 = 9;
    sub_19CF9D21C();
    sub_19CFE0568();
    v15 = (__int128 *)(v3 + v10[14]);
    v16 = *v15;
    v18 = *((_QWORD *)v15 + 2);
    v17 = *((_QWORD *)v15 + 3);
    *(_OWORD *)v21 = v16;
    *(_QWORD *)&v21[16] = v18;
    v22 = v17;
    v23 = 10;
    sub_19CF9D260();
    sub_19CFE0568();
    v21[0] = 11;
    sub_19CFE055C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_19CF9CA48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int *v45;
  _BYTE v46[24];
  uint64_t v47;
  char v48;

  v5 = sub_19CFDEF84();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443840);
  v9 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SentryEvent();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = a1;
  v45 = v17;
  *(uint64_t *)((char *)v16 + v17[15]) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF9D194();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  v39 = a2;
  v40 = v9;
  v46[0] = 0;
  *v16 = sub_19CFE0490();
  v16[1] = v18;
  v46[0] = 1;
  v16[2] = sub_19CFE0490();
  v16[3] = v19;
  v46[0] = 2;
  sub_19CCC5220(&qword_1ECEB0968, MEMORY[0x1E0CB08C0]);
  v20 = v43;
  sub_19CFE04B4();
  v21 = v45;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v16 + v45[6], v8, v20);
  v48 = 3;
  sub_19CF9D2A4();
  sub_19CFE04B4();
  v22 = *(_QWORD *)&v46[8];
  v23 = (uint64_t *)((char *)v16 + v21[7]);
  *v23 = *(_QWORD *)v46;
  v23[1] = v22;
  v46[0] = 4;
  v24 = sub_19CFE0454();
  v25 = (uint64_t *)((char *)v16 + v21[8]);
  *v25 = v24;
  v25[1] = v26;
  v46[0] = 5;
  v27 = sub_19CFE0454();
  v28 = (uint64_t *)((char *)v16 + v21[9]);
  *v28 = v27;
  v28[1] = v29;
  v46[0] = 6;
  v30 = sub_19CFE0454();
  v31 = (uint64_t *)((char *)v16 + v21[10]);
  *v31 = v30;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
  v48 = 7;
  sub_19CF9D2E8(&qword_1EE443850, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_19CFE0484();
  *(uint64_t *)((char *)v16 + v21[11]) = *(_QWORD *)v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436D78);
  v48 = 8;
  sub_19CF9D348(&qword_1EE443858, (uint64_t)&unk_19D0687E4);
  sub_19CFE0484();
  *(uint64_t *)((char *)v16 + v21[12]) = *(_QWORD *)v46;
  v48 = 9;
  sub_19CF9D38C();
  sub_19CFE04B4();
  v33 = (char *)v16 + v45[13];
  *(_QWORD *)v33 = *(_QWORD *)v46;
  *(_OWORD *)(v33 + 8) = *(_OWORD *)&v46[8];
  v48 = 10;
  sub_19CF9D3D0();
  sub_19CFE04B4();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
  v34 = *(_QWORD *)&v46[16];
  v35 = v47;
  v36 = (char *)v16 + v45[14];
  *(_OWORD *)v36 = *(_OWORD *)v46;
  *((_QWORD *)v36 + 2) = v34;
  *((_QWORD *)v36 + 3) = v35;
  sub_19CF9D414((uint64_t)v16, v39);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  return sub_19CF9D458((uint64_t)v16);
}

uint64_t sub_19CF9D16C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF9CA48(a1, a2);
}

uint64_t sub_19CF9D180(_QWORD *a1)
{
  return sub_19CF9C664(a1);
}

unint64_t sub_19CF9D194()
{
  unint64_t result;

  result = qword_1EE436D80;
  if (!qword_1EE436D80)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068884, &type metadata for SentryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436D80);
  }
  return result;
}

unint64_t sub_19CF9D1D8()
{
  unint64_t result;

  result = qword_1EE436D98;
  if (!qword_1EE436D98)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06885C, &type metadata for SentryEvent.Platform);
    atomic_store(result, (unint64_t *)&qword_1EE436D98);
  }
  return result;
}

unint64_t sub_19CF9D21C()
{
  unint64_t result;

  result = qword_1EE436DD0;
  if (!qword_1EE436DD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06A42C, &type metadata for SentryRequest);
    atomic_store(result, (unint64_t *)&qword_1EE436DD0);
  }
  return result;
}

unint64_t sub_19CF9D260()
{
  unint64_t result;

  result = qword_1EE436E80;
  if (!qword_1EE436E80)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053070, &type metadata for SentrySDK);
    atomic_store(result, (unint64_t *)&qword_1EE436E80);
  }
  return result;
}

unint64_t sub_19CF9D2A4()
{
  unint64_t result;

  result = qword_1EE443848;
  if (!qword_1EE443848)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06880C, &type metadata for SentryEvent.Platform);
    atomic_store(result, (unint64_t *)&qword_1EE443848);
  }
  return result;
}

uint64_t sub_19CF9D2E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB0750);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1A1ADBD7C](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19CF9D348(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE436D78);
    result = MEMORY[0x1A1ADBD7C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19CF9D38C()
{
  unint64_t result;

  result = qword_1EE443860;
  if (!qword_1EE443860)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06A404, &type metadata for SentryRequest);
    atomic_store(result, (unint64_t *)&qword_1EE443860);
  }
  return result;
}

unint64_t sub_19CF9D3D0()
{
  unint64_t result;

  result = qword_1EE443868;
  if (!qword_1EE443868)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D053048, &type metadata for SentrySDK);
    atomic_store(result, (unint64_t *)&qword_1EE443868);
  }
  return result;
}

uint64_t sub_19CF9D414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SentryEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF9D458(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SentryEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_19CF9D570 + 4 * byte_19D06851D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_19CF9D5A4 + 4 * byte_19D068518[v4]))();
}

uint64_t sub_19CF9D5A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9D5AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF9D5B4);
  return result;
}

uint64_t sub_19CF9D5C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF9D5C8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_19CF9D5CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9D5D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SentryEvent.CodingKeys()
{
  return &type metadata for SentryEvent.CodingKeys;
}

uint64_t type metadata accessor for SentryArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SentryArray);
}

ValueMetadata *type metadata accessor for SentryEvent.Platform()
{
  return &type metadata for SentryEvent.Platform;
}

unint64_t sub_19CF9D610()
{
  unint64_t result;

  result = qword_1EE443870;
  if (!qword_1EE443870)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068654, &type metadata for SentryEvent.Platform);
    atomic_store(result, (unint64_t *)&qword_1EE443870);
  }
  return result;
}

unint64_t sub_19CF9D658()
{
  unint64_t result;

  result = qword_1EE443878;
  if (!qword_1EE443878)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0687BC, &type metadata for SentryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443878);
  }
  return result;
}

unint64_t sub_19CF9D6A0()
{
  unint64_t result;

  result = qword_1EE436D90;
  if (!qword_1EE436D90)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0686F4, &type metadata for SentryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436D90);
  }
  return result;
}

unint64_t sub_19CF9D6E8()
{
  unint64_t result;

  result = qword_1EE436D88;
  if (!qword_1EE436D88)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06871C, &type metadata for SentryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436D88);
  }
  return result;
}

uint64_t sub_19CF9D72C()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

unint64_t sub_19CF9D774()
{
  unint64_t result;

  result = qword_1EE436DA0;
  if (!qword_1EE436DA0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0686BC, &type metadata for SentryEvent.Platform);
    atomic_store(result, (unint64_t *)&qword_1EE436DA0);
  }
  return result;
}

uint64_t type metadata accessor for SentryArray.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SentryArray.CodingKeys);
}

uint64_t sub_19CF9D7C4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF9D804 + 4 * byte_19D068522[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF9D824 + 4 * byte_19D068527[v4]))();
}

_BYTE *sub_19CF9D804(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF9D824(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF9D82C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF9D834(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF9D83C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF9D844(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_19CF9D850()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF9D860()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF9D870()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

id Account.unsafelyUnwrapped.getter()
{
  id *v0;

  return *v0;
}

void Account.subscript.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  id *v2;
  uint64_t v4;
  id v5;
  void (*v6)(_BYTE *, _QWORD);
  _BYTE v7[32];
  id v8;

  v4 = *a1;
  v8 = *v2;
  v5 = v8;
  v6 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DED210] + v4 + 8) - 8) + 16))(a2);
  v6(v7, 0);

}

JetEngine::Account __swiftcall Account.init(wrapping:)(JetEngine::Account wrapping)
{
  JetEngine::Account *v1;

  v1->base.super.isa = wrapping.base.super.isa;
  return wrapping;
}

uint64_t Account.cookies(for:)()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)sub_19CFDED2C();
  v3 = objc_msgSend(v1, sel_ams_cookiesForURL_, v2);

  sub_19CCE5204(0, (unint64_t *)&qword_1EE43B440);
  v4 = sub_19CFDF86C();

  return v4;
}

uint64_t Account.acAccountCopy.getter()
{
  id *v0;
  uint64_t v2;

  objc_msgSend(*v0, sel_copy);
  sub_19CFE004C();
  swift_unknownObjectRelease();
  sub_19CCE5204(0, (unint64_t *)&qword_1EE4370F8);
  swift_dynamicCast();
  return v2;
}

void Account.subscript.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  swift_getAtKeyPath();

}

void sub_19CF9DA6C(id *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  id v5;

  v4 = *a2;
  v5 = *a1;
  Account.subscript.getter(v4, a3);

}

uint64_t Account.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_19CF9DEBC(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DED210] + v3 + 8) - 8) + 8))(a1);
}

void (*Account.subscript.modify(_QWORD *a1, uint64_t *a2))(_QWORD ***a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a2 + 8);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  Account.subscript.getter(a2, (uint64_t)v9);
  return sub_19CF9DBB8;
}

void sub_19CF9DBB8(_QWORD ***a1, char a2)
{
  _QWORD **v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(_QWORD *, _QWORD *);

  v2 = *a1;
  v3 = (*a1)[4];
  v4 = (*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    ((void (*)(_QWORD *, _QWORD *, _QWORD *))v6[2])((*a1)[4], v4, v5);
    swift_retain();
    sub_19CF9DEBC((uint64_t)v3, v7);
    v8 = (void (*)(_QWORD *, _QWORD *))v6[1];
    v8(v3, v5);
  }
  else
  {
    swift_retain();
    sub_19CF9DEBC((uint64_t)v4, v7);
    v8 = (void (*)(_QWORD *, _QWORD *))v6[1];
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

double Account.value(forFlag:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  id *v2;
  double result;

  if (objc_msgSend(*v2, sel_ams_accountFlagValueForAccountFlag_, a1))
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t Account.setValue(_:forFlag:)(_QWORD *a1, uint64_t a2)
{
  id *v2;
  id v5;
  id v6;
  id v7;
  void *v9;

  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v5 = *v2;
    objc_msgSend(v5, sel_copy);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CCE5204(0, (unint64_t *)&qword_1EE4370F8);
    swift_dynamicCast();

    v6 = *v2;
    *v2 = v9;

  }
  v7 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  objc_msgSend(v7, sel_ams_setAccountFlagValue_forAccountFlag_, sub_19CFE0688(), a2);
  return swift_unknownObjectRelease();
}

uint64_t Account.storefront(for:)(uint64_t a1)
{
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*v1, sel_ams_storefrontForMediaType_, a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_19CFDF578();

  return v4;
}

uint64_t _s9JetEngine7AccountV10forReadingSo9ACAccountCvg_0()
{
  id *v0;
  uint64_t v2;

  objc_msgSend(*v0, sel_copy);
  sub_19CFE004C();
  swift_unknownObjectRelease();
  sub_19CCE5204(0, (unint64_t *)&qword_1EE4370F8);
  swift_dynamicCast();
  return v2;
}

uint64_t sub_19CF9DEBC(uint64_t a1, _QWORD *a2)
{
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[6];

  v4 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a2 + 8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)v14 - v6;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v8 = *v2;
    objc_msgSend(v8, sel_copy);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    v9 = (void *)v14[1];

    v10 = *v2;
    *v2 = v9;

  }
  v11 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v14[2] = v11;
  v12 = v11;
  swift_setAtReferenceWritableKeyPath();

  return swift_release();
}

uint64_t sub_19CF9DFF8(uint64_t a1, uint64_t a2, _QWORD **a3)
{
  _QWORD *v4;

  v4 = *a3;
  swift_retain();
  return sub_19CF9DEBC(a1, v4);
}

uint64_t sub_19CF9E038()
{
  return 8;
}

_QWORD *sub_19CF9E044(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

ValueMetadata *type metadata accessor for EventVersionFieldProvider()
{
  return &type metadata for EventVersionFieldProvider;
}

uint64_t sub_19CF9E070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = a3;
  return swift_task_switch();
}

uint64_t sub_19CF9E088(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v15 = MEMORY[0x1E0DEE9D8];
  sub_19CD58C5C(0, v1, 0);
  v2 = v15;
  result = sub_19CD59C04(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v5);
    v12 = *(_QWORD *)(v15 + 16);
    v11 = *(_QWORD *)(v15 + 24);
    if (v12 >= v11 >> 1)
      sub_19CD58C5C(v11 > 1, v12 + 1, 1);
    *(_QWORD *)(v15 + 16) = v12 + 1;
    *(_QWORD *)(v15 + 8 * v12 + 32) = v10;
    result = sub_19CD59414(v5, v7, v9 & 1, a1);
    v5 = result;
    v7 = v13;
    v9 = v14 & 1;
    if (!--v1)
    {
      sub_19CF9E824(result, v13, v14 & 1);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

BOOL sub_19CF9E1EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  _QWORD v12[4];

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v2 = *(unsigned __int8 *)(v1 + 16);
  if (*(_BYTE *)(v1 + 16))
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
    swift_release();
  }
  else
  {
    *(_BYTE *)(v1 + 16) = 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
    swift_release();
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v3 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v5 = swift_allocObject();
    v6 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
    v12[3] = v6;
    v12[0] = 0xD00000000000001ALL;
    v12[1] = 0x800000019D079540;
    v10 = 0u;
    v11 = 0u;
    v7 = v3;
    sub_19CD40658((uint64_t)v12, (uint64_t)&v10);
    *(_BYTE *)(v5 + 64) = 0;
    v8 = v11;
    *(_OWORD *)(v5 + 32) = v10;
    *(_OWORD *)(v5 + 48) = v8;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)&v10 = v7;
    LOBYTE(v12[0]) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)v12);

    swift_bridgeObjectRelease();
    sub_19CFDF29C();
  }
  return v2 == 0;
}

uint64_t static StartUpPerformanceEvent.Checkpoint.dependencyCreated(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_19CF9E380()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  if (v1)
    sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CF9E3E0()
{
  _QWORD *v0;

  if (*v0)
    sub_19CFE08D4();
  return sub_19CFE08D4();
}

uint64_t sub_19CF9E420()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  if (v1)
    sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CF9E478(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  if (*a1)
    v2 = *a2 == 0;
  else
    v2 = 1;
  if (v2)
    return (*a1 | *a2) == 0;
  else
    return *a1 == *a2;
}

uint64_t StartUpPerformanceEvent.Checkpoint.hash(into:)()
{
  _QWORD *v0;

  if (*v0)
    sub_19CFE08D4();
  return sub_19CFE08D4();
}

BOOL static StartUpPerformanceEvent.Checkpoint.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (*a1)
    return v2 && *a1 == v2;
  return !v2;
}

uint64_t StartUpPerformanceEvent.Checkpoint.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  if (v1)
    sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CF9E570(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (*a1)
    return v2 && *a1 == v2;
  return !v2;
}

_QWORD *static StartUpPerformanceEvent.forLazy(domain:withCheckpoints:)(uint64_t a1, uint64_t a2)
{
  if (!*(_QWORD *)(a2 + 16))
    sub_19CFAECC0((unint64_t)"JetEngine/StartUpPerformanceEvent.swift", 0x27uLL, 2, 0x5CuLL);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_19CCCB7B0(a1, a2);
}

uint64_t StartUpPerformanceEvent.deinit()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v2 = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  swift_release();
  if (v2 == 1)
    sub_19CCC9F88();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t StartUpPerformanceEvent.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v2 = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  swift_release();
  if (v2 == 1)
    sub_19CCC9F88();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for StartUpPerformanceEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for StartUpPerformanceEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF9E76C + 4 * byte_19D068A35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF9E7A0 + 4 * byte_19D068A30[v4]))();
}

uint64_t sub_19CF9E7A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9E7A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF9E7B0);
  return result;
}

uint64_t sub_19CF9E7BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF9E7C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF9E7C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9E7D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_19CF9E7E0()
{
  unint64_t result;

  result = qword_1EE443890;
  if (!qword_1EE443890)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068BC0, &type metadata for StartUpPerformanceEvent.State);
    atomic_store(result, (unint64_t *)&qword_1EE443890);
  }
  return result;
}

uint64_t sub_19CF9E824(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t MetricsFieldInclusionRequest.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  sub_19CDE0324(a1, (uint64_t)v12);
  v4 = v13;
  if (v13)
  {
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if (v8)
    {
      result = sub_19CD3E3F8(a1);
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19CDE036C((uint64_t)v12);
  }
  sub_19CDC5494();
  swift_allocError();
  v10 = MEMORY[0x1E0DEE9D8];
  *v11 = &type metadata for MetricsFieldInclusionRequest;
  v11[1] = v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

uint64_t MetricsFieldInclusionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_19CFE06AC();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsFieldInclusionRequest.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsFieldInclusionRequest.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsFieldInclusionRequest.crossfireReferral.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000019D0795F0;
}

void static MetricsFieldInclusionRequest.impressions.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6973736572706D69;
  a1[1] = 0xEB00000000736E6FLL;
}

void static MetricsFieldInclusionRequest.pageFields.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65694665676170;
  a1[1] = 0xEA00000000007364;
}

void static MetricsFieldInclusionRequest.pageReferrer.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "pageReferrer");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldInclusionRequest.clickLocation.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "clickLocation");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_19CF9EB54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsFieldInclusionRequest.init(deserializing:using:)(a1, a2);
}

ValueMetadata *static TraceMetricsEventEnqueue._attestation.getter()
{
  return &type metadata for _AttestFromJetEngine;
}

id TraceMetricsEventEnqueue.subject.getter()
{
  id *v0;

  return *v0;
}

ValueMetadata *sub_19CF9EB7C()
{
  return &type metadata for _AttestFromJetEngine;
}

ValueMetadata *type metadata accessor for TraceMetricsEventEnqueue()
{
  return &type metadata for TraceMetricsEventEnqueue;
}

Swift::Bool __swiftcall JSValue.hasValue(forProperty:)(Swift::String forProperty)
{
  void *v1;
  void *v2;
  id v3;
  Swift::Bool result;
  unsigned __int8 v5;

  v2 = (void *)sub_19CFDF554();
  v3 = objc_msgSend(v1, sel_valueForProperty_, v2);

  if (v3)
  {
    if ((objc_msgSend(v3, sel_isUndefined) & 1) != 0)
    {

      return 0;
    }
    else
    {
      v5 = objc_msgSend(v3, sel_isNull);

      return v5 ^ 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t JSValue.BOOL.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_isBoolean))
    return (uint64_t)objc_msgSend(v0, sel_toBool);
  else
    return 2;
}

id JSValue.number.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_isNumber))
    return objc_msgSend(v0, sel_toNumber);
  else
    return 0;
}

void JSValue.subscript.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_19CFDF554();
  v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (!v2)
    __break(1u);
}

void JSValue.array.getter()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  id v4;

  v1 = (void *)sub_19CFDF554();
  v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_toUInt32);

    v4 = v0;
    sub_19CF9F684(0, v3, v4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t JSValue.int.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_isNumber))
    return (int)objc_msgSend(v0, sel_toInt32);
  else
    return 0;
}

uint64_t JSValue.uint.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_isNumber))
    return objc_msgSend(v0, sel_toUInt32);
  else
    return 0;
}

uint64_t JSValue.double.getter()
{
  void *v0;
  uint64_t v1;

  if (!objc_msgSend(v0, sel_isNumber))
    return 0;
  objc_msgSend(v0, sel_toDouble);
  return v1;
}

void sub_19CF9EEAC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;

  if (!objc_msgSend(v0, sel_isObject) || (objc_msgSend(v0, sel_isNull) & 1) != 0)
    return;
  v1 = (void *)sub_19CFDF554();
  v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = (void *)sub_19CFDF554();
  v4 = objc_msgSend(v2, sel_valueForProperty_, v3);

  if (!v4)
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (objc_msgSend(v4, sel_isString)
    && (v5 = objc_msgSend(v4, sel_toString)) != 0)
  {
    v6 = v5;
    sub_19CFDF578();

  }
  else
  {

  }
}

id JSValue.subscript.getter(uint64_t a1)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_valueAtIndex_, a1);
  if (!result)
    __break(1u);
  return result;
}

void JSValue.propertyNames.getter()
{
  void *v0;
  id v1;
  void *v2;
  const OpaqueJSContext *v3;
  OpaqueJSPropertyNameArray *v4;
  size_t Count;
  size_t v6;
  size_t v7;
  const __CFAllocator *v8;
  OpaqueJSString *NameAtIndex;
  CFStringRef v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (objc_msgSend(v0, sel_isObject))
  {
    v1 = objc_msgSend(v0, sel_context);
    if (v1)
    {
      v2 = v1;
      v3 = (const OpaqueJSContext *)objc_msgSend(v1, sel_JSGlobalContextRef);

      v4 = JSObjectCopyPropertyNames(v3, (JSObjectRef)objc_msgSend(v0, sel_JSValueRef));
      Count = JSPropertyNameArrayGetCount(v4);
      if ((Count & 0x8000000000000000) == 0)
      {
        v6 = Count;
        if (!Count)
        {
LABEL_14:
          JSPropertyNameArrayRelease(v4);
          return;
        }
        v18 = MEMORY[0x1E0DEE9D8];
        sub_19CD3C8F8(0, Count, 0);
        v7 = 0;
        v8 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
        while (v6 != v7)
        {
          NameAtIndex = JSPropertyNameArrayGetNameAtIndex(v4, v7);
          if (!NameAtIndex)
            goto LABEL_17;
          v10 = JSStringCopyCFString(v8, NameAtIndex);
          if (!v10)
            goto LABEL_18;
          v11 = (__CFString *)v10;
          v12 = sub_19CFDF578();
          v14 = v13;

          v16 = *(_QWORD *)(v18 + 16);
          v15 = *(_QWORD *)(v18 + 24);
          if (v16 >= v15 >> 1)
            sub_19CD3C8F8(v15 > 1, v16 + 1, 1);
          ++v7;
          *(_QWORD *)(v18 + 16) = v16 + 1;
          v17 = v18 + 16 * v16;
          *(_QWORD *)(v17 + 32) = v12;
          *(_QWORD *)(v17 + 40) = v14;
          if (v6 == v7)
            goto LABEL_14;
        }
        __break(1u);
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t JSValue.date.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, sel_isDate, v6))
  {
    v9 = objc_msgSend(v2, sel_toDate);
    if (v9)
    {
      v10 = v9;
      sub_19CFDEF60();

      v11 = sub_19CFDEF84();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
    }
    else
    {
      v14 = sub_19CFDEF84();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    }
    return sub_19CD057DC((uint64_t)v8, a1);
  }
  else
  {
    v12 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

void sub_19CF9F2E0(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(v3, sel_valueForProperty_, v4);

  if (v5)
    *a2 = v5;
  else
    __break(1u);
}

void sub_19CF9F344(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = v2;
  v5 = (id)sub_19CFDF554();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setValue_forProperty_, v4, v5);

}

void JSValue.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  v5 = (void *)sub_19CFDF554();
  v6 = objc_msgSend(v3, sel_valueForProperty_, v5);

  if (v6)
    *a1 = v6;
  else
    __break(1u);
}

void sub_19CF9F438(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v3 = *(void **)(a1 + 24);
  v4 = *(void **)a1;
  swift_bridgeObjectRetain();
  v5 = v4;
  v6 = sub_19CFDF554();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setValue_forProperty_, v5, v6);
  if ((a2 & 1) != 0)
    v7 = (void *)v6;
  else
    v7 = v5;
  if ((a2 & 1) != 0)
    v8 = v5;
  else
    v8 = (id)v6;
  v9 = v8;

}

id sub_19CF9F4D0@<X0>(id *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_valueAtIndex_, *a2);
  if (result)
    *a3 = result;
  else
    __break(1u);
  return result;
}

void JSValue.subscript.setter(void *a1, uint64_t a2)
{
  void *v2;

  objc_msgSend(v2, sel_setValue_atIndex_, a1, a2);

}

void (*JSValue.subscript.modify(void (**a1)(id *a1), void (*a2)(id *a1)))(id *a1)
{
  void (*v2)(id *);
  void (*result)(id *);

  a1[1] = a2;
  a1[2] = v2;
  result = (void (*)(id *))objc_msgSend(v2, sel_valueAtIndex_, a2);
  if (result)
  {
    *a1 = result;
    return sub_19CF9F5A0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_19CF9F5A0(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[2], sel_setValue_atIndex_);

}

uint64_t JSValue.url.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v6;

  if (objc_msgSend(v1, sel_isString)
    && (v3 = objc_msgSend(v1, sel_toString)) != 0)
  {
    v4 = v3;
    sub_19CFDF578();

    sub_19CFDEDA4();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

id sub_19CF9F684(id result, unint64_t a2, void *a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t i;
  uint64_t v9;

  v5 = (unint64_t)result;
  v6 = a2 - (_QWORD)result;
  if (a2 >= (unint64_t)result)
  {
    if ((uint64_t)(a2 - (_QWORD)result) < 0)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
  }
  else
  {
    if ((uint64_t)((uint64_t)result - a2) < 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v6 = a2 - (_QWORD)result;
  }
  result = (id)MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    result = (id)sub_19CFE0238();
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (a2 >= v5)
        v7 = a2 - v5;
      else
        v7 = 0;
      for (i = v5; ; ++i)
      {
        result = objc_msgSend(a3, sel_valueAtIndex_, i);
        if (!result)
          break;
        sub_19CFE0214();
        sub_19CFE0244();
        sub_19CFE0250();
        result = (id)sub_19CFE0220();
        if (a2 < v5)
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        if (!v7)
          goto LABEL_18;
        --v7;
        if (!--v6)
          return (id)v9;
      }
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_19CF9F7C8()
{
  return 0;
}

id sub_19CF9F7DC(_QWORD *a1, id *a2, _QWORD *a3)
{
  return objc_msgSend(*a2, sel_setValue_atIndex_, *a1, *a3);
}

uint64_t sub_19CF9F7F4()
{
  return 0;
}

JetEngine::MetricsEventType __swiftcall MetricsEventType.init(rawValue:)(JetEngine::MetricsEventType rawValue)
{
  JetEngine::MetricsEventType *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t MetricsEventType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_19CFE06AC();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsEventType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsEventType.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsEventType.account.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x746E756F636361;
  a1[1] = 0xE700000000000000;
}

void static MetricsEventType.click.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6B63696C63;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.demographic.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x706172676F6D6564;
  a1[1] = 0xEB00000000636968;
}

void static MetricsEventType.dialog.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x676F6C616964;
  a1[1] = 0xE600000000000000;
}

void static MetricsEventType.enter.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E65;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.exit.getter(_QWORD *a1@<X8>)
{
  *a1 = 1953069157;
  a1[1] = 0xE400000000000000;
}

void static MetricsEventType.impressions.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6973736572706D69;
  a1[1] = 0xEB00000000736E6FLL;
}

void static MetricsEventType.media.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x616964656DLL;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.page.getter(_QWORD *a1@<X8>)
{
  *a1 = 1701273968;
  a1[1] = 0xE400000000000000;
}

void static MetricsEventType.pageChange.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6E61684365676170;
  a1[1] = 0xEA00000000006567;
}

void static MetricsEventType.search.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void static MetricsEventType.playActivity.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "playActivity");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsEventType.seekActivity.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "seekActivity");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsEventType.loadURL.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6C725564616F6CLL;
  a1[1] = 0xE700000000000000;
}

void static MetricsEventType.pageRender.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x646E655265676170;
  a1[1] = 0xEA00000000007265;
}

void static MetricsEventType.unknown.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_19CF9FB50(uint64_t a1)
{
  return sub_19CF9FB74(a1, &qword_1ECEB12B0, (uint64_t)&qword_1ECEB52C0, &qword_1EE465CB0);
}

uint64_t sub_19CF9FB74(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (qword_1ECEB1D10 != -1)
    swift_once();
  v6 = qword_1ECEB52F0;
  v7 = *a2;
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  v8 = swift_bridgeObjectRetain();
  result = sub_19CCD2064(v8, v6);
  *a4 = result;
  return result;
}

BOOL static JetPackAssetCacheStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackAssetCacheStatus.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetPackAssetCacheStatus.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CF9FC9C()
{
  unint64_t result;

  result = qword_1EE4438A0;
  if (!qword_1EE4438A0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackAssetCacheStatus, &type metadata for JetPackAssetCacheStatus);
    atomic_store(result, (unint64_t *)&qword_1EE4438A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JetPackAssetCacheStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CF9FD2C + 4 * byte_19D068E85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CF9FD60 + 4 * asc_19D068E80[v4]))();
}

uint64_t sub_19CF9FD60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9FD68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF9FD70);
  return result;
}

uint64_t sub_19CF9FD7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF9FD84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CF9FD88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF9FD90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetCacheStatus()
{
  return &type metadata for JetPackAssetCacheStatus;
}

uint64_t dispatch thunk of JetPackAssetCachePolicy.status(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for JetPackAssetStandardCachePolicy()
{
  return &type metadata for JetPackAssetStandardCachePolicy;
}

Swift::Bool __swiftcall jet_debug_tooling_os_variant_has_internal_content(_:)(Swift::String a1)
{
  unsigned __int8 *v1;
  os_unfair_lock_s *v2;
  int v3;
  char has_internal_content;

  if (qword_1ECEB1958 != -1)
    swift_once();
  v1 = (unsigned __int8 *)off_1ECEB1948;
  v2 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = v1[16];
  os_unfair_lock_unlock(v2);
  swift_release();
  if (v3 != 2)
    return v3 & 1;
  sub_19CFDF608();
  has_internal_content = os_variant_has_internal_content();
  swift_release();
  return has_internal_content;
}

void sub_19CF9FE84()
{
  NSString *v0;
  Class v1;
  BOOL v2;

  v0 = (NSString *)sub_19CFDF554();
  v1 = NSClassFromString(v0);

  if (v1)
    v2 = swift_getObjCClassMetadata() != 0;
  else
    v2 = 0;
  byte_1EE465D91 = v2;
}

ValueMetadata *type metadata accessor for JetDebugTooling()
{
  return &type metadata for JetDebugTooling;
}

id sub_19CF9FF5C(void *a1, void *a2, id a3)
{
  id v5;
  char countAndFlagsBits;
  void *v7;
  id v8;
  uint64_t v9;
  id result;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;

  v5 = a2;
  sub_19CE7D128(v5, (char *)&v21);
  countAndFlagsBits = v21._countAndFlagsBits;
  if (LOBYTE(v21._countAndFlagsBits) == 2)
  {
    sub_19CDC98D8();
    swift_allocError();
    a3 = v7;
    v8 = v5;
    v9 = (uint64_t)a3;
LABEL_8:
    JSError.init(badValue:expected:)(v8, v9);
    swift_willThrow();
    return a3;
  }
  if ((objc_msgSend(a3, sel_isString) & 1) == 0)
  {
LABEL_7:
    sub_19CDC98D8();
    swift_allocError();
    v20 = v19;
    v8 = a3;
    v9 = v20;
    goto LABEL_8;
  }
  LOBYTE(v21._countAndFlagsBits) = countAndFlagsBits & 1;
  result = objc_msgSend(a3, sel_toString, v21._countAndFlagsBits);
  if (result)
  {
    v11 = result;
    v12 = sub_19CFDF578();
    v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    v16 = CryptoAlgorithm.makeDigest(fromContentsOf:)(v15);
    swift_bridgeObjectRelease();
    v21 = v16;
    v17 = a1;
    v18 = sub_19CFE0808();
    a3 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v18, v17);
    swift_unknownObjectRelease();

    if (a3)
      return a3;
    __break(1u);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CFA0234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _BYTE v6[40];
  uint64_t v7;

  sub_19CD3E448(a1, (uint64_t)v6);
  v7 = a2;
  swift_bridgeObjectRetain();
  return Models.AlertAction.Button.init(deserializing:using:)((uint64_t)v6, &v7, a3);
}

uint64_t static Models.AlertAction.ButtonRole.cancel.getter()
{
  return 0x6C65636E6163;
}

uint64_t static Models.AlertAction.ButtonRole.destructive.getter()
{
  return 0x7463757274736564;
}

uint64_t Models.AlertAction.ButtonRole.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t Models.AlertAction.Button.init(title:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  result = sub_19CF37BC8(a5, (uint64_t)(a6 + 4));
  a6[2] = a3;
  a6[3] = a4;
  return result;
}

uint64_t Models.AlertAction.Button.init(title:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  *a4 = a1;
  a4[1] = a2;
  result = sub_19CF37BC8(a3, (uint64_t)(a4 + 4));
  a4[2] = 0;
  a4[3] = 0;
  return result;
}

uint64_t Models.AlertAction.Button.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;

  v5 = *a2;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v20);
  sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, &qword_1ECEB1328);
  v6 = v18;
  if (!v18)
  {
    sub_19CCECFE4((uint64_t)v17, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v20);
    goto LABEL_8;
  }
  v7 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  sub_19CD3E3F8((uint64_t)v20);
  if (!v10)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v15 = xmmword_19D068FC0;
    *(_QWORD *)(v15 + 16) = 0x20000001E3DD89E8uLL;
    *(_QWORD *)(v15 + 24) = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  *a3 = v8;
  a3[1] = v10;
  JSONObject.subscript.getter(0x6E6F69746361, 0xE600000000000000, (uint64_t)v17);
  v21 = v5;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v17, &v21, (uint64_t)v20);
  sub_19CD3E3F8((uint64_t)v17);
  swift_bridgeObjectRelease();
  sub_19CF37BC8((uint64_t)v20, (uint64_t)(a3 + 4));
  JSONObject.subscript.getter(1701605234, 0xE400000000000000, (uint64_t)v20);
  sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, &qword_1ECEB1328);
  v11 = v18;
  if (v18)
  {
    v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    if (!v14)
      v11 = 0;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v17, &qword_1ECEB1328);
    v14 = 0;
  }
  sub_19CD3E3F8(a1);
  result = sub_19CD3E3F8((uint64_t)v20);
  a3[2] = v11;
  a3[3] = v14;
  return result;
}

uint64_t Models.AlertAction.Button.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.Button.role.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.Button.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCF8C5C(v1 + 32, a1, qword_1EE439B38);
}

uint64_t sub_19CFA0600@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return Models.AlertAction.Button.init(deserializing:using:)(a1, a2, a3);
}

uint64_t Models.AlertAction.Severity.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t Models.AlertAction.Severity.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C61636974697263;
  else
    return 0x74616D726F666E69;
}

uint64_t sub_19CFA06BC(char *a1, char *a2)
{
  return sub_19CE8094C(*a1, *a2);
}

uint64_t sub_19CFA06C8()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CFA0754()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CFA07BC()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CFA0844@<X0>(char *a1@<X8>)
{
  return Models.AlertAction.Severity.init(rawValue:)(a1);
}

void sub_19CFA0850(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x74616D726F666E69;
  if (*v1)
    v2 = 0x6C61636974697263;
  v3 = 0xED00006C616E6F69;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19CFA089C()
{
  sub_19CFA3238();
  return sub_19CFDF83C();
}

uint64_t sub_19CFA08F8()
{
  sub_19CFA3238();
  return sub_19CFDF80C();
}

__n128 Models.AlertAction.init(actionMetrics:severity:icon:title:message:buttons:)@<Q0>(_OWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v9;
  __n128 result;
  __int128 v11;
  uint64_t v12;

  *(_OWORD *)a9 = *a1;
  v9 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a9 + 72) = v9;
  *(_OWORD *)(a9 + 88) = *(_OWORD *)(a3 + 64);
  result = *(__n128 *)a3;
  v11 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 24) = *(_OWORD *)a3;
  *(_BYTE *)(a9 + 16) = *a2;
  v12 = *(_QWORD *)(a3 + 80);
  *(_OWORD *)(a9 + 40) = v11;
  *(_QWORD *)(a9 + 104) = v12;
  *(_QWORD *)(a9 + 112) = a4;
  *(_QWORD *)(a9 + 120) = a5;
  *(_QWORD *)(a9 + 128) = a6;
  *(_QWORD *)(a9 + 136) = a7;
  *(_QWORD *)(a9 + 144) = a8;
  return result;
}

uint64_t Models.AlertAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[5];
  uint64_t v48;
  uint64_t v49[2];
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;

  v6 = *a2;
  JSONObject.subscript.getter(0x736E6F74747562, 0xE700000000000000, (uint64_t)v47);
  sub_19CCF8C5C((uint64_t)v47, (uint64_t)v50, &qword_1ECEB1328);
  v7 = v51;
  if (!v51)
  {
    sub_19CCECFE4((uint64_t)v50, &qword_1ECEB1328);
    v53 = 0u;
    v54 = 0u;
    v55 = 0;
    sub_19CD3E3F8((uint64_t)v47);
    goto LABEL_6;
  }
  v8 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v53, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
  v9 = *((_QWORD *)&v54 + 1);
  sub_19CD3E3F8((uint64_t)v47);
  if (!v9)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v53, &qword_1EE43D068);
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v10 = xmmword_19D068FD0;
    *(_QWORD *)(v10 + 16) = 0x20000001E3DD8B78uLL;
    *(_QWORD *)(v10 + 24) = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  v56[0] = v53;
  v56[1] = v54;
  v57 = v55;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v47);
  *(_QWORD *)&v53 = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)v47, (uint64_t *)&v53, v49);
  if (v3)
  {
    swift_bridgeObjectRelease();
    sub_19CD3E3F8(a1);
    return sub_19CE07F20((uint64_t)v56);
  }
  v11 = v49[0];
  v58 = v49[1];
  JSONObject.subscript.getter(0x7974697265766573, 0xE800000000000000, (uint64_t)v47);
  sub_19CCF8C5C((uint64_t)v47, (uint64_t)&v53, &qword_1ECEB1328);
  v12 = *((_QWORD *)&v54 + 1);
  if (*((_QWORD *)&v54 + 1))
  {
    v13 = v55;
    __swift_project_boxed_opaque_existential_1(&v53, *((uint64_t *)&v54 + 1));
    (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    v15 = v14;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
    if (v15)
    {
      v16 = sub_19CFE0424();
      swift_bridgeObjectRelease();
      if (v16 == 1)
        v17 = 1;
      else
        v17 = 2;
      if (v16)
        v18 = v17;
      else
        v18 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB1328);
  }
  v18 = 2;
LABEL_17:
  sub_19CD3E3F8((uint64_t)v47);
  JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)&v53);
  v50[0] = v6;
  swift_bridgeObjectRetain();
  MediaArtwork.init(deserializing:using:)((uint64_t)&v53, v50, (uint64_t)v47);
  v40 = v18;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)&v53);
  sub_19CCF8C5C((uint64_t)&v53, (uint64_t)v50, &qword_1ECEB1328);
  v19 = v51;
  if (v51)
  {
    v20 = v52;
    __swift_project_boxed_opaque_existential_1(v50, v51);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    v42 = v21;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v50, &qword_1ECEB1328);
    v39 = 0;
    v42 = 0;
  }
  sub_19CD3E3F8((uint64_t)&v53);
  JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000, (uint64_t)v50);
  sub_19CCF8C5C((uint64_t)v50, (uint64_t)v44, &qword_1ECEB1328);
  v22 = v45;
  v43 = v11;
  if (v45)
  {
    v23 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    v41 = v24;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v44, &qword_1ECEB1328);
    v38 = 0;
    v41 = 0;
  }
  sub_19CD3E3F8((uint64_t)v50);
  v25 = sub_19CEC3718((uint64_t)v56, (uint64_t)v44);
  MEMORY[0x1E0C80A78](v25, v26);
  v37[2] = v6;
  v27 = v45;
  v28 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  v30 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), _QWORD *, ValueMetadata *, uint64_t, uint64_t))(v28 + 48))(sub_19CFA0F04, v37, &type metadata for Models.AlertAction.Button, v27, v28);
  sub_19CE07F20((uint64_t)v44);
  swift_bridgeObjectRelease();
  sub_19CD3E3F8(a1);
  result = sub_19CE07F20((uint64_t)v56);
  v31 = v47[3];
  *(_OWORD *)(a3 + 56) = v47[2];
  *(_OWORD *)(a3 + 72) = v31;
  *(_OWORD *)(a3 + 88) = v47[4];
  v32 = v47[1];
  *(_OWORD *)(a3 + 24) = v47[0];
  v33 = v58;
  *(_QWORD *)a3 = v43;
  *(_QWORD *)(a3 + 8) = v33;
  *(_BYTE *)(a3 + 16) = v40;
  v34 = v48;
  *(_OWORD *)(a3 + 40) = v32;
  v35 = v39;
  *(_QWORD *)(a3 + 104) = v34;
  *(_QWORD *)(a3 + 112) = v35;
  v36 = v38;
  *(_QWORD *)(a3 + 120) = v42;
  *(_QWORD *)(a3 + 128) = v36;
  *(_QWORD *)(a3 + 136) = v41;
  *(_QWORD *)(a3 + 144) = v30;
  return result;
}

uint64_t sub_19CFA0F04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19CFA0234(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t Models.AlertAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void Models.AlertAction.severity.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t Models.AlertAction.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCF8C5C(v1 + 24, a1, &qword_1EE442C98);
}

uint64_t Models.AlertAction.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.buttons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CFA0FD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CFA1010 + 4 * byte_19D068FE0[*v0]))(0x654D6E6F69746361, 0xED00007363697274);
}

uint64_t sub_19CFA1010()
{
  return 0x7974697265766573;
}

uint64_t sub_19CFA1028()
{
  return 1852793705;
}

uint64_t sub_19CFA1038()
{
  return 0x656C746974;
}

uint64_t sub_19CFA104C()
{
  return 0x6567617373656DLL;
}

uint64_t sub_19CFA1064()
{
  return 0x736E6F74747562;
}

uint64_t sub_19CFA107C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CFA2DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CFA10A0()
{
  sub_19CFA1BA8();
  return sub_19CFE0A48();
}

uint64_t sub_19CFA10C8()
{
  sub_19CFA1BA8();
  return sub_19CFE0A54();
}

uint64_t sub_19CFA10F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.AlertAction.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19CFA1104()
{
  sub_19CFA31F4();
  return sub_19CFDF83C();
}

uint64_t sub_19CFA1160()
{
  sub_19CFA31F4();
  return sub_19CFDF80C();
}

uint64_t sub_19CFA11AC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F69746361;
  if (*v0 != 1)
    v1 = 1701605234;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_19CFA11F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CFA3084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CFA121C()
{
  sub_19CFA1534();
  return sub_19CFE0A48();
}

uint64_t sub_19CFA1244()
{
  sub_19CFA1534();
  return sub_19CFE0A54();
}

uint64_t Models.AlertAction.Button.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _UNKNOWN **v17;
  _UNKNOWN **v18;
  ValueMetadata *v19;
  _UNKNOWN **v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  uint64_t v26;
  char v27;

  v22 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4438A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_19CFA1534();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v21 = v9;
  LOBYTE(v23) = 0;
  v10 = v4;
  v25[0] = sub_19CFE0490();
  v25[1] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4438B8);
  v27 = 2;
  sub_19CD09560(&qword_1EE4438C0, &qword_1EE4438B8, sub_19CFA1578, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0484();
  v14 = v23;
  v13 = v24;
  if (v24 == 1)
  {
    v14 = 0;
    v13 = 0;
  }
  v25[2] = v14;
  v25[3] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_19CFE09DC();
  v16 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v15);
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v16)
    v19 = (ValueMetadata *)v16;
  else
    v19 = &type metadata for EmptyActionKindTable;
  if (v16)
    v20 = v18;
  else
    v20 = &off_1E3DD1128;
  v27 = 1;
  decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v19, (uint64_t)v20, (uint64_t)&v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v10);
  sub_19CF37BC8((uint64_t)&v23, (uint64_t)&v26);
  sub_19CFA15E0(v25, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_19CFA1614((uint64_t)v25);
}

unint64_t sub_19CFA1534()
{
  unint64_t result;

  result = qword_1EE4438B0;
  if (!qword_1EE4438B0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0694C8, &_s11AlertActionV6ButtonV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4438B0);
  }
  return result;
}

uint64_t sub_19CFA1578()
{
  return sub_19CD09560(&qword_1EE4438C8, &qword_1EE4438D0, (uint64_t (*)(void))sub_19CFA159C, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_19CFA159C()
{
  unint64_t result;

  result = qword_1EE4438D8;
  if (!qword_1EE4438D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.ButtonRole, &type metadata for Models.AlertAction.ButtonRole);
    atomic_store(result, (unint64_t *)&qword_1EE4438D8);
  }
  return result;
}

uint64_t sub_19CFA15E0(_QWORD *a1, uint64_t a2)
{
  _s11AlertActionV6ButtonVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CFA1614(uint64_t a1)
{
  _s11AlertActionV6ButtonVwxx(a1);
  return a1;
}

uint64_t Models.AlertAction.Button.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _UNKNOWN **v13;
  _UNKNOWN **v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4438E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_19CFA1534();
  sub_19CFE0A24();
  LOBYTE(v19) = 0;
  v9 = v18;
  sub_19CFE0538();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v17 = v8;
  v18 = v4;
  v19 = *(_OWORD *)(v1 + 16);
  v20 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4438D0);
  sub_19CD09560(&qword_1EE4438E8, &qword_1EE4438D0, (uint64_t (*)(void))sub_19CFA1870, MEMORY[0x1E0DEE988]);
  sub_19CFE0568();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_19CFE09DC();
  v12 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (v12)
    v15 = (ValueMetadata *)v12;
  else
    v15 = &type metadata for EmptyActionKindTable;
  if (v12)
    v16 = v14;
  else
    v16 = &off_1E3DD1128;
  LOBYTE(v19) = 1;
  encodeActionModel<A, B>(_:using:container:forKey:)(v1 + 32, (uint64_t)v15, (uint64_t)v7, (uint64_t)&v19, (uint64_t)v15, (uint64_t)&_s11AlertActionV6ButtonV10CodingKeysON, (uint64_t)v16);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v7, v3);
}

unint64_t sub_19CFA1870()
{
  unint64_t result;

  result = qword_1EE4438F0;
  if (!qword_1EE4438F0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.ButtonRole, &type metadata for Models.AlertAction.ButtonRole);
    atomic_store(result, (unint64_t *)&qword_1EE4438F0);
  }
  return result;
}

uint64_t sub_19CFA18B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.AlertAction.Button.init(from:)(a1, a2);
}

uint64_t sub_19CFA18C8(_QWORD *a1)
{
  return Models.AlertAction.Button.encode(to:)(a1);
}

uint64_t Models.AlertAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4438F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFA1BA8();
  sub_19CFE0A24();
  v13 = *v3;
  v12 = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (!v2)
  {
    LOBYTE(v13) = *((_BYTE *)v3 + 16);
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443908);
    sub_19CD09560(&qword_1EE443910, &qword_1EE443908, sub_19CFA1BEC, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
    LOBYTE(v13) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442C98);
    sub_19CD20AFC(&qword_1EE443930, &qword_1EE442C98, (uint64_t)&protocol witness table for MediaArtwork, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
    v13 = v3[7];
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
    sub_19CF436D0();
    sub_19CFE0568();
    v13 = v3[8];
    v12 = 4;
    sub_19CFE0568();
    *(_QWORD *)&v13 = *((_QWORD *)v3 + 18);
    v12 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443938);
    sub_19CD09560(&qword_1EE443940, &qword_1EE443938, sub_19CFA1C54, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_19CFA1BA8()
{
  unint64_t result;

  result = qword_1EE443900;
  if (!qword_1EE443900)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069478, &_s11AlertActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE443900);
  }
  return result;
}

uint64_t sub_19CFA1BEC()
{
  return sub_19CD09560(&qword_1EE443918, &qword_1EE443920, (uint64_t (*)(void))sub_19CFA1C10, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_19CFA1C10()
{
  unint64_t result;

  result = qword_1EE443928;
  if (!qword_1EE443928)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Severity, &type metadata for Models.AlertAction.Severity);
    atomic_store(result, (unint64_t *)&qword_1EE443928);
  }
  return result;
}

uint64_t sub_19CFA1C54()
{
  return sub_19CD09560(&qword_1EE443948, &qword_1EE443950, (uint64_t (*)(void))sub_19CFA1C78, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CFA1C78()
{
  unint64_t result;

  result = qword_1EE443958;
  if (!qword_1EE443958)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Button, &type metadata for Models.AlertAction.Button);
    atomic_store(result, (unint64_t *)&qword_1EE443958);
  }
  return result;
}

uint64_t Models.AlertAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _OWORD v12[5];
  uint64_t v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443960);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 2;
  v23 = 0u;
  v24 = 0u;
  v10 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_19CFA1BA8();
  sub_19CFE09E8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
    sub_19CE8C13C();
    sub_19CFE04B4();
    v15 = v12[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443908);
    v14 = 1;
    sub_19CD09560(&qword_1EE443968, &qword_1EE443908, sub_19CFA20AC, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    v16 = v12[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442C98);
    v14 = 2;
    sub_19CD20AFC(&qword_1EE442CA0, &qword_1EE442C98, (uint64_t)&protocol witness table for MediaArtwork, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    v19 = v12[2];
    v20 = v12[3];
    v21 = v12[4];
    v22 = v13;
    v17 = v12[0];
    v18 = v12[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442650);
    v14 = 3;
    sub_19CF43860();
    sub_19CFE04B4();
    v23 = v12[0];
    v14 = 4;
    sub_19CFE04B4();
    v24 = v12[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443938);
    v14 = 5;
    sub_19CD09560(&qword_1EE443980, &qword_1EE443938, sub_19CFA2114, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v25 = *(_QWORD *)&v12[0];
    sub_19CFA217C((uint64_t)&v15, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    return sub_19CFA21B0((uint64_t)&v15);
  }
}

uint64_t sub_19CFA20AC()
{
  return sub_19CD09560(&qword_1EE443970, &qword_1EE443920, (uint64_t (*)(void))sub_19CFA20D0, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_19CFA20D0()
{
  unint64_t result;

  result = qword_1EE443978;
  if (!qword_1EE443978)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Severity, &type metadata for Models.AlertAction.Severity);
    atomic_store(result, (unint64_t *)&qword_1EE443978);
  }
  return result;
}

uint64_t sub_19CFA2114()
{
  return sub_19CD09560(&qword_1EE443988, &qword_1EE443950, (uint64_t (*)(void))sub_19CFA2138, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CFA2138()
{
  unint64_t result;

  result = qword_1EE443990;
  if (!qword_1EE443990)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Button, &type metadata for Models.AlertAction.Button);
    atomic_store(result, (unint64_t *)&qword_1EE443990);
  }
  return result;
}

uint64_t sub_19CFA217C(uint64_t a1, uint64_t a2)
{
  _s11AlertActionVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CFA21B0(uint64_t a1)
{
  _s11AlertActionVwxx(a1);
  return a1;
}

uint64_t sub_19CFA21DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.AlertAction.init(from:)(a1, a2);
}

uint64_t sub_19CFA21F0(_QWORD *a1)
{
  return Models.AlertAction.encode(to:)(a1);
}

__n128 Models.AlertAction.init(actionMetrics:title:message:buttons:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  __n128 result;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;

  v16 = &_s12_EmptySourceVN;
  v17 = &off_1EE4379C0;
  MediaArtwork.init(_:)(&v15, (uint64_t)&a7[1].n128_i64[1]);
  result = *a1;
  *a7 = *a1;
  a7[1].n128_u8[0] = 2;
  a7[7].n128_u64[0] = a2;
  a7[7].n128_u64[1] = a3;
  a7[8].n128_u64[0] = a4;
  a7[8].n128_u64[1] = a5;
  a7[9].n128_u64[0] = a6;
  return result;
}

unint64_t sub_19CFA2298()
{
  unint64_t result;

  result = qword_1EE443998;
  if (!qword_1EE443998)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.ButtonRole, &type metadata for Models.AlertAction.ButtonRole);
    atomic_store(result, (unint64_t *)&qword_1EE443998);
  }
  return result;
}

unint64_t sub_19CFA22E0()
{
  unint64_t result;

  result = qword_1EE4439A0;
  if (!qword_1EE4439A0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Severity, &type metadata for Models.AlertAction.Severity);
    atomic_store(result, (unint64_t *)&qword_1EE4439A0);
  }
  return result;
}

uint64_t sub_19CFA2324@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

_BYTE *sub_19CFA2330(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = *result;
  return result;
}

uint64_t sub_19CFA233C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCF8C5C(a1 + 24, a2, &qword_1EE442C98);
}

uint64_t sub_19CFA2360(uint64_t a1, uint64_t a2)
{
  _BYTE v4[88];

  sub_19CF00C18(a1, (uint64_t)v4);
  return sub_19CFA31B8((uint64_t)v4, a2 + 24);
}

uint64_t sub_19CFA2398@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CFA23A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 112) = v4;
  *(_QWORD *)(a2 + 120) = v3;
  return result;
}

uint64_t sub_19CFA23E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 136);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CFA23F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 128) = v4;
  *(_QWORD *)(a2 + 136) = v3;
  return result;
}

uint64_t sub_19CFA2430@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CFA243C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 144) = v3;
  return result;
}

uint64_t _s11AlertActionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11AlertActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v8 = a2 + 72;
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v6;
  v13 = v7;
  v11(a1 + 72, v8, v10);
  v14 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  v15 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v15;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11AlertActionVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(void **)(a2 + 48);
  v9 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11AlertActionVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.AlertAction()
{
  return &type metadata for Models.AlertAction;
}

ValueMetadata *type metadata accessor for Models.AlertAction.ButtonRole()
{
  return &type metadata for Models.AlertAction.ButtonRole;
}

uint64_t _s11AlertActionV6ButtonVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  return result;
}

uint64_t _s11AlertActionV6ButtonVwcp(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 4;
  v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *((_OWORD *)v6 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = v6[4];
  }
  return a1;
}

uint64_t _s11AlertActionV6ButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 56) = v4;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    v6 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t _s11AlertActionV6ButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for Models.AlertAction.Button()
{
  return &type metadata for Models.AlertAction.Button;
}

uint64_t _s11AlertActionV8SeverityOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CFA2A30 + 4 * byte_19D068FEB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CFA2A64 + 4 * byte_19D068FE6[v4]))();
}

uint64_t sub_19CFA2A64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2A6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFA2A74);
  return result;
}

uint64_t sub_19CFA2A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFA2A88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CFA2A8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2A94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Models.AlertAction.Severity()
{
  return &type metadata for Models.AlertAction.Severity;
}

uint64_t _s11AlertActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CFA2AFC + 4 * byte_19D068FF5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CFA2B30 + 4 * byte_19D068FF0[v4]))();
}

uint64_t sub_19CFA2B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFA2B40);
  return result;
}

uint64_t sub_19CFA2B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFA2B54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CFA2B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11AlertActionV10CodingKeysOMa()
{
  return &_s11AlertActionV10CodingKeysON;
}

uint64_t _s11AlertActionV6ButtonV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CFA2BC8 + 4 * byte_19D068FFF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CFA2BFC + 4 * byte_19D068FFA[v4]))();
}

uint64_t sub_19CFA2BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFA2C0CLL);
  return result;
}

uint64_t sub_19CFA2C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFA2C20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CFA2C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFA2C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11AlertActionV6ButtonV10CodingKeysOMa()
{
  return &_s11AlertActionV6ButtonV10CodingKeysON;
}

unint64_t sub_19CFA2C4C()
{
  unint64_t result;

  result = qword_1EE4439A8;
  if (!qword_1EE4439A8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069398, &_s11AlertActionV6ButtonV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439A8);
  }
  return result;
}

unint64_t sub_19CFA2C94()
{
  unint64_t result;

  result = qword_1EE4439B0;
  if (!qword_1EE4439B0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069450, &_s11AlertActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439B0);
  }
  return result;
}

unint64_t sub_19CFA2CDC()
{
  unint64_t result;

  result = qword_1EE4439B8;
  if (!qword_1EE4439B8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0693C0, &_s11AlertActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439B8);
  }
  return result;
}

unint64_t sub_19CFA2D24()
{
  unint64_t result;

  result = qword_1EE4439C0;
  if (!qword_1EE4439C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0693E8, &_s11AlertActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439C0);
  }
  return result;
}

unint64_t sub_19CFA2D6C()
{
  unint64_t result;

  result = qword_1EE4439C8;
  if (!qword_1EE4439C8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069308, &_s11AlertActionV6ButtonV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439C8);
  }
  return result;
}

unint64_t sub_19CFA2DB4()
{
  unint64_t result;

  result = qword_1EE4439D0;
  if (!qword_1EE4439D0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069330, &_s11AlertActionV6ButtonV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE4439D0);
  }
  return result;
}

uint64_t sub_19CFA2DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697265766573 && a2 == 0xE800000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_19CFA3084(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_19CFA31B8(uint64_t a1, uint64_t a2)
{
  assignWithTake for MediaArtwork(a2, a1);
  return a2;
}

unint64_t sub_19CFA31F4()
{
  unint64_t result;

  result = qword_1EE4439D8;
  if (!qword_1EE4439D8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.ButtonRole, &type metadata for Models.AlertAction.ButtonRole);
    atomic_store(result, (unint64_t *)&qword_1EE4439D8);
  }
  return result;
}

unint64_t sub_19CFA3238()
{
  unint64_t result;

  result = qword_1EE4439E0;
  if (!qword_1EE4439E0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.AlertAction.Severity, &type metadata for Models.AlertAction.Severity);
    atomic_store(result, (unint64_t *)&qword_1EE4439E0);
  }
  return result;
}

uint64_t JPStream.makeStream()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  sub_19CFACBE0((unint64_t)"JetEngine/JetPackStreamSource.swift", 0x23uLL, 2, 0x2EuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  *(_BYTE *)(v1 + 32) = 1;
  v3 = v0;
  return v1;
}

uint64_t sub_19CFA32F8()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *v0;
  sub_19CFACBE0((unint64_t)"JetEngine/JetPackStreamSource.swift", 0x23uLL, 2, 0x2EuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F90);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 32) = 1;
  v4 = v1;
  return v2;
}

uint64_t dispatch thunk of JetPackStreamSource.makeStream()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void MetricsError.errorDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_19CFA33B4()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFDF698();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CFA361C()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)&loc_19CFA3608 + 4 * byte_19D0695AA[v0]))(0xD000000000000031, 0x800000019D079890);
}

void sub_19CFA3654()
{
  JUMPOUT(0x19CFA3608);
}

unint64_t sub_19CFA369C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE4439E8;
  if (!qword_1EE4439E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43E710);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEB3D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE4439E8);
  }
  return result;
}

uint64_t sub_19CFA36F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for MetricsError(uint64_t a1)
{
  return sub_19CFA373C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_19CFA373C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s9JetEngine12MetricsErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CFA36F4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MetricsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CFA36F4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CFA373C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MetricsError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CFA373C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CFA38E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_19CFA38F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsError()
{
  return &type metadata for MetricsError;
}

void sub_19CFA3920()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_19CFDF578();

    v2 = sub_19CFDF5F0();
    v4 = v3;
    swift_bridgeObjectRelease();
    if (qword_1EE439CE8 != -1)
      swift_once();
    v5 = sub_19CD19780(v2, v4, qword_1EE4373F0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  byte_1EE439CF0 = v5 & 1;
}

uint64_t static NSBundle.isMusic.getter()
{
  return sub_19CFA3AB4(&qword_1EE439D00, (unsigned __int8 *)&byte_1EE439CF0);
}

uint64_t sub_19CFA3A2C()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_19CE088B4((uint64_t)&unk_1E3DDBB10);
  result = swift_arrayDestroy();
  qword_1EE4373F0 = v0;
  return result;
}

void sub_19CFA3A74(uint64_t a1)
{
  sub_19CFA3B58(a1, &qword_1EE43D768, &qword_1EE4439F8, byte_1EE4439F0);
}

uint64_t static NSBundle.isAppStoreBundle.getter()
{
  return sub_19CFA3AB4(&qword_1EE43D760, byte_1EE4439F0);
}

uint64_t sub_19CFA3AB4(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_19CFA3AEC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_19CE088B4((uint64_t)&unk_1E3DDBB70);
  result = swift_arrayDestroy();
  qword_1EE4439F8 = v0;
  return result;
}

void sub_19CFA3B34(uint64_t a1)
{
  sub_19CFA3B58(a1, &qword_1EE43D778, &qword_1EE443A08, byte_1EE443A00);
}

void sub_19CFA3B58(uint64_t a1, _QWORD *a2, uint64_t *a3, _BYTE *a4)
{
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (*a2 != -1)
    swift_once();
  v6 = *a3;
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    v9 = sub_19CFDF578();
    v11 = v10;

    v12 = sub_19CD19780(v9, v11, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  *a4 = v12 & 1;
}

uint64_t static NSBundle.isJetTestAppBundle.getter()
{
  return sub_19CFA3AB4(&qword_1EE43D770, byte_1EE443A00);
}

uint64_t sub_19CFA3C48()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_19CE088B4((uint64_t)&unk_1E3DDBBB0);
  result = swift_arrayDestroy();
  qword_1EE443A08 = v0;
  return result;
}

uint64_t JSSource.init(_:file:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)a3 + *(int *)(type metadata accessor for JSSource() + 20);
  v11 = sub_19CFDEDE0();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  *a3 = a1;
  a3[1] = a2;
  sub_19CFDED14();
  swift_bridgeObjectRelease();
  v12((uint64_t)v9, 0, 1, v11);
  return sub_19CD3B284((uint64_t)v9, v10);
}

uint64_t JSSource.code.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSSource.code.modify())()
{
  return nullsub_1;
}

uint64_t JSSource.sourceURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JSSource() + 20);
  return sub_19CD3BB88(v3, a1);
}

uint64_t JSSource.sourceURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JSSource() + 20);
  return sub_19CD3B284(a1, v3);
}

uint64_t (*JSSource.sourceURL.modify())(_QWORD)
{
  type metadata accessor for JSSource();
  return nullsub_1;
}

uint64_t JSSource.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19CFA3E8C()
{
  uint64_t v0;

  return sub_19CF8401C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t _s9JetEngine8JSSourceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v33;
  uint64_t v34;

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v8, v9);
  v34 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC30);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for JSSource();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v33 - v21;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_19CF0B86C((uint64_t)a1, (uint64_t)&v33 - v21);
    sub_19CF0B86C((uint64_t)a2, (uint64_t)v18);
  }
  else
  {
    v23 = sub_19CFE06A0();
    sub_19CF0B86C((uint64_t)a1, (uint64_t)v22);
    sub_19CF0B86C((uint64_t)a2, (uint64_t)v18);
    if ((v23 & 1) == 0)
    {
      sub_19CEC1CFC((uint64_t)v18);
      sub_19CEC1CFC((uint64_t)v22);
      v28 = 0;
      return v28 & 1;
    }
  }
  v24 = *(int *)(v15 + 20);
  v25 = (uint64_t)&v18[v24];
  v26 = (uint64_t)&v14[*(int *)(v11 + 48)];
  sub_19CD3BB88((uint64_t)&v22[v24], (uint64_t)v14);
  sub_19CD3BB88(v25, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v14, 1, v4) != 1)
  {
    v29 = v34;
    sub_19CD3BB88((uint64_t)v14, v34);
    if (v27(v26, 1, v4) != 1)
    {
      v30 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v26, v4);
      sub_19CD3B494();
      v28 = sub_19CFDF548();
      v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v30, v4);
      sub_19CEC1CFC((uint64_t)v18);
      sub_19CEC1CFC((uint64_t)v22);
      v31((char *)v29, v4);
      sub_19CCECFE4((uint64_t)v14, (uint64_t *)&unk_1ECEB3030);
      return v28 & 1;
    }
    sub_19CEC1CFC((uint64_t)v18);
    sub_19CEC1CFC((uint64_t)v22);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    goto LABEL_10;
  }
  sub_19CEC1CFC((uint64_t)v18);
  sub_19CEC1CFC((uint64_t)v22);
  if (v27(v26, 1, v4) != 1)
  {
LABEL_10:
    sub_19CCECFE4((uint64_t)v14, &qword_1EE43CC30);
    v28 = 0;
    return v28 & 1;
  }
  sub_19CCECFE4((uint64_t)v14, (uint64_t *)&unk_1ECEB3030);
  v28 = 1;
  return v28 & 1;
}

_QWORD *initializeWithCopy for JSSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for JSSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for JSSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for JSSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CFA4584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for JSSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CFA4610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_19CFA4688@<X0>(_QWORD *a1@<X8>)
{
  return sub_19CE1FCA0(a1);
}

uint64_t PathExpression.init(pattern:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  char v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t inited;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;

  v68 = a4;
  v7 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDE864();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  sub_19CFE013C();
  v16 = sub_19CFA57A8();
  swift_bridgeObjectRelease();
  v17 = v16;
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v51 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v48 = 10798;
    v49 = 0xE200000000000000;
    v50 = v73;
LABEL_34:
    result = (uint64_t)sub_19CDE3E3C(v48, v49, 0);
    if (!v50)
      *v68 = result;
    return result;
  }
  v60 = a2;
  v61 = a3;
  v62 = v10;
  v63 = v15;
  v64 = v12;
  v65 = v11;
  v67 = v17;
  v19 = (unint64_t *)(v17 + 40);
  v71 = 12126;
  v72 = 0xE200000000000000;
  v20 = v73;
  while (1)
  {
    v22 = *(v19 - 1);
    v21 = *v19;
    v23 = v22 == 47 && v21 == 0xE100000000000000;
    if (v23 || (sub_19CFE06A0() & 1) != 0)
      goto LABEL_4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_19CFDF728();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      sub_19CFDF698();
    if (v22 == 42 && v21 == 0xE100000000000000 || (sub_19CFE06A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      goto LABEL_4;
    }
    if ((sub_19CFDF71C() & 1) == 0 && (sub_19CFDF728() & 1) == 0)
    {
      if ((sub_19CFDF71C() & 1) != 0 || (sub_19CFDF728() & 1) != 0)
      {
        if ((sub_19CFDF71C() & 1) == 0 || (sub_19CFDF728() & 1) == 0)
        {
LABEL_37:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_19CFDE828();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_19D052350;
          *(_QWORD *)(inited + 32) = sub_19CFDF578();
          *(_QWORD *)(inited + 40) = v53;
          v69 = 0;
          v70 = 0xE000000000000000;
          sub_19CFE010C();
          sub_19CFDF698();
          sub_19CFDF698();
          swift_bridgeObjectRelease();
          sub_19CFDF698();
          v54 = v69;
          v55 = v70;
          *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(inited + 48) = v54;
          *(_QWORD *)(inited + 56) = v55;
          *(_QWORD *)(inited + 80) = sub_19CFDF578();
          *(_QWORD *)(inited + 88) = v56;
          *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEC348];
          v57 = v60;
          *(_QWORD *)(inited + 96) = v66;
          *(_QWORD *)(inited + 104) = v57;
          *(_BYTE *)(inited + 112) = v61;
          sub_19CD30650(inited);
          sub_19CEDD8AC();
          v58 = v63;
          v59 = v65;
          sub_19CFDEC84();
          sub_19CFDE81C();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v59);
          return swift_willThrow();
        }
        sub_19CFDF698();
      }
      else
      {
        v42 = (void *)objc_opt_self();
        v43 = (void *)sub_19CFDF554();
        swift_bridgeObjectRelease();
        v44 = objc_msgSend(v42, sel_escapedPatternForString_, v43);

        sub_19CFDF578();
        sub_19CFDF698();
      }
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if ((sub_19CFDF71C() & 1) == 0 || (sub_19CFDF728() & 1) == 0)
      goto LABEL_37;
    v25 = sub_19CFA5A78(1uLL, v22, v21);
    v27 = v26;
    swift_bridgeObjectRelease();
    result = sub_19CFDFF98();
    if (__OFSUB__(result, 1))
      break;
    v29 = sub_19CFDFF8C();
    if ((v30 & 1) != 0)
      v31 = v27;
    else
      v31 = v29;
    result = objc_opt_self();
    if (v31 >> 14 < v25 >> 14)
      goto LABEL_39;
    v32 = (void *)result;
    v33 = sub_19CFDFFB0();
    v35 = v34;
    v37 = v36;
    v39 = v38;
    swift_bridgeObjectRelease();
    MEMORY[0x1A1AD9838](v33, v35, v37, v39);
    swift_bridgeObjectRelease();
    v40 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v32, sel_escapedPatternForString_, v40);

    sub_19CFDF578();
    v69 = 3948328;
    v70 = 0xE300000000000000;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    v20 = v73;
LABEL_4:
    v19 += 2;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v45 = v71;
      v46 = v72;
      v47 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
      v48 = v45;
      v49 = v46;
      v50 = v20;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

JetEngine::PathExpression::MatchResult_optional __swiftcall PathExpression.match(_:)(Swift::String a1)
{
  _QWORD *v1;
  void **v2;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  uint64_t v12;
  void *v13;
  JetEngine::PathExpression::MatchResult_optional result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = v1;
  v6 = *v2;
  v7 = (void *)sub_19CFDF554();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC80);
  sub_19CD05BA0((unint64_t *)&qword_1EE43EC88, &qword_1EE43EC80, MEMORY[0x1E0DEC940]);
  sub_19CD41144();
  v8 = sub_19CFDFF14();
  v10 = objc_msgSend(v6, sel_firstMatchInString_options_range_, v7, 0, v8, v9);

  if (v10)
  {
    v11 = (objc_class *)swift_bridgeObjectRetain();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  *v5 = v10;
  v5[1] = countAndFlagsBits;
  v5[2] = object;
  result.value.raw._object = v13;
  result.value.raw._countAndFlagsBits = v12;
  result.value.base.super.isa = v11;
  return result;
}

uint64_t PathExpression.MatchResult.raw.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PathExpression.MatchResult.startIndex.getter()
{
  return 0;
}

char *PathExpression.MatchResult.endIndex.getter()
{
  id *v0;
  char *v1;
  BOOL v2;
  char *result;

  v1 = (char *)objc_msgSend(*v0, sel_numberOfRanges);
  v2 = __OFSUB__(v1, 1);
  result = v1 - 1;
  if (v2)
    __break(1u);
  return result;
}

Swift::Int __swiftcall PathExpression.MatchResult.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t PathExpression.MatchResult.subscript.getter(uint64_t a1)
{
  id *v1;
  id v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = *v1;
  v4 = objc_msgSend(*v1, sel_numberOfRanges);
  if (__OFSUB__(v4, 1))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((uint64_t)v4 - 1 <= a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v3, sel_rangeAtIndex_, a1 + 1);
  sub_19CFDFCC8();
  if ((v5 & 1) == 0)
  {
    v6 = sub_19CFDF764();
    v7 = MEMORY[0x1A1AD9838](v6);
    swift_bridgeObjectRelease();
    return v7;
  }
LABEL_9:
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t PathExpression.MatchResult.subscript.getter()
{
  void **v0;
  void *v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (void *)sub_19CFDF554();
  objc_msgSend(v1, sel_rangeWithName_, v2);

  sub_19CFDFCC8();
  if ((v3 & 1) != 0)
    return 0;
  v4 = sub_19CFDF764();
  v5 = MEMORY[0x1A1AD9838](v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t PathExpression.MatchResult.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v5 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = sub_19CFDE864();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + 8);
  v12 = *(_QWORD *)(v2 + 16);
  v13 = *(id *)v2;
  swift_bridgeObjectRetain();
  v25[1] = a1;
  v25[2] = a2;
  v14 = (void *)sub_19CFDF554();
  objc_msgSend(v13, sel_rangeWithName_, v14);

  sub_19CFDFCC8();
  if ((v15 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    sub_19CFDE828();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D052350;
    *(_QWORD *)(inited + 32) = sub_19CFDF578();
    *(_QWORD *)(inited + 40) = v20;
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    v26 = 0xD000000000000019;
    v27 = 0x800000019D079910;
    sub_19CFDF698();
    sub_19CFDF698();
    v21 = v26;
    v22 = v27;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v21;
    *(_QWORD *)(inited + 56) = v22;
    *(_QWORD *)(inited + 80) = sub_19CFDF578();
    *(_QWORD *)(inited + 88) = v24;
    *(_QWORD *)(inited + 120) = v23;
    *(_QWORD *)(inited + 96) = v11;
    *(_QWORD *)(inited + 104) = v12;
    swift_bridgeObjectRetain();
    sub_19CD30650(inited);
    sub_19CEDD8AC();
    sub_19CFDEC84();
    sub_19CFDE81C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
    return swift_willThrow();
  }
  else
  {
    v16 = sub_19CFDF764();
    v17 = MEMORY[0x1A1AD9838](v16);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v17;
  }
}

uint64_t PathExpression.MatchResult.debugDescription.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "MatchResult(");
  sub_19CFA5B14();
  sub_19CD41144();
  sub_19CFDF7DC();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1[0];
}

char *sub_19CFA54E0@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  char *result;

  result = (char *)objc_msgSend(*v1, sel_numberOfRanges);
  if (__OFSUB__(result, 1))
    __break(1u);
  else
    *a1 = result - 1;
  return result;
}

uint64_t (*sub_19CFA551C(uint64_t *a1, uint64_t *a2))()
{
  uint64_t matched;
  uint64_t v4;

  matched = PathExpression.MatchResult.subscript.getter(*a2);
  a1[1] = v4;
  a1[2] = v4;
  *a1 = matched;
  return destroy for DynamicImpressionsTracker.Configuration;
}

char *sub_19CFA5554@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  id v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = *(void **)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  result = (char *)objc_msgSend(v6, sel_numberOfRanges);
  v10 = (uint64_t)(result - 1);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v10 < 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v5 < 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v10 >= v4)
  {
    a2[2] = v6;
    a2[3] = v7;
    a2[4] = v8;
    *a2 = v5;
    a2[1] = v4;
    v11 = v6;
    return (char *)swift_bridgeObjectRetain();
  }
LABEL_9:
  __break(1u);
  return result;
}

char *sub_19CFA55D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *result;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = 0;
  v6 = v3;
  swift_bridgeObjectRetain();
  result = (char *)objc_msgSend(v6, sel_numberOfRanges);
  if (__OFSUB__(result, 1))
    __break(1u);
  else
    a1[4] = result - 1;
  return result;
}

id sub_19CFA563C()
{
  id *v0;
  id result;

  result = objc_msgSend(*v0, sel_numberOfRanges);
  if (!__OFSUB__(result, 1))
    return (id)(result == (id)1);
  __break(1u);
  return result;
}

uint64_t sub_19CFA5674()
{
  _QWORD v1[2];

  strcpy((char *)v1, "MatchResult(");
  sub_19CFA5B14();
  sub_19CD41144();
  sub_19CFDF7DC();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1[0];
}

char *sub_19CFA5720()
{
  id *v0;
  char *v1;
  BOOL v2;
  char *result;

  v1 = (char *)objc_msgSend(*v0, sel_numberOfRanges);
  v2 = __OFSUB__(v1, 1);
  result = v1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t *sub_19CFA5754()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;

  v1 = *(void **)v0;
  v2 = sub_19CDFDC90(*(void **)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_19CFA579C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19CDFCD34(a1, a2, a3, *(id *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16));
}

uint64_t sub_19CFA57A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDEB7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEB70();
  sub_19CFDEB64();
  swift_bridgeObjectRetain();
  sub_19CFDEB28();
  sub_19CFDEAF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_19CD3BBD0((uint64_t)v3);
    v14 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    v14 = sub_19CFDED08();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v14;
}

unint64_t PathExpression.debugDescription.getter()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_pattern);
  sub_19CFDF578();

  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0xD000000000000018;
}

unint64_t sub_19CFA59DC()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_pattern);
  sub_19CFDF578();

  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0xD000000000000018;
}

unint64_t sub_19CFA5A78(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_19CFDF680();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_19CFDF764();
  }
  __break(1u);
  return result;
}

unint64_t sub_19CFA5B14()
{
  unint64_t result;

  result = qword_1EE443A10;
  if (!qword_1EE443A10)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PathExpression.MatchResult, &type metadata for PathExpression.MatchResult);
    atomic_store(result, (unint64_t *)&qword_1EE443A10);
  }
  return result;
}

uint64_t sub_19CFA5B5C()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_19CFA5B68()
{
  return sub_19CD05BA0(&qword_1EE443A18, &qword_1EE443A20, MEMORY[0x1E0DEA228]);
}

uint64_t sub_19CFA5B94()
{
  return sub_19CD05BA0(&qword_1EE443A28, &qword_1EE443A30, MEMORY[0x1E0DEDE48]);
}

uint64_t sub_19CFA5BC0()
{
  return sub_19CD05BA0(&qword_1EE443A38, &qword_1EE443A40, MEMORY[0x1E0DEC908]);
}

ValueMetadata *type metadata accessor for PathExpression()
{
  return &type metadata for PathExpression;
}

_QWORD *sub_19CFA5C00(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PathExpression.MatchResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PathExpression.MatchResult(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PathExpression.MatchResult()
{
  return &type metadata for PathExpression.MatchResult;
}

uint64_t sub_19CFA5CF0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1))
      v3 = a2 - 1;
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL))
      v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v4 = v3 + 1;
    if (v4 >= 5)
    {
      v7 = v4 & 3;
      if ((v4 & 3) == 0)
        v7 = 4;
      v5 = v4 - v7;
      v8 = 0uLL;
      v9 = (int64x2_t)(unint64_t)result;
      v10 = vdupq_n_s64(1uLL);
      v11 = v5;
      do
      {
        v9 = vaddq_s64(v9, v10);
        v8 = vaddq_s64(v8, v10);
        v11 -= 4;
      }
      while (v11);
      v6 = vaddvq_s64(vaddq_s64(v8, v9));
    }
    else
    {
      v5 = 0;
      v6 = result;
    }
    v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    v13 = v5 + result - a3;
    v14 = a2 - v5;
    result = v6;
    while (1)
    {
      if (!v13)
        return 0;
      if (!v12)
        break;
      ++result;
      ++v12;
      ++v13;
      if (!--v14)
        return result;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t JSONObject.decode<A>(_:using:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a2;
  swift_bridgeObjectRetain();
  v2 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v4);
  JSONObject.decode<A>(_:withUserInfo:)(v2, v2);
  return swift_bridgeObjectRelease();
}

void static JSONContext.Property<A>.enableStrictKeyChecking.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019D06FFA0;
}

uint64_t sub_19CFA5E58()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CFA5E94(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void (*v8)(__int128 *);
  __int128 v9;
  os_log_type_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  Swift::String v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[32];
  __int128 v44;
  __int128 v45;
  char v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v44;
  if ((_QWORD)v44)
  {
    *(_QWORD *)&v44 = 0;
    *((_QWORD *)&v44 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    v8(&v44);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v44 = 0;
      *((_QWORD *)&v44 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v9 = v44;
      v10 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v11 = sub_19CFDFF38();
      if (os_log_type_enabled(v11, v10))
      {
        v12 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        *(_QWORD *)&v44 = v13;
        *(_DWORD *)v12 = 136446722;
        v14 = sub_19CFE013C();
        sub_19CD37070(v14, v15, (uint64_t *)&v44);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v12 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v41 = sub_19CD37070(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v44);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v11, v10, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v12, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v13, -1, -1);
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v16 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
      v18 = v16;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      v49 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v47 = a1;
      *((_QWORD *)&v47 + 1) = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v47, (uint64_t)v43);
      v41 = 0u;
      v42 = 0u;
      sub_19CD40658((uint64_t)v43, (uint64_t)&v41);
      v46 = 0;
      v44 = v41;
      v45 = v42;
      v20 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
      v22 = v20[2];
      v21 = v20[3];
      if (v22 >= v21 >> 1)
        v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
      v20[2] = v22 + 1;
      v23 = &v20[5 * v22];
      v24 = v44;
      v25 = v45;
      *((_BYTE *)v23 + 64) = v46;
      *((_OWORD *)v23 + 2) = v24;
      *((_OWORD *)v23 + 3) = v25;
      v50 = v20;
      sub_19CD3F190((uint64_t)&v47);
      v26._countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      v49 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v47 = a4;
      sub_19CD40794((uint64_t)&v47, (uint64_t)v43);
      v41 = 0u;
      v42 = 0u;
      sub_19CD40658((uint64_t)v43, (uint64_t)&v41);
      v46 = 0;
      v44 = v41;
      v45 = v42;
      v27 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_19CD40918(0, v27[2] + 1, 1, v27);
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
        v27 = sub_19CD40918((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v27[2] = v29 + 1;
      v30 = &v27[5 * v29];
      v31 = v44;
      v32 = v45;
      *((_BYTE *)v30 + 64) = v46;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      v50 = v27;
      sub_19CD3F190((uint64_t)&v47);
      v33._countAndFlagsBits = 0xD00000000000001BLL;
      v33._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      *(_QWORD *)&v44 = 0;
      *((_QWORD *)&v44 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v49 = MEMORY[0x1E0DEA968];
      v47 = v44;
      sub_19CD40794((uint64_t)&v47, (uint64_t)v43);
      v41 = 0u;
      v42 = 0u;
      sub_19CD40658((uint64_t)v43, (uint64_t)&v41);
      v46 = 0;
      v44 = v41;
      v45 = v42;
      v34 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v34[2] = v36 + 1;
      v37 = &v34[5 * v36];
      v38 = v44;
      v39 = v45;
      *((_BYTE *)v37 + 64) = v46;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      v50 = v34;
      sub_19CD3F190((uint64_t)&v47);
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      *(_QWORD *)(v17 + 32) = v50;
      *(_QWORD *)&v44 = v18;
      LOBYTE(v41) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v41);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA6668(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000080;
    *((_QWORD *)&v43 + 1) = 0x800000019D07A390;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000080, 0x800000019D07A390, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000080;
      v47 = 0x800000019D07A390;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA6C8C(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000024;
    *((_QWORD *)&v43 + 1) = 0x800000019D079CB0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000024, 0x800000019D079CB0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000024;
      v47 = 0x800000019D079CB0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA72B0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000095;
    *((_QWORD *)&v43 + 1) = 0x800000019D07A0F0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000095, 0x800000019D07A0F0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000095;
      v47 = 0x800000019D07A0F0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA78D4(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000001ALL;
    *((_QWORD *)&v43 + 1) = 0x800000019D07A190;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000001ALL, 0x800000019D07A190, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000001ALL;
      v47 = 0x800000019D07A190;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA7EF8(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000090;
    *((_QWORD *)&v43 + 1) = 0x800000019D07A050;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000090, 0x800000019D07A050, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000090;
      v47 = 0x800000019D07A050;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA851C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8538(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8554(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void (*v8)(__int128 *);
  __int128 v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  Swift::String v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  Swift::String v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[32];
  __int128 v45;
  __int128 v46;
  char v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v45;
  if ((_QWORD)v45)
  {
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRetain();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    v8(&v45);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRetain();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      v9 = v45;
      v10 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v11 = sub_19CFDFF38();
      v12 = v10;
      if (os_log_type_enabled(v11, v10))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        *(_QWORD *)&v45 = v14;
        *(_DWORD *)v13 = 136446722;
        v15 = sub_19CFE013C();
        sub_19CD37070(v15, v16, (uint64_t *)&v45);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v13 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v42 = sub_19CD37070(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v45);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v11, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v14, -1, -1);
        MEMORY[0x1A1ADBE9C](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v17 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
      v19 = v17;
      v51 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      v50 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v48 = a1;
      *((_QWORD *)&v48 + 1) = a2;
      v49 = a3;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v21 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
        v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21[2] = v23 + 1;
      v24 = &v21[5 * v23];
      v25 = v45;
      v26 = v46;
      *((_BYTE *)v24 + 64) = v47;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      v51 = v21;
      sub_19CD3F190((uint64_t)&v48);
      v27._countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      v50 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v48 = a4;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_19CD40918(0, v28[2] + 1, 1, v28);
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v28 = sub_19CD40918((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v28[2] = v30 + 1;
      v31 = &v28[5 * v30];
      v32 = v45;
      v33 = v46;
      *((_BYTE *)v31 + 64) = v47;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      v51 = v28;
      sub_19CD3F190((uint64_t)&v48);
      v34._countAndFlagsBits = 0xD00000000000001BLL;
      v34._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRetain();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      v50 = MEMORY[0x1E0DEA968];
      v48 = v45;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v35 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_19CD40918(0, v35[2] + 1, 1, v35);
      v37 = v35[2];
      v36 = v35[3];
      if (v37 >= v36 >> 1)
        v35 = sub_19CD40918((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
      v35[2] = v37 + 1;
      v38 = &v35[5 * v37];
      v39 = v45;
      v40 = v46;
      *((_BYTE *)v38 + 64) = v47;
      *((_OWORD *)v38 + 2) = v39;
      *((_OWORD *)v38 + 3) = v40;
      v51 = v35;
      sub_19CD3F190((uint64_t)&v48);
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      *(_QWORD *)(v18 + 32) = v51;
      *(_QWORD *)&v45 = v19;
      LOBYTE(v42) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v42);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_bridgeObjectRetain();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA8E08(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8E24(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8E40(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8E5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_19CFA8554(a1, a2, a3, a4);
}

void sub_19CFA8E78(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000022;
    *((_QWORD *)&v43 + 1) = 0x800000019D07A020;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000022, 0x800000019D07A020, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000022;
      v47 = 0x800000019D07A020;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA949C(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000034;
    *((_QWORD *)&v43 + 1) = 0x800000019D079CE0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000034, 0x800000019D079CE0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000034;
      v47 = 0x800000019D079CE0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFA9AC0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000032;
    *((_QWORD *)&v43 + 1) = 0x800000019D079D20;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000032, 0x800000019D079D20, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000032;
      v47 = 0x800000019D079D20;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAA0E4(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000027;
    *((_QWORD *)&v43 + 1) = 0x800000019D079D60;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000027, 0x800000019D079D60, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000027;
      v47 = 0x800000019D079D60;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAA708(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000003CLL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079FE0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000003CLL, 0x800000019D079FE0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000003CLL;
      v47 = 0x800000019D079FE0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAAD2C(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000032;
    *((_QWORD *)&v43 + 1) = 0x800000019D079FA0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000032, 0x800000019D079FA0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000032;
      v47 = 0x800000019D079FA0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAB350(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000005CLL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079B20;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000005CLL, 0x800000019D079B20, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000005CLL;
      v47 = 0x800000019D079B20;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAB974(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000002BLL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079F50;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000002BLL, 0x800000019D079F50, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000002BLL;
      v47 = 0x800000019D079F50;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFABF98(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000047;
    *((_QWORD *)&v43 + 1) = 0x800000019D079D90;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000047, 0x800000019D079D90, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000047;
      v47 = 0x800000019D079D90;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAC5BC(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000002ALL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079F20;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000002ALL, 0x800000019D079F20, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000002ALL;
      v47 = 0x800000019D079F20;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFACBE0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000039;
    *((_QWORD *)&v43 + 1) = 0x800000019D079A30;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000039, 0x800000019D079A30, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000039;
      v47 = 0x800000019D079A30;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAD204(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(__int128 *);
  __int128 v11;
  os_log_type_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  Swift::String v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  Swift::String v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[32];
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v10 = (void (*)(__int128 *))v46;
  if ((_QWORD)v46)
  {
    *(_QWORD *)&v46 = 0;
    *((_QWORD *)&v46 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    *(_QWORD *)&v43 = a5;
    sub_19CFE02E0();
    sub_19CFDF698();
    v10(&v46);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v10);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      v11 = v46;
      v12 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v13 = sub_19CFDFF38();
      if (os_log_type_enabled(v13, v12))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        *(_QWORD *)&v46 = v15;
        *(_DWORD *)v14 = 136446722;
        v16 = sub_19CFE013C();
        sub_19CD37070(v16, v17, (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v14 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v43 = sub_19CD37070(v11, *((unint64_t *)&v11 + 1), (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v13, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v15, -1, -1);
        MEMORY[0x1A1ADBE9C](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v18 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      v20 = v18;
      v52 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      v51 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v49 = a1;
      *((_QWORD *)&v49 + 1) = a2;
      v50 = a3;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v22 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
      v22[2] = v24 + 1;
      v25 = &v22[5 * v24];
      v26 = v46;
      v27 = v47;
      *((_BYTE *)v25 + 64) = v48;
      *((_OWORD *)v25 + 2) = v26;
      *((_OWORD *)v25 + 3) = v27;
      v52 = v22;
      sub_19CD3F190((uint64_t)&v49);
      v28._countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      v51 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v49 = a4;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v29 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_19CD40918(0, v29[2] + 1, 1, v29);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_19CD40918((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      v29[2] = v31 + 1;
      v32 = &v29[5 * v31];
      v33 = v46;
      v34 = v47;
      *((_BYTE *)v32 + 64) = v48;
      *((_OWORD *)v32 + 2) = v33;
      *((_OWORD *)v32 + 3) = v34;
      v52 = v29;
      sub_19CD3F190((uint64_t)&v49);
      v35._countAndFlagsBits = 0xD00000000000001BLL;
      v35._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      v51 = MEMORY[0x1E0DEA968];
      v49 = v46;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v36 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_19CD40918(0, v36[2] + 1, 1, v36);
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v36 = sub_19CD40918((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v36[2] = v38 + 1;
      v39 = &v36[5 * v38];
      v40 = v46;
      v41 = v47;
      *((_BYTE *)v39 + 64) = v48;
      *((_OWORD *)v39 + 2) = v40;
      *((_OWORD *)v39 + 3) = v41;
      v52 = v36;
      sub_19CD3F190((uint64_t)&v49);
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      *(_QWORD *)(v19 + 32) = v52;
      *(_QWORD *)&v46 = v20;
      LOBYTE(v43) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v43);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFADA50(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000004CLL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079E90;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000004CLL, 0x800000019D079E90, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000004CLL;
      v47 = 0x800000019D079E90;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAE078(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000003ALL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079DE0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000003ALL, 0x800000019D079DE0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000003ALL;
      v47 = 0x800000019D079DE0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAE69C(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000029;
    *((_QWORD *)&v43 + 1) = 0x800000019D079B80;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000029, 0x800000019D079B80, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000029;
      v47 = 0x800000019D079B80;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAECC0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD000000000000079;
    *((_QWORD *)&v43 + 1) = 0x800000019D079AA0;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD000000000000079, 0x800000019D079AA0, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD000000000000079;
      v47 = 0x800000019D079AA0;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAF2E4(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000002ALL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079A70;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000002ALL, 0x800000019D079A70, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000002ALL;
      v47 = 0x800000019D079A70;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFAF908(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void (*v8)(__int128 *);
  __int128 v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  Swift::String v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  Swift::String v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[32];
  __int128 v45;
  __int128 v46;
  char v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v45;
  if ((_QWORD)v45)
  {
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE013C();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    v8(&v45);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE013C();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      v9 = v45;
      v10 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v11 = sub_19CFDFF38();
      v12 = v10;
      if (os_log_type_enabled(v11, v10))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        *(_QWORD *)&v45 = v14;
        *(_DWORD *)v13 = 136446722;
        v15 = sub_19CFE013C();
        sub_19CD37070(v15, v16, (uint64_t *)&v45);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v13 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v42 = sub_19CD37070(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v45);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v11, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v14, -1, -1);
        MEMORY[0x1A1ADBE9C](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v17 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
      v19 = v17;
      v51 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      v50 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v48 = a1;
      *((_QWORD *)&v48 + 1) = a2;
      v49 = a3;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v21 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
        v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21[2] = v23 + 1;
      v24 = &v21[5 * v23];
      v25 = v45;
      v26 = v46;
      *((_BYTE *)v24 + 64) = v47;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      v51 = v21;
      sub_19CD3F190((uint64_t)&v48);
      v27._countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      v50 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v48 = a4;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_19CD40918(0, v28[2] + 1, 1, v28);
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v28 = sub_19CD40918((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v28[2] = v30 + 1;
      v31 = &v28[5 * v30];
      v32 = v45;
      v33 = v46;
      *((_BYTE *)v31 + 64) = v47;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      v51 = v28;
      sub_19CD3F190((uint64_t)&v48);
      v34._countAndFlagsBits = 0xD00000000000001BLL;
      v34._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE013C();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      v50 = MEMORY[0x1E0DEA968];
      v48 = v45;
      sub_19CD40794((uint64_t)&v48, (uint64_t)v44);
      v42 = 0u;
      v43 = 0u;
      sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
      v47 = 0;
      v45 = v42;
      v46 = v43;
      v35 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_19CD40918(0, v35[2] + 1, 1, v35);
      v37 = v35[2];
      v36 = v35[3];
      if (v37 >= v36 >> 1)
        v35 = sub_19CD40918((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
      v35[2] = v37 + 1;
      v38 = &v35[5 * v37];
      v39 = v45;
      v40 = v46;
      *((_BYTE *)v38 + 64) = v47;
      *((_OWORD *)v38 + 2) = v39;
      *((_OWORD *)v38 + 3) = v40;
      v51 = v35;
      sub_19CD3F190((uint64_t)&v48);
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      *(_QWORD *)(v18 + 32) = v51;
      *(_QWORD *)&v45 = v19;
      LOBYTE(v42) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v42);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE013C();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFB0200(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  void (*v8)(__int128 *);
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v8 = (void (*)(__int128 *))v43;
  if ((_QWORD)v43)
  {
    *(_QWORD *)&v43 = 0xD00000000000001FLL;
    *((_QWORD *)&v43 + 1) = 0x800000019D079990;
    v8(&v43);
    sub_19CCE9F48((uint64_t)v8);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      v9 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      v10 = sub_19CFDFF38();
      if (os_log_type_enabled(v10, v9))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)&v43 = v12;
        *(_DWORD *)v11 = 136446722;
        v13 = sub_19CFE013C();
        sub_19CD37070(v13, v14, (uint64_t *)&v43);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v11 + 22) = 2082;
        *(_QWORD *)&v40 = sub_19CD37070(0xD00000000000001FLL, 0x800000019D079990, (uint64_t *)&v43);
        sub_19CFDFFC8();
        _os_log_impl(&dword_19CCBB000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v12, -1, -1);
        MEMORY[0x1A1ADBE9C](v11, -1, -1);
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v15 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      v17 = v15;
      v50 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      v49 = MEMORY[0x1E0DEC348];
      v46 = a1;
      v47 = a2;
      v48 = a3;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
        v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
      v19[2] = v21 + 1;
      v22 = &v19[5 * v21];
      v23 = v43;
      v24 = v44;
      *((_BYTE *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      v50 = v19;
      sub_19CD3F190((uint64_t)&v46);
      v25._countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v49 = MEMORY[0x1E0DEBB98];
      v46 = a4;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v43;
      v31 = v44;
      *((_BYTE *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v50 = v26;
      sub_19CD3F190((uint64_t)&v46);
      v32._countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v49 = MEMORY[0x1E0DEA968];
      v46 = 0xD00000000000001FLL;
      v47 = 0x800000019D079990;
      sub_19CD40794((uint64_t)&v46, (uint64_t)v42);
      v40 = 0u;
      v41 = 0u;
      sub_19CD40658((uint64_t)v42, (uint64_t)&v40);
      v45 = 0;
      v43 = v40;
      v44 = v41;
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v43;
      v38 = v44;
      *((_BYTE *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v50 = v33;
      sub_19CD3F190((uint64_t)&v46);
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(_QWORD *)(v16 + 32) = v50;
      *(_QWORD *)&v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void requirementFailure(_:file:line:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11;
  void (*v12)(__int128 *);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  Swift::String v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  __int128 v47;
  __int128 v48;
  Swift::String v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[32];
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;

  if (qword_1EE43D788 != -1)
    swift_once();
  v11 = sub_19CFE0A6C();
  v12 = (void (*)(__int128 *))v53;
  if ((_QWORD)v53)
  {
    *(_QWORD *)&v53 = ((uint64_t (*)(uint64_t))a1)(v11);
    *((_QWORD *)&v53 + 1) = v13;
    v12(&v53);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v12);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      v11 = swift_once();
    if (byte_1EE443A48 == 1)
    {
      v14 = a1();
      v16 = v15;
      v17 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v18 = sub_19CFDFF38();
      if (os_log_type_enabled(v18, v17))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        *(_QWORD *)&v53 = v20;
        *(_DWORD *)v19 = 136446722;
        v21 = sub_19CFE013C();
        sub_19CD37070(v21, v22, (uint64_t *)&v53);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v19 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v50 = sub_19CD37070(v14, v16, (uint64_t *)&v53);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v18, v17, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v20, -1, -1);
        MEMORY[0x1A1ADBE9C](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v23 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19D0522A0;
      v25 = v23;
      v60 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      v59 = MEMORY[0x1E0DEC348];
      v56 = a3;
      v57 = a4;
      v58 = a5;
      sub_19CD40794((uint64_t)&v56, (uint64_t)v52);
      v50 = 0u;
      v51 = 0u;
      sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
      v55 = 0;
      v53 = v50;
      v54 = v51;
      v27 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_19CD40918(0, v27[2] + 1, 1, v27);
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
        v27 = sub_19CD40918((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v27[2] = v29 + 1;
      v30 = &v27[5 * v29];
      v31 = v53;
      v32 = v54;
      *((_BYTE *)v30 + 64) = v55;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      v60 = v27;
      sub_19CD3F190((uint64_t)&v56);
      v33._countAndFlagsBits = 58;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      v59 = MEMORY[0x1E0DEBB98];
      v56 = a6;
      sub_19CD40794((uint64_t)&v56, (uint64_t)v52);
      v50 = 0u;
      v51 = 0u;
      sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
      v55 = 0;
      v53 = v50;
      v54 = v51;
      v34 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v34[2] = v36 + 1;
      v37 = &v34[5 * v36];
      v38 = v53;
      v39 = v54;
      *((_BYTE *)v37 + 64) = v55;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      v60 = v34;
      sub_19CD3F190((uint64_t)&v56);
      v40._object = (void *)0x800000019D079950;
      v40._countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      v41 = a1();
      v59 = MEMORY[0x1E0DEA968];
      v56 = v41;
      v57 = v42;
      sub_19CD40794((uint64_t)&v56, (uint64_t)v52);
      v50 = 0u;
      v51 = 0u;
      sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
      v55 = 0;
      v53 = v50;
      v54 = v51;
      v43 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_19CD40918(0, v43[2] + 1, 1, v43);
      v45 = v43[2];
      v44 = v43[3];
      if (v45 >= v44 >> 1)
        v43 = sub_19CD40918((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
      v43[2] = v45 + 1;
      v46 = &v43[5 * v45];
      v47 = v53;
      v48 = v54;
      *((_BYTE *)v46 + 64) = v55;
      *((_OWORD *)v46 + 2) = v47;
      *((_OWORD *)v46 + 3) = v48;
      v60 = v43;
      sub_19CD3F190((uint64_t)&v56);
      v49._countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      *(_QWORD *)(v24 + 32) = v60;
      *(_QWORD *)&v53 = v25;
      LOBYTE(v50) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)&v50);

      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t))a1)(v11);
      sub_19CFE0340();
      __break(1u);
    }
  }
}

uint64_t withUnsatisfiedRequirementHandler(_:perform:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  if (qword_1EE43D788 != -1)
    swift_once();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443A50);
  v7 = swift_task_localValuePush();
  a3(v7);
  swift_task_localValuePop();
  return swift_release();
}

uint64_t withUnsatisfiedRequirementHandlerAsync(_:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_19CFB0F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_1EE43D788 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v0 + 16) = sub_19CFB4C38;
  *(_QWORD *)(v0 + 24) = v3;
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 48);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_19CFB1094;
  return sub_19CFE0A84();
}

uint64_t sub_19CFB1094()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  sub_19CCE9F48(*(_QWORD *)(v2 + 16));
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CFB1110(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_19CCBE344;
  return v5();
}

uint64_t sub_19CFB1164()
{
  int has_internal_content;
  __CFString *v1;
  char v2;

  has_internal_content = os_variant_has_internal_content();
  v1 = JEGestaltGetBuildVersion();
  sub_19CFDF578();

  if (has_internal_content)
    v2 = (sub_19CFB144C() & 1) == 0;
  else
    v2 = 2;
  byte_1EE443A48 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t static RequirementFailurePolicy.active.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (qword_1EE43D780 != -1)
    result = swift_once();
  *a1 = byte_1EE443A48;
  return result;
}

uint64_t sub_19CFB1230()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443A78);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE465D98 = result;
  return result;
}

uint64_t RequirementFailurePolicy.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static RequirementFailurePolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RequirementFailurePolicy.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CFB1300(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2910);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CFB144C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  _BOOL4 v6;
  char v8;
  char v9;

  swift_bridgeObjectRetain();
  v0 = sub_19CFDF6C8();
  if (!v1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  v2 = v0;
  v3 = v1;
  while (1)
  {
    v5 = v3 == 0xE100000000000000;
    v6 = v3 == 0xE100000000000000 && v2 == 65;
    if (!v6)
    {
      if ((sub_19CFE06A0() & 1) != 0)
        goto LABEL_4;
      if (v2 == 90 && v3 == 0xE100000000000000)
        break;
    }
    if ((sub_19CFE06A0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_15;
      goto LABEL_19;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v2 = sub_19CFDF6C8();
    v3 = v4;
    if (!v4)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v5 = 1;
LABEL_15:
  if ((sub_19CFE06A0() & 1) != 0)
    goto LABEL_19;
  v8 = !v5;
  if (v2 != 69)
    v8 = 1;
  if ((v8 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 1;
  }
  v9 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_19CFB15C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB15E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB15F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(__int128 *);
  __int128 v11;
  os_log_type_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  Swift::String v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  Swift::String v41;
  id v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[32];
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v10 = (void (*)(__int128 *))v46;
  if ((_QWORD)v46)
  {
    *(_QWORD *)&v46 = 0;
    *((_QWORD *)&v46 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    *(_QWORD *)&v43 = a5;
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    v10(&v46);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v10);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      v11 = v46;
      v12 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v13 = sub_19CFDFF38();
      if (os_log_type_enabled(v13, v12))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        *(_QWORD *)&v46 = v15;
        *(_DWORD *)v14 = 136446722;
        v16 = sub_19CFE013C();
        sub_19CD37070(v16, v17, (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v14 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v43 = sub_19CD37070(v11, *((unint64_t *)&v11 + 1), (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v13, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v15, -1, -1);
        MEMORY[0x1A1ADBE9C](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v18 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      v42 = v18;
      v52 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      v51 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v49 = a1;
      *((_QWORD *)&v49 + 1) = a2;
      v50 = a3;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v21 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
        v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21[2] = v23 + 1;
      v24 = &v21[5 * v23];
      v25 = v46;
      v26 = v47;
      *((_BYTE *)v24 + 64) = v48;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      v52 = v21;
      sub_19CD3F190((uint64_t)&v49);
      v27._countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      v51 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v49 = a4;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v28 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_19CD40918(0, v28[2] + 1, 1, v28);
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v28 = sub_19CD40918((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v28[2] = v30 + 1;
      v31 = &v28[5 * v30];
      v32 = v46;
      v33 = v47;
      *((_BYTE *)v31 + 64) = v48;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      v52 = v28;
      sub_19CD3F190((uint64_t)&v49);
      v34._countAndFlagsBits = 0xD00000000000001BLL;
      v34._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      v51 = MEMORY[0x1E0DEA968];
      v49 = v46;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v35 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_19CD40918(0, v35[2] + 1, 1, v35);
      v37 = v35[2];
      v36 = v35[3];
      if (v37 >= v36 >> 1)
        v35 = sub_19CD40918((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
      v35[2] = v37 + 1;
      v38 = &v35[5 * v37];
      v39 = v46;
      v40 = v47;
      *((_BYTE *)v38 + 64) = v48;
      *((_OWORD *)v38 + 2) = v39;
      *((_OWORD *)v38 + 3) = v40;
      v52 = v35;
      sub_19CD3F190((uint64_t)&v49);
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      *(_QWORD *)(v19 + 32) = v52;
      *(_QWORD *)&v46 = v42;
      LOBYTE(v43) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v43);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFDF698();
      sub_19CFDF698();
      swift_release();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFB1ED4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB1F18(a1, a2, a3, a4, a5, &qword_1ECEB24A8);
}

void sub_19CFB1EE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB1F04(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB1F18(a1, a2, a3, a4, a5, (unint64_t *)&qword_1ECEB2F80);
}

void sub_19CFB1F18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  void (*v12)(__int128 *);
  __int128 v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  Swift::String v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  Swift::String v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  Swift::String v43;
  id v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[32];
  __int128 v48;
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v12 = (void (*)(__int128 *))v48;
  if ((_QWORD)v48)
  {
    sub_19CCE5204(0, a6);
    *(_QWORD *)&v48 = 0;
    *((_QWORD *)&v48 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    *(_QWORD *)&v45 = a5;
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    v12(&v48);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v12);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      sub_19CCE5204(0, a6);
      *(_QWORD *)&v48 = 0;
      *((_QWORD *)&v48 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v45 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v13 = v48;
      v14 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v15 = sub_19CFDFF38();
      if (os_log_type_enabled(v15, v14))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_QWORD *)&v48 = v17;
        *(_DWORD *)v16 = 136446722;
        v18 = sub_19CFE013C();
        sub_19CD37070(v18, v19, (uint64_t *)&v48);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v16 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v45 = sub_19CD37070(v13, *((unint64_t *)&v13 + 1), (uint64_t *)&v48);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v15, v14, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v17, -1, -1);
        MEMORY[0x1A1ADBE9C](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v20 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_19D0522A0;
      v44 = v20;
      v54 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      v53 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v51 = a1;
      *((_QWORD *)&v51 + 1) = a2;
      v52 = a3;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v23 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
      v25 = v23[2];
      v24 = v23[3];
      if (v25 >= v24 >> 1)
        v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
      v23[2] = v25 + 1;
      v26 = &v23[5 * v25];
      v27 = v48;
      v28 = v49;
      *((_BYTE *)v26 + 64) = v50;
      *((_OWORD *)v26 + 2) = v27;
      *((_OWORD *)v26 + 3) = v28;
      v54 = v23;
      sub_19CD3F190((uint64_t)&v51);
      v29._countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      v53 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v51 = a4;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v30 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_19CD40918(0, v30[2] + 1, 1, v30);
      v32 = v30[2];
      v31 = v30[3];
      if (v32 >= v31 >> 1)
        v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
      v30[2] = v32 + 1;
      v33 = &v30[5 * v32];
      v34 = v48;
      v35 = v49;
      *((_BYTE *)v33 + 64) = v50;
      *((_OWORD *)v33 + 2) = v34;
      *((_OWORD *)v33 + 3) = v35;
      v54 = v30;
      sub_19CD3F190((uint64_t)&v51);
      v36._countAndFlagsBits = 0xD00000000000001BLL;
      v36._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_19CCE5204(0, a6);
      *(_QWORD *)&v48 = 0;
      *((_QWORD *)&v48 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v45 = a5;
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v53 = MEMORY[0x1E0DEA968];
      v51 = v48;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v37 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v37 = sub_19CD40918(0, v37[2] + 1, 1, v37);
      v39 = v37[2];
      v38 = v37[3];
      if (v39 >= v38 >> 1)
        v37 = sub_19CD40918((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
      v37[2] = v39 + 1;
      v40 = &v37[5 * v39];
      v41 = v48;
      v42 = v49;
      *((_BYTE *)v40 + 64) = v50;
      *((_OWORD *)v40 + 2) = v41;
      *((_OWORD *)v40 + 3) = v42;
      v54 = v37;
      sub_19CD3F190((uint64_t)&v51);
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      *(_QWORD *)(v21 + 32) = v54;
      *(_QWORD *)&v48 = v44;
      LOBYTE(v45) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v45);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CCE5204(0, a6);
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      swift_release();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFB2884(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB28A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB28B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v10;
  void (*v11)(__int128 *);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  Swift::String v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[32];
  __int128 v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;

  if (qword_1EE43D788 != -1)
    swift_once();
  v10 = sub_19CFE0A6C();
  v11 = (void (*)(__int128 *))v52;
  if ((_QWORD)v52)
  {
    *(_QWORD *)&v52 = ((uint64_t (*)(uint64_t))a5)(v10);
    *((_QWORD *)&v52 + 1) = v12;
    v11(&v52);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v11);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      v10 = swift_once();
    if (byte_1EE443A48 == 1)
    {
      v13 = a5();
      v15 = v14;
      v16 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v17 = sub_19CFDFF38();
      if (os_log_type_enabled(v17, v16))
      {
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        *(_QWORD *)&v52 = v19;
        *(_DWORD *)v18 = 136446722;
        v20 = sub_19CFE013C();
        sub_19CD37070(v20, v21, (uint64_t *)&v52);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v18 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v49 = sub_19CD37070(v13, v15, (uint64_t *)&v52);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v17, v16, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v18, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v19, -1, -1);
        MEMORY[0x1A1ADBE9C](v18, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v22 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
      v24 = v22;
      v59 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      v58 = MEMORY[0x1E0DEC348];
      v55 = a1;
      v56 = a2;
      v57 = a3;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v26 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v29 = &v26[5 * v28];
      v30 = v52;
      v31 = v53;
      *((_BYTE *)v29 + 64) = v54;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      v59 = v26;
      sub_19CD3F190((uint64_t)&v55);
      v32._countAndFlagsBits = 58;
      v32._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      v58 = MEMORY[0x1E0DEBB98];
      v55 = a4;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v33 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v33[2] + 1, 1, v33);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v36 = &v33[5 * v35];
      v37 = v52;
      v38 = v53;
      *((_BYTE *)v36 + 64) = v54;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      v59 = v33;
      sub_19CD3F190((uint64_t)&v55);
      v39._object = (void *)0x800000019D079950;
      v39._countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      v40 = a5();
      v58 = MEMORY[0x1E0DEA968];
      v55 = v40;
      v56 = v41;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v42 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_19CD40918(0, v42[2] + 1, 1, v42);
      v44 = v42[2];
      v43 = v42[3];
      if (v44 >= v43 >> 1)
        v42 = sub_19CD40918((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
      v42[2] = v44 + 1;
      v45 = &v42[5 * v44];
      v46 = v52;
      v47 = v53;
      *((_BYTE *)v45 + 64) = v54;
      *((_OWORD *)v45 + 2) = v46;
      *((_OWORD *)v45 + 3) = v47;
      v59 = v42;
      sub_19CD3F190((uint64_t)&v55);
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      *(_QWORD *)(v23 + 32) = v59;
      *(_QWORD *)&v52 = v24;
      LOBYTE(v49) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)&v49);

      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t))a5)(v10);
      sub_19CFE0340();
      __break(1u);
    }
  }
}

uint64_t sub_19CFB2F00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CFB2F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE443A60 + dword_1EE443A60))(a1, v4);
}

unint64_t sub_19CFB2F98()
{
  unint64_t result;

  result = qword_1EE443A70;
  if (!qword_1EE443A70)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for RequirementFailurePolicy, &type metadata for RequirementFailurePolicy);
    atomic_store(result, (unint64_t *)&qword_1EE443A70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RequirementFailurePolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CFB3028 + 4 * byte_19D0698F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CFB305C + 4 * byte_19D0698F0[v4]))();
}

uint64_t sub_19CFB305C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB3064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFB306CLL);
  return result;
}

uint64_t sub_19CFB3078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFB3080);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CFB3084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB308C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequirementFailurePolicy()
{
  return &type metadata for RequirementFailurePolicy;
}

void sub_19CFB30A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB30C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB30D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB30F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(__int128 *);
  __int128 v11;
  os_log_type_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  Swift::String v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  Swift::String v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[32];
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v10 = (void (*)(__int128 *))v46;
  if ((_QWORD)v46)
  {
    *(_QWORD *)&v46 = 0;
    *((_QWORD *)&v46 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    *(_QWORD *)&v43 = a5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43DF40);
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    v10(&v46);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v10);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43DF40);
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v11 = v46;
      v12 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v13 = sub_19CFDFF38();
      if (os_log_type_enabled(v13, v12))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        *(_QWORD *)&v46 = v15;
        *(_DWORD *)v14 = 136446722;
        v16 = sub_19CFE013C();
        sub_19CD37070(v16, v17, (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v14 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v43 = sub_19CD37070(v11, *((unint64_t *)&v11 + 1), (uint64_t *)&v46);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v13, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v15, -1, -1);
        MEMORY[0x1A1ADBE9C](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v18 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      v20 = v18;
      v52 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      v51 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v49 = a1;
      *((_QWORD *)&v49 + 1) = a2;
      v50 = a3;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v22 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
      v22[2] = v24 + 1;
      v25 = &v22[5 * v24];
      v26 = v46;
      v27 = v47;
      *((_BYTE *)v25 + 64) = v48;
      *((_OWORD *)v25 + 2) = v26;
      *((_OWORD *)v25 + 3) = v27;
      v52 = v22;
      sub_19CD3F190((uint64_t)&v49);
      v28._countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      v51 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v49 = a4;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v29 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_19CD40918(0, v29[2] + 1, 1, v29);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_19CD40918((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      v29[2] = v31 + 1;
      v32 = &v29[5 * v31];
      v33 = v46;
      v34 = v47;
      *((_BYTE *)v32 + 64) = v48;
      *((_OWORD *)v32 + 2) = v33;
      *((_OWORD *)v32 + 3) = v34;
      v52 = v29;
      sub_19CD3F190((uint64_t)&v49);
      v35._countAndFlagsBits = 0xD00000000000001BLL;
      v35._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v43 = a5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43DF40);
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v51 = MEMORY[0x1E0DEA968];
      v49 = v46;
      sub_19CD40794((uint64_t)&v49, (uint64_t)v45);
      v43 = 0u;
      v44 = 0u;
      sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
      v48 = 0;
      v46 = v43;
      v47 = v44;
      v36 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_19CD40918(0, v36[2] + 1, 1, v36);
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v36 = sub_19CD40918((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v36[2] = v38 + 1;
      v39 = &v36[5 * v38];
      v40 = v46;
      v41 = v47;
      *((_BYTE *)v39 + 64) = v48;
      *((_OWORD *)v39 + 2) = v40;
      *((_OWORD *)v39 + 3) = v41;
      v52 = v36;
      sub_19CD3F190((uint64_t)&v49);
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      *(_QWORD *)(v19 + 32) = v52;
      *(_QWORD *)&v46 = v20;
      LOBYTE(v43) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v43);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43DF40);
      sub_19CFE02E0();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      swift_release();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFB3A34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB3A58(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB3A74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v16)(__int128 *);
  __int128 v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  Swift::String v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  Swift::String v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  __int128 v45;
  __int128 v46;
  Swift::String v47;
  id v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[32];
  __int128 v52;
  __int128 v53;
  char v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v16 = (void (*)(__int128 *))v52;
  if ((_QWORD)v52)
  {
    *(_QWORD *)&v52 = 0;
    *((_QWORD *)&v52 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    v49 = v52;
    sub_19CFDF698();
    *(_QWORD *)&v53 = a7;
    *((_QWORD *)&v53 + 1) = a8;
    sub_19CFE02E0();
    sub_19CFDF698();
    v16(&v52);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v16);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v52 = 0;
      *((_QWORD *)&v52 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      v49 = v52;
      sub_19CFDF698();
      *(_QWORD *)&v52 = a5;
      *((_QWORD *)&v52 + 1) = a6;
      *(_QWORD *)&v53 = a7;
      *((_QWORD *)&v53 + 1) = a8;
      sub_19CFE02E0();
      sub_19CFDF698();
      v17 = v49;
      v18 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v19 = sub_19CFDFF38();
      if (os_log_type_enabled(v19, v18))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        *(_QWORD *)&v52 = v21;
        *(_DWORD *)v20 = 136446722;
        v22 = sub_19CFE013C();
        sub_19CD37070(v22, v23, (uint64_t *)&v52);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v20 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v49 = sub_19CD37070(v17, *((unint64_t *)&v17 + 1), (uint64_t *)&v52);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v19, v18, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v21, -1, -1);
        MEMORY[0x1A1ADBE9C](v20, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v24 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      v48 = v24;
      v58 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      v57 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v55 = a1;
      *((_QWORD *)&v55 + 1) = a2;
      v56 = a3;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v27 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_19CD40918(0, v27[2] + 1, 1, v27);
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
        v27 = sub_19CD40918((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v27[2] = v29 + 1;
      v30 = &v27[5 * v29];
      v31 = v52;
      v32 = v53;
      *((_BYTE *)v30 + 64) = v54;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      v58 = v27;
      sub_19CD3F190((uint64_t)&v55);
      v33._countAndFlagsBits = 58;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      v57 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v55 = a4;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v34 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v34[2] = v36 + 1;
      v37 = &v34[5 * v36];
      v38 = v52;
      v39 = v53;
      *((_BYTE *)v37 + 64) = v54;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      v58 = v34;
      sub_19CD3F190((uint64_t)&v55);
      v40._object = (void *)0x800000019D079950;
      v40._countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      *(_QWORD *)&v52 = 0;
      *((_QWORD *)&v52 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      v49 = v52;
      sub_19CFDF698();
      *(_QWORD *)&v52 = a5;
      *((_QWORD *)&v52 + 1) = a6;
      *(_QWORD *)&v53 = a7;
      *((_QWORD *)&v53 + 1) = a8;
      sub_19CFE02E0();
      sub_19CFDF698();
      v57 = MEMORY[0x1E0DEA968];
      v55 = v49;
      sub_19CD40794((uint64_t)&v55, (uint64_t)v51);
      v49 = 0u;
      v50 = 0u;
      sub_19CD40658((uint64_t)v51, (uint64_t)&v49);
      v54 = 0;
      v52 = v49;
      v53 = v50;
      v41 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_19CD40918(0, v41[2] + 1, 1, v41);
      v43 = v41[2];
      v42 = v41[3];
      if (v43 >= v42 >> 1)
        v41 = sub_19CD40918((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
      v41[2] = v43 + 1;
      v44 = &v41[5 * v43];
      v45 = v52;
      v46 = v53;
      *((_BYTE *)v44 + 64) = v54;
      *((_OWORD *)v44 + 2) = v45;
      *((_OWORD *)v44 + 3) = v46;
      v58 = v41;
      sub_19CD3F190((uint64_t)&v55);
      v47._countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      *(_QWORD *)(v25 + 32) = v58;
      *(_QWORD *)&v52 = v48;
      LOBYTE(v49) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v49);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

void sub_19CFB42F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB4318(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB1F18(a1, a2, a3, a4, a5, &qword_1ECEB1F10);
}

void sub_19CFB432C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB4348(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB4364(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB4380(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB439C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB43B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_19CFB15F8(a1, a2, a3, a4, a5);
}

void sub_19CFB43D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v12)(__int128 *);
  __int128 v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  Swift::String v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[32];
  __int128 v48;
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;

  if (qword_1EE43D788 != -1)
    swift_once();
  sub_19CFE0A6C();
  v12 = (void (*)(__int128 *))v48;
  if ((_QWORD)v48)
  {
    *(_QWORD *)&v48 = 0;
    *((_QWORD *)&v48 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    *(_QWORD *)&v45 = a5;
    *((_QWORD *)&v45 + 1) = a6;
    sub_19CFE02E0();
    sub_19CFDF698();
    v12(&v48);
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v12);
  }
  else
  {
    if (qword_1EE43D780 != -1)
      swift_once();
    if (byte_1EE443A48 == 1)
    {
      *(_QWORD *)&v48 = 0;
      *((_QWORD *)&v48 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v45 = a5;
      *((_QWORD *)&v45 + 1) = a6;
      sub_19CFE02E0();
      sub_19CFDF698();
      v13 = v48;
      v14 = sub_19CFDFD40();
      sub_19CCE5204(0, (unint64_t *)&qword_1ECEB32E8);
      swift_bridgeObjectRetain();
      v15 = sub_19CFDFF38();
      if (os_log_type_enabled(v15, v14))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_QWORD *)&v48 = v17;
        *(_DWORD *)v16 = 136446722;
        v18 = sub_19CFE013C();
        sub_19CD37070(v18, v19, (uint64_t *)&v48);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2050;
        sub_19CFDFFC8();
        *(_WORD *)(v16 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v45 = sub_19CD37070(v13, *((unint64_t *)&v13 + 1), (uint64_t *)&v48);
        sub_19CFDFFC8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19CCBB000, v15, v14, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1A1ADBE9C](v17, -1, -1);
        MEMORY[0x1A1ADBE9C](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else if (byte_1EE443A48 == 2)
    {
      if (qword_1EE43BE78 != -1)
        swift_once();
      v20 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_19D0522A0;
      v22 = v20;
      v54 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      v53 = MEMORY[0x1E0DEC348];
      *(_QWORD *)&v51 = a1;
      *((_QWORD *)&v51 + 1) = a2;
      v52 = a3;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v24 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_19CD40918(0, v24[2] + 1, 1, v24);
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
        v24 = sub_19CD40918((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
      v24[2] = v26 + 1;
      v27 = &v24[5 * v26];
      v28 = v48;
      v29 = v49;
      *((_BYTE *)v27 + 64) = v50;
      *((_OWORD *)v27 + 2) = v28;
      *((_OWORD *)v27 + 3) = v29;
      v54 = v24;
      sub_19CD3F190((uint64_t)&v51);
      v30._countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      v53 = MEMORY[0x1E0DEBB98];
      *(_QWORD *)&v51 = a4;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v31 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
      v33 = v31[2];
      v32 = v31[3];
      if (v33 >= v32 >> 1)
        v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
      v31[2] = v33 + 1;
      v34 = &v31[5 * v33];
      v35 = v48;
      v36 = v49;
      *((_BYTE *)v34 + 64) = v50;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      v54 = v31;
      sub_19CD3F190((uint64_t)&v51);
      v37._countAndFlagsBits = 0xD00000000000001BLL;
      v37._object = (void *)0x800000019D079950;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      *(_QWORD *)&v48 = 0;
      *((_QWORD *)&v48 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      *(_QWORD *)&v45 = a5;
      *((_QWORD *)&v45 + 1) = a6;
      sub_19CFE02E0();
      sub_19CFDF698();
      v53 = MEMORY[0x1E0DEA968];
      v51 = v48;
      sub_19CD40794((uint64_t)&v51, (uint64_t)v47);
      v45 = 0u;
      v46 = 0u;
      sub_19CD40658((uint64_t)v47, (uint64_t)&v45);
      v50 = 0;
      v48 = v45;
      v49 = v46;
      v38 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
      v40 = v38[2];
      v39 = v38[3];
      if (v40 >= v39 >> 1)
        v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
      v38[2] = v40 + 1;
      v41 = &v38[5 * v40];
      v42 = v48;
      v43 = v49;
      *((_BYTE *)v41 + 64) = v50;
      *((_OWORD *)v41 + 2) = v42;
      *((_OWORD *)v41 + 3) = v43;
      v54 = v38;
      sub_19CD3F190((uint64_t)&v51);
      v44._countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      *(_QWORD *)(v21 + 32) = v54;
      *(_QWORD *)&v48 = v22;
      LOBYTE(v45) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v45);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFE0340();
      __break(1u);
    }
  }
}

uint64_t JSONDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5, v6);
}

uint64_t JSONDictionary.isEmpty.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t JSONDictionary.count.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t JSONDictionary.map<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;

  v11 = v5[3];
  v12 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(a1, a2, a3, a4, a5, v11, v12);
}

uint64_t JSONDictionary.flatMap<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;

  v11 = v5[3];
  v12 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, a2, a3, a4, a5, v11, v12);
}

double static AutomationSemantics.artistDetail(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)&v14[0] = &unk_1E3DCF998;
  *((_QWORD *)&v14[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v10, (uint64_t)sub_19CD4D1F0, 0);
  v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (_QWORD *)(inited + 32));
  sub_19CD40794(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (_QWORD *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.albumDetail(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)&v14[0] = &unk_1E3DCF588;
  *((_QWORD *)&v14[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v10, (uint64_t)sub_19CD4D1F0, 0);
  v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (_QWORD *)(inited + 32));
  sub_19CD40794(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (_QWORD *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.episodePage(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)&v14[0] = &unk_1E3DCF5B8;
  *((_QWORD *)&v14[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v10, (uint64_t)sub_19CD4D1F0, 0);
  v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (_QWORD *)(inited + 32));
  sub_19CD40794(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (_QWORD *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v13;
  *a5 = v13;
  return result;
}

uint64_t sub_19CFB52B8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  const __CFAllocator *v5;
  const __CFData *v6;
  SecCertificateRef v7;
  void *v8;
  _BYTE *v9;
  __SecTrust *v11;
  SecKeyRef v12;
  SecKeyRef v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  const __CFString *v20;
  const __CFData *v21;
  const __CFData *v22;
  CFErrorRef v23;
  CFErrorRef *v24;
  _BYTE *v25;
  CFErrorRef error;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v6 = (const __CFData *)sub_19CFDEE58();
  v7 = SecCertificateCreateWithData(v5, v6);

  if (!v7)
  {
    sub_19CFB56CC();
    v8 = (void *)swift_allocError();
    *v9 = 0;
    swift_willThrow();
LABEL_4:
    error = 0;
    v27 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    sub_19CFE02E0();
    sub_19CF13494((uint64_t)error, v27);

    swift_bridgeObjectRelease();
    return 0;
  }
  v11 = sub_19CFB5750(v7);
  v12 = SecTrustCopyKey(v11);
  if (!v12)
  {
    sub_19CF13494(0xD00000000000002ALL, 0x800000019D07A450);
    sub_19CFB56CC();
    v8 = (void *)swift_allocError();
    *v16 = 0;
    swift_willThrow();

    goto LABEL_4;
  }
  v13 = v12;
  if (qword_1EE43C3D8 != -1)
    swift_once();
  if (!SecKeyIsAlgorithmSupported(v13, kSecKeyOperationTypeVerify, (SecKeyAlgorithm)qword_1EE43CCF8))
  {
    sub_19CFB56CC();
    v8 = (void *)swift_allocError();
    *v17 = 1;
    swift_willThrow();

    goto LABEL_4;
  }
  v14 = sub_19CFB588C(a2, a3);
  v18 = v14;
  v19 = v15;
  sub_19CD3BE5C(v14, v15);
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v27 = 0x800000019D07A480;
  sub_19CFDEE64();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CF1349C(0xD00000000000001FLL, 0x800000019D07A480);
  swift_bridgeObjectRelease();
  error = 0;
  v20 = (const __CFString *)qword_1EE43CCF8;
  v21 = (const __CFData *)sub_19CFDEE58();
  v22 = (const __CFData *)sub_19CFDEE58();
  LODWORD(v20) = SecKeyVerifySignature(v13, v20, v21, v22, &error);

  if (!(_DWORD)v20)
  {
    v23 = error;
    if (error)
    {
      type metadata accessor for CFError(0);
      sub_19CFB5A70();
      v8 = (void *)swift_allocError();
      *v24 = v23;
    }
    else
    {
      sub_19CFB56CC();
      v8 = (void *)swift_allocError();
      *v25 = 2;
    }
    swift_willThrow();
    sub_19CD3BE18(v18, v19);

    goto LABEL_4;
  }
  sub_19CD3BE18(v18, v19);

  return 1;
}

unint64_t sub_19CFB56CC()
{
  unint64_t result;

  result = qword_1EE443A80;
  if (!qword_1EE443A80)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetpackSignatureVerifierError, &type metadata for JetpackSignatureVerifierError);
    atomic_store(result, (unint64_t *)&qword_1EE443A80);
  }
  return result;
}

uint64_t sub_19CFB5710()
{
  uint64_t result;
  uint64_t v1;

  result = sub_19CCDBC4C((uint64_t)&unk_1E3DD6A20);
  qword_1EE43CCE8 = result;
  unk_1EE43CCF0 = v1;
  return result;
}

id sub_19CFB5738()
{
  qword_1EE43CCF8 = *MEMORY[0x1E0CD6DB0];
  return (id)qword_1EE43CCF8;
}

SecTrustRef sub_19CFB5750(void *a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  OSStatus v5;
  SecTrustRef v6;
  _BYTE *v7;
  SecTrustRef trust[2];

  trust[1] = *(SecTrustRef *)MEMORY[0x1E0C80C00];
  trust[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v2 + 32) = a1;
  sub_19CFDF878();
  type metadata accessor for SecCertificate(0);
  v3 = a1;
  v4 = (void *)sub_19CFDF854();
  swift_bridgeObjectRelease();
  v5 = SecTrustCreateWithCertificates(v4, 0, trust);

  v6 = trust[0];
  if (v5 || !trust[0])
  {
    sub_19CF13494(0xD00000000000002ELL, 0x800000019D07A4A0);
    sub_19CFB56CC();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();

  }
  return v6;
}

uint64_t sub_19CFB588C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  const void *v5;
  CC_SHA256_CTX *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;

  v5 = (const void *)swift_slowAlloc();
  v6 = (CC_SHA256_CTX *)swift_slowAlloc();
  CC_SHA256_Init(v6);
  while (1)
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) == 0)
    {
      v13 = sub_19CFDF8C0();
      *(_QWORD *)(v13 + 16) = 32;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 32) = 0u;
      CC_SHA256_Final((unsigned __int8 *)(v13 + 32), v6);
      v11 = sub_19CCDBC4C(v13);
      swift_bridgeObjectRelease();
LABEL_8:
      MEMORY[0x1A1ADBE9C](v6, -1, -1);
      MEMORY[0x1A1ADBE9C](v5, -1, -1);
      return v11;
    }
    v9 = a1[3];
    v10 = a1[4];
    v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v9);
    v12 = (*(uint64_t (**)(const void *, uint64_t, uint64_t, uint64_t))(v10 + 32))(v5, a2, v9, v10);
    if (v2)
      goto LABEL_8;
    if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12))
      break;
    CC_SHA256_Update(v6, v5, v12);
  }
  result = sub_19CFE0334();
  __break(1u);
  return result;
}

unint64_t sub_19CFB5A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE443A88;
  if (!qword_1EE443A88)
  {
    type metadata accessor for CFError(255);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB1C60], v1);
    atomic_store(result, (unint64_t *)&qword_1EE443A88);
  }
  return result;
}

uint64_t LocalizerPreferences.preferredPluralCategory(forCount:in:)()
{
  return 0;
}

uint64_t dispatch thunk of LocalizerPreferences.ignoreDefaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizerPreferences.preferredPluralCategory(forCount:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

BOOL static JetpackSignatureVerifierError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetpackSignatureVerifierError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetpackSignatureVerifierError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CFB5B74()
{
  unint64_t result;

  result = qword_1EE443A90;
  if (!qword_1EE443A90)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetpackSignatureVerifierError, &type metadata for JetpackSignatureVerifierError);
    atomic_store(result, (unint64_t *)&qword_1EE443A90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JetpackSignatureVerifierError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CFB5C04 + 4 * byte_19D0699D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CFB5C38 + 4 * asc_19D0699D0[v4]))();
}

uint64_t sub_19CFB5C38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB5C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFB5C48);
  return result;
}

uint64_t sub_19CFB5C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFB5C5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CFB5C60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB5C68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetpackSignatureVerifierError()
{
  return &type metadata for JetpackSignatureVerifierError;
}

void JSONObject.init(transcoding:)(void *a1)
{
  sub_19CE23FF0();

}

uint64_t static _AutomationID.covering(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v7 = MEMORY[0x1E0DEE9D8];
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t _AutomationID.attributes(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  return sub_19CD4C984(v4);
}

double _AutomationID.components(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  double result;
  __int128 v6;

  v6 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD4CE58(a1, (uint64_t)sub_19CD4D1F0, 0);
  result = *(double *)&v6;
  *a2 = v6;
  return result;
}

uint64_t static _AutomationID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if ((sub_19CDCC618(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0)
    return sub_19CDCC6DC(v2, v3);
  else
    return 0;
}

uint64_t _AutomationID.debugDescription.getter()
{
  _QWORD v1[2];

  sub_19CFE010C();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "_AutomationID(");
  _AutomationID.axElementID.getter();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1[0];
}

uint64_t sub_19CFB5EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if ((sub_19CDCC618(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0)
    return sub_19CDCC6DC(v2, v3);
  else
    return 0;
}

uint64_t AutomationAttribute.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomationAttribute.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AutomationAttribute.key.modify())()
{
  return nullsub_1;
}

uint64_t AutomationAttribute.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomationAttribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AutomationAttribute.value.modify())()
{
  return nullsub_1;
}

uint64_t AutomationAttribute.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_19CFE08E0();
  sub_19CFE08E0();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t AutomationAttribute.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFE08E0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  return sub_19CFE0910();
}

uint64_t sub_19CFB612C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFE08E0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  return sub_19CFE0910();
}

uint64_t sub_19CFB61C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CFDF650();
  if (!v1)
    return sub_19CFE08E0();
  sub_19CFE08E0();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CFB623C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFE08E0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  return sub_19CFE0910();
}

uint64_t _s9JetEngine19AutomationAttributeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_19CFE06A0(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_19CFE06A0() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_19CFB6370()
{
  unint64_t result;

  result = qword_1EE443A98;
  if (!qword_1EE443A98)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AutomationAttribute, &type metadata for AutomationAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE443A98);
  }
  return result;
}

uint64_t static CodableKindTable._defaultType.getter()
{
  return 0;
}

uint64_t dispatch thunk of static CodableKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static CodableKindTable._defaultType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static CodableKindTable._unknownTypeWrapper.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CodableKindTable._decode(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t Dependency.typeDescription.getter()
{
  return sub_19CFE0A90();
}

uint64_t Dependency._Personality.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static Dependency._Personality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Dependency._Personality.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CFB6620()
{
  unint64_t result;

  result = qword_1EE443AA0;
  if (!qword_1EE443AA0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Dependency._Personality, &type metadata for Dependency._Personality);
    atomic_store(result, (unint64_t *)&qword_1EE443AA0);
  }
  return result;
}

_QWORD *assignWithCopy for Dependency(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for Dependency(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t storeEnumTagSinglePayload for Dependency._Personality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CFB671C + 4 * byte_19D069C05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CFB6750 + 4 * asc_19D069C00[v4]))();
}

uint64_t sub_19CFB6750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB6758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFB6760);
  return result;
}

uint64_t sub_19CFB676C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFB6774);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CFB6778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB6780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Dependency._Personality()
{
  return &type metadata for Dependency._Personality;
}

__n128 CompoundAction.init(actionMetrics:subactions:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;

  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = a2;
  return result;
}

uint64_t sub_19CFB67AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F69746361627573;
  else
    return 0x654D6E6F69746361;
}

uint64_t sub_19CFB67F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CFB73B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CFB681C()
{
  sub_19CFB6AA4();
  return sub_19CFE0A48();
}

uint64_t sub_19CFB6844()
{
  sub_19CFB6AA4();
  return sub_19CFE0A54();
}

uint64_t CompoundAction.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443AA8);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFB6AA4();
  sub_19CFE09E8();
  if (!v2)
  {
    v23 = v5;
    v26 = 0;
    sub_19CE8C13C();
    v9 = v24;
    sub_19CFE0484();
    v10 = v25[0];
    if (!v25[0])
      v10 = MEMORY[0x1E0DEE9D8];
    v22 = v10;
    v11 = MEMORY[0x1E0DEE9E0];
    if (v25[0])
      v11 = v25[1];
    v21 = v11;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v12 = sub_19CFE09DC();
    v13 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v12);
    v15 = v14;
    swift_bridgeObjectRelease();
    if (v13)
      v16 = (ValueMetadata *)v13;
    else
      v16 = &type metadata for EmptyActionKindTable;
    if (v13)
      v17 = v15;
    else
      v17 = &off_1E3DD1128;
    LOBYTE(v25[0]) = 1;
    v18 = sub_19CFB6AE8((uint64_t)v16, (uint64_t)v8, (uint64_t)v25, (uint64_t)v16, (uint64_t)&type metadata for CompoundAction.CodingKeys, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v9);
    v19 = v21;
    *a2 = v22;
    a2[1] = v19;
    a2[2] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19CFB6AA4()
{
  unint64_t result;

  result = qword_1EE443AB0;
  if (!qword_1EE443AB0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069E08, &type metadata for CompoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443AB0);
  }
  return result;
}

uint64_t sub_19CFB6AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v7 = type metadata accessor for _CodeByKind_Many(0, a4, *(_QWORD *)(a6 + 8), a4);
  sub_19CFE04D8();
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _CodeByKind_Many<A>, v7);
  result = sub_19CFE04B4();
  if (!v6)
    return v9;
  return result;
}

uint64_t CompoundAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  _UNKNOWN **v11;
  ValueMetadata *v12;
  _UNKNOWN **v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE443AB8);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *((_QWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFB6AA4();
  sub_19CFE0A24();
  v17 = *v1;
  v18 = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = sub_19CFE09DC();
    v9 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v8);
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v9)
      v12 = (ValueMetadata *)v9;
    else
      v12 = &type metadata for EmptyActionKindTable;
    if (v9)
      v13 = v11;
    else
      v13 = &off_1E3DD1128;
    LOBYTE(v17) = 1;
    sub_19CFB6D58(v15, (uint64_t)v12, (uint64_t)v7, (uint64_t)&v17, (uint64_t)v12, (uint64_t)&type metadata for CompoundAction.CodingKeys, (uint64_t)v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v4);
}

uint64_t sub_19CFB6D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(_QWORD *)(a7 + 8);
  _CodeByKind_Many.init(wrappedValue:)();
  sub_19CFE0574();
  v10 = type metadata accessor for _CodeByKind_Many(0, a5, v8, v9);
  swift_bridgeObjectRetain();
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for _CodeByKind_Many<A>, v10);
  sub_19CFE0568();
  return swift_bridgeObjectRelease();
}

uint64_t CompoundAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 CompoundAction.actionMetrics.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*CompoundAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t CompoundAction.subactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompoundAction.subactions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CompoundAction.subactions.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CFB6EE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CompoundAction.init(from:)(a1, a2);
}

uint64_t sub_19CFB6EFC(_QWORD *a1)
{
  return CompoundAction.encode(to:)(a1);
}

uint64_t CompoundAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  _QWORD v24[2];
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32[5];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v33);
  *(_QWORD *)&v29 = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v33, (uint64_t *)&v29, v32);
  if (v3)
  {
    sub_19CD3E3F8(a1);
    return swift_bridgeObjectRelease();
  }
  v8 = v32[0];
  v9 = v32[1];
  JSONObject.subscript.getter(0x6F69746361627573, 0xEA0000000000736ELL, (uint64_t)v32);
  sub_19CDE0324((uint64_t)v32, (uint64_t)v26);
  v10 = v27;
  if (v27)
  {
    v11 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 120))(&v29, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    v12 = *((_QWORD *)&v30 + 1);
    v13 = sub_19CD3E3F8((uint64_t)v32);
    if (v12)
    {
      v25 = v9;
      v36 = v8;
      v24[1] = v24;
      v33 = v29;
      v34 = v30;
      v35 = v31;
      MEMORY[0x1E0C80A78](v13, v14);
      v23[2] = v6;
      v15 = *((_QWORD *)&v34 + 1);
      v16 = v35;
      __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
      v17 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 48);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360);
      v19 = v17(sub_19CFB71D4, v23, v18, v15, v16);
      sub_19CD3E3F8(a1);
      sub_19CE07F20((uint64_t)&v33);
      result = swift_bridgeObjectRelease();
      v22 = v25;
      *a3 = v36;
      a3[1] = v22;
      a3[2] = v19;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v26, &qword_1ECEB1328);
    v29 = 0u;
    v30 = 0u;
    v31 = 0;
    sub_19CD3E3F8((uint64_t)v32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CCECFE4((uint64_t)&v29, &qword_1EE43D068);
  sub_19CDC5494();
  swift_allocError();
  *(_OWORD *)v20 = xmmword_19D069CA0;
  v21 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v20 + 16) = 0x40000001E3DCBB10uLL;
  *(_QWORD *)(v20 + 24) = v21;
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

uint64_t sub_19CFB71D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CF266AC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CFB71EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return CompoundAction.init(deserializing:using:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CompoundAction()
{
  return &type metadata for CompoundAction;
}

uint64_t storeEnumTagSinglePayload for CompoundAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CFB725C + 4 * byte_19D069CB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CFB7290 + 4 * byte_19D069CB0[v4]))();
}

uint64_t sub_19CFB7290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB7298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CFB72A0);
  return result;
}

uint64_t sub_19CFB72AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CFB72B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CFB72B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CFB72C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CompoundAction.CodingKeys()
{
  return &type metadata for CompoundAction.CodingKeys;
}

unint64_t sub_19CFB72E0()
{
  unint64_t result;

  result = qword_1EE443AC0;
  if (!qword_1EE443AC0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069DE0, &type metadata for CompoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443AC0);
  }
  return result;
}

unint64_t sub_19CFB7328()
{
  unint64_t result;

  result = qword_1EE443AC8;
  if (!qword_1EE443AC8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069D50, &type metadata for CompoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443AC8);
  }
  return result;
}

unint64_t sub_19CFB7370()
{
  unint64_t result;

  result = qword_1EE443AD0;
  if (!qword_1EE443AD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D069D78, &type metadata for CompoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE443AD0);
  }
  return result;
}

uint64_t sub_19CFB73B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746361627573 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t Lazy.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_19CFDFF5C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v13 - v8, a1, v4, v7);
  sub_19CDF6428((uint64_t)v9, v4, v10, v11, &v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *a2 = v14;
  return result;
}

uint64_t Lazy.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_19CFDFF5C();
  v5 = type metadata accessor for LazyValueWrapper(0, v2, v3, v4);
  swift_retain();
  sub_19CDF67BC(v5, v6, v7, a1);
  return swift_release();
}

uint64_t Lazy.wrappedValue.setter(uint64_t a1)
{
  uint64_t v2;

  sub_19CFB80F4(a1);
  v2 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void (*Lazy.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = sub_19CFDFF5C();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  Lazy.wrappedValue.getter((uint64_t)v9);
  return sub_19CFB7710;
}

void sub_19CFB7710(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v4, v5);
    sub_19CFB80F4((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_19CFB80F4(*(_QWORD *)(*(_QWORD *)a1 + 40));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Lazy.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a1;
  v8[4] = a2;
  v9 = sub_19CFDFF5C();
  result = sub_19CDF6380((uint64_t)sub_19CFB816C, (uint64_t)v8, v9, v10, &v12);
  *a4 = v12;
  return result;
}

uint64_t sub_19CFB7844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = (uint64_t (*)(void))MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v8();
  if (!v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v10, a3);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a4, 0, 1, a3);
  }
  return result;
}

uint64_t Lazy.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_19CFDFF5C();
  v3 = type metadata accessor for LazyValueWrapper(0, v0, v1, v2);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LazyValueWrapper<A>, v3);
  sub_19CFE067C();
  return 0;
}

uint64_t Lazy<A>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = *(_QWORD *)(a2 + 16);
  v3 = sub_19CFDFF5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v10 - v6;
  Lazy.wrappedValue.getter((uint64_t)v10 - v6);
  v8 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_19CFDF4B8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v7, v2);
}

uint64_t sub_19CFB7A54(uint64_t a1, uint64_t a2)
{
  return Lazy<A>.encode(to:)(a1, a2);
}

uint64_t Lazy<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[2];
  uint64_t v16;

  v9 = *a2;
  sub_19CD3E448(a1, (uint64_t)v15);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = v15[1];
  *(_OWORD *)(v10 + 32) = v15[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v9;
  v12 = sub_19CFDFF5C();
  sub_19CDF6380((uint64_t)sub_19CFB81BC, v10, v12, v13, (uint64_t *)v15);
  result = sub_19CD3E3F8(a1);
  *a5 = *(_QWORD *)&v15[0];
  return result;
}

uint64_t sub_19CFB7B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void (*v10)(_BYTE *, _QWORD *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[40];

  sub_19CD3E448(a1, (uint64_t)v17);
  v14[0] = a2;
  v10 = *(void (**)(_BYTE *, _QWORD *, uint64_t, uint64_t))(a4 + 8);
  swift_bridgeObjectRetain();
  v10(v17, v14, a3, a4);
  if (!v5)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 0, 1, a3);
  swift_bridgeObjectRetain();
  sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)v17);
  swift_bridgeObjectRelease();
  sub_19CE3C5DC((uint64_t)v17, (uint64_t)v14);
  v11 = v15;
  if (v15)
  {
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a3, v5, v11, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_19CE3C624((uint64_t)v14);
  }
  swift_willThrow();
  return sub_19CE3C624((uint64_t)v17);
}

uint64_t sub_19CFB7C70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return Lazy<A>.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t static Lazy<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t);
  char v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(char *, uint64_t);
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38[1] = a4;
  v42 = a2;
  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v38[0] = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDFF5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v40 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2, v9);
  v11 = (char *)v38 - v10;
  v12 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v39 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)v38 - v18;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v38 - v22;
  type metadata accessor for Lazy(0, a3, v24, v25);
  Lazy.wrappedValue.getter((uint64_t)v23);
  Lazy.wrappedValue.getter((uint64_t)v19);
  v41 = TupleTypeMetadata2;
  v26 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v27(v11, v23, v7);
  v27(v26, v19, v7);
  v42 = v5;
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v28(v11, 1, a3) != 1)
  {
    v31 = v39;
    v27(v39, v11, v7);
    if (v28(v26, 1, a3) != 1)
    {
      v33 = v42;
      v34 = v38[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v42 + 32))(v38[0], v26, a3);
      v30 = sub_19CFDF548();
      v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v35(v34, a3);
      v36 = *(void (**)(char *, uint64_t))(v12 + 8);
      v36(v19, v7);
      v36(v23, v7);
      v35((uint64_t)v31, a3);
      v36(v11, v7);
      return v30 & 1;
    }
    v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    v32(v19, v7);
    v32(v23, v7);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v31, a3);
    goto LABEL_6;
  }
  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v19, v7);
  v29(v23, v7);
  if (v28(v26, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
    v30 = 0;
    return v30 & 1;
  }
  v29(v11, v7);
  v30 = 1;
  return v30 & 1;
}

uint64_t sub_19CFB7F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Lazy<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t Lazy<A>.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_19CFDFF5C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v6 - v3;
  Lazy.wrappedValue.getter((uint64_t)&v6 - v3);
  sub_19CFDFF74();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t Lazy<A>.hashValue.getter()
{
  sub_19CFE08C8();
  Lazy<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CFB8094()
{
  return Lazy<A>.hashValue.getter();
}

uint64_t sub_19CFB809C()
{
  return Lazy<A>.hash(into:)();
}

uint64_t sub_19CFB80A4()
{
  sub_19CFE08C8();
  Lazy<A>.hash(into:)();
  return sub_19CFE0910();
}

void sub_19CFB80F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_19CFDFF5C();
  v5 = type metadata accessor for LazyValueWrapper(0, v2, v3, v4);
  sub_19CDF6F58(a1, v5, v6, v7);
}

uint64_t sub_19CFB8148()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CFB816C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_19CFB7844(v1[3], v1[4], v1[2], a1);
}

uint64_t sub_19CFB8188()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CFB81BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_19CFB7B2C((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for Lazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Lazy);
}

uint64_t sub_19CFB81E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> Lazy<A>, a1, &v4);
}

uint64_t sub_19CFB8220@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  type metadata accessor for Lazy(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return Lazy.wrappedValue.getter(a4);
}

void sub_19CFB8268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Lazy(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_19CFB80F4(a1);
}

uint64_t sub_19CFB82A4()
{
  return 8;
}

_QWORD *sub_19CFB82B0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_19CFB82BC(uint64_t a1, uint64_t a2)
{
  _QWORD **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;

  v4 = (_QWORD **)(a1 + 24);
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v15)
      goto LABEL_14;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *(_QWORD *)(v5 + 8 * v7 + 32);
    v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 88);
    v11 = swift_retain();
    if ((v10(v11) & 1) == 0
      || (v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 104))(a2), (v10(v12) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_19CED5BF0(0, v8[2] + 1, 1, v8);
      v14 = v8[2];
      v13 = v8[3];
      if (v14 >= v13 >> 1)
        v8 = sub_19CED5BF0((_QWORD *)(v13 > 1), v14 + 1, 1, v8);
      v8[2] = v14 + 1;
      v8[v14 + 4] = v7;
    }
    ++v7;
    swift_release();
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  v15 = v8[2];
  if (!v15)
    return swift_bridgeObjectRelease();
LABEL_14:
  while (v15 <= v8[2])
  {
    v16 = v8[v15 + 3];
    swift_beginAccess();
    v17 = *v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_19CF81A28(v17);
      *v4 = v17;
    }
    v19 = v17[2];
    if (v16 >= v19)
      goto LABEL_22;
    v20 = v19 - 1;
    v21 = v19 - 1 - v16;
    if (v21 < 0)
      goto LABEL_23;
    --v15;
    memmove(&v17[v16 + 4], &v17[v16 + 5], 8 * v21);
    v17[2] = v20;
    *v4 = v17;
    swift_endAccess();
    swift_release();
    if (!v15)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CFB8520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[8];

  v5 = (_QWORD **)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v16)
      goto LABEL_14;
    return swift_bridgeObjectRelease();
  }
  v24[7] = v2;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v10 = *(_QWORD *)(v6 + 8 * v8 + 32);
    v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 88);
    v12 = swift_retain();
    if ((v11(v12) & 1) == 0
      || (v24[0] = a2, v13 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v10 + 104))(v24), (v11(v13) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_19CED5BF0(0, v9[2] + 1, 1, v9);
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
        v9 = sub_19CED5BF0((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v9[2] = v15 + 1;
      v9[v15 + 4] = v8;
    }
    ++v8;
    swift_release();
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  v16 = v9[2];
  if (!v16)
    return swift_bridgeObjectRelease();
LABEL_14:
  while (v16 <= v9[2])
  {
    v17 = v9[v16 + 3];
    swift_beginAccess();
    v18 = *v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v18 = sub_19CF81A64(v18);
      *v5 = v18;
    }
    v20 = v18[2];
    if (v17 >= v20)
      goto LABEL_22;
    v21 = v20 - 1;
    v22 = v20 - 1 - v17;
    if (v22 < 0)
      goto LABEL_23;
    --v16;
    memmove(&v18[v17 + 4], &v18[v17 + 5], 8 * v22);
    v18[2] = v21;
    *v5 = v18;
    swift_endAccess();
    swift_release();
    if (!v16)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CFB8788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[3];
  uint64_t v25;

  v25 = a3;
  v5 = (_QWORD **)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v16)
      goto LABEL_14;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v10 = *(_QWORD *)(v6 + 8 * v8 + 32);
    v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 88);
    v12 = swift_retain();
    if ((v11(v12) & 1) == 0
      || (v24[0] = a2,
          v24[1] = v25,
          v13 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v10 + 104))(v24),
          (v11(v13) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_19CED5BF0(0, v9[2] + 1, 1, v9);
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
        v9 = sub_19CED5BF0((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v9[2] = v15 + 1;
      v9[v15 + 4] = v8;
    }
    ++v8;
    swift_release();
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  v16 = v9[2];
  if (!v16)
    return swift_bridgeObjectRelease();
LABEL_14:
  while (v16 <= v9[2])
  {
    v17 = v9[v16 + 3];
    swift_beginAccess();
    v18 = *v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v18 = sub_19CF81AA0(v18);
      *v5 = v18;
    }
    v20 = v18[2];
    if (v17 >= v20)
      goto LABEL_22;
    v21 = v20 - 1;
    v22 = v20 - 1 - v17;
    if (v22 < 0)
      goto LABEL_23;
    --v16;
    memmove(&v18[v17 + 4], &v18[v17 + 5], 8 * v22);
    v18[2] = v21;
    *v5 = v18;
    swift_endAccess();
    swift_release();
    if (!v16)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t AppMetricsPresenter.AppStateEvent.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static AppMetricsPresenter.AppStateEvent.enter.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E65;
  a1[1] = 0xE500000000000000;
}

void static AppMetricsPresenter.AppStateEvent.exit.getter(_QWORD *a1@<X8>)
{
  *a1 = 1953069157;
  a1[1] = 0xE400000000000000;
}

uint64_t AppMetricsPresenter.AppStateEvent.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t static AppMetricsPresenter.AppStateEvent.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t AppMetricsPresenter.AppStateEvent.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t AppMetricsPresenter.__allocating_init(pipeline:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  AppMetricsPresenter.init(pipeline:)(a1);
  return v2;
}

_QWORD *AppMetricsPresenter.init(pipeline:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];
  uint64_t v15;
  _BYTE v16[40];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v2 = (_QWORD *)v1;
  sub_19CD50F74(a1, v1 + 16);
  *(_BYTE *)(v1 + 193) = 1;
  v4 = sub_19CE47260((uint64_t)&unk_1E3DCF3E0);
  swift_arrayDestroy();
  *(_QWORD *)(v1 + 200) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C768);
  v5 = swift_allocObject();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = v7;
  v2[26] = v5;
  sub_19CCD5B84(a1 + 112, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB1E50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A638);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CCD14C4(v14, (uint64_t)v17);
    v8 = v18;
    v9 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    v12 = v11;
    sub_19CD510B0(a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  else
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_19CD510B0(a1);
    sub_19CFB9344((uint64_t)v14);
    v10 = 0;
    v12 = 0;
  }
  v2[27] = v10;
  v2[28] = v12;
  return v2;
}

uint64_t AppMetricsPresenter.flushedEvents.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t AppMetricsPresenter.flushedEvents.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 200) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*AppMetricsPresenter.flushedEvents.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AppMetricsPresenter.onAppStateEvent.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall AppMetricsPresenter.didBecomeActive()()
{
  sub_19CFB905C((void (*)(unint64_t *))AppMetricsPresenter.didBecomeActive(using:));
}

Swift::Void __swiftcall AppMetricsPresenter.didBecomeActive(using:)(JetEngine::MetricsFieldsContext using)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = sub_19CFDF32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)using.storage._rawValue;
  sub_19CD48F8C();
  *v8 = sub_19CFDFDB8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(using.storage._rawValue) = sub_19CFDF344();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if (((uint64_t)using.storage._rawValue & 1) != 0)
  {
    if (*(_BYTE *)(v2 + 193) == 1)
    {
      v10 = *(_QWORD *)(v2 + 208);
      v11 = *(void **)(v10 + 16);
      objc_msgSend(v11, sel_lock);
      sub_19CFB8788(v10, 0x7265746E65, 0xE500000000000000);
      objc_msgSend(v11, sel_unlock);
      v13 = *(_QWORD *)(v2 + 216);
      v12 = *(_QWORD *)(v2 + 224);
      swift_beginAccess();
      v14 = *(_QWORD *)(v2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = sub_19CD19780(0x7265746E65, 0xE500000000000000, v14);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19D052350;
      *(_QWORD *)(inited + 32) = 0x707954746E657665;
      *(_QWORD *)(inited + 40) = 0xE900000000000065;
      v17 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 48) = 0x7265746E65;
      *(_QWORD *)(inited + 56) = 0xE500000000000000;
      *(_QWORD *)(inited + 72) = v17;
      *(_QWORD *)(inited + 80) = 1701869940;
      v18 = 0x68636E75616CLL;
      if (byte_1EE465C80)
        v18 = 0x746977536B736174;
      v19 = 0xE600000000000000;
      if (byte_1EE465C80)
        v19 = 0xEA00000000006863;
      *(_QWORD *)(inited + 120) = v17;
      *(_QWORD *)(inited + 88) = 0xE400000000000000;
      *(_QWORD *)(inited + 96) = v18;
      *(_QWORD *)(inited + 104) = v19;
      v20 = sub_19CD30650(inited);
      v21 = sub_19CE467A4((uint64_t)&unk_1E3DCF3B0);
      swift_arrayDestroy();
      v24[0] = v13;
      v24[1] = v12;
      v25 = v15 & 1;
      v26 = v20;
      v27 = v21;
      v28 = MEMORY[0x1E0DEE9E8];
      v23 = v9;
      MetricsPipeline.process(_:using:)((uint64_t)v24, &v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      *(_BYTE *)(v2 + 193) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall AppMetricsPresenter.didResignActive()()
{
  sub_19CFB905C((void (*)(unint64_t *))AppMetricsPresenter.didResignActive(using:));
}

uint64_t sub_19CFB905C(void (*a1)(unint64_t *))
{
  unint64_t v3;

  v3 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  a1(&v3);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall AppMetricsPresenter.didResignActive(using:)(JetEngine::MetricsFieldsContext using)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_19CFDF32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)using.storage._rawValue;
  sub_19CD48F8C();
  *v8 = sub_19CFDFDB8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(using.storage._rawValue) = sub_19CFDF344();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if (((uint64_t)using.storage._rawValue & 1) != 0)
  {
    v10 = *(_QWORD *)(v2 + 208);
    v11 = *(void **)(v10 + 16);
    objc_msgSend(v11, sel_lock);
    sub_19CFB8788(v10, 1953069157, 0xE400000000000000);
    objc_msgSend(v11, sel_unlock);
    v13 = *(_QWORD *)(v2 + 216);
    v12 = *(_QWORD *)(v2 + 224);
    swift_beginAccess();
    v14 = *(_QWORD *)(v2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v11) = sub_19CD19780(1953069157, 0xE400000000000000, v14);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = 0x707954746E657665;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 1953069157;
    *(_QWORD *)(inited + 56) = 0xE400000000000000;
    v16 = sub_19CD30650(inited);
    v19[0] = v13;
    v19[1] = v12;
    v20 = v11 & 1;
    v21 = v16;
    v22 = MEMORY[0x1E0DEE9E8];
    v23 = MEMORY[0x1E0DEE9E8];
    v18 = v9;
    MetricsPipeline.process(_:using:)((uint64_t)v19, &v18);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(_BYTE *)(v2 + 193) = 1;
    byte_1EE465C80 = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t AppMetricsPresenter.deinit()
{
  uint64_t v0;

  sub_19CD510B0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppMetricsPresenter.__deallocating_deinit()
{
  uint64_t v0;

  sub_19CD510B0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CFB9344(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_19CFB9388()
{
  unint64_t result;

  result = qword_1EE43C760;
  if (!qword_1EE43C760)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AppMetricsPresenter.AppStateEvent, &type metadata for AppMetricsPresenter.AppStateEvent);
    atomic_store(result, (unint64_t *)&qword_1EE43C760);
  }
  return result;
}

uint64_t type metadata accessor for AppMetricsPresenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppMetricsPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppMetricsPresenter.__allocating_init(pipeline:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for AppMetricsPresenter.AppStateEvent()
{
  return &type metadata for AppMetricsPresenter.AppStateEvent;
}

uint64_t sub_19CFB9474()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v6;
  _OWORD v7[2];
  _OWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = (void *)sub_19CFDF554();
  v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v1);

  if (!v2)
    return 0;
  sub_19CFE004C();
  swift_unknownObjectRelease();
  sub_19CD433C0(v7, v8);
  sub_19CD436B0((uint64_t)v8, (uint64_t)v7);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_19CD436B0((uint64_t)v8, (uint64_t)v7);
    sub_19CD16BB8();
    if (swift_dynamicCast())
    {
      v4 = objc_msgSend(v6, sel_stringValue);
      v3 = sub_19CFDF578();

      goto LABEL_6;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    return 0;
  }
  v3 = (uint64_t)v6;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v3;
}

uint64_t sub_19CFB95FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  JSONObject.dictionary.getter((uint64_t)&v8);
  if (*((_QWORD *)&v9 + 1))
  {
    result = sub_19CD3E3F8(a1);
    v5 = v9;
    *(_OWORD *)a2 = v8;
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v10;
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v8, &qword_1EE43C1C8);
    sub_19CDC5494();
    swift_allocError();
    v6 = MEMORY[0x1E0DEE9D8];
    *v7 = &type metadata for LocalizedStringsContainerJSONObject;
    v7[1] = v6;
    v7[2] = 0;
    v7[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerJSONObject()
{
  return &type metadata for LocalizedStringsContainerJSONObject;
}

uint64_t sub_19CFB96CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v3 + 40);
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      v10 = *(v5 - 1);
      v11 = *v5;
      v12 = v10 == 0x74616D726F66 && v11 == 0xE600000000000000;
      if (!v12 && (sub_19CFE06A0() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19CD3C8F8(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        if (v8 >= v7 >> 1)
          sub_19CD3C8F8(v7 > 1, v8 + 1, 1);
        *(_QWORD *)(v6 + 16) = v8 + 1;
        v9 = v6 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v10;
        *(_QWORD *)(v9 + 40) = v11;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v6;
}

_QWORD *sub_19CFB9824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[5];
  _OWORD v23[2];
  uint64_t v24;

  v9 = v4[3];
  v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v22, a3, a4, v9, v10);
  v11 = v22;
  JSONObject.dictionary.getter((uint64_t)&v19);
  sub_19CD3E3F8((uint64_t)v22);
  if (*((_QWORD *)&v20 + 1))
  {
    v23[0] = v19;
    v23[1] = v20;
    v12 = v21;
    v24 = v21;
    v13 = *((_QWORD *)&v20 + 1);
    __swift_project_boxed_opaque_existential_1(v23, *((uint64_t *)&v20 + 1));
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24))(v22, a1, a2, v13, v12);
    sub_19CDE0324((uint64_t)v22, (uint64_t)&v19);
    v14 = *((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v15 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      v11 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v19, &qword_1ECEB1328);
      v11 = 0;
    }
    sub_19CD3E3F8((uint64_t)v22);
    sub_19CDC6248((uint64_t)v23);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v19, &qword_1EE43C1C8);
    sub_19CDC5494();
    swift_allocError();
    *v16 = a3;
    v16[1] = a4;
    v17 = MEMORY[0x1E0DEE9D8];
    v16[2] = 0x40000001E3DCBF28uLL;
    v16[3] = v17;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v11;
}

uint64_t sub_19CFB99D8()
{
  return sub_19CFB96CC();
}

uint64_t sub_19CFB99FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

_QWORD *sub_19CFB9A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CFB9824(a1, a2, a3, a4);
}

uint64_t dispatch thunk of LanguageSource.fetchLanguages()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CE66350;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LanguageSource.locale(forLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

JetEngine::SwiftLogger __swiftcall SwiftLogger.init(name:)(JetEngine::SwiftLogger name)
{
  JetEngine::SwiftLogger *v1;

  *v1 = name;
  return name;
}

Swift::Void __swiftcall SwiftLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v3;
  _BYTE *v4;
  os_unfair_lock_s *v5;
  int v6;
  char has_internal_content;
  char v8;
  uint64_t v9;
  void *rawValue;
  uint64_t (*v11)@<X0>(uint64_t *@<X8>);
  uint64_t v12;

  v3 = *(unsigned __int8 *)withLevel;
  if (qword_1ECEB1958 != -1)
    swift_once();
  v4 = (char *)off_1ECEB1948 + 16;
  v5 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19CD3EA18(v4, &rawValue);
  os_unfair_lock_unlock(v5);
  v6 = rawValue;
  swift_release();
  if (v6 == 2)
    has_internal_content = os_variant_has_internal_content();
  else
    has_internal_content = v6 & 1;
  v8 = has_internal_content ^ 1;
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = v8;
  rawValue = contentsOf._rawValue;
  v11 = sub_19CCBDD10;
  v12 = v9;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3310);
  sub_19CD420CC();
  sub_19CFDF4F4();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_19D0522A0;
  rawValue = 0;
  v11 = (uint64_t (*)@<X0>(uint64_t *@<X8>))0xE000000000000000;
  __asm { BR              X9 }
}

uint64_t sub_19CFB9D54()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SwiftLogger()
{
  return &type metadata for SwiftLogger;
}

void sub_19CFB9D78(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void (*v16)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[3];
  __int128 v23;
  char v24;
  _BYTE v25[80];
  id v26[5];
  char v27;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v26, (uint64_t *)&unk_1EE443AE0);
  if (v27 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v27)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v26[0];
    sub_19CD3E448(a1, (uint64_t)v25);
    v25[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v25, v1 + 24, (uint64_t *)&unk_1EE443AE0);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v25, (uint64_t *)&unk_1EE440C80);
        sub_19CCF8C5C((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1EE440C80);
        v10 = v22[0];
        if ((v24 & 1) != 0)
        {
          sub_19CD3E448(a1, (uint64_t)&v19);
          v7 = *(_QWORD *)(*(_QWORD *)(v10 + 64) + 40);
          v8 = v21;
          v9 = v20;
          *(_OWORD *)v7 = v19;
          *(_OWORD *)(v7 + 16) = v9;
          *(_QWORD *)(v7 + 32) = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          v11 = v22[1];
          swift_release();
          sub_19CCD14C4(&v23, (uint64_t)&v19);
          v13 = *((_QWORD *)&v20 + 1);
          v12 = v21;
          __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
          sub_19CD3E448(a1, (uint64_t)v17);
          v14 = swift_allocObject();
          *(_QWORD *)(v14 + 16) = v10;
          *(_QWORD *)(v14 + 24) = v11;
          v15 = v17[1];
          *(_OWORD *)(v14 + 32) = v17[0];
          *(_OWORD *)(v14 + 48) = v15;
          *(_QWORD *)(v14 + 64) = v18;
          v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v16(sub_19CD17114, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        }
        sub_19CCECFE4((uint64_t)v25, (uint64_t *)&unk_1EE440C80);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBA00C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v28[4];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  __int128 v33;
  char v34;
  _BYTE v35[80];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 56) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(_BYTE *)(v4 + 56))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD **)(v4 + 24);
    v7 = *(_QWORD *)(v4 + 32);
    v8 = *(_QWORD *)(v4 + 40);
    v9 = *(_QWORD *)(v4 + 48);
    *(_QWORD *)(v4 + 24) = a1;
    *(_QWORD *)(v4 + 32) = a2;
    *(_QWORD *)(v4 + 40) = a3;
    *(_QWORD *)(v4 + 48) = a4;
    *(_BYTE *)(v4 + 56) = 1;
    sub_19CEBEF00(v6, v7, v8, v9, 0);
    sub_19CDB390C(a1, a2);
    sub_19CDC30E0(v6, v7, v8, v9, 0);
    os_unfair_lock_unlock(v5);
    v10 = v6[2];
    if (v10)
    {
      v21 = v9;
      v22 = v8;
      v11 = (uint64_t)(v6 + 4);
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v35, &qword_1EE43E4D0);
        sub_19CCF8C5C((uint64_t)v35, (uint64_t)v32, &qword_1EE43E4D0);
        v12 = v32[0];
        if ((v34 & 1) != 0)
        {
          v29[0] = a1;
          v29[1] = a2;
          v29[2] = a3;
          v30 = a4;
          sub_19CDB390C(a1, a2);
          sub_19CFC3BA0((uint64_t)v29, *(_OWORD **)(*(_QWORD *)(v12 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v13 = v32[1];
          swift_release();
          sub_19CCD14C4(&v33, (uint64_t)v29);
          v14 = v31;
          v23 = v30;
          __swift_project_boxed_opaque_existential_1(v29, v30);
          v28[0] = a1;
          v28[1] = a2;
          v28[2] = a3;
          v28[3] = a4;
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = v12;
          *(_QWORD *)(v15 + 24) = v13;
          sub_19CFC3BA0((uint64_t)v28, (_OWORD *)(v15 + 32));
          v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
          sub_19CDB390C(a1, a2);
          swift_retain();
          v16(sub_19CFC3BE0, v15, v23, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        }
        sub_19CCECFE4((uint64_t)v35, &qword_1EE43E4D0);
        v11 += 80;
        --v10;
      }
      while (v10);
      v18 = v7;
      v17 = v6;
      v20 = v21;
      v19 = v22;
    }
    else
    {
      v17 = v6;
      v18 = v7;
      v19 = v8;
      v20 = v9;
    }
    sub_19CDC30E0(v17, v18, v19, v20, 0);
  }
}

void sub_19CFBA2D8(void *a1)
{
  sub_19CCFA0B8(a1, &qword_1EE440D60, (uint64_t)&unk_1E3DEEBB8, (uint64_t)sub_19CD1895C);
}

void sub_19CFBA2F4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  __int128 v16;
  char v17;
  _BYTE v18[80];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  if (*(_BYTE *)(v0 + 32) == 3)
  {
    os_unfair_lock_unlock(v1);
  }
  else if (*(_BYTE *)(v0 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    v3 = (void *)swift_bridgeObjectRetain();
    sub_19CDC2EE0(v3, 0);
    os_unfair_lock_unlock(v1);
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
    {
      v5 = v2 + 32;
      do
      {
        sub_19CCF8C5C(v5, (uint64_t)v18, &qword_1EE43D300);
        sub_19CCF8C5C((uint64_t)v18, (uint64_t)v15, &qword_1EE43D300);
        v6 = v15[0];
        if ((v17 & 1) != 0)
        {
          swift_continuation_throwingResume();
        }
        else
        {
          v7 = v15[1];
          swift_release();
          sub_19CCD14C4(&v16, (uint64_t)v12);
          v8 = v13;
          v9 = v14;
          __swift_project_boxed_opaque_existential_1(v12, v13);
          v10 = swift_allocObject();
          *(_QWORD *)(v10 + 16) = v6;
          *(_QWORD *)(v10 + 24) = v7;
          v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v11(sub_19CF30C7C, v10, v8, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
        }
        sub_19CCECFE4((uint64_t)v18, &qword_1EE43D300);
        v5 += 80;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBA4F4(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 1;
    v5 = (void *)swift_bridgeObjectRetain();
    sub_19CDC2EE0(v5, 0);
    os_unfair_lock_unlock(v3);
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v7 = v4 + 32;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v20, (uint64_t *)&unk_1ECEB06F0);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1ECEB06F0);
        v8 = v17[0];
        if ((v19 & 1) != 0)
        {
          **(_QWORD **)(*(_QWORD *)(v17[0] + 64) + 40) = a1;
          swift_continuation_throwingResume();
        }
        else
        {
          v9 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)v14);
          v11 = v15;
          v10 = v16;
          __swift_project_boxed_opaque_existential_1(v14, v15);
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = v8;
          v12[3] = v9;
          v12[4] = a1;
          v13 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v10 + 8);
          swift_retain();
          v13(sub_19CD1895C, v12, v11, v10);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        }
        sub_19CCECFE4((uint64_t)v20, (uint64_t *)&unk_1ECEB06F0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBA710(void *a1)
{
  sub_19CFBA72C(a1, &qword_1ECEB0538, (uint64_t)&unk_1E3DEE140, (uint64_t)sub_19CD1895C);
}

void sub_19CFBA72C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v18;
  id v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  char v26;
  _BYTE v27[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 1;
    sub_19CD49D18(v8, 0);
    v20 = a1;
    sub_19CD4A238(v8, 0);
    os_unfair_lock_unlock(v7);
    v9 = v8[2];
    if (v9)
    {
      v10 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v10, (uint64_t)v27, a2);
        sub_19CCF8C5C((uint64_t)v27, (uint64_t)v24, a2);
        v12 = v24[0];
        if ((v26 & 1) != 0)
        {
          **(_QWORD **)(*(_QWORD *)(v24[0] + 64) + 40) = v20;
          v11 = v20;
          swift_continuation_throwingResume();
        }
        else
        {
          v13 = v24[1];
          swift_release();
          sub_19CCD14C4(&v25, (uint64_t)v21);
          v15 = v22;
          v14 = v23;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          v16 = (_QWORD *)swift_allocObject();
          v16[2] = v12;
          v16[3] = v13;
          v16[4] = v20;
          v17 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v18 = v20;
          swift_retain();
          v17(a4, v16, v15, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        }
        sub_19CCECFE4((uint64_t)v27, a2);
        v10 += 80;
        --v9;
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBA958(void *a1)
{
  sub_19CFBA72C(a1, (uint64_t *)&unk_1EE440CA0, (uint64_t)&unk_1E3DEDA60, (uint64_t)sub_19CF30B44);
}

void sub_19CFBA974(uint64_t a1)
{
  sub_19CFBF634(a1, &qword_1EE441050, (uint64_t)&unk_1E3DED970, (uint64_t)sub_19CD1895C);
}

void sub_19CFBA990(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for MTMetricsIdentifier();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E3B0);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, (uint64_t *)&unk_1EE43E3B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v10, v15, (uint64_t *)&unk_1EE43E3B0);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, (uint64_t *)&unk_1EE440C90);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1EE440C90);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC2A64, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, (uint64_t *)&unk_1EE440C90);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBAD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(_BYTE *)(v2 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD **)(v2 + 24);
    v6 = *(_QWORD *)(v2 + 32);
    v16 = a1;
    *(_QWORD *)(v2 + 24) = a1;
    *(_QWORD *)(v2 + 32) = a2;
    *(_BYTE *)(v2 + 40) = 1;
    sub_19CEBE61C(v5, v6, 0);
    swift_bridgeObjectRetain();
    sub_19CDC2CA4(v5, v6, 0);
    os_unfair_lock_unlock(v4);
    v7 = v5[2];
    if (v7)
    {
      v8 = (uint64_t)(v5 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v24, &qword_1EE43E3F0);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, &qword_1EE43E3F0);
        v10 = v21[0];
        if ((v23 & 1) != 0)
        {
          v9 = *(_QWORD **)(*(_QWORD *)(v21[0] + 64) + 40);
          *v9 = a1;
          v9[1] = a2;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          v11 = v21[1];
          swift_release();
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v12 = v19;
          v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v10;
          v14[3] = v11;
          v14[4] = a1;
          v14[5] = a2;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v15(sub_19CFC2C8C, v14, v12, v13);
          a1 = v16;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, &qword_1EE43E3F0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBAFC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  _QWORD *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, char *, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  _BYTE v47[48];
  _BYTE v48[48];

  v42 = sub_19CFDE90C();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42, v3);
  v35 = v4;
  v40 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E0);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (id *)((char *)&v32 - v11);
  v13 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v13);
  v14 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v14, (uint64_t)v12, &qword_1ECEB15E0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v13);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v16 = *v12;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v17(v8, a1, v42);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v8, v14, &qword_1ECEB15E0);
    swift_endAccess();
    os_unfair_lock_unlock(v13);
    v18 = v16[2];
    if (v18)
    {
      v32 = v16;
      v19 = (uint64_t)(v16 + 4);
      v33 = (__int128 *)v47;
      v34 = a1;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v48, (uint64_t *)&unk_1EE43CF60);
        sub_19CCF8C5C((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1EE43CF60);
        v22 = v46[0];
        if ((v47[40] & 1) != 0)
        {
          v20 = v40;
          v21 = v42;
          v17(v40, a1, v42);
          (*(void (**)(_QWORD, char *, uint64_t))(v41 + 32))(*(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), v20, v21);
          swift_continuation_throwingResume();
        }
        else
        {
          v38 = v46[1];
          swift_release();
          sub_19CCD14C4(v33, (uint64_t)v43);
          v39 = v44;
          v36 = v45;
          v37 = __swift_project_boxed_opaque_existential_1(v43, v44);
          v23 = v40;
          v24 = v42;
          v17(v40, a1, v42);
          v25 = v17;
          v26 = v41;
          v27 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v38;
          v29 = *(void (**)(unint64_t, char *, uint64_t))(v26 + 32);
          v17 = v25;
          v29(v28 + v27, v23, v24);
          v30 = v36;
          v31 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v36 + 8);
          swift_retain();
          v31(sub_19CFC3534, v28, v39, v30);
          a1 = v34;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
        }
        sub_19CCECFE4((uint64_t)v48, (uint64_t *)&unk_1EE43CF60);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBB3F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v2 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v2 + 24);
    v5 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 24) = a1;
    *(_QWORD *)(v2 + 32) = a2;
    *(_BYTE *)(v2 + 40) = 1;
    sub_19CFC33B4(v4, v5, 0, (uint64_t (*)(id))sub_19CD3BE5C);
    sub_19CD3BE5C(a1, a2);
    sub_19CFC33EC(v4, v5, 0, (void (*)(id))sub_19CD3BE18);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, &qword_1EE440CF0);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, &qword_1EE440CF0);
        v9 = v20[0];
        if ((v22 & 1) != 0)
        {
          sub_19CD3BE5C(a1, a2);
          v8 = *(uint64_t **)(*(_QWORD *)(v9 + 64) + 40);
          *v8 = a1;
          v8[1] = a2;
          swift_continuation_throwingResume();
        }
        else
        {
          v10 = v20[1];
          swift_release();
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v11 = v18;
          v12 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v13 = (_QWORD *)swift_allocObject();
          v13[2] = v9;
          v13[3] = v10;
          v13[4] = a1;
          v13[5] = a2;
          v14 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v12 + 8);
          sub_19CD3BE5C(a1, a2);
          swift_retain();
          v14(sub_19CD18398, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, &qword_1EE440CF0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBB650(void *a1)
{
  sub_19CFBA72C(a1, qword_1ECEB1C80, (uint64_t)&unk_1E3DEEAF0, (uint64_t)sub_19CD1895C);
}

void sub_19CFBB66C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];
  id v21[5];
  char v22;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1EE440CB0);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v21[0];
    sub_19CCD5B84(a1, (uint64_t)v20);
    v20[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1EE440CB0);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v20, (uint64_t *)&unk_1EE43E3D0);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1EE43E3D0);
        v7 = v17[0];
        if ((v19 & 1) != 0)
        {
          sub_19CCD5B84(a1, (uint64_t)&v14);
          sub_19CCD14C4(&v14, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v8 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)&v14);
          v10 = v15;
          v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19CCD5B84(a1, (uint64_t)v13);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v8;
          sub_19CCD14C4(v13, v11 + 32);
          v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19CD17114, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19CCECFE4((uint64_t)v20, (uint64_t *)&unk_1EE43E3D0);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBB8F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for JSSource();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B90);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, &qword_1EE436B90);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v9, v15, &qword_1EE436B90);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, &qword_1EE43E3F8);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, &qword_1EE43E3F8);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC327C, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, &qword_1EE43E3F8);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBBCC8(uint64_t a1)
{
  sub_19CFBE1C0(a1, &qword_1EE43E4B0, (uint64_t)&unk_1E3DEEAA0, (uint64_t)sub_19CD1895C);
}

void sub_19CFBBCE4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  void *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v19;
  id v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  __int128 v27;
  char v28;
  _BYTE v29[80];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(_BYTE *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(_BYTE *)(v3 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 32);
    v6 = *(void **)(v3 + 40);
    v8 = *(_QWORD **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = a1;
    *(_QWORD *)(v3 + 32) = a2;
    *(_QWORD *)(v3 + 40) = a3;
    *(_BYTE *)(v3 + 48) = 1;
    sub_19CEBEE38(v8, v7, v6, 0);
    sub_19CD3BE5C(a1, a2);
    v20 = a3;
    sub_19CDC2F04(v8, v7, v6, 0);
    os_unfair_lock_unlock(v5);
    v9 = v8[2];
    if (v9)
    {
      v10 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v10, (uint64_t)v29, &qword_1ECEB0920);
        sub_19CCF8C5C((uint64_t)v29, (uint64_t)v26, &qword_1ECEB0920);
        v13 = v26[0];
        if ((v28 & 1) != 0)
        {
          sub_19CD3BE5C(a1, a2);
          v11 = *(uint64_t **)(*(_QWORD *)(v13 + 64) + 40);
          *v11 = a1;
          v11[1] = a2;
          v11[2] = (uint64_t)a3;
          v12 = v20;
          swift_continuation_throwingResume();
        }
        else
        {
          v14 = v26[1];
          swift_release();
          sub_19CCD14C4(&v27, (uint64_t)v23);
          v15 = v24;
          v16 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          v17 = (_QWORD *)swift_allocObject();
          v17[2] = v13;
          v17[3] = v14;
          v17[4] = a1;
          v17[5] = a2;
          v17[6] = a3;
          v18 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v16 + 8);
          sub_19CD3BE5C(a1, a2);
          v19 = v20;
          swift_retain();
          v18(sub_19CFC2BCC, v17, v15, v16);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        }
        sub_19CCECFE4((uint64_t)v29, &qword_1ECEB0920);
        v10 += 80;
        --v9;
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBBF6C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];
  id v21[5];
  char v22;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v21, &qword_1EE43E480);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v21[0];
    sub_19CCD5B84(a1, (uint64_t)v20);
    v20[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v20, v1 + 24, &qword_1EE43E480);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v20, &qword_1EE43E488);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, &qword_1EE43E488);
        v7 = v17[0];
        if ((v19 & 1) != 0)
        {
          sub_19CCD5B84(a1, (uint64_t)&v14);
          sub_19CCD14C4(&v14, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v8 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)&v14);
          v10 = v15;
          v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19CCD5B84(a1, (uint64_t)v13);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v8;
          sub_19CCD14C4(v13, v11 + 32);
          v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19CD17114, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19CCECFE4((uint64_t)v20, &qword_1EE43E488);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBC1F0(uint64_t a1, char a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  __int128 v27;
  char v28;
  _BYTE v29[80];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 33) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(_BYTE *)(v2 + 33))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v6 = a2 & 1;
    v7 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = a1;
    v8 = *(unsigned __int8 *)(v2 + 32);
    *(_BYTE *)(v2 + 32) = v6;
    *(_BYTE *)(v2 + 33) = 1;
    v9 = (void *)swift_bridgeObjectRetain();
    sub_19CD234C4(v9, v8, 0);
    os_unfair_lock_unlock(v5);
    v10 = v7;
    v11 = *(_QWORD *)(v7 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      do
      {
        sub_19CCF8C5C(v12, (uint64_t)v29, &qword_1EE43E490);
        sub_19CCF8C5C((uint64_t)v29, (uint64_t)v26, &qword_1EE43E490);
        v13 = v26[0];
        if ((v28 & 1) != 0)
        {
          v22 = a1;
          v23 = v6 != 0;
          sub_19CFC3870(&v22, *(_QWORD *)(*(_QWORD *)(v26[0] + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v14 = v26[1];
          swift_release();
          sub_19CCD14C4(&v27, (uint64_t)&v22);
          v16 = v24;
          v15 = v25;
          __swift_project_boxed_opaque_existential_1(&v22, v24);
          v20 = a1;
          v21 = v6 != 0;
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v13;
          *(_QWORD *)(v17 + 24) = v14;
          sub_19CFC3870(&v20, v17 + 32);
          v18 = a1;
          v19 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v15 + 8);
          swift_retain();
          v19(sub_19CFC38D0, v17, v16, v15);
          a1 = v18;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
        }
        sub_19CCECFE4((uint64_t)v29, &qword_1EE43E490);
        v12 += 80;
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBC448(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for PageIntentInstrumentation();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E498);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, &qword_1EE43E498);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v9, v15, &qword_1EE43E498);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, (uint64_t *)&unk_1EE43E4A0);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1EE43E4A0);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC38D8, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, (uint64_t *)&unk_1EE43E4A0);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBC820(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  __int128 v19;
  char v20;
  _BYTE v21[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = a1 & 1;
    v5 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = v4;
    *(_BYTE *)(v1 + 32) = 1;
    v6 = (void *)swift_bridgeObjectRetain();
    sub_19CDC2EE0(v6, 0);
    os_unfair_lock_unlock(v3);
    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      v8 = v5 + 32;
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v21, &qword_1EE439CD0);
        sub_19CCF8C5C((uint64_t)v21, (uint64_t)v18, &qword_1EE439CD0);
        v9 = v18[0];
        if ((v20 & 1) != 0)
        {
          **(_BYTE **)(*(_QWORD *)(v18[0] + 64) + 40) = (_DWORD)v4 != 0;
          swift_continuation_throwingResume();
        }
        else
        {
          v10 = v18[1];
          swift_release();
          sub_19CCD14C4(&v19, (uint64_t)v15);
          v11 = v16;
          v12 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          v13 = swift_allocObject();
          *(_QWORD *)(v13 + 16) = v9;
          *(_QWORD *)(v13 + 24) = v10;
          *(_BYTE *)(v13 + 32) = (_DWORD)v4 != 0;
          v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v14(sub_19CFC32D8, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
        }
        sub_19CCECFE4((uint64_t)v21, &qword_1EE439CD0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBCA50(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  __int128 v19;
  char v20;
  _BYTE v21[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1 & 1;
    *(_BYTE *)(v1 + 32) = 1;
    v5 = (void *)swift_bridgeObjectRetain();
    sub_19CDC2EE0(v5, 0);
    os_unfair_lock_unlock(v3);
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v7 = v4 + 32;
      v8 = a1 & 1;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v21, &qword_1EE43BB60);
        sub_19CCF8C5C((uint64_t)v21, (uint64_t)v18, &qword_1EE43BB60);
        v9 = v18[0];
        if ((v20 & 1) != 0)
        {
          **(_BYTE **)(*(_QWORD *)(v18[0] + 64) + 40) = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          v10 = v18[1];
          swift_release();
          sub_19CCD14C4(&v19, (uint64_t)v15);
          v11 = v16;
          v12 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          v13 = swift_allocObject();
          *(_QWORD *)(v13 + 16) = v9;
          *(_QWORD *)(v13 + 24) = v10;
          *(_BYTE *)(v13 + 32) = v8;
          v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v14(sub_19CFC32D8, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
        }
        sub_19CCECFE4((uint64_t)v21, &qword_1EE43BB60);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBCC74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  __int128 v45;
  char v46;
  _BYTE v47[80];

  v2 = *a1;
  v39 = a1[2];
  v40 = a1[1];
  v3 = a1[4];
  v4 = a1[5];
  v37 = a1[6];
  v38 = a1[3];
  v35 = *((unsigned __int8 *)a1 + 64);
  v36 = a1[7];
  v33 = a1[10];
  v34 = a1[9];
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  v32 = a1[11];
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 120) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(_BYTE *)(v1 + 120))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v24 = *(_QWORD *)(v1 + 104);
    v25 = *(_QWORD *)(v1 + 112);
    v22 = *(_QWORD *)(v1 + 88);
    v23 = *(_QWORD *)(v1 + 96);
    v6 = *(_QWORD *)(v1 + 80);
    v7 = *(_QWORD *)(v1 + 64);
    v29 = v7;
    v30 = *(_QWORD *)(v1 + 72);
    v27 = *(_QWORD *)(v1 + 56);
    v8 = *(_QWORD *)(v1 + 40);
    v20 = v8;
    v21 = *(_QWORD *)(v1 + 48);
    v10 = *(_QWORD **)(v1 + 24);
    v9 = *(_QWORD *)(v1 + 32);
    v19 = v9;
    *(_QWORD *)(v1 + 24) = v2;
    *(_QWORD *)(v1 + 32) = v40;
    *(_QWORD *)(v1 + 40) = v39;
    *(_QWORD *)(v1 + 48) = v38;
    *(_QWORD *)(v1 + 56) = v3;
    *(_QWORD *)(v1 + 64) = v4;
    *(_QWORD *)(v1 + 72) = v37;
    *(_QWORD *)(v1 + 80) = v36;
    *(_QWORD *)(v1 + 88) = v35;
    *(_QWORD *)(v1 + 96) = v34;
    *(_QWORD *)(v1 + 104) = v33;
    *(_QWORD *)(v1 + 112) = v32;
    *(_BYTE *)(v1 + 120) = 1;
    v11 = v6;
    sub_19CEBECF4(v10, v9, v8, v21, v27, v7, v30, v6, v22, v23, v24, v25, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CDC2E30(v10, v19, v20, v21, v27, v29, v30, v11, v22, v23, v24, v25, 0);
    os_unfair_lock_unlock(v5);
    v12 = v10[2];
    if (v12)
    {
      v13 = (uint64_t)(v10 + 4);
      v26 = v2;
      do
      {
        sub_19CCF8C5C(v13, (uint64_t)v47, (uint64_t *)&unk_1ECEB03A0);
        sub_19CCF8C5C((uint64_t)v47, (uint64_t)v44, (uint64_t *)&unk_1ECEB03A0);
        v15 = v44[0];
        if ((v46 & 1) != 0)
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v44[0] + 64) + 40);
          *(_QWORD *)v14 = v2;
          *(_QWORD *)(v14 + 8) = v40;
          *(_QWORD *)(v14 + 16) = v39;
          *(_QWORD *)(v14 + 24) = v38;
          *(_QWORD *)(v14 + 32) = v3;
          *(_QWORD *)(v14 + 40) = v4;
          *(_QWORD *)(v14 + 48) = v37;
          *(_QWORD *)(v14 + 56) = v36;
          *(_BYTE *)(v14 + 64) = v35;
          *(_QWORD *)(v14 + 72) = v34;
          *(_QWORD *)(v14 + 80) = v33;
          *(_QWORD *)(v14 + 88) = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          v16 = v44[1];
          swift_release();
          sub_19CCD14C4(&v45, (uint64_t)v41);
          v17 = v43;
          v31 = v42;
          __swift_project_boxed_opaque_existential_1(v41, v42);
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = v15;
          *(_QWORD *)(v18 + 24) = v16;
          *(_QWORD *)(v18 + 32) = v2;
          *(_QWORD *)(v18 + 40) = v40;
          *(_QWORD *)(v18 + 48) = v39;
          *(_QWORD *)(v18 + 56) = v38;
          *(_QWORD *)(v18 + 64) = v3;
          *(_QWORD *)(v18 + 72) = v4;
          *(_QWORD *)(v18 + 80) = v37;
          *(_QWORD *)(v18 + 88) = v36;
          *(_BYTE *)(v18 + 96) = v35;
          *(_QWORD *)(v18 + 104) = v34;
          *(_QWORD *)(v18 + 112) = v33;
          *(_QWORD *)(v18 + 120) = v32;
          v28 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v17 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          v28(sub_19CFC3CD4, v18, v31, v17);
          v2 = v26;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
        }
        sub_19CCECFE4((uint64_t)v47, (uint64_t *)&unk_1ECEB03A0);
        v13 += 80;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBD058(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  _QWORD *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, char *, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  _BYTE v47[48];
  _BYTE v48[48];

  v42 = sub_19CFDEDE0();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42, v3);
  v35 = v4;
  v40 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (id *)((char *)&v32 - v11);
  v13 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v13);
  v14 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v14, (uint64_t)v12, &qword_1ECEB2418);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v13);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v16 = *v12;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v17(v8, a1, v42);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v8, v14, &qword_1ECEB2418);
    swift_endAccess();
    os_unfair_lock_unlock(v13);
    v18 = v16[2];
    if (v18)
    {
      v32 = v16;
      v19 = (uint64_t)(v16 + 4);
      v33 = (__int128 *)v47;
      v34 = a1;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v48, &qword_1EE43D310);
        sub_19CCF8C5C((uint64_t)v48, (uint64_t)v46, &qword_1EE43D310);
        v22 = v46[0];
        if ((v47[40] & 1) != 0)
        {
          v20 = v40;
          v21 = v42;
          v17(v40, a1, v42);
          (*(void (**)(_QWORD, char *, uint64_t))(v41 + 32))(*(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), v20, v21);
          swift_continuation_throwingResume();
        }
        else
        {
          v38 = v46[1];
          swift_release();
          sub_19CCD14C4(v33, (uint64_t)v43);
          v39 = v44;
          v36 = v45;
          v37 = __swift_project_boxed_opaque_existential_1(v43, v44);
          v23 = v40;
          v24 = v42;
          v17(v40, a1, v42);
          v25 = v17;
          v26 = v41;
          v27 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v38;
          v29 = *(void (**)(unint64_t, char *, uint64_t))(v26 + 32);
          v17 = v25;
          v29(v28 + v27, v23, v24);
          v30 = v36;
          v31 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v36 + 8);
          swift_retain();
          v31(sub_19CFC3238, v28, v39, v30);
          a1 = v34;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
        }
        sub_19CCECFE4((uint64_t)v48, &qword_1EE43D310);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBD48C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _BYTE v15[40];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  __int128 v20;
  char v21;
  _BYTE v22[80];
  id v23[5];
  char v24;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v23, (uint64_t *)&unk_1EE437350);
  if (v24 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v24)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v23[0];
    sub_19CCF8C5C(a1, (uint64_t)v22, &qword_1EE43C2D8);
    v22[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v22, v1 + 24, (uint64_t *)&unk_1EE437350);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4;
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v5 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v22, (uint64_t *)&unk_1EE437370);
        sub_19CCF8C5C((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1EE437370);
        v8 = v19[0];
        if ((v21 & 1) != 0)
        {
          sub_19CCF8C5C(a1, (uint64_t)v16, &qword_1EE43C2D8);
          sub_19CCC290C((uint64_t)v16, *(_QWORD *)(*(_QWORD *)(v8 + 64) + 40), &qword_1EE43C2D8);
          swift_continuation_throwingResume();
        }
        else
        {
          v9 = v19[1];
          swift_release();
          sub_19CCD14C4(&v20, (uint64_t)v16);
          v10 = v17;
          v11 = v18;
          __swift_project_boxed_opaque_existential_1(v16, v17);
          sub_19CCF8C5C(a1, (uint64_t)v15, &qword_1EE43C2D8);
          v12 = swift_allocObject();
          *(_QWORD *)(v12 + 16) = v8;
          *(_QWORD *)(v12 + 24) = v9;
          sub_19CCC290C((uint64_t)v15, v12 + 32, &qword_1EE43C2D8);
          v13 = a1;
          v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v11 + 8);
          swift_retain();
          v14(sub_19CD17114, v12, v10, v11);
          a1 = v13;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        }
        sub_19CCECFE4((uint64_t)v22, (uint64_t *)&unk_1EE437370);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBD738(void *a1)
{
  sub_19CFBA72C(a1, &qword_1EE437390, (uint64_t)&unk_1E3DEE398, (uint64_t)sub_19CD1895C);
}

void sub_19CFBD754(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];
  id v21[5];
  char v22;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1EE43E470);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v21[0];
    sub_19CCD5B84(a1, (uint64_t)v20);
    v20[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1EE43E470);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v20, (uint64_t *)&unk_1EE440D50);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1EE440D50);
        v7 = v17[0];
        if ((v19 & 1) != 0)
        {
          sub_19CCD5B84(a1, (uint64_t)&v14);
          sub_19CCD14C4(&v14, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v8 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)&v14);
          v10 = v15;
          v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19CCD5B84(a1, (uint64_t)v13);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v8;
          sub_19CCD14C4(v13, v11 + 32);
          v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19CD17114, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19CCECFE4((uint64_t)v20, (uint64_t *)&unk_1EE440D50);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBD9D8(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  void (*v15)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  __int128 v23;
  char v24;
  _BYTE v25[80];

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 1;
    sub_19CCF509C(v3, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    swift_bridgeObjectRetain();
    sub_19CD0CC48(v3, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v2);
    v4 = v3[2];
    if (v4)
    {
      v5 = (uint64_t)(v3 + 4);
      v6 = (uint64_t *)&unk_1EE43D1C0;
      v7 = &qword_1EE43CE08;
      do
      {
        sub_19CCF8C5C(v5, (uint64_t)v25, v6);
        sub_19CCF8C5C((uint64_t)v25, (uint64_t)v22, v6);
        v9 = v22[0];
        if ((v24 & 1) != 0)
        {
          v19[0] = a1;
          v8 = *(_QWORD *)(*(_QWORD *)(v22[0] + 64) + 40);
          swift_bridgeObjectRetain();
          sub_19CCC290C((uint64_t)v19, v8, v7);
          swift_continuation_throwingResume();
        }
        else
        {
          v10 = v22[1];
          swift_release();
          sub_19CCD14C4(&v23, (uint64_t)v19);
          v11 = v21;
          v16 = v20;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          v18 = a1;
          v12 = swift_allocObject();
          *(_QWORD *)(v12 + 16) = v9;
          *(_QWORD *)(v12 + 24) = v10;
          sub_19CCC290C((uint64_t)&v18, v12 + 32, v7);
          v13 = v7;
          v14 = v6;
          v15 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v11 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v15(sub_19CD1895C, v12, v16, v11);
          v6 = v14;
          v7 = v13;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19CCECFE4((uint64_t)v25, v6);
        v5 += 80;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBDC58(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  __int128 v24;
  char v25;
  _BYTE v26[80];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  id v33[10];
  char v34;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v33, (uint64_t *)&unk_1EE43E450);
  if (v34 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v34)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v33[0];
    sub_19CD60F34(a1, (uint64_t)&v27);
    v32 = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)&v27, v1 + 24, (uint64_t *)&unk_1EE43E450);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v26, (uint64_t *)&unk_1EE440D30);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_1EE440D30);
        v11 = v23[0];
        if ((v25 & 1) != 0)
        {
          sub_19CD60F34(a1, (uint64_t)&v27);
          v7 = *(_OWORD **)(*(_QWORD *)(v11 + 64) + 40);
          *v7 = v27;
          v9 = v30;
          v8 = v31;
          v10 = v29;
          v7[1] = v28;
          v7[2] = v10;
          v7[3] = v9;
          v7[4] = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          v12 = v23[1];
          swift_release();
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v14 = v21;
          v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          sub_19CD60F34(a1, (uint64_t)&v27);
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = v11;
          *(_QWORD *)(v15 + 24) = v12;
          v16 = v30;
          *(_OWORD *)(v15 + 64) = v29;
          *(_OWORD *)(v15 + 80) = v16;
          *(_OWORD *)(v15 + 96) = v31;
          v17 = v28;
          *(_OWORD *)(v15 + 32) = v27;
          *(_OWORD *)(v15 + 48) = v17;
          v18 = a1;
          v19 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 8);
          swift_retain();
          v19(sub_19CD17114, v15, v14, v13);
          a1 = v18;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, (uint64_t *)&unk_1EE440D30);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBDF04(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];
  id v21[5];
  char v22;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1EE43E460);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v21[0];
    sub_19CCD5B84(a1, (uint64_t)v20);
    v20[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1EE43E460);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v20, (uint64_t *)&unk_1EE440D40);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1EE440D40);
        v7 = v17[0];
        if ((v19 & 1) != 0)
        {
          sub_19CCD5B84(a1, (uint64_t)&v14);
          sub_19CCD14C4(&v14, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v8 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)&v14);
          v10 = v15;
          v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19CCD5B84(a1, (uint64_t)v13);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v8;
          sub_19CCD14C4(v13, v11 + 32);
          v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19CD17114, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19CCECFE4((uint64_t)v20, (uint64_t *)&unk_1EE440D40);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBE188(void *a1)
{
  sub_19CFBA72C(a1, (uint64_t *)&unk_1EE43E440, (uint64_t)&unk_1E3DEE5C8, (uint64_t)sub_19CD1895C);
}

void sub_19CFBE1A4(uint64_t a1)
{
  sub_19CFBE1C0(a1, qword_1EE443B00, (uint64_t)&unk_1E3DEE618, (uint64_t)sub_19CD1895C);
}

void sub_19CFBE1C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 1;
    sub_19CD0CCB8(v7, 0);
    swift_retain();
    sub_19CD0CC48(v7, 0, (void (*)(id))MEMORY[0x1E0DEEE30]);
    os_unfair_lock_unlock(v6);
    v8 = v7[2];
    if (v8)
    {
      v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v24, a2);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, a2);
        v10 = v21[0];
        if ((v23 & 1) != 0)
        {
          **(_QWORD **)(*(_QWORD *)(v21[0] + 64) + 40) = a1;
          swift_retain();
          swift_continuation_throwingResume();
        }
        else
        {
          v11 = v21[1];
          swift_release();
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v12 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v10;
          v14[3] = v11;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          swift_retain();
          v15(a4, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, a2);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBE3F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for JetPackAsset(0);
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E410);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, (uint64_t *)&unk_1EE43E410);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v9, type metadata accessor for JetPackAsset);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v9, v15, (uint64_t *)&unk_1EE43E410);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, (uint64_t *)&unk_1EE440D00);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1EE440D00);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, type metadata accessor for JetPackAsset);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), type metadata accessor for JetPackAsset);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, type metadata accessor for JetPackAsset);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, type metadata accessor for JetPackAsset);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC35D0, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, (uint64_t *)&unk_1EE440D00);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBE7D0(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void (*v17)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  __int128 v26;
  char v27;
  _BYTE v28[80];
  id v29[7];
  char v30;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v29, (uint64_t *)&unk_1EE43E430);
  if (v30 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v30)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v29[0];
    sub_19CCD6834(a1, (uint64_t)v28);
    v28[56] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v28, v1 + 24, (uint64_t *)&unk_1EE43E430);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v28, (uint64_t *)&unk_1EE440D20);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1EE440D20);
        v11 = v25[0];
        if ((v27 & 1) != 0)
        {
          sub_19CCD6834(a1, (uint64_t)&v21);
          v7 = *(_QWORD *)(*(_QWORD *)(v11 + 64) + 40);
          v8 = v21;
          v9 = v22;
          v10 = v23;
          *(_QWORD *)(v7 + 48) = v24;
          *(_OWORD *)(v7 + 16) = v9;
          *(_OWORD *)(v7 + 32) = v10;
          *(_OWORD *)v7 = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          v12 = v25[1];
          swift_release();
          sub_19CCD14C4(&v26, (uint64_t)v18);
          v14 = v19;
          v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_19CCD6834(a1, (uint64_t)&v21);
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = v11;
          *(_QWORD *)(v15 + 24) = v12;
          v16 = v22;
          *(_OWORD *)(v15 + 32) = v21;
          *(_OWORD *)(v15 + 48) = v16;
          *(_OWORD *)(v15 + 64) = v23;
          *(_QWORD *)(v15 + 80) = v24;
          v17 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 8);
          swift_retain();
          v17(sub_19CD17114, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v28, (uint64_t *)&unk_1EE440D20);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBEA78(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void (*v17)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  __int128 v26;
  char v27;
  _BYTE v28[80];
  id v29[7];
  char v30;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v29, (uint64_t *)&unk_1EE43E420);
  if (v30 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v30)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v29[0];
    sub_19CCD6780(a1, (uint64_t)v28);
    v28[56] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v28, v1 + 24, (uint64_t *)&unk_1EE43E420);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v28, (uint64_t *)&unk_1EE440D10);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1EE440D10);
        v11 = v25[0];
        if ((v27 & 1) != 0)
        {
          sub_19CCD6780(a1, (uint64_t)&v21);
          v7 = *(_QWORD *)(*(_QWORD *)(v11 + 64) + 40);
          v8 = v21;
          v9 = v22;
          v10 = v23;
          *(_QWORD *)(v7 + 48) = v24;
          *(_OWORD *)(v7 + 16) = v9;
          *(_OWORD *)(v7 + 32) = v10;
          *(_OWORD *)v7 = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          v12 = v25[1];
          swift_release();
          sub_19CCD14C4(&v26, (uint64_t)v18);
          v14 = v19;
          v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_19CCD6780(a1, (uint64_t)&v21);
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = v11;
          *(_QWORD *)(v15 + 24) = v12;
          v16 = v22;
          *(_OWORD *)(v15 + 32) = v21;
          *(_OWORD *)(v15 + 48) = v16;
          *(_OWORD *)(v15 + 64) = v23;
          *(_QWORD *)(v15 + 80) = v24;
          v17 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 8);
          swift_retain();
          v17(sub_19CD17114, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v28, (uint64_t *)&unk_1EE440D10);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBED20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for JSPackageIndex();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, (uint64_t *)&unk_1EE43E400);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageIndex);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v9, v15, (uint64_t *)&unk_1EE43E400);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, (uint64_t *)&unk_1EE443AF0);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1EE443AF0);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageIndex);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for JSPackageIndex);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageIndex);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for JSPackageIndex);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC3478, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, (uint64_t *)&unk_1EE443AF0);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBF0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  __int128 v24;
  char v25;
  _BYTE v26[80];

  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(_BYTE *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(_BYTE *)(v3 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v7 = *(_QWORD **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = a1;
    *(_QWORD *)(v3 + 32) = a2;
    *(_QWORD *)(v3 + 40) = a3;
    *(_BYTE *)(v3 + 48) = 1;
    sub_19CEBE998(v7, v6, v5, 0);
    sub_19CDC2D64(a1);
    swift_bridgeObjectRetain();
    sub_19CDC2CE0(v7, v6, v5, 0);
    os_unfair_lock_unlock(v4);
    v8 = v7[2];
    if (v8)
    {
      v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v26, &qword_1EE4371B0);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, &qword_1EE4371B0);
        v11 = v23[0];
        if ((v25 & 1) != 0)
        {
          sub_19CDC2D64(a1);
          v10 = *(uint64_t **)(*(_QWORD *)(v11 + 64) + 40);
          *v10 = a1;
          v10[1] = a2;
          v10[2] = a3;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          v12 = v23[1];
          swift_release();
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v13 = v21;
          v14 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v11;
          v15[3] = v12;
          v15[4] = a1;
          v15[5] = a2;
          v15[6] = a3;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          sub_19CDC2D64(a1);
          swift_bridgeObjectRetain();
          swift_retain();
          v16(sub_19CFC2BCC, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, &qword_1EE4371B0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBF380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  void (*v16)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD v20[2];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  char v26;
  _BYTE v27[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v2 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD **)(v2 + 24);
    v4 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 24) = a1;
    *(_QWORD *)(v2 + 32) = a2;
    *(_BYTE *)(v2 + 40) = 1;
    sub_19CFC33B4(v5, v4, 0, (uint64_t (*)(id))sub_19CDC2D64);
    sub_19CDC2D64(a1);
    sub_19CFC33EC(v5, v4, 0, (void (*)(id))sub_19CDC2D38);
    os_unfair_lock_unlock(v3);
    v6 = v5[2];
    if (v6)
    {
      v7 = (uint64_t)(v5 + 4);
      v8 = &qword_1EE436F88;
      v9 = (uint64_t *)&unk_1EE4371A0;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v27, v8);
        sub_19CCF8C5C((uint64_t)v27, (uint64_t)v24, v8);
        v10 = v24[0];
        if ((v26 & 1) != 0)
        {
          v21[0] = a1;
          v21[1] = a2;
          sub_19CDC2D64(a1);
          sub_19CCC290C((uint64_t)v21, *(_QWORD *)(*(_QWORD *)(v10 + 64) + 40), v9);
          swift_continuation_throwingResume();
        }
        else
        {
          v11 = v24[1];
          swift_release();
          sub_19CCD14C4(&v25, (uint64_t)v21);
          v12 = v23;
          v17 = v22;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          v20[0] = a1;
          v20[1] = a2;
          v13 = swift_allocObject();
          *(_QWORD *)(v13 + 16) = v10;
          *(_QWORD *)(v13 + 24) = v11;
          sub_19CCC290C((uint64_t)v20, v13 + 32, v9);
          v14 = v9;
          v15 = v8;
          v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          sub_19CDC2D64(a1);
          swift_retain();
          v16(sub_19CD18398, v13, v17, v12);
          v8 = v15;
          v9 = v14;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        }
        sub_19CCECFE4((uint64_t)v27, v8);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBF618(uint64_t a1)
{
  sub_19CFBF634(a1, &qword_1EE436F90, (uint64_t)&unk_1E3DEE208, (uint64_t)sub_19CD1895C);
}

void sub_19CFBF634(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 1;
    sub_19CCF509C(v7, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    swift_bridgeObjectRetain();
    sub_19CD0CC48(v7, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v6);
    v8 = v7[2];
    if (v8)
    {
      v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v24, a2);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, a2);
        v10 = v21[0];
        if ((v23 & 1) != 0)
        {
          **(_QWORD **)(*(_QWORD *)(v21[0] + 64) + 40) = a1;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          v11 = v21[1];
          swift_release();
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v12 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v10;
          v14[3] = v11;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v15(a4, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, a2);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBF874(void *a1)
{
  sub_19CFBA72C(a1, qword_1EE43B200, (uint64_t)&unk_1E3DEE0F0, (uint64_t)sub_19CD1895C);
}

void sub_19CFBF890(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;
  _BYTE v20[80];
  id v21[5];
  char v22;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1EE436B80);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v21[0];
    sub_19CCD5B84(a1, (uint64_t)v20);
    v20[40] = 1;
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1EE436B80);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v5 = v4[2];
    if (v5)
    {
      v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v6, (uint64_t)v20, &qword_1EE440CF8);
        sub_19CCF8C5C((uint64_t)v20, (uint64_t)v17, &qword_1EE440CF8);
        v7 = v17[0];
        if ((v19 & 1) != 0)
        {
          sub_19CCD5B84(a1, (uint64_t)&v14);
          sub_19CCD14C4(&v14, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          v8 = v17[1];
          swift_release();
          sub_19CCD14C4(&v18, (uint64_t)&v14);
          v10 = v15;
          v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19CCD5B84(a1, (uint64_t)v13);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v8;
          sub_19CCD14C4(v13, v11 + 32);
          v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19CD17114, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19CCECFE4((uint64_t)v20, &qword_1EE440CF8);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBFB14(uint64_t a1)
{
  sub_19CFBE1C0(a1, (uint64_t *)&unk_1EE43E3E0, (uint64_t)&unk_1E3DEDC68, (uint64_t)sub_19CD1895C);
}

void sub_19CFBFB30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  _BYTE v40[48];
  _BYTE v41[80];

  v3 = type metadata accessor for JSIntentResult();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v32 = v5;
  v35 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440CD8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (id *)((char *)v30 - v12);
  v14 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v15, (uint64_t)v13, &qword_1EE440CD8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v14);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v17 = *v13;
    sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19CD1A39C((uint64_t)v9, v15, &qword_1EE440CD8);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
    v18 = v17[2];
    if (v18)
    {
      v30[1] = v17;
      v19 = (uint64_t)(v17 + 4);
      v31 = (__int128 *)v40;
      v20 = v35;
      do
      {
        sub_19CCF8C5C(v19, (uint64_t)v41, (uint64_t *)&unk_1EE440CE0);
        sub_19CCF8C5C((uint64_t)v41, (uint64_t)v39, (uint64_t *)&unk_1EE440CE0);
        v22 = v39[0];
        if ((v40[40] & 1) != 0)
        {
          v21 = v35;
          sub_19CCFECEC(a1, v35, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
          sub_19CCFE8AC(v21, *(_QWORD *)(*(_QWORD *)(v22 + 64) + 40), (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
          swift_continuation_throwingResume();
        }
        else
        {
          v23 = v39[1];
          swift_release();
          sub_19CCD14C4(v31, (uint64_t)v36);
          v24 = v37;
          v25 = v38;
          v34 = __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_19CCFECEC(a1, v20, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
          v26 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
          v27 = a1;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v22;
          *(_QWORD *)(v28 + 24) = v23;
          sub_19CCFE8AC(v20, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
          v29 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v25 + 8);
          swift_retain();
          v29(sub_19CFC3220, v28, v24, v25);
          a1 = v27;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
        }
        sub_19CCECFE4((uint64_t)v41, (uint64_t *)&unk_1EE440CE0);
        v19 += 80;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CFBFF08(uint64_t a1)
{
  sub_19CFBF634(a1, (uint64_t *)&unk_1EE440CC8, (uint64_t)&unk_1E3DEDF10, (uint64_t)sub_19CD1895C);
}

void sub_19CFBFF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  __int128 v24;
  char v25;
  _BYTE v26[80];

  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(_BYTE *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(_BYTE *)(v3 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v7 = *(_QWORD **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = a1;
    *(_QWORD *)(v3 + 32) = a2;
    *(_QWORD *)(v3 + 40) = a3;
    *(_BYTE *)(v3 + 48) = 1;
    sub_19CEBE578(v7, v6, v5, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CDC2C40(v7, v6, v5, 0);
    os_unfair_lock_unlock(v4);
    v8 = v7[2];
    if (v8)
    {
      v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v26, (uint64_t *)&unk_1EE43E3C0);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_1EE43E3C0);
        v11 = v23[0];
        if ((v25 & 1) != 0)
        {
          v10 = *(_QWORD **)(*(_QWORD *)(v23[0] + 64) + 40);
          *v10 = a1;
          v10[1] = a2;
          v10[2] = a3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          v12 = v23[1];
          swift_release();
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v13 = v21;
          v14 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v11;
          v15[3] = v12;
          v15[4] = a1;
          v15[5] = a2;
          v15[6] = a3;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          v16(sub_19CFC2BCC, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, (uint64_t *)&unk_1EE43E3C0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CFC01C8(uint64_t a1)
{
  return sub_19CFC022C(a1, &qword_1EE440CC0, (uint64_t)&unk_1E3DEDB50, (void (*)(uint64_t))MEMORY[0x1E0DEEB18], (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC01EC(uint64_t a1)
{
  return sub_19CFC12AC(a1, &qword_1ECEB25B0, (uint64_t)&unk_1E3DED8A8, (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC0208(uint64_t a1)
{
  return sub_19CFC022C(a1, (uint64_t *)&unk_1ECEB06E0, (uint64_t)&unk_1E3DEDD80, (void (*)(uint64_t))MEMORY[0x1E0DEEED0], (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC022C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  __int128 v21;
  char v22;

  v8 = v5;
  sub_19CCF8C5C(v8, (uint64_t)v20, a2);
  v10 = v20[0];
  if ((v22 & 1) != 0)
  {
    **(_QWORD **)(*(_QWORD *)(v20[0] + 64) + 40) = a1;
    a4(a1);
    return swift_continuation_throwingResume();
  }
  else
  {
    v12 = v20[1];
    swift_release();
    sub_19CCD14C4(&v21, (uint64_t)v17);
    v13 = v18;
    v14 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v10;
    v15[3] = v12;
    v15[4] = a1;
    v16 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v14 + 8);
    a4(a1);
    swift_retain();
    v16(a5, v15, v13, v14);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

uint64_t sub_19CFC034C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v17[4];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  char v23;

  v5 = v4;
  sub_19CCF8C5C(v5, (uint64_t)v21, &qword_1EE43E4D0);
  v10 = v21[0];
  if ((v23 & 1) != 0)
  {
    v18[0] = a1;
    v18[1] = a2;
    v18[2] = a3;
    v19 = a4;
    sub_19CDB390C(a1, a2);
    sub_19CFC3BA0((uint64_t)v18, *(_OWORD **)(*(_QWORD *)(v10 + 64) + 40));
    return swift_continuation_throwingResume();
  }
  else
  {
    v12 = v21[1];
    swift_release();
    sub_19CCD14C4(&v22, (uint64_t)v18);
    v13 = v19;
    v14 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v17[0] = a1;
    v17[1] = a2;
    v17[2] = a3;
    v17[3] = a4;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v10;
    *(_QWORD *)(v15 + 24) = v12;
    sub_19CFC3BA0((uint64_t)v17, (_OWORD *)(v15 + 32));
    v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
    sub_19CDB390C(a1, a2);
    swift_retain();
    v16(sub_19CFC3BE0, v15, v13, v14);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
}

uint64_t sub_19CFC04AC(void *a1)
{
  return sub_19CD4E9E8(a1, &qword_1EE440D60, (uint64_t)&unk_1E3DEEB90, (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC04C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  __int128 v17;
  char v18;

  v2 = v1;
  sub_19CCF8C5C(v2, (uint64_t)v16, (uint64_t *)&unk_1EE43D1C0);
  v4 = v16[0];
  if ((v18 & 1) != 0)
  {
    v13[0] = a1;
    v5 = *(_QWORD *)(*(_QWORD *)(v16[0] + 64) + 40);
    swift_bridgeObjectRetain();
    sub_19CCC290C((uint64_t)v13, v5, &qword_1EE43CE08);
    return swift_continuation_throwingResume();
  }
  else
  {
    v7 = v16[1];
    swift_release();
    sub_19CCD14C4(&v17, (uint64_t)v13);
    v8 = v14;
    v9 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v12 = a1;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = v7;
    sub_19CCC290C((uint64_t)&v12, v10 + 32, &qword_1EE43CE08);
    v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(sub_19CD1895C, v10, v8, v9);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
}

uint64_t sub_19CFC0608(uint64_t a1, char a2)
{
  return sub_19CFC0650(a1, a2, (uint64_t *)&unk_1EE43C800, (uint64_t)&unk_1E3DEEC08, &qword_1EE43C810, (uint64_t)sub_19CFC38D0);
}

uint64_t sub_19CFC062C(uint64_t a1, char a2)
{
  return sub_19CFC0650(a1, a2, &qword_1ECEB04C0, (uint64_t)&unk_1E3DEEA00, &qword_1ECEB0BA0, (uint64_t)sub_19CFC38D0);
}

uint64_t sub_19CFC0650(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  char v26;

  sub_19CCF8C5C(v6, (uint64_t)v24, a3);
  v11 = v24[0];
  if ((v26 & 1) != 0)
  {
    v20 = a1;
    v21 = a2 & 1;
    sub_19CCC290C((uint64_t)&v20, *(_QWORD *)(*(_QWORD *)(v24[0] + 64) + 40), a5);
    return swift_continuation_throwingResume();
  }
  else
  {
    v13 = v24[1];
    swift_release();
    sub_19CCD14C4(&v25, (uint64_t)&v20);
    v14 = v22;
    v15 = v23;
    __swift_project_boxed_opaque_existential_1(&v20, v22);
    v18 = a1;
    v19 = a2 & 1;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v13;
    sub_19CCC290C((uint64_t)&v18, v16 + 32, a5);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_retain();
    v17(a6, v16, v14, v15);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
  }
}

uint64_t sub_19CFC0788(uint64_t a1)
{
  return sub_19CFC0E74(a1, (uint64_t *)&unk_1EE437380, (uint64_t)&unk_1E3DEE730, (void (*)(_BYTE *, uint64_t))sub_19CCD14C4, (uint64_t)sub_19CD17114);
}

uint64_t sub_19CFC07AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  __int128 v12;
  char v13;

  sub_19CCF8C5C(v0, (uint64_t)v11, &qword_1EE43D300);
  v1 = v11[0];
  if ((v13 & 1) != 0)
    return swift_continuation_throwingResume();
  v3 = v11[1];
  swift_release();
  sub_19CCD14C4(&v12, (uint64_t)v8);
  v4 = v9;
  v5 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v3;
  v7 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v5 + 8);
  swift_retain();
  v7(sub_19CCE9D90, v6, v4, v5);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_19CFC0890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  __int128 v14;
  char v15;

  sub_19CCF8C5C(v1, (uint64_t)v13, (uint64_t *)&unk_1ECEB06F0);
  v3 = v13[0];
  if ((v15 & 1) != 0)
  {
    **(_QWORD **)(*(_QWORD *)(v13[0] + 64) + 40) = a1;
    return swift_continuation_throwingResume();
  }
  else
  {
    v5 = v13[1];
    swift_release();
    sub_19CCD14C4(&v14, (uint64_t)v10);
    v6 = v11;
    v7 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v3;
    v8[3] = v5;
    v8[4] = a1;
    v9 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v9(sub_19CD1895C, v8, v6, v7);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
}

uint64_t sub_19CFC0994(void *a1)
{
  return sub_19CD4E9E8(a1, &qword_1ECEB0538, (uint64_t)&unk_1E3DEE118, (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC09B0(void *a1)
{
  return sub_19CD4E9E8(a1, (uint64_t *)&unk_1ECEB1280, (uint64_t)&unk_1E3DEE460, (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC09CC(uint64_t a1)
{
  return sub_19CFC022C(a1, &qword_1EE441050, (uint64_t)&unk_1E3DED948, (void (*)(uint64_t))MEMORY[0x1E0DEEB18], (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC09F0(uint64_t a1)
{
  return sub_19CFC0FC8(a1, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier, (uint64_t *)&unk_1EE440C90, (uint64_t)&unk_1E3DED998, (uint64_t)sub_19CFC2A64);
}

uint64_t sub_19CFC0A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;

  v3 = v2;
  sub_19CCF8C5C(v3, (uint64_t)v17, &qword_1EE43E3F0);
  v6 = v17[0];
  if ((v19 & 1) != 0)
  {
    v7 = *(_QWORD **)(*(_QWORD *)(v17[0] + 64) + 40);
    *v7 = a1;
    v7[1] = a2;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    v9 = v17[1];
    swift_release();
    sub_19CCD14C4(&v18, (uint64_t)v14);
    v10 = v15;
    v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v6;
    v12[3] = v9;
    v12[4] = a1;
    v12[5] = a2;
    v13 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v13(sub_19CFC2C8C, v12, v10, v11);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
}

uint64_t sub_19CFC0B30(void *a1)
{
  return sub_19CD4E9E8(a1, (uint64_t *)&unk_1ECEB1290, (uint64_t)&unk_1E3DEDF38, (uint64_t)sub_19CD1895C);
}

uint64_t sub_19CFC0B4C(uint64_t a1)
{
  return sub_19CFC0CB8(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50], (uint64_t *)&unk_1EE43CF60, (uint64_t)&unk_1E3DEE410, (uint64_t)sub_19CFC3534);
}

uint64_t sub_19CFC0B70(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  __int128 v18;
  char v19;

  v3 = v2;
  sub_19CCF8C5C(v3, (uint64_t)v17, &qword_1EE440CF0);
  v6 = v17[0];
  if ((v19 & 1) != 0)
  {
    sub_19CD3BE5C(a1, a2);
    v7 = *(uint64_t **)(*(_QWORD *)(v6 + 64) + 40);
    *v7 = a1;
    v7[1] = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    v9 = v17[1];
    swift_release();
    sub_19CCD14C4(&v18, (uint64_t)v14);
    v10 = v15;
    v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v6;
    v12[3] = v9;
    v12[4] = a1;
    v12[5] = a2;
    v13 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 8);
    sub_19CD3BE5C(a1, a2);
    swift_retain();
    v13(sub_19CD18398, v12, v10, v11);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
}

uint64_t sub_19CFC0C94(uint64_t a1)
{
  return sub_19CFC0CB8(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], &qword_1EE43D310, (uint64_t)&unk_1E3DEDFB0, (uint64_t)sub_19CFC3238);
}

uint64_t sub_19CFC0CB8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  __int128 v29;
  char v30;

  v8 = v5;
  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v23 - v13;
  sub_19CCF8C5C(v8, (uint64_t)v28, a3);
  v15 = v28[0];
  if ((v30 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
    (*(void (**)(_QWORD, char *, uint64_t))(v11 + 32))(*(_QWORD *)(*(_QWORD *)(v15 + 64) + 40), v14, v10);
    return swift_continuation_throwingResume();
  }
  else
  {
    v17 = v28[1];
    swift_release();
    sub_19CCD14C4(&v29, (uint64_t)v25);
    v24 = a5;
    v18 = v26;
    v19 = v27;
    v23[1] = __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
    v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v15;
    *(_QWORD *)(v21 + 24) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, v14, v10);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
    swift_retain();
    v22(v24, v21, v18, v19);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
}

uint64_t sub_19CFC0E50(uint64_t a1)
{
  return sub_19CFC0E74(a1, (uint64_t *)&unk_1EE43E3D0, (uint64_t)&unk_1E3DEDA88, (void (*)(_BYTE *, uint64_t))sub_19CCD14C4, (uint64_t)sub_19CD17114);
}

uint64_t sub_19CFC0E74(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v16[40];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  __int128 v21;
  char v22;

  sub_19CCF8C5C(v5, (uint64_t)v20, a2);
  v9 = v20[0];
  if ((v22 & 1) != 0)
  {
    sub_19CCD5B84(a1, (uint64_t)v17);
    a4(v17, *(_QWORD *)(*(_QWORD *)(v9 + 64) + 40));
    return swift_continuation_throwingResume();
  }
  else
  {
    v11 = v20[1];
    swift_release();
    sub_19CCD14C4(&v21, (uint64_t)v17);
    v12 = v18;
    v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    sub_19CCD5B84(a1, (uint64_t)v16);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v9;
    *(_QWORD *)(v14 + 24) = v11;
    a4(v16, v14 + 32);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
    swift_retain();
    v15(a5, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

