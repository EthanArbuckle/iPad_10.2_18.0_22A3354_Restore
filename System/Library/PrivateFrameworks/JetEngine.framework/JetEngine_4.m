uint64_t sub_19CEADE48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19CFDF5CC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_19CEADEA8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDF5CC() - 8) + 80);
  return sub_19CEDF0A4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_19CEADEE4(uint64_t a1)
{
  return sub_19CEADEF0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19CEAD8AC);
}

uint64_t sub_19CEADEF0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 88))();
  v7 = a2(v4, v5, v6);
  swift_release();
  return v7;
}

uint64_t sub_19CEADF50(_QWORD *a1)
{
  uint64_t v1;

  return sub_19CDF5D48(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

_QWORD *sub_19CEADF58(uint64_t a1)
{
  uint64_t v1;

  return sub_19CDF5DC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CEADF60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEADF88(uint64_t *a1)
{
  return sub_19CEADF94(a1, (uint64_t (*)(uint64_t, uint64_t))sub_19CF076BC);
}

uint64_t sub_19CEADF94(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(void **)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *a1;
  v7 = v4 + 16;
  objc_msgSend(v5, sel_lock);
  v8 = a2(v7, v6);
  objc_msgSend(v5, sel_unlock);
  return v8;
}

uint64_t destroy for IndexJSLoader()
{
  swift_release();
  return swift_release();
}

_QWORD *_s9JetEngine13IndexJSLoaderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for IndexJSLoader(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for IndexJSLoader(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for IndexJSLoader()
{
  return &type metadata for IndexJSLoader;
}

uint64_t sub_19CEAE110(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF781B0(*a1, a1[1], *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CEAE128(void *a1)
{
  sub_19CF7873C(a1);
}

uint64_t sub_19CEAE134(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF78258(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_19CEAE144(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF79D58(a1, v1);
}

uint64_t sub_19CEAE14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSPackageIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CEAE194(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF78110(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CEAE1A4(void *a1)
{
  sub_19CF7871C(a1);
}

uint64_t sub_19CEAE1C4@<X0>(void (*a1)(timespec *__return_ptr, uint64_t)@<X0>, timespec *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  timespec v24;
  uint64_t (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v29;
  timespec v30;
  timespec *v31;
  timespec v32;
  char *v33;
  void (*v34)(timespec *__return_ptr, uint64_t);
  char *v35;
  void (*v36)(char *, _QWORD);
  uint64_t v37;
  _QWORD v38[2];
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  timespec *v44;
  void (*v45)(timespec *__return_ptr, uint64_t);
  timespec v46;
  timespec v47[2];
  __darwin_time_t v48;
  uint64_t v49;

  v44 = a2;
  v45 = a1;
  v2 = sub_19CFDEA44();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v41 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDEF84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v40 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v39 = (char *)v38 - v11;
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v38 - v14;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)v38 - v18;
  v20 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF78();
  static MonotonicTime.now.getter(v47);
  v24 = v47[0];
  *(timespec *)&v23[*(int *)(v20 + 20)] = v47[0];
  v25 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v26 = v25(v19, v23, v5);
  v27 = v49;
  v45(v47, v26);
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
    return sub_19CD17A60((uint64_t)v23);
  }
  else
  {
    v38[1] = 0;
    v45 = (void (*)(timespec *__return_ptr, uint64_t))v5;
    v49 = v6;
    v29 = v39;
    v30 = v47[1];
    v31 = v44;
    *v44 = v47[0];
    v31[1] = v30;
    v31[2].tv_sec = v48;
    static MonotonicTime.now.getter(v47);
    v32 = v47[0];
    v47[0] = v24;
    v46 = v32;
    sub_19CD17DE8(v47, &v46);
    if (qword_1ECEB2F88 != -1)
      swift_once();
    v33 = v15;
    sub_19CFDEF24();
    v34 = v45;
    v25(v29, v19, (uint64_t)v45);
    v25(v40, v33, (uint64_t)v34);
    v35 = v41;
    sub_19CFDEA2C();
    v36 = *(void (**)(char *, _QWORD))(v49 + 8);
    v36(v33, v34);
    v36(v19, v34);
    sub_19CD17A60((uint64_t)v23);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v42 + 32))((char *)v44 + *(int *)(v37 + 28), v35, v43);
  }
}

uint64_t sub_19CEAE4CC@<X0>(void (*a1)(timespec *__return_ptr, uint64_t)@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __darwin_time_t tv_sec;
  uint64_t tv_nsec;
  __darwin_time_t *v26;
  uint64_t (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  __darwin_time_t v33;
  char *v34;
  char *v35;
  void (*v36)(timespec *__return_ptr, uint64_t);
  char *v37;
  void (*v38)(char *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(timespec *__return_ptr, uint64_t);
  _QWORD v48[2];
  timespec v49[2];
  uint64_t v50;

  v46 = a2;
  v47 = a1;
  v2 = sub_19CFDEA44();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDEF84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v42 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v41 = (char *)&v40 - v11;
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v40 - v14;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v40 - v18;
  v20 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF78();
  static MonotonicTime.now.getter(v49);
  tv_sec = v49[0].tv_sec;
  tv_nsec = v49[0].tv_nsec;
  v26 = (__darwin_time_t *)&v23[*(int *)(v20 + 20)];
  *v26 = v49[0].tv_sec;
  v26[1] = tv_nsec;
  v27 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v28 = v27(v19, v23, v5);
  v29 = v50;
  v47(v49, v28);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
    return sub_19CD17A60((uint64_t)v23);
  }
  else
  {
    v40 = 0;
    v47 = (void (*)(timespec *__return_ptr, uint64_t))v5;
    v50 = v6;
    v31 = v41;
    sub_19CD433C0(v49, v46);
    static MonotonicTime.now.getter(v49);
    v33 = v49[0].tv_sec;
    v32 = v49[0].tv_nsec;
    v49[0].tv_sec = tv_sec;
    v49[0].tv_nsec = tv_nsec;
    v48[0] = v33;
    v48[1] = v32;
    sub_19CD17DE8(v49, v48);
    if (qword_1ECEB2F88 != -1)
      swift_once();
    v34 = v15;
    sub_19CFDEF24();
    v35 = v19;
    v36 = v47;
    v27(v31, v19, (uint64_t)v47);
    v27(v42, v34, (uint64_t)v36);
    v37 = v43;
    sub_19CFDEA2C();
    v38 = *(void (**)(char *, _QWORD))(v50 + 8);
    v38(v34, v36);
    v38(v35, v36);
    sub_19CD17A60((uint64_t)v23);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439A40);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 32))(&v46[*(int *)(v39 + 28)], v37, v45);
  }
}

BOOL static DependencyDictionary.MergeStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DependencyDictionary.MergeStrategy.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t DependencyDictionary.MergeStrategy.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

JetEngine::DependencyDictionary __swiftcall DependencyDictionary.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t *v1;
  uint64_t *v3;
  JetEngine::DependencyDictionary result;
  uint64_t v5;

  v3 = v1;
  sub_19CD249F0();
  v5 = sub_19CFDF3F8();
  sub_19CD23D8C((uint64_t)a1._rawValue);
  result.contents._rawValue = (void *)swift_bridgeObjectRelease();
  *v3 = v5;
  return result;
}

uint64_t DependencyDictionary.add<A>(distinctDependenciesFrom:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  _QWORD *v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  _OWORD v36[2];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v10);
  v13 = (char *)&v31 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, a2, v11);
  sub_19CFDF770();
  swift_getAssociatedConformanceWitness();
  sub_19CFDFFBC();
  if (!(_QWORD)v38)
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, AssociatedTypeWitness);
  while (1)
  {
    v36[0] = v38;
    v36[1] = v39;
    v37 = v40;
    v14 = v38;
    sub_19CD436B0((uint64_t)v36 + 8, (uint64_t)v33);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = (_QWORD *)*v3;
    v16 = v32;
    *v3 = 0x8000000000000000;
    v18 = sub_19CD4B638(v14);
    v19 = v16[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v16[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v25 = v32;
        if ((v17 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_19CD43200();
        v25 = v32;
        if ((v22 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_19CD4BA3C(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_19CD4B638(v14);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_20;
      v18 = v23;
      v25 = v32;
      if ((v22 & 1) != 0)
      {
LABEL_11:
        sub_19CD433C0((_OWORD *)(v25[7] + 32 * v18), &v34);
        sub_19CD433C0(v33, (_OWORD *)(v25[7] + 32 * v18));
        goto LABEL_15;
      }
    }
    v25[(v18 >> 6) + 8] |= 1 << v18;
    *(_QWORD *)(v25[6] + 8 * v18) = v14;
    sub_19CD433C0(v33, (_OWORD *)(v25[7] + 32 * v18));
    v26 = v25[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_19;
    v25[2] = v28;
    v34 = 0u;
    v35 = 0u;
LABEL_15:
    *v3 = v25;
    swift_bridgeObjectRelease();
    v29 = *((_QWORD *)&v35 + 1);
    sub_19CD3F190((uint64_t)&v34);
    if (v29)
      sub_19CFA5E94((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 233);
    sub_19CD4C098((uint64_t)v36);
    sub_19CFDFFBC();
    if (!(_QWORD)v38)
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, AssociatedTypeWitness);
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t DependencyDictionary.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

_QWORD *DependencyDictionary.types.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_19CDFDD88(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19CEAEC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v20[32];
  _OWORD v21[2];

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v3;
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_19CD4B638(v7), (v12 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)v21);
    sub_19CD40794((uint64_t)v21, (uint64_t)v20);
    type metadata accessor for DependencyCell(0, a2, v13, v14);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      v17 = 1;
LABEL_9:
      *a3 = v17;
LABEL_10:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      return sub_19CD3F190((uint64_t)v21);
    }
    type metadata accessor for DependencyPromise(0, a2, v15, v16);
    if (swift_dynamicCast())
    {
      swift_release();
      v17 = 2;
      goto LABEL_9;
    }
    if (swift_dynamicCast())
    {
      *a3 = 0;
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, a2);
      goto LABEL_10;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  *a3 = 3;
  return sub_19CD3F190((uint64_t)v21);
}

_QWORD *DependencyDictionary.types<A>(compatibleWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *result;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int64_t v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;

  v40 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 64);
  v41 = *v2 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v11 = (unint64_t)(v8 + 63) >> 6;
  v37 = v11 - 1;
  result = (_QWORD *)swift_bridgeObjectRetain();
  v13 = 0;
  v43 = v11;
  v38 = v6 + 104;
  v39 = v11 - 5;
  v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_8;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v18 >= v43)
    {
      v20 = v13;
    }
    else
    {
      v19 = *(_QWORD *)(v41 + 8 * v18);
      if (v19)
        goto LABEL_12;
      v20 = v13 + 1;
      if ((uint64_t)(v13 + 2) < v43)
      {
        v19 = *(_QWORD *)(v41 + 8 * (v13 + 2));
        if (v19)
        {
          v18 = v13 + 2;
          goto LABEL_12;
        }
        v20 = v13 + 2;
        if ((uint64_t)(v13 + 3) < v43)
        {
          v19 = *(_QWORD *)(v41 + 8 * (v13 + 3));
          if (v19)
          {
            v18 = v13 + 3;
LABEL_12:
            v10 = (v19 - 1) & v19;
            v16 = __clz(__rbit64(v19)) + (v18 << 6);
            v13 = v18;
LABEL_8:
            v17 = *(_QWORD *)(v6 + 56);
            *(_QWORD *)&v44[0] = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16);
            sub_19CD436B0(v17 + 32 * v16, (uint64_t)v44 + 8);
            goto LABEL_15;
          }
          v18 = v13 + 4;
          v20 = v13 + 3;
          if ((uint64_t)(v13 + 4) < v43)
          {
            v19 = *(_QWORD *)(v41 + 8 * v18);
            if (v19)
              goto LABEL_12;
            while (v39 != v13)
            {
              v19 = *(_QWORD *)(v38 + 8 * v13++);
              if (v19)
              {
                v18 = v13 + 4;
                goto LABEL_12;
              }
            }
            v20 = v37;
          }
        }
      }
    }
    v10 = 0;
    v45 = 0;
    v13 = v20;
    memset(v44, 0, sizeof(v44));
LABEL_15:
    sub_19CCC290C((uint64_t)v44, (uint64_t)&v46, &qword_1ECEB04E0);
    v21 = v46;
    if (!v46)
    {
      swift_release();
      return v42;
    }
    sub_19CD433C0(&v47, v44);
    if (swift_dynamicCast())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_19CED5714(0, v42[2] + 1, 1, v42);
      v31 = v42[2];
      v30 = v42[3];
      v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        v36 = v31 + 1;
        v34 = sub_19CED5714((_QWORD *)(v30 > 1), v31 + 1, 1, v42);
        v32 = v36;
        v42 = v34;
      }
      v33 = v42;
      v42[2] = v32;
      v33[v31 + 4] = v21;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v5, a2);
    }
    else
    {
      type metadata accessor for DependencyCell(0, a2, v22, v23);
      if (swift_dynamicCast()
        || (type metadata accessor for DependencyPromise(0, a2, v24, v25), swift_dynamicCast()))
      {
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_19CED5714(0, v42[2] + 1, 1, v42);
        v27 = v42[2];
        v26 = v42[3];
        v28 = v27 + 1;
        if (v27 >= v26 >> 1)
        {
          v36 = v27 + 1;
          v29 = sub_19CED5714((_QWORD *)(v26 > 1), v27 + 1, 1, v42);
          v28 = v36;
          v42 = v29;
        }
        v14 = v42;
        v42[2] = v28;
        v14[v27 + 4] = v21;
      }
    }
    result = (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CEAF160()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440BB0);
  sub_19CD05BA0(&qword_1EE440BB8, &qword_1EE440BB0, MEMORY[0x1E0DE9F98]);
  v0 = sub_19CFDF788();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CEAF1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v7;

  sub_19CD436B0(a1, (uint64_t)&v7);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_19CEAF278(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  sub_19CFE010C();
  sub_19CFDF698();
  type metadata accessor for DependencyPromise(0, *(_QWORD *)(v1 + 80), v2, v3);
  sub_19CFE0670();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CEAF364()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void DependencyDictionary.add(distinctDependency:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  v2 = *a1;
  sub_19CD436B0((uint64_t)(a1 + 1), (uint64_t)v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5 = *v1;
  *v1 = 0x8000000000000000;
  sub_19CD4B0E0(v6, v2, isUniquelyReferenced_nonNull_native, &v7);
  *v1 = v5;
  swift_bridgeObjectRelease();
  v4 = v8;
  sub_19CD3F190((uint64_t)&v7);
  if (v4)
    sub_19CFA5E94((uint64_t)"JetEngine/DependencyDictionary.swift", 36, 2, 233);
}

BOOL DependencyDictionary.replace(dependency:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  _BOOL8 v4;
  uint64_t v6;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;

  v2 = *a1;
  sub_19CD436B0((uint64_t)(a1 + 1), (uint64_t)v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  *v1 = 0x8000000000000000;
  sub_19CD4B0E0(v7, v2, isUniquelyReferenced_nonNull_native, &v8);
  *v1 = v6;
  swift_bridgeObjectRelease();
  v4 = v9 != 0;
  sub_19CD3F190((uint64_t)&v8);
  return v4;
}

Swift::Void __swiftcall DependencyDictionary.merge(with:preferring:)(JetEngine::DependencyDictionary with, JetEngine::DependencyDictionary::MergeStrategy preferring)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v3 = *(_QWORD *)with.contents._rawValue;
  v4 = *(_BYTE *)preferring;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  if ((v4 & 1) != 0)
    sub_19CD05D04(v3, (uint64_t)sub_19CD06024, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
  else
    sub_19CEB0554(v3, (uint64_t)sub_19CD06024, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
  *v2 = v6;
  swift_bridgeObjectRelease();
}

uint64_t sub_19CEAF58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a1;
  v3[6] = a3;
  v3[4] = a2;
  return swift_task_switch();
}

uint64_t sub_19CEAF5A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  v2 = swift_task_alloc();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v0 + 4;
  *(_QWORD *)(v2 + 24) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440BF0);
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_19CEAF66C;
  return sub_19CFE0208();
}

uint64_t sub_19CEAF66C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEAF6C8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    swift_willThrow();
  else
    **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAF724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v5[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439A40);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEAF788()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(char **)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 56);
  sub_19CCD5B84(*(_QWORD *)(v0 + 72), v0 + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = v0 + 16;
  sub_19CEAE4CC((void (*)(timespec *__return_ptr, uint64_t))sub_19CEB09CC, v1);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  *(_QWORD *)v4 = v3;
  sub_19CD433C0(v1, (_OWORD *)(v4 + 8));
  v5 = &v1[*(int *)(v2 + 28)];
  v6 = v4 + *(int *)(type metadata accessor for _ResolvedDependency() + 24);
  v7 = sub_19CFDEA44();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAF884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a1;
  v6[7] = a4;
  v7 = sub_19CFDEA44();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  v8 = sub_19CFDEF84();
  v6[13] = v8;
  v6[14] = *(_QWORD *)(v8 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  v6[19] = type metadata accessor for MonotonicTimeReference();
  v6[20] = swift_task_alloc();
  v6[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439A40);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v6[24] = type metadata accessor for _ResolvedDependency();
  v6[25] = swift_task_alloc();
  v6[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AD8);
  v6[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEAF9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  int *v10;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v12;
  int *v14;
  timespec v15;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  swift_unknownObjectRetain();
  sub_19CFDEF78();
  static MonotonicTime.now.getter(&v15);
  v7 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 248) = v7;
  *(timespec *)(v1 + v7) = v15;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 224) = v8;
  v8(v3, v1, v4);
  ObjectType = swift_getObjectType();
  v10 = *(int **)(v6 + 24);
  *(_QWORD *)(v0 + 40) = swift_getAssociatedTypeWitness();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 16));
  v14 = (int *)((char *)v10 + *v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v12;
  *v12 = v0;
  v12[1] = sub_19CEAFAF4;
  return ((uint64_t (*)(uint64_t *, uint64_t, _QWORD))v14)(boxed_opaque_existential_2Tm, ObjectType, *(_QWORD *)(v0 + 72));
}

uint64_t sub_19CEAFAF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEAFB58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  timespec v26;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 160) + *(int *)(v0 + 248));
  sub_19CD433C0((_OWORD *)(v0 + 16), *(_OWORD **)(v0 + 176));
  static MonotonicTime.now.getter(&v26);
  v2 = v1[1];
  v25[0] = *v1;
  v25[1] = v2;
  sub_19CD17DE8(v25, &v26);
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v24 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 192);
  v20 = *(_OWORD **)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 160);
  sub_19CFDEF24();
  v3(v7, v4, v8);
  v3(v6, v5, v8);
  sub_19CFDEA2C();
  v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v11(v5, v8);
  v11(v4, v8);
  sub_19CD17A60(v10);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  v12(v18 + *(int *)(v17 + 28), v9, v16);
  sub_19CCC290C(v18, (uint64_t)v20, &qword_1EE439A40);
  swift_unknownObjectRelease();
  *(_QWORD *)v21 = v19;
  sub_19CD433C0(v20, (_OWORD *)(v21 + 8));
  v12(v21 + *(int *)(v22 + 24), (uint64_t)v20 + *(int *)(v17 + 28), v16);
  sub_19CEB0A20(v21, v24);
  swift_storeEnumTagMultiPayload();
  sub_19CCC290C(v24, v23, &qword_1EE439AD8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAFE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD **)(v0 + 48);
  __swift_deallocate_boxed_opaque_existential_2(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_19CD17A60(v2);
  swift_unknownObjectRelease();
  *v6 = v1;
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAFF0C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = *v1;
  v2[2] = a1;
  v2[3] = v3;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FEC0 + dword_1EE43FEC0);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_19CEAFF80;
  return v6(v3);
}

uint64_t sub_19CEAFF80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_19CEAFFFC()
{
  uint64_t v0;
  BOOL v1;
  char v2;
  _QWORD *v3;
  char *v5;

  if (*(_QWORD *)(v0 + 40))
  {
    swift_retain();
    v1 = sub_19CF9E1EC();
    swift_release();
    v2 = v1;
  }
  else
  {
    v2 = 2;
  }
  *(_BYTE *)(v0 + 64) = v2;
  v5 = (char *)&dword_1EE440BD8 + dword_1EE440BD8;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_19CEB00A0;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 24));
}

uint64_t sub_19CEB00A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CEB0110()
{
  uint64_t v0;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 64) || *(_BYTE *)(v0 + 64) == 2)
    goto LABEL_6;
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = 0;
    StartUpPerformanceEvent.record(checkpoint:)(&v2);
LABEL_6:
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEB0170()
{
  uint64_t v0;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 64) || *(_BYTE *)(v0 + 64) == 2)
    goto LABEL_6;
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = 0;
    StartUpPerformanceEvent.record(checkpoint:)(&v2);
LABEL_6:
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DependencyDictionary.description.getter()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437320);
  sub_19CD05BA0(&qword_1EE437318, &qword_1EE437320, MEMORY[0x1E0DEC858]);
  sub_19CD41144();
  v0 = sub_19CFDF7DC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CEB027C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  result = sub_19CFE02E0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

unint64_t DependencyDictionary.debugDescription.getter()
{
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437320);
  sub_19CD05BA0(&qword_1EE437318, &qword_1EE437320, MEMORY[0x1E0DEC858]);
  sub_19CD41144();
  sub_19CFDF7DC();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0xD000000000000015;
}

uint64_t sub_19CEB041C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437320);
  sub_19CD05BA0(&qword_1EE437318, &qword_1EE437320, MEMORY[0x1E0DEC858]);
  sub_19CD41144();
  v0 = sub_19CFDF7DC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CEB04CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  a2[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return v5(v3, v4);
}

uint64_t sub_19CEB0554(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  _OWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _BYTE v42[32];
  _OWORD v43[2];
  _OWORD v44[2];
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v47 = a1;
  v48 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v49 = v8;
  v50 = 0;
  v51 = v11 & v9;
  v52 = a2;
  v53 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE24BAC((uint64_t)&v45);
  v12 = v45;
  if (!v45)
    goto LABEL_26;
  sub_19CD433C0(v46, v44);
  v13 = *(_QWORD **)a5;
  v15 = sub_19CD4B638(v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_19CD43200();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_19CD433C0(v44, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v23[2] = v26;
LABEL_16:
    sub_19CE24BAC((uint64_t)&v45);
    for (i = v45; v45; i = v45)
    {
      sub_19CD433C0(v46, v44);
      v30 = *(_QWORD **)a5;
      v31 = sub_19CD4B638(i);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v25 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v25)
        goto LABEL_27;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_19CD4BA3C(v35, 1);
        v31 = sub_19CD4B638(i);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_29;
      }
      if ((v36 & 1) != 0)
      {
        v28 = 32 * v31;
        sub_19CD436B0(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31, (uint64_t)v42);
        sub_19CD436B0((uint64_t)v42, (uint64_t)v43);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
        v29 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + v28);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        sub_19CD433C0(v43, v29);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_19CD433C0(v44, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_28;
        v38[2] = v40;
      }
      sub_19CE24BAC((uint64_t)&v45);
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CD4BA3C(v18, a4 & 1);
  v20 = sub_19CD4B638(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_19CD436B0(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15, (uint64_t)v42);
    sub_19CD436B0((uint64_t)v42, (uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    sub_19CD433C0(v43, v22);
    goto LABEL_16;
  }
LABEL_29:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CEB08B0()
{
  uint64_t v0;

  return sub_19CEAF278(*(uint64_t **)(v0 + 16));
}

unint64_t sub_19CEB08BC()
{
  unint64_t result;

  result = qword_1EE440B98;
  if (!qword_1EE440B98)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for DependencyDictionary.MergeStrategy, &type metadata for DependencyDictionary.MergeStrategy);
    atomic_store(result, &qword_1EE440B98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DependencyDictionary.MergeStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CEB094C + 4 * byte_19D05C8D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CEB0980 + 4 * asc_19D05C8D0[v4]))();
}

uint64_t sub_19CEB0980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB0988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEB0990);
  return result;
}

uint64_t sub_19CEB099C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEB09A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CEB09A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB09B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DependencyDictionary.MergeStrategy()
{
  return &type metadata for DependencyDictionary.MergeStrategy;
}

uint64_t sub_19CEB09CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_19CEB04CC(*(_QWORD **)(v1 + 16), a1);
}

uint64_t type metadata accessor for _ResolvedDependency()
{
  uint64_t result;

  result = qword_1EE439A50;
  if (!qword_1EE439A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CEB0A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _ResolvedDependency();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CEB0A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CEAF1FC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CEB0A7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CD579FC;
  return sub_19CF4F454(a1, a2, v8, a4);
}

uint64_t sub_19CEB0AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;

  v7 = *(uint64_t **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1EE440BE0 + dword_1EE440BE0))(a1, a2, v7, v6);
}

uint64_t *sub_19CEB0B6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a2[4];
    a1[4] = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
    v8 = *(int *)(a3 + 24);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_19CFDEA44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_19CEB0C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_19CFDEA44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_19CEB0C60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a2[4];
  a1[4] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEA44();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *sub_19CEB0CD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEA44();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_19CEB0D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_19CFDEA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_19CEB0DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_19CFDEA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_19CEB0E24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEB0E30(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_19CFDEA44();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_19CEB0EAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CEB0EB8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_19CFDEA44();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CEB0F2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEA44();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static PipelinePhase<>.urlForResource(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v6;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_19CEB1370;
  *(_QWORD *)(v8 + 24) = v7;
  *a2 = sub_19CEB140C;
  a2[1] = v8;
  return sub_19CEB1464(v3, v4);
}

uint64_t sub_19CEB1038@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  char v39;
  _QWORD v40[5];
  _QWORD *v41;

  v31 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *a1;
  if (qword_1ECEB2C88 != -1)
    swift_once();
  v15 = (void *)qword_1ECEB29D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  v17 = v15;
  v41 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v18._object = (void *)0x800000019D0739F0;
  v18._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  v40[3] = &type metadata for JetpackBundle.Resource;
  v19 = (_QWORD *)swift_allocObject();
  v40[0] = v19;
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  sub_19CD40794((uint64_t)v40, (uint64_t)v36);
  v34 = 0u;
  v35 = 0u;
  v33 = a4;
  sub_19CEB1464(a2, a3);
  sub_19CD40658((uint64_t)v36, (uint64_t)&v34);
  v39 = 0;
  v37 = v34;
  v38 = v35;
  v20 = v41;
  v21 = a5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v23 = v20[2];
  v22 = v20[3];
  if (v23 >= v22 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
  v20[2] = v23 + 1;
  v24 = &v20[5 * v23];
  v25 = v37;
  v26 = v38;
  *((_BYTE *)v24 + 64) = v39;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  v41 = v20;
  sub_19CCECFE4((uint64_t)v40, &qword_1ECEB3370);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(_QWORD *)(v16 + 32) = v41;
  *(_QWORD *)&v37 = v17;
  LOBYTE(v34) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v34);

  swift_bridgeObjectRelease();
  *(_QWORD *)&v34 = v32;
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  *(_QWORD *)&v38 = v33;
  *((_QWORD *)&v38 + 1) = v21;
  JetpackBundle.url(forOptionalResource:)((uint64_t)&v37, (uint64_t)v14);
  v28 = sub_19CFDEDE0();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v14, 1, v28) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v14, v28);
  sub_19CCECFE4((uint64_t)v14, (uint64_t *)&unk_1ECEB3030);
  sub_19CEB1658();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_19CEB1370@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_19CEB1038(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

_QWORD *sub_19CEB138C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v5 = sub_19CEB1498(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19CEB13E8()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_19CEB140C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CEB1498(v2, v3);
  swift_release();
  return v4;
}

uint64_t sub_19CEB1464(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_19CEB1498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v12[4];
  _BYTE v13[48];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CDEBE50((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96));
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  v12[0] = sub_19CE4C6F4;
  v12[1] = v9;
  v12[2] = sub_19CE4C38C;
  v12[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0F48();
  sub_19CCECFE4((uint64_t)v12, qword_1EE43B200);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CEB1628()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_19CEB1658()
{
  unint64_t result;

  result = qword_1EE436EE8;
  if (!qword_1EE436EE8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetpackBundleError, &type metadata for JetpackBundleError);
    atomic_store(result, (unint64_t *)&qword_1EE436EE8);
  }
  return result;
}

uint64_t JSResponse.requestRoute.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JSResponse.requestDuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JSResponse() + 20);
  v4 = sub_19CFDEA44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JSResponse.incidents.getter()
{
  type metadata accessor for JSResponse();
  return swift_bridgeObjectRetain();
}

uint64_t JSResponse.networkPerformance.getter()
{
  type metadata accessor for JSResponse();
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for JSResponse(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_19CFDEA44();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      v18 = *((_QWORD *)v16 + 4);
      *((_QWORD *)v15 + 3) = v17;
      *((_QWORD *)v15 + 4) = v18;
      (**(void (***)(char *, char *))(v17 - 8))(v15, v16);
    }
    else
    {
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
    }
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
    v13(&v15[*(int *)(v21 + 28)], &v16[*(int *)(v21 + 28)], v12);
    v22 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *assignWithCopy for JSResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEA44();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (uint64_t)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 24);
  if (!*(_QWORD *)((char *)a1 + v11 + 24))
  {
    if (v14)
    {
      *(_QWORD *)(v12 + 24) = v14;
      *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
      (**(void (***)(uint64_t, char *))(v14 - 8))(v12, v13);
      goto LABEL_8;
    }
LABEL_7:
    v15 = *(_OWORD *)v13;
    v16 = *((_OWORD *)v13 + 1);
    *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
    *(_OWORD *)v12 = v15;
    *(_OWORD *)(v12 + 16) = v16;
    goto LABEL_8;
  }
  if (!v14)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v12);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v12, (uint64_t *)v13);
LABEL_8:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v10((char *)(v12 + *(int *)(v17 + 28)), &v13[*(int *)(v17 + 28)], v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for JSResponse(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEA44();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_OWORD *)((char *)a2 + v12 + 16);
  *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *(_QWORD *)((char *)a2 + v12 + 32);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v11(&v13[*(int *)(v16 + 28)], &v14[*(int *)(v16 + 28)], v10);
  v17 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *assignWithTake for JSResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEA44();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  if (*(_QWORD *)((char *)a1 + v13 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  v12(&v14[*(int *)(v17 + 28)], &v15[*(int *)(v17 + 28)], v11);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CEB1BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_19CFDEA44();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_19CEB1C7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_19CFDEA44();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_19CEB1D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[40];
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF60);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v8 = MEMORY[0x1E0C80A78](v4, v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(&v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v4, v8);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v10 + v9, &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v4);
  v11 = sub_19CD48F8C();
  swift_retain();
  v12 = sub_19CFDFDB8();
  v20[3] = v11;
  v20[4] = &protocol witness table for OS_dispatch_queue;
  v20[0] = v12;
  sub_19CCD5B84((uint64_t)v20, (uint64_t)v17);
  v18 = sub_19CEB28DC;
  v19 = v10;
  swift_retain();
  sub_19CEB21E8((uint64_t)v17, &v21);
  sub_19CCECFE4((uint64_t)v17, &qword_1EE43AF48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  v13 = v21;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v13;
  return sub_19CFDFA28();
}

uint64_t MetricsEmitter.Event.fieldName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsEmitter.Event.operationId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 MetricsEmitter.Event.eventTime.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  *a1 = result;
  return result;
}

uint64_t static MetricsEmitter.emitterConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1ECEB0208 != -1)
    swift_once();
  v2 = off_1ECEB01F8;
  *a1 = off_1ECEB01F8;
  return sub_19CEB1F44((uint64_t)v2);
}

uint64_t sub_19CEB1F44(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_19CEB1F54()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF20);
  v0 = swift_allocObject();
  result = sub_19CD51798(v0);
  qword_1EE43AF28 = result;
  return result;
}

uint64_t static MetricsEmitter.eventStream.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF58);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE43AF30 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DF07B8], v0);
  return sub_19CFDFA88();
}

uint64_t sub_19CEB2070(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEB1D1C(a1, v1);
}

ValueMetadata *type metadata accessor for MetricsEmitter()
{
  return &type metadata for MetricsEmitter;
}

ValueMetadata *type metadata accessor for MetricsEmitter.Configuration()
{
  return &type metadata for MetricsEmitter.Configuration;
}

_QWORD *assignWithCopy for MetricsEmitter.Event(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

ValueMetadata *type metadata accessor for MetricsEmitter.Event()
{
  return &type metadata for MetricsEmitter.Event;
}

uint64_t dispatch thunk of _PageRenderMetricsVisualization.init(_pageRenderMetrics:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _PageRenderMetricsVisualization.visualize(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

double sub_19CEB2134()
{
  NSString *v0;
  Class v1;
  uint64_t ObjCClassMetadata;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  double result;

  v0 = (NSString *)sub_19CFDF554();
  v1 = NSClassFromString(v0);

  if (!v1)
    goto LABEL_9;
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v3 = swift_conformsToProtocol2();
  v4 = v3 ? v3 : 0;
  if (!v3)
    ObjCClassMetadata = 0;
  if (ObjCClassMetadata)
  {
    v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    qword_1EE440C10 = ObjCClassMetadata;
    qword_1EE440C18 = v4;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&xmmword_1EE440BF8);
    v5(ObjCClassMetadata, v4);
  }
  else
  {
LABEL_9:
    qword_1EE440C18 = 0;
    result = 0.0;
    xmmword_1EE440BF8 = 0u;
    *(_OWORD *)algn_1EE440C08 = 0u;
  }
  return result;
}

uint64_t sub_19CEB21E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  __int128 aBlock;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v22 = a2;
  v21 = sub_19CFDF308();
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF2D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCF8C5C(a1, (uint64_t)&aBlock, &qword_1EE43AF48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF50);
  v14 = swift_allocObject();
  v15 = v24;
  *(_OWORD *)(v14 + 16) = aBlock;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = v25;
  *(_QWORD *)(v14 + 64) = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  sub_19CFDF2CC();
  *(_QWORD *)&aBlock = v16;
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v3;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)&v25 = sub_19CEB2968;
  *((_QWORD *)&v25 + 1) = v17;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v24 = sub_19CD0C78C;
  *((_QWORD *)&v24 + 1) = &block_descriptor_12_1;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_19CFDF2F0();
  MEMORY[0x1A1AD9FF4](0, v8, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v21);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  result = swift_release();
  *v22 = v14;
  return result;
}

uint64_t sub_19CEB2438(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;

  v4 = (_QWORD *)(a1 + 24);
  swift_beginAccess();
  v5 = *(_QWORD **)(a1 + 24);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 24) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_19CED69DC(0, v5[2] + 1, 1, v5);
    *v4 = v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    v5 = sub_19CED69DC((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    *v4 = v5;
  }
  v5[2] = v8 + 1;
  v5[v8 + 4] = a2;
  return swift_endAccess();
}

uint64_t sub_19CEB2510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_19CFDF308();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF2D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  sub_19CFDF2CC();
  aBlock[0] = v14;
  sub_19CD3DE74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_19CEB295C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_17;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_19CFDF2F0();
  MEMORY[0x1A1AD9FF4](0, v8, v13, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_19CEB270C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = v5 + 32;
    while (*(_QWORD *)(v8 + 8 * v7) != a2)
    {
      if (v6 == ++v7)
        return result;
    }
    swift_beginAccess();
    sub_19CF7F090(v7, &v9);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_19CEB27B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  __int128 v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440C20);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v11[0] = *(_QWORD *)a1;
  v11[1] = v7;
  v11[2] = v8;
  v11[3] = v9;
  v12 = *(_OWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF60);
  sub_19CFDFA40();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_19CEB2878()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF60);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_19CEB28DC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43AF60);
  return sub_19CEB27B4(a1);
}

uint64_t sub_19CEB2920()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_19CEB2510(v0);
  return swift_release();
}

uint64_t sub_19CEB295C()
{
  uint64_t v0;

  return sub_19CEB270C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_19CEB2968()
{
  uint64_t v0;

  return sub_19CEB2438(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t NetResponse.init(status:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = (int *)type metadata accessor for NetResponse();
  v5 = a2 + v4[9];
  v6 = sub_19CFDEDE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v8 = (_QWORD *)(a2 + v4[10]);
  *v8 = 0;
  v8[1] = 0;
  *(_BYTE *)a2 = (unint64_t)(a1 - 200) < 0x64;
  *(_QWORD *)(a2 + 8) = a1;
  v9 = objc_msgSend((id)objc_opt_self(), sel_localizedStringForStatusCode_, a1);
  v10 = sub_19CFDF578();
  v12 = v11;

  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v12;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 32) = sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(a2 + 40) = 0;
  sub_19CD3BBD0(v5);
  v7(v5, 1, 1, v6);
  result = swift_bridgeObjectRelease();
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)(a2 + v4[11]) = v13;
  return result;
}

uint64_t NetResponse.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t NetResponse.redirected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t NetResponse.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NetResponse() + 36);
  return sub_19CD3B284(a1, v3);
}

uint64_t NetResponse.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetResponse() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t NetResponse.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NetResponse() + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t NetResponse.ok.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NetResponse.ok.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NetResponse.ok.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.status.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t NetResponse.status.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*NetResponse.status.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.statusText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetResponse.statusText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NetResponse.statusText.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*NetResponse.headers.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.redirected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t (*NetResponse.redirected.modify())()
{
  return nullsub_1;
}

uint64_t NetResponse.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NetResponse() + 36);
  return sub_19CD3BB88(v3, a1);
}

uint64_t (*NetResponse.url.modify())(_QWORD)
{
  type metadata accessor for NetResponse();
  return nullsub_1;
}

uint64_t NetResponse.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetResponse() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*NetResponse.body.modify())(_QWORD)
{
  type metadata accessor for NetResponse();
  return nullsub_1;
}

uint64_t NetResponse.metrics.getter()
{
  type metadata accessor for NetResponse();
  return swift_bridgeObjectRetain();
}

uint64_t (*NetResponse.metrics.modify())(_QWORD)
{
  type metadata accessor for NetResponse();
  return nullsub_1;
}

_QWORD *initializeBufferWithCopyOfBuffer for NetResponse(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = a3[9];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v11 = sub_19CFDEDE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[10];
    v17 = a3[11];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t assignWithCopy for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for NetResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEB32D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NetResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEB335C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CEB33D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  _UNKNOWN **v12;
  id v13;
  void (*v14)(id, uint64_t, _UNKNOWN **);
  id v15;
  void *i;
  _QWORD v18[43];
  _BYTE __dst[352];
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_19CFE0238();
    v6 = (char *)(a1 + 32);
    v7 = (void *)objc_opt_self();
    v8 = v4 - 1;
    for (i = v7; ; v7 = i)
    {
      memcpy(__dst, v6, 0x158uLL);
      memcpy(v18, v6, sizeof(v18));
      sub_19CE6BB1C((uint64_t)__dst);
      v18[0] = sub_19CD12F58();
      v9 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      v10 = objc_msgSend(v7, sel_valueWithObject_inContext_, sub_19CFE0808(), v9);
      swift_unknownObjectRelease();

      if (v10)
      {
        v11 = sub_19CD15680();
        v18[3] = v11;
        v12 = &protocol witness table for JSValue;
        v13 = v10;
      }
      else
      {
        v13 = objc_msgSend(v7, sel_valueWithUndefinedInContext_, v9);
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
        v18[3] = v11;
        v12 = (_UNKNOWN **)sub_19CCE2634();
      }
      v18[4] = v12;
      v18[0] = v13;
      __swift_project_boxed_opaque_existential_1(v18, v11);
      v14 = (void (*)(id, uint64_t, _UNKNOWN **))v12[2];
      v15 = v10;
      v14(v9, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);

      sub_19CE6BB90((uint64_t)__dst);
      if (v2)
        return swift_release();
      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      if (!v8)
        break;
      v6 += 344;
      --v8;
    }
    return v20;
  }
  return result;
}

void static Unstable.runLoopInstallAutoreleasePools(for:)()
{
  if (!_CFRunLoopSetPerCalloutAutoreleasepoolEnabled())
    sub_19CFADA50((unint64_t)"JetEngine/RunLoopAutoreleasePools.swift", 0x27uLL, 2, 0x11uLL);
}

uint64_t dispatch thunk of _IntentReplayStorage.memoryOnlyCaching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _IntentReplayStorage.append(file:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16)
                                                                                     + *(_QWORD *)(a6 + 16));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_19CCBE344;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of _IntentReplayStorage.get(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CE7C44C;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for MetricsEventLinterEmptyImpressionsRule()
{
  return &type metadata for MetricsEventLinterEmptyImpressionsRule;
}

uint64_t sub_19CEB3764()
{
  sub_19CEB3CA0();
  return sub_19CFE0A48();
}

uint64_t sub_19CEB378C()
{
  sub_19CEB3CA0();
  return sub_19CFE0A54();
}

uint64_t sub_19CEB37B4(unint64_t *a1)
{
  return sub_19CEB388C(a1);
}

uint64_t sub_19CEB37C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440C40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CEB3CA0();
  sub_19CFE0A24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_19CEB388C(unint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  char v33;
  _QWORD v34[4];
  _QWORD *v35;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, unint64_t))(v3 + 24))(v2, v3);
  if (!*(_QWORD *)(v4 + 16) || (v5 = sub_19CD3FD1C(0x707954746E657665, 0xE900000000000065), (v6 & 1) == 0))
  {
    v31 = 0u;
    v32 = 0u;
    swift_bridgeObjectRelease();
    return sub_19CD3F190((uint64_t)&v31);
  }
  sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
    return sub_19CD3F190((uint64_t)&v31);
  v7 = MEMORY[0x1E0DEA968];
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  if (v28 == __PAIR128__(0xEB00000000736E6FLL, 0x6973736572706D69))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return result;
  }
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, unint64_t))(v11 + 24))(v10, v11);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_19CD3FD1C(0x6973736572706D69, 0xEB00000000736E6FLL), (v14 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v32 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v15 = *(_QWORD *)(v28 + 16);
      result = swift_bridgeObjectRelease();
      if (!v15)
      {
        v16 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        a1[3] = (unint64_t)&type metadata for StandardMetricsFieldsBuilder;
        a1[4] = (unint64_t)&protocol witness table for StandardMetricsFieldsBuilder;
        *a1 = v16;
      }
      return result;
    }
  }
  else
  {
    sub_19CD3F190((uint64_t)&v31);
  }
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v17 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
  v19 = v17;
  v35 = sub_19CD40918(0, 39, 0, MEMORY[0x1E0DEE9D8]);
  v20._object = (void *)0x800000019D073AB0;
  v20._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  v34[3] = v7;
  v34[0] = 0x6973736572706D69;
  v34[1] = 0xEB00000000736E6FLL;
  sub_19CD40794((uint64_t)v34, (uint64_t)v30);
  v28 = 0u;
  v29 = 0u;
  sub_19CD40658((uint64_t)v30, (uint64_t)&v28);
  v33 = 0;
  v31 = v28;
  v32 = v29;
  v21 = v35;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v24 = &v21[5 * v23];
  v25 = v31;
  v26 = v32;
  *((_BYTE *)v24 + 64) = v33;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  v35 = v21;
  sub_19CD3F190((uint64_t)v34);
  v27._countAndFlagsBits = 0x73646C6569662022;
  v27._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(_QWORD *)(v18 + 32) = v35;
  *(_QWORD *)&v31 = v19;
  LOBYTE(v28) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v28);

  return swift_bridgeObjectRelease();
}

unint64_t sub_19CEB3CA0()
{
  unint64_t result;

  result = qword_1EE440C48;
  if (!qword_1EE440C48)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05CC9C, &type metadata for MetricsEventLinterEmptyImpressionsRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440C48);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventLinterEmptyImpressionsRule.CodingKeys()
{
  return &type metadata for MetricsEventLinterEmptyImpressionsRule.CodingKeys;
}

unint64_t sub_19CEB3CF8()
{
  unint64_t result;

  result = qword_1EE440C50;
  if (!qword_1EE440C50)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05CC4C, &type metadata for MetricsEventLinterEmptyImpressionsRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440C50);
  }
  return result;
}

unint64_t sub_19CEB3D40()
{
  unint64_t result;

  result = qword_1EE440C58;
  if (!qword_1EE440C58)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05CC74, &type metadata for MetricsEventLinterEmptyImpressionsRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440C58);
  }
  return result;
}

void ConditionallyExpressibleByJSValue<>.init(_:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  _BYTE v6[40];

  sub_19CE23FF0();
  if (v2)
  {

  }
  else
  {
    v5 = sub_19CEB52A4(MEMORY[0x1E0DEE9D8]);
    JSONObject.decode<A>(_:withUserInfo:)(a2, v5);

    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v6);
  }
}

void _NonFinalClassConditionallyExpressibleByJSValue.init(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(a3 + 16))();

}

uint64_t static JSValue._make(from:)(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v2 = swift_dynamicCastUnknownClass();
  if (v2)
  {
    v3 = a1;
  }
  else
  {
    swift_getMetatypeMetadata();
    v4 = a1;
    sub_19CFE0A90();
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(v4, v5);
    swift_willThrow();
  }
  return v2;
}

void sub_19CEB3F2C(void *a1, uint64_t a2)
{
  _NonFinalClassConditionallyExpressibleByJSValue.init(_:)(a1, a2, (uint64_t)&protocol witness table for JSValue);
}

id sub_19CEB3F48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  id v6;
  uint64_t v7;

  v4 = swift_dynamicCastUnknownClass();
  if (v4)
  {
    *a2 = v4;
    return a1;
  }
  else
  {
    swift_getMetatypeMetadata();
    v6 = a1;
    sub_19CFE0A90();
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(v6, v7);
    return (id)swift_willThrow();
  }
}

void Array<A>.init(_:)(id a1)
{
  void *v2;
  id v3;
  signed int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)sub_19CFDF554();
  v3 = objc_msgSend(a1, sel_valueForProperty_, v2);

  if (v3)
  {
    if (objc_msgSend(v3, sel_isNumber))
    {
      v4 = objc_msgSend(v3, sel_toInt32);

      MEMORY[0x1E0C80A78](v4, v5);
      sub_19CFDF8CC();
    }
    else
    {

      sub_19CDC98D8();
      swift_allocError();
      v7 = v6;
      a1 = a1;
      JSError.init(badValue:expected:)(a1, v7);
      swift_willThrow();
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_19CEB4158(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t *v20;
  id v21;

  v21 = a4;
  v20 = a1;
  v10 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v19 = v11;
    if (!a3)
    {
LABEL_8:
      *v19 = a3;
      return;
    }
    v16 = 0;
    while (a3 != v16)
    {
      v17 = *v20;
      v18 = objc_msgSend(v21, sel_valueAtIndex_, v16, v12);
      if (!v18)
        goto LABEL_12;
      (*(void (**)(id, uint64_t, uint64_t))(a6 + 8))(v18, a5, a6);
      if (v6)
        return;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v17 + *(_QWORD *)(v10 + 72) * v16++, v14, a5);
      if (a3 == v16)
        goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_19CEB427C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  Array<A>.init(_:)(a1);
  if (!v2)
    *a2 = v4;
}

void Dictionary<>.init(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD v23[2];
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a3;
  v6 = sub_19CFDFF5C();
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)v23 - v9;
  if (objc_msgSend(a1, sel_isObject, v8) && (objc_msgSend(a1, sel_isNull) & 1) == 0)
  {
    v28 = sub_19CFDF38C();
    JSValue.propertyNames.getter();
    v15 = v14;
    v23[1] = sub_19CFDF464();
    sub_19CFDF404();
    v16 = v15;
    v17 = *(_QWORD *)(v15 + 16);
    if (v17)
    {
      v24 = a1;
      v23[0] = v16;
      v18 = (uint64_t *)(v16 + 40);
      while (1)
      {
        v19 = *(v18 - 1);
        v20 = *v18;
        swift_bridgeObjectRetain();
        v21 = (void *)sub_19CFDF554();
        v22 = objc_msgSend(v24, sel_valueForProperty_, v21, v23[0]);

        if (!v22)
          break;
        (*(void (**)(id, uint64_t))(v25 + 8))(v22, a2);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        v18 += 2;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v10, 0, 1, a2);
        v26 = v19;
        v27 = v20;
        sub_19CFDF4AC();
        if (!--v17)
        {
          swift_bridgeObjectRelease();

          return;
        }
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v12 = v11;
    v13 = a1;
    JSError.init(badValue:expected:)(v13, v12);
    swift_willThrow();

  }
}

void sub_19CEB4514(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  Dictionary<>.init(_:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
  if (!v4)
    *a4 = v6;
}

uint64_t Optional<A>.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;

  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9, v11);
  v14 = (char *)&v16 - v13;
  if ((objc_msgSend(a1, sel_isUndefined, v12) & 1) != 0
    || (objc_msgSend(a1, sel_isNull) & 1) != 0)
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, 1, 1, a2);
  }
  else
  {
    result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 8))(a1, a2, a3);
    if (!v4)
    {
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v14, 0, 1, a2);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v14, v9);
    }
  }
  return result;
}

uint64_t sub_19CEB4664@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Optional<A>.init(_:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(_:)(JSValue a1)
{
  Class isa;
  uint64_t v2;
  uint64_t v3;

  isa = a1.super.isa;
  if ((-[objc_class isBoolean](a1.super.isa, sel_isBoolean) & 1) != 0)
  {
    LOBYTE(v2) = -[objc_class toBool](isa, sel_toBool);
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v2 = v3;
    isa = isa;
    JSError.init(badValue:expected:)(isa, v2);
    swift_willThrow();
  }

  return v2 & 1;
}

void sub_19CEB4730(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if ((objc_msgSend(a1, sel_isBoolean) & 1) != 0)
  {
    v4 = objc_msgSend(a1, sel_toBool);

    *a2 = v4;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v6 = v5;
    v7 = a1;
    JSError.init(badValue:expected:)(v7, v6);
    swift_willThrow();

  }
}

void Date.init(_:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v4 = sub_19CFDEF84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isDate, v11))
  {
    v14 = objc_msgSend(a1, sel_toDate);
    if (v14)
    {
      v15 = v14;
      sub_19CFDEF60();

      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v16(v13, v8, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) != 1)
      {

        v16(a2, v13, v4);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    }
    __break(1u);
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v18 = v17;
    v19 = a1;
    JSError.init(badValue:expected:)(v19, v18);
    swift_willThrow();

  }
}

void sub_19CEB49A0(void *a1@<X0>, char *a2@<X8>)
{
  Date.init(_:)(a1, a2);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(_:)(JSValue a1)
{
  double v2;
  double v3;
  Swift::Double result;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;

  if (-[objc_class isNumber](a1.super.isa, sel_isNumber))
  {
    -[objc_class toDouble](a1.super.isa, sel_toDouble);
    v3 = v2;

    return v3;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v6 = v5;
    v7 = a1.super.isa;
    JSError.init(badValue:expected:)(v7, v6);
    swift_willThrow();

  }
  return result;
}

void sub_19CEB4A68(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if ((objc_msgSend(a1, sel_isNumber) & 1) != 0)
  {
    objc_msgSend(a1, sel_toDouble);
    v5 = v4;

    *a2 = v5;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v7 = v6;
    v8 = a1;
    JSError.init(badValue:expected:)(v8, v7);
    swift_willThrow();

  }
}

Swift::Int32 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int32.init(_:)(JSValue a1)
{
  Swift::Int32 result;

  sub_19CEB512C(a1.super.isa, (SEL *)&selRef_toInt32);
  return result;
}

void sub_19CEB4B3C(void *a1@<X0>, unsigned int *a2@<X8>)
{
  sub_19CEB51F4(a1, (SEL *)&selRef_toInt32, a2);
}

id static NSNull._make(from:)(void *a1)
{
  uint64_t v3;

  if (objc_msgSend(a1, sel_isNull))
    return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_19CDC98D8();
  swift_allocError();
  JSError.init(badValue:expected:)(a1, v3);
  return (id)swift_willThrow();
}

void sub_19CEB4BF4(void *a1, uint64_t a2)
{
  _NonFinalClassConditionallyExpressibleByJSValue.init(_:)(a1, a2, (uint64_t)&protocol witness table for NSNull);
}

id sub_19CEB4C10@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v5;

  if ((objc_msgSend(a1, sel_isNull) & 1) != 0)
  {
    result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    *a2 = result;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a1, v5);
    return (id)swift_willThrow();
  }
  return result;
}

CGPoint __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGPoint.init(_:)(JSValue a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  CGPoint result;

  -[objc_class toPoint](a1.super.isa, sel_toPoint);
  v3 = v2;
  v5 = v4;

  v6 = v3;
  v7 = v5;
  result.y = v7;
  result.x = v6;
  return result;
}

void sub_19CEB4D00(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, sel_toPoint);
  v5 = v4;
  v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

__C::_NSRange __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _NSRange.init(_:)(JSValue a1)
{
  id v2;
  Swift::Int v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  __C::_NSRange result;

  v2 = -[objc_class toRange](a1.super.isa, sel_toRange);
  v4 = v3;

  v5 = (Swift::Int)v2;
  v6 = v4;
  result.length = v6;
  result.location = v5;
  return result;
}

void sub_19CEB4DA0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;

  v4 = objc_msgSend(a1, sel_toRange);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

CGSize __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGSize.init(_:)(JSValue a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  CGSize result;

  -[objc_class toSize](a1.super.isa, sel_toSize);
  v3 = v2;
  v5 = v4;

  v6 = v3;
  v7 = v5;
  result.height = v7;
  result.width = v6;
  return result;
}

void sub_19CEB4E40(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, sel_toSize);
  v5 = v4;
  v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

__C::CGRect __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGRect.init(_:)(JSValue a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  __C::CGRect result;

  -[objc_class toRect](a1.super.isa, sel_toRect);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v10 = v3;
  v11 = v5;
  v12 = v7;
  v13 = v9;
  result.size.height = v13;
  result.size.width = v12;
  result.origin.y = v11;
  result.origin.x = v10;
  return result;
}

void sub_19CEB4EF8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend(a1, sel_toRect);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(_:)(JSValue a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  Swift::String result;

  if (-[objc_class isString](a1.super.isa, sel_isString))
  {
    v2 = -[objc_class toString](a1.super.isa, sel_toString);
    if (v2)
    {
      v4 = v2;
      v5 = sub_19CFDF578();
      v7 = v6;

      v2 = (id)v5;
      v3 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v9 = v8;
    v10 = a1.super.isa;
    JSError.init(badValue:expected:)(v10, v9);
    swift_willThrow();

  }
  result._object = v3;
  result._countAndFlagsBits = (uint64_t)v2;
  return result;
}

void sub_19CEB5038(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (objc_msgSend(a1, sel_isString))
  {
    v4 = objc_msgSend(a1, sel_toString);
    if (v4)
    {
      v5 = v4;
      v6 = sub_19CFDF578();
      v8 = v7;

      *a2 = v6;
      a2[1] = v8;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v10 = v9;
    v11 = a1;
    JSError.init(badValue:expected:)(v11, v10);
    swift_willThrow();

  }
}

Swift::UInt32 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt32.init(_:)(JSValue a1)
{
  Swift::UInt32 result;

  sub_19CEB512C(a1.super.isa, (SEL *)&selRef_toUInt32);
  return result;
}

void sub_19CEB512C(void *a1, SEL *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1;
  if (objc_msgSend(a1, sel_isNumber))
  {
    objc_msgSend(v3, *a2);
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v5 = v4;
    v3 = v3;
    JSError.init(badValue:expected:)(v3, v5);
    swift_willThrow();
  }

}

void sub_19CEB51D8(void *a1@<X0>, unsigned int *a2@<X8>)
{
  sub_19CEB51F4(a1, (SEL *)&selRef_toUInt32, a2);
}

void sub_19CEB51F4(void *a1@<X0>, SEL *a2@<X3>, unsigned int *a3@<X8>)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if ((objc_msgSend(a1, sel_isNumber) & 1) != 0)
  {
    v6 = objc_msgSend(a1, *a2);

    *a3 = v6;
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    v8 = v7;
    v9 = a1;
    JSError.init(badValue:expected:)(v9, v8);
    swift_willThrow();

  }
}

unint64_t sub_19CEB52A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3E0);
  v7 = sub_19CFE03B8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_19CEB548C(v13, (uint64_t)v6);
    result = sub_19CD2258C((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_19CFE0310();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    result = (unint64_t)sub_19CD433C0(v10, (_OWORD *)(v8[7] + 32 * v17));
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_19CEB5438(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_19CEB4158(a1, a2, *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t dispatch thunk of ConditionallyExpressibleByJSValue.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static _NonFinalClassConditionallyExpressibleByJSValue._make(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ExpressibleByJSValue.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19CEB548C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for RemoteFetcher(id *a1)
{

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = v3;
  v6 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  __int128 v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v10 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RemoteFetcher(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RemoteFetcher()
{
  return &type metadata for RemoteFetcher;
}

void sub_19CEB5684(void *a1, id a2)
{
  id v3;
  id v4;

  if (a1)
  {
    v4 = a1;
    sub_19CCFA370(v4);

  }
  else if (a2)
  {
    v3 = a2;
    sub_19CEBA334(a2);

  }
  else
  {
    sub_19CFE0340();
    __break(1u);
  }
}

uint64_t sub_19CEB5734(uint64_t a1)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*aBlock)(id *);
  uint64_t v44;
  void *v45;
  void *v46;
  _QWORD v47[5];
  char v48;
  _QWORD v49[6];

  v2 = v1;
  v4 = sub_19CFDF2E4();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_19CFDE90C();
  v7 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39, v8);
  v38 = v9;
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1EF0);
  v11 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v11 + 24) = v13;
  *(_BYTE *)(v11 + 32) = 0;
  v14 = *v1;
  v15 = (void *)sub_19CFDE8AC();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_19CEB6338;
  *(_QWORD *)(v16 + 24) = v11;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_19CDB3D70;
  *(_QWORD *)(v17 + 24) = v16;
  v47[0] = sub_19CCE9D70;
  v47[1] = v17;
  aBlock = (uint64_t (*)(id *))MEMORY[0x1E0C809B0];
  v44 = 1107296256;
  v45 = sub_19CEB5B18;
  v46 = &block_descriptor_18;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v37 = v14;
  v19 = objc_msgSend(v14, sel_dataTaskWithRequest_completionHandler_, v15, v18);
  _Block_release(v18);

  if (v2[2])
  {
    swift_retain_n();
    v20 = v19;
    sub_19CFDFD58();
    swift_release();

  }
  objc_msgSend(v19, sel_resume);
  v36 = v19;
  v21 = v2[1];
  v22 = swift_allocObject();
  v23 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v22 + 32) = v23;
  *(_OWORD *)(v22 + 48) = *((_OWORD *)v2 + 2);
  *(_QWORD *)(v22 + 64) = v2[6];
  v24 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v39);
  v25 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v10, v24);
  v27 = sub_19CD48F8C();
  v28 = v40;
  v29 = v41;
  v30 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x1E0DEF540], v42);
  swift_retain();
  v31 = v37;
  v32 = v21;
  swift_retain();
  v33 = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  v49[3] = v27;
  v49[4] = &protocol witness table for OS_dispatch_queue;
  v49[0] = v33;
  aBlock = sub_19CEB63A4;
  v44 = v22;
  v45 = sub_19CEB640C;
  v46 = (void *)v26;
  sub_19CCD5B84((uint64_t)v49, (uint64_t)v47);
  v48 = 0;
  swift_retain();
  swift_retain();
  sub_19CCE8808();
  sub_19CCECFE4((uint64_t)&aBlock, (uint64_t *)&unk_1ECEB1280);

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  return v11;
}

uint64_t sub_19CEB5AF0()
{
  return sub_19CFDE8D0();
}

void sub_19CEB5B18(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

uint64_t sub_19CEB5B84(id *a1)
{
  id v1;
  uint64_t v2;

  v1 = *a1;
  v2 = sub_19CE79AF8(v1);

  sub_19CE26CB4(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEB5BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __int128 v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  _BYTE *v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v45 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B70);
  MEMORY[0x1E0C80A78](v44, v3);
  v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v41 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v41 - v15;
  if (qword_1ECEB2C88 != -1)
    swift_once();
  v17 = (void *)qword_1ECEB29D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_19D055650;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v19 = swift_allocObject();
  v20 = MEMORY[0x1E0DEA968];
  v47 = xmmword_19D0522A0;
  *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v54 + 1) = v20;
  *(_QWORD *)&v53 = 0xD000000000000019;
  *((_QWORD *)&v53 + 1) = 0x800000019D073B00;
  v51 = 0u;
  v52 = 0u;
  v21 = v17;
  sub_19CD40658((uint64_t)&v53, (uint64_t)&v51);
  *(_BYTE *)(v19 + 64) = 0;
  v22 = v52;
  *(_OWORD *)(v19 + 32) = v51;
  *(_OWORD *)(v19 + 48) = v22;
  *(_QWORD *)(v18 + 32) = v19;
  v46 = a2;
  sub_19CFDE8E8();
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v24 = v23(v16, 1, v5);
  v42 = v6;
  if (v24 == 1)
  {
    sub_19CCECFE4((uint64_t)v16, (uint64_t *)&unk_1ECEB3030);
    v53 = 0u;
    v54 = 0u;
  }
  else
  {
    *((_QWORD *)&v54 + 1) = v5;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 32))(boxed_opaque_existential_2Tm, v16, v5);
  }
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v47;
  sub_19CD40794((uint64_t)&v53, (uint64_t)v50);
  v51 = 0u;
  v52 = 0u;
  sub_19CD40658((uint64_t)v50, (uint64_t)&v51);
  *(_BYTE *)(v26 + 64) = 2;
  v27 = v52;
  *(_OWORD *)(v26 + 32) = v51;
  *(_OWORD *)(v26 + 48) = v27;
  *(_QWORD *)(v18 + 40) = v26;
  sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v47;
  *((_QWORD *)&v54 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v53 = 0x3A64656C696166;
  *((_QWORD *)&v53 + 1) = 0xE700000000000000;
  v51 = 0u;
  v52 = 0u;
  sub_19CD40658((uint64_t)&v53, (uint64_t)&v51);
  *(_BYTE *)(v28 + 64) = 0;
  v29 = v52;
  *(_OWORD *)(v28 + 32) = v51;
  *(_OWORD *)(v28 + 48) = v29;
  *(_QWORD *)(v18 + 48) = v28;
  swift_getErrorValue();
  v31 = v48;
  v30 = v49;
  *((_QWORD *)&v54 + 1) = v49;
  v32 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v53);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v32, v31, v30);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v47;
  sub_19CD40794((uint64_t)&v53, (uint64_t)v50);
  v51 = 0u;
  v52 = 0u;
  sub_19CD40658((uint64_t)v50, (uint64_t)&v51);
  *(_BYTE *)(v33 + 64) = 2;
  v34 = v52;
  *(_OWORD *)(v33 + 32) = v51;
  *(_OWORD *)(v33 + 48) = v34;
  *(_QWORD *)(v18 + 56) = v33;
  sub_19CCECFE4((uint64_t)&v53, &qword_1ECEB3370);
  *(_QWORD *)&v51 = v21;
  LOBYTE(v53) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v53);

  swift_bridgeObjectRelease();
  sub_19CFDE8E8();
  if (v23(v12, 1, v5) == 1)
    return sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1ECEB3030);
  v36 = v42;
  v37 = (uint64_t)v41;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v12, v5);
  if (qword_1EE43A538 != -1)
    swift_once();
  v38 = *(os_unfair_lock_s **)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock(v38 + 6);
  v39 = v43;
  sub_19CDEBD90(v37, v43);
  os_unfair_lock_unlock(v38 + 6);
  swift_release();
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
  v40((uint64_t)&v39[*(int *)(v44 + 48)], v5);
  return v40(v37, v5);
}

uint64_t sub_19CEB60D8(uint64_t *a1, void (*a2)(uint64_t *, double))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_19CFDE90C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  a2(&v12, v7);
  sub_19CFBAFC0((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

_QWORD *sub_19CEB61A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v12[4];
  _BYTE v13[48];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E0);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E8);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CEB67F8((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96));
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  v12[0] = sub_19CEB686C;
  v12[1] = v9;
  v12[2] = sub_19CEB6878;
  v12[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CCEA33C();
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1ECEB1290);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

void sub_19CEB6338(void **a1, void *a2)
{
  sub_19CEB5684(*a1, a2);
}

uint64_t sub_19CEB6344()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB6368()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB63A4(id *a1)
{
  return sub_19CEB5B84(a1);
}

uint64_t sub_19CEB63AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19CFDE90C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_19CEB640C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDE90C() - 8) + 80);
  return sub_19CEB5BD0(a1, v1 + ((v3 + 16) & ~v3));
}

_QWORD *sub_19CEB6448(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  Swift::String v32;
  void *v33;
  id v34;
  _QWORD *v35;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;
  _BYTE v40[32];
  __int128 v41;
  __int128 v42;
  char v43;
  _BYTE v44[24];
  uint64_t v45;
  _QWORD *v46;

  v37[1] = a4;
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDE90C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v16);
  sub_19CFDE8DC();
  if (qword_1EE43A538 != -1)
    swift_once();
  v19 = *(_QWORD *)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  v20 = sub_19CDC17B8(a1, *(_QWORD *)(v19 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
  swift_release();
  if ((a5 & 1) != 0)
  {
    v37[0] = a2;
    v21 = v20 & 1;
    if (qword_1ECEB2C88 != -1)
      swift_once();
    v22 = (void *)qword_1ECEB29D0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
    v24 = v22;
    v46 = sub_19CD40918(0, 40, 0, MEMORY[0x1E0DEE9D8]);
    v25._object = (void *)0x800000019D073B80;
    v25._countAndFlagsBits = 0xD000000000000027;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    v45 = MEMORY[0x1E0DEAFA0];
    v44[0] = v21;
    sub_19CD40794((uint64_t)v44, (uint64_t)v40);
    v38 = 0u;
    v39 = 0u;
    sub_19CD40658((uint64_t)v40, (uint64_t)&v38);
    v43 = 0;
    v41 = v38;
    v42 = v39;
    v26 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
    v28 = v26[2];
    v27 = v26[3];
    if (v28 >= v27 >> 1)
      v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
    v26[2] = v28 + 1;
    v29 = &v26[5 * v28];
    v30 = v41;
    v31 = v42;
    *((_BYTE *)v29 + 64) = v43;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    v46 = v26;
    sub_19CCECFE4((uint64_t)v44, &qword_1ECEB3370);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    *(_QWORD *)(v23 + 32) = v46;
    *(_QWORD *)&v41 = v24;
    LOBYTE(v38) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)&v38);

    swift_bridgeObjectRelease();
    a2 = (void *)v37[0];
  }
  sub_19CFDE894();
  v33 = (void *)sub_19CFDE8AC();
  v34 = objc_msgSend(a2, sel_requestByEncodingRequest_parameters_, v33, 0);

  sub_19CCEA1E0(v34);
  v35 = sub_19CEB61A8((uint64_t)sub_19CEB5AF0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  return v35;
}

uint64_t sub_19CEB67F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CEB6840()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB686C(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CEB60D8(a1, *(void (**)(uint64_t *, double))(v1 + 16));
}

uint64_t sub_19CEB6878(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF4F338(a1, v1);
}

ValueMetadata *type metadata accessor for RemoteFetcher.CachingPolicy()
{
  return &type metadata for RemoteFetcher.CachingPolicy;
}

_QWORD *assignWithCopy for IsSignedInFieldProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for IsSignedInFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for IsSignedInFieldProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IsSignedInFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IsSignedInFieldProvider()
{
  return &type metadata for IsSignedInFieldProvider;
}

uint64_t sub_19CEB69E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_19CEB69F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB6A1C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB6A48()
{
  uint64_t v0;
  uint64_t v1;

  sub_19CED381C();
  if (!v1)
    __asm { BR              X10 }
  return v0;
}

BOOL static JetPackageFormatError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageFormatError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetPackageFormatError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CEB6CA4()
{
  unint64_t result;

  result = qword_1EE440C70;
  if (!qword_1EE440C70)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageFormatError, &type metadata for JetPackageFormatError);
    atomic_store(result, (unint64_t *)&qword_1EE440C70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JetPackageFormatError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CEB6D34 + 4 * byte_19D05CF45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CEB6D68 + 4 * byte_19D05CF40[v4]))();
}

uint64_t sub_19CEB6D68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB6D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEB6D78);
  return result;
}

uint64_t sub_19CEB6D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEB6D8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CEB6D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB6D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatError()
{
  return &type metadata for JetPackageFormatError;
}

uint64_t sub_19CEB6DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;

  if (*(_BYTE *)(v0 + 56))
  {
    sub_19CEB7974();
    swift_allocError();
    *v3 = 0;
    swift_willThrow();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(8, v4, v5);
    if (!v1)
    {
      v8 = v6;
      v9 = v7;
      if (qword_1ECEB0F90 != -1)
        swift_once();
      sub_19CD17ABC(v8, v9);
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(v0 + 40);
        v12 = *(_QWORD *)(v0 + 48);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v11);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(1, v11, v12);
        __asm { BR              X10 }
      }
      sub_19CEB7974();
      swift_allocError();
      *v14 = 1;
      swift_willThrow();
      sub_19CD3BE18(v8, v9);
    }
  }
  return v2;
}

uint64_t sub_19CEB703C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v11;

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    v2 = v0;
    v3 = (_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1(v3, v4);
    result = sub_19CDEA794(v4, v5);
    if (!v1)
    {
      v7 = result;
      v8 = *(_QWORD *)(v2 + 40);
      v9 = *(_QWORD *)(v2 + 48);
      __swift_project_boxed_opaque_existential_1(v3, v8);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 24))(v7, v8, v9);
      __asm { BR              X10 }
    }
  }
  else
  {
    sub_19CEB7974();
    swift_allocError();
    *v11 = 0;
    return swift_willThrow();
  }
  return result;
}

void sub_19CEB7268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for DataInputStream();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  __asm { BR              X10 }
}

uint64_t sub_19CEB72DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  _QWORD v19[17];

  *(_QWORD *)(v2 + 32) = BYTE6(v1);
  sub_19CED381C();
  if (!v0)
  {
    v8 = v5;
    v9 = v6;
    sub_19CEB770C(v5, v6);
    sub_19CD3BE18(v8, v9);
    sub_19CED381C();
    v11 = v10;
    v13 = v12;
    *(_DWORD *)(v4 - 72) = BYTE1(v19[0]);
    sub_19CEB770C(v10, v12);
    sub_19CD3BE18(v11, v13);
    sub_19CED381C();
    v15 = v14;
    v17 = v16;
    sub_19CEB770C(v14, v16);
    sub_19CD3BE18(v15, v17);
    if ((v19[0] & 0x100) == 0)
    {
      v19[3] = v3;
      v19[4] = &off_1E3DCC550;
      v19[0] = v2;
      swift_retain();
      sub_19CEB79B8(v19);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      __asm { BR              X12 }
    }
    sub_19CEB7974();
    swift_allocError();
    *v18 = 2;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_19CEB74F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (BYTE6(v2))
  {
    v6 = sub_19CEB6A48();
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      JUMPOUT(0x19CEB736CLL);
    }
    v3 = *(_QWORD *)(v5 + 24) >> 62;
  }
  else
  {
    v6 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&loc_19CEB756C + dword_19CEB76FC[v3]))(v6, a2);
}

void sub_19CEB7580(uint64_t a1, int a2, __int16 a3, uint64_t a4, char a5, __int16 a6, char a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  va_list va;

  va_start(va, a8);
  if (!BYTE6(v8))
  {
    swift_release();
    v18 = 0;
    v19 = 0;
    v20 = 0xF000000000000000;
LABEL_6:
    v21 = *(_DWORD *)(v13 - 72);
    *(_BYTE *)a8 = a7;
    *(_BYTE *)(a8 + 1) = v21;
    *(_BYTE *)(a8 + 2) = v10;
    *(_BYTE *)(a8 + 3) = v12;
    *(_BYTE *)(a8 + 4) = a5;
    *(_QWORD *)(a8 + 8) = a4;
    *(_QWORD *)(a8 + 16) = v11;
    *(_WORD *)(a8 + 24) = a3;
    *(_QWORD *)(a8 + 32) = v18;
    *(_QWORD *)(a8 + 40) = v19;
    *(_QWORD *)(a8 + 48) = v20;
    JUMPOUT(0x19CEB736CLL);
  }
  swift_retain();
  sub_19CED381C();
  if (v9)
  {
    swift_release();
    swift_bridgeObjectRelease();
    JUMPOUT(0x19CEB74B4);
  }
  v16 = v14;
  v17 = v15;
  sub_19CEB770C(v14, v15);
  sub_19CD3BE18(v16, v17);
  if ((*(_BYTE *)(v13 - 65) & 1) != 0)
  {
    swift_release();
  }
  else
  {
    v18 = *(unsigned __int8 *)(v13 - 66);
    v19 = sub_19CEB7BC4(va);
    v20 = v22;
    swift_release();
    if (v20 >> 60 != 15)
      goto LABEL_10;
  }
  v18 = 0;
  v19 = 0;
  v20 = 0xF000000000000000;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)va);
  goto LABEL_6;
}

void sub_19CEB770C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19CEB7748()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;
  _BYTE *v3;

  if (BYTE6(v1) == 2)
  {
    result = sub_19CFDEEC4();
    if (result == 1 && (result = sub_19CFDEEC4(), (_BYTE)result))
    {
      *v0 = result - 1;
      v0[1] = 0;
    }
    else
    {
      *(_WORD *)v0 = 256;
    }
  }
  else
  {
    sub_19CF13494(0xD000000000000029, 0x800000019D073C30);
    sub_19CEB7974();
    swift_allocError();
    *v3 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for JetPackageFormatParser()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for JetPackageFormatParser.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CEB78AC + 4 * byte_19D05CF4F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CEB78E0 + 4 * byte_19D05CF4A[v4]))();
}

uint64_t sub_19CEB78E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB78E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEB78F0);
  return result;
}

uint64_t sub_19CEB78FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEB7904);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CEB7908(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEB7910(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatParser.State()
{
  return &type metadata for JetPackageFormatParser.State;
}

unint64_t sub_19CEB7930()
{
  unint64_t result;

  result = qword_1EE440C78;
  if (!qword_1EE440C78)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05D0A0, &type metadata for JetPackageFormatParser.State);
    atomic_store(result, (unint64_t *)&qword_1EE440C78);
  }
  return result;
}

unint64_t sub_19CEB7974()
{
  unint64_t result;

  result = qword_1EE436CE8[0];
  if (!qword_1EE436CE8[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageFormatError, &type metadata for JetPackageFormatError);
    atomic_store(result, qword_1EE436CE8);
  }
  return result;
}

char *sub_19CEB79B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_19CDEA738(v7, v8);
  if (!v1)
  {
    v11 = v9;
    if (v9)
    {
      v12 = a1[3];
      v13 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v12);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 24))(v11, v12, v13);
      __asm { BR              X10 }
    }
    return 0;
  }
  return v6;
}

_QWORD *sub_19CEB7BC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int16 v8;
  unsigned __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1[3];
  v4 = a1[4];
  v5 = __swift_project_boxed_opaque_existential_1(a1, v3);
  v6 = v3;
  v7 = v5;
  v8 = sub_19CDEA738(v6, v4);
  if (!v1)
  {
    v10 = v8;
    if (v8)
    {
      v11 = a1[3];
      v12 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v11);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 24))(v10, v11, v12);
      __asm { BR              X10 }
    }
    return 0;
  }
  return v7;
}

unint64_t sub_19CEB7D48()
{
  unint64_t result;

  result = qword_1ECEB1360;
  if (!qword_1ECEB1360)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0368], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ECEB1360);
  }
  return result;
}

uint64_t Optional<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a4;
  v10 = sub_19CFDFF5C();
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v19 - v12;
  v14 = *a2;
  sub_19CDE0324(a1, (uint64_t)v22);
  v15 = v23;
  if (!v23)
  {
    sub_19CDE036C((uint64_t)v22);
    goto LABEL_6;
  }
  v19 = v10;
  v16 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 104))(v15, v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  if ((v17 & 1) != 0)
  {
LABEL_6:
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 1, 1, a3);
  }
  sub_19CD3E448(a1, (uint64_t)v22);
  v25 = v14;
  (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v21 + 8))(v22, &v25, a3);
  result = sub_19CD3E3F8(a1);
  if (!v5)
  {
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v13, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(a5, v13, v19);
  }
  return result;
}

uint64_t sub_19CEB7F30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Optional<A>.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t sub_19CEB7F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  JSONObject.dictionary.getter((uint64_t)&v8);
  if (*((_QWORD *)&v9 + 1))
  {
    result = sub_19CD3E3F8(a1);
    v5 = v9;
    *(_OWORD *)a2 = v8;
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v10;
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v8, &qword_1EE43C1C8);
    sub_19CDC5494();
    swift_allocError();
    v6 = MEMORY[0x1E0DEE9D8];
    *v7 = &type metadata for LocalizedStringsJSONObject;
    v7[1] = v6;
    v7[2] = 0;
    v7[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  return result;
}

uint64_t sub_19CEB8010()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_19CEB8054()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

id sub_19CEB8078()
{
  void *v0;
  id result;
  void *v2;
  const OpaqueJSContext *v3;
  OpaqueJSString *v4;
  OpaqueJSString *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;

  result = objc_msgSend(v0, sel_context);
  if (result)
  {
    v2 = result;
    v3 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    v4 = JSValueToStringCopy(v3, (JSValueRef)objc_msgSend(v0, sel_JSValueRef), 0);
    if (v4)
    {
      v5 = v4;
      v6 = sub_19CDB8958(v4);
      JSStringRelease(v5);
    }
    else
    {
      sub_19CDC98D8();
      v7 = (void *)swift_allocError();
      v9 = v8;
      v10 = v0;
      JSError.init(badValue:expected:)(v10, v9);
      swift_willThrow();
      v11 = objc_msgSend(v10, sel_toString);
      if (v11)
      {
        v12 = v11;
        v6 = sub_19CFDF578();

      }
      else
      {

        return 0;
      }
    }
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t AsyncEvent.post(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = *v1;
  v5 = sub_19CFDF2D8();
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF308();
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v23[1] = v2[2];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v18);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v13;
  *(_QWORD *)(v20 + 24) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v20 + v19, (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = sub_19CEB8D8C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_19;
  v21 = _Block_copy(aBlock);
  swift_retain();
  sub_19CFDF2F0();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  sub_19CFE0070();
  MEMORY[0x1A1AD9FF4](0, v12, v8, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  return swift_release();
}

uint64_t AsyncEvent.removeObserver(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v2 = v1;
  v20 = sub_19CFDF308();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF2D8();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v19 = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
  sub_19CFDF2CC();
  aBlock[0] = v15;
  sub_19CCC5C88(qword_1ECEB3100, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  sub_19CFE0070();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  *(_QWORD *)(v16 + 24) = v14;
  aBlock[4] = sub_19CEB8E0C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_12_2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_19CFDF2F0();
  MEMORY[0x1A1AD9FF4](0, v7, v13, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  return swift_release();
}

uint64_t sub_19CEB863C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v1 = *a1;
  swift_beginAccess();
  v4 = type metadata accessor for EventSubscription(255, *(_QWORD *)(v1 + 80), v2, v3);
  v5 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v5);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v4);
  result = sub_19CFDFC80();
  if (v7 != 1)
  {
    swift_beginAccess();
    sub_19CFDF914();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_19CEB8738(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = *v1;
  v5 = sub_19CFDF308();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF2D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = a1;
  type metadata accessor for EventSubscription(255, *(_QWORD *)(v4 + 80), v15, v16);
  v17 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v17);
  result = sub_19CFDFC5C();
  if ((result & 1) == 0)
  {
    v22[1] = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
    v22[0] = v5;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
    sub_19CFDF2CC();
    aBlock[0] = v19;
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    sub_19CFE0070();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a1;
    *(_QWORD *)(v20 + 24) = v2;
    aBlock[4] = sub_19CEB8E34;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19CD0C78C;
    aBlock[3] = &block_descriptor_18_1;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19CFDF2F0();
    MEMORY[0x1A1AD9FF4](0, v9, v14, v21);
    _Block_release(v21);
    (*(void (**)(char *, _QWORD))(v6 + 8))(v9, v22[0]);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_19CEB89AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v5 = type metadata accessor for EventSubscription(0, *(_QWORD *)(*(_QWORD *)a2 + 80), a3, a4);
  v6 = swift_bridgeObjectRetain();
  if (MEMORY[0x1A1AD9B44](v6, v5))
  {
    swift_beginAccess();
    v7 = 4;
    do
    {
      v8 = v7 - 4;
      v9 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v9 & 1) != 0)
      {
        swift_retain();
        v10 = v7 - 3;
        if (__OFADD__(v8, 1))
          goto LABEL_10;
      }
      else
      {
        sub_19CFE0160();
        v10 = v7 - 3;
        if (__OFADD__(v8, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v11 = sub_19CFDF938();
      MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v11);
      MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v5);
      sub_19CFDFC80();
      if (v13 != 1)
      {
        swift_beginAccess();
        sub_19CFDF914();
        swift_endAccess();
        swift_release();
      }
      swift_release();
      ++v7;
    }
    while (v10 != MEMORY[0x1A1AD9B44](a1, v5));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEB8B94(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v5 = type metadata accessor for EventSubscription(0, *(_QWORD *)(*a1 + 80), a3, a4);
  v13 = sub_19CFDF398();
  swift_beginAccess();
  v6 = a1[3];
  v7 = swift_bridgeObjectRetain();
  if (MEMORY[0x1A1AD9B44](v7, v5))
  {
    v8 = 4;
    do
    {
      v9 = v8 - 4;
      v10 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v10 & 1) != 0)
      {
        swift_retain();
        v11 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_12;
      }
      else
      {
        sub_19CFE0160();
        v11 = v8 - 3;
        if (__OFADD__(v9, 1))
        {
LABEL_12:
          __break(1u);
          break;
        }
      }
      if ((EventSubscription.isValid.getter() & 1) != 0
        && (EventSubscription.notify(_:)(), (EventSubscription.isValid.getter() & 1) != 0))
      {
        swift_release();
      }
      else
      {
        sub_19CFDF938();
        sub_19CFDF908();
      }
      ++v8;
    }
    while (v11 != MEMORY[0x1A1AD9B44](v6, v5));
  }
  swift_bridgeObjectRelease();
  sub_19CEB8738(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEB8D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19CEB8D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) - 8) + 80);
  return sub_19CEB8B94(*(_QWORD **)(v4 + 24), v4 + ((v5 + 32) & ~v5), a3, a4);
}

uint64_t AsyncEvent.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CEB8DD4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEB8E00()
{
  return objectdestroy_8Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CEB8E0C()
{
  uint64_t v0;

  return sub_19CEB863C(*(uint64_t **)(v0 + 16));
}

uint64_t method lookup function for AsyncEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncEvent.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19CEB8E28()
{
  return objectdestroy_8Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_19CEB8E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CEB89AC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a3, a4);
}

_QWORD *assignWithCopy for StandaloneObjectGraphBuilder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for StandaloneObjectGraphBuilder(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StandaloneObjectGraphBuilder()
{
  return &type metadata for StandaloneObjectGraphBuilder;
}

void sub_19CEB8EE4(void *a1)
{
  sub_19CEB9930(a1, &qword_1ECEAFFD0, (uint64_t)&unk_1E3DE5FF0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEB8F00(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  void (*v17)(id);
  void *v18;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  __int128 v24;
  char v25;
  _BYTE v26[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      v19 = v4;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v26, &qword_1EE440CC0);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, &qword_1EE440CC0);
        if ((v25 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v23[2];
          v10 = v23[3];
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v12 = v21;
          v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, &qword_1EE440CC0);
        v7 += 80;
        --v6;
      }
      while (v6);
      v17 = (void (*)(id))MEMORY[0x1E0DEEB08];
      v18 = v19;
    }
    else
    {
      v17 = (void (*)(id))MEMORY[0x1E0DEEB08];
      v18 = v4;
    }
    sub_19CD0CC10(v18, 0, v17);
  }
}

void sub_19CEB9174(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE443AE0, (uint64_t *)&unk_1EE440C80, (uint64_t)&unk_1E3DE5CD0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEB9198(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  void (*v17)(id);
  void *v18;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  __int128 v24;
  char v25;
  _BYTE v26[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CD0CC80(v4, 0);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEE30]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      v19 = v4;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v26, &qword_1ECEB25B0);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, &qword_1ECEB25B0);
        if ((v25 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v23[2];
          v10 = v23[3];
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v12 = v21;
          v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CD17108, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, &qword_1ECEB25B0);
        v7 += 80;
        --v6;
      }
      while (v6);
      v17 = (void (*)(id))MEMORY[0x1E0DEEE30];
      v18 = v19;
    }
    else
    {
      v17 = (void (*)(id))MEMORY[0x1E0DEEE30];
      v18 = v4;
    }
    sub_19CD0CC10(v18, 0, v17);
  }
}

void sub_19CEB9404(void *a1)
{
  sub_19CEB9428(a1, &qword_1ECEB2EE0, &qword_1ECEB29C0, (uint64_t)&unk_1E3DE6FE0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEB9428(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  os_unfair_lock_s *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  __int128 v29;
  char v30;
  _QWORD v31[5];
  char v32;
  id v33[5];
  char v34;

  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v5 + 16) + 16);
  os_unfair_lock_lock(v9);
  v10 = v5 + 24;
  swift_beginAccess();
  sub_19CCF8C5C(v5 + 24, (uint64_t)v33, a2);
  if (v34 == 3)
  {

    os_unfair_lock_unlock(v9);
  }
  else if (v34)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v11 = v33[0];
    v31[0] = a1;
    v32 = 2;
    swift_beginAccess();
    v12 = a1;
    sub_19CD1A39C((uint64_t)v31, v10, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v9);
    v13 = v11[2];
    if (v13)
    {
      v14 = (uint64_t)(v11 + 4);
      do
      {
        sub_19CCF8C5C(v14, (uint64_t)v31, a3);
        sub_19CCF8C5C((uint64_t)v31, (uint64_t)v28, a3);
        if ((v30 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v15 = a1;
          v16 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v18 = v28[2];
          v17 = v28[3];
          sub_19CCD14C4(&v29, (uint64_t)v25);
          v19 = v26;
          v20 = v27;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          v21 = (_QWORD *)swift_allocObject();
          v21[2] = v18;
          v21[3] = v17;
          v21[4] = a1;
          v22 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v20 + 8);
          v23 = a1;
          swift_retain();
          v22(a5, v21, v19, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        }
        sub_19CCECFE4((uint64_t)v31, a3);
        v14 += 80;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEB96A0(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  void (*v17)(id);
  void *v18;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  __int128 v24;
  char v25;
  _BYTE v26[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEED0]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEEC0]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      v19 = v4;
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v26, (uint64_t *)&unk_1ECEB06E0);
        sub_19CCF8C5C((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_1ECEB06E0);
        if ((v25 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v23[2];
          v10 = v23[3];
          sub_19CCD14C4(&v24, (uint64_t)v20);
          v12 = v21;
          v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19CCECFE4((uint64_t)v26, (uint64_t *)&unk_1ECEB06E0);
        v7 += 80;
        --v6;
      }
      while (v6);
      v17 = (void (*)(id))MEMORY[0x1E0DEEEC0];
      v18 = v19;
    }
    else
    {
      v17 = (void (*)(id))MEMORY[0x1E0DEEEC0];
      v18 = v4;
    }
    sub_19CD0CC10(v18, 0, v17);
  }
}

void sub_19CEB9914(void *a1)
{
  sub_19CEB9930(a1, &qword_1EE43A900, (uint64_t)&unk_1E3DE6F18, (uint64_t)sub_19CEBEF94);
}

void sub_19CEB9930(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v20;
  void *v21;
  _QWORD *v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  __int128 v28;
  char v29;
  _BYTE v30[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 2;
    sub_19CD49CE0(v8, 0);
    v9 = a1;
    sub_19CD4A200(v8, 0);
    os_unfair_lock_unlock(v7);
    v10 = v8[2];
    if (v10)
    {
      v11 = (uint64_t)(v8 + 4);
      v22 = v8;
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v30, a2);
        sub_19CCF8C5C((uint64_t)v30, (uint64_t)v27, a2);
        if ((v29 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v12 = a1;
          v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v15 = v27[2];
          v14 = v27[3];
          sub_19CCD14C4(&v28, (uint64_t)v24);
          v16 = v25;
          v17 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 8);
          v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        }
        sub_19CCECFE4((uint64_t)v30, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
      v21 = v22;
    }
    else
    {
      v21 = v8;
    }
    sub_19CD4A200(v21, 0);
  }
}

void sub_19CEB9B7C(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  __int128 v32;
  char v33;
  _BYTE v34[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 32);
  if (*(_BYTE *)(v1 + 56) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 56))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD **)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 40);
    v7 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 24) = a1;
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 56) = 2;
    sub_19CEBEF00(v5, v4, v6, v7, 0);
    v8 = a1;
    sub_19CDC30E0(v5, v4, v6, v7, 0);
    os_unfair_lock_unlock(v3);
    v9 = v5[2];
    if (v9)
    {
      v24 = v7;
      v25 = v6;
      v26 = v5;
      v27 = v4;
      v10 = (uint64_t)(v5 + 4);
      do
      {
        sub_19CCF8C5C(v10, (uint64_t)v34, &qword_1EE43E4D0);
        sub_19CCF8C5C((uint64_t)v34, (uint64_t)v31, &qword_1EE43E4D0);
        if ((v33 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v11 = a1;
          v12 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v14 = v31[2];
          v13 = v31[3];
          sub_19CCD14C4(&v32, (uint64_t)v28);
          v16 = v29;
          v15 = v30;
          __swift_project_boxed_opaque_existential_1(v28, v29);
          v17 = (_QWORD *)swift_allocObject();
          v17[2] = v14;
          v17[3] = v13;
          v17[4] = a1;
          v18 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v15 + 8);
          v19 = a1;
          swift_retain();
          v18(sub_19CEBEF94, v17, v16, v15);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        }
        sub_19CCECFE4((uint64_t)v34, &qword_1EE43E4D0);
        v10 += 80;
        --v9;
      }
      while (v9);
      v20 = v26;
      v21 = v27;
      v23 = v24;
      v22 = v25;
    }
    else
    {
      v20 = v5;
      v21 = v4;
      v22 = v6;
      v23 = v7;
    }
    sub_19CDC30E0(v20, v21, v22, v23, 0);
  }
}

void sub_19CEB9E14(void *a1)
{
  sub_19CEB9930(a1, &qword_1EE440D60, (uint64_t)&unk_1E3DE6FB8, (uint64_t)sub_19CEBEF94);
}

void sub_19CEB9E30(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  char v27;
  _BYTE v28[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = a1;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 2;
    sub_19CD19728(v4, v5, 0);
    v6 = a1;
    sub_19CD196D0(v4, v5, 0);
    os_unfair_lock_unlock(v3);
    v7 = v4[2];
    if (v7)
    {
      v20 = v5;
      v21 = v4;
      v8 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v28, &qword_1ECEB0B50);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, &qword_1ECEB0B50);
        if ((v27 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v9 = a1;
          v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v12 = v25[2];
          v11 = v25[3];
          sub_19CCD14C4(&v26, (uint64_t)v22);
          v13 = v23;
          v14 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v17 = a1;
          swift_retain();
          v16(sub_19CEBEF94, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19CCECFE4((uint64_t)v28, &qword_1ECEB0B50);
        v8 += 80;
        --v7;
      }
      while (v7);
      v19 = v20;
      v18 = v21;
    }
    else
    {
      v18 = v4;
      v19 = v5;
    }
    sub_19CD196D0(v18, v19, 0);
  }
}

void sub_19CEBA094(void *a1)
{
  sub_19CEBA0CC(a1, &qword_1EE43D300, (uint64_t)&unk_1E3DE5D20, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA0B0(void *a1)
{
  sub_19CEBA0CC(a1, (uint64_t *)&unk_1ECEB06F0, (uint64_t)&unk_1E3DE62E8, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA0CC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v20;
  void *v21;
  _QWORD *v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  __int128 v28;
  char v29;
  _BYTE v30[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 2;
    sub_19CEBEDC4(v8, 0);
    v9 = a1;
    sub_19CDC2EE0(v8, 0);
    os_unfair_lock_unlock(v7);
    v10 = v8[2];
    if (v10)
    {
      v11 = (uint64_t)(v8 + 4);
      v22 = v8;
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v30, a2);
        sub_19CCF8C5C((uint64_t)v30, (uint64_t)v27, a2);
        if ((v29 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v12 = a1;
          v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v15 = v27[2];
          v14 = v27[3];
          sub_19CCD14C4(&v28, (uint64_t)v24);
          v16 = v25;
          v17 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 8);
          v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        }
        sub_19CCECFE4((uint64_t)v30, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
      v21 = v22;
    }
    else
    {
      v21 = v8;
    }
    sub_19CDC2EE0(v21, 0);
  }
}

void sub_19CEBA318(void *a1)
{
  sub_19CEB9930(a1, &qword_1ECEB0538, (uint64_t)&unk_1E3DE6568, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA334(void *a1)
{
  sub_19CEBA36C(a1, (uint64_t *)&unk_1ECEB1280, (uint64_t)&unk_1E3DE6860, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA350(void *a1)
{
  sub_19CEBA36C(a1, (uint64_t *)&unk_1EE440CA0, (uint64_t)&unk_1E3DE5E88, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA36C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  char v27;
  _BYTE v28[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 2;
    sub_19CD49CE0(v8, 0);
    v9 = a1;
    sub_19CD4A200(v8, 0);
    os_unfair_lock_unlock(v7);
    v10 = v8[2];
    if (v10)
    {
      v11 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v28, a2);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, a2);
        if ((v27 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v12 = a1;
          v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v15 = v25[2];
          v14 = v25[3];
          sub_19CCD14C4(&v26, (uint64_t)v22);
          v16 = v23;
          v17 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 8);
          v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19CCECFE4((uint64_t)v28, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBA5B4(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, &qword_1EE441050);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, &qword_1EE441050);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, &qword_1EE441050);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBA814(void *a1)
{
  sub_19CEBAAB4(a1, (uint64_t *)&unk_1EE43E3B0, (uint64_t *)&unk_1EE440C90, (uint64_t)&unk_1E3DE5FA0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBA838(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = a1;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 2;
    sub_19CEBE61C(v4, v5, 0);
    v6 = a1;
    sub_19CDC2CA4(v4, v5, 0);
    os_unfair_lock_unlock(v3);
    v7 = v4[2];
    if (v7)
    {
      v8 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v24, &qword_1EE43E3F0);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, &qword_1EE43E3F0);
        if ((v23 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v9 = a1;
          v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v12 = v21[2];
          v11 = v21[3];
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v14 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v17 = a1;
          swift_retain();
          v16(sub_19CEBEF94, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, &qword_1EE43E3F0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBAA90(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1ECEB15E0, (uint64_t *)&unk_1EE43CF60, (uint64_t)&unk_1E3DE68B0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBAAB4(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v32;
  _QWORD v33[2];
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[48];
  _BYTE v44[80];

  v36 = a5;
  v35 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (id *)((char *)v33 - v15);
  v17 = (os_unfair_lock_s *)(v5[2] + 16);
  os_unfair_lock_lock(v17);
  v18 = (uint64_t)v5 + *(_QWORD *)(*v5 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v18, (uint64_t)v16, a2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v17);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v20 = *v16;
    *v13 = a1;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    v21 = a1;
    sub_19CD1A39C((uint64_t)v13, v18, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v17);
    v22 = v20[2];
    if (v22)
    {
      v33[1] = v20;
      v23 = (uint64_t)(v20 + 4);
      v34 = (__int128 *)v43;
      do
      {
        sub_19CCF8C5C(v23, (uint64_t)v44, a3);
        sub_19CCF8C5C((uint64_t)v44, (uint64_t)v40, a3);
        if ((v43[40] & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v24 = a1;
          v25 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v27 = v41;
          v26 = v42;
          sub_19CCD14C4(v34, (uint64_t)v37);
          v28 = v38;
          v29 = v39;
          __swift_project_boxed_opaque_existential_1(v37, v38);
          v30 = (_QWORD *)swift_allocObject();
          v30[2] = v27;
          v30[3] = v26;
          v30[4] = a1;
          v31 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v29 + 8);
          v32 = a1;
          swift_retain();
          v31(v36, v30, v28, v29);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
        }
        sub_19CCECFE4((uint64_t)v44, a3);
        v23 += 80;
        --v22;
      }
      while (v22);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBADDC(void *a1)
{
  sub_19CEBA36C(a1, (uint64_t *)&unk_1ECEB1290, (uint64_t)&unk_1E3DE6388, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBADF8(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = a1;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 2;
    sub_19CEBEA00(v4, v5, 0, (uint64_t (*)(id))sub_19CD3BE5C);
    v6 = a1;
    sub_19CEBEA38(v4, v5, 0, (void (*)(id))sub_19CD3BE18);
    os_unfair_lock_unlock(v3);
    v7 = v4[2];
    if (v7)
    {
      v8 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v24, &qword_1EE440CF0);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, &qword_1EE440CF0);
        if ((v23 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v9 = a1;
          v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v12 = v21[2];
          v11 = v21[3];
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v14 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v17 = a1;
          swift_retain();
          v16(sub_19CEBEF94, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, &qword_1EE440CF0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBB060(void *a1)
{
  sub_19CEBA36C(a1, qword_1ECEB1C80, (uint64_t)&unk_1E3DE6EF0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB07C(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE440CB0, (uint64_t *)&unk_1EE43E3D0, (uint64_t)&unk_1E3DE5ED8, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB0A0(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1EE436B90, &qword_1EE43E3F8, (uint64_t)&unk_1E3DE6EC8, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB0C4(void *a1)
{
  sub_19CEBB0E0(a1, &qword_1EE43E4B0, (uint64_t)&unk_1E3DE6EA0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB0E0(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  char v27;
  _BYTE v28[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 2;
    sub_19CD0CC80(v8, 0);
    v9 = a1;
    sub_19CD0CC10(v8, 0, (void (*)(id))MEMORY[0x1E0DEEE30]);
    os_unfair_lock_unlock(v7);
    v10 = v8[2];
    if (v10)
    {
      v11 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v28, a2);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, a2);
        if ((v27 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v12 = a1;
          v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v15 = v25[2];
          v14 = v25[3];
          sub_19CCD14C4(&v26, (uint64_t)v22);
          v16 = v23;
          v17 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 8);
          v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19CCECFE4((uint64_t)v28, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBB330(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void *v4;
  unint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  __int128 v23;
  char v24;
  _BYTE v25[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 32);
    v4 = *(void **)(v1 + 40);
    v6 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 48) = 2;
    sub_19CEBEE38(v6, v5, v4, 0);
    v7 = a1;
    sub_19CDC2F04(v6, v5, v4, 0);
    os_unfair_lock_unlock(v3);
    v8 = v6[2];
    if (v8)
    {
      v9 = (uint64_t)(v6 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v25, &qword_1ECEB0920);
        sub_19CCF8C5C((uint64_t)v25, (uint64_t)v22, &qword_1ECEB0920);
        if ((v24 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v10 = a1;
          v11 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v13 = v22[2];
          v12 = v22[3];
          sub_19CCD14C4(&v23, (uint64_t)v19);
          v14 = v20;
          v15 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          v16 = (_QWORD *)swift_allocObject();
          v16[2] = v13;
          v16[3] = v12;
          v16[4] = a1;
          v17 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v15 + 8);
          v18 = a1;
          swift_retain();
          v17(sub_19CEBEF94, v16, v14, v15);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19CCECFE4((uint64_t)v25, &qword_1ECEB0920);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBB598(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1ECEB2430, &qword_1ECEB1278, (uint64_t)&unk_1E3DE6BD0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB5BC(void *a1)
{
  sub_19CEB9428(a1, &qword_1EE43E480, &qword_1EE43E488, (uint64_t)&unk_1E3DE6C20, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB5E0(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 33) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 33))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    v5 = *(unsigned __int8 *)(v1 + 32);
    *(_WORD *)(v1 + 32) = 512;
    sub_19CEBEC80(v4, v5, 0);
    v6 = a1;
    sub_19CD234C4(v4, v5, 0);
    os_unfair_lock_unlock(v3);
    v7 = v4[2];
    if (v7)
    {
      v8 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v24, &qword_1EE43E490);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, &qword_1EE43E490);
        if ((v23 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v9 = a1;
          v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v12 = v21[2];
          v11 = v21[3];
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v14 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v17 = a1;
          swift_retain();
          v16(sub_19CEBEF94, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, &qword_1EE43E490);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBB83C(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1EE43E498, (uint64_t *)&unk_1EE43E4A0, (uint64_t)&unk_1E3DE6CC0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB860(void *a1)
{
  sub_19CEBB898(a1, &qword_1EE439CD0, (uint64_t)&unk_1E3DE65E0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB87C(void *a1)
{
  sub_19CEBB898(a1, &qword_1EE43BB60, (uint64_t)&unk_1E3DE6D88, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBB898(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  char v27;
  _BYTE v28[80];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 16) + 16);
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  if (*(_BYTE *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v7);
  }
  else if (*(_BYTE *)(v4 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = 2;
    sub_19CEBEDC4(v8, 0);
    v9 = a1;
    sub_19CDC2EE0(v8, 0);
    os_unfair_lock_unlock(v7);
    v10 = v8[2];
    if (v10)
    {
      v11 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v11, (uint64_t)v28, a2);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, a2);
        if ((v27 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v12 = a1;
          v13 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v15 = v25[2];
          v14 = v25[3];
          sub_19CCD14C4(&v26, (uint64_t)v22);
          v16 = v23;
          v17 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v15;
          v18[3] = v14;
          v18[4] = a1;
          v19 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v17 + 8);
          v20 = a1;
          swift_retain();
          v19(a4, v18, v16, v17);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19CCECFE4((uint64_t)v28, a2);
        v11 += 80;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBBAE0(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  char v27;
  _BYTE v28[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 72) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 72))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 56);
    v4 = *(_QWORD *)(v1 + 64);
    v7 = *(_QWORD *)(v1 + 40);
    v6 = *(_QWORD *)(v1 + 48);
    v8 = *(_QWORD **)(v1 + 24);
    v9 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = a1;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_QWORD *)(v1 + 64) = 0;
    *(_BYTE *)(v1 + 72) = 2;
    sub_19CCEC510(v8, v9, v7, v6, v5, v4, 0);
    v10 = a1;
    sub_19CCEC56C(v8, v9, v7, v6, v5, v4, 0);
    os_unfair_lock_unlock(v3);
    v11 = v8[2];
    if (v11)
    {
      v12 = (uint64_t)(v8 + 4);
      do
      {
        sub_19CCF8C5C(v12, (uint64_t)v28, (uint64_t *)&unk_1ECEB0180);
        sub_19CCF8C5C((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1ECEB0180);
        if ((v27 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v13 = a1;
          v14 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v16 = v25[2];
          v15 = v25[3];
          sub_19CCD14C4(&v26, (uint64_t)v22);
          v17 = v23;
          v18 = v24;
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v19 = (_QWORD *)swift_allocObject();
          v19[2] = v16;
          v19[3] = v15;
          v19[4] = a1;
          v20 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v18 + 8);
          v21 = a1;
          swift_retain();
          v20(sub_19CEBEF94, v19, v17, v18);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        }
        sub_19CCECFE4((uint64_t)v28, (uint64_t *)&unk_1ECEB0180);
        v12 += 80;
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBBD6C(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  __int128 v35;
  char v36;
  _BYTE v37[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 120) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 120))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 104);
    v4 = *(_QWORD *)(v1 + 112);
    v7 = *(_QWORD *)(v1 + 88);
    v6 = *(_QWORD *)(v1 + 96);
    v8 = *(_QWORD *)(v1 + 80);
    v10 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 64);
    v11 = *(_QWORD *)(v1 + 48);
    v29 = v11;
    v30 = *(_QWORD *)(v1 + 72);
    v13 = *(_QWORD **)(v1 + 24);
    v12 = *(_QWORD *)(v1 + 32);
    v27 = v12;
    v28 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 24) = a1;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 80) = 0u;
    *(_OWORD *)(v1 + 96) = 0u;
    *(_QWORD *)(v1 + 112) = 0;
    *(_BYTE *)(v1 + 120) = 2;
    v14 = v8;
    sub_19CEBECF4(v13, v12, v28, v11, v10, v9, v30, v8, v7, v6, v5, v4, 0);
    v15 = a1;
    sub_19CDC2E30(v13, v27, v28, v29, v10, v9, v30, v14, v7, v6, v5, v4, 0);
    os_unfair_lock_unlock(v3);
    v16 = v13[2];
    if (v16)
    {
      v17 = (uint64_t)(v13 + 4);
      do
      {
        sub_19CCF8C5C(v17, (uint64_t)v37, (uint64_t *)&unk_1ECEB03A0);
        sub_19CCF8C5C((uint64_t)v37, (uint64_t)v34, (uint64_t *)&unk_1ECEB03A0);
        if ((v36 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v18 = a1;
          v19 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v21 = v34[2];
          v20 = v34[3];
          sub_19CCD14C4(&v35, (uint64_t)v31);
          v22 = v32;
          v23 = v33;
          __swift_project_boxed_opaque_existential_1(v31, v32);
          v24 = (_QWORD *)swift_allocObject();
          v24[2] = v21;
          v24[3] = v20;
          v24[4] = a1;
          v25 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v23 + 8);
          v26 = a1;
          swift_retain();
          v25(sub_19CEBEF94, v24, v22, v23);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        }
        sub_19CCECFE4((uint64_t)v37, (uint64_t *)&unk_1ECEB03A0);
        v17 += 80;
        --v16;
      }
      while (v16);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBC020(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1ECEB2418, &qword_1EE43D310, (uint64_t)&unk_1E3DE64C8, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC044(void *a1)
{
  sub_19CEBA36C(a1, &qword_1ECEB12A0, (uint64_t)&unk_1E3DE6590, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC060(void *a1)
{
  sub_19CEBAAB4(a1, (uint64_t *)&unk_1ECEB2420, &qword_1ECEB1270, (uint64_t)&unk_1E3DE6040, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC084(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE437350, (uint64_t *)&unk_1EE437370, (uint64_t)&unk_1E3DE6B80, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC0A8(void *a1)
{
  sub_19CEBA36C(a1, &qword_1EE437390, (uint64_t)&unk_1E3DE67C0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC0C4(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE43E470, (uint64_t *)&unk_1EE440D50, (uint64_t)&unk_1E3DE6B30, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC0E8(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, (uint64_t *)&unk_1EE43D1C0);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1EE43D1C0);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, (uint64_t *)&unk_1EE43D1C0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBC348(void *a1)
{
  sub_19CEBAAB4(a1, (uint64_t *)&unk_1ECEB0C50, &qword_1ECEB0C60, (uint64_t)&unk_1E3DE6108, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC36C(void *a1)
{
  sub_19CEBA36C(a1, &qword_1ECEB0720, (uint64_t)&unk_1E3DE6130, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC388(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _QWORD v23[10];
  char v24;
  id v25[10];
  char v26;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19CCF8C5C(v1 + 24, (uint64_t)v25, (uint64_t *)&unk_1EE43E450);
  if (v26 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v26)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = v25[0];
    v23[0] = a1;
    v24 = 2;
    swift_beginAccess();
    v5 = a1;
    sub_19CD1A39C((uint64_t)v23, v1 + 24, (uint64_t *)&unk_1EE43E450);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, (uint64_t *)&unk_1EE440D30);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1EE440D30);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, (uint64_t *)&unk_1EE440D30);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBC610(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE43E460, (uint64_t *)&unk_1EE440D40, (uint64_t)&unk_1E3DE6AE0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC634(void *a1)
{
  sub_19CEBA36C(a1, (uint64_t *)&unk_1EE43E440, (uint64_t)&unk_1E3DE69F0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC650(void *a1)
{
  sub_19CEBB0E0(a1, qword_1EE443B00, (uint64_t)&unk_1E3DE6A40, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC66C(void *a1)
{
  sub_19CEBAAB4(a1, (uint64_t *)&unk_1EE43E410, (uint64_t *)&unk_1EE440D00, (uint64_t)&unk_1E3DE6900, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC690(void *a1)
{
  sub_19CEBC6D8(a1, (uint64_t *)&unk_1EE43E430, (uint64_t *)&unk_1EE440D20, (uint64_t)&unk_1E3DE69A0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC6B4(void *a1)
{
  sub_19CEBC6D8(a1, (uint64_t *)&unk_1EE43E420, (uint64_t *)&unk_1EE440D10, (uint64_t)&unk_1E3DE6950, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC6D8(void *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  os_unfair_lock_s *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  __int128 v29;
  char v30;
  _QWORD v31[7];
  char v32;
  id v33[7];
  char v34;

  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v5 + 16) + 16);
  os_unfair_lock_lock(v9);
  v10 = v5 + 24;
  swift_beginAccess();
  sub_19CCF8C5C(v5 + 24, (uint64_t)v33, a2);
  if (v34 == 3)
  {

    os_unfair_lock_unlock(v9);
  }
  else if (v34)
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v11 = v33[0];
    v31[0] = a1;
    v32 = 2;
    swift_beginAccess();
    v12 = a1;
    sub_19CD1A39C((uint64_t)v31, v10, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v9);
    v13 = v11[2];
    if (v13)
    {
      v14 = (uint64_t)(v11 + 4);
      do
      {
        sub_19CCF8C5C(v14, (uint64_t)v31, a3);
        sub_19CCF8C5C((uint64_t)v31, (uint64_t)v28, a3);
        if ((v30 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v15 = a1;
          v16 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v18 = v28[2];
          v17 = v28[3];
          sub_19CCD14C4(&v29, (uint64_t)v25);
          v19 = v26;
          v20 = v27;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          v21 = (_QWORD *)swift_allocObject();
          v21[2] = v18;
          v21[3] = v17;
          v21[4] = a1;
          v22 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v20 + 8);
          v23 = a1;
          swift_retain();
          v22(a5, v21, v19, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        }
        sub_19CCECFE4((uint64_t)v31, a3);
        v14 += 80;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBC950(void *a1)
{
  sub_19CEBAAB4(a1, (uint64_t *)&unk_1EE43E400, (uint64_t *)&unk_1EE443AF0, (uint64_t)&unk_1E3DE6810, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBC974(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  __int128 v23;
  char v24;
  _BYTE v25[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 32);
    v4 = *(_QWORD *)(v1 + 40);
    v6 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 48) = 2;
    sub_19CEBE998(v6, v5, v4, 0);
    v7 = a1;
    sub_19CDC2CE0(v6, v5, v4, 0);
    os_unfair_lock_unlock(v3);
    v8 = v6[2];
    if (v8)
    {
      v9 = (uint64_t)(v6 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v25, &qword_1EE4371B0);
        sub_19CCF8C5C((uint64_t)v25, (uint64_t)v22, &qword_1EE4371B0);
        if ((v24 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v10 = a1;
          v11 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v13 = v22[2];
          v12 = v22[3];
          sub_19CCD14C4(&v23, (uint64_t)v19);
          v14 = v20;
          v15 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          v16 = (_QWORD *)swift_allocObject();
          v16[2] = v13;
          v16[3] = v12;
          v16[4] = a1;
          v17 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v15 + 8);
          v18 = a1;
          swift_retain();
          v17(sub_19CEBEF94, v16, v14, v15);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19CCECFE4((uint64_t)v25, &qword_1EE4371B0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBCBDC(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  __int128 v22;
  char v23;
  _BYTE v24[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 40))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = a1;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 2;
    sub_19CEBEA00(v4, v5, 0, (uint64_t (*)(id))sub_19CDC2D64);
    v6 = a1;
    sub_19CEBEA38(v4, v5, 0, (void (*)(id))sub_19CDC2D38);
    os_unfair_lock_unlock(v3);
    v7 = v4[2];
    if (v7)
    {
      v8 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v8, (uint64_t)v24, &qword_1EE436F88);
        sub_19CCF8C5C((uint64_t)v24, (uint64_t)v21, &qword_1EE436F88);
        if ((v23 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v9 = a1;
          v10 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v12 = v21[2];
          v11 = v21[3];
          sub_19CCD14C4(&v22, (uint64_t)v18);
          v13 = v19;
          v14 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          v15 = (_QWORD *)swift_allocObject();
          v15[2] = v12;
          v15[3] = v11;
          v15[4] = a1;
          v16 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v14 + 8);
          v17 = a1;
          swift_retain();
          v16(sub_19CEBEF94, v15, v13, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19CCECFE4((uint64_t)v24, &qword_1EE436F88);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBCE44(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, &qword_1EE436F90);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, &qword_1EE436F90);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, &qword_1EE436F90);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBD0A4(void *a1)
{
  sub_19CEBA36C(a1, qword_1EE43B200, (uint64_t)&unk_1E3DE6518, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD0C0(void *a1)
{
  sub_19CEB9428(a1, (uint64_t *)&unk_1EE436B80, &qword_1EE440CF8, (uint64_t)&unk_1E3DE6478, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD0E4(void *a1)
{
  sub_19CEBB0E0(a1, (uint64_t *)&unk_1EE43E3E0, (uint64_t)&unk_1E3DE6090, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD100(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1EE440CD8, (uint64_t *)&unk_1EE440CE0, (uint64_t)&unk_1E3DE63B0, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD124(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEB18]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, (uint64_t *)&unk_1EE440CC8);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1EE440CC8);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, (uint64_t *)&unk_1EE440CC8);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBD384(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1EE43B0D0, (uint64_t *)&unk_1EE43B520, (uint64_t)&unk_1E3DE6298, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD3A8(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  __int128 v23;
  char v24;
  _BYTE v25[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 48) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 48))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 32);
    v4 = *(_QWORD *)(v1 + 40);
    v6 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 48) = 2;
    sub_19CEBE578(v6, v5, v4, 0);
    v7 = a1;
    sub_19CDC2C40(v6, v5, v4, 0);
    os_unfair_lock_unlock(v3);
    v8 = v6[2];
    if (v8)
    {
      v9 = (uint64_t)(v6 + 4);
      do
      {
        sub_19CCF8C5C(v9, (uint64_t)v25, (uint64_t *)&unk_1EE43E3C0);
        sub_19CCF8C5C((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1EE43E3C0);
        if ((v24 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v10 = a1;
          v11 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v13 = v22[2];
          v12 = v22[3];
          sub_19CCD14C4(&v23, (uint64_t)v19);
          v14 = v20;
          v15 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          v16 = (_QWORD *)swift_allocObject();
          v16[2] = v13;
          v16[3] = v12;
          v16[4] = a1;
          v17 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v15 + 8);
          v18 = a1;
          swift_retain();
          v17(sub_19CEBEF94, v16, v14, v15);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19CCECFE4((uint64_t)v25, (uint64_t *)&unk_1EE43E3C0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19CEBD610(void *a1)
{
  sub_19CEBA36C(a1, &qword_1ECEB0700, (uint64_t)&unk_1E3DE6270, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD62C(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1ECEB0830, (uint64_t *)&unk_1ECEB06D0, (uint64_t)&unk_1E3DE6158, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD650(void *a1)
{
  sub_19CEBAAB4(a1, &qword_1EE43CA90, (uint64_t *)&unk_1EE43BE50, (uint64_t)&unk_1E3DE5E10, (uint64_t)sub_19CEBEF94);
}

void sub_19CEBD674(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;
  _BYTE v23[80];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(_BYTE *)(v1 + 32))
  {
    sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 2;
    sub_19CCF5064(v4, 0, (uint64_t (*)(id))MEMORY[0x1E0DEEED0]);
    v5 = a1;
    sub_19CD0CC10(v4, 0, (void (*)(id))MEMORY[0x1E0DEEEC0]);
    os_unfair_lock_unlock(v3);
    v6 = v4[2];
    if (v6)
    {
      v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19CCF8C5C(v7, (uint64_t)v23, &qword_1EE439FA0);
        sub_19CCF8C5C((uint64_t)v23, (uint64_t)v20, &qword_1EE439FA0);
        if ((v22 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          swift_allocError();
          *v8 = a1;
          v9 = a1;
          swift_continuation_throwingResumeWithError();
        }
        else
        {
          swift_release();
          v11 = v20[2];
          v10 = v20[3];
          sub_19CCD14C4(&v21, (uint64_t)v17);
          v12 = v18;
          v13 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = v11;
          v14[3] = v10;
          v14[4] = a1;
          v15 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v13 + 8);
          v16 = a1;
          swift_retain();
          v15(sub_19CEBEF94, v14, v12, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19CCECFE4((uint64_t)v23, &qword_1EE439FA0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CEBD8D4(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEAFFD0, (uint64_t)&unk_1E3DE5FC8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBD8F0(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE440CC0, (uint64_t)&unk_1E3DE5F78, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBD90C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  char v22;

  sub_19CCF8C5C(v4, (uint64_t)v20, a2);
  if ((v22 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    swift_allocError();
    *v7 = a1;
    v8 = a1;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    swift_release();
    v11 = v20[2];
    v10 = v20[3];
    sub_19CCD14C4(&v21, (uint64_t)v17);
    v12 = v18;
    v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v11;
    v14[3] = v10;
    v14[4] = a1;
    v15 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v13 + 8);
    swift_retain();
    v16 = a1;
    v15(a4, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

uint64_t sub_19CEBDA38(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0B50, (uint64_t)&unk_1E3DE66D0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDA54(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB29C0, (uint64_t)&unk_1E3DE5B90, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDA70(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB25B0, (uint64_t)&unk_1E3DE5B68, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDA8C(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB06E0, (uint64_t)&unk_1E3DE61A8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDAA8(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E4D0, (uint64_t)&unk_1E3DE6F40, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDAC4(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE440D60, (uint64_t)&unk_1E3DE6F90, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDAE0(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43D1C0, (uint64_t)&unk_1E3DE5CF8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDAFC(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43C800, (uint64_t)&unk_1E3DE7008, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDB18(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB04C0, (uint64_t)&unk_1E3DE6E00, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDB34(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE437380, (uint64_t)&unk_1E3DE6B58, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDB50(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43D300, (uint64_t)&unk_1E3DE5D48, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDB6C(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB06F0, (uint64_t)&unk_1E3DE6310, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDB88(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0538, (uint64_t)&unk_1E3DE6540, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDBA4(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB1280, (uint64_t)&unk_1E3DE6888, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDBC0(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE441050, (uint64_t)&unk_1E3DE5D70, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDBDC(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440C90, (uint64_t)&unk_1E3DE5DC0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDBF8(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E3F0, (uint64_t)&unk_1E3DE5F28, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDC14(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB1290, (uint64_t)&unk_1E3DE6360, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDC30(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43CF60, (uint64_t)&unk_1E3DE6838, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDC4C(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE440CF0, (uint64_t)&unk_1E3DE6428, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDC68(void *a1)
{
  return sub_19CEBD90C(a1, qword_1ECEB1C80, (uint64_t)&unk_1E3DE64F0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDC84(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43D310, (uint64_t)&unk_1E3DE63D8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDCA0(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43E3D0, (uint64_t)&unk_1E3DE5EB0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDCBC(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E3F8, (uint64_t)&unk_1E3DE6450, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDCD8(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0920, (uint64_t)&unk_1E3DE6E28, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDCF4(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E4B0, (uint64_t)&unk_1E3DE6E78, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD10(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB1270, (uint64_t)&unk_1E3DE6068, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD2C(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB1278, (uint64_t)&unk_1E3DE6BA8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD48(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB12A0, (uint64_t)&unk_1E3DE65B8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD64(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E488, (uint64_t)&unk_1E3DE6BF8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD80(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43E490, (uint64_t)&unk_1E3DE6C48, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDD9C(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43E4A0, (uint64_t)&unk_1E3DE6C98, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDDB8(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE439CD0, (uint64_t)&unk_1E3DE6608, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDDD4(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43BB60, (uint64_t)&unk_1E3DE6D10, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDDF0(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB0180, (uint64_t)&unk_1E3DE6D60, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE0C(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE43BE60, (uint64_t)&unk_1E3DE6DB0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE28(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB03A0, (uint64_t)&unk_1E3DE6CE8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE44(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE437390, (uint64_t)&unk_1E3DE6770, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE60(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D50, (uint64_t)&unk_1E3DE6B08, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE7C(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0C60, (uint64_t)&unk_1E3DE60B8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDE98(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0720, (uint64_t)&unk_1E3DE60E0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDEB4(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D30, (uint64_t)&unk_1E3DE6A68, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDED0(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D40, (uint64_t)&unk_1E3DE6AB8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDEEC(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43E440, (uint64_t)&unk_1E3DE69C8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF08(void *a1)
{
  return sub_19CEBD90C(a1, qword_1EE443B00, (uint64_t)&unk_1E3DE6A18, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF24(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43B520, (uint64_t)&unk_1E3DE62C0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF40(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D00, (uint64_t)&unk_1E3DE68D8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF5C(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D20, (uint64_t)&unk_1E3DE6978, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF78(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1ECEB06D0, (uint64_t)&unk_1E3DE6180, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDF94(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE440D10, (uint64_t)&unk_1E3DE6928, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDFB0(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE443AF0, (uint64_t)&unk_1E3DE67E8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDFCC(void *a1)
{
  return sub_19CEBD90C(a1, qword_1EE43B200, (uint64_t)&unk_1E3DE64A0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBDFE8(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE436F90, (uint64_t)&unk_1E3DE6658, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE004(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE4371B0, (uint64_t)&unk_1E3DE6680, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE020(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE436F88, (uint64_t)&unk_1E3DE66F8, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE03C(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43E3E0, (uint64_t)&unk_1E3DE6018, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE058(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43E3C0, (uint64_t)&unk_1E3DE5E38, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE074(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1ECEB0700, (uint64_t)&unk_1E3DE6248, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE090(void *a1)
{
  return sub_19CEBD90C(a1, &qword_1EE439FA0, (uint64_t)&unk_1E3DE61D0, (uint64_t)sub_19CEBEF94);
}

uint64_t sub_19CEBE0AC(void *a1)
{
  return sub_19CEBD90C(a1, (uint64_t *)&unk_1EE43BE50, (uint64_t)&unk_1E3DE5DE8, (uint64_t)sub_19CEBEF94);
}

unint64_t sub_19CEBE0C8(unint64_t result, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    v4 = a2 + 16 * result;
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = *(_OWORD *)(v4 + 32);
    swift_retain();
    a3(sub_19CD492B8, v5);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_19CEBE148(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v3 = sub_19CFDF278();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3, v5);
  v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E0CCE190], v3);
    sub_19CFDF2A8();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
  return result;
}

void sub_19CEBE1E0(void *a1, uint64_t a2, NSObject *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;

  v6 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 16);
  v8 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_19CED656C(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    v7 = sub_19CED656C((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v11 + 1;
  v7[v11 + 4] = a1;
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_19CEBE2C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEBE2E8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_19CEBE33C(void *a1)
{
  uint64_t v1;

  sub_19CEBE1E0(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19CEBE344()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEBE390()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_19CEBE3C4(unint64_t a1)
{
  uint64_t v1;

  return sub_19CEBE0C8(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v1 + 24));
}

uint64_t sub_19CEBE3D0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_19CEBE3F4()
{
  unint64_t result;

  result = qword_1EE439FB0;
  if (!qword_1EE439FB0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AsyncObjectGraphError, &type metadata for AsyncObjectGraphError);
    atomic_store(result, (unint64_t *)&qword_1EE439FB0);
  }
  return result;
}

uint64_t sub_19CEBE438()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE448()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE458()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE470()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEBE494()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CEBE4A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEBE4C8()
{
  return swift_deallocObject();
}

uint64_t sub_19CEBE4D8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE4E8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE4F8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE508()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE518()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE528()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE538()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE548()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE558()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE568()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBE578(id result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBE5DC()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE5EC()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE5FC()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE60C()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBE61C(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBE658()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE668()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE678()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE688()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE698()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6A8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6B8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6C8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6D8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6E8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE6F8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE708()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE718()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE728()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE738()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE748()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE758()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE768()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE778()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE788()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE798()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7A8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7B8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7C8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7D8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7E8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE7F8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE808()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE818()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE828()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE838()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE848()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE858()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE868()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE878()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE888()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE898()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8A8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8B8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8C8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8D8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8E8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE8F8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE908()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE918()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE928()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE938()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE948()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE958()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE968()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE978()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBE988()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBE998(id result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
      sub_19CDC2D64((uint64_t)result);
LABEL_3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBE9F0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBEA00(id result, uint64_t a2, char a3, uint64_t (*a4)(id))
{
  switch(a3)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      result = (id)a4(result);
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19CEBEA38(id a1, uint64_t a2, char a3, void (*a4)(id))
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      a4(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19CEBEA70()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEA80()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEA90()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAA0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAB0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAC0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAD0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAE0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEAF0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB00()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB10()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB20()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB30()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB40()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB50()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB60()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB70()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB80()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEB90()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBA0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBB0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBC0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBD0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBE0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEBF0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC00()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC10()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC20()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC30()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC40()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC50()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC60()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEC70()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBEC80(id result, uint64_t a2, char a3)
{
  if (a3 == 3 || a3 == 2)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_19CEBECA4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBECB4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBECC4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBECD4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBECE4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBECF4(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBEDA4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEDB4()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBEDC4(id result, char a2)
{
  if (a2 == 3 || a2 == 2)
    return result;
  if (!a2)
    return (id)swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_19CEBEDE8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEDF8()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEE08()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEE18()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEE28()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBEE38(id result, unint64_t a2, void *a3, char a4)
{
  switch(a4)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      sub_19CD3BE5C((uint64_t)result, a2);
      result = a3;
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBEE90()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEEA0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEEB0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEEC0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEED0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEEE0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEEF0()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

id sub_19CEBEF00(id result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      result = (id)sub_19CDB390C((uint64_t)result, a2);
      break;
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CEBEF38()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEF48()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEF58()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEF68()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_19CEBEF78()
{
  return objectdestroy_29Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

ValueMetadata *type metadata accessor for DsIdFieldProvider()
{
  return &type metadata for DsIdFieldProvider;
}

uint64_t sub_19CEBEFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return swift_task_switch();
}

uint64_t join<A, B>(_:by:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t *, uint64_t);
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  dispatch_group_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  dispatch_group_t v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  uint64_t (*v88)();
  _QWORD *v89;

  v81 = a7;
  v82 = a6;
  v79 = (id)a5;
  v80 = a4;
  v67 = a3;
  v66 = a2;
  v78 = a1;
  v8 = sub_19CFDF2D8();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v71 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a4 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v13, v14);
  v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_19CFDFD88();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v15, v17);
  v70 = sub_19CFDF308();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_19CFDFDAC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E0DEF8D8], v21);
  sub_19CFDF2F0();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v16, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v68 = v20;
  v76 = sub_19CFDFDDC();
  v75 = dispatch_group_create();
  v26 = swift_allocObject();
  v74 = v26;
  v27 = v80;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v26 + 16) = sub_19CFDF398();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = MEMORY[0x1E0DEE9D8];
  v29 = v11;
  v30 = *(void (**)(char *, uint64_t *, uint64_t))(v11 + 16);
  v31 = v77;
  v32 = v27;
  v30(v77, v78, v27);
  v33 = (*(unsigned __int8 *)(v29 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v34 = (v12 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (char *)swift_allocObject();
  v38 = (uint64_t)v79;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v38;
  v39 = v81;
  *((_QWORD *)v37 + 4) = v82;
  *((_QWORD *)v37 + 5) = v39;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v37[v33], v31, v32);
  v40 = v74;
  v41 = v75;
  *(_QWORD *)&v37[v34] = v75;
  *(_QWORD *)&v37[v35] = v40;
  *(_QWORD *)&v37[v36] = v28;
  v42 = (void *)v76;
  *(_QWORD *)&v37[(v36 + 15) & 0xFFFFFFFFFFFFFFF8] = v76;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_19CEBF98C;
  *(_QWORD *)(v43 + 24) = v37;
  v88 = sub_19CCE9D70;
  v89 = (_QWORD *)v43;
  aBlock = MEMORY[0x1E0C809B0];
  v85 = 1107296256;
  v86 = sub_19CCE9D50;
  v87 = &block_descriptor_21;
  v44 = _Block_copy(&aBlock);
  v45 = v41;
  v46 = v40;
  swift_retain();
  v47 = v28;
  swift_retain();
  v48 = v42;
  swift_retain();
  swift_release();
  dispatch_sync(v48, v44);
  _Block_release(v44);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v40 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v52 = type metadata accessor for Promise(0, (uint64_t)v79, v50, v51);
    v79 = v45;
    v56 = Promise.__allocating_init()(v52, v53, v54, v55);
    v57 = (_QWORD *)swift_allocObject();
    v58 = v82;
    v57[2] = v80;
    v57[3] = v58;
    v57[4] = v81;
    v57[5] = v56;
    v78 = v56;
    v59 = v67;
    v57[6] = v66;
    v57[7] = v59;
    v57[8] = v46;
    v57[9] = v47;
    v88 = sub_19CEBFC80;
    v89 = v57;
    aBlock = MEMORY[0x1E0C809B0];
    v85 = 1107296256;
    v86 = sub_19CD0C78C;
    v87 = &block_descriptor_15_0;
    v60 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v61 = v68;
    sub_19CFDF2F0();
    v83 = MEMORY[0x1E0DEE9D8];
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    v62 = v71;
    v63 = v73;
    sub_19CFE0070();
    v64 = v79;
    sub_19CFDFD70();
    _Block_release(v60);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v62, v63);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v61, v70);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v78;
  }
  return result;
}

uint64_t sub_19CEBF61C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEBF640(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  NSObject *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, double);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  NSObject *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void (*)(uint64_t), _QWORD *, void (*)(void *), uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v48[5];

  v11 = a6;
  v46 = a3;
  v14 = a2;
  v16 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v20);
  v23 = (char *)&v39 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v25 = a8;
  v27 = v26;
  v24(v18, a1, v11, v21);
  sub_19CFDF770();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_19CFDFFBC();
  if (v48[0])
  {
    v40 = a9;
    v41 = v11;
    v44 = v27;
    v45 = a7;
    v42 = AssociatedConformanceWitness;
    v43 = v23;
    do
    {
      dispatch_group_enter(v14);
      v29 = v14;
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = v11;
      v30[3] = a7;
      v31 = v40;
      v30[4] = v25;
      v30[5] = v31;
      v30[6] = v46;
      v30[7] = v29;
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = a4;
      *(_QWORD *)(v32 + 24) = v29;
      v48[3] = sub_19CD48F8C();
      v48[4] = &protocol witness table for OS_dispatch_queue;
      v47 = *(void (**)(void (*)(uint64_t), _QWORD *, void (*)(void *), uint64_t, _QWORD *, uint64_t, uint64_t))(v31 + 16);
      v48[0] = a5;
      v33 = v25;
      v34 = swift_getAssociatedTypeWitness();
      v35 = v29;
      v27 = v44;
      swift_retain();
      swift_retain();
      v36 = a5;
      v37 = v34;
      v25 = v33;
      v11 = v41;
      v47(sub_19CEBFCC0, v30, sub_19CEBE33C, v32, v48, v37, v31);
      a7 = v45;
      swift_unknownObjectRelease();
      v14 = v29;
      swift_release();
      v23 = v43;
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_19CFDFFBC();
    }
    while (v48[0]);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v27);
}

uint64_t sub_19CEBF8E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

uint64_t sub_19CEBF98C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_19CEBF640((uint64_t)v0 + v3, *(NSObject **)((char *)v0 + v4), *(_QWORD *)((char *)v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)((char *)v0+ ((((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4], v0[5]);
}

void sub_19CEBFA00(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v10 - v9, a1, AssociatedTypeWitness, v7);
  swift_beginAccess();
  sub_19CFDF938();
  sub_19CFDF908();
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_19CEBFB08()
{
  return swift_deallocObject();
}

uint64_t sub_19CEBFB18(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_QWORD *)(a4 + 16);
  swift_beginAccess();
  v13 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Promise.resolve(_:)((uint64_t)v11, v14, v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_19CEBFC44()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEBFC80()
{
  uint64_t v0;

  return sub_19CEBFB18(*(_QWORD *)(v0 + 40), *(void (**)(uint64_t, uint64_t))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_19CEBFC94()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_19CEBFCC0(uint64_t a1)
{
  uint64_t v1;

  sub_19CEBFA00(a1, *(_QWORD *)(v1 + 48), *(NSObject **)(v1 + 56));
}

uint64_t sub_19CEBFCD0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CEBFD00(uint64_t a1)
{
  return sub_19CCCC8A4(a1, &qword_1EE43A690, &qword_1EE43A698, &qword_1EE465B50);
}

uint64_t static JitterPipelineBackoff.forJavaScriptLoading.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 16) = xmmword_19D055400;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t JitterPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  type metadata accessor for ExponentialPipelineBackoff();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 40) = 0;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v4 + 16) = v5;
  return v4;
}

uint64_t JitterPipelineBackoff.init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;

  type metadata accessor for ExponentialPipelineBackoff();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 40) = 0;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v2 + 16) = v5;
  return v2;
}

double JitterPipelineBackoff.baseWaitInterval.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

double JitterPipelineBackoff.maxWaitInterval.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 24);
}

Swift::Double __swiftcall JitterPipelineBackoff.nextWaitInterval()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::Double result;
  double v4;
  unint64_t v5;
  double v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  sub_19CF31CE8(v1, &v6);
  objc_msgSend(v2, sel_unlock);
  v4 = v6;
  if (v6 < 0.0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = sub_19CEC001C(0x20000000000001uLL);
  result = v4 * ((double)v5 * 1.11022302e-16) + 0.0;
  if (v5 == 0x20000000000000)
    return v4;
  return result;
}

Swift::Void __swiftcall JitterPipelineBackoff.reset()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  *(_QWORD *)(v1 + 40) = 0;
  objc_msgSend(v2, sel_unlock);
}

uint64_t JitterPipelineBackoff.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t JitterPipelineBackoff.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_19CEBFFDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 32);
  objc_msgSend(v2, sel_lock);
  *(_QWORD *)(v1 + 40) = 0;
  return objc_msgSend(v2, sel_unlock);
}

unint64_t sub_19CEC001C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1A1ADBEB4](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1A1ADBEB4](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for JitterPipelineBackoff()
{
  return objc_opt_self();
}

uint64_t method lookup function for JitterPipelineBackoff()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JitterPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_19CEC00D8()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CEC00E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v39 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v35 = (char *)&v33 - v10;
  v12 = *(_QWORD *)(v11 + 24);
  v13 = sub_19CFDFF5C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v33 - v16;
  v18 = *(_QWORD *)(v12 - 8);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v3;
  v38 = a1;
  MEMORY[0x1A1AD96C4](a1, *(_QWORD *)(v3 + 8), v6, v12, *(_QWORD *)(a2 + 32), v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v24 = 1;
    v25 = v39;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v24, 1, v12);
  }
  v26 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v27 = v23;
  v26(v23, v17, v12);
  v42 = *(_QWORD *)(v37 + 16);
  v28 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v28);
  v29 = v38;
  sub_19CFDFC80();
  if ((v41 & 1) == 0)
  {
    v30 = v35;
    sub_19CFDF914();
    v31 = v36;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v29, v6);
    sub_19CFDF908();
    v25 = v39;
    v26(v39, v27, v12);
    v24 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v24, 1, v12);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v34, v29, v6);
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CEC03FC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t, double);
  void (*v23)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;

  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v26 - v14;
  v16 = *(_QWORD *)(v6 - 8);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, char *, uint64_t, double))(v8 + 16);
  v27 = a1;
  v22(v15, a1, v7, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v6) == 1)
  {
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23(v15, v7);
    sub_19CEC05D0(a2, a3, v11);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
    v23(v27, v7);
    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, v6);
    sub_19CEC0CC0((uint64_t)v21, a2, a3, v11);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
    v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v27, v7);
    v25(v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v6);
  }
}

uint64_t sub_19CEC05D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t result;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v36 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v30 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v31 = (char *)&v30 - v9;
  v11 = *(_QWORD *)(v10 + 24);
  v12 = sub_19CFDFF5C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v30 - v15;
  v17 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v3;
  v34 = v5;
  sub_19CFDF464();
  v32 = a1;
  sub_19CFDF3E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v22 = 1;
    v23 = v36;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v23, v22, 1, v11);
  }
  v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v24(v21, v16, v11);
  v25 = v34;
  v39 = *(_QWORD *)(v33 + 16);
  v26 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v26);
  v27 = v32;
  sub_19CFDFC80();
  if ((v38 & 1) == 0)
  {
    v28 = v31;
    sub_19CFDF914();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v25);
    v23 = v36;
    v24(v36, v21, v11);
    v22 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v23, v22, 1, v11);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v30, v27, v25);
  v37 = 0;
  v38 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CEC08C8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  char v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD v45[2];

  v5 = a1[3];
  v6 = sub_19CFDFF5C();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  v42 = (char *)&v37 - v8;
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[2];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(char **)(v13 + 64);
  MEMORY[0x1E0C80A78](v15, v16);
  v17 = (char *)&v37 - ((unint64_t)(v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v44 = (char *)&v37 - v21;
  v22 = v2[1];
  v23 = v2[2];
  if (v23 == MEMORY[0x1A1AD9B44](v22, v12, v20))
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a2, 1, 1, TupleTypeMetadata2);
  }
  v38 = a2;
  v26 = sub_19CFDF8D8();
  sub_19CFDF890();
  if ((v26 & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v17, v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v23, v12);
    v27 = v23 + 1;
    if (!__OFADD__(v23, 1))
      goto LABEL_5;
    goto LABEL_10;
  }
  v36 = sub_19CFE0160();
  if (v14 != (char *)8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v45[0] = v36;
  (*(void (**)(char *, _QWORD *, uint64_t))(v13 + 16))(v17, v45, v12);
  swift_unknownObjectRelease();
  v27 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_5:
  v2[2] = v27;
  v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v29 = v44;
  v28(v44, v17, v12);
  v14 = v42;
  MEMORY[0x1A1AD96C4](v29, *v2, v12, v5, a1[4]);
  v30 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v14, 1, v5) != 1)
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32 = v43;
    v31(v43, v14, v5);
    v33 = swift_getTupleTypeMetadata2();
    v34 = v38;
    v35 = &v38[*(int *)(v33 + 48)];
    v28(v38, v29, v12);
    v31(v35, v32, v5);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
  }
LABEL_12:
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CEC0C68(uint64_t result)
{
  uint64_t v1;

  if (result)
  {
    v1 = result;
    sub_19CFDF38C();
    sub_19CFDF398();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19CEC0CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v52 = a4;
  v53 = a2;
  v7 = *(_QWORD *)(a3 + 16);
  v50 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v45 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v51 = (char *)&v45 - v11;
  v13 = *(_QWORD *)(v12 + 24);
  v14 = sub_19CFDFF5C();
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v46 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v45 - v19;
  v21 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26, v27);
  v49 = (char *)&v45 - v29;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v25, a1, v13, v28);
  sub_19CFDF464();
  v30 = v53;
  sub_19CFDF3EC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v13) == 1)
  {
    v31 = v48;
    v32 = *(void (**)(char *, uint64_t))(v47 + 8);
    v32(v20, v48);
    v33 = sub_19CFDF434();
    if (v33 >= 1 && *v4 < (unint64_t)v33)
    {
      v35 = v31;
      v36 = v46;
      sub_19CEC10BC(a3, v34, v46);
      v32((char *)v36, v35);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v51, v53, v7);
    sub_19CFDF938();
    sub_19CFDF908();
    v37 = 1;
    v38 = v52;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v38, v37, 1, v13);
  }
  v39 = v21;
  v40 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v40(v49, v20, v13);
  v56 = v4[2];
  v41 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v41);
  sub_19CFDFC80();
  if ((v55 & 1) == 0)
  {
    v42 = v51;
    sub_19CFDF914();
    v43 = v50;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v30, v7);
    sub_19CFDF908();
    v38 = v52;
    v40(v52, v49, v13);
    v37 = 0;
    v21 = v39;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v38, v37, 1, v13);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v45, v30, v7);
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CEC10BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = *(_QWORD *)(v3 + 16);
  v10 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v10);
  if ((sub_19CFDFC5C() & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 56))(a3, 1, 1);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v10);
  sub_19CFDFCA4();
  sub_19CFDF464();
  sub_19CFDF3E0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_19CEC11F0()
{
  sub_19CFDF464();
  sub_19CFDF458();
  sub_19CFDF938();
  return sub_19CFDF92C();
}

uint64_t sub_19CEC1258(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_19CEC1294@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_19CEC1258(a1, *(_QWORD *)(v2 + 8));
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  return result;
}

uint64_t sub_19CEC12F4()
{
  return 0;
}

uint64_t sub_19CEC12FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_19CF3C188(v2, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *sub_19CEC1344(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_19CEC1380(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_19CEC13E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t type metadata accessor for _LRUCache.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _LRUCache.Iterator);
}

_QWORD *sub_19CEC1434(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char **v6;
  id v7;
  void *v8;
  uint64_t v9;
  char **v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  unint64_t v22;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_19CFE0394())
  {
    v3 = v1 & 0xC000000000000001;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v5 = 4;
    v6 = &selRef_removeObserver_;
    v22 = v1;
    v21 = v1 & 0xC000000000000001;
    while (1)
    {
      v7 = v3 ? (id)MEMORY[0x1A1ADA390](v5 - 4, v1) : *(id *)(v1 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (objc_msgSend(v7, v6[13])
        && (v10 = v6, (v11 = objc_msgSend(v8, sel_toString)) != 0))
      {
        v12 = v11;
        v13 = v2;
        v14 = sub_19CFDF578();
        v16 = v15;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_19CD4D730(0, v4[2] + 1, 1, v4);
        v18 = v4[2];
        v17 = v4[3];
        if (v18 >= v17 >> 1)
          v4 = sub_19CD4D730((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
        v4[2] = v18 + 1;
        v19 = &v4[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v2 = v13;
        v3 = v21;
        v1 = v22;
        v6 = v10;
      }
      else
      {

      }
      ++v5;
      if (v9 == v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v4;
}

void sub_19CEC1608(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;

  v2 = objc_msgSend(a1, sel_globalObject);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_context);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4;
  v6 = v3;
  sub_19CE037DC(v5, v6);
  v8 = v7;

  if (v1)
    return;
  v9 = (void *)sub_19CFDF554();
  v10 = objc_msgSend(v8, sel_valueForProperty_, v9);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_toUInt32);

  v12 = sub_19CF9F684(0, v11, v8);
  sub_19CEC1434((unint64_t)v12);
  swift_bridgeObjectRelease();
}

void sub_19CEC1768(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;

  v2 = objc_msgSend(a1, sel_globalObject);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_context);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4;
  v6 = v3;
  sub_19CE037DC(v5, v6);
  v8 = v7;

  if (v1)
    return;
  v9 = (void *)sub_19CFDF554();
  v10 = objc_msgSend(v8, sel_valueForProperty_, v9);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_toUInt32);

  v12 = sub_19CF9F684(0, v11, v8);
  sub_19CEC1434((unint64_t)v12);
  swift_bridgeObjectRelease();
}

id sub_19CEC18BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5)
{
  uint64_t v5;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;

  result = objc_msgSend(a5, sel_globalObject);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v11 = result;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19D050760;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 88) = v13;
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = a3;
  *(_QWORD *)(v12 + 72) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_19CD2758C((uint64_t)&unk_1E3DD7160);
  *(_QWORD *)(v12 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
  *(_QWORD *)(v12 + 96) = v14;
  result = objc_msgSend(v11, sel_context);
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v15 = result;
  v16 = v11;
  swift_bridgeObjectRetain();
  sub_19CE037DC(v15, v16);
  v18 = v17;

  swift_bridgeObjectRelease_n();
  if (!v5)
  {
    if ((objc_msgSend(v18, sel_isString) & 1) != 0
      && (v19 = objc_msgSend(v18, sel_toString)) != 0)
    {
      v20 = v19;
      v12 = sub_19CFDF578();

    }
    else
    {

      return 0;
    }
  }
  return (id)v12;
}

void sub_19CEC1A78()
{
  void **v0;

  sub_19CEC1608(*v0);
}

void sub_19CEC1A90()
{
  void **v0;

  sub_19CEC1768(*v0);
}

id sub_19CEC1AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;

  return sub_19CEC18BC(a1, a2, a3, a4, *v4);
}

id sub_19CEC1AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id result;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  id v24;
  JSContext v25;
  JSValue v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  JSValue_optional v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSSource();
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v28 - v14;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBE110]), sel_init);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v17 = result;
  v29 = a2;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBE0F0]), sel_initWithVirtualMachine_, result);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v18 = result;
  v19 = (void *)sub_19CFDF554();
  objc_msgSend(v18, sel_setName_, v19);

  v20 = (uint64_t)v12 + *(int *)(v8 + 20);
  v21 = sub_19CFDEDE0();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  v23 = v29;
  *v12 = a1;
  v12[1] = v23;
  v24 = v18;
  sub_19CFDED14();
  v22((uint64_t)v7, 0, 1, v21);
  sub_19CD3B284((uint64_t)v7, v20);
  sub_19CD3A2BC((uint64_t)v12, (uint64_t)v15);
  v30.value.super.isa = 0;
  v30.is_nil = (char)v24;
  v26.super.isa = JSSource.evaluate(against:in:)(v30, v25).super.isa;
  if (v27)
  {
    sub_19CEC1CFC((uint64_t)v15);

  }
  else
  {

    sub_19CEC1CFC((uint64_t)v15);
  }
  return v24;
}

uint64_t sub_19CEC1CFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JSSource();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerJSCode()
{
  return &type metadata for LocalizedStringsContainerJSCode;
}

void ClassicDataVaultUtilities.ClassicDataVaultCreationError.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_19CEC1D84()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFDF698();
  sub_19CFDF698();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
  v1 = swift_allocObject();
  v2 = MEMORY[0x1E0DEDBC8];
  *(_OWORD *)(v1 + 16) = xmmword_19D0522A0;
  v3 = MEMORY[0x1E0DEDC38];
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  *(_DWORD *)(v1 + 32) = v0;
  v4 = sub_19CFDF5A8();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_19CEC1F28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;

  v19 = (id)(v12 & 0x1FFFFFFFFFFFFFFFLL);
  v13 = (id)(v12 & 0x1FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  v14 = sub_19CEC2088();
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D052350;
    *(_QWORD *)(v15 + 56) = v14;
    *(_QWORD *)(v15 + 64) = sub_19CEC20C4();
    *(_QWORD *)(v15 + 32) = a9;
    v16 = a9;
    v17 = objc_msgSend(v16, sel_code);
    v18 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v15 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v15 + 104) = v18;
    *(_QWORD *)(v15 + 72) = v17;
    sub_19CFDF5A8();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CFE0694();
    __break(1u);
  }
  JUMPOUT(0x19CEC1F0CLL);
}

unint64_t sub_19CEC2088()
{
  unint64_t result;

  result = qword_1EE43B548;
  if (!qword_1EE43B548)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE43B548);
  }
  return result;
}

unint64_t sub_19CEC20C4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE440DF8;
  if (!qword_1EE440DF8)
  {
    v1 = sub_19CEC2088();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EE440DF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities()
{
  return &type metadata for ClassicDataVaultUtilities;
}

id sub_19CEC2124(uint64_t a1, uint64_t a2, unint64_t a3)
{
  id result;
  void *v4;

  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 4uLL:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3uLL:
      v4 = (void *)(a3 & 0x1FFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRetain();
      result = v4;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t a1)
{
  sub_19CEC218C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

void sub_19CEC218C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;

  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 4uLL:
      swift_bridgeObjectRelease();
      break;
    case 3uLL:
      v3 = (void *)(a3 & 0x1FFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRelease();

      break;
    default:
      return;
  }
}

uint64_t *_s9JetEngine25ClassicDataVaultUtilitiesO29ClassicDataVaultCreationErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_19CEC2124(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_19CEC2124(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_19CEC218C(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_19CEC218C(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 12);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 1) & 0xFFFFFFF7 | (8
                                                                        * ((*(_QWORD *)(a1 + 16) & 0x1000000000000000) != 0))) ^ 0xF;
  if (v3 >= 0xB)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ClassicDataVaultUtilities.ClassicDataVaultCreationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 12;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 3) & 1) - 2 * a2) << 60;
    }
  }
  return result;
}

uint64_t sub_19CEC2368(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 61;
}

uint64_t sub_19CEC2374(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_19CEC2384(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFFFLL | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities.ClassicDataVaultCreationError()
{
  return &type metadata for ClassicDataVaultUtilities.ClassicDataVaultCreationError;
}

ValueMetadata *type metadata accessor for ClassicDataVaultUtilities._DefaultDataVaultAccessor()
{
  return &type metadata for ClassicDataVaultUtilities._DefaultDataVaultAccessor;
}

unint64_t sub_19CEC23B8()
{
  unint64_t result;

  result = qword_1EE440E00;
  if (!qword_1EE440E00)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ClassicDataVaultUtilities.ClassicDataVaultCreationError, &type metadata for ClassicDataVaultUtilities.ClassicDataVaultCreationError);
    atomic_store(result, (unint64_t *)&qword_1EE440E00);
  }
  return result;
}

uint64_t Preferences.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  sub_19CEC2C48(a1, a2, a3, a4, a5);
  v6 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

uint64_t sub_19CEC2444@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v5 = *(uint64_t *)((char *)a1 + a2 - 24);
  v4 = *(uint64_t *)((char *)a1 + a2 - 16);
  v6 = *(uint64_t *)((char *)a1 + a2 - 8);
  v7 = a1[1];
  v9[0] = *a1;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter(v9, v5, v4, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEC24B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[2];

  v6 = *(uint64_t *)((char *)a3 + a4 - 24);
  v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  v7 = *(uint64_t *)((char *)a3 + a4 - 8);
  v8 = a3[1];
  v10[0] = *a3;
  v10[1] = v8;
  swift_bridgeObjectRetain();
  return sub_19CEC2C48(a1, v10, v6, v5, v7);
}

void (*Preferences.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[2];

  v11 = malloc(0x50uLL);
  *a1 = v11;
  v11[2] = a5;
  v11[3] = v5;
  *v11 = a3;
  v11[1] = a4;
  v12 = sub_19CFDFF5C();
  v11[4] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v11[5] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[6] = malloc(v14);
  v15 = malloc(v14);
  v17 = *a2;
  v16 = a2[1];
  v11[7] = v15;
  v11[8] = v17;
  v11[9] = v16;
  v19[0] = v17;
  v19[1] = v16;
  swift_bridgeObjectRetain();
  Preferences.subscript.getter(v19, a3, a4, a5, (uint64_t)v15);
  return sub_19CEC25EC;
}

void sub_19CEC25EC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *a1;
  v3 = (*a1)[8];
  v4 = (*a1)[9];
  v5 = (void *)(*a1)[6];
  v6 = (void *)(*a1)[7];
  v8 = (*a1)[4];
  v7 = (*a1)[5];
  v9 = (*a1)[2];
  v11 = **a1;
  v10 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    v15 = (*a1)[5];
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v5, v6, v8);
    v16 = v3;
    v17 = v4;
    sub_19CEC2C48((uint64_t)v5, &v16, v11, v10, v9);
    v12 = *(void (**)(void *, uint64_t))(v15 + 8);
    v12(v5, v8);
    v12(v6, v8);
  }
  else
  {
    v16 = (*a1)[8];
    v17 = v4;
    v13 = v9;
    v14 = v7;
    sub_19CEC2C48((uint64_t)v6, &v16, v11, v10, v13);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v6, v8);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t sub_19CEC26E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v22 = *(_QWORD *)(a4 + a3 - 32);
  v7 = *(_QWORD *)(a4 + a3 - 16);
  v8 = *(_QWORD *)(a4 + a3 - 8);
  swift_getAssociatedTypeWitness();
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v21 - v12;
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v21 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))((char *)&v21 - v17, a3, v6, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  return Preferences.subscript.setter((uint64_t)v13, (uint64_t)v18, v22, v6, v7, v8);
}

uint64_t Preferences.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;

  v32 = a5;
  v31 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_19CFDFF5C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v31 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v33 = a1;
  v22(v15, a1, v11, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    v23 = *(void (**)(char *, uint64_t))(v12 + 8);
    v23(v15, v11);
    v24 = *(_QWORD *)(a6 + 8);
    v36 = a4;
    v37 = v24;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v35);
    v26 = *(_QWORD *)(a4 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v26 + 16))(boxed_opaque_existential_2Tm, a2, a4);
    memset(v34, 0, sizeof(v34));
    (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v32 + 16))(v34, v35, v31);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a2, a4);
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(v33, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, AssociatedTypeWitness);
    v28 = *(_QWORD *)(a6 + 8);
    v36 = a4;
    v37 = v28;
    v29 = __swift_allocate_boxed_opaque_existential_2Tm(v35);
    v30 = *(_QWORD *)(a4 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v30 + 16))(v29, a2, a4);
    (*(void (**)(_OWORD *__return_ptr, char *, uint64_t, uint64_t))(a6 + 24))(v34, v21, a4, a6);
    (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v32 + 16))(v34, v35, v31);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a2, a4);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v33, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, AssociatedTypeWitness);
  }
}

void (*Preferences.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t **a1, char a2)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  uint64_t v18;
  size_t v19;

  v13 = malloc(0x60uLL);
  *a1 = v13;
  v13[3] = a6;
  v13[4] = v6;
  v13[1] = a4;
  v13[2] = a5;
  *v13 = a3;
  swift_getAssociatedTypeWitness();
  v14 = sub_19CFDFF5C();
  v13[5] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v13[6] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v13[7] = malloc(v16);
  v17 = malloc(v16);
  v18 = *(_QWORD *)(a4 - 8);
  v13[8] = v17;
  v13[9] = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v13[10] = malloc(v19);
  v13[11] = malloc(v19);
  (*(void (**)(void))(v18 + 16))();
  Preferences.subscript.getter(a2, a3, a4, a5, a6, (uint64_t)v17);
  return sub_19CEC2B44;
}

void sub_19CEC2B44(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = (void *)(*a1)[10];
  v4 = (void *)(*a1)[11];
  if ((a2 & 1) != 0)
  {
    v6 = (void *)v2[8];
    v5 = v2[9];
    v8 = v2[6];
    v7 = (void *)v2[7];
    v9 = v2[5];
    v13 = v2[3];
    v10 = v2[1];
    v12 = v2[2];
    v11 = *v2;
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v7, v6, v9);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v10);
    Preferences.subscript.setter((uint64_t)v7, (uint64_t)v3, v11, v10, v12, v13);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v9);
  }
  else
  {
    v7 = (void *)v2[7];
    v6 = (void *)v2[8];
    Preferences.subscript.setter((uint64_t)v6, (uint64_t)v4, *v2, v2[1], v2[2], v2[3]);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

uint64_t sub_19CEC2C48(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v22;
  __int128 v23;
  _QWORD v24[5];

  v10 = sub_19CFDFF5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v22 - v13;
  v16 = *a2;
  v15 = a2[1];
  v24[3] = type metadata accessor for PreferenceKey(0, a4, v17, v18);
  v24[4] = &protocol witness table for PreferenceKey<A>;
  v24[0] = v16;
  v24[1] = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  v19 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v22 = 0u;
    v23 = 0u;
  }
  else
  {
    *((_QWORD *)&v23 + 1) = a4;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_2Tm, v14, a4);
  }
  return (*(uint64_t (**)(__int128 *, _QWORD *, uint64_t, uint64_t))(a5 + 16))(&v22, v24, a3, a5);
}

uint64_t sub_19CEC2D80()
{
  return 24;
}

__n128 sub_19CEC2D8C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_19CEC2DA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return Preferences.subscript.getter(a1, *(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(a2 + a1 - 24), *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
}

uint64_t sub_19CEC2DD8()
{
  return 32;
}

__n128 sub_19CEC2DE4(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of Preferences.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Preferences.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of Preferences.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of Preferences.removeValue(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Preferences.synchronize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double static AutomationSemantics.page(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  char v11;
  double result;
  uint64_t v13;
  unint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 8);
  if (v3
    && *(_QWORD *)(v3 + 16)
    && (v4 = sub_19CD3FD1C(0x6570795465676170, 0xE800000000000000), (v5 & 1) != 0)
    && (sub_19CD436B0(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)v15), swift_dynamicCast()))
  {
    v7 = v13;
    v6 = v14;
  }
  else
  {
    v6 = 0xE400000000000000;
    v7 = 1701273968;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  if (v3 && *(_QWORD *)(v3 + 16) && (v10 = sub_19CD3FD1C(0x644965676170, 0xE600000000000000), (v11 & 1) != 0))
    sub_19CD436B0(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v15);
  else
    memset(v15, 0, sizeof(v15));
  sub_19CD4C788(0, (uint64_t)v15, (uint64_t *)(inited + 32));
  *(_QWORD *)&v15[0] = v8;
  *((_QWORD *)&v15[0] + 1) = MEMORY[0x1E0DEE9D8];
  sub_19CD4C984(inited);
  result = *(double *)v15;
  *a2 = v15[0];
  return result;
}

double static AutomationSemantics.page<A>(_:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  double result;
  __int128 v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v20 = a3;
  v25 = *MEMORY[0x1E0C80C00];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v7);
  v10 = (char *)&v19 - v9;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, double))(*(_QWORD *)(a2 + 8) + 8))(&v21, a1, v8);
  v11 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11)
  {
    v23 = 0u;
    v24 = 0u;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v11 + 16) || (v12 = sub_19CD3FD1C(0x6570795465676170, 0xE800000000000000), (v13 & 1) == 0))
  {
    v23 = 0u;
    v24 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_9:
    sub_19CD3F190((uint64_t)&v23);
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_10:
    v14 = 0xE400000000000000;
    v15 = 1701273968;
    goto LABEL_11;
  }
  v15 = v21;
  v14 = v22;
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v16 = swift_allocObject();
  v19 = xmmword_19D0522A0;
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v16 + 32) = v15;
  *(_QWORD *)(v16 + 40) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v19;
  *(_QWORD *)&v23 = 0;
  *((_QWORD *)&v23 + 1) = 0xE000000000000000;
  sub_19CFDF7F4();
  sub_19CFE0670();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, AssociatedTypeWitness);
  *((_QWORD *)&v24 + 1) = MEMORY[0x1E0DEA968];
  sub_19CD4C788(0, (uint64_t)&v23, (uint64_t *)(inited + 32));
  *(_QWORD *)&v23 = v16;
  *((_QWORD *)&v23 + 1) = MEMORY[0x1E0DEE9D8];
  sub_19CD4C984(inited);
  result = *(double *)&v23;
  *v20 = v23;
  return result;
}

double static AutomationSemantics.article(itemKind:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19CEC3260(0x656C6369747261, 0xE700000000000000, a1, a2, a3, a4, a5);
}

double sub_19CEC3260@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  double result;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  *(_QWORD *)&v19[0] = v14;
  *((_QWORD *)&v19[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v15, (uint64_t)sub_19CD4D1F0, 0);
  v18 = v19[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a5, (uint64_t)v19);
  sub_19CD4C788(0, (uint64_t)v19, (uint64_t *)(inited + 32));
  sub_19CD40794(a6, (uint64_t)v19);
  sub_19CD4C788(1, (uint64_t)v19, (uint64_t *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v18;
  *a7 = v18;
  return result;
}

double static AutomationSemantics.productPage(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19CEC3260(0x50746375646F7270, 0xEB00000000656761, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.onboarding(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19CEC3260(0x696472616F626E6FLL, 0xEA0000000000676ELL, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.account(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19CEC3260(0x746E756F636361, 0xE700000000000000, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.settings(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return sub_19CEC3260(0x73676E6974746573, 0xE800000000000000, a1, a2, a3, a4, a5);
}

double static AutomationSemantics.pill(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)&v14[0] = &unk_1E3DD00B0;
  *((_QWORD *)&v14[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v10, (uint64_t)sub_19CD4D1F0, 0);
  v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a3, (uint64_t)v14);
  sub_19CD4C788(0, (uint64_t)v14, (uint64_t *)(inited + 32));
  sub_19CD40794(a4, (uint64_t)v14);
  sub_19CD4C788(1, (uint64_t)v14, (uint64_t *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.pillButton(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t inited;
  double result;
  double v8[5];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a1, (uint64_t)v8);
  sub_19CD4C788(0, (uint64_t)v8, (uint64_t *)(inited + 32));
  sub_19CD40794(a2, (uint64_t)v8);
  sub_19CD4C788(1, (uint64_t)v8, (uint64_t *)(inited + 64));
  *(_QWORD *)&v8[0] = &unk_1E3DCF558;
  *(_QWORD *)&v8[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD4C984(inited);
  result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

uint64_t sub_19CEC3718(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CEC3754@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = Array<A>.init(tryDeserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
  *a5 = result;
  return result;
}

double static AutomationSemantics.nowPlaying(name:id:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t inited;
  double result;
  __int128 v11;
  _OWORD v12[2];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)&v12[0] = &unk_1E3DCF528;
  *((_QWORD *)&v12[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v8, (uint64_t)sub_19CD4D1F0, 0);
  v11 = v12[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  sub_19CD40794(a3, (uint64_t)v12);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v12, (_QWORD *)(inited + 32));
  sub_19CD4C984(inited);
  result = *(double *)&v11;
  *a4 = v11;
  return result;
}

uint64_t static AutomationSemantics.nowPlaying(_:id:)@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = AutomationSemantics.NowPlayingElement.rawValue.getter();
  static AutomationSemantics.nowPlaying(name:id:)(v4, v5, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.NowPlayingElement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CEC3958 + 4 * byte_19D05D550[*v0]))(0x427373696D736964, 0xED00006E6F747475);
}

uint64_t sub_19CEC3958()
{
  return 0x6B726F77747261;
}

uint64_t sub_19CEC3970()
{
  return 0x6F65646976;
}

uint64_t sub_19CEC3984()
{
  return 0x776F7262657965;
}

uint64_t sub_19CEC399C()
{
  return 0x656C746974;
}

uint64_t sub_19CEC39B0()
{
  return 0x747369747261;
}

uint64_t sub_19CEC39C4()
{
  return 0x72656469766F7270;
}

uint64_t sub_19CEC39DC()
{
  return 0x656C746974627573;
}

uint64_t sub_19CEC39F4()
{
  return 0x7474754265726F6DLL;
}

uint64_t sub_19CEC3C14()
{
  return 0x776569566F666E69;
}

unint64_t sub_19CEC3C9C()
{
  return 0xD000000000000010;
}

unint64_t sub_19CEC3CA8()
{
  return 0xD000000000000010;
}

void sub_19CEC3CB4()
{
  JUMPOUT(0x19CEC3CC8);
}

uint64_t static AutomationSemantics.nowPlaying(_:)@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t inited;
  __int128 v16;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = a1[7];
  v8 = MEMORY[0x1E0DEA968];
  if (*(_QWORD *)(v7 + 16)
    && (v9 = sub_19CD3FD1C(0x6973736572706D69, 0xEE00657079546E6FLL), (v10 & 1) != 0)
    && (sub_19CD436B0(*(_QWORD *)(v7 + 56) + 32 * v9, (uint64_t)&v18), swift_dynamicCast()))
  {
    v11 = *((_QWORD *)&v17[0] + 1);
    v12 = *(_QWORD *)&v17[0];
  }
  else
  {
    v11 = 0xE700000000000000;
    v12 = 0x636972656E6567;
  }
  *((_QWORD *)&v19 + 1) = v8;
  *(_QWORD *)&v18 = v6;
  *((_QWORD *)&v18 + 1) = v5;
  swift_bridgeObjectRetain();
  static AutomationSemantics.nowPlaying(name:id:)(v12, v11, (uint64_t)&v18, &v16);
  swift_bridgeObjectRelease();
  sub_19CD3F190((uint64_t)&v18);
  v13 = v16;
  if (v3)
  {
    *((_QWORD *)&v19 + 1) = v8;
    *(_QWORD *)&v18 = v4;
    *((_QWORD *)&v18 + 1) = v3;
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  sub_19CD40794((uint64_t)&v18, (uint64_t)v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v17, (_QWORD *)(inited + 32));
  v17[0] = v13;
  sub_19CD4C984(inited);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v17[0];
  return sub_19CD3F190((uint64_t)&v18);
}

double static AutomationSemantics.miniPlayer(name:id:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t inited;
  double result;
  __int128 v11;
  _OWORD v12[2];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)&v12[0] = &unk_1E3DCF4F8;
  *((_QWORD *)&v12[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v8, (uint64_t)sub_19CD4D1F0, 0);
  v11 = v12[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  sub_19CD40794(a3, (uint64_t)v12);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v12, (_QWORD *)(inited + 32));
  sub_19CD4C984(inited);
  result = *(double *)&v11;
  *a4 = v11;
  return result;
}

void static AutomationSemantics.miniPlayer(_:id:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_19CEC4068@<X0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  static AutomationSemantics.miniPlayer(name:id:)(0x6F65646976, 0xE500000000000000, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t AutomationSemantics.MiniPlayerElement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CEC4144 + 4 * byte_19D05D57F[*v0]))(0x6B726F77747261, 0xE700000000000000);
}

uint64_t sub_19CEC4144()
{
  return 0x6F65646976;
}

uint64_t sub_19CEC4158()
{
  return 0x656C746974;
}

uint64_t sub_19CEC416C()
{
  return 0x656C746974627573;
}

uint64_t sub_19CEC4184()
{
  return 0x7375615079616C70;
}

uint64_t sub_19CEC41A0()
{
  return 0x747475427478656ELL;
}

uint64_t sub_19CEC41BC()
{
  return 0x77726F4674736166;
}

uint64_t AutomationSemantics.NowPlayingElement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;
  char v5;

  v2 = sub_19CFE07F0();
  result = swift_bridgeObjectRelease();
  v4 = 0;
  v5 = 22;
  switch(v2)
  {
    case 0:
      goto LABEL_24;
    case 1:
      v4 = 1;
      goto LABEL_24;
    case 2:
      v4 = 2;
      goto LABEL_24;
    case 3:
      v4 = 3;
      goto LABEL_24;
    case 4:
      v4 = 4;
      goto LABEL_24;
    case 5:
      v4 = 5;
      goto LABEL_24;
    case 6:
      v4 = 6;
      goto LABEL_24;
    case 7:
      v4 = 7;
      goto LABEL_24;
    case 8:
      v4 = 8;
      goto LABEL_24;
    case 9:
      v4 = 9;
      goto LABEL_24;
    case 10:
      v4 = 10;
      goto LABEL_24;
    case 11:
      v4 = 11;
      goto LABEL_24;
    case 12:
      v4 = 12;
      goto LABEL_24;
    case 13:
      v4 = 13;
      goto LABEL_24;
    case 14:
      v4 = 14;
      goto LABEL_24;
    case 15:
      v4 = 15;
      goto LABEL_24;
    case 16:
      v4 = 16;
      goto LABEL_24;
    case 17:
      v4 = 17;
      goto LABEL_24;
    case 18:
      v4 = 18;
      goto LABEL_24;
    case 19:
      v4 = 19;
      goto LABEL_24;
    case 20:
      v4 = 20;
      goto LABEL_24;
    case 21:
      v4 = 21;
LABEL_24:
      v5 = v4;
      break;
    case 22:
      break;
    case 23:
      v5 = 23;
      break;
    case 24:
      v5 = 24;
      break;
    case 25:
      v5 = 25;
      break;
    case 26:
      v5 = 26;
      break;
    case 27:
      v5 = 27;
      break;
    case 28:
      v5 = 28;
      break;
    case 29:
      v5 = 29;
      break;
    case 30:
      v5 = 30;
      break;
    case 31:
      v5 = 31;
      break;
    case 32:
      v5 = 32;
      break;
    case 33:
      v5 = 33;
      break;
    case 34:
      v5 = 34;
      break;
    case 35:
      v5 = 35;
      break;
    case 36:
      v5 = 36;
      break;
    case 37:
      v5 = 37;
      break;
    case 38:
      v5 = 38;
      break;
    case 39:
      v5 = 39;
      break;
    default:
      v5 = 40;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_19CEC4390(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19CE81290(*a1, *a2);
}

uint64_t sub_19CEC439C()
{
  sub_19CFE08C8();
  AutomationSemantics.NowPlayingElement.rawValue.getter();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CEC4400()
{
  AutomationSemantics.NowPlayingElement.rawValue.getter();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEC4450()
{
  sub_19CFE08C8();
  AutomationSemantics.NowPlayingElement.rawValue.getter();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CEC44B0@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.NowPlayingElement.init(rawValue:)(a1);
}

uint64_t sub_19CEC44BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AutomationSemantics.NowPlayingElement.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t AutomationSemantics.MiniPlayerElement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  v4 = 7;
  if (v2 < 7)
    v4 = v2;
  *a1 = v4;
  return result;
}

void sub_19CEC4538(char *a1)
{
  sub_19CE8129C(*a1);
}

void sub_19CEC4544()
{
  char *v0;

  sub_19CE11770(0, *v0);
}

void sub_19CEC4550()
{
  __asm { BR              X10 }
}

uint64_t sub_19CEC458C()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CEC4638(uint64_t a1)
{
  char *v1;

  sub_19CE11770(a1, *v1);
}

uint64_t sub_19CEC4640@<X0>(char *a1@<X8>)
{
  return AutomationSemantics.MiniPlayerElement.init(rawValue:)(a1);
}

uint64_t sub_19CEC464C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CEC467C + 4 * byte_19D05D5B5[*v0]))();
}

void sub_19CEC467C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

void sub_19CEC4694(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_19CEC46AC(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974627573;
  a1[1] = 0xE800000000000000;
}

void sub_19CEC46C8(_QWORD *a1@<X8>)
{
  *a1 = 0x7375615079616C70;
  a1[1] = 0xE900000000000065;
}

void sub_19CEC46E8(_QWORD *a1@<X8>)
{
  *a1 = 0x747475427478656ELL;
  a1[1] = 0xEA00000000006E6FLL;
}

void sub_19CEC4708(_QWORD *a1@<X8>)
{
  *a1 = 0x77726F4674736166;
  a1[1] = 0xEB00000000647261;
}

unint64_t sub_19CEC4730()
{
  unint64_t result;

  result = qword_1EE440E08;
  if (!qword_1EE440E08)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AutomationSemantics.NowPlayingElement, &type metadata for AutomationSemantics.NowPlayingElement);
    atomic_store(result, (unint64_t *)&qword_1EE440E08);
  }
  return result;
}

unint64_t sub_19CEC4778()
{
  unint64_t result;

  result = qword_1EE440E10;
  if (!qword_1EE440E10)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AutomationSemantics.MiniPlayerElement, &type metadata for AutomationSemantics.MiniPlayerElement);
    atomic_store(result, (unint64_t *)&qword_1EE440E10);
  }
  return result;
}

uint64_t _s17NowPlayingElementOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD9)
    goto LABEL_17;
  if (a2 + 39 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 39) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 39;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 39;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 39;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x28;
  v8 = v6 - 40;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17NowPlayingElementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 39 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 39) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD8)
    return ((uint64_t (*)(void))((char *)&loc_19CEC4898 + 4 * byte_19D05D5C1[v4]))();
  *a1 = a2 + 39;
  return ((uint64_t (*)(void))((char *)sub_19CEC48CC + 4 * byte_19D05D5BC[v4]))();
}

uint64_t sub_19CEC48CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC48D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEC48DCLL);
  return result;
}

uint64_t sub_19CEC48E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEC48F0);
  *(_BYTE *)result = a2 + 39;
  return result;
}

uint64_t sub_19CEC48F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC48FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.NowPlayingElement()
{
  return &type metadata for AutomationSemantics.NowPlayingElement;
}

uint64_t _s17MiniPlayerElementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_19CEC4964 + 4 * byte_19D05D5CB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_19CEC4998 + 4 * byte_19D05D5C6[v4]))();
}

uint64_t sub_19CEC4998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC49A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEC49A8);
  return result;
}

uint64_t sub_19CEC49B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEC49BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_19CEC49C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC49C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutomationSemantics.MiniPlayerElement()
{
  return &type metadata for AutomationSemantics.MiniPlayerElement;
}

BOOL static ImpressionsTracking.DynamicKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImpressionsTracking.DynamicKind.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ImpressionsTracking.DynamicKind.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t *ImpressionsTracking.DynamicChange.deinit()
{
  uint64_t *v0;

  sub_19CEC4AAC(v0[3], v0[4], v0[5], v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CEC4AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ImpressionsTracking.DynamicChange.__deallocating_deinit()
{
  uint64_t *v0;

  sub_19CEC4AAC(v0[3], v0[4], v0[5], v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_19CEC4B6C()
{
  unint64_t result;

  result = qword_1EE440E18;
  if (!qword_1EE440E18)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionsTracking.DynamicKind, &type metadata for ImpressionsTracking.DynamicKind);
    atomic_store(result, (unint64_t *)&qword_1EE440E18);
  }
  return result;
}

uint64_t _s11DynamicKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CEC4BFC + 4 * byte_19D05D815[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CEC4C30 + 4 * byte_19D05D810[v4]))();
}

uint64_t sub_19CEC4C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC4C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEC4C40);
  return result;
}

uint64_t sub_19CEC4C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEC4C54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CEC4C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC4C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.DynamicKind()
{
  return &type metadata for ImpressionsTracking.DynamicKind;
}

uint64_t type metadata accessor for ImpressionsTracking.DynamicChange()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImpressionsTracking.DynamicChange()
{
  return swift_lookUpClassMethod();
}

id MescalBagContract.__allocating_init(_:)(_QWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MescalBagContract.init(_:)(_QWORD *a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MescalBagContract.mescalCertificateURL.getter()
{
  return sub_19CEC4F90(0xD000000000000013, 0x800000019D074050, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalSetupURL.getter()
{
  return sub_19CEC4F90(0x7061732D6E676973, 0xEE0070757465732DLL, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalPrimingURL.getter()
{
  return sub_19CEC4F90(0x6C7255656D697270, 0xE800000000000000, (SEL *)&selRef_URLForKey_);
}

id MescalBagContract.mescalSignedActions.getter()
{
  return sub_19CEC4F90(0x612D64656E676973, 0xEE00736E6F697463, (SEL *)&selRef_dictionaryForKey_);
}

id MescalBagContract.mescalSignSapRequests.getter()
{
  return sub_19CEC4F90(0xD000000000000010, 0x800000019D074070, (SEL *)&selRef_dictionaryForKey_);
}

id sub_19CEC4EEC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  char *v7;
  void *v8;
  id v9;

  v6 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing];
  v7 = a1;
  v8 = (void *)sub_19CFDF554();
  v9 = objc_msgSend(v6, *a5, v8);

  return v9;
}

id MescalBagContract.mescalSignSapResponses.getter()
{
  return sub_19CEC4F90(0xD000000000000011, 0x800000019D074090, (SEL *)&selRef_dictionaryForKey_);
}

id sub_19CEC4F90(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;

  v5 = *(void **)(v3 + OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing);
  v6 = (void *)sub_19CFDF554();
  v7 = objc_msgSend(v5, *a3, v6);

  return v7;
}

id MescalBagContract.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MescalBagContract.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MescalBagContract.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MescalBagContract()
{
  return objc_opt_self();
}

uint64_t method lookup function for MescalBagContract()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MescalBagContract.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *Preferences.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  type metadata accessor for NestedPreferences();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = v3;
  v7[5] = a3;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v7;
}

uint64_t sub_19CEC514C(char a1, void (*a2)(uint64_t *))
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v2[5];
  ObjectType = swift_getObjectType();
  v8 = v2[2];
  v7 = v2[3];
  v12 = v8;
  v13 = v7;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  Preferences.subscript.getter(&v12, ObjectType, v9, v5, (uint64_t)&v14);
  result = swift_bridgeObjectRelease();
  v11 = v14;
  if (!v14)
  {
    if ((a1 & 1) == 0)
      return result;
    v11 = MEMORY[0x1E0DEE9E0];
  }
  v15 = v11;
  a2(&v15);
  v13 = v7;
  v14 = v15;
  v12 = v8;
  swift_bridgeObjectRetain();
  return Preferences.subscript.setter((uint64_t)&v14, &v12, ObjectType, v9, v5);
}

uint64_t sub_19CEC5240(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[32];

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v8 = v7;
  sub_19CD40794(a3, (uint64_t)v10);
  return sub_19CD13C70((uint64_t)v10, v6, v8);
}

uint64_t sub_19CEC52C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v7[2];

  v2 = a2[3];
  v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_19CD143A0(v4, v5, v7);
  swift_bridgeObjectRelease();
  return sub_19CD3F190((uint64_t)v7);
}

uint64_t sub_19CEC5334()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CEC5360(uint64_t a1, uint64_t a2)
{
  sub_19CEC514C(1, (void (*)(uint64_t *))sub_19CEC563C);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return sub_19CD3F190(a1);
}

void (*sub_19CEC53B8(_QWORD *a1, _QWORD *a2))(__int128 **a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  _OWORD *v6;

  v5 = (char *)malloc(0x98uLL);
  *a1 = v5;
  v6 = v5 + 80;
  *((_QWORD *)v5 + 18) = v2;
  sub_19CCD5B84((uint64_t)a2, (uint64_t)v5);
  sub_19CD3EA24(a2, v6);
  return sub_19CEC5418;
}

void sub_19CEC5418(__int128 **a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 5);
  if ((a2 & 1) != 0)
  {
    sub_19CD40794((uint64_t)(*a1 + 5), (uint64_t)(v2 + 7));
    v4 = sub_19CCD14C4(v2, (uint64_t)v2 + 40);
    MEMORY[0x1E0C80A78](v4, v5);
    sub_19CEC514C(1, (void (*)(uint64_t *))sub_19CEC5634);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2 + 40);
    sub_19CD3F190((uint64_t)(v2 + 7));
  }
  else
  {
    MEMORY[0x1E0C80A78](a1, a2);
    sub_19CEC514C(1, (void (*)(uint64_t *))sub_19CEC563C);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  sub_19CD3F190(v3);
  free(v2);
}

uint64_t sub_19CEC5514()
{
  return sub_19CEC514C(0, (void (*)(uint64_t *))sub_19CEC562C);
}

uint64_t sub_19CEC5544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

_QWORD *sub_19CEC5580@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7[2];

  v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  result = Preferences.subscript.getter(v7, (uint64_t)a1, v4);
  *a3 = result;
  a3[1] = &off_1E3DCE9A8;
  return result;
}

void sub_19CEC55CC()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CEC5614()
{
  return 16;
}

__n128 sub_19CEC5620(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_19CEC562C(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEC52C4(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_19CEC5634(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEC5240(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_19CEC5640@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t v8;
  _QWORD *v9;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5 == 1)
  {
    v6 = *(void **)(a1 + 32);
    *(_QWORD *)a3 = v6;
    *(_BYTE *)(a3 + 8) = 1;
    return v6;
  }
  else
  {
    if (v5)
    {
      sub_19CE04734();
      v8 = swift_allocError();
      *v9 = a1;
      *(_QWORD *)a3 = v8;
      *(_BYTE *)(a3 + 8) = 1;
    }
    else
    {
      *(_QWORD *)a3 = *a2;
      *(_BYTE *)(a3 + 8) = 0;
    }
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_19CEC56C8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  v6 = *a1;
  result = BasicImpressionsTracker.snapshotOnScreenImpressions(in:on:)(&v6, a2);
  v5 = MEMORY[0x1E0DEE9D8];
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t ImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  v6 = *a1;
  result = (*(uint64_t (**)(char *))(a2 + 40))(&v6);
  v5 = MEMORY[0x1E0DEE9D8];
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_19CEC574C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_19CEC5754(*a1, a2, a3);
}

uint64_t sub_19CEC5754@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t result;
  id v30[12];

  v30[11] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = v3[4];
  v10 = v3[5];
  v11 = v3 + 2;
  swift_beginAccess();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_19CDFDA8C(v12);
  swift_bridgeObjectRelease();
  v14 = *((double *)v3 + 3);
  LOBYTE(v30[0]) = a1;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(v9, v10, (unint64_t)v13, (unsigned __int8 *)v30, a2, MEMORY[0x1E0DEE9D8], v14);
  swift_release();
  if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) != 0)
  {
    v17 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F628);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = 0x6973736572706D69;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E6FLL;
    *(_QWORD *)(inited + 48) = v16;
    swift_bridgeObjectRetain();
    sub_19CE101C4(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    v19 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    v30[0] = 0;
    v20 = objc_msgSend(v17, sel_dataWithJSONObject_options_error_, v19, 3, v30);

    v21 = v30[0];
    if (v20)
    {
      v22 = sub_19CFDEE70();
      v24 = v23;

      sub_19CFDF5B4();
      v25 = sub_19CFDF590();
      if (v26)
      {
        sub_19CE266D4(v25, v26, 0);
        sub_19CD3BE18(v22, v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19CD3BE18(v22, v24);
      }
    }
    else
    {
      v27 = v21;
      v28 = (void *)sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  *v11 = MEMORY[0x1E0DEE9E0];
  result = swift_bridgeObjectRelease();
  *a3 = v16;
  a3[1] = v15;
  return result;
}

uint64_t ImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  v6 = *a1;
  result = (*(uint64_t (**)(char *))(a2 + 48))(&v6);
  v5 = MEMORY[0x1E0DEE9D8];
  *a3 = result;
  a3[1] = v5;
  return result;
}

BOOL static ImpressionsTrackerFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImpressionsTrackerFormat.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ImpressionsTrackerFormat.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t ImpressionsData.impressions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsData.dynamicEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  v5[2] = 0;
  v6 = 1;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(a4 + 16))(a1, a2, v5, a3);
}

uint64_t ImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, a2, a4, a5);
}

uint64_t ImpressionsTracker.elementDidLeaveView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  v5[2] = 0;
  v6 = 1;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(a4 + 32))(a1, a2, v5, a3);
}

uint64_t ImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, a4, a5);
}

unint64_t sub_19CEC5B94()
{
  unint64_t result;

  result = qword_1EE440E28[0];
  if (!qword_1EE440E28[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionsTrackerFormat, &type metadata for ImpressionsTrackerFormat);
    atomic_store(result, qword_1EE440E28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImpressionsTrackerFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CEC5C24 + 4 * byte_19D05D975[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CEC5C58 + 4 * byte_19D05D970[v4]))();
}

uint64_t sub_19CEC5C58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC5C60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEC5C68);
  return result;
}

uint64_t sub_19CEC5C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEC5C7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CEC5C80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEC5C88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTrackerFormat()
{
  return &type metadata for ImpressionsTrackerFormat;
}

ValueMetadata *type metadata accessor for ImpressionsData()
{
  return &type metadata for ImpressionsData;
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidEnterView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ImpressionsTracker.elementDidLeaveView(_:on:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ImpressionsTracker.snapshotOnScreenImpressions(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ImpressionsTracker.consumeImpressions(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ImpressionsTracker.snapshotOnScreenImpressionsAndDynamicEvents(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ImpressionsTracker.consumeImpressionsAndDynamicEvents(in:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ImpressionsTracker.removeAllImpressions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t MetricsEventLinterConfigurationProvider.additionalRules(forTopic:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.baseFields(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.compoundSeparator(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.deResolutionRules(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of MetricsEventLinterConfigurationProvider.additionalRules(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

JetEngine::StandardMetricsFieldsBuilder __swiftcall StandardMetricsFieldsBuilder.init(baseFields:)(JetEngine::StandardMetricsFieldsBuilder baseFields)
{
  JetEngine::StandardMetricsFieldsBuilder *v1;

  v1->allMetricsFields._rawValue = baseFields.allMetricsFields._rawValue;
  return baseFields;
}

uint64_t MetricsFieldsBuilder.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a4, a6);
  if (!*(_QWORD *)(v8 + 16))
  {
    v13 = 0u;
    v14 = 0u;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v9 = sub_19CD23A50(a1, a2);
  if ((v10 & 1) == 0)
  {
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_10:
    sub_19CCECFE4((uint64_t)&v13, &qword_1ECEB3370);
    return 0;
  }
  sub_19CFDF938();
  if (swift_dynamicCast())
    return v12;
  else
    return 0;
}

uint64_t MetricsFieldsBuilder.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4);
  if (v6)
  {
    sub_19CFDEDA4();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a5, 1, 1, v8);
  }
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDEDE0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_19CCECFE4((uint64_t)v13, (uint64_t *)&unk_1ECEB3030);
    v19 = sub_19CFDEB7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a5, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
    sub_19CFDEAEC();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t MetricsFieldsBuilder.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = MetricsFieldsBuilder.subscript.getter(a1, a2, a3, a4);
  if (v7)
  {
    sub_19CD41144();
    v8 = sub_19CFDFFE0();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  *a5 = v8;
  a5[1] = 0;
  return result;
}

uint64_t StandardMetricsFieldsBuilder.allMetricsFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StandardMetricsFieldsBuilder.addValue(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[32];

  sub_19CD436B0(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  return sub_19CD13C70((uint64_t)v6, a2, a3);
}

Swift::Void __swiftcall StandardMetricsFieldsBuilder.removeValue(forField:)(Swift::String forField)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];
  _OWORD v10[2];

  v2 = v1;
  object = (uint64_t)forField._object;
  countAndFlagsBits = forField._countAndFlagsBits;
  swift_bridgeObjectRetain();
  v5 = sub_19CD3FD1C(countAndFlagsBits, object);
  LOBYTE(object) = v6;
  swift_bridgeObjectRelease();
  if ((object & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *(_QWORD *)&v10[0] = *v2;
    *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_19CD141BC();
      v8 = *(_QWORD *)&v10[0];
    }
    swift_bridgeObjectRelease();
    sub_19CD433C0((_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v5), v9);
    sub_19CDD33F0(v5, v8);
    *v2 = v8;
    swift_bridgeObjectRelease();
    sub_19CD433C0(v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_19CCECFE4((uint64_t)v10, &qword_1ECEB3370);
}

uint64_t StandardMetricsFieldsBuilder.merge(_:uniquingKeysWith:)(uint64_t a1, void (*a2)(_OWORD *__return_ptr, id *, _OWORD *), uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  *v3 = 0x8000000000000000;
  sub_19CDD5158(a1, (uint64_t)sub_19CEC6470, 0, isUniquelyReferenced_nonNull_native, a2, a3);
  *v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEC6470@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_19CD436B0((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of MetricsFieldsBuilder.init(baseFields:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricsFieldsBuilder.allMetricsFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for StandardMetricsFieldsBuilder()
{
  return &type metadata for StandardMetricsFieldsBuilder;
}

uint64_t sub_19CEC64D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v8[15] = v17;
  v8[16] = v18;
  v8[13] = v15;
  v8[14] = v16;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  v9 = *v17;
  v10 = sub_19CFDF278();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v11 = sub_19CFDF1E8();
  v8[20] = v11;
  v8[21] = *(_QWORD *)(v11 - 8);
  v8[22] = swift_task_alloc();
  v12 = *(_QWORD *)(v9 + 80);
  v8[23] = v12;
  v8[24] = *(_QWORD *)(v12 - 8);
  v8[25] = swift_task_alloc();
  v13 = sub_19CFDF1AC();
  v8[26] = v13;
  v8[27] = *(_QWORD *)(v13 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEC65D0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  os_signpost_id_t v10;
  uint64_t v11;
  _QWORD *v12;
  os_signpost_type_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  *(_QWORD *)(v0 + 240) = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 208);
    v5 = *(void (**)(uint64_t, _QWORD))(v16 + 16);
    v5(v4, *(_QWORD *)(v0 + 64));
    v14 = v3;
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v18 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_19CFE0A90();
    *(_QWORD *)(v0 + 56) = sub_19CD37070(v8, v9, &v18);
    sub_19CFDFFC8();
    swift_bridgeObjectRelease();
    v10 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v14, v10, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 216);

    v5 = *(void (**)(uint64_t, _QWORD))(v11 + 16);
  }
  *(_QWORD *)(v0 + 248) = v5;
  v17 = *(_OWORD *)(v0 + 88);
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 208));
  sub_19CFDF20C();
  swift_allocObject();
  *(_QWORD *)(v0 + 256) = sub_19CFDF200();
  *(_OWORD *)(v0 + 40) = v17;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v12;
  *v12 = v0;
  v12[1] = sub_19CEC6838;
  return sub_19CD5E084(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), (_OWORD *)(v0 + 40), *(_QWORD *)(v0 + 184));
}

uint64_t sub_19CEC6838()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEC689C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t DynamicType;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
      v6 = "";
    }
    v14 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v13, v14, v15);
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v18, "MakeAsyncDependency", v6, v17, 2u);
    MEMORY[0x1A1ADBE9C](v17, -1, -1);

    v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v19(v14, v15);
    v19(v13, v15);
    if (!*(_QWORD *)(v0 + 104))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 104))
  {
LABEL_8:
    v21 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, *MEMORY[0x1E0CCE198], v22);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 112))
  {
    DynamicType = swift_getDynamicType();
    StartUpPerformanceEvent.record(checkpoint:)(&DynamicType);
  }
  v24 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 184);
  Promise.resolve(_:)(v23, v10, v11, v12);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEC6B08()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v6 = *(os_unfair_lock_s **)(Strong + 16);
    v7 = swift_task_alloc();
    v8 = *(_OWORD *)(v0 + 72);
    *(_QWORD *)(v7 + 16) = v5;
    *(_OWORD *)(v7 + 24) = v8;
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = sub_19CEC744C;
    *(_QWORD *)(v9 + 24) = v7;
    swift_retain();
    os_unfair_lock_lock(v6 + 4);
    (*(void (**)(void))(v9 + 16))();
    os_unfair_lock_unlock(v6 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 104))
  {
    v11 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, *MEMORY[0x1E0CCE190], v12);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = *(void **)(v0 + 272);
  Promise.reject(_:)(v13, v2, v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19CEC6CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  id v21;
  uint64_t v22[2];

  v10 = swift_retain();
  sub_19CCFBBB0(v22, v10);
  v11 = v22[0];
  v12 = v22[1];
  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v13 = sub_19CCFBBB4(v11, v12, v22[0]);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    sub_19CFE0A6C();
    v14 = sub_19CDA6790(v22[0]);
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    v15 = (void *)swift_allocError();
    *v16 = v14;
    swift_willThrow();
    v17 = a5[3];
    v18 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v17);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a3;
    v19[3] = a4;
    v19[4] = v15;
    v20 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v18 + 8);
    swift_retain();
    v21 = v15;
    v20(sub_19CD170E0, v19, v17, v18);
    swift_release();

  }
  else
  {
    sub_19CCFBBF0();
    Promise.then(perform:orCatchError:on:)(a1, a2, a3, a4, (uint64_t)a5);
    swift_release();
  }
}

uint64_t sub_19CEC6E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_19CEC6E88()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEC6EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  unint64_t v27;

  v5 = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = type metadata accessor for Result(255, v6, a3, a4);
  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v25 - v11;
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (os_unfair_lock_trylock((os_unfair_lock_t)(*(_QWORD *)(v4 + 16) + 16)))
  {
    if (*(_BYTE *)(v4 + 40) == 1)
    {
      v25[1] = *(_QWORD *)(v4 + 32);
      v18 = swift_retain();
      sub_19CD0C5DC(v18, v19, v20, v21);
      v22 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v7) == 1)
      {
        v22 = v9;
        v7 = v8;
      }
      else if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, v6);
        v26 = 0;
        v27 = 0xE000000000000000;
        sub_19CFE0670();
        sub_19CCFC05C();
        v23 = v26;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v6);
        goto LABEL_9;
      }
      sub_19CCFC05C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v7);
    }
    v26 = 60;
    v27 = 0xE100000000000000;
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    v23 = v26;
LABEL_9:
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v5 + 16) + 16));
    return v23;
  }
  v26 = 60;
  v27 = 0xE100000000000000;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v26;
}

uint64_t sub_19CEC7104()
{
  return sub_19CCFC05C();
}

uint64_t sub_19CEC7114(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_19CCFC0A8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_19CEC715C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_19CCFC0A8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CCFC05C();
  return a1;
}

uint64_t sub_19CEC71B0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CCFC05C();
  return a1;
}

uint64_t type metadata accessor for DependencyPromise.ObjectState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DependencyPromise.ObjectState);
}

uint64_t sub_19CEC7204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEC6EBC(a1, a2, a3, a4);
}

uint64_t sub_19CEC7224()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CEC7248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_19CFDF1AC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEC7338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CCBE344;
  return sub_19CEC64D0(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CEC744C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = 0;
  sub_19CCFC05C();
  return swift_retain();
}

uint64_t sub_19CEC7490(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_19CEC74B0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CEC74DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_19CECA6DC(a1, (uint64_t)sub_19CEC6470, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

BOOL static JetPackageReaderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackageReaderError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JetPackageReaderError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t JetPackageReaderError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19CEC7610 + 4 * byte_19D05DBB0[*v0]))(0xD000000000000023, 0x800000019D074350);
}

uint64_t sub_19CEC7610@<X0>(uint64_t a1@<X8>)
{
  return a1 + 16;
}

unint64_t sub_19CEC7668()
{
  return 0xD000000000000011;
}

uint64_t JetPackageReader.init(keyURLs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t JetPackageReader.init(keyURLs:verifySignature:)@<X0>(uint64_t result@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t (*v3)(char *, _QWORD *);

  v3 = sub_19CEC786C;
  if ((a2 & 1) == 0)
    v3 = 0;
  *a3 = result;
  a3[1] = v3;
  a3[2] = 0;
  return result;
}

uint64_t JetPackageReader.init(keyURL:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t result;
  uint64_t v21;

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD3BB88(a1, (uint64_t)v12);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440ED0);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3C8);
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
    v18 = (_QWORD *)(v17 + v16);
    v19 = (char *)v18 + *(int *)(v14 + 48);
    *v18 = 0;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v19, v8, v4);
    v13 = sub_19CE1BF90(v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  result = sub_19CD3BBD0(a1);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = v13;
  return result;
}

uint64_t sub_19CEC786C(char *a1, _QWORD *a2)
{
  char v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  __int128 v9;
  _BYTE v10[8];
  __int128 v11;

  v3 = *a1;
  v4 = *(_OWORD *)(a1 + 8);
  if (qword_1EE43C3D0 != -1)
  {
    v9 = *(_OWORD *)(a1 + 8);
    swift_once();
    v4 = v9;
  }
  v5 = qword_1EE43CCE8;
  v6 = qword_1EE43CCF0;
  v10[0] = v3;
  v11 = v4;
  sub_19CD3BE5C(qword_1EE43CCE8, qword_1EE43CCF0);
  v7 = sub_19CFB52B8((uint64_t)v10, a2, 0x20000);
  sub_19CD3BE18(v5, v6);
  return v7 & 1;
}

uint64_t JetPackageReader.init(keyURL:verifySignature:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t result;
  uint64_t (*v23)(char *, _QWORD *);
  uint64_t v24;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD3BB88(a1, (uint64_t)v14);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v14, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440ED0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3C8);
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
    v20 = (_QWORD *)(v19 + v18);
    v21 = (char *)v20 + *(int *)(v16 + 48);
    *v20 = 0;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v10, v6);
    v15 = sub_19CE1BF90(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  result = sub_19CD3BBD0(a1);
  v23 = sub_19CEC786C;
  if ((a2 & 1) == 0)
    v23 = 0;
  *a3 = v15;
  a3[1] = (unint64_t)v23;
  a3[2] = 0;
  return result;
}

void sub_19CEC7B04()
{
  qword_1ECEB1368 = MEMORY[0x1E0DEE9E8];
}

id sub_19CEC7B18()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  qword_1ECEB1370 = (uint64_t)result;
  return result;
}

uint64_t JetPackageReader.metadata(forPackageAt:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[8];

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  sub_19CFDED8C();
  v7 = type metadata accessor for FileInputStream();
  swift_allocObject();
  result = sub_19CE90378();
  if (!v2)
  {
    v9[5] = v4;
    v9[6] = v5;
    v9[7] = v6;
    v9[3] = v7;
    v9[4] = &off_1E3DCC580;
    v9[0] = result;
    sub_19CEC7C14((uint64_t)v9, a1);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  }
  return result;
}

uint64_t sub_19CEC7C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  char v9;
  _BYTE *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t result;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __int128 v41[3];
  uint64_t v42;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  sub_19CCD5B84(a1, (uint64_t)v41);
  type metadata accessor for JetPackageFormatParser();
  inited = swift_initStackObject();
  sub_19CCD14C4(v41, inited + 16);
  *(_BYTE *)(inited + 56) = 0;
  v9 = sub_19CEB6DB4();
  if (!v3)
  {
    if (v9)
    {
      sub_19CECA988();
      swift_allocError();
      *v10 = 2;
      swift_willThrow();
    }
    else
    {
      sub_19CEB703C();
      v11 = v34;
      v12 = BYTE1(v34);
      v13 = BYTE2(v34);
      v14 = BYTE3(v34);
      v15 = BYTE4(v34);
      v16 = v35;
      v42 = v36;
      v17 = v40;
      v34 = v5;
      v35 = v6;
      v18 = v38;
      v36 = v7;
      v19 = v39;
      v31 = v38;
      v32 = v39;
      v33 = v40;
      if (*(_BYTE *)(inited + 56) == 2)
      {
        v24 = v15;
        v25 = v14;
        v26 = v13;
        v27 = v12;
        v28 = v11;
        v29 = v16;
        v30 = v37;
        sub_19CDCCEB4(v38, v39, v40);
        v20 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
        sub_19CEC816C(&v31, inited + 16, v20);
        swift_release();
        swift_bridgeObjectRelease();
        sub_19CE7B434(v18, v19, v17);
        sub_19CDCCEB4(v18, v19, v17);
        result = sub_19CE7B434(v18, v19, v17);
        *(_QWORD *)a2 = 0;
        *(_BYTE *)(a2 + 8) = v28;
        *(_BYTE *)(a2 + 9) = v27;
        *(_BYTE *)(a2 + 10) = v26;
        *(_BYTE *)(a2 + 11) = v25;
        *(_BYTE *)(a2 + 12) = v24;
        *(_QWORD *)(a2 + 16) = v18;
        *(_QWORD *)(a2 + 24) = v19;
        *(_QWORD *)(a2 + 32) = v17;
        *(_QWORD *)(a2 + 40) = v29;
        *(_QWORD *)(a2 + 48) = v42;
        *(_QWORD *)(a2 + 56) = v30;
        return result;
      }
      sub_19CEB7974();
      v21 = swift_allocError();
      *v22 = 0;
      sub_19CDCCEB4(v18, v19, v17);
      swift_willThrow();
      sub_19CE7B434(v31, v32, v33);
      sub_19CFE010C();
      sub_19CFDF698();
      v31 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
      sub_19CFE02E0();
      sub_19CF13494(0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19CE7B434(v18, v19, v17);
    }
  }
  return swift_release();
}

uint64_t JetPackageReader.unpack(packageURL:to:artifactStoreURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[8];

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  sub_19CFDED8C();
  v8 = type metadata accessor for FileInputStream();
  swift_allocObject();
  result = sub_19CE90378();
  if (!v3)
  {
    v10[5] = v5;
    v10[6] = v6;
    v10[7] = v7;
    v10[3] = v8;
    v10[4] = &off_1E3DCC580;
    v10[0] = result;
    sub_19CEC8008(v10, a2);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  return result;
}

id sub_19CEC8008(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  LOBYTE(v4) = v5;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    sub_19CFE0598();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CF1349C(0xD000000000000018, 0x800000019D0743B0);
  v6 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v6, v7);
  return sub_19CECA33C(a2, (void (*)(id))sub_19CECAD24);
}

void sub_19CEC816C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t *, uint64_t);
  char v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t (*v46)(uint64_t *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v47 = a3;
  v7 = sub_19CFDF1AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[1];
  v13 = a1[2];
  v48 = *a1;
  v49 = v12;
  v14 = *(_QWORD *)(v3 + 8);
  v53 = *(_QWORD *)(v3 + 16);
  sub_19CD14B0C();
  v15 = (void *)sub_19CFDFF44();
  sub_19CFDFE84();
  sub_19CFDF1A0();
  sub_19CFDF170();
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  if (!v14)
    goto LABEL_10;
  v45 = v7;
  v46 = (uint64_t (*)(uint64_t *, uint64_t))v14;
  if (v13 >> 60 != 15)
  {
    v44 = v16;
    v19 = v48;
    v20 = v49;
    LOBYTE(v50) = v48;
    v51 = v49;
    v52 = v13;
    v21 = v46;
    sub_19CCEA360((uint64_t)v46);
    sub_19CDCCEB4(v19, v20, v13);
    v22 = v21(&v50, a2);
    if (v4)
    {
      sub_19CCE9F48((uint64_t)v21);
      sub_19CE7B434(v19, v20, v13);
      v16 = v44;
      goto LABEL_7;
    }
    v27 = v24;
    if ((v22 & 1) != 0)
    {
      sub_19CCF4A54(v23, v24);
      sub_19CE7B434(v48, v49, v13);
      sub_19CCE9F48((uint64_t)v46);
      v16 = v44;
      v7 = v45;
LABEL_10:
      sub_19CFDFE78();
      sub_19CFDF1A0();
      sub_19CFDF170();
      v25 = v11;
      v26 = v7;
      goto LABEL_11;
    }
    v28 = v23;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    v30 = inited;
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = 0x747365676964;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v16 = v44;
    v43 = v27;
    if (v27 >> 60 == 15)
    {
      v31 = (uint64_t *)(inited + 48);
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    }
    else
    {
      sub_19CD61F18(v28, v27);
      v42 = sub_19CFDEE64();
      v32 = v27;
      v34 = v33;
      sub_19CCF4A54(v28, v32);
      v31 = (uint64_t *)(v30 + 48);
      *(_QWORD *)(v30 + 72) = MEMORY[0x1E0DEA968];
      if (v34)
      {
        v35 = v13;
        *v31 = v42;
LABEL_17:
        *(_QWORD *)(v30 + 56) = v34;
        v36 = sub_19CD30650(v30);
        v37 = v47;
        swift_bridgeObjectRetain();
        v38 = sub_19CEC74DC(v36, v37);
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_19CFE010C();
        sub_19CFDF698();
        sub_19CFDF3D4();
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CF13494(v50, v51);
        swift_bridgeObjectRelease();
        v39 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        if (qword_1EE43A228 != -1)
          swift_once();
        v47 = qword_1EE439FB8;
        sub_19CDB7B9C(v38);
        swift_bridgeObjectRelease();
        v40 = (void *)sub_19CFDF3B0();
        swift_bridgeObjectRelease();
        objc_msgSend(v39, sel_postNotificationName_object_userInfo_, v47, 0, v40);

        sub_19CECA988();
        swift_allocError();
        *v41 = 6;
        swift_willThrow();
        sub_19CCF4A54(v28, v43);
        sub_19CE7B434(v48, v49, v35);
        v18 = (uint64_t)v46;
        goto LABEL_4;
      }
    }
    v35 = v13;
    *v31 = 0x6E776F6E6B6E75;
    v34 = 0xE700000000000000;
    goto LABEL_17;
  }
  v50 = 0;
  v51 = 0xE000000000000000;
  swift_retain();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v50 = 0xD000000000000024;
  v51 = 0x800000019D074650;
  sub_19CFDF3D4();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CF13494(v50, v51);
  swift_bridgeObjectRelease();
  sub_19CECA988();
  swift_allocError();
  *v17 = 6;
  swift_willThrow();
  v18 = (uint64_t)v46;
LABEL_4:
  sub_19CCE9F48(v18);
LABEL_7:
  sub_19CFDFE78();
  sub_19CFDF1A0();
  sub_19CFDF170();
  v25 = v11;
  v26 = v45;
LABEL_11:
  v16(v25, v26);

}

uint64_t sub_19CEC8748(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void *v53;
  id v54;
  void *v55;
  unsigned int v56;
  id v57;
  id v58;
  void *v59;
  unsigned int v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  id v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  _BYTE *v79;
  id v80;
  void *v81;
  _BYTE *v82;
  char *v83;
  uint64_t v84;
  char *v86;
  char *v87;
  char *v88;
  _QWORD *v89;
  void (*v90)(uint64_t, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  ValueMetadata *v94;
  uint64_t v95;
  _QWORD *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  id v111;
  void *v112;
  unsigned int v113;
  id v114;
  char *v115;
  id v116;
  char *v117;
  char *v118;
  unint64_t v119;
  char v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t);
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  id v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t, uint64_t);
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  char *v162;
  _QWORD v163[2];
  ValueMetadata *v164;
  uint64_t v165;
  int v166;
  _BYTE v167[12];
  void (*v168)(char *, char *, uint64_t);
  id v169;
  unint64_t v170;
  uint64_t v171;
  ValueMetadata *v172;
  char *v173;
  id v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  ValueMetadata *v187;
  void (*v188)(char *, uint64_t);
  char *v189;
  char *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  void (*v196)(char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  _QWORD v203[5];
  __int128 v204;
  unint64_t v205;
  uint64_t v206;
  _UNKNOWN **v207;
  __int128 v208;
  uint64_t v209;
  ValueMetadata *v210;
  ValueMetadata *v211;
  _QWORD v212[5];
  __int128 v213;
  uint64_t v214;
  ValueMetadata *v215;
  _UNKNOWN **v216;
  _BYTE v217[40];
  __int128 v218[2];
  uint64_t v219;

  v196 = a3;
  v184 = a8;
  v185 = a7;
  v186 = a4;
  v182 = a5;
  v183 = a6;
  v200 = a2;
  v219 = *MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v8, v9);
  v180 = (char *)v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v181 = (char *)v163 - v13;
  v14 = type metadata accessor for FileArtifact();
  MEMORY[0x1E0C80A78](v14, v15);
  v179 = (uint64_t)v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v176 = (uint64_t)v163 - v19;
  MEMORY[0x1E0C80A78](v20, v21);
  v193 = (uint64_t)v163 - v22;
  v198 = sub_19CFDF1AC();
  v195 = *(_QWORD *)(v198 - 8);
  MEMORY[0x1E0C80A78](v198, v23);
  v199 = (char *)v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_19CFDEFA8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (char *)v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_19CFDEDE0();
  v30 = *(_QWORD **)(v201 - 8);
  MEMORY[0x1E0C80A78](v201, v31);
  v177 = (char *)v163 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33, v34);
  v175 = (char *)v163 - v35;
  MEMORY[0x1E0C80A78](v36, v37);
  v178 = (char *)v163 - v38;
  MEMORY[0x1E0C80A78](v39, v40);
  v187 = (ValueMetadata *)((char *)v163 - v41);
  MEMORY[0x1E0C80A78](v42, v43);
  v194 = (char *)v163 - v44;
  MEMORY[0x1E0C80A78](v45, v46);
  v189 = (char *)v163 - v47;
  MEMORY[0x1E0C80A78](v48, v49);
  v51 = (char *)v163 - v50;
  sub_19CFDEF9C();
  sub_19CFDEF90();
  v52 = *(void (**)(char *, uint64_t))(v26 + 8);
  v190 = v29;
  v191 = v25;
  v188 = v52;
  v52(v29, v25);
  sub_19CFDED38();
  swift_bridgeObjectRelease();
  v53 = (void *)objc_opt_self();
  v54 = objc_msgSend(v53, sel_defaultManager);
  v55 = (void *)sub_19CFDED2C();
  *(_QWORD *)&v208 = 0;
  v56 = objc_msgSend(v54, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v55, 0, 0, &v208);

  if (!v56)
  {
    v76 = (id)v208;
    sub_19CFDEC9C();

    swift_willThrow();
    v77 = (void (*)(char *, uint64_t))v30[1];
LABEL_14:
    v78 = v201;
    goto LABEL_15;
  }
  v192 = v30;
  v202 = 0;
  v57 = (id)v208;
  v58 = objc_msgSend(v53, sel_defaultManager);
  sub_19CFDED8C();
  v59 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v60 = objc_msgSend(v58, sel_fileExistsAtPath_isDirectory_, v59, &v202);

  if (v60)
  {
    v61 = objc_msgSend(v53, sel_defaultManager);
    sub_19CFDED8C();
    v62 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v208 = 0;
    v63 = objc_msgSend(v61, sel_contentsOfDirectoryAtPath_error_, v62, &v208);

    v64 = (void *)v208;
    if (v63)
    {
      v65 = sub_19CFDF86C();
      v66 = v64;

      v67 = *(_QWORD *)(v65 + 16);
      swift_bridgeObjectRelease();
      if (v202 == 1 && !v67)
        goto LABEL_6;
    }
    else
    {
      v80 = (id)v208;
      v81 = (void *)sub_19CFDEC9C();

      swift_willThrow();
    }
    sub_19CECA988();
    swift_allocError();
    *v82 = 4;
    swift_willThrow();
    goto LABEL_13;
  }
LABEL_6:
  v174 = v53;
  sub_19CD14B0C();
  v68 = (void *)sub_19CFDFF44();
  sub_19CFDFE84();
  v69 = v199;
  sub_19CFDF1A0();
  sub_19CFDF170();
  v70 = *(void (**)(char *, uint64_t))(v195 + 8);
  v71 = v198;
  v70(v69, v198);
  sub_19CCD5B84((uint64_t)v196, (uint64_t)v218);
  type metadata accessor for JetPackageFormatParser();
  v72 = swift_allocObject();
  v73 = v72 + 16;
  sub_19CCD14C4(v218, v72 + 16);
  *(_BYTE *)(v72 + 56) = 0;
  v74 = v197;
  v75 = sub_19CEB6DB4();
  if (v74)
  {
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1Tm(v73);
    swift_deallocClassInstance();

LABEL_13:
    sub_19CECA168();
    v77 = (void (*)(char *, uint64_t))v192[1];
    goto LABEL_14;
  }
  v196 = v70;
  v197 = v72;
  v78 = v201;
  if (!v75)
  {
    sub_19CEB703C();
    *(_DWORD *)&v167[8] = 0;
    v166 = BYTE1(v208);
    *(_QWORD *)v167 = BYTE3(v208);
    v195 = v209;
    v165 = (unsigned __int16)v210;
    v171 = v212[0];
    v172 = v211;
    v169 = (id)*((_QWORD *)&v208 + 1);
    v170 = v212[1];
    sub_19CFDFE78();
    v86 = v199;
    sub_19CFDF1A0();
    sub_19CFDF170();
    v196(v86, v71);
    v173 = v51;
    *(_QWORD *)&v208 = 0;
    *((_QWORD *)&v208 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v208 = 0xD00000000000001CLL;
    *((_QWORD *)&v208 + 1) = 0x800000019D074430;
    v51 = v173;
    swift_bridgeObjectRetain();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CF1349C(v208, *((uint64_t *)&v208 + 1));
    swift_bridgeObjectRelease();
    v87 = v189;
    v168 = (void (*)(char *, char *, uint64_t))v192[2];
    v168(v189, v51, v78);
    v88 = v190;
    sub_19CFDEF9C();
    v169 = (id)sub_19CFDEF90();
    v188(v88, v191);
    sub_19CFDED38();
    v89 = v192;
    swift_bridgeObjectRelease();
    v169 = v68;
    v77 = (void (*)(char *, uint64_t))v89[1];
    v77(v87, v78);
    v90 = (void (*)(uint64_t, char *, uint64_t))v89[4];
    v91 = v193;
    v90(v193, v194, v78);
    if (*(_BYTE *)(v197 + 56) != 2)
    {
      sub_19CEB7974();
      swift_allocError();
      *v97 = 0;
      swift_willThrow();
      sub_19CECAD94(v91);
      swift_bridgeObjectRelease();

      swift_release();
      sub_19CE7B434((uint64_t)v172, v171, v170);
      goto LABEL_21;
    }
    v163[0] = v90;
    sub_19CCD5B84(v73, (uint64_t)v217);
    sub_19CCD5B84((uint64_t)v217, (uint64_t)&v208);
    v92 = (uint64_t)v210;
    v164 = v211;
    v163[1] = __swift_project_boxed_opaque_existential_1(&v208, (uint64_t)v210);
    v93 = (uint64_t)v187;
    v168((char *)v187, (char *)v91, v78);
    v94 = (ValueMetadata *)type metadata accessor for FileOutputStream();
    swift_allocObject();
    v95 = *(_QWORD *)&v167[4];
    v96 = sub_19CE8FD6C(v93);
    if (v95)
    {
      swift_bridgeObjectRelease();

      swift_release();
      sub_19CE7B434((uint64_t)v172, v171, v170);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
      sub_19CECAD94(v91);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v208);
      v51 = v173;
      sub_19CECA168();
      goto LABEL_15;
    }
    v215 = v94;
    v216 = &off_1E3DCD4D8;
    *(_QWORD *)&v213 = v96;
    v98 = sub_19CDEA878(&v213, 0x20000, v92, (uint64_t)v164);
    v164 = v94;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v213);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v208);
    *(_QWORD *)&v208 = 0;
    *((_QWORD *)&v208 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v208 = 0xD000000000000017;
    *((_QWORD *)&v208 + 1) = 0x800000019D074450;
    *(_QWORD *)&v213 = v98;
    sub_19CFE0598();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CF1349C(v208, *((uint64_t *)&v208 + 1));
    swift_bridgeObjectRelease();
    sub_19CFDED8C();
    v187 = (ValueMetadata *)type metadata accessor for FileInputStream();
    swift_allocObject();
    v99 = sub_19CE90378();
    v210 = v187;
    v211 = (ValueMetadata *)&off_1E3DCC580;
    *(_QWORD *)&v208 = v99;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
    sub_19CCD14C4(&v208, (uint64_t)v217);
    *(_QWORD *)&v213 = v186;
    *((_QWORD *)&v213 + 1) = v182;
    v214 = v183;
    v100 = (uint64_t)v172;
    *(_QWORD *)&v204 = v172;
    *((_QWORD *)&v204 + 1) = v171;
    v101 = v170;
    v205 = v170;
    sub_19CCD5B84((uint64_t)v217, (uint64_t)&v208);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    v102 = swift_allocObject();
    v103 = v102;
    *(_OWORD *)(v102 + 16) = xmmword_19D052350;
    strcpy((char *)(v102 + 32), "packageLength");
    *(_WORD *)(v102 + 46) = -4864;
    v104 = v185;
    if ((v184 & 1) != 0)
      v104 = -1;
    *(_QWORD *)(v102 + 48) = v104;
    v105 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v102 + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v102 + 80) = 0xD000000000000011;
    *(_QWORD *)(v102 + 120) = v105;
    *(_QWORD *)(v102 + 88) = 0x800000019D074470;
    *(_QWORD *)(v102 + 96) = v98;
    v106 = v100;
    v107 = v171;
    sub_19CDCCEB4(v106, v171, v101);
    v108 = sub_19CD30650(v103);
    sub_19CEC816C((uint64_t *)&v204, (uint64_t)&v208, v108);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v208);
    sub_19CE7B434((uint64_t)v172, v107, v101);
    sub_19CFDED8C();
    swift_allocObject();
    v109 = sub_19CE90378();
    LODWORD(v185) = v60;
    v210 = v187;
    v211 = (ValueMetadata *)&off_1E3DCC580;
    *(_QWORD *)&v208 = v109;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
    sub_19CCD14C4(&v208, (uint64_t)v217);
    if ((v167[0] & 1) != 0)
    {
      if ((v166 & 1) != 0)
      {
LABEL_26:
        sub_19CF1349C(0xD000000000000021, 0x800000019D0744C0);
        sub_19CFDFE84();
        v110 = v199;
        sub_19CFDF1A0();
        sub_19CFDF170();
        v196(v110, v198);
        if ((v185 & 1) != 0)
        {
LABEL_29:
          sub_19CEDFD84((uint64_t)v217, v200, 102400);
          sub_19CFDFE78();
          v115 = v199;
          sub_19CFDF1A0();
          v116 = v169;
          sub_19CFDF170();
          v196(v115, v198);
          sub_19CF1349C(0xD00000000000001ALL, 0x800000019D074510);
          swift_bridgeObjectRelease();

          swift_release();
          sub_19CE7B434((uint64_t)v172, v171, v170);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
          sub_19CECAD94(v193);
          v117 = v173;
          sub_19CECA168();
          v83 = v117;
          v84 = v201;
          return ((uint64_t (*)(char *, uint64_t))v77)(v83, v84);
        }
        v111 = objc_msgSend(v174, sel_defaultManager);
        v112 = (void *)sub_19CFDED2C();
        *(_QWORD *)&v208 = 0;
        v113 = objc_msgSend(v111, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v112, 0, 0, &v208);

        if (v113)
        {
          v114 = (id)v208;
          goto LABEL_29;
        }
        v149 = (id)v208;
        sub_19CFDEC9C();

LABEL_49:
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        sub_19CE7B434((uint64_t)v172, v171, v170);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
        sub_19CECAD94(v193);
        v51 = v173;
        sub_19CECA168();
        goto LABEL_14;
      }
LABEL_51:
      sub_19CF1349C(0xD000000000000020, 0x800000019D074530);
      sub_19CFDFE84();
      v152 = v199;
      sub_19CFDF1A0();
      sub_19CFDF170();
      v196(v152, v198);
      v153 = v189;
      v154 = v201;
      v155 = (void (*)(char *, uint64_t, uint64_t))v168;
      v168(v189, v173, v201);
      v156 = v190;
      sub_19CFDEF9C();
      sub_19CFDEF90();
      v188(v156, v191);
      v157 = v194;
      sub_19CFDED38();
      swift_bridgeObjectRelease();
      v77(v153, v154);
      v158 = v179;
      ((void (*)(uint64_t, char *, uint64_t))v163[0])(v179, v157, v154);
      sub_19CCD5B84((uint64_t)v217, (uint64_t)&v213);
      v159 = (uint64_t)v177;
      v155(v177, v158, v154);
      swift_allocObject();
      v160 = sub_19CE8FD6C(v159);
      v206 = (uint64_t)v164;
      v207 = &off_1E3DCD4D8;
      *(_QWORD *)&v204 = v160;
      sub_19CCD14C4(&v213, (uint64_t)&v208);
      sub_19CCD14C4(&v204, (uint64_t)v212);
      sub_19CE20D30();
      sub_19CECADD0((uint64_t)&v208);
      sub_19CFDED8C();
      swift_allocObject();
      v161 = sub_19CE90378();
      v210 = v187;
      v211 = (ValueMetadata *)&off_1E3DCC580;
      *(_QWORD *)&v208 = v161;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
      sub_19CCD14C4(&v208, (uint64_t)v217);
      sub_19CFDFE78();
      v162 = v199;
      sub_19CFDF1A0();
      sub_19CFDF170();
      v196(v162, v198);
      sub_19CECAD94(v179);
      goto LABEL_26;
    }
    sub_19CF1349C(0xD00000000000001DLL, 0x800000019D074580);
    sub_19CFDFE84();
    v118 = v199;
    sub_19CFDF1A0();
    sub_19CFDF170();
    v196(v118, v198);
    if (v186)
    {
      if (*(_QWORD *)(v186 + 16) && (v119 = sub_19CE121CC(v165), (v120 & 1) != 0))
      {
        v121 = v192;
        v122 = (uint64_t)v180;
        v123 = v201;
        v168(v180, (char *)(*(_QWORD *)(v186 + 56) + v192[9] * v119), v201);
        v124 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v121[7];
        v124(v122, 0, 1, v123);
        v125 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v121[6];
        if (v125(v122, 1, v123) != 1)
        {
          v126 = (uint64_t)v181;
          v127 = v201;
          ((void (*)(char *, char *, uint64_t))v163[0])(v181, v180, v201);
          v124(v126, 0, 1, v127);
LABEL_43:
          if (v125((uint64_t)v181, 1, v201) == 1)
          {
            sub_19CD3BBD0((uint64_t)v181);
            *(_QWORD *)&v208 = 0;
            *((_QWORD *)&v208 + 1) = 0xE000000000000000;
            sub_19CFE010C();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v208 = 0xD00000000000002DLL;
            *((_QWORD *)&v208 + 1) = 0x800000019D0745B0;
            LOWORD(v213) = v165;
            sub_19CFE0598();
            sub_19CFDF698();
            swift_bridgeObjectRelease();
            sub_19CF1349C(v208, *((uint64_t *)&v208 + 1));
            swift_bridgeObjectRelease();
            sub_19CECA988();
            swift_allocError();
            *v137 = 3;
            goto LABEL_49;
          }
          ((void (*)(char *, char *, uint64_t))v163[0])(v178, v181, v201);
          sub_19CF1349C(0xD00000000000001ALL, 0x800000019D0745E0);
          v138 = sub_19CFDEDF8();
          *(_QWORD *)&v167[4] = 0;
          v215 = &type metadata for CommonCryptoPackageEncryption;
          v216 = &off_1E3DD6980;
          *(_QWORD *)&v213 = v138;
          *((_QWORD *)&v213 + 1) = v139;
          v214 = 0x20000;
          sub_19CCD14C4(&v213, (uint64_t)&v208);
          v140 = v189;
          v141 = v201;
          v142 = (void (*)(char *, uint64_t, uint64_t))v168;
          v168(v189, v173, v201);
          v143 = v190;
          sub_19CFDEF9C();
          sub_19CFDEF90();
          v188(v143, v191);
          v144 = v194;
          sub_19CFDED38();
          swift_bridgeObjectRelease();
          v77(v140, v141);
          v145 = v176;
          ((void (*)(uint64_t, char *, uint64_t))v163[0])(v176, v144, v141);
          sub_19CCD5B84((uint64_t)&v208, (uint64_t)&v213);
          __swift_project_boxed_opaque_existential_1(&v213, (uint64_t)v215);
          sub_19CCD5B84((uint64_t)v217, (uint64_t)&v204);
          v146 = (uint64_t)v175;
          v142(v175, v145, v141);
          swift_allocObject();
          v147 = *(_QWORD *)&v167[4];
          v148 = sub_19CE8FD6C(v146);
          if (!v147)
          {
            v203[3] = v164;
            v203[4] = &off_1E3DCD4D8;
            v203[0] = v148;
            sub_19CF85DAC((uint64_t)&v204, (uint64_t)v203);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v203);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v204);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v213);
            sub_19CFDED8C();
            swift_allocObject();
            v150 = sub_19CE90378();
            v215 = v187;
            v216 = &off_1E3DCC580;
            *(_QWORD *)&v213 = v150;
            sub_19CECAD94(v176);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
            sub_19CCD14C4(&v213, (uint64_t)v217);
            sub_19CFDFE78();
            v151 = v199;
            sub_19CFDF1A0();
            sub_19CFDF170();
            v196(v151, v198);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v208);
            v77(v178, v201);
            if ((v166 & 1) != 0)
              goto LABEL_26;
            goto LABEL_51;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v204);
          sub_19CECAD94(v176);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v213);
          *(_QWORD *)&v213 = 0;
          *((_QWORD *)&v213 + 1) = 0xE000000000000000;
          sub_19CFE010C();
          sub_19CFDF698();
          *(_QWORD *)&v204 = v147;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
          sub_19CFE02E0();
          sub_19CF13494(v213, *((uint64_t *)&v213 + 1));
          swift_bridgeObjectRelease();
          swift_willThrow();
          swift_bridgeObjectRelease();

          swift_release();
          sub_19CE7B434((uint64_t)v172, v171, v170);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v208);
          v78 = v201;
          v77(v178, v201);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v217);
          sub_19CECAD94(v193);
          v51 = v173;
LABEL_21:
          sub_19CECA168();
          goto LABEL_15;
        }
      }
      else
      {
        v124 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v192[7];
        v124((uint64_t)v180, 1, 1, v201);
      }
      if (*(_QWORD *)(v186 + 16) && (v128 = sub_19CE121CC(0), (v129 & 1) != 0))
      {
        v130 = (uint64_t)v181;
        v131 = v201;
        v168(v181, (char *)(*(_QWORD *)(v186 + 56) + v192[9] * v128), v201);
        v132 = v130;
        v133 = 0;
        v134 = v131;
      }
      else
      {
        v132 = (uint64_t)v181;
        v133 = 1;
        v134 = v201;
      }
      v124(v132, v133, 1, v134);
    }
    else
    {
      v135 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v192[7];
      v136 = v201;
      v135((uint64_t)v180, 1, 1, v201);
      v135((uint64_t)v181, 1, 1, v136);
    }
    sub_19CD3BBD0((uint64_t)v180);
    v125 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v192[6];
    goto LABEL_43;
  }
  sub_19CECA988();
  swift_allocError();
  *v79 = 2;
  swift_willThrow();
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1Tm(v73);
  swift_deallocClassInstance();

  sub_19CECA168();
  v77 = (void (*)(char *, uint64_t))v192[1];
LABEL_15:
  v83 = v51;
  v84 = v78;
  return ((uint64_t (*)(char *, uint64_t))v77)(v83, v84);
}

void sub_19CECA168()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_19CFDED2C();
  v6 = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, &v6);

  if (v2)
  {
    v3 = v6;
  }
  else
  {
    v4 = v6;
    v5 = (void *)sub_19CFDEC9C();

    swift_willThrow();
    v6 = 0;
    v7 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFDEDE0();
    sub_19CECAD4C();
    sub_19CFE0598();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    swift_getErrorValue();
    sub_19CFE0868();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CF13494((uint64_t)v6, v7);
    swift_bridgeObjectRelease();

  }
}

id sub_19CECA33C(uint64_t a1, void (*a2)(id))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB0F80 != -1)
    swift_once();
  v9 = (void *)qword_1ECEB1370;
  objc_msgSend((id)qword_1ECEB1370, sel_lock);
  sub_19CECA54C(a1);
  if (v2)
    return objc_msgSend(v9, sel_unlock);
  a2(objc_msgSend(v9, sel_unlock));
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v13 = 0xD00000000000001ELL;
  v14 = 0x800000019D0743D0;
  sub_19CFDEDE0();
  sub_19CECAD4C();
  sub_19CFE0598();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CF1349C(v13, v14);
  swift_bridgeObjectRelease();
  v11 = (void *)qword_1ECEB1370;
  objc_msgSend((id)qword_1ECEB1370, sel_lock);
  if (qword_1ECEB0F78 != -1)
    swift_once();
  swift_beginAccess();
  sub_19CDC1BC8(a1, (uint64_t)v8);
  swift_endAccess();
  objc_msgSend(v11, sel_unlock);
  return (id)sub_19CD3BBD0((uint64_t)v8);
}

uint64_t sub_19CECA54C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  _BYTE *v13;
  _BYTE v15[24];

  v2 = sub_19CFDEDE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = &v15[-v9];
  if (qword_1ECEB0F78 != -1)
    swift_once();
  swift_beginAccess();
  v11 = qword_1ECEB1368;
  swift_bridgeObjectRetain();
  v12 = sub_19CDC17B8(a1, v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    sub_19CECA988();
    swift_allocError();
    *v13 = 5;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    swift_beginAccess();
    sub_19CE88DA0((uint64_t)v10, v6);
    swift_endAccess();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v10, v2);
  }
}

uint64_t sub_19CECA6DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  _BYTE v31[32];
  _OWORD v32[2];
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v36 = a1;
  v37 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v38 = v8;
  v39 = 0;
  v40 = v11 & v9;
  v41 = a2;
  v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE2412C(&v34);
  v12 = *((_QWORD *)&v34 + 1);
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  while (1)
  {
    v15 = v34;
    sub_19CD433C0(&v35, v33);
    v16 = *a5;
    v18 = sub_19CD3FD1C(v15, v12);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (*(_QWORD *)(v16 + 24) >= v21)
    {
      if ((a4 & 1) != 0)
      {
        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_19CD141BC();
        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_19CD13ED8(v21, a4 & 1);
      v23 = sub_19CD3FD1C(v15, v12);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_22;
      v18 = v23;
      if ((v22 & 1) != 0)
      {
LABEL_6:
        v13 = 32 * v18;
        sub_19CD436B0(*(_QWORD *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_19CD436B0((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
        swift_bridgeObjectRelease();
        v14 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + v13);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        sub_19CD433C0(v32, v14);
        goto LABEL_7;
      }
    }
    v25 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v15;
    v26[1] = v12;
    sub_19CD433C0(v33, (_OWORD *)(v25[7] + 32 * v18));
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_21;
    v25[2] = v29;
LABEL_7:
    sub_19CE2412C(&v34);
    v12 = *((_QWORD *)&v34 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v34 + 1))
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

unint64_t sub_19CECA940()
{
  unint64_t result;

  result = qword_1EE440ED8;
  if (!qword_1EE440ED8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageReaderError, &type metadata for JetPackageReaderError);
    atomic_store(result, (unint64_t *)&qword_1EE440ED8);
  }
  return result;
}

unint64_t sub_19CECA988()
{
  unint64_t result;

  result = qword_1EE440EE0;
  if (!qword_1EE440EE0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageReaderError, &type metadata for JetPackageReaderError);
    atomic_store(result, (unint64_t *)&qword_1EE440EE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JetPackageReaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_19CECAA18 + 4 * byte_19D05DBBC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_19CECAA4C + 4 * byte_19D05DBB7[v4]))();
}

uint64_t sub_19CECAA4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CECAA54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CECAA5CLL);
  return result;
}

uint64_t sub_19CECAA68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CECAA70);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_19CECAA74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CECAA7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageReaderError()
{
  return &type metadata for JetPackageReaderError;
}

uint64_t destroy for JetPackageReader(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8))
    return swift_release();
  return result;
}

_QWORD *_s9JetEngine16JetPackageReaderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *assignWithCopy for JetPackageReader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for JetPackageReader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackageReader(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JetPackageReader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackageReader()
{
  return &type metadata for JetPackageReader;
}

uint64_t sub_19CECAD24()
{
  uint64_t v0;

  return sub_19CEC8748(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(char *, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

unint64_t sub_19CECAD4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECEB29E8;
  if (!qword_1ECEB29E8)
  {
    v1 = sub_19CFDEDE0();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ECEB29E8);
  }
  return result;
}

uint64_t sub_19CECAD94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FileArtifact();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CECADD0(uint64_t a1)
{
  destroy for JetPackAssetSession.Configuration(a1);
  return a1;
}

void destroy for OperationCheckpoint(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 368);
  v6 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 336);
  v4 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 304);
  v2 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 272);
  v1 = *(_OWORD *)(a1 + 224);
  sub_19CD4ABD8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v1,
    *((uint64_t *)&v1 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v2,
    *((uint64_t *)&v2 + 1),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1));
}

uint64_t *initializeWithCopy for OperationCheckpoint(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2[9];
  v53 = a2[8];
  v50 = a2[11];
  v51 = a2[10];
  v48 = a2[13];
  v49 = a2[12];
  v46 = a2[15];
  v47 = a2[14];
  v44 = a2[17];
  v45 = a2[16];
  v42 = a2[19];
  v43 = a2[18];
  v40 = a2[21];
  v41 = a2[20];
  v13 = a2[22];
  v14 = a2[23];
  v15 = a2[24];
  v16 = a2[25];
  v17 = a2[26];
  v18 = a2[27];
  v19 = a2[28];
  v20 = a2[29];
  v3 = a2[31];
  v21 = a2[30];
  v22 = a2[32];
  v23 = a2[33];
  v24 = a2[34];
  v25 = a2[35];
  v26 = a2[36];
  v27 = a2[37];
  v28 = a2[38];
  v29 = a2[39];
  v30 = a2[40];
  v31 = a2[41];
  v32 = a2[42];
  v33 = a2[43];
  v34 = a2[44];
  v35 = a2[45];
  v36 = a2[46];
  v37 = a2[47];
  v38 = a2[48];
  v39 = a2[49];
  v5 = a2[1];
  v4 = *a2;
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_19CD375C8(*a2, v5, v6, v7, v8, v9, v10, v11, v53, v52, v51, v50, v49, v48, v47, v46, v45, v44, v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v3,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v53;
  a1[9] = v52;
  a1[10] = v51;
  a1[11] = v50;
  a1[12] = v49;
  a1[13] = v48;
  a1[14] = v47;
  a1[15] = v46;
  a1[16] = v45;
  a1[17] = v44;
  a1[18] = v43;
  a1[19] = v42;
  a1[20] = v41;
  a1[21] = v40;
  a1[22] = v13;
  a1[23] = v14;
  a1[24] = v15;
  a1[25] = v16;
  a1[26] = v17;
  a1[27] = v18;
  a1[28] = v19;
  a1[29] = v20;
  a1[30] = v21;
  a1[31] = v3;
  a1[32] = v22;
  a1[33] = v23;
  a1[34] = v24;
  a1[35] = v25;
  a1[36] = v26;
  a1[37] = v27;
  a1[38] = v28;
  a1[39] = v29;
  a1[40] = v30;
  a1[41] = v31;
  a1[42] = v32;
  a1[43] = v33;
  a1[44] = v34;
  a1[45] = v35;
  a1[46] = v36;
  a1[47] = v37;
  a1[48] = v38;
  a1[49] = v39;
  return a1;
}

uint64_t assignWithCopy for OperationCheckpoint(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v80 = *a2;
  v81 = a2[1];
  v78 = a2[3];
  v79 = a2[2];
  v76 = a2[5];
  v77 = a2[4];
  v74 = a2[7];
  v75 = a2[6];
  v72 = a2[9];
  v73 = a2[8];
  v70 = a2[11];
  v71 = a2[10];
  v68 = a2[13];
  v69 = a2[12];
  v66 = a2[15];
  v67 = a2[14];
  v64 = a2[17];
  v65 = a2[16];
  v62 = a2[19];
  v63 = a2[18];
  v61 = a2[20];
  v3 = a2[22];
  v60 = a2[21];
  v4 = a2[23];
  v5 = a2[24];
  v6 = a2[25];
  v8 = a2[27];
  v7 = a2[28];
  v10 = a2[29];
  v9 = a2[30];
  v11 = a2[31];
  v41 = a2[26];
  v42 = a2[32];
  v43 = a2[33];
  v44 = a2[34];
  v45 = a2[35];
  v46 = a2[36];
  v47 = a2[37];
  v48 = a2[38];
  v49 = a2[39];
  v50 = a2[40];
  v51 = a2[41];
  v52 = a2[42];
  v53 = a2[43];
  v54 = a2[44];
  v55 = a2[45];
  v56 = a2[46];
  v57 = a2[47];
  v58 = a2[48];
  v59 = a2[49];
  sub_19CD375C8(*a2, v81, v79, v78, v77, v76, v75, v74, v73, v72, v71, v70, v69, v68, v67, v66, v65, v64, v63,
    v62,
    v61,
    v60,
    v3,
    v4,
    v5,
    v6,
    v41,
    v8,
    v7,
    v10,
    v9,
    v11,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v80;
  *(_QWORD *)(a1 + 8) = v81;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v79;
  *(_QWORD *)(a1 + 24) = v78;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v77;
  *(_QWORD *)(a1 + 40) = v76;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v75;
  *(_QWORD *)(a1 + 56) = v74;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v73;
  *(_QWORD *)(a1 + 72) = v72;
  *(_QWORD *)(a1 + 80) = v71;
  *(_QWORD *)(a1 + 88) = v70;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v69;
  *(_QWORD *)(a1 + 104) = v68;
  *(_QWORD *)(a1 + 112) = v67;
  *(_QWORD *)(a1 + 120) = v66;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v65;
  *(_QWORD *)(a1 + 136) = v64;
  *(_QWORD *)(a1 + 144) = v63;
  *(_QWORD *)(a1 + 152) = v62;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v61;
  *(_QWORD *)(a1 + 168) = v60;
  *(_QWORD *)(a1 + 176) = v3;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 184) = v4;
  *(_QWORD *)(a1 + 192) = v5;
  *(_QWORD *)(a1 + 200) = v6;
  *(_QWORD *)(a1 + 208) = v41;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 216) = v8;
  *(_QWORD *)(a1 + 224) = v7;
  *(_QWORD *)(a1 + 232) = v10;
  *(_QWORD *)(a1 + 240) = v9;
  v32 = *(_OWORD *)(a1 + 256);
  v33 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 248) = v11;
  *(_QWORD *)(a1 + 256) = v42;
  *(_QWORD *)(a1 + 264) = v43;
  *(_QWORD *)(a1 + 272) = v44;
  *(_QWORD *)(a1 + 280) = v45;
  v34 = *(_OWORD *)(a1 + 288);
  v35 = *(_OWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 288) = v46;
  *(_QWORD *)(a1 + 296) = v47;
  *(_QWORD *)(a1 + 304) = v48;
  *(_QWORD *)(a1 + 312) = v49;
  v36 = *(_OWORD *)(a1 + 320);
  v37 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v50;
  *(_QWORD *)(a1 + 328) = v51;
  *(_QWORD *)(a1 + 336) = v52;
  *(_QWORD *)(a1 + 344) = v53;
  v38 = *(_OWORD *)(a1 + 352);
  v39 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 352) = v54;
  *(_QWORD *)(a1 + 360) = v55;
  *(_QWORD *)(a1 + 368) = v56;
  *(_QWORD *)(a1 + 376) = v57;
  *(_QWORD *)(a1 + 384) = v58;
  *(_QWORD *)(a1 + 392) = v59;
  sub_19CD4ABD8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1));
  return a1;
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for OperationCheckpoint(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 240);
  v24 = *(_OWORD *)(a1 + 256);
  v25 = *(_OWORD *)(a1 + 272);
  v26 = *(_OWORD *)(a1 + 288);
  v27 = *(_OWORD *)(a1 + 304);
  v28 = *(_OWORD *)(a1 + 320);
  v29 = *(_OWORD *)(a1 + 336);
  v30 = *(_OWORD *)(a1 + 352);
  v31 = *(_OWORD *)(a1 + 368);
  v32 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v32;
  v33 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v33;
  v34 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v34;
  v35 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v35;
  v36 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v36;
  v37 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v37;
  v38 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v38;
  v39 = a2[15];
  v40 = a2[16];
  v41 = a2[17];
  v42 = a2[18];
  v43 = a2[19];
  v44 = a2[20];
  v45 = a2[21];
  v46 = a2[22];
  v47 = a2[23];
  v48 = a2[24];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v39;
  *(_OWORD *)(a1 + 256) = v40;
  *(_OWORD *)(a1 + 272) = v41;
  *(_OWORD *)(a1 + 288) = v42;
  *(_OWORD *)(a1 + 304) = v43;
  *(_OWORD *)(a1 + 320) = v44;
  *(_OWORD *)(a1 + 336) = v45;
  *(_OWORD *)(a1 + 352) = v46;
  *(_OWORD *)(a1 + 368) = v47;
  *(_OWORD *)(a1 + 384) = v48;
  sub_19CD4ABD8(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for OperationCheckpoint(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 400))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 9;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for OperationCheckpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 400) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 48) = (unint64_t)-a2 << 9;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_QWORD *)(result + 392) = 0;
      *(_OWORD *)(result + 56) = 0u;
      result += 56;
      *(_OWORD *)(result + 208) = 0u;
      *(_OWORD *)(result + 224) = 0u;
      *(_OWORD *)(result + 240) = 0u;
      *(_OWORD *)(result + 256) = 0u;
      *(_OWORD *)(result + 272) = 0u;
      *(_OWORD *)(result + 288) = 0u;
      *(_OWORD *)(result + 304) = 0u;
      *(_OWORD *)(result + 320) = 0u;
      return result;
    }
    *(_BYTE *)(result + 400) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CECB840(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *(_QWORD *)(result + 96) & 1;
  v3 = *(_QWORD *)(result + 112) & 1;
  v4 = *(_QWORD *)(result + 128) & 0xFF01;
  v5 = *(_QWORD *)(result + 144) & 1;
  v6 = *(_QWORD *)(result + 160) & 1;
  v7 = *(_QWORD *)(result + 176) & 1;
  v8 = *(_QWORD *)(result + 192) & 1;
  v9 = *(_QWORD *)(result + 208) & 1;
  v10 = *(_QWORD *)(result + 224) & 1;
  v11 = *(_QWORD *)(result + 240) & 1;
  v12 = *(_QWORD *)(result + 256) & 1;
  v13 = *(_QWORD *)(result + 272) & 1;
  v14 = *(_QWORD *)(result + 288) & 0xFF01;
  v15 = *(_QWORD *)(result + 304) & 1;
  v16 = *(_QWORD *)(result + 320) & 1;
  v17 = *(unsigned __int8 *)(result + 376) | (unint64_t)(a2 << 61);
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 112) = v3;
  *(_QWORD *)(result + 128) = v4;
  *(_QWORD *)(result + 144) = v5;
  *(_QWORD *)(result + 160) = v6;
  *(_QWORD *)(result + 176) = v7;
  *(_QWORD *)(result + 192) = v8;
  *(_QWORD *)(result + 208) = v9;
  *(_QWORD *)(result + 224) = v10;
  *(_QWORD *)(result + 240) = v11;
  *(_QWORD *)(result + 256) = v12;
  *(_QWORD *)(result + 272) = v13;
  *(_QWORD *)(result + 288) = v14;
  *(_QWORD *)(result + 304) = v15;
  *(_QWORD *)(result + 320) = v16;
  *(_QWORD *)(result + 376) = v17;
  return result;
}

void sub_19CECB91C()
{
  const void *v0;
  char *v1;
  _BYTE v2[400];
  _BYTE v3[400];

  sub_19CD376A0(v0, v2);
  sub_19CD376A0(v2, v3);
  v1 = (char *)sub_19CECB98C + 4 * byte_19D05DD20[sub_19CE1C76C((uint64_t)v3)];
  __asm { BR              X10 }
}

BOOL sub_19CECB98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v12;

  v6 = (_QWORD *)sub_19CE1C778((uint64_t)&v12);
  v8 = v6[2];
  v7 = v6[3];
  v9 = *v6 == v1 && v6[1] == v0;
  if (!v9 && (sub_19CFE06A0() & 1) == 0)
    return 0;
  v10 = v8 == v4;
  if (v7 >= v5)
    v10 = 0;
  if (v8 < v4 || v10)
    return 0;
  if (v3 == v8)
    return v2 >= v7;
  return v3 >= v8;
}

void sub_19CECBA78()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE v6[400];
  _BYTE v7[408];

  v1 = sub_19CFDEF84();
  MEMORY[0x1E0C80A78](v1, v2);
  MEMORY[0x1E0C80A78](v3, v4);
  sub_19CD376A0(v0, v6);
  sub_19CD376A0(v6, v7);
  v5 = (char *)&loc_19CECBB3C + *((int *)qword_19CECC240 + sub_19CE1C76C((uint64_t)v7));
  __asm { BR              X10 }
}

uint64_t sub_19CECBB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t v15;
  _QWORD *v16;

  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  v6 = sub_19CE1C778(v0 + 792);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = sub_19CFE013C();
  type metadata accessor for MonotonicTimeReference();
  if (qword_1ECEB2F88 != -1)
  {
    *(double *)(v0 + 8) = (double)v8;
    *(double *)(v0 + 16) = (double)v7;
    swift_once();
  }
  sub_19CFDEF24();
  sub_19CFDEF00();
  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v11 = *(_QWORD *)(v0 + 24);
  v10(v5, v11);
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_19CFDEF0C();
  v14 = objc_msgSend(v12, sel_serverTimeFromDate_, v13);

  v10(v4, v11);
  v15 = sub_19CD16BB8();
  v16 = *(_QWORD **)(v0 + 40);
  v16[3] = v15;
  *v16 = v14;
  return v9;
}

uint64_t dispatch thunk of JetPackAssetCache._cache(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CD579FC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of JetPackAssetCache._asset(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CCBE344;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of JetPackAssetCache._evict(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CD579FC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of JetPackAssetCache._empty()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return v7(a1, a2);
}

uint64_t dispatch thunk of JetPackAssetCache._allCachedAssets.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CE66350;
  return v7(a1, a2);
}

uint64_t dispatch thunk of JetPackAssetCache._beginTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of JetPackAssetCache._endTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t static OSLogger.networkReachability.getter()
{
  return sub_19CECCD34(&qword_1EE43D680);
}

uint64_t static OSLogger._metrics.getter()
{
  return sub_19CECCD34(&qword_1EE43D060);
}

uint64_t static OSLogger._localization.getter()
{
  return sub_19CECCD34(&qword_1EE43B620);
}

uint64_t LogMessageLevel.osLogType.getter()
{
  _BYTE *v0;

  if (*v0 - 1 < 2)
    return sub_19CFDFD4C();
  if (*v0)
    return sub_19CFDFD28();
  return sub_19CFDFD34();
}

uint64_t sub_19CECC560()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CECC5D4()
{
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFDF650();
}

uint64_t sub_19CECC634()
{
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CECC6A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void static OSLogger.Subsystem.jetEngine.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019D06DE10;
}

id static OSLogger.bugs.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1EE43BE78, (void **)&qword_1EE43BE68, a1);
}

uint64_t sub_19CECC70C()
{
  uint64_t result;
  uint64_t v1[7];

  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[2] = (uint64_t)sub_19CD1462C(v1, 1936160066, 0xE400000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CE10);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE465AF0 = result;
  return result;
}

id static OSLogger.metrics.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1ECEB31D8, (void **)&qword_1ECEB30F0, a1);
}

uint64_t sub_19CECC7EC()
{
  uint64_t result;
  uint64_t v1[7];

  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[2] = (uint64_t)sub_19CD1462C(v1, 0x7363697274654DLL, 0xE700000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CE10);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE43D050 = result;
  return result;
}

uint64_t static OSLogger.$_metrics.getter()
{
  return sub_19CECD034(&qword_1EE43D060);
}

id static OSLogger.jsLoading.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1ECEB2C88, (void **)&qword_1ECEB29D0, a1);
}

id sub_19CECC8F0()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x67616B636150534ALL, 0xEB00000000676E69);
  qword_1ECEB1D40 = (uint64_t)result;
  return result;
}

id static OSLogger.jsPackaging.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1ECEB0FA0, (void **)&qword_1ECEB1D40, a1);
}

id static OSLogger.jetPackAssets.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1ECEB0B68, (void **)&qword_1ECEB0B60, a1);
}

id sub_19CECC9C0()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x6574696C7173, 0xE600000000000000);
  qword_1EE440F10 = (uint64_t)result;
  return result;
}

id static OSLogger.sqlite.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1EE43D660, (void **)&qword_1EE440F10, a1);
}

id static OSLogger.localization.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1ECEAFFE8, (void **)&qword_1ECEAFFE0, a1);
}

uint64_t sub_19CECCA84()
{
  uint64_t result;
  uint64_t v1[7];

  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[2] = (uint64_t)sub_19CD1462C(v1, 0x617A696C61636F4CLL, 0xEC0000006E6F6974);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CE10);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE43B628 = result;
  return result;
}

uint64_t static OSLogger.$_localization.getter()
{
  return sub_19CECD034(&qword_1EE43B620);
}

id sub_19CECCB74()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x746E6F43776F6C46, 0xEB000000006C6F72);
  qword_1EE440F18 = (uint64_t)result;
  return result;
}

id static OSLogger.flowControl.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1EE43D668, (void **)&qword_1EE440F18, a1);
}

uint64_t sub_19CECCC28()
{
  uint64_t result;
  uint64_t v1[7];

  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[2] = (uint64_t)sub_19CD1462C(v1, 0x746E6F43776F6C46, 0xEB000000006C6F72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CE10);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE440F20 = result;
  return result;
}

uint64_t static OSLogger.$_flowControl.getter()
{
  return sub_19CECD034(&qword_1EE43D670);
}

uint64_t static OSLogger._flowControl.getter()
{
  return sub_19CECCD34(&qword_1EE43D670);
}

uint64_t sub_19CECCD34(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return sub_19CFE0A6C();
}

id sub_19CECCD78()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x6E65726566657250, 0xEB00000000736563);
  qword_1EE440F28 = (uint64_t)result;
  return result;
}

id static OSLogger.preferences.getter@<X0>(void **a1@<X8>)
{
  return sub_19CECCE2C(&qword_1EE43D678, (void **)&qword_1EE440F28, a1);
}

id sub_19CECCE2C@<X0>(_QWORD *a1@<X0>, void **a2@<X1>, void **a3@<X8>)
{
  void *v5;

  if (*a1 != -1)
    swift_once();
  v5 = *a2;
  *a3 = *a2;
  return v5;
}

uint64_t sub_19CECCE6C()
{
  uint64_t result;
  uint64_t v1[7];

  v1[5] = (uint64_t)&type metadata for OSLogger;
  v1[6] = (uint64_t)&protocol witness table for OSLogger;
  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[2] = (uint64_t)sub_19CD1462C(v1, 0xD000000000000013, 0x800000019D074780);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CE10);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE440F30 = result;
  return result;
}

uint64_t static OSLogger.$networkReachability.getter()
{
  return sub_19CECD034(&qword_1EE43D680);
}

uint64_t sub_19CECCF58()
{
  uint64_t result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  v1[0] = (uint64_t)sub_19CD1462C(v1, 0xD000000000000012, 0x800000019D074760);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F48);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE440F38 = result;
  return result;
}

uint64_t static OSLogger.$contentUnavailable.getter()
{
  return sub_19CECD034(&qword_1EE43D688);
}

uint64_t sub_19CECD034(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static OSLogger.contentUnavailable.getter()
{
  if (qword_1EE43D688 != -1)
    swift_once();
  return sub_19CFE0A6C();
}

id OSLogger._osLog.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_19CECD0C8()
{
  return swift_deallocObject();
}

unint64_t sub_19CECD0DC()
{
  unint64_t result;

  result = qword_1EE440F40;
  if (!qword_1EE440F40)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for OSLogger.Subsystem, &type metadata for OSLogger.Subsystem);
    atomic_store(result, (unint64_t *)&qword_1EE440F40);
  }
  return result;
}

uint64_t sub_19CECD120(uint64_t a1, uint64_t a2)
{
  sub_19CCF44B4(&qword_1ECEB0B38, a2, (uint64_t (*)(uint64_t))type metadata accessor for _DispatchQueueExecutor, (uint64_t)&unk_19D05DEF8);
  return sub_19CFDF9BC();
}

uint64_t sub_19CECD170()
{
  return sub_19CFDFAD0();
}

void sub_19CECD178()
{
  JUMPOUT(0x1A1AD9CE8);
}

uint64_t sub_19CECD180()
{
  return sub_19CFDF9B0();
}

uint64_t sub_19CECD188()
{
  return swift_deallocObject();
}

uint64_t ReplayLogger.Record.messages.getter()
{
  return swift_bridgeObjectRetain();
}

void ReplayLogger.Record.level.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t ReplayLogger.__allocating_init()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v0 = swift_allocObject();
  v1 = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t ReplayLogger.snapshot(limitedTo:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  v4 = (uint64_t *)(v1 + 24);
  if (a1 < 1)
  {
    swift_beginAccess();
    v10 = *v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_beginAccess();
    v5 = *v4;
    v6 = *(_QWORD *)(v5 + 16);
    if (v6 >= a1)
      v7 = v6 - a1;
    else
      v7 = 0;
    sub_19CFE0754();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v8 = swift_dynamicCastClass();
    if (!v8)
    {
      swift_unknownObjectRelease();
      v8 = MEMORY[0x1E0DEE9D8];
    }
    v9 = *(_QWORD *)(v8 + 16);
    swift_release();
    if (v9 == v6 - v7)
    {
      v10 = swift_dynamicCastClass();
      if (!v10)
      {
        swift_unknownObjectRelease();
        v10 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      swift_unknownObjectRelease();
      v10 = sub_19CDFE404(v5, v5 + 32, v7, (2 * v6) | 1);
    }
    swift_unknownObjectRelease();
  }
  objc_msgSend(v3, sel_unlock);
  return v10;
}

Swift::Bool __swiftcall ReplayLogger.hasEmitted(messageMatching:withLevel:)(Swift::String messageMatching, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *i;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  os_unfair_lock_s *v14;
  int v15;
  char has_internal_content;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  _QWORD v23[4];

  object = messageMatching._object;
  countAndFlagsBits = messageMatching._countAndFlagsBits;
  v5 = *(unsigned __int8 *)withLevel;
  v6 = *(void **)(v2 + 16);
  objc_msgSend(v6, sel_lock);
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  objc_msgSend(v6, sel_unlock);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    for (i = (unsigned __int8 *)(v7 + 40); ; i += 16)
    {
      if (*i == v5)
      {
        v11 = *((_QWORD *)i - 1);
        v12 = qword_1ECEB1958;
        swift_bridgeObjectRetain();
        if (v12 != -1)
          swift_once();
        v13 = (char *)off_1ECEB1948 + 16;
        v14 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
        swift_retain();
        os_unfair_lock_lock(v14);
        sub_19CD3EA18(v13, v23);
        os_unfair_lock_unlock(v14);
        v15 = LOBYTE(v23[0]);
        swift_release();
        if (v15 == 2)
          has_internal_content = os_variant_has_internal_content();
        else
          has_internal_content = v15 & 1;
        v17 = has_internal_content ^ 1;
        v18 = swift_allocObject();
        *(_BYTE *)(v18 + 16) = v17;
        v23[0] = v11;
        v23[1] = sub_19CCBDD10;
        v23[2] = v18;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3310);
        sub_19CD420CC();
        v19 = sub_19CFDF4F4();
        v21 = v20;
        swift_release();
        swift_bridgeObjectRelease();
        if (v19 == countAndFlagsBits && v21 == object)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        v10 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0)
          break;
      }
      if (!--v8)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

Swift::Void __swiftcall ReplayLogger.reset()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_unlock);
}

Swift::Void __swiftcall ReplayLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v2;
  char v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v4 = *(_BYTE *)withLevel;
  v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  v6 = (_QWORD *)(v2 + 24);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 24);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_19CED4D14(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_19CED4D14((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = contentsOf._rawValue;
  *((_BYTE *)v11 + 40) = v4;
  swift_endAccess();
  objc_msgSend(v5, sel_unlock);
}

uint64_t ReplayLogger.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void sub_19CECD758(Swift::OpaquePointer a1, JetEngine::LogMessageLevel a2)
{
  ReplayLogger.log(contentsOf:withLevel:)(a1, a2);
}

uint64_t sub_19CECD778()
{
  return swift_deallocObject();
}

uint64_t method lookup function for ReplayLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReplayLogger.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t initializeBufferWithCopyOfBuffer for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ReplayLogger.Record(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ReplayLogger.Record()
{
  return &type metadata for ReplayLogger.Record;
}

uint64_t dispatch thunk of StateCenterTransaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of StateCenterTransaction.removeState(at:recursively:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StateCenterTransaction.removeAllState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of StateCenter.currentState<A>(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of StateCenter.beginTransaction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of StateCenter.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t SentryConfiguration.eventRecorder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

uint64_t SentryConfiguration.projectName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.javascriptVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SentryConfiguration.environment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SentryConfiguration.environment.modify())()
{
  return nullsub_1;
}

uint64_t SentryConfiguration.tags.getter()
{
  return swift_bridgeObjectRetain();
}

id sub_19CECD974(void *a1)
{
  objc_msgSend(a1, sel_setAnonymous_, 1);
  return a1;
}

uint64_t *assignWithCopy for SentryConfiguration(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SentryConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

void destroy for AppleServicesLocalizationLiveUpdateService(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_release();
}

uint64_t initializeWithCopy for AppleServicesLocalizationLiveUpdateService(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  swift_unknownObjectRetain();
  v6 = v4;
  swift_retain();
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for AppleServicesLocalizationLiveUpdateService(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  v8 = (void *)a2[4];
  v9 = (void *)a1[4];
  a1[4] = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for AppleServicesLocalizationLiveUpdateService(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for Dependency(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService;
}

uint64_t sub_19CECDCC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_19CE809FC(*a1, *a2);
}

uint64_t sub_19CECDCCC()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CECDD64()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CECDDD8()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CECDE6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CED1910();
  *a1 = result;
  return result;
}

void sub_19CECDE98(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x646E616D65446E6FLL;
  if (v2 != 1)
  {
    v5 = 0x74726174536E6FLL;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

_BYTE *sub_19CECDEF0@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *result;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x646E616D65446E6FLL;
  if (v2 != 1)
  {
    v5 = 0x74726174536E6FLL;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*result)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  a2[3] = MEMORY[0x1E0DEA968];
  *a2 = v7;
  a2[1] = v3;
  return result;
}

uint64_t sub_19CECDF54@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _BYTE v4[32];

  sub_19CD436B0(a1, (uint64_t)v4);
  if (swift_dynamicCast())
    result = sub_19CED1910();
  else
    result = 3;
  *a2 = result;
  return result;
}

id sub_19CECDFBC()
{
  if (qword_1ECEAFFE8 != -1)
    swift_once();
  qword_1EE440F50 = qword_1ECEAFFE0;
  return (id)qword_1ECEAFFE0;
}

uint64_t sub_19CECE004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  id v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  Swift::String v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  void *v38;
  uint64_t v39;
  id v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[32];
  __int128 v46;
  __int128 v47;
  char v48;
  _QWORD v49[3];
  ValueMetadata *v50;
  _QWORD *v51;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v43 = 0xD000000000000014;
  *((_QWORD *)&v43 + 1) = 0x800000019D074980;
  Preferences.subscript.getter((uint64_t *)&v43, ObjectType, MEMORY[0x1E0DEA968], v8, (uint64_t)&v46);
  if (*((_QWORD *)&v46 + 1))
    v10 = v46;
  else
    v10 = 0xD00000000000004CLL;
  if (*((_QWORD *)&v46 + 1))
    v11 = *((_QWORD *)&v46 + 1);
  else
    v11 = 0x800000019D0749A0;
  sub_19CFDEDA4();
  v12 = sub_19CFDEDE0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    v42 = a1;
    sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB3030);
    if (qword_1EE43D690 != -1)
      swift_once();
    v14 = (void *)qword_1EE440F50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D052350;
    v41 = v14;
    v51 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    v17 = *(void **)(v2 + 16);
    v18 = *(void **)(v2 + 32);
    v50 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v19 = swift_allocObject();
    v49[0] = v19;
    v20 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v19 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v2 + 32);
    sub_19CD40794((uint64_t)v49, (uint64_t)v45);
    v43 = 0u;
    v44 = 0u;
    swift_unknownObjectRetain();
    v21 = v17;
    swift_retain();
    v22 = v18;
    sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
    v48 = 2;
    v46 = v43;
    v47 = v44;
    v23 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
    v25 = v23[2];
    v24 = v23[3];
    a1 = v42;
    if (v25 >= v24 >> 1)
      v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v23[2] = v25 + 1;
    v26 = &v23[5 * v25];
    v27 = v46;
    v28 = v47;
    *((_BYTE *)v26 + 64) = v48;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    v51 = v23;
    sub_19CCECFE4((uint64_t)v49, &qword_1ECEB3370);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(_QWORD *)(v15 + 32) = v51;
    v51 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v30._countAndFlagsBits = 0xD000000000000021;
    v30._object = (void *)0x800000019D0749F0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    v50 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v49[0] = v10;
    v49[1] = v11;
    sub_19CD40794((uint64_t)v49, (uint64_t)v45);
    v43 = 0u;
    v44 = 0u;
    sub_19CD40658((uint64_t)v45, (uint64_t)&v43);
    v48 = 2;
    v46 = v43;
    v47 = v44;
    v31 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v31[2] = v33 + 1;
    v34 = &v31[5 * v33];
    v35 = v46;
    v36 = v47;
    *((_BYTE *)v34 + 64) = v48;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    v51 = v31;
    sub_19CCECFE4((uint64_t)v49, &qword_1ECEB3370);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(_QWORD *)(v15 + 40) = v51;
    v38 = v41;
    *(_QWORD *)&v46 = v41;
    LOBYTE(v43) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v43);

    swift_bridgeObjectRelease();
    v39 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v7, v12);
    v39 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v39, 1, v12);
}

uint64_t sub_19CECE494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;
  void *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  void *v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  Swift::String v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  char v35;
  _QWORD v36[3];
  ValueMetadata *v37;
  _QWORD *v38;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v33 = 0xD00000000000001ELL;
  *((_QWORD *)&v33 + 1) = 0x800000019D074A20;
  Preferences.subscript.getter((uint64_t)&v33, ObjectType, (uint64_t)&type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey, v2, (uint64_t)&off_1EE439550, (uint64_t)&v30);
  result = v30;
  if (v30 == 3)
  {
    if (qword_1EE43D690 != -1)
      swift_once();
    v5 = (void *)qword_1EE440F50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19D052350;
    v7 = v5;
    v38 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    v9 = *(void **)(v1 + 16);
    v10 = *(void **)(v1 + 32);
    v37 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v11 = swift_allocObject();
    v36[0] = v11;
    v12 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 48) = *(_QWORD *)(v1 + 32);
    sub_19CD40794((uint64_t)v36, (uint64_t)v32);
    v30 = 0u;
    v31 = 0u;
    swift_unknownObjectRetain();
    v13 = v9;
    swift_retain();
    v14 = v10;
    sub_19CD40658((uint64_t)v32, (uint64_t)&v30);
    v35 = 2;
    v33 = v30;
    v34 = v31;
    v15 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v33;
    v20 = v34;
    *((_BYTE *)v18 + 64) = v35;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v38 = v15;
    sub_19CCECFE4((uint64_t)v36, &qword_1ECEB3370);
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v6 + 32) = v38;
    v38 = sub_19CD40918(0, 56, 0, MEMORY[0x1E0DEE9D8]);
    v22._countAndFlagsBits = 0xD000000000000030;
    v22._object = (void *)0x800000019D074A40;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    v37 = &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
    LOBYTE(v36[0]) = 2;
    sub_19CD40794((uint64_t)v36, (uint64_t)v32);
    v30 = 0u;
    v31 = 0u;
    sub_19CD40658((uint64_t)v32, (uint64_t)&v30);
    v35 = 2;
    v33 = v30;
    v34 = v31;
    v23 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
    v25 = v23[2];
    v24 = v23[3];
    if (v25 >= v24 >> 1)
      v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v23[2] = v25 + 1;
    v26 = &v23[5 * v25];
    v27 = v33;
    v28 = v34;
    *((_BYTE *)v26 + 64) = v35;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    v38 = v23;
    sub_19CCECFE4((uint64_t)v36, &qword_1ECEB3370);
    v29._countAndFlagsBits = 0x7963696C6F7020;
    v29._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(_QWORD *)(v6 + 40) = v38;
    *(_QWORD *)&v33 = v7;
    LOBYTE(v30) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v30);

    swift_bridgeObjectRelease();
    return 2;
  }
  return result;
}

uint64_t sub_19CECE834(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  id v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  Swift::String v29;
  char v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  void *v38;
  Swift::String v39;
  void *v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  id v44;
  id v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  Swift::String v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _BYTE v72[32];
  _QWORD *v73;

  v4 = v3;
  if (sub_19CECE494() == 2)
  {
    sub_19CCD5B84((uint64_t)a1, (uint64_t)&v67);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F68);
    if (swift_dynamicCast())
    {
      sub_19CCD14C4(&v64, (uint64_t)&v69);
      v8 = *((_QWORD *)&v70 + 1);
      v9 = v71;
      __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      sub_19CECEF88(v10, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
    }
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
    sub_19CCECFE4((uint64_t)&v64, &qword_1EE440F70);
    if (qword_1EE43D690 != -1)
      swift_once();
    v38 = (void *)qword_1EE440F50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D052350;
    v14 = v38;
    v73 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    v40 = *(void **)(v4 + 16);
    v41 = *(void **)(v4 + 32);
    *((_QWORD *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v42 = swift_allocObject();
    *(_QWORD *)&v64 = v42;
    v43 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v42 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 48) = *(_QWORD *)(v4 + 32);
    sub_19CD40794((uint64_t)&v64, (uint64_t)v72);
    v67 = 0u;
    v68 = 0u;
    swift_unknownObjectRetain();
    v44 = v40;
    swift_retain();
    v45 = v41;
    sub_19CD40658((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    v69 = v67;
    v70 = v68;
    v46 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v46 = sub_19CD40918(0, v46[2] + 1, 1, v46);
    v48 = v46[2];
    v47 = v46[3];
    if (v48 >= v47 >> 1)
      v46 = sub_19CD40918((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
    v46[2] = v48 + 1;
    v49 = &v46[5 * v48];
    v50 = v69;
    v51 = v70;
    *((_BYTE *)v49 + 64) = v71;
    *((_OWORD *)v49 + 2) = v50;
    *((_OWORD *)v49 + 3) = v51;
    v73 = v46;
    sub_19CCECFE4((uint64_t)&v64, &qword_1ECEB3370);
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    *(_QWORD *)(v13 + 32) = v73;
    v73 = sub_19CD40918(0, 74, 0, MEMORY[0x1E0DEE9D8]);
    v53._countAndFlagsBits = 543516756;
    v53._object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    v54 = a1[3];
    v55 = __swift_project_boxed_opaque_existential_1(a1, v54);
    *((_QWORD *)&v65 + 1) = v54;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v64);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(boxed_opaque_existential_2Tm, v55, v54);
    sub_19CD40794((uint64_t)&v64, (uint64_t)v72);
    v67 = 0u;
    v68 = 0u;
    sub_19CD40658((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    v69 = v67;
    v70 = v68;
    v57 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v57 = sub_19CD40918(0, v57[2] + 1, 1, v57);
    v59 = v57[2];
    v58 = v57[3];
    if (v59 >= v58 >> 1)
      v57 = sub_19CD40918((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
    v57[2] = v59 + 1;
    v60 = &v57[5 * v59];
    v61 = v69;
    v62 = v70;
    *((_BYTE *)v60 + 64) = v71;
    *((_OWORD *)v60 + 2) = v61;
    *((_OWORD *)v60 + 3) = v62;
    v73 = v57;
    sub_19CCECFE4((uint64_t)&v64, &qword_1ECEB3370);
    v63._countAndFlagsBits = 0xD000000000000045;
    v63._object = (void *)0x800000019D074AF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    *(_QWORD *)(v13 + 40) = v73;
    *(_QWORD *)&v69 = v14;
    LOBYTE(v67) = 0;
  }
  else
  {
    if (qword_1EE43D690 != -1)
      swift_once();
    v12 = (void *)qword_1EE440F50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D052350;
    v14 = v12;
    v73 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v16 = *(void **)(v4 + 16);
    v17 = *(void **)(v4 + 32);
    *((_QWORD *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v18 = swift_allocObject();
    *(_QWORD *)&v64 = v18;
    v19 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 48) = *(_QWORD *)(v4 + 32);
    sub_19CD40794((uint64_t)&v64, (uint64_t)v72);
    v67 = 0u;
    v68 = 0u;
    swift_unknownObjectRetain();
    v20 = v16;
    swift_retain();
    v21 = v17;
    sub_19CD40658((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    v69 = v67;
    v70 = v68;
    v22 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
    v24 = v22[2];
    v23 = v22[3];
    if (v24 >= v23 >> 1)
      v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v22[2] = v24 + 1;
    v25 = &v22[5 * v24];
    v26 = v69;
    v27 = v70;
    *((_BYTE *)v25 + 64) = v71;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    v73 = v22;
    sub_19CCECFE4((uint64_t)&v64, &qword_1ECEB3370);
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(_QWORD *)(v13 + 32) = v73;
    v73 = sub_19CD40918(0, 48, 0, MEMORY[0x1E0DEE9D8]);
    v29._object = (void *)0x800000019D074AC0;
    v29._countAndFlagsBits = 0xD000000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    v30 = sub_19CECE494();
    *((_QWORD *)&v65 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
    LOBYTE(v64) = v30;
    sub_19CD40794((uint64_t)&v64, (uint64_t)v72);
    v67 = 0u;
    v68 = 0u;
    sub_19CD40658((uint64_t)v72, (uint64_t)&v67);
    LOBYTE(v71) = 2;
    v69 = v67;
    v70 = v68;
    v31 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v31[2] = v33 + 1;
    v34 = &v31[5 * v33];
    v35 = v69;
    v36 = v70;
    *((_BYTE *)v34 + 64) = v71;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    v73 = v31;
    sub_19CCECFE4((uint64_t)&v64, &qword_1ECEB3370);
    v37._countAndFlagsBits = 0x676E696863616320;
    v37._object = (void *)0xEF7963696C6F7020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(_QWORD *)(v13 + 40) = v73;
    *(_QWORD *)&v69 = v14;
    LOBYTE(v67) = 2;
  }
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v67);

  return swift_bridgeObjectRelease();
}

unint64_t sub_19CECEF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  __int128 v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  __int128 v51;
  __int128 v52;
  Swift::String v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  Swift::String v62;
  uint64_t ObjectType;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  __int128 v70;
  __int128 v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  __int128 v79;
  __int128 v80;
  Swift::String v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  NSObject *v98;
  void *v99;
  _QWORD *v100;
  uint64_t v101;
  __int128 v102;
  void *v103;
  id v104;
  _QWORD *v105;
  NSObject *v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  id v113;
  Swift::String v114;
  uint64_t v115;
  __int128 v116;
  id v117;
  id v118;
  _QWORD *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  __int128 v124;
  __int128 v125;
  Swift::String v126;
  Swift::String v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  _QWORD *v133;
  __int128 v134;
  __int128 v135;
  Swift::String v136;
  _QWORD *v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  __int128 v141;
  __int128 v142;
  Swift::String v143;
  _QWORD *v144;
  uint64_t v145;
  void *v146;
  void *v147;
  void *v148;
  uint64_t v149;
  id v150;
  Swift::String v151;
  uint64_t v152;
  __int128 v153;
  id v154;
  id v155;
  _QWORD *v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  __int128 v161;
  __int128 v162;
  Swift::String v163;
  Swift::String v164;
  uint64_t v165;
  ValueMetadata *v166;
  uint64_t *v167;
  _QWORD *v168;
  unint64_t v169;
  unint64_t v170;
  _QWORD *v171;
  __int128 v172;
  __int128 v173;
  Swift::String v174;
  _QWORD v176[2];
  id v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  id v182;
  id v183;
  id v184;
  __int128 v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  ValueMetadata *v199;
  _QWORD *v200;
  __int128 aBlock;
  __int128 v202;
  void (*v203)();
  uint64_t v204;
  __int128 v205;
  __int128 v206;
  char v207[8];
  uint64_t v208;
  uint64_t v209;
  ValueMetadata *v210;
  uint64_t v211;

  v4 = v3;
  v196 = a3;
  v195 = a2;
  v194 = a1;
  v211 = *MEMORY[0x1E0C80C00];
  v5 = sub_19CFDF2D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v176 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_19CFDF308();
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x1E0C80A78](v189, v10);
  v187 = (char *)v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19CFDEDE0();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)v176 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)v176 - v23;
  sub_19CECE004((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_19CCECFE4((uint64_t)v15, (uint64_t *)&unk_1ECEB3030);
    return sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v178 = v9;
    v179 = v6;
    v180 = v5;
    v191 = v17;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
    if (qword_1EE43D690 != -1)
      swift_once();
    v26 = (void *)qword_1EE440F50;
    v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v27 = swift_allocObject();
    v185 = xmmword_19D052350;
    *(_OWORD *)(v27 + 16) = xmmword_19D052350;
    v182 = v26;
    v200 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    v29 = *v4;
    v181 = (_QWORD *)v4[1];
    v30 = (void *)v4[2];
    v31 = v4[3];
    v32 = (void *)v4[4];
    v210 = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v33 = swift_allocObject();
    v208 = v33;
    v34 = *((_OWORD *)v4 + 1);
    *(_OWORD *)(v33 + 16) = *(_OWORD *)v4;
    *(_OWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 48) = v4[4];
    sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
    v205 = 0u;
    v206 = 0u;
    swift_unknownObjectRetain();
    v183 = v30;
    v190 = v31;
    swift_retain();
    v184 = v32;
    sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
    LOBYTE(v203) = 2;
    aBlock = v205;
    v202 = v206;
    v35 = v200;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v193 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v35 = sub_19CD40918(0, v35[2] + 1, 1, v35);
    v38 = v35[2];
    v37 = v35[3];
    v39 = v29;
    if (v38 >= v37 >> 1)
      v35 = sub_19CD40918((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
    v35[2] = v38 + 1;
    v40 = &v35[5 * v38];
    v41 = aBlock;
    v42 = v202;
    *((_BYTE *)v40 + 64) = (_BYTE)v203;
    *((_OWORD *)v40 + 2) = v41;
    *((_OWORD *)v40 + 3) = v42;
    v200 = v35;
    sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    *(_QWORD *)(v27 + 32) = v200;
    v200 = sub_19CD40918(0, 68, 0, MEMORY[0x1E0DEE9D8]);
    v44._countAndFlagsBits = 0xD000000000000014;
    v44._object = (void *)0x800000019D074840;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    v45 = *(_QWORD *)(v194 + 16);
    v46 = MEMORY[0x1E0DEB418];
    v210 = (ValueMetadata *)MEMORY[0x1E0DEB418];
    v208 = v45;
    sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
    v205 = 0u;
    v206 = 0u;
    sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
    LOBYTE(v203) = 0;
    aBlock = v205;
    v202 = v206;
    v47 = v200;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
    v49 = v47[2];
    v48 = v47[3];
    if (v49 >= v48 >> 1)
      v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
    v47[2] = v49 + 1;
    v50 = &v47[5 * v49];
    v51 = aBlock;
    v52 = v202;
    *((_BYTE *)v50 + 64) = (_BYTE)v203;
    *((_OWORD *)v50 + 2) = v51;
    *((_OWORD *)v50 + 3) = v52;
    v200 = v47;
    sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
    v53._countAndFlagsBits = 0x6E69207379656B20;
    v53._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    v54 = MEMORY[0x1E0DEA968];
    v210 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v208 = v195;
    v209 = v196;
    sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
    v205 = 0u;
    v206 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
    LOBYTE(v203) = 0;
    aBlock = v205;
    v202 = v206;
    v55 = v200;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v192 = v16;
    if ((v56 & 1) == 0)
      v55 = sub_19CD40918(0, v55[2] + 1, 1, v55);
    v58 = v55[2];
    v57 = v55[3];
    if (v58 >= v57 >> 1)
      v55 = sub_19CD40918((_QWORD *)(v57 > 1), v58 + 1, 1, v55);
    v55[2] = v58 + 1;
    v59 = &v55[5 * v58];
    v60 = aBlock;
    v61 = v202;
    *((_BYTE *)v59 + 64) = (_BYTE)v203;
    *((_OWORD *)v59 + 2) = v60;
    *((_OWORD *)v59 + 3) = v61;
    v200 = v55;
    sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
    v62._countAndFlagsBits = 0xD000000000000011;
    v62._object = (void *)0x800000019D074860;
    LogMessage.StringInterpolation.appendLiteral(_:)(v62);
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v205 = 0xD000000000000020;
    *((_QWORD *)&v205 + 1) = 0x800000019D074810;
    Preferences.subscript.getter((uint64_t *)&v205, ObjectType, v54, (uint64_t)v181, (uint64_t)&aBlock);
    v65 = *((_QWORD *)&aBlock + 1);
    v64 = aBlock;
    if (!*((_QWORD *)&aBlock + 1))
    {
      v64 = 0;
      v65 = 0xE000000000000000;
    }
    v210 = (ValueMetadata *)v54;
    v208 = v64;
    v209 = v65;
    sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
    v205 = 0u;
    v206 = 0u;
    sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
    LOBYTE(v203) = 0;
    aBlock = v205;
    v202 = v206;
    v66 = v200;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v66 = sub_19CD40918(0, v66[2] + 1, 1, v66);
    v68 = v66[2];
    v67 = v66[3];
    if (v68 >= v67 >> 1)
      v66 = sub_19CD40918((_QWORD *)(v67 > 1), v68 + 1, 1, v66);
    v66[2] = v68 + 1;
    v69 = &v66[5 * v68];
    v70 = aBlock;
    v71 = v202;
    *((_BYTE *)v69 + 64) = (_BYTE)v203;
    *((_OWORD *)v69 + 2) = v70;
    *((_OWORD *)v69 + 3) = v71;
    v200 = v66;
    sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
    v72._countAndFlagsBits = 0xD000000000000012;
    v72._object = (void *)0x800000019D074880;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    v73 = sub_19CFDECFC();
    v210 = (ValueMetadata *)v54;
    v208 = v73;
    v209 = v74;
    sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
    v205 = 0u;
    v206 = 0u;
    sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
    LOBYTE(v203) = 2;
    aBlock = v205;
    v202 = v206;
    v75 = v200;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v75 = sub_19CD40918(0, v75[2] + 1, 1, v75);
    v77 = v75[2];
    v76 = v75[3];
    if (v77 >= v76 >> 1)
      v75 = sub_19CD40918((_QWORD *)(v76 > 1), v77 + 1, 1, v75);
    v75[2] = v77 + 1;
    v78 = &v75[5 * v77];
    v79 = aBlock;
    v80 = v202;
    *((_BYTE *)v78 + 64) = (_BYTE)v203;
    *((_OWORD *)v78 + 2) = v79;
    *((_OWORD *)v78 + 3) = v80;
    v200 = v75;
    sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
    v81._countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v81);
    *(_QWORD *)(v27 + 40) = v200;
    v82 = v182;
    *(_QWORD *)&aBlock = v182;
    LOBYTE(v205) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v205);

    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    v83 = swift_allocObject();
    *(_QWORD *)(v83 + 32) = 0x6D726F6674616C70;
    *(_QWORD *)(v83 + 40) = 0xE800000000000000;
    *(_OWORD *)(v83 + 16) = xmmword_19D055650;
    *(_QWORD *)(v83 + 48) = 0;
    *(_QWORD *)(v83 + 56) = 0xE000000000000000;
    *(_QWORD *)(v83 + 72) = v54;
    strcpy((char *)(v83 + 80), "languageCode");
    *(_BYTE *)(v83 + 93) = 0;
    *(_WORD *)(v83 + 94) = -5120;
    *(_QWORD *)(v83 + 96) = v195;
    v84 = v196;
    *(_QWORD *)(v83 + 104) = v196;
    *(_QWORD *)(v83 + 120) = v54;
    *(_QWORD *)(v83 + 128) = 0xD000000000000018;
    *(_QWORD *)(v83 + 136) = 0x800000019D0748A0;
    *(_QWORD *)(v83 + 144) = 2;
    *(_QWORD *)(v83 + 168) = v46;
    strcpy((char *)(v83 + 176), "keysWithParams");
    *(_BYTE *)(v83 + 191) = -18;
    MEMORY[0x1E0C80A78](v84, v85);
    v176[-2] = v4;
    swift_bridgeObjectRetain();
    v86 = sub_19CED1958(v194, sub_19CED1908);
    v87 = MEMORY[0x1E0DEE9E0];
    if (*(_QWORD *)(v86 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2F10);
      v88 = sub_19CFE03B8();
    }
    else
    {
      v88 = MEMORY[0x1E0DEE9E0];
    }
    *(_QWORD *)&aBlock = v88;
    v89 = swift_bridgeObjectRetain();
    sub_19CCF888C(v89, 1, &aBlock);
    swift_bridgeObjectRelease();
    v90 = aBlock;
    *(_QWORD *)(v83 + 216) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    *(_QWORD *)(v83 + 192) = v90;
    sub_19CD30650(v83);
    v91 = (void *)objc_opt_self();
    v92 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0;
    v93 = objc_msgSend(v91, sel_dataWithJSONObject_options_error_, v92, 4, &aBlock);

    v94 = (id)aBlock;
    if (v93)
    {
      v95 = sub_19CFDEE70();
      v97 = v96;

      sub_19CD3BE5C(v95, v97);
      v98 = dispatch_group_create();
      dispatch_group_enter(v98);
      sub_19CFDE90C();
      v99 = (void *)swift_allocBox();
      (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v21, v193, v192);
      sub_19CFDE8DC();
      sub_19CFDE888();
      sub_19CFDE900();
      sub_19CFDE900();
      v194 = v95;
      v182 = (id)v97;
      sub_19CFDE8F4();
      v100 = (_QWORD *)swift_allocObject();
      v100[2] = v87;
      v181 = v100 + 2;
      v101 = swift_allocObject();
      v102 = *((_OWORD *)v4 + 1);
      *(_OWORD *)(v101 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v101 + 32) = v102;
      *(_QWORD *)(v101 + 48) = v4[4];
      *(_QWORD *)(v101 + 56) = v99;
      *(_QWORD *)(v101 + 64) = v98;
      *(_QWORD *)(v101 + 72) = v100;
      v203 = sub_19CED1B0C;
      v204 = v101;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v202 = sub_19CD0C78C;
      *((_QWORD *)&v202 + 1) = &block_descriptor_23;
      v103 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      v177 = v183;
      v176[1] = v39;
      swift_retain();
      v104 = v184;
      v184 = v99;
      swift_retain();
      v105 = v4;
      v106 = v98;
      v183 = v100;
      swift_retain();
      v107 = v187;
      sub_19CFDF2F0();
      v108 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v205 = MEMORY[0x1E0DEE9D8];
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD3DE28();
      v109 = v178;
      v110 = v180;
      sub_19CFE0070();
      MEMORY[0x1A1AD9FF4](0, v107, v109, v103);
      _Block_release(v103);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v109, v110);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v107, v189);
      swift_release();
      sub_19CFDFD64();
      v111 = (void *)qword_1EE440F50;
      v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = v185;
      v113 = v111;
      v200 = sub_19CD40918(0, 1, 0, v108);
      v114._countAndFlagsBits = 0;
      v114._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v114);
      v210 = &type metadata for AppleServicesLocalizationLiveUpdateService;
      v115 = swift_allocObject();
      v208 = v115;
      v116 = *((_OWORD *)v105 + 1);
      *(_OWORD *)(v115 + 16) = *(_OWORD *)v105;
      *(_OWORD *)(v115 + 32) = v116;
      *(_QWORD *)(v115 + 48) = v105[4];
      sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
      v205 = 0u;
      v206 = 0u;
      swift_unknownObjectRetain();
      v117 = v177;
      swift_retain();
      v118 = v104;
      sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
      LOBYTE(v203) = 2;
      aBlock = v205;
      v202 = v206;
      v119 = v200;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v119 = sub_19CD40918(0, v119[2] + 1, 1, v119);
      v121 = v119[2];
      v120 = v119[3];
      v122 = v192;
      if (v121 >= v120 >> 1)
        v119 = sub_19CD40918((_QWORD *)(v120 > 1), v121 + 1, 1, v119);
      v119[2] = v121 + 1;
      v123 = &v119[5 * v121];
      v124 = aBlock;
      v125 = v202;
      *((_BYTE *)v123 + 64) = (_BYTE)v203;
      *((_OWORD *)v123 + 2) = v124;
      *((_OWORD *)v123 + 3) = v125;
      v200 = v119;
      sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
      v126._countAndFlagsBits = 0;
      v126._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v126);
      *(_QWORD *)(v112 + 32) = v200;
      v197 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
      v127._countAndFlagsBits = 0xD000000000000014;
      v127._object = (void *)0x800000019D074910;
      LogMessage.StringInterpolation.appendLiteral(_:)(v127);
      v128 = (uint64_t)v181;
      swift_beginAccess();
      v129 = *(_QWORD *)(*(_QWORD *)v128 + 16);
      v210 = (ValueMetadata *)MEMORY[0x1E0DEB418];
      v208 = v129;
      sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
      v205 = 0u;
      v206 = 0u;
      sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
      LOBYTE(v203) = 0;
      aBlock = v205;
      v202 = v206;
      v130 = v197;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v130 = sub_19CD40918(0, v130[2] + 1, 1, v130);
      v132 = v130[2];
      v131 = v130[3];
      if (v132 >= v131 >> 1)
        v130 = sub_19CD40918((_QWORD *)(v131 > 1), v132 + 1, 1, v130);
      v130[2] = v132 + 1;
      v133 = &v130[5 * v132];
      v134 = aBlock;
      v135 = v202;
      *((_BYTE *)v133 + 64) = (_BYTE)v203;
      *((_OWORD *)v133 + 2) = v134;
      *((_OWORD *)v133 + 3) = v135;
      v197 = v130;
      sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
      v136._countAndFlagsBits = 0x73676E6972747320;
      v136._object = (void *)0xED000020726F6620;
      LogMessage.StringInterpolation.appendLiteral(_:)(v136);
      v210 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      v208 = v195;
      v209 = v196;
      sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
      v205 = 0u;
      v206 = 0u;
      swift_bridgeObjectRetain();
      sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
      LOBYTE(v203) = 0;
      aBlock = v205;
      v202 = v206;
      v137 = v197;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v137 = sub_19CD40918(0, v137[2] + 1, 1, v137);
      v139 = v137[2];
      v138 = v137[3];
      if (v139 >= v138 >> 1)
        v137 = sub_19CD40918((_QWORD *)(v138 > 1), v139 + 1, 1, v137);
      v137[2] = v139 + 1;
      v140 = &v137[5 * v139];
      v141 = aBlock;
      v142 = v202;
      *((_BYTE *)v140 + 64) = (_BYTE)v203;
      *((_OWORD *)v140 + 2) = v141;
      *((_OWORD *)v140 + 3) = v142;
      v197 = v137;
      sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
      v143._countAndFlagsBits = 0;
      v143._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v143);
      *(_QWORD *)(v112 + 40) = v197;
      *(_QWORD *)&aBlock = v113;
      LOBYTE(v205) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v112, (JetEngine::LogMessageLevel)&v205);

      swift_bridgeObjectRelease();
      v144 = v183;
      v145 = swift_bridgeObjectRetain();
      sub_19CED15D0(v145, v195, v196);

      swift_bridgeObjectRelease();
      sub_19CD3BE18(v194, (unint64_t)v182);
      (*(void (**)(char *, uint64_t))(v191 + 8))(v193, v122);
      v25 = v144[2];
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
    }
    else
    {
      v146 = v94;
      v147 = (void *)sub_19CFDEC9C();

      swift_willThrow();
      v148 = (void *)qword_1EE440F50;
      v149 = swift_allocObject();
      *(_OWORD *)(v149 + 16) = v185;
      v150 = v148;
      v200 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
      v151._countAndFlagsBits = 0;
      v151._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v151);
      v210 = &type metadata for AppleServicesLocalizationLiveUpdateService;
      v152 = swift_allocObject();
      v208 = v152;
      v153 = *((_OWORD *)v4 + 1);
      *(_OWORD *)(v152 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v152 + 32) = v153;
      *(_QWORD *)(v152 + 48) = v4[4];
      sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
      v205 = 0u;
      v206 = 0u;
      swift_unknownObjectRetain();
      v154 = v183;
      swift_retain();
      v155 = v184;
      sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
      LOBYTE(v203) = 2;
      aBlock = v205;
      v202 = v206;
      v156 = v200;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v156 = sub_19CD40918(0, v156[2] + 1, 1, v156);
      v157 = v192;
      v159 = v156[2];
      v158 = v156[3];
      if (v159 >= v158 >> 1)
        v156 = sub_19CD40918((_QWORD *)(v158 > 1), v159 + 1, 1, v156);
      v156[2] = v159 + 1;
      v160 = &v156[5 * v159];
      v161 = aBlock;
      v162 = v202;
      *((_BYTE *)v160 + 64) = (_BYTE)v203;
      *((_OWORD *)v160 + 2) = v161;
      *((_OWORD *)v160 + 3) = v162;
      v200 = v156;
      sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
      v163._countAndFlagsBits = 0;
      v163._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v163);
      *(_QWORD *)(v149 + 32) = v200;
      v200 = sub_19CD40918(0, 40, 0, MEMORY[0x1E0DEE9D8]);
      v164._countAndFlagsBits = 0xD000000000000027;
      v164._object = (void *)0x800000019D0748C0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v164);
      swift_getErrorValue();
      v165 = v198;
      v166 = v199;
      v210 = v199;
      v167 = __swift_allocate_boxed_opaque_existential_2Tm(&v208);
      (*((void (**)(uint64_t *, uint64_t, ValueMetadata *))v166[-1].Description + 2))(v167, v165, v166);
      sub_19CD40794((uint64_t)&v208, (uint64_t)v207);
      v205 = 0u;
      v206 = 0u;
      sub_19CD40658((uint64_t)v207, (uint64_t)&v205);
      LOBYTE(v203) = 0;
      aBlock = v205;
      v202 = v206;
      v168 = v200;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v168 = sub_19CD40918(0, v168[2] + 1, 1, v168);
      v170 = v168[2];
      v169 = v168[3];
      if (v170 >= v169 >> 1)
        v168 = sub_19CD40918((_QWORD *)(v169 > 1), v170 + 1, 1, v168);
      v168[2] = v170 + 1;
      v171 = &v168[5 * v170];
      v172 = aBlock;
      v173 = v202;
      *((_BYTE *)v171 + 64) = (_BYTE)v203;
      *((_OWORD *)v171 + 2) = v172;
      *((_OWORD *)v171 + 3) = v173;
      v200 = v168;
      sub_19CCECFE4((uint64_t)&v208, &qword_1ECEB3370);
      v174._countAndFlagsBits = 0;
      v174._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v174);
      *(_QWORD *)(v149 + 40) = v200;
      *(_QWORD *)&aBlock = v150;
      LOBYTE(v205) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v149, (JetEngine::LogMessageLevel)&v205);

      swift_bridgeObjectRelease();
      v25 = sub_19CD2758C(MEMORY[0x1E0DEE9D8]);

      (*(void (**)(char *, uint64_t))(v191 + 8))(v193, v157);
    }
  }
  return v25;
}

uint64_t sub_19CED05C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  objc_super v26;
  uint64_t v27[2];
  uint64_t v28;
  unint64_t v29;

  if (!sub_19CECE494())
  {
    swift_bridgeObjectRelease();
    return sub_19CED07E0(a1, a2, a3, a4);
  }
  v9 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return sub_19CED07E0(a1, a2, a3, a4);
  v10 = *(_QWORD *)(v4 + 8);
  ObjectType = swift_getObjectType();
  v27[0] = 0xD000000000000020;
  v27[1] = 0x800000019D074810;
  Preferences.subscript.getter(v27, ObjectType, MEMORY[0x1E0DEA968], v10, (uint64_t)&v28);
  v12 = v28;
  if (v29)
  {
    v13 = v29;
  }
  else
  {
    v12 = 0;
    v13 = 0xE000000000000000;
  }
  v14 = *(_QWORD *)(v4 + 24);
  v28 = v12;
  v29 = v13;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  v16 = v28;
  v15 = v29;
  v17 = *(void **)(v14 + 16);
  v18 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = &v19[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
  *(_QWORD *)v20 = v16;
  *((_QWORD *)v20 + 1) = v15;
  v21 = (uint64_t *)&v19[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
  *v21 = a3;
  v21[1] = a4;
  v26.receiver = v19;
  v26.super_class = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = objc_msgSendSuper2(&v26, sel_init);
  v23 = objc_msgSend(v17, sel_objectForKey_, v22, v26.receiver, v26.super_class);
  swift_bridgeObjectRelease();

  if (!v23)
    return sub_19CED07E0(a1, a2, a3, a4);
  v24 = v23[2];
  swift_bridgeObjectRetain();
  swift_release();
  return v24;
}

uint64_t sub_19CED07E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20[2];
  uint64_t v21;
  unint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v10 = sub_19CECEF88(inited, a3, a4);
  swift_setDeallocating();
  v11 = MEMORY[0x1E0DEA968];
  swift_arrayDestroy();
  v12 = *(_QWORD *)(v4 + 8);
  ObjectType = swift_getObjectType();
  v20[0] = 0xD000000000000020;
  v20[1] = 0x800000019D074810;
  Preferences.subscript.getter(v20, ObjectType, v11, v12, (uint64_t)&v21);
  v14 = v21;
  if (v22)
  {
    v15 = v22;
  }
  else
  {
    v14 = 0;
    v15 = 0xE000000000000000;
  }
  v21 = v14;
  v22 = v15;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + 16) && (v16 = sub_19CD3FD1C(v21, v22), (v17 & 1) != 0))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_19CED0968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9[2];
  uint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(a3 + 8);
  ObjectType = swift_getObjectType();
  v9[0] = 0xD000000000000020;
  v9[1] = 0x800000019D074810;
  Preferences.subscript.getter(v9, ObjectType, MEMORY[0x1E0DEA968], v3, (uint64_t)&v10);
  v5 = v10;
  if (v11)
  {
    v6 = v11;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v10 = v5;
  v11 = v6;
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  v7 = v10;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  return v7;
}

void sub_19CED0A3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD aBlock[6];

  v7 = sub_19CFDE90C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_projectBox();
  v13 = *(void **)(a1 + 16);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v14 = (void *)sub_19CFDE8AC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v15 + 16) = a3;
  *(_OWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 56) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v15 + 64) = a4;
  aBlock[4] = sub_19CED1B68;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CE0192C;
  aBlock[3] = &block_descriptor_14_0;
  v17 = _Block_copy(aBlock);
  v18 = *(void **)(a1 + 32);
  v19 = a3;
  swift_unknownObjectRetain();
  v20 = v13;
  swift_retain();
  v21 = v18;
  swift_retain();
  swift_release();
  v22 = objc_msgSend(v20, sel_dataTaskWithRequest_completionHandler_, v14, v17);
  _Block_release(v17);

  objc_msgSend(v22, sel_resume);
}

void sub_19CED0C04(uint64_t a1, unint64_t a2, int a3, id a4, NSObject *a5, uint64_t a6, uint64_t a7)
{
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  void *v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  id v19;
  id v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  Swift::String v36;
  unint64_t v39;
  char v41;
  id v42;
  unint64_t *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  _QWORD *v51;
  void *v52;
  void *v53;
  NSObject *v54;
  void *v55;
  uint64_t v56;
  id v57;
  Swift::String v58;
  void *v59;
  void *v60;
  uint64_t v61;
  __int128 v62;
  id v63;
  id v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  __int128 v69;
  __int128 v70;
  Swift::String v71;
  Swift::String v72;
  _QWORD *v73;
  unint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  __int128 v77;
  __int128 v78;
  Swift::String v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  __int128 v83;
  __int128 v84;
  _UNKNOWN **v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;

  v93 = *MEMORY[0x1E0C80C00];
  if (!a4)
  {
    v39 = a2 >> 60;
    if (a2 >> 60 == 15)
      goto LABEL_30;
    sub_19CD61F18(a1, a2);
    sub_19CD61F18(a1, a2);
    if (qword_1EE43D1E0 != -1)
      swift_once();
    sub_19CD17ABC(qword_1EE465C90, *(uint64_t *)algn_1EE465C98);
    if ((v41 & 1) != 0)
    {
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
      v43 = (unint64_t *)&unk_1ECEB2F00;
    }
    else
    {
      if (qword_1EE43D2D8 != -1)
        swift_once();
      sub_19CD17ABC(qword_1EE465CD0, *(uint64_t *)algn_1EE465CD8);
      if ((v44 & 1) == 0)
      {
        v48 = (void *)objc_opt_self();
        v49 = (void *)sub_19CFDEE58();
        v82 = 0;
        v50 = objc_msgSend(v48, sel_JSONObjectWithData_options_error_, v49, 4, &v82);

        v51 = v82;
        if (!v50)
        {
          v52 = v51;
          v53 = (void *)sub_19CFDEC9C();

          swift_willThrow();
          sub_19CCF4A54(a1, a2);

          sub_19CCF4A54(a1, a2);
          goto LABEL_30;
        }
        sub_19CFE004C();
        swift_unknownObjectRelease();
        goto LABEL_23;
      }
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
      v43 = (unint64_t *)&qword_1ECEB1710;
    }
    v90 = sub_19CCE5204(0, v43);
    *(_QWORD *)&v89 = v42;
LABEL_23:
    sub_19CD433C0(&v89, &v91);
    *((_QWORD *)&v84 + 1) = &type metadata for FoundationValue;
    v85 = &off_1E3DCC5B0;
    *(_QWORD *)&v83 = swift_allocObject();
    sub_19CD436B0((uint64_t)&v91, v83 + 16);
    sub_19CCF4A54(a1, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
    JSONObject.dictionary.getter((uint64_t)&v86);
    sub_19CD3E3F8((uint64_t)&v83);
    v45 = *((_QWORD *)&v87 + 1);
    if (*((_QWORD *)&v87 + 1))
    {
      v46 = v88;
      __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
      v47 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v46 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], v45, v46);
      sub_19CCF4A54(a1, a2);
      sub_19CDC6248((uint64_t)&v86);
      if (v47)
      {
        swift_beginAccess();
        *(_QWORD *)(a7 + 16) = v47;
LABEL_44:
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    else
    {
      sub_19CCF4A54(a1, a2);
      sub_19CCECFE4((uint64_t)&v86, &qword_1EE43C1C8);
    }
LABEL_30:
    v80 = v39;
    v54 = a5;
    if (qword_1EE43D690 != -1)
      swift_once();
    v55 = (void *)qword_1EE440F50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_19D052350;
    v57 = v55;
    v82 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    v59 = *(void **)(a6 + 16);
    v60 = *(void **)(a6 + 32);
    *((_QWORD *)&v92 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
    v61 = swift_allocObject();
    *(_QWORD *)&v91 = v61;
    v62 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)(v61 + 16) = *(_OWORD *)a6;
    *(_OWORD *)(v61 + 32) = v62;
    *(_QWORD *)(v61 + 48) = *(_QWORD *)(a6 + 32);
    sub_19CD40794((uint64_t)&v91, (uint64_t)&v89);
    v83 = 0u;
    v84 = 0u;
    swift_unknownObjectRetain();
    v63 = v59;
    swift_retain();
    v64 = v60;
    sub_19CD40658((uint64_t)&v89, (uint64_t)&v83);
    LOBYTE(v88) = 2;
    v86 = v83;
    v87 = v84;
    v65 = v82;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v65 = sub_19CD40918(0, v65[2] + 1, 1, v65);
    v67 = v65[2];
    v66 = v65[3];
    a5 = v54;
    if (v67 >= v66 >> 1)
      v65 = sub_19CD40918((_QWORD *)(v66 > 1), v67 + 1, 1, v65);
    v65[2] = v67 + 1;
    v68 = &v65[5 * v67];
    v69 = v86;
    v70 = v87;
    *((_BYTE *)v68 + 64) = v88;
    *((_OWORD *)v68 + 2) = v69;
    *((_OWORD *)v68 + 3) = v70;
    v82 = v65;
    sub_19CCECFE4((uint64_t)&v91, &qword_1ECEB3370);
    v71._countAndFlagsBits = 0;
    v71._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v71);
    *(_QWORD *)(v56 + 32) = v82;
    v82 = sub_19CD40918(0, 47, 0, MEMORY[0x1E0DEE9D8]);
    v72._countAndFlagsBits = 0xD00000000000002ELL;
    v72._object = (void *)0x800000019D074930;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    if (v80 < 0xF)
    {
      *((_QWORD *)&v92 + 1) = MEMORY[0x1E0CB0338];
      *(_QWORD *)&v91 = a1;
      *((_QWORD *)&v91 + 1) = a2;
    }
    else
    {
      v91 = 0u;
      v92 = 0u;
    }
    sub_19CD40794((uint64_t)&v91, (uint64_t)&v89);
    v83 = 0u;
    v84 = 0u;
    sub_19CD61F18(a1, a2);
    sub_19CD40658((uint64_t)&v89, (uint64_t)&v83);
    LOBYTE(v88) = 2;
    v86 = v83;
    v87 = v84;
    v73 = v82;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v73 = sub_19CD40918(0, v73[2] + 1, 1, v73);
    v75 = v73[2];
    v74 = v73[3];
    if (v75 >= v74 >> 1)
      v73 = sub_19CD40918((_QWORD *)(v74 > 1), v75 + 1, 1, v73);
    v73[2] = v75 + 1;
    v76 = &v73[5 * v75];
    v77 = v86;
    v78 = v87;
    *((_BYTE *)v76 + 64) = v88;
    *((_OWORD *)v76 + 2) = v77;
    *((_OWORD *)v76 + 3) = v78;
    v82 = v73;
    sub_19CCECFE4((uint64_t)&v91, &qword_1ECEB3370);
    v79._countAndFlagsBits = 0;
    v79._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v79);
    *(_QWORD *)(v56 + 40) = v82;
    *(_QWORD *)&v86 = v57;
    LOBYTE(v83) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v56, (JetEngine::LogMessageLevel)&v83);

    goto LABEL_44;
  }
  v10 = a4;
  if (qword_1EE43D690 != -1)
    swift_once();
  v11 = (void *)qword_1EE440F50;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19D052350;
  v13 = v11;
  v82 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v15 = *(void **)(a6 + 16);
  v16 = *(void **)(a6 + 32);
  *((_QWORD *)&v92 + 1) = &type metadata for AppleServicesLocalizationLiveUpdateService;
  v17 = swift_allocObject();
  *(_QWORD *)&v91 = v17;
  v18 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(a6 + 32);
  sub_19CD40794((uint64_t)&v91, (uint64_t)&v89);
  v83 = 0u;
  v84 = 0u;
  swift_unknownObjectRetain();
  v19 = v15;
  swift_retain();
  v20 = v16;
  sub_19CD40658((uint64_t)&v89, (uint64_t)&v83);
  LOBYTE(v88) = 2;
  v86 = v83;
  v87 = v84;
  v21 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v82[2] + 1, 1, v82);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v24 = &v21[5 * v23];
  v25 = v86;
  v26 = v87;
  *((_BYTE *)v24 + 64) = v88;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  sub_19CCECFE4((uint64_t)&v91, &qword_1ECEB3370);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(_QWORD *)(v12 + 32) = v21;
  v82 = sub_19CD40918(0, 30, 0, MEMORY[0x1E0DEE9D8]);
  v28._object = (void *)0x800000019D074960;
  v28._countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  swift_getErrorValue();
  *((_QWORD *)&v92 + 1) = v81;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v91);
  (*(void (**)(uint64_t *))(*(_QWORD *)(v81 - 8) + 16))(boxed_opaque_existential_2Tm);
  sub_19CD40794((uint64_t)&v91, (uint64_t)&v89);
  v83 = 0u;
  v84 = 0u;
  sub_19CD40658((uint64_t)&v89, (uint64_t)&v83);
  LOBYTE(v88) = 0;
  v86 = v83;
  v87 = v84;
  v30 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_19CD40918(0, v82[2] + 1, 1, v82);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v30[2] = v32 + 1;
  v33 = &v30[5 * v32];
  v34 = v86;
  v35 = v87;
  *((_BYTE *)v33 + 64) = v88;
  *((_OWORD *)v33 + 2) = v34;
  *((_OWORD *)v33 + 3) = v35;
  v82 = v30;
  sub_19CCECFE4((uint64_t)&v91, &qword_1ECEB3370);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  *(_QWORD *)(v12 + 40) = v30;
  *(_QWORD *)&v86 = v13;
  LOBYTE(v83) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v83);
  swift_bridgeObjectRelease();

LABEL_45:
  dispatch_group_leave(a5);
}

void sub_19CED15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  char *v23;
  char *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  objc_super v33;

  if (!sub_19CECE494())
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v29 = a1 + 64;
    v6 = 1 << *(_BYTE *)(a1 + 32);
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & *(_QWORD *)(a1 + 64);
    v30 = (unint64_t)(v6 + 63) >> 6;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v8)
      {
        v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v26 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        if (v26 >= v30)
          goto LABEL_24;
        v27 = *(_QWORD *)(v29 + 8 * v26);
        ++v9;
        if (!v27)
        {
          v9 = v26 + 1;
          if (v26 + 1 >= v30)
            goto LABEL_24;
          v27 = *(_QWORD *)(v29 + 8 * v9);
          if (!v27)
          {
            v9 = v26 + 2;
            if (v26 + 2 >= v30)
              goto LABEL_24;
            v27 = *(_QWORD *)(v29 + 8 * v9);
            if (!v27)
            {
              v28 = v26 + 3;
              if (v28 >= v30)
              {
LABEL_24:
                swift_release();
                return;
              }
              v27 = *(_QWORD *)(v29 + 8 * v28);
              if (!v27)
              {
                while (1)
                {
                  v9 = v28 + 1;
                  if (__OFADD__(v28, 1))
                    break;
                  if (v9 >= v30)
                    goto LABEL_24;
                  v27 = *(_QWORD *)(v29 + 8 * v9);
                  ++v28;
                  if (v27)
                    goto LABEL_22;
                }
LABEL_27:
                __break(1u);
                return;
              }
              v9 = v28;
            }
          }
        }
LABEL_22:
        v8 = (v27 - 1) & v27;
        v11 = __clz(__rbit64(v27)) + (v9 << 6);
      }
      v12 = 16 * v11;
      v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v12);
      v14 = *v13;
      v15 = v13[1];
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v12);
      v18 = *v16;
      v17 = v16[1];
      v19 = *(void **)(*(_QWORD *)(v3 + 24) + 16);
      type metadata accessor for LocalizedStringsCache.Value();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v18;
      *(_QWORD *)(v20 + 24) = v17;
      v21 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
      v22 = (char *)objc_allocWithZone(v21);
      v23 = &v22[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
      *(_QWORD *)v23 = v14;
      *((_QWORD *)v23 + 1) = v15;
      v24 = &v22[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
      *(_QWORD *)v24 = a2;
      *((_QWORD *)v24 + 1) = a3;
      v33.receiver = v22;
      v33.super_class = v21;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v25 = objc_msgSendSuper2(&v33, sel_init);
      objc_msgSend(v19, sel_setObject_forKey_, v20, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

    }
  }
}

unint64_t sub_19CED18B0()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_19CED18CC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CED1908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19CED0968(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_19CED1910()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_19CED1958(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_19CE4A358(0, v2, 0);
    v3 = v20;
    v5 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      swift_bridgeObjectRetain();
      v8 = a2(v6, v7);
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease();
      v13 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2B88);
      v15 = *(_QWORD *)(v20 + 16);
      v14 = *(_QWORD *)(v20 + 24);
      if (v15 >= v14 >> 1)
        sub_19CE4A358(v14 > 1, v15 + 1, 1);
      v5 += 2;
      *(_QWORD *)(v20 + 16) = v15 + 1;
      v16 = v20 + 48 * v15;
      *(_QWORD *)(v16 + 32) = v8;
      *(_QWORD *)(v16 + 40) = v10;
      *(_QWORD *)(v16 + 48) = v12;
      *(_OWORD *)(v16 + 56) = v19;
      *(_QWORD *)(v16 + 72) = v13;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19CED1A94()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CED1AB8()
{
  id *v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_19CED1B0C()
{
  uint64_t v0;

  sub_19CED0A3C(v0 + 16, *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_19CED1B1C()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_19CED1B68(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v4;

  sub_19CED0C04(a1, a2, a3, a4, *(NSObject **)(v4 + 16), v4 + 24, *(_QWORD *)(v4 + 64));
}

uint64_t sub_19CED1B78()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CED1B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_19CFDFDAC();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_19CFDFD88();
  v3[8] = swift_task_alloc();
  sub_19CFDF308();
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CED1C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD **)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  sub_19CFDF2FC();
  sub_19CFDFD7C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF8D8], v3);
  v7 = sub_19CFDFDDC();
  v8 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v9 = objc_msgSend(v8, sel_defaultSessionConfiguration);
  v10 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v9);

  type metadata accessor for LocalizedStringsCache();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *v6 = v5;
  v6[1] = v4;
  v6[2] = v10;
  v6[3] = v11;
  v6[4] = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t storeEnumTagSinglePayload for AppleServicesLocalizationLiveUpdateService.CachingPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CED1E1C + 4 * byte_19D05E065[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CED1E50 + 4 * asc_19D05E060[v4]))();
}

uint64_t sub_19CED1E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED1E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CED1E60);
  return result;
}

uint64_t sub_19CED1E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CED1E74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CED1E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED1E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService.CachingPolicy()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy;
}

ValueMetadata *type metadata accessor for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey()
{
  return &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicyPreferenceKey;
}

unint64_t sub_19CED1EB0()
{
  unint64_t result;

  result = qword_1EE440F78;
  if (!qword_1EE440F78)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E194, &type metadata for AppleServicesLocalizationLiveUpdateService.CachingPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE440F78);
  }
  return result;
}

uint64_t LintedMetricsEvent.Issue.init(deserializing:using:)(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_19CD3E3F8(a1);
}

uint64_t sub_19CED1F2C()
{
  sub_19CED2040();
  return sub_19CFE0A48();
}

uint64_t sub_19CED1F54()
{
  sub_19CED2040();
  return sub_19CFE0A54();
}

uint64_t LintedMetricsEvent.Issue.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CED2040();
  sub_19CFE0A24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_19CED2040()
{
  unint64_t result;

  result = qword_1EE440F88;
  if (!qword_1EE440F88)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E42C, &type metadata for LintedMetricsEvent.Issue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440F88);
  }
  return result;
}

uint64_t LintedMetricsEvent.Issue.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19CED20A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CED2040();
  sub_19CFE0A24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_19CED216C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_19CD3E3F8(a1);
}

unint64_t static LintedMetricsEvent.empty.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_19CED21D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x736575737369;
  else
    return 0x73646C656966;
}

uint64_t sub_19CED21FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CED2B64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CED2220()
{
  sub_19CED25EC();
  return sub_19CFE0A48();
}

uint64_t sub_19CED2248()
{
  sub_19CED25EC();
  return sub_19CFE0A54();
}

uint64_t LintedMetricsEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  _BYTE v26[40];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];
  uint64_t v31;

  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440F90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_19CED25EC();
  v9 = v31;
  sub_19CFE09E8();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v24 = v7;
  v10 = v4;
  v31 = v3;
  sub_19CCD5B84((uint64_t)a1, (uint64_t)v27);
  JSONObject.init(from:)(v27, v30);
  JSONObject.subscript.getter(0x73646C656966, 0xE600000000000000, (uint64_t)v26);
  JSONObject.dictionary.getter((uint64_t)v27);
  sub_19CD3E3F8((uint64_t)v26);
  v11 = v28;
  v12 = v10;
  if (!v28)
  {
    sub_19CDEDE38((uint64_t)v27);
    goto LABEL_6;
  }
  v13 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v14 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v11, v13);
  sub_19CDC6248((uint64_t)v27);
  if (!v14)
  {
LABEL_6:
    v17 = sub_19CFE01B4();
    swift_allocError();
    v19 = v18;
    v25 = (uint64_t *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F350) + 48));
    *(_QWORD *)(v19 + 24) = &type metadata for LintedMetricsEvent.CodingKeys;
    *(_QWORD *)(v19 + 32) = v8;
    *(_BYTE *)v19 = 0;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC448], v17);
    swift_willThrow();
    sub_19CD3E3F8((uint64_t)v30);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v31);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440FA0);
  v26[0] = 1;
  sub_19CD09560(&qword_1EE440FA8, &qword_1EE440FA0, sub_19CED2630, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  swift_bridgeObjectRetain();
  v15 = v31;
  v16 = v24;
  sub_19CFE0484();
  if (v27[0])
    v21 = v27[0];
  else
    v21 = MEMORY[0x1E0DEE9D8];
  sub_19CD3E3F8((uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v15);
  v22 = v25;
  *v25 = v14;
  v22[1] = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_19CED25EC()
{
  unint64_t result;

  result = qword_1EE440F98;
  if (!qword_1EE440F98)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E3DC, &type metadata for LintedMetricsEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440F98);
  }
  return result;
}

uint64_t sub_19CED2630()
{
  return sub_19CD09560(&qword_1EE440FB0, &qword_1EE440FB8, (uint64_t (*)(void))sub_19CED2654, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CED2654()
{
  unint64_t result;

  result = qword_1EE440FC0;
  if (!qword_1EE440FC0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LintedMetricsEvent.Issue, &type metadata for LintedMetricsEvent.Issue);
    atomic_store(result, (unint64_t *)&qword_1EE440FC0);
  }
  return result;
}

uint64_t LintedMetricsEvent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[5];
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440FC8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CED25EC();
  sub_19CFE0A24();
  v13[3] = &type metadata for FoundationValue;
  v13[4] = &off_1E3DCC5B0;
  v10 = swift_allocObject();
  v13[0] = v10;
  *(_QWORD *)(v10 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  *(_QWORD *)(v10 + 16) = v9;
  v14 = 0;
  sub_19CE081CC();
  swift_bridgeObjectRetain();
  sub_19CFE0568();
  sub_19CD3E3F8((uint64_t)v13);
  if (!v2)
  {
    v13[0] = v12;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440FB8);
    sub_19CD09560(&qword_1EE440FD0, &qword_1EE440FB8, (uint64_t (*)(void))sub_19CED2888, MEMORY[0x1E0DEAF10]);
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CED2864()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_19CED2888()
{
  unint64_t result;

  result = qword_1EE440FD8;
  if (!qword_1EE440FD8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LintedMetricsEvent.Issue, &type metadata for LintedMetricsEvent.Issue);
    atomic_store(result, (unint64_t *)&qword_1EE440FD8);
  }
  return result;
}

uint64_t LintedMetricsEvent.issues.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL LintedMetricsEvent.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t sub_19CED28E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LintedMetricsEvent.init(from:)(a1, a2);
}

uint64_t sub_19CED28FC(_QWORD *a1)
{
  return LintedMetricsEvent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.Issue()
{
  return &type metadata for LintedMetricsEvent.Issue;
}

uint64_t storeEnumTagSinglePayload for LintedMetricsEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CED296C + 4 * byte_19D05E1D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CED29A0 + 4 * byte_19D05E1D0[v4]))();
}

uint64_t sub_19CED29A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED29A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CED29B0);
  return result;
}

uint64_t sub_19CED29BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CED29C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CED29C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED29D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.CodingKeys()
{
  return &type metadata for LintedMetricsEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for LintedMetricsEvent.Issue.CodingKeys()
{
  return &type metadata for LintedMetricsEvent.Issue.CodingKeys;
}

unint64_t sub_19CED2A00()
{
  unint64_t result;

  result = qword_1EE440FE0;
  if (!qword_1EE440FE0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E3B4, &type metadata for LintedMetricsEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440FE0);
  }
  return result;
}

unint64_t sub_19CED2A48()
{
  unint64_t result;

  result = qword_1EE440FE8;
  if (!qword_1EE440FE8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E324, &type metadata for LintedMetricsEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440FE8);
  }
  return result;
}

unint64_t sub_19CED2A90()
{
  unint64_t result;

  result = qword_1EE440FF0;
  if (!qword_1EE440FF0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E34C, &type metadata for LintedMetricsEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440FF0);
  }
  return result;
}

unint64_t sub_19CED2AD8()
{
  unint64_t result;

  result = qword_1EE440FF8;
  if (!qword_1EE440FF8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E2D4, &type metadata for LintedMetricsEvent.Issue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440FF8);
  }
  return result;
}

unint64_t sub_19CED2B20()
{
  unint64_t result;

  result = qword_1EE441000;
  if (!qword_1EE441000)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E2FC, &type metadata for LintedMetricsEvent.Issue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441000);
  }
  return result;
}

uint64_t sub_19CED2B64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void ScreenMetricsFieldsProvider.init()(uint64_t a1@<X8>)
{
  double MainScreenSize;
  uint64_t v3;
  uint64_t v4;
  double MainScreenScale;

  MainScreenSize = JEGestaltGetMainScreenSize();
  v4 = v3;
  MainScreenScale = JEGestaltGetMainScreenScale();
  *(_QWORD *)a1 = 0;
  *(double *)(a1 + 8) = MainScreenSize;
  *(_QWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 24) = MainScreenScale;
}

void ScreenMetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CED2C90(_QWORD *a1)
{
  return ScreenMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

uint64_t initializeWithCopy for ScreenMetricsFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ScreenMetricsFieldsProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ScreenMetricsFieldsProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenMetricsFieldsProvider(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenMetricsFieldsProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenMetricsFieldsProvider()
{
  return &type metadata for ScreenMetricsFieldsProvider;
}

unint64_t ModelMergingError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  sub_19CED2FA4(v0, (uint64_t)&v5);
  if (!v6)
    return 0xD000000000000047;
  if (v6 == 1)
    return 0xD00000000000004DLL;
  sub_19CD433C0(&v5, v4);
  sub_19CD433C0(&v7, v3);
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  v1 = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v1;
}

uint64_t sub_19CED2FA4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ModelMergingError(a2, a1);
  return a2;
}

unint64_t sub_19CED2FDC()
{
  unint64_t result;

  result = qword_1EE441008;
  if (!qword_1EE441008)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ModelMergingError, &type metadata for ModelMergingError);
    atomic_store(result, (unint64_t *)&qword_1EE441008);
  }
  return result;
}

uint64_t dispatch thunk of MergeableModel.mergingWith(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for ModelMergingError(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    v1 = result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for ModelMergingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v5 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for ModelMergingError(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      v5 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, (uint64_t)(a2 + 2));
      return a1;
    }
LABEL_7:
    v6 = *a2;
    v7 = a2[1];
    v8 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
  return a1;
}

uint64_t assignWithTake for ModelMergingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
LABEL_6:
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelMergingError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ModelMergingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_19CED32FC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_19CED3314(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelMergingError()
{
  return &type metadata for ModelMergingError;
}

JetEngine::DeResolutionNumericTreatmentFilter::Definition __swiftcall DeResolutionNumericTreatmentFilter.Definition.init(eventType:rules:)(JetEngine::MetricsEventType eventType, Swift::OpaquePointer rules)
{
  _QWORD *v2;
  uint64_t v3;
  JetEngine::DeResolutionNumericTreatmentFilter::Definition result;

  v3 = *(_QWORD *)(eventType.rawValue._countAndFlagsBits + 8);
  *v2 = *(_QWORD *)eventType.rawValue._countAndFlagsBits;
  v2[1] = v3;
  v2[2] = eventType.rawValue._object;
  result.eventType = eventType;
  result.rules = rules;
  return result;
}

JetEngine::DeResolutionNumericTreatmentFilter __swiftcall DeResolutionNumericTreatmentFilter.init(_:)(JetEngine::DeResolutionNumericTreatmentFilter result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *(_QWORD *)result.definition.eventType.rawValue._countAndFlagsBits;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(result.definition.eventType.rawValue._countAndFlagsBits + 8);
  return result;
}

JetEngine::LintedMetricsEvent __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DeResolutionNumericTreatmentFilter.treat(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  _QWORD *v2;
  unint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  unint64_t v22;
  char v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  void *v44;
  void *v45;
  JetEngine::LintedMetricsEvent result;
  unint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  id v51[4];
  __int128 v52;
  __int128 v53;

  v4 = v2;
  v6 = *(_QWORD *)_.fields._rawValue;
  v5 = *((_QWORD *)_.fields._rawValue + 1);
  if (!*(_QWORD *)(*(_QWORD *)_.fields._rawValue + 16))
    goto LABEL_40;
  v7 = *v3;
  v8 = v3[1];
  v9 = v3[2];
  v10 = sub_19CD3FD1C(0x707954746E657665, 0xE900000000000065);
  if ((v11 & 1) == 0)
    goto LABEL_40;
  v47 = v9;
  v50 = v4;
  sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v52);
  v12 = MEMORY[0x1E0DEA968];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_39:
    v4 = v50;
LABEL_40:
    *v4 = v6;
    v4[1] = v5;
    swift_bridgeObjectRetain();
LABEL_41:
    v44 = (void *)swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  v48 = v5;
  if (*(_OWORD *)v51 != __PAIR128__(v8, v7) && (sub_19CFE06A0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  *((_QWORD *)&v53 + 1) = v12;
  v52 = *(_OWORD *)v51;
  sub_19CD433C0(&v52, v51);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v51, 0x707954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  v14 = v6;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v47 + 16);
  if (!v15)
  {
    v17 = v50;
LABEL_37:
    *v17 = v14;
    v17[1] = v5;
    goto LABEL_41;
  }
  v16 = (double *)(swift_bridgeObjectRetain() + 56);
  v17 = v50;
  while (!*(_QWORD *)(v6 + 16))
  {
    v52 = 0u;
    v53 = 0u;
LABEL_9:
    sub_19CD3F190((uint64_t)&v52);
LABEL_10:
    v16 += 4;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  v18 = *((_QWORD *)v16 - 3);
  v19 = *((_QWORD *)v16 - 2);
  v21 = *(v16 - 1);
  v20 = *v16;
  swift_bridgeObjectRetain_n();
  v22 = sub_19CD3FD1C(v18, v19);
  if ((v23 & 1) != 0)
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v22, (uint64_t)&v52);
  }
  else
  {
    v52 = 0u;
    v53 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v53 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_19CD16BB8();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_34;
  v49 = v51[0];
  objc_msgSend(v51[0], sel_doubleValue);
  v25 = v24;
  v26 = NAN;
  if (v21 > 0.0 && v20 >= 0.0)
  {
    v27 = __exp10(v20);
    v26 = v27 * trunc(v25 / v21 / v27);
  }
  *((_QWORD *)&v53 + 1) = MEMORY[0x1E0DEB070];
  *(double *)&v52 = v26;
  sub_19CD433C0(&v52, v51);
  v28 = v14;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v31 = sub_19CD3FD1C(v18, v19);
  v32 = *(_QWORD *)(v28 + 16);
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (!__OFADD__(v32, v33))
  {
    v35 = v30;
    if (*(_QWORD *)(v28 + 24) >= v34)
    {
      if ((v29 & 1) != 0)
      {
        v38 = v28;
        if ((v30 & 1) == 0)
          goto LABEL_31;
      }
      else
      {
        sub_19CD141BC();
        v38 = v28;
        if ((v35 & 1) == 0)
          goto LABEL_31;
      }
    }
    else
    {
      sub_19CD13ED8(v34, v29);
      v36 = sub_19CD3FD1C(v18, v19);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_44;
      v31 = v36;
      v38 = v28;
      if ((v35 & 1) == 0)
      {
LABEL_31:
        v14 = v38;
        *(_QWORD *)(v38 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        v40 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * v31);
        *v40 = v18;
        v40[1] = v19;
        sub_19CD433C0(v51, (_OWORD *)(*(_QWORD *)(v38 + 56) + 32 * v31));
        v41 = *(_QWORD *)(v14 + 16);
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_43;
        *(_QWORD *)(v14 + 16) = v43;
        swift_bridgeObjectRetain();
LABEL_33:
        v5 = v48;
        v17 = v50;

        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    v14 = v38;
    v39 = (_OWORD *)(*(_QWORD *)(v38 + 56) + 32 * v31);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
    sub_19CD433C0(v51, v39);
    goto LABEL_33;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  v44 = (void *)sub_19CFE082C();
  __break(1u);
LABEL_45:
  result.issues._rawValue = v45;
  result.fields._rawValue = v44;
  return result;
}

void *sub_19CED37B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DeResolutionNumericTreatmentFilter.treat(_:on:)(*(JetEngine::LintedMetricsEvent *)&a1, *(Swift::String_optional *)&a3).fields._rawValue;
}

void sub_19CED37C8()
{
  qword_1EE465CB8 = 0x646E655265676170;
  unk_1EE465CC0 = 0xEA00000000007265;
  qword_1EE465CC8 = (uint64_t)&unk_1E3DD79D8;
}

ValueMetadata *type metadata accessor for DeResolutionNumericTreatmentFilter()
{
  return &type metadata for DeResolutionNumericTreatmentFilter;
}

ValueMetadata *type metadata accessor for DeResolutionNumericTreatmentFilter.Definition()
{
  return &type metadata for DeResolutionNumericTreatmentFilter.Definition;
}

void sub_19CED381C()
{
  __asm { BR              X10 }
}

uint64_t sub_19CED385C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if (BYTE6(v2) <= v3)
  {
    *(_OWORD *)(v0 + 16) = xmmword_19D05ACB0;
    sub_19CD3BE5C(v1, v2);
    sub_19CD3BE18(v1, v2);
  }
  else
  {
    if (v3 < 0)
    {
      __break(1u);
      JUMPOUT(0x19CED3968);
    }
    sub_19CD3BE5C(v1, v2);
    v4 = sub_19CFDEE94();
    sub_19CD3BE18(v1, v2);
    v5 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 24);
    sub_19CD3BE5C(v5, v6);
    v7 = sub_19CFDEEAC();
    v9 = v8;
    sub_19CD3BE18(v5, v6);
    v10 = *(_QWORD *)(v0 + 16);
    v11 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 16) = v7;
    *(_QWORD *)(v0 + 24) = v9;
    sub_19CD3BE18(v10, v11);
    return v4;
  }
  return v1;
}

uint64_t sub_19CED3978()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_19CED398C + *((int *)qword_19CED39D8 + (*(_QWORD *)(v0 + 24) >> 62))))();
}

BOOL sub_19CED399C()
{
  uint64_t v0;

  return BYTE6(v0) != 0;
}

uint64_t sub_19CED39E8()
{
  return sub_19CED3C8C();
}

uint64_t type metadata accessor for DataOutputStream()
{
  return objc_opt_self();
}

uint64_t sub_19CED3A10()
{
  swift_beginAccess();
  sub_19CFDEE88();
  return swift_endAccess();
}

uint64_t sub_19CED3A78(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_19CCC4FA0(a1, a2);
  v4 = v3;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  return sub_19CD3BE18(v2, v4);
}

void sub_19CED3AF0()
{
  __asm { BR              X10 }
}

uint64_t sub_19CED3B2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_19CD3BE5C(v1, v2);
  sub_19CFDEEB8();
  v3 = sub_19CD3BE18(v1, v2);
  return ((uint64_t (*)(uint64_t))((char *)&loc_19CED3BA0 + dword_19CED3C74[*(_QWORD *)(v0 + 24) >> 62]))(v3);
}

uint64_t sub_19CED3BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (v1 == BYTE6(v3))
  {
    *(_OWORD *)(v0 + 16) = xmmword_19D05ACB0;
    v4 = v2;
    v5 = v3;
  }
  else
  {
    sub_19CD3BE5C(v2, v3);
    v6 = sub_19CFDEEAC();
    v8 = v7;
    sub_19CD3BE18(v2, v3);
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 24) = v8;
  }
  sub_19CD3BE18(v4, v5);
  return v1;
}

uint64_t sub_19CED3C84()
{
  return sub_19CED3C8C();
}

uint64_t sub_19CED3C8C()
{
  uint64_t v0;

  sub_19CD3BE18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataInputStream()
{
  return objc_opt_self();
}

uint64_t sub_19CED3CDC()
{
  return sub_19CED3978() & 1;
}

uint64_t sub_19CED3D00()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 32);
}

void sub_19CED3D10()
{
  sub_19CED381C();
}

void sub_19CED3D30()
{
  sub_19CED3AF0();
}

uint64_t sub_19CED3D50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v5;
  const char *v6;
  uint64_t (*v7)(const char *, size_t, uint64_t);
  size_t v8;
  uint64_t result;
  uint64_t (*v10)(char *, size_t, uint64_t);
  size_t v11;
  size_t v12;
  char *v13;
  size_t v14;
  char __s[8];
  uint64_t v16;

  v5 = a3 & 1;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
    return sub_19CFE0100();
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)__s = a1;
    v16 = a2 & 0xFFFFFFFFFFFFFFLL;
    if ((a3 & 1) != 0)
      v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E0C803A8];
    else
      v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E0C80368];
    v11 = strlen(__s);
    if ((v11 & 0x8000000000000000) == 0)
    {
      v12 = v11;
      if (!HIDWORD(v11))
      {
        v13 = __s;
        return v10(v13, v12, a4);
      }
    }
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      v6 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      goto LABEL_6;
    }
    v6 = (const char *)sub_19CFE01FC();
    if (v6)
    {
LABEL_6:
      if (v5)
        v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E0C803A8];
      else
        v7 = (uint64_t (*)(const char *, size_t, uint64_t))MEMORY[0x1E0C80368];
      v8 = strlen(v6);
      if ((v8 & 0x8000000000000000) == 0 && !HIDWORD(v8))
        return v7(v6, v8, a4);
      goto LABEL_27;
    }
    if (v5)
      v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E0C803A8];
    else
      v10 = (uint64_t (*)(char *, size_t, uint64_t))MEMORY[0x1E0C80368];
    v14 = strlen(0);
    if ((v14 & 0x8000000000000000) == 0)
    {
      v12 = v14;
      if (!HIDWORD(v14))
      {
        v13 = 0;
        return v10(v13, v12, a4);
      }
    }
  }
LABEL_27:
  result = sub_19CFE0334();
  __break(1u);
  return result;
}

__n128 LogMessage.StringInterpolation.appendInterpolation(identity:)()
{
  _QWORD **v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;
  _OWORD v7[2];
  unsigned __int8 v8;

  swift_unknownObjectRetain();
  sub_19CCF4C08((uint64_t)v7);
  v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CD40918(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CD40918((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  v1[2] = v3 + 1;
  v4 = (__n128 *)&v1[5 * v3];
  result = (__n128)v7[0];
  v6 = (__n128)v7[1];
  v4[4].n128_u8[0] = v8;
  v4[2] = result;
  v4[3] = v6;
  *v0 = v1;
  return result;
}

__n128 LogMessage.StringInterpolation.appendInterpolation(traceableSensitive:)(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 result;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  _BYTE v10[32];
  __n128 v11;
  __n128 v12;
  char v13;

  sub_19CD40794(a1, (uint64_t)v10);
  v8 = 0u;
  v9 = 0u;
  sub_19CD40658((uint64_t)v10, (uint64_t)&v8);
  v13 = 2;
  v11 = v8;
  v12 = v9;
  v2 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CD40918(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_19CD40918((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = (__n128 *)&v2[5 * v4];
  result = v11;
  v7 = v12;
  v5[4].n128_u8[0] = v13;
  v5[2] = result;
  v5[3] = v7;
  *v1 = v2;
  return result;
}

BOOL static LogMessage.ValueTreatment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LogMessage.ValueTreatment.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t LogMessage.ValueTreatment.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

JetEngine::LogMessage __swiftcall LogMessage.init(_:)(JetEngine::LogMessage result)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)result.components._rawValue;
  return result;
}

_QWORD *static LogMessage.values(of:withRedaction:)(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;
  _OWORD v68[2];
  __int128 v69;
  uint64_t v70;
  unsigned __int8 v71;
  __int128 v72;
  char v73[8];
  unsigned __int8 v74;
  uint64_t v75;

  v62 = a2;
  v75 = *MEMORY[0x1E0C80C00];
  v3 = sub_19CFDEDE0();
  v53 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v7);
  v51 = *(_QWORD *)(a1 + 16);
  if (!v51)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v57 = (char *)&v49 - v9;
  v50 = a1 + 32;
  v10 = (__int128 *)((char *)&v69 + 8);
  v49 = a1;
  v58 = v8;
  swift_bridgeObjectRetain();
  v11 = 0;
  v61 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v56 = MEMORY[0x1E0DEE9B8] + 8;
  v13 = MEMORY[0x1E0DEDE70];
  v14 = MEMORY[0x1E0DEDEC8];
  v15 = v62;
  v59 = (char *)&v69 + 8;
  v65 = xmmword_19D0522A0;
  do
  {
    v16 = *(_QWORD *)(v50 + 8 * v11);
    v64 = *(_QWORD *)(v16 + 16);
    if (v64)
    {
      v55 = v11;
      v63 = v16 + 32;
      v54 = v16;
      swift_bridgeObjectRetain();
      v17 = 0;
      while (1)
      {
        sub_19CED4CBC(v63 + 40 * v17, (uint64_t)v73);
        sub_19CD40794((uint64_t)v73, (uint64_t)&v69);
        if (v70)
        {
          sub_19CD433C0(&v69, &v72);
          sub_19CED4CBC((uint64_t)v73, (uint64_t)&v69);
          if ((v15 & 1) == 0)
          {
            sub_19CED6088((uint64_t)&v69);
LABEL_19:
            sub_19CD436B0((uint64_t)&v72, (uint64_t)&v69);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v12 = sub_19CD2E740(0, v12[2] + 1, 1, v12);
            v23 = v12[2];
            v22 = v12[3];
            if (v23 >= v22 >> 1)
              v12 = sub_19CD2E740((_QWORD *)(v22 > 1), v23 + 1, 1, v12);
            v12[2] = v23 + 1;
            sub_19CD433C0(&v69, &v12[4 * v23 + 4]);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
            goto LABEL_8;
          }
          v18 = v71;
          sub_19CED6088((uint64_t)&v69);
          if (!v18)
            goto LABEL_19;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
        }
        else
        {
          sub_19CCECFE4((uint64_t)&v69, &qword_1ECEB3370);
        }
        sub_19CD40794((uint64_t)v73, (uint64_t)&v69);
        if (v70)
          break;
        sub_19CCECFE4((uint64_t)&v69, &qword_1ECEB3370);
        v20 = 0xE600000000000000;
        v21 = 0x296C6C756E28;
LABEL_35:
        v70 = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v69 = v21;
        *((_QWORD *)&v69 + 1) = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_19CD2E740(0, v12[2] + 1, 1, v12);
        v47 = v12[2];
        v46 = v12[3];
        if (v47 >= v46 >> 1)
          v12 = sub_19CD2E740((_QWORD *)(v46 > 1), v47 + 1, 1, v12);
        v12[2] = v47 + 1;
        sub_19CD433C0(&v69, &v12[4 * v47 + 4]);
LABEL_8:
        sub_19CED6088((uint64_t)v73);
        if (++v17 == v64)
        {
          swift_bridgeObjectRelease();
          v11 = v55;
          goto LABEL_4;
        }
      }
      sub_19CD433C0(&v69, &v72);
      v19 = v74;
      LOBYTE(v69) = 1;
      BYTE1(v69) = v74;
      sub_19CD436B0((uint64_t)&v72, (uint64_t)v10);
      if (v19)
      {
        if (v19 == 1)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
          v20 = 0xE90000000000005DLL;
          v21 = 0x657461766972705BLL;
        }
        else
        {
          sub_19CD433C0(v10, v68);
          sub_19CD436B0((uint64_t)v68, (uint64_t)&v66);
          v32 = sub_19CFDF5E4();
          v60 = &v49;
          MEMORY[0x1E0C80A78](v32, v33);
          v34 = v61;
          sub_19CED3D50(v35, v36, 1, (uint64_t)(&v49 - 8));
          v61 = v34;
          v66 = 0;
          v67 = 0xE000000000000000;
          MEMORY[0x1A1AD9850](128);
          v37 = 0;
          do
          {
            v38 = v37 + 1;
            v39 = *((_BYTE *)&v49 + v37 - 64);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB31D0);
            v40 = swift_allocObject();
            *(_OWORD *)(v40 + 16) = v65;
            *(_QWORD *)(v40 + 56) = v13;
            *(_QWORD *)(v40 + 64) = v14;
            *(_BYTE *)(v40 + 32) = v39;
            sub_19CFDF5A8();
            sub_19CFDF698();
            swift_bridgeObjectRelease();
            v37 = v38;
          }
          while (v38 != 64);
          v21 = v66;
          v20 = v67;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          v15 = v62;
          v10 = v59;
        }
        goto LABEL_35;
      }
      v24 = v57;
      v25 = v58;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v26 = v53;
        v27 = v52;
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v24, v25);
        v28 = (void *)sub_19CFDED2C();
        v29 = (id)AMSLogableURL();

        v21 = sub_19CFDF578();
        v20 = v30;

        v31 = v27;
        v10 = v59;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_19CD436B0((uint64_t)&v72, (uint64_t)v68);
          v21 = sub_19CFDF5E4();
          v20 = v45;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          sub_19CCECFE4((uint64_t)&v69, &qword_1ECEB32E0);
          goto LABEL_34;
        }
        v41 = *(void **)&v68[0];
        v42 = (void *)sub_19CFDEC90();
        v43 = (id)AMSLogableError();

        v21 = sub_19CFDF578();
        v20 = v44;

      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
LABEL_34:
      v15 = v62;
      goto LABEL_35;
    }
LABEL_4:
    ++v11;
  }
  while (v11 != v51);
  swift_bridgeObjectRelease();
  return v12;
}

void LogMessage.StringInterpolation.appendInterpolation(_:)()
{
  sub_19CFE0340();
  __break(1u);
}

_QWORD *sub_19CED48B0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else
  {
    result = sub_19CD40918(0, ((unint64_t)result + a2) & ~(((uint64_t)result + a2) >> 63), 0, MEMORY[0x1E0DEE9D8]);
    *a3 = result;
  }
  return result;
}

void sub_19CED48F4(Swift::String *a1)
{
  LogMessage.StringInterpolation.appendLiteral(_:)(*a1);
}

uint64_t LogMessage.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  os_unfair_lock_s *v3;
  int v4;
  char has_internal_content;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v1 = *v0;
  if (qword_1ECEB1958 != -1)
    swift_once();
  v2 = (char *)off_1ECEB1948 + 16;
  v3 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19CD3EA18(v2, v10);
  os_unfair_lock_unlock(v3);
  v4 = LOBYTE(v10[0]);
  swift_release();
  if (v4 == 2)
    has_internal_content = os_variant_has_internal_content();
  else
    has_internal_content = v4 & 1;
  v6 = has_internal_content ^ 1;
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v6;
  v10[0] = v1;
  v10[1] = sub_19CED60C8;
  v10[2] = v7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32F8);
  sub_19CD28094(&qword_1ECEB32F0, &qword_1ECEB32F8, &qword_1ECEB32A8, &qword_1ECEB32A0);
  v8 = sub_19CFDF4F4();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

double sub_19CED4A6C@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD v10[4];

  v3 = *a1;
  v4 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  v10[3] = MEMORY[0x1E0DEA968];
  v10[0] = v3;
  v10[1] = v4;
  v8 = 0u;
  v9 = 0u;
  sub_19CD40658((uint64_t)v10, (uint64_t)&v8);
  *(_BYTE *)(v5 + 64) = 0;
  result = *(double *)&v8;
  v7 = v9;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *a2 = v5;
  return result;
}

void static LogMessage.nilValueSubstitute.getter(_QWORD *a1@<X8>)
{
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0x296C6C756E28;
  a1[1] = 0xE600000000000000;
}

_OWORD *LogMessage.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *result;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_19CD40794(*(_QWORD *)v1 + 32, (uint64_t)&v4);
    if (*((_QWORD *)&v5 + 1))
    {
      sub_19CD433C0(&v4, v6);
      return sub_19CD433C0(v6, (_OWORD *)a1);
    }
  }
  else
  {
    v4 = 0u;
    v5 = 0u;
  }
  result = (_OWORD *)sub_19CCECFE4((uint64_t)&v4, &qword_1ECEB3370);
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
  *(_QWORD *)a1 = 0x296C6C756E28;
  *(_QWORD *)(a1 + 8) = 0xE600000000000000;
  return result;
}

void LogMessage.valueTreatment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    *a1 = *(_BYTE *)(*(_QWORD *)v1 + 64);
  else
    *a1 = 0;
}

Swift::String __swiftcall LogMessage.describe(withRedaction:)(Swift::Bool withRedaction)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::String result;

  *(_BYTE *)(swift_allocObject() + 16) = withRedaction;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32F8);
  sub_19CD28094(&qword_1ECEB32F0, &qword_1ECEB32F8, &qword_1ECEB32A8, &qword_1ECEB32A0);
  v1 = sub_19CFDF4F4();
  v3 = v2;
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v1;
  v5 = v3;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_19CED4CAC()
{
  return swift_deallocObject();
}

uint64_t sub_19CED4CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a1 + 24);
  if (v4)
  {
    *(_QWORD *)(a2 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v5;
  }
  *(_BYTE *)(a2 + 32) = *(_BYTE *)(a1 + 32);
  return a2;
}

_QWORD *sub_19CED4D14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7144(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED4E20(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441040);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED733C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED4F44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437500);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED7640(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED506C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE4412D0, &qword_1EE4412D8);
}

_QWORD *sub_19CED5080(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439D20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED518C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0130);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7538(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5298(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441270, &qword_1EE441278);
}

_QWORD *sub_19CED52AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CD58FE8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED53C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED53D0(a1, a2, a3, a4, &qword_1ECEB0140);
}

_QWORD *sub_19CED53D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED705C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED54D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BC60);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7430(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED55E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE4410C8, &qword_1EE4410D0);
}

_QWORD *sub_19CED55F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED5848(a1, a2, a3, a4, &qword_1EE43AEE8, &qword_1EE4410B0);
}

_QWORD *sub_19CED560C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CD480E8(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5714(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F178);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED705C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5820(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4412A8, &qword_1EE43E4D0);
}

_QWORD *sub_19CED5834(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4412B8, &qword_1EE440D60);
}

_QWORD *sub_19CED5848(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CD1A764(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5974(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43CAB8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CD53394(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CED5A80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19CED5C24(a1, a2, a3, a4, &qword_1EE4412A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

_QWORD *sub_19CED5A94(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441280, &qword_1EE441288);
}

_QWORD *sub_19CED5AA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE4373B8, (uint64_t *)&unk_1EE437380);
}

_QWORD *sub_19CED5ABC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE43CAF0, &qword_1EE43D300);
}

char *sub_19CED5AD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B00);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED80E4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5BC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1ECEB0560, &qword_1ECEB0538);
}

_QWORD *sub_19CED5BDC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1ECEB0550, (uint64_t *)&unk_1ECEB06F0);
}

_QWORD *sub_19CED5BF0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED53D0(a1, a2, a3, a4, &qword_1ECEB0F60);
}

_QWORD *sub_19CED5BFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441058, (uint64_t *)&unk_1EE440C90);
}

uint64_t sub_19CED5C10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19CED5C24(a1, a2, a3, a4, &qword_1EE441068, (uint64_t (*)(_QWORD))type metadata accessor for MTMetricsIdentifier);
}

uint64_t sub_19CED5C24(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_19CFE0334();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_19CED81C8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_19CED5E30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, qword_1EE43CF70, (uint64_t *)&unk_1EE43CF60);
}

_QWORD *sub_19CED5E44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A970);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 400);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[50 * v8 + 4])
          memmove(v12, a4 + 4, 400 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED7AF8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED5F70(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE43BF60, qword_1ECEB1C80);
}

_QWORD *sub_19CED5F84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE43B530, &qword_1EE43D310);
}

_QWORD *sub_19CED5F98(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE4410A8, (uint64_t *)&unk_1EE43E3D0);
}

_QWORD *sub_19CED5FAC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE441108, &qword_1EE43E3F0);
}

_QWORD *sub_19CED5FC0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441120, &qword_1EE43E3F8);
}

_QWORD *sub_19CED5FD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1ECEB0950, &qword_1ECEB0920);
}

_QWORD *sub_19CED5FE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441290, &qword_1EE43E4B0);
}

_QWORD *sub_19CED5FFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411F0, &qword_1EE43E488);
}

_QWORD *sub_19CED6010(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441200, &qword_1EE43E490);
}

_QWORD *sub_19CED6024(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441210, (uint64_t *)&unk_1EE43E4A0);
}

_QWORD *sub_19CED6038(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED668C(a1, a2, a3, a4, &qword_1EE43B958);
}

_QWORD *sub_19CED604C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE439D30, &qword_1EE439CD0);
}

_QWORD *sub_19CED6060(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE43BF10, &qword_1EE43BE60);
}

_QWORD *sub_19CED6074(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1ECEB0480, (uint64_t *)&unk_1ECEB03A0);
}

uint64_t sub_19CED6088(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return a1;
}

uint64_t sub_19CED60B8()
{
  return swift_deallocObject();
}

uint64_t sub_19CED60CC()
{
  return swift_deallocObject();
}

unint64_t sub_19CED60E0()
{
  unint64_t result;

  result = qword_1EE441018;
  if (!qword_1EE441018)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessage.ValueTreatment, &type metadata for LogMessage.ValueTreatment);
    atomic_store(result, (unint64_t *)&qword_1EE441018);
  }
  return result;
}

uint64_t sub_19CED6124()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_19CED6134()
{
  unint64_t result;

  result = qword_1EE441020;
  if (!qword_1EE441020)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessage, &type metadata for LogMessage);
    atomic_store(result, (unint64_t *)&qword_1EE441020);
  }
  return result;
}

unint64_t sub_19CED617C()
{
  unint64_t result;

  result = qword_1EE441028;
  if (!qword_1EE441028)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessage.StringInterpolation, &type metadata for LogMessage.StringInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EE441028);
  }
  return result;
}

unint64_t sub_19CED61C4()
{
  unint64_t result;

  result = qword_1EE441030;
  if (!qword_1EE441030)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessage, &type metadata for LogMessage);
    atomic_store(result, (unint64_t *)&qword_1EE441030);
  }
  return result;
}

unint64_t sub_19CED620C()
{
  unint64_t result;

  result = qword_1EE441038;
  if (!qword_1EE441038)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LogMessage, &type metadata for LogMessage);
    atomic_store(result, (unint64_t *)&qword_1EE441038);
  }
  return result;
}

uint64_t sub_19CED6250()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_19CED625C()
{
  return MEMORY[0x1E0DEA9F8];
}

uint64_t storeEnumTagSinglePayload for LogMessage.ValueTreatment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CED62B4 + 4 * byte_19D05E645[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CED62E8 + 4 * byte_19D05E640[v4]))();
}

uint64_t sub_19CED62E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED62F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CED62F8);
  return result;
}

uint64_t sub_19CED6304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CED630CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CED6310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CED6318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t assignWithCopy for LogMessage.Component(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LogMessage.Component(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

_QWORD *sub_19CED63E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441250, &qword_1EE43BB60);
}

_QWORD *sub_19CED63F4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441260, (uint64_t *)&unk_1ECEB0180);
}

_QWORD *sub_19CED6408(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441230, &qword_1EE441238);
}

_QWORD *sub_19CED641C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BF48);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED7D08(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6544(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441240, &qword_1EE441248);
}

_QWORD *sub_19CED6558(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED5848(a1, a2, a3, a4, &qword_1EE441220, &qword_1EE441228);
}

_QWORD *sub_19CED656C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7DFC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6678(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED668C(a1, a2, a3, a4, &qword_1EE436EE0);
}

_QWORD *sub_19CED668C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 + 31;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 6);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v9 + 4])
          memmove(v14, a4 + 4, v9 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7F04(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED67A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4412C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED7FF0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED68C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE4373C0, &qword_1EE437390);
}

_QWORD *sub_19CED68D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411E0, (uint64_t *)&unk_1EE440D50);
}

_QWORD *sub_19CED68EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE441048, &qword_1EE441050);
}

uint64_t sub_19CED6900(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19CED5C24(a1, a2, a3, a4, (uint64_t *)&unk_1EE439F90, type metadata accessor for JetPackAsset);
}

_QWORD *sub_19CED6914(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411C0, (uint64_t *)&unk_1EE440D30);
}

_QWORD *sub_19CED6928(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411D0, (uint64_t *)&unk_1EE440D40);
}

_QWORD *sub_19CED693C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411A0, (uint64_t *)&unk_1EE43E440);
}

_QWORD *sub_19CED6950(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4411B0, qword_1EE443B00);
}

_QWORD *sub_19CED6964(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441170, (uint64_t *)&unk_1EE440D00);
}

_QWORD *sub_19CED6978(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441190, (uint64_t *)&unk_1EE440D20);
}

_QWORD *sub_19CED698C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441180, (uint64_t *)&unk_1EE440D10);
}

_QWORD *sub_19CED69A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441150, (uint64_t *)&unk_1EE443AF0);
}

_QWORD *sub_19CED69B4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441110, &qword_1EE440CF0);
}

_QWORD *sub_19CED69C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE43B550, qword_1EE43B200);
}

_QWORD *sub_19CED69DC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE43AF68, &qword_1EE43AF40);
}

_QWORD *sub_19CED69F0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441160, &qword_1EE441168);
}

_QWORD *sub_19CED6A04(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441140, &qword_1EE436F90);
}

_QWORD *sub_19CED6A18(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE4371D0, &qword_1EE4371B0);
}

_QWORD *sub_19CED6A2C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, qword_1EE436FC0, &qword_1EE436F88);
}

uint64_t sub_19CED6A40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_19CED5C24(a1, a2, a3, a4, &qword_1EE43FB40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_19CED6A54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441100);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED82E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6B78(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED5848(a1, a2, a3, a4, &qword_1EE4410F8, qword_1ECEB1E50);
}

_QWORD *sub_19CED6B8C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE43B950, qword_1EE43B8C8);
}

_QWORD *sub_19CED6BA0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED5848(a1, a2, a3, a4, &qword_1EE4410F0, &qword_1EE43C318);
}

_QWORD *sub_19CED6BB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4410D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7234(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6CC0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441098, (uint64_t *)&unk_1EE440CA0);
}

_QWORD *sub_19CED6CD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE441088, (uint64_t *)&unk_1EE43E3C0);
}

_QWORD *sub_19CED6CE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, &qword_1EE439FA8, &qword_1EE439FA0);
}

_QWORD *sub_19CED6CFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CD49FD0(a1, a2, a3, a4, (uint64_t *)&unk_1EE4410B8, (uint64_t *)&unk_1EE43E3E0);
}

_QWORD *sub_19CED6D10(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441080);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_19CED7824(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6E30(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A980);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7918(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_19CED6F3C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CED52AC(a1, a2, a3, a4, &qword_1EE441070, &qword_1EE441078);
}

_QWORD *sub_19CED6F50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0000);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19CED7C00(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_19CED705C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7144(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7234(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4410E0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED733C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7430(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BAB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7538(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7918(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7A08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7AF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 400 * a1 + 32;
    v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0348);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7C00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7DFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7F04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED7FF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

char *sub_19CED80E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED81C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED82E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CED83D4(const char *a1)
{
  uint64_t v1;

  return sub_19CDE8430(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CED83F0()
{
  return swift_deallocObject();
}

uint64_t DiskJetPackResourceBundle.automaticallyCleanUp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + 8)
                            + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_automaticallyCleanUp);
}

uint64_t DiskJetPackResourceBundle.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_url;
  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DiskJetPackResourceBundle.data(withName:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v2;
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(v3 + 56) + 16 * v6;
    v9 = *(_QWORD *)v8;
    sub_19CD3BE5C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

id DiskJetPackResourceBundle.contentsOfDirectory(atPath:)(void **a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v17[0] = v9;
  DiskJetPackResourceBundle.fileURL(atPath:)((uint64_t *)v17, (uint64_t)v8);
  if (v2)
  {

  }
  else
  {
    sub_19CFDED8C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v11 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v17[0] = 0;
    v1 = objc_msgSend(v10, sel_contentsOfDirectoryAtPath_error_, v11, v17);

    v12 = v17[0];
    if (v1)
    {
      v13 = sub_19CFDF86C();

      swift_bridgeObjectRetain();
      v1 = (id)sub_19CED8E28(v13, (uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = v12;
      sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  return v1;
}

uint64_t DiskJetPackResourceBundle.inMemorySource(fromPath:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v75 = a2;
  v71 = type metadata accessor for JSSource();
  MEMORY[0x1E0C80A78](v71, v4);
  v76 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for DiskJetPackResourceBundle();
  MEMORY[0x1E0C80A78](v72, v6);
  v74 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v8, v9);
  v73 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v60 - v13;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v60 - v17;
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v60 - v21;
  v23 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v23, v24);
  v25 = sub_19CFDEDE0();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *a1;
  v78 = v30;
  v31 = v77;
  result = DiskJetPackResourceBundle.fileURL(atPath:)(&v78, (uint64_t)v29);
  if (!v31)
  {
    v67 = v30;
    v68 = v14;
    v69 = v18;
    v70 = v25;
    v77 = v26;
    v33 = v22;
    v34 = sub_19CFDEDF8();
    v36 = v35;
    v66 = 0;
    v37 = v77;
    v38 = *(void (**)(char *, uint64_t))(v77 + 8);
    v39 = v70;
    v38(v29, v70);
    sub_19CFDF5B4();
    v40 = sub_19CFDF590();
    if (v41)
    {
      v62 = v41;
      v63 = v40;
      v65 = v36;
      v42 = v2;
      v43 = v2 + *(int *)(v72 + 24);
      v44 = (uint64_t)v69;
      sub_19CD3BB88(v43, (uint64_t)v69);
      v72 = *(_QWORD *)(v37 + 48);
      v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v72)(v44, 1, v39);
      v64 = v34;
      if (v45 == 1)
      {
        sub_19CD3BBD0(v44);
        v46 = v39;
        v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
        v48 = (uint64_t)v33;
        v47(v33, 1, 1, v39);
        v49 = (uint64_t *)v76;
        v50 = (uint64_t)v73;
      }
      else
      {
        v61 = (void (*)(uint64_t, uint64_t))v38;
        v48 = (uint64_t)v33;
        v50 = (uint64_t)v73;
        if (*(_QWORD *)(v67 + 16))
        {
          v78 = v67;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
          sub_19CD1632C();
          sub_19CFDF4F4();
          swift_bridgeObjectRelease();
        }
        v51 = (uint64_t)v69;
        sub_19CFDED38();
        swift_bridgeObjectRelease();
        v61(v51, v39);
        v46 = v39;
        v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
        v47(v33, 0, 1, v39);
        v49 = (uint64_t *)v76;
      }
      sub_19CD3BB88(v48, v50);
      v52 = v74;
      sub_19CCFECEC(v42, v74, (uint64_t (*)(_QWORD))type metadata accessor for DiskJetPackResourceBundle);
      v53 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v72)(v50, 1, v46);
      v54 = v75;
      v55 = v71;
      if (v53 == 1)
      {
        v56 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v68, *(_QWORD *)(v52 + 8) + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_url, v46);
        sub_19CCEACE4(v52, (uint64_t (*)(_QWORD))type metadata accessor for DiskJetPackResourceBundle);
        sub_19CD3BBD0(v50);
      }
      else
      {
        sub_19CCEACE4(v52, (uint64_t (*)(_QWORD))type metadata accessor for DiskJetPackResourceBundle);
        v56 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v68, v50, v46);
      }
      v47((char *)v56, 0, 1, v46);
      v54[3] = v55;
      v54[4] = (uint64_t)&protocol witness table for JSSource;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v54);
      v58 = (uint64_t)v49 + *(int *)(v55 + 20);
      v47((char *)v58, 1, 1, v46);
      v59 = v62;
      *v49 = v63;
      v49[1] = v59;
      sub_19CD3B284(v56, v58);
      sub_19CD3A2BC((uint64_t)v49, (uint64_t)boxed_opaque_existential_2Tm);
      sub_19CD3BE18(v64, v65);
      return sub_19CD3BBD0(v48);
    }
    else
    {
      sub_19CED8F70();
      swift_allocError();
      swift_willThrow();
      return sub_19CD3BE18(v34, v36);
    }
  }
  return result;
}

uint64_t static DiskJetPackResourceBundle.cleanUpOldSessions(baseURL:)(uint64_t a1)
{
  return sub_19CE79418(a1);
}

uint64_t sub_19CED8CDC(uint64_t a1, uint64_t a2)
{
  return DiskJetPackResourceBundle.data(withName:)(a1, a2);
}

uint64_t sub_19CED8CF0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  DiskJetPackResourceBundle.fileURL(atPath:)(&v11, (uint64_t)v8);
  if (!v1)
  {
    v2 = sub_19CFDEDF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v2;
}

id sub_19CED8DD0(void **a1)
{
  return DiskJetPackResourceBundle.contentsOfDirectory(atPath:)(a1);
}

unint64_t sub_19CED8DE4()
{
  unint64_t result;

  result = qword_1EE4412E0;
  if (!qword_1EE4412E0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for InvalidJetPackPathError, &type metadata for InvalidJetPackPathError);
    atomic_store(result, (unint64_t *)&qword_1EE4412E0);
  }
  return result;
}

uint64_t sub_19CED8E28(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  void **v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_19CD16688(0, v2, 0);
    v3 = v14;
    v6 = (void **)(a1 + 40);
    do
    {
      v7 = (uint64_t)*(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain_n();
      v9._countAndFlagsBits = v7;
      v9._object = v8;
      JetPackPath.init(_:)(v9);
      swift_bridgeObjectRetain();
      sub_19CDC7324(v13);
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_19CD16688(v10 > 1, v11 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      *(_QWORD *)(v14 + 8 * v11 + 32) = a2;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19CED8F44()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  return swift_deallocObject();
}

unint64_t sub_19CED8F70()
{
  unint64_t result;

  result = qword_1EE4412E8[0];
  if (!qword_1EE4412E8[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for InvalidFileEncodingError, &type metadata for InvalidFileEncodingError);
    atomic_store(result, qword_1EE4412E8);
  }
  return result;
}

_QWORD *assignWithCopy for DiskJetPackResourceBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *initializeWithTake for DiskJetPackResourceBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for DiskJetPackResourceBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiskJetPackResourceBundle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CED92DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DiskJetPackResourceBundle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CED9368(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_19CED93E0()
{
  unint64_t v0;

  sub_19CCC8A30();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_19CED9464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = *v4;
  v9 = MEMORY[0x1E0C80A78](a1, a1);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, double))(v12 + 16))(v11, v9);
  v13 = *(_QWORD *)(v8 + 80);
  EventSubscription.init<A>(_:)((uint64_t)v11, a2, a3, &v24);
  v14 = v24;
  v15 = v4[2];
  v20 = v13;
  v21 = a2;
  v22 = a3;
  v23 = v24;
  type metadata accessor for EventSubscription(255, v13, v16, v17);
  sub_19CFE0280();
  swift_retain();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CED9B90, (uint64_t)v19, v15);
  result = swift_release();
  *a4 = v14;
  return result;
}

uint64_t sub_19CED9568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for EventSubscription(255, a3, a3, a4);
  sub_19CFE0280();
  swift_retain();
  return sub_19CFE025C();
}

uint64_t sub_19CED95D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a1;
  v6 = v4[2];
  v9 = *(_QWORD *)(*v4 + 80);
  v10 = v5;
  type metadata accessor for EventSubscription(255, v9, a3, a4);
  sub_19CFE0280();
  swift_retain();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CED9B78, (uint64_t)&v8, v6);
  return swift_release();
}

uint64_t sub_19CED965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v4 = type metadata accessor for EventSubscription(255, a3, a3, a4);
  v5 = sub_19CFE0280();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC740], v5);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v4);
  result = sub_19CFDFC80();
  if (v7 != 1)
  {
    sub_19CFE0268();
    return swift_release();
  }
  return result;
}

uint64_t sub_19CED9728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;
  char v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v6 = *v4;
  v7 = v4[2];
  v22 = *(_QWORD *)(v6 + 80);
  v20 = v22;
  v8 = type metadata accessor for EventSubscription(255, v22, a3, a4);
  sub_19CFE0280();
  swift_retain();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CED9B2C, (uint64_t)v21, v7);
  swift_release();
  v9 = v25;
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v8);
  result = sub_19CFDF3A4();
  v25 = result;
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v19[4] = 0;
    v12 = 0;
    while (v12 < *(_QWORD *)(v9 + 16))
    {
      v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
      v24 = v13;
      swift_retain();
      if ((EventSubscription.isValid.getter() & 1) == 0
        || (v24 = v13, EventSubscription.notify(_:)(), v24 = v13, (EventSubscription.isValid.getter() & 1) == 0))
      {
        v23 = v13;
        sub_19CFDFBE4();
        sub_19CFDFBC0();
      }
      result = swift_release();
      if (v11 == ++v12)
      {
        swift_release();
        v14 = v25;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    v14 = result;
    swift_release();
LABEL_11:
    swift_bridgeObjectRetain();
    v15 = sub_19CFDFBCC();
    v16 = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v18 = v5[2];
      MEMORY[0x1E0C80A78](v16, v17);
      v19[2] = v20;
      v19[3] = v14;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19CDF62F4((void (*)(uint64_t))sub_19CED9B44, (uint64_t)v19, v18);
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CED9978@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  type metadata accessor for EventSubscription(0, a1, a2, a3);
  v5 = sub_19CFE0280();
  swift_retain();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC730], v5);
  result = sub_19CFDF974();
  *a4 = result;
  return result;
}

uint64_t sub_19CED9A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for EventSubscription(255, a3, a3, a4);
  v4 = sub_19CFE0280();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC728], v4);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC748], v4);
  return sub_19CFDFCBC();
}

uint64_t sub_19CED9A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for EventSubscription(0, a3, a3, a4);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for EventSubscription<A>, v4);
  return sub_19CFDFBD8() & 1;
}

uint64_t type metadata accessor for _DebugEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _DebugEvent);
}

void sub_19CED9B0C(uint64_t a1@<X8>)
{
  sub_19CD0C424(a1);
}

uint64_t sub_19CED9B2C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_19CED9978(*(_QWORD *)(v3 + 16), a1, a2, a3);
}

uint64_t sub_19CED9B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CED9A00(a1, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_19CED9B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CED9A94(a1, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), a4) & 1;
}

uint64_t sub_19CED9B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CED965C(a1, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_19CED9B90(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CED9568(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_19CED9BAC(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  Swift::String v7;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v1 = *a1;
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D052350;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v19 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v18 = 0xD00000000000002DLL;
  *((_QWORD *)&v18 + 1) = 0x800000019D073340;
  v24 = 0u;
  v25 = 0u;
  v5 = v2;
  sub_19CD40658((uint64_t)&v18, (uint64_t)&v24);
  *(_BYTE *)(v4 + 64) = 0;
  v6 = v25;
  *(_OWORD *)(v4 + 32) = v24;
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  v23 = sub_19CD40918(0, 20, 0, MEMORY[0x1E0DEE9D8]);
  v7._object = (void *)0x800000019D073370;
  v7._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  if (v1)
  {
    swift_getErrorValue();
    *((_QWORD *)&v22 + 1) = v17;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v21);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v17 - 8) + 16))(boxed_opaque_existential_2Tm);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_19CD40794((uint64_t)&v21, (uint64_t)v20);
  v18 = 0u;
  v19 = 0u;
  sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
  v26 = 0;
  v24 = v18;
  v25 = v19;
  v9 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v9[2] + 1, 1, v9);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[5 * v11];
  v13 = v24;
  v14 = v25;
  *((_BYTE *)v12 + 64) = v26;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  v23 = v9;
  sub_19CD3F190((uint64_t)&v21);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(_QWORD *)(v3 + 40) = v23;
  *(_QWORD *)&v24 = v5;
  LOBYTE(v18) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

uint64_t Unstable.Accounts.__allocating_init(_:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Unstable.Accounts.init(_:)(a1);
  return v2;
}

id *Unstable.Accounts.deinit()
{
  id *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  return v0;
}

uint64_t Unstable.Accounts.__deallocating_deinit()
{
  id *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  return swift_deallocClassInstance();
}

id Unstable.Accounts.localiTunesAccount.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), sel_ams_localiTunesAccount);
  *a1 = result;
  return result;
}

void sub_19CEDA060()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(v1, sel_lock);
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_ams_activeiTunesAccount);
  v3 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 32) = v2;

  objc_msgSend(v1, sel_unlock);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = v4;
  if (qword_1ECEB2C78 != -1)
  {
    swift_once();
    v4 = v5;
  }
  objc_msgSend(v4, sel_postNotificationName_object_, qword_1ECEB2B68, v0);

}

ValueMetadata *type metadata accessor for UnstableAlias()
{
  return &type metadata for UnstableAlias;
}

uint64_t method lookup function for Unstable.Accounts()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Unstable.Accounts.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *_s31_AccountsForAccountProviderRuleOMa()
{
  return &_s31_AccountsForAccountProviderRuleON;
}

ValueMetadata *_s31_AccountProviderForAccountsRuleOMa()
{
  return &_s31_AccountProviderForAccountsRuleON;
}

uint64_t sub_19CEDA21C(_QWORD *a1)
{
  sub_19CFE010C();
  sub_19CFDF698();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CEDA2DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_19CEDA300(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19CEDA300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];
  void *v7;
  _BYTE v8[40];

  sub_19CCD5B84(a1, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2580);
  sub_19CD598F0();
  if (swift_dynamicCast())
  {
    type metadata accessor for Unstable.Accounts();
    v2 = swift_allocObject();
    Unstable.Accounts.init(_:)(v7);
  }
  else
  {
    type metadata accessor for Unstable.Accounts();
    v3 = swift_dynamicCast();
    if ((_DWORD)v3)
    {
      v2 = (uint64_t)v7;
    }
    else
    {
      MEMORY[0x1E0C80A78](v3, v4);
      v6[2] = a1;
      requirementFailure(_:file:line:)(sub_19CEDA438, (uint64_t)v6, (uint64_t)"JetEngine/Accounts.swift", 24, 2, 139);
      if (qword_1ECEB0FA8 != -1)
        swift_once();
      v2 = qword_1ECEB0F40;
      swift_retain();
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v2;
}

uint64_t sub_19CEDA438()
{
  uint64_t v0;

  return sub_19CEDA21C(*(_QWORD **)(v0 + 16));
}

uint64_t AsyncActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v5 = v4;
  v35 = a4;
  v36 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v8, v9);
  v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v16 = (char *)&v34 - v15;
  v17 = *(_QWORD *)(a3 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v22, v5, a3, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, a1, AssociatedTypeWitness);
  v23 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v24 = (v18 + v23 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v25 = swift_allocObject();
  v26 = v35;
  *(_QWORD *)(v25 + 16) = a3;
  *(_QWORD *)(v25 + 24) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v25 + v23, v22, a3);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, v16, AssociatedTypeWitness);
  *(_QWORD *)(v25 + ((v13 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
  v27 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v28 = swift_allocObject();
  *(_DWORD *)(v28 + 16) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v27 + 16) = v28;
  *(_QWORD *)(v27 + 24) = v29;
  *(_BYTE *)(v27 + 32) = 0;
  v30 = sub_19CFDFA10();
  v31 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v37, 1, 1, v30);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = &unk_1EE441378;
  v32[5] = v25;
  v32[6] = v27;
  swift_retain();
  swift_retain();
  sub_19CF5B8E4(v31, (uint64_t)asc_1EE441380, (uint64_t)v32);
  swift_release();
  return v27;
}

uint64_t sub_19CEDA6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16) + *(_QWORD *)(a6 + 16));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_19CCBE344;
  return v14(a1, a3, a4, a5, a6);
}

uint64_t sub_19CEDA754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEDA82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1 + v8;
  v10 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_19CD579FC;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 16) + *(_QWORD *)(v5 + 16));
  v12 = (_QWORD *)swift_task_alloc();
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_19CCBE344;
  return v14(a1, v9, v10, v4, v5);
}

uint64_t sub_19CEDA93C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEDA970(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C08
                                                                                     + dword_1EE442C08))(a1, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of AsyncActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CCBE344;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for Models()
{
  return &type metadata for Models;
}

uint64_t _noAsync<A>(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t _unsafeSend<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
}

uint64_t _UnsafeUncheckedSendableBox.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t _unsafeReceive<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t _UnsafeUncheckedSendableBox.wrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_19CEDAB90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CEDAC40 + 4 * byte_19D05EA50[(v7 - 1)]))();
}

void sub_19CEDAC90(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _UnsafeUncheckedSendableBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _UnsafeUncheckedSendableBox);
}

uint64_t dispatch thunk of Lens.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_BYTE *sub_19CEDAE54@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t LazyPromise<A>.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  _UNKNOWN **v16;

  v2 = v1;
  v4 = sub_19CFDF2E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF540], v4);
  v10 = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v15 = v9;
  v16 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v14 = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v11 + 24) = a1;
  return LazyPromise.__allocating_init(on:perform:)(&v14, (uint64_t)sub_19CEDB128, v11);
}

void sub_19CEDAFC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), _QWORD *a4, void *a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v20)(uint64_t);
  _QWORD *v21;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a6;
  v12[3] = a1;
  v12[4] = a2;
  v20 = sub_19CEDB154;
  v21 = v12;
  v13 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_19CCFA024;
  v19 = &block_descriptor_24;
  v14 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addSuccessBlock_, v14);
  _Block_release(v14);
  v20 = a3;
  v21 = a4;
  v16 = v13;
  v17 = 1107296256;
  v18 = sub_19CCDB9F8;
  v19 = &block_descriptor_6_5;
  v15 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addErrorBlock_, v15);
  _Block_release(v15);
}

uint64_t sub_19CEDB104()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_19CEDB128(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), _QWORD *a4)
{
  uint64_t v4;

  sub_19CEDAFC0(a1, a2, a3, a4, *(void **)(v4 + 24), *(_QWORD *)(v4 + 16));
}

uint64_t sub_19CEDB130()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEDB154(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  v4 = a1;
  return v2(&v4);
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.defaultValue.getter()
{
  return 0;
}

unint64_t sub_19CEDB198()
{
  return 0xD000000000000022;
}

uint64_t sub_19CEDB1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEDBEBC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEDB1DC()
{
  sub_19CEDBCE8();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDB204()
{
  sub_19CEDBCE8();
  return sub_19CFE0A54();
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.value(from:)(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2C8, (void (*)(void))sub_19CEDBCE8) & 1;
}

uint64_t static AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.encode(_:to:)(uint64_t a1, _QWORD *a2)
{
  return sub_19CEDB6B0(a1, a2, &qword_1EE441410, (void (*)(void))sub_19CEDBCE8);
}

uint64_t sub_19CEDB288@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CEDBB60(a1, &qword_1EE43C2C8, (void (*)(void))sub_19CEDBCE8);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_19CEDB2CC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEDB80C(a1, a2, a3, a4, &qword_1EE441410, (void (*)(void))sub_19CEDBCE8);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.defaultValue.getter()
{
  return 0;
}

unint64_t sub_19CEDB304()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_19CEDB320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEDBE38(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEDB348()
{
  sub_19CEDBD2C();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDB370()
{
  sub_19CEDBD2C();
  return sub_19CFE0A54();
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.value(from:)(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2C0, (void (*)(void))sub_19CEDBD2C) & 1;
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.encode(_:to:)(uint64_t a1, _QWORD *a2)
{
  return sub_19CEDB6B0(a1, a2, &qword_1EE441418, (void (*)(void))sub_19CEDBD2C);
}

uint64_t sub_19CEDB3F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CEDBB60(a1, &qword_1EE43C2C0, (void (*)(void))sub_19CEDBD2C);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_19CEDB438(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEDB80C(a1, a2, a3, a4, &qword_1EE441418, (void (*)(void))sub_19CEDBD2C);
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.defaultValue.getter()
{
  return 0;
}

unint64_t sub_19CEDB470()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_19CEDB48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEDBF40(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEDB4B4()
{
  sub_19CEDBD70();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDB4DC()
{
  sub_19CEDBD70();
  return sub_19CFE0A54();
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.value(from:)(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2D0, (void (*)(void))sub_19CEDBD70) & 1;
}

uint64_t static AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.encode(_:to:)(uint64_t a1, _QWORD *a2)
{
  return sub_19CEDB6B0(a1, a2, &qword_1EE441420, (void (*)(void))sub_19CEDBD70);
}

uint64_t sub_19CEDB560@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CEDBB60(a1, &qword_1EE43C2D0, (void (*)(void))sub_19CEDBD70);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_19CEDB5A4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEDB80C(a1, a2, a3, a4, &qword_1EE441420, (void (*)(void))sub_19CEDBD70);
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.defaultValue.getter()
{
  return 0;
}

uint64_t sub_19CEDB5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEDBDB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEDB604()
{
  sub_19CD20BCC();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDB62C()
{
  sub_19CD20BCC();
  return sub_19CFE0A54();
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.value(from:)(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43BEE0, (void (*)(void))sub_19CD20BCC) & 1;
}

uint64_t static AppleServicesPropertyScope.IsAnonymityEnabledProperty.encode(_:to:)(uint64_t a1, _QWORD *a2)
{
  return sub_19CEDB6B0(a1, a2, &qword_1EE441428, (void (*)(void))sub_19CD20BCC);
}

uint64_t sub_19CEDB6B0(uint64_t a1, _QWORD *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a4();
  sub_19CFE0A24();
  sub_19CFE0544();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_19CEDB79C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CEDBB60(a1, &qword_1EE43BEE0, (void (*)(void))sub_19CD20BCC);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_19CEDB7E0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEDB80C(a1, a2, a3, a4, &qword_1EE441428, (void (*)(void))sub_19CD20BCC);
}

uint64_t sub_19CEDB80C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a6();
  sub_19CFE0A24();
  sub_19CFE0544();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void static AppleServicesPropertyScope.SigningStyleProperty.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_19CEDB908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x53676E696E676973 && a2 == 0xEC000000656C7974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19CEDB9B4()
{
  sub_19CD22AAC();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDB9DC()
{
  sub_19CD22AAC();
  return sub_19CFE0A54();
}

uint64_t static AppleServicesPropertyScope.SigningStyleProperty.encode(_:to:)(char *a1, _QWORD *a2)
{
  return sub_19CEDC048(a1, a2);
}

uint64_t sub_19CEDBA18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return static AppleServicesPropertyScope.SigningStyleProperty.value(from:)(a1, a2);
}

uint64_t sub_19CEDBA2C(char *a1, _QWORD *a2)
{
  return sub_19CEDC048(a1, a2);
}

uint64_t sub_19CEDBA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEDBFC4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEDBA6C()
{
  sub_19CD20B58();
  return sub_19CFE0A48();
}

uint64_t sub_19CEDBA94()
{
  sub_19CD20B58();
  return sub_19CFE0A54();
}

void sub_19CEDBABC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_19CEDBAC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_19CD209C4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_19CEDBAEC(uint64_t *a1, _QWORD *a2)
{
  return sub_19CEDC4F0(*a1, a1[1], a2);
}

void NetRequestPropertyLookup.subscript.getter()
{
  NetRequestPropertyLookup.subscript.getter();
}

{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CEDBB30(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2C0, (void (*)(void))sub_19CEDBD2C) & 1;
}

uint64_t sub_19CEDBB60(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  char v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_19CFE09E8();
  if (!v3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43BD78);
    sub_19CD22EA0();
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v11 = v14 & 1;
  }
  return v11 & 1;
}

uint64_t sub_19CEDBC88(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2C8, (void (*)(void))sub_19CEDBCE8) & 1;
}

uint64_t sub_19CEDBCB8(_QWORD *a1)
{
  return sub_19CEDBB60(a1, &qword_1EE43C2D0, (void (*)(void))sub_19CEDBD70) & 1;
}

unint64_t sub_19CEDBCE8()
{
  unint64_t result;

  result = qword_1EE43C278;
  if (!qword_1EE43C278)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F178, &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C278);
  }
  return result;
}

unint64_t sub_19CEDBD2C()
{
  unint64_t result;

  result = qword_1EE43C260;
  if (!qword_1EE43C260)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F128, &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C260);
  }
  return result;
}

unint64_t sub_19CEDBD70()
{
  unint64_t result;

  result = qword_1EE43C288;
  if (!qword_1EE43C288)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F0D8, &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C288);
  }
  return result;
}

uint64_t sub_19CEDBDB4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x800000019D075020)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19CEDBE38(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000019D074FD0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19CEDBEBC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000022 && a2 == 0x800000019D074FA0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19CEDBF40(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000002ALL && a2 == 0x800000019D074FF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19CEDBFC4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x800000019D075040)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_19CEDC048(char *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441460);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_19CD22AAC();
  sub_19CFE0A24();
  v11[15] = v9;
  sub_19CEDC620();
  sub_19CFE0568();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty()
{
  return &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.IsAnonymityEnabledProperty()
{
  return &type metadata for AppleServicesPropertyScope.IsAnonymityEnabledProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.SigningStyleProperty()
{
  return &type metadata for AppleServicesPropertyScope.SigningStyleProperty;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AMSGrandSlamTokenID()
{
  return &type metadata for AppleServicesPropertyScope.AMSGrandSlamTokenID;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys()
{
  return &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys()
{
  return &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys;
}

unint64_t sub_19CEDC1DC()
{
  unint64_t result;

  result = qword_1EE441430;
  if (!qword_1EE441430)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05ED20, &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441430);
  }
  return result;
}

unint64_t sub_19CEDC224()
{
  unint64_t result;

  result = qword_1EE441438;
  if (!qword_1EE441438)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EDD8, &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441438);
  }
  return result;
}

unint64_t sub_19CEDC26C()
{
  unint64_t result;

  result = qword_1EE441440;
  if (!qword_1EE441440)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EE90, &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441440);
  }
  return result;
}

unint64_t sub_19CEDC2B4()
{
  unint64_t result;

  result = qword_1EE441448;
  if (!qword_1EE441448)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EF48, &type metadata for AppleServicesPropertyScope.IsAnonymityEnabledProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441448);
  }
  return result;
}

unint64_t sub_19CEDC2FC()
{
  unint64_t result;

  result = qword_1EE441450;
  if (!qword_1EE441450)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F000, &type metadata for AppleServicesPropertyScope.SigningStyleProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441450);
  }
  return result;
}

unint64_t sub_19CEDC344()
{
  unint64_t result;

  result = qword_1EE43C298;
  if (!qword_1EE43C298)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EE00, &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C298);
  }
  return result;
}

unint64_t sub_19CEDC38C()
{
  unint64_t result;

  result = qword_1EE43C290;
  if (!qword_1EE43C290)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EE28, &type metadata for AppleServicesPropertyScope.AlwaysIncludeMMeClientInfoAndDeviceHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C290);
  }
  return result;
}

unint64_t sub_19CEDC3D4()
{
  unint64_t result;

  result = qword_1EE43C270;
  if (!qword_1EE43C270)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05ED48, &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C270);
  }
  return result;
}

unint64_t sub_19CEDC41C()
{
  unint64_t result;

  result = qword_1EE43C268;
  if (!qword_1EE43C268)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05ED70, &type metadata for AppleServicesPropertyScope.AlwaysIncludeAuthKitHeadersProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C268);
  }
  return result;
}

unint64_t sub_19CEDC464()
{
  unint64_t result;

  result = qword_1EE43C1B0;
  if (!qword_1EE43C1B0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05EC90, &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C1B0);
  }
  return result;
}

unint64_t sub_19CEDC4AC()
{
  unint64_t result;

  result = qword_1EE43C280;
  if (!qword_1EE43C280)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05ECB8, &type metadata for AppleServicesPropertyScope.ExcludeIdentifierHeadersForAccountProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43C280);
  }
  return result;
}

uint64_t sub_19CEDC4F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441458);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_19CD20B58();
  sub_19CFE0A24();
  v12[0] = a1;
  v12[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  sub_19CD20AFC((unint64_t *)&qword_1EE43F7B8, &qword_1ECEB2550, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_19CEDC620()
{
  unint64_t result;

  result = qword_1EE441468;
  if (!qword_1EE441468)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AppleServicesEncoder.SigningStyle, &type metadata for AppleServicesEncoder.SigningStyle);
    atomic_store(result, (unint64_t *)&qword_1EE441468);
  }
  return result;
}

uint64_t _s9JetEngine26AppleServicesPropertyScopeV20SigningStylePropertyO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEDC6A4 + 4 * byte_19D05EAE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEDC6C4 + 4 * byte_19D05EAE5[v4]))();
}

_BYTE *sub_19CEDC6A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEDC6C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEDC6CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEDC6D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEDC6DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEDC6E4(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_19CEDC6F4()
{
  unint64_t result;

  result = qword_1EE441470;
  if (!qword_1EE441470)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F258, &type metadata for AppleServicesPropertyScope.AMSGrandSlamTokenID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441470);
  }
  return result;
}

uint64_t LocalizedStringsTableCollection.fetchLanguages()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_19CEDC758()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_19CEDC7B0(v1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_19CEDC7B0(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_19CFE0394())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A1ADA390](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_localizations);
      v8 = sub_19CFDF86C();

      sub_19CDC7324(v8);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t LocalizedStringsTableCollection.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a2;
  v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_19CEDC918()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_19CEDC934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a2;
  v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_19CEDC954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = v3;
  v46 = a2;
  v47 = a3;
  v6 = sub_19CFDF038();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringTable();
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_37;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    return v14;
  v49 = MEMORY[0x1E0DEE9D8];
  result = sub_19CCFAB0C(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    v14 = v49;
    v44 = a1 & 0xC000000000000001;
    v35 = a1 & 0xFFFFFFFFFFFFFF8;
    v33 = v4;
    v34 = a1 + 32;
    v43 = xmmword_19D0522A0;
    v41 = a1;
    v42 = v13;
    v39 = v12;
    v40 = v9;
    while (1)
    {
      if (v16 == v13)
      {
        __break(1u);
        goto LABEL_35;
      }
      v48 = v14;
      if (v44)
      {
        v17 = (id)MEMORY[0x1A1ADA390](v16, a1);
      }
      else
      {
        if (v16 >= *(_QWORD *)(v35 + 16))
          goto LABEL_36;
        v17 = *(id *)(v34 + 8 * v16);
      }
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v43;
      *(_QWORD *)(v19 + 32) = v46;
      *(_QWORD *)(v19 + 40) = v47;
      *(_QWORD *)(v12 + *(int *)(v9 + 20)) = v18;
      swift_bridgeObjectRetain();
      v20 = v18;
      v21 = NSBundle.preferredLocalization(fromLanguageCodes:)((Swift::OpaquePointer)v19);
      swift_bridgeObjectRelease();
      v22 = objc_msgSend(v20, sel_localizations);
      v23 = sub_19CFDF86C();

      v4 = *(_QWORD *)(v23 + 16);
      if (!v4)
        break;
      v24 = *(_QWORD *)(v23 + 32) == v21._countAndFlagsBits && *(void **)(v23 + 40) == v21._object;
      if (!v24 && (sub_19CFE06A0() & 1) == 0)
      {
        if (v4 != 1)
        {
          v9 = v23 + 56;
          v12 = 1;
          while (1)
          {
            a1 = v12 + 1;
            if (__OFADD__(v12, 1))
              break;
            v25 = *(_QWORD *)(v9 - 8) == v21._countAndFlagsBits && *(void **)v9 == v21._object;
            if (v25 || (sub_19CFE06A0() & 1) != 0)
              goto LABEL_17;
            v9 += 16;
            ++v12;
            if (a1 == v4)
              goto LABEL_28;
          }
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRetain();
          v13 = sub_19CFE0394();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v40;
        a1 = v41;
        v12 = v39;
        goto LABEL_29;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      v12 = v39;
      v9 = v40;
      *(Swift::String *)(v39 + *(int *)(v40 + 24)) = v21;
      swift_bridgeObjectRetain();
      sub_19CFDEFB4();
      a1 = v41;
LABEL_30:
      type metadata accessor for LocalizedStringsCache();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);

      *(_QWORD *)(v12 + *(int *)(v9 + 28)) = v31;
      v14 = v48;
      v49 = v48;
      v4 = *(_QWORD *)(v48 + 16);
      v32 = *(_QWORD *)(v48 + 24);
      if (v4 >= v32 >> 1)
      {
        sub_19CCFAB0C(v32 > 1, v4 + 1, 1);
        v14 = v49;
      }
      ++v16;
      *(_QWORD *)(v14 + 16) = v4 + 1;
      sub_19CCFAAC8(v12, v14+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v4);
      v13 = v42;
      if (v16 == v42)
        return v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    v26 = v36;
    sub_19CFDEFFC();
    v27 = sub_19CFDEFC0();
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
    v30 = (uint64_t *)(v12 + *(int *)(v9 + 24));
    *v30 = v27;
    v30[1] = v29;
    sub_19CFDEFFC();
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsTableCollection.Container()
{
  return &type metadata for LocalizedStringsTableCollection.Container;
}

uint64_t static Models.DeepLinkIntent.kind.getter()
{
  return 0x6E694C7065654424;
}

uint64_t Models.DeepLinkIntent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v9, a1, v4, v7);
  sub_19CEDCE44(a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v9, v4);
}

uint64_t sub_19CEDCE44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeepLink();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Models.DeepLinkIntent.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Models.DeepLinkIntent.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Models.DeepLinkIntent.url.modify())()
{
  return nullsub_1;
}

unint64_t Models.DeepLinkIntent.jsRepresentation(in:)@<X0>(unint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437190);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 7107189;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = sub_19CFDECFC();
  *(_QWORD *)(inited + 56) = v3;
  v4 = sub_19CD2758C(inited);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
  result = sub_19CEDCF98();
  a1[4] = result;
  *a1 = v4;
  return result;
}

unint64_t sub_19CEDCF98()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1EE441498;
  if (!qword_1EE441498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB0750);
    v2 = &protocol witness table for String;
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> [A : B], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE441498);
  }
  return result;
}

_UNKNOWN **sub_19CEDCFF4()
{
  return &protocol witness table for Models.DeepLinkDestination;
}

uint64_t sub_19CEDD000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_19CEDD038(_QWORD *a1@<X8>)
{
  *a1 = 0x6E694C7065654424;
  a1[1] = 0xEF746E65746E496BLL;
}

unint64_t sub_19CEDD060@<X0>(unint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437190);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 7107189;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = sub_19CFDECFC();
  *(_QWORD *)(inited + 56) = v3;
  v4 = sub_19CD2758C(inited);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
  result = sub_19CEDCF98();
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t _s14DeepLinkIntentVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s14DeepLinkIntentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s14DeepLinkIntentVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEDD250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s14DeepLinkIntentVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEDD298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Models.DeepLinkIntent()
{
  uint64_t result;

  result = qword_1EE4414A0;
  if (!qword_1EE4414A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CEDD314()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t JSONObject.init(deserializing:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v22;
  id v23;
  unint64_t *v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  id v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v34 = a1;
  v41 = *MEMORY[0x1E0C80C00];
  v1 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v1, v2);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_19CFDE864();
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF5CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDF5B4();
  v13 = sub_19CFDF584();
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  if (v15 >> 60 == 15)
  {
    sub_19CFDE84C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
    *(_QWORD *)(inited + 32) = sub_19CFDF578();
    *(_QWORD *)(inited + 40) = v18;
    sub_19CFDF5B4();
    v19 = sub_19CFDF5C0();
    v16(v12, v8);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, v19);
    *(_QWORD *)(inited + 72) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
    *(_QWORD *)(inited + 48) = v20;
    sub_19CD30650(inited);
    sub_19CEDD8AC();
    sub_19CFDEC84();
    sub_19CFDE81C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
    return swift_willThrow();
  }
  if (qword_1EE43D1E0 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465C90, *(uint64_t *)algn_1EE465C98);
  if ((v22 & 1) != 0)
  {
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
    v24 = (unint64_t *)&unk_1ECEB2F00;
LABEL_11:
    v39 = sub_19CCE5204(0, v24);
    *(_QWORD *)&v38 = v23;
LABEL_12:
    sub_19CD433C0(&v38, v40);
    v26 = v34;
    v34[3] = (uint64_t)&type metadata for FoundationValue;
    v26[4] = (uint64_t)&off_1E3DCC5B0;
    v27 = swift_allocObject();
    *v26 = v27;
    sub_19CD436B0((uint64_t)v40, v27 + 16);
    sub_19CCF4A54(v13, v15);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  }
  if (qword_1EE43D2D8 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465CD0, *(uint64_t *)algn_1EE465CD8);
  if ((v25 & 1) != 0)
  {
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    v24 = (unint64_t *)&qword_1ECEB1710;
    goto LABEL_11;
  }
  v28 = (void *)objc_opt_self();
  v29 = (void *)sub_19CFDEE58();
  v37 = 0;
  v30 = objc_msgSend(v28, sel_JSONObjectWithData_options_error_, v29, 4, &v37);

  v31 = v37;
  if (v30)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  v32 = v31;
  sub_19CFDEC9C();

  swift_willThrow();
  return sub_19CCF4A54(v13, v15);
}

uint64_t JSONObject.uint64.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_19CDE0324(v0, (uint64_t)v4);
  v1 = v5;
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v4, &qword_1ECEB1328);
  }
  return v1;
}

uint64_t sub_19CEDD888()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_19CEDD8AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE440480;
  if (!qword_1EE440480)
  {
    v1 = sub_19CFDE864();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CADE40], v1);
    atomic_store(result, (unint64_t *)&qword_1EE440480);
  }
  return result;
}

uint64_t sub_19CEDD8F4()
{
  return 0x7375506B63617473;
}

uint64_t FlowActionModel.presentation.getter()
{
  return 0x7375506B63617473;
}

uint64_t FlowActionPresentation.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t static FlowActionPresentation.sheetPopover.getter()
{
  return 0x706F507465656873;
}

uint64_t static FlowActionPresentation.tabReplaceAll.getter()
{
  return 0x616C706552626174;
}

uint64_t static FlowActionPresentation.tabSelect.getter()
{
  return 0x63656C6553626174;
}

unint64_t static FlowActionPresentation.tabSelectReplaceAll.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_19CEDD9DC()
{
  sub_19CEDDC3C();
  return sub_19CFDF83C();
}

uint64_t sub_19CEDDA38()
{
  sub_19CEDDC3C();
  return sub_19CFDF80C();
}

uint64_t FlowActionStackDestinationNavigation<>.shouldStackPush<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  double v12;
  void (*v13)(uint64_t, uint64_t, double);
  uint64_t *boxed_opaque_existential_2Tm;
  unsigned __int8 v15;
  char v16;
  uint64_t v18[4];
  uint64_t v19[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v13 = *(void (**)(uint64_t, uint64_t, double))(a6 + 24);
  v13(a3, a6, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A710);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    v19[3] = a2;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v19);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v6, a2);
    v18[3] = AssociatedTypeWitness;
    __swift_allocate_boxed_opaque_existential_2Tm(v18);
    ((void (*)(uint64_t, uint64_t))v13)(a3, a6);
    v15 = _isStructurallyEqual(_:to:with:at:)(v19, v18, 3uLL, 0);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    v16 = v15 ^ 1;
  }
  else
  {
    v16 = 1;
  }
  return v16 & 1;
}

unint64_t sub_19CEDDBD0()
{
  unint64_t result;

  result = qword_1EE4414B0;
  if (!qword_1EE4414B0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for FlowActionPresentation, &type metadata for FlowActionPresentation);
    atomic_store(result, (unint64_t *)&qword_1EE4414B0);
  }
  return result;
}

uint64_t dispatch thunk of FlowActionModel.destination.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FlowActionModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for FlowActionPresentation()
{
  return &type metadata for FlowActionPresentation;
}

uint64_t dispatch thunk of FlowActionStackDestinationNavigation.shouldStackPush<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

unint64_t sub_19CEDDC3C()
{
  unint64_t result;

  result = qword_1EE4414B8;
  if (!qword_1EE4414B8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for FlowActionPresentation, &type metadata for FlowActionPresentation);
    atomic_store(result, (unint64_t *)&qword_1EE4414B8);
  }
  return result;
}

uint64_t SilverBulletJetPackAssetFetcher.init(bag:urlSessionConfiguration:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t result;

  v6 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  swift_unknownObjectRetain_n();
  v7 = a2;
  v8 = (void *)sub_19CFDF554();
  v9 = objc_msgSend(v6, sel_initWithContainerID_bag_, v8, a1);

  result = swift_unknownObjectRelease();
  *a3 = a1;
  a3[1] = a1;
  a3[2] = (uint64_t)v7;
  a3[3] = 0;
  a3[4] = (uint64_t)v9;
  return result;
}

uint64_t sub_19CEDDD30()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE465CF0 = result;
  return result;
}

uint64_t sub_19CEDDD64()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE465CF8 = result;
  return result;
}

__n128 SilverBulletJetPackAssetFetcher.init(bag:urlAssetFetcher:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a2[1].n128_u64[0];
  v4 = a2[1].n128_u64[1];
  *(_QWORD *)a3 = a1;
  result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = v4;
  return result;
}

uint64_t SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  *(_QWORD *)(v4 + 128) = a1;
  *(_QWORD *)(v4 + 136) = a3;
  *(_QWORD *)(v4 + 144) = type metadata accessor for URLJetPackAssetRequest();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v6 = sub_19CFDEDE0();
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *a2;
  v9 = *((_QWORD *)a2 + 2);
  v10 = *((_QWORD *)a2 + 3);
  v11 = *((_BYTE *)a2 + 32);
  *(_BYTE *)(v4 + 89) = v11;
  v12 = *v3;
  v13 = v3[1];
  *(_QWORD *)(v4 + 176) = v7;
  *(_QWORD *)(v4 + 184) = v13;
  v14 = v3[2];
  v15 = v3[3];
  *(_QWORD *)(v4 + 192) = v14;
  *(_QWORD *)(v4 + 200) = v15;
  v16 = v3[4];
  *(_QWORD *)(v4 + 208) = v16;
  *(_QWORD *)(v4 + 16) = v12;
  *(_QWORD *)(v4 + 24) = v13;
  *(_QWORD *)(v4 + 32) = v14;
  *(_OWORD *)(v4 + 56) = v8;
  *(_QWORD *)(v4 + 40) = v15;
  *(_QWORD *)(v4 + 48) = v16;
  *(_QWORD *)(v4 + 72) = v9;
  *(_QWORD *)(v4 + 80) = v10;
  *(_BYTE *)(v4 + 88) = v11;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 216) = v17;
  *v17 = v4;
  v17[1] = sub_19CEDDEA4;
  return sub_19CEDE12C(v7, (uint64_t *)(v4 + 56));
}

uint64_t sub_19CEDDEA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;

  v2 = *v1;
  *(_QWORD *)(v2 + 224) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = *(_QWORD *)(v2 + 200);
  v4 = *(_QWORD *)(v2 + 208);
  v6 = *(_BYTE *)(v2 + 89);
  v7 = *(_QWORD *)(v2 + 152);
  v8 = *(_QWORD *)(v2 + 144);
  v10 = *(_OWORD *)(v2 + 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 + 168) + 16))(v7, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 160));
  *(_BYTE *)(v7 + *(int *)(v8 + 20)) = v6;
  *(_OWORD *)(v2 + 96) = v10;
  *(_QWORD *)(v2 + 112) = v5;
  *(_QWORD *)(v2 + 120) = v4;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 232) = v9;
  *v9 = v2;
  v9[1] = sub_19CEDDFA0;
  return URLJetPackAssetFetcher._fetch(_:candidate:)(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 136));
}

uint64_t sub_19CEDDFA0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 90) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_19CEDE018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  sub_19CCFEC38(*(_QWORD *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 90));
}

uint64_t sub_19CEDE080()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19CEDE0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  sub_19CCFEC38(*(_QWORD *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19CEDE12C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 256) = a1;
  v5 = sub_19CFDECF0();
  *(_QWORD *)(v3 + 264) = v5;
  *(_QWORD *)(v3 + 272) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  *(_QWORD *)(v3 + 288) = swift_task_alloc();
  *(_QWORD *)(v3 + 296) = swift_task_alloc();
  v6 = sub_19CFDEDE0();
  *(_QWORD *)(v3 + 304) = v6;
  *(_QWORD *)(v3 + 312) = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  *(_OWORD *)(v3 + 336) = *(_OWORD *)(a2 + 1);
  v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 360) = *(_OWORD *)v2;
  v9 = *a2;
  *(_QWORD *)(v3 + 320) = v7;
  *(_QWORD *)(v3 + 328) = v9;
  *(_QWORD *)(v3 + 352) = a2[3];
  *(_OWORD *)(v3 + 376) = v8;
  *(_QWORD *)(v3 + 392) = *(_QWORD *)(v2 + 32);
  return swift_task_switch();
}

uint64_t sub_19CEDE224()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *inited;

  v1 = *(void **)(v0 + 360);
  v2 = qword_1EE43D6A8;
  swift_unknownObjectRetain();
  if (v2 != -1)
  {
    swift_once();
    v1 = *(void **)(v0 + 360);
  }
  v3 = objc_msgSend(v1, sel_URLForKey_, qword_1EE465CF8);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1150);
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v3;
  inited[3] = sub_19CD04750;
  inited[4] = 0;
  *(_QWORD *)(v0 + 400) = sub_19CCDE250();

  return swift_task_switch();
}

uint64_t sub_19CEDE2FC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[36];
  v0[2] = v0;
  v0[3] = sub_19CEDE378;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCDCFA4();
  sub_19CCECFE4(v1, &qword_1ECEB0C60);
  return swift_continuation_await();
}

uint64_t sub_19CEDE378()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 408) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    sub_19CEDEE18(*(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 296));
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CEDE3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_19CCECFE4(v3, (uint64_t *)&unk_1ECEB3030);
    sub_19CEDEE60();
    swift_allocError();
    *v4 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 392);
    v8 = *(_QWORD *)(v0 + 328);
    v7 = *(_QWORD *)(v0 + 336);
    v10 = *(_OWORD *)(v0 + 360);
    v11 = *(_OWORD *)(v0 + 376);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 320), v3, v1);
    *(_OWORD *)(v0 + 200) = v10;
    *(_OWORD *)(v0 + 216) = v11;
    *(_QWORD *)(v0 + 232) = v6;
    *(_QWORD *)(v0 + 240) = v8;
    *(_QWORD *)(v0 + 248) = v7;
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v9;
    *(_QWORD *)v9 = v0;
    *(_QWORD *)(v9 + 8) = sub_19CEDE5CC;
    *(_OWORD *)(v9 + 304) = *(_OWORD *)(v0 + 240);
    *(_QWORD *)(v9 + 320) = *(_QWORD *)(v0 + 200);
    return swift_task_switch();
  }
}

uint64_t sub_19CEDE568()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEDE5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 424) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 432) = a2;
    *(_QWORD *)(v6 + 440) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_19CEDE644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 312);
  v12 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 272);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D052350;
  *(_QWORD *)(v9 + 32) = v1;
  *(_QWORD *)(v9 + 40) = v2;
  *(_QWORD *)(v9 + 48) = v3;
  *(_QWORD *)(v9 + 56) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, *MEMORY[0x1E0CAFD78], v7);
  sub_19CD41144();
  swift_bridgeObjectRetain();
  sub_19CFDEDBC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v5, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEDE77C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_19CEDE7EC()
{
  unint64_t result;

  result = qword_1EE4414D0;
  if (!qword_1EE4414D0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for SilverBulletJetPackAssetRequest, &type metadata for SilverBulletJetPackAssetRequest);
    atomic_store(result, (unint64_t *)&qword_1EE4414D0);
  }
  return result;
}

uint64_t sub_19CEDE830(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = a1[1];
  v2[38] = *a1;
  v2[39] = v3;
  v2[40] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CEDE854()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *inited;

  v1 = *(void **)(v0 + 320);
  v2 = qword_1EE43D6A0;
  swift_unknownObjectRetain();
  if (v2 != -1)
  {
    swift_once();
    v1 = *(void **)(v0 + 320);
  }
  v3 = objc_msgSend(v1, sel_dictionaryForKey_, qword_1EE465CF0);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1FF0);
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v3;
  inited[3] = sub_19CD04508;
  inited[4] = 0;
  *(_QWORD *)(v0 + 328) = sub_19CF6DB6C();

  return swift_task_switch();
}

uint64_t sub_19CEDE92C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 36;
  v0[2] = v0;
  v0[3] = sub_19CEDE9A8;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD1EED4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43D1C0);
  return swift_continuation_await();
}

uint64_t sub_19CEDE9A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 336) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 344) = *(_QWORD *)(v1 + 288);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CEDEA24()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v13;

  v1 = (_OWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 344);
  if (!v2)
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
LABEL_12:
    sub_19CCECFE4(v0 + 240, &qword_1ECEB3370);
    goto LABEL_13;
  }
  v3 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 280) = v3;
  swift_bridgeObjectRetain();
  sub_19CFE00C4();
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_19CD20240(v0 + 200), (v5 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v2 + 56) + 32 * v4, v0 + 240);
  }
  else
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19CD20334(v0 + 200);
  if (!*(_QWORD *)(v0 + 264))
    goto LABEL_12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 296);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = sub_19CD3FD1C(0x65756C6176, 0xE500000000000000);
      if ((v8 & 1) != 0)
      {
        v9 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v7);
        v10 = *v9;
        v11 = v9[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v11);
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_13:
  sub_19CEDEE60();
  swift_allocError();
  *v13 = 1;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEDEBD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEDEC04(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CE025F8;
  return SilverBulletJetPackAssetFetcher._fetch(_:candidate:)(a1, a2, a3);
}

void destroy for SilverBulletJetPackAssetFetcher(id *a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

_QWORD *initializeWithCopy for SilverBulletJetPackAssetFetcher(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7 = v4;
  v8 = v5;
  v9 = v6;
  return a1;
}

_QWORD *assignWithCopy for SilverBulletJetPackAssetFetcher(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  v7 = (void *)a1[3];
  v8 = (void *)a2[3];
  a1[3] = v8;
  v9 = v8;

  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for SilverBulletJetPackAssetFetcher(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetFetcher()
{
  return &type metadata for SilverBulletJetPackAssetFetcher;
}

uint64_t sub_19CEDEE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19CEDEE60()
{
  unint64_t result;

  result = qword_1EE4414E0;
  if (!qword_1EE4414E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F5E0, &type metadata for SilverBulletJetPackAssetFetcherError);
    atomic_store(result, &qword_1EE4414E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SilverBulletJetPackAssetFetcherError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CEDEEF0 + 4 * byte_19D05F505[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CEDEF24 + 4 * asc_19D05F500[v4]))();
}

uint64_t sub_19CEDEF24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEDEF2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEDEF34);
  return result;
}

uint64_t sub_19CEDEF40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEDEF48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CEDEF4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEDEF54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SilverBulletJetPackAssetFetcherError()
{
  return &type metadata for SilverBulletJetPackAssetFetcherError;
}

unint64_t sub_19CEDEF74()
{
  unint64_t result;

  result = qword_1EE4414F0;
  if (!qword_1EE4414F0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05F5B8, &type metadata for SilverBulletJetPackAssetFetcherError);
    atomic_store(result, (unint64_t *)&qword_1EE4414F0);
  }
  return result;
}

uint64_t static PipelinePhase<>.decodeString(with:)@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_19CFDF5CC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v8 = MEMORY[0x1E0C80A78](v4, v7);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v8);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_19CEADEA8;
  *(_QWORD *)(result + 24) = v10;
  *a2 = sub_19CEDF554;
  a2[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_19CEDF0A4(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;

  v4 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v4, v5);
  v16 = *a1;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_19CEB7D48();
  v8 = sub_19CFDF59C();
  v10 = v9;
  if (v9)
  {
    v11 = v8;
    v12 = 1;
  }
  else
  {
    sub_19CEDF8FC();
    v11 = swift_allocError();
    v12 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE436BA8);
  v13 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v10;
  *(_BYTE *)(v13 + 40) = v12;
  return v13;
}

uint64_t sub_19CEDF1C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19CFDF5CC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t static PipelinePhase<>.convertToJSONObject()@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_19CEDF268;
  *(_QWORD *)(result + 24) = 0;
  *a1 = sub_19CEDF55C;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_19CEDF268@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;
  unint64_t *v7;
  char v8;
  uint64_t v9;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = *a1;
  v4 = a1[1];
  sub_19CD3BE5C(*a1, v4);
  if (qword_1EE43D1E0 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465C90, *(uint64_t *)algn_1EE465C98);
  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
    v7 = (unint64_t *)&unk_1ECEB2F00;
LABEL_9:
    v18 = sub_19CCE5204(0, v7);
    *(_QWORD *)&v17 = v6;
LABEL_10:
    sub_19CD433C0(&v17, v19);
    a2[3] = (uint64_t)&type metadata for FoundationValue;
    a2[4] = (uint64_t)&off_1E3DCC5B0;
    v9 = swift_allocObject();
    *a2 = v9;
    sub_19CD436B0((uint64_t)v19, v9 + 16);
    sub_19CD3BE18(v3, v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  if (qword_1EE43D2D8 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465CD0, *(uint64_t *)algn_1EE465CD8);
  if ((v8 & 1) != 0)
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    v7 = (unint64_t *)&qword_1ECEB1710;
    goto LABEL_9;
  }
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_19CFDEE58();
  v16 = 0;
  v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 4, &v16);

  v14 = v16;
  if (v13)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  v15 = v14;
  sub_19CFDEC9C();

  swift_willThrow();
  return sub_19CD3BE18(v3, v4);
}

uint64_t static DataDecodingError.== infix(_:_:)()
{
  return 1;
}

uint64_t DataDecodingError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t DataDecodingError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CEDF530()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEDF554(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEAD840(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CEDF55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CEDF71C(v2, v3);
  swift_release();
  return v4;
}

unint64_t sub_19CEDF5B8()
{
  unint64_t result;

  result = qword_1EE4414F8;
  if (!qword_1EE4414F8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for DataDecodingError, &type metadata for DataDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EE4414F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DataDecodingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEDF63C + 4 * byte_19D05F620[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEDF65C + 4 * byte_19D05F625[v4]))();
}

_BYTE *sub_19CEDF63C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEDF65C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEDF664(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEDF66C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEDF674(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEDF67C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DataDecodingError()
{
  return &type metadata for DataDecodingError;
}

uint64_t sub_19CEDF698(__int128 *a1, void (*a2)(_QWORD *__return_ptr, __int128 *))
{
  _QWORD v3[5];
  __int128 v4;

  v4 = *a1;
  a2(v3, &v4);
  sub_19CFB9D78((uint64_t)v3);
  return sub_19CD3E3F8((uint64_t)v3);
}

uint64_t sub_19CEDF71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v8[4];
  _BYTE v9[48];
  _BYTE v10[24];
  ValueMetadata *v11;
  _UNKNOWN **v12;

  v11 = &type metadata for SyncTaskScheduler;
  v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = MEMORY[0x1E0DEE9D8];
  v9[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4400A8);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v4 + 16) = v5;
  sub_19CE744EC((uint64_t)v8, v4 + 24);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  v8[0] = sub_19CEDF884;
  v8[1] = v6;
  v8[2] = sub_19CEDF890;
  v8[3] = v4;
  sub_19CCD5B84((uint64_t)v10, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0D70();
  sub_19CEDF898((uint64_t)v8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v4;
}

uint64_t sub_19CEDF858()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEDF884(__int128 *a1)
{
  uint64_t v1;

  return sub_19CEDF698(a1, *(void (**)(_QWORD *__return_ptr, __int128 *))(v1 + 16));
}

void sub_19CEDF890(void *a1)
{
  sub_19CF4C9B0(a1);
}

uint64_t sub_19CEDF898(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440CF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CEDF8D8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_19CEDF8FC()
{
  unint64_t result;

  result = qword_1EE441500;
  if (!qword_1EE441500)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for DataDecodingError, &type metadata for DataDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EE441500);
  }
  return result;
}

uint64_t CookieProvider.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;
  _BYTE v9[40];

  v2 = v1;
  sub_19CCD5B84(v2, (uint64_t)v9);
  v4 = (objc_class *)type metadata accessor for JSCookieProviderObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1E3DD1EC0;
  *a1 = v6;
  return result;
}

uint64_t sub_19CEDF9D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  id v5;
  id v6;
  uint64_t result;
  objc_super v8;
  _BYTE v9[40];

  v2 = v1;
  sub_19CCD5B84(v2, (uint64_t)v9);
  v4 = (objc_class *)type metadata accessor for JSCookieProviderObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  a1[3] = v4;
  a1[4] = &off_1E3DD1EC0;
  *a1 = v6;
  return result;
}

void *sub_19CEDFAA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_19CFE0394();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (id)MEMORY[0x1A1ADA390](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_name, v22);
        v16 = sub_19CFDF578();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_19CEDFC4C()
{
  unint64_t result;

  result = qword_1EE43B440;
  if (!qword_1EE43B440)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE43B440);
  }
  return result;
}

uint64_t sub_19CEDFC88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JSCookie();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CEDFCC4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
    return sub_19CFE0100();
  if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
    sub_19CFE01FC();
  return archive_entry_set_pathname();
}

uint64_t sub_19CEDFD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t next_header;
  int v14;
  _QWORD *v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  _QWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (archive_read_new())
  {
    if (archive_write_disk_new())
    {
      v24 = v7;
      v25 = a2;
      archive_write_disk_set_options();
      archive_read_support_format_all();
      v12 = swift_slowAlloc();
      sub_19CCD5B84(a1, (uint64_t)v27);
      v28 = a3;
      v29 = v12;
      v23 = v12;
      archive_read_open();
      v26 = 0;
      next_header = archive_read_next_header();
      v14 = next_header;
      if ((sub_19CE72414(next_header, (uint64_t)&unk_1E3DD1310) & 1) != 0)
      {
        if (v14 != 1)
        {
          while (1)
          {
            if (!v26 || !archive_entry_pathname())
            {
              sub_19CF134A4(0xD000000000000030, 0x800000019D075350);
              goto LABEL_15;
            }
            sub_19CFDF6B0();
            sub_19CFDED38();
            swift_bridgeObjectRelease();
            v17 = sub_19CD15E80();
            if (v3)
            {
              (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v24);
              sub_19CDDDA40((uint64_t)v27);
              MEMORY[0x1A1ADBE9C](v23, -1, -1);
              archive_write_close();
              goto LABEL_16;
            }
            if ((v17 & 1) == 0)
            {
              sub_19CEE025C();
              swift_allocError();
              *v22 = xmmword_19D05F740;
              swift_willThrow();
              goto LABEL_23;
            }
            v18 = sub_19CFDED8C();
            sub_19CEDFCC4(v18, v19);
            swift_bridgeObjectRelease();
            if (archive_write_header())
              break;
            sub_19CEE0C0C();
            (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v24);
            v20 = archive_read_next_header();
            if (v20 >= 2)
              goto LABEL_14;
            if (v20 == 1)
              goto LABEL_15;
          }
          sub_19CEE0B08();
LABEL_23:
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v24);
        }
      }
      else
      {
LABEL_14:
        sub_19CEE0B08();
        swift_bridgeObjectRelease();
      }
LABEL_15:
      sub_19CDDDA40((uint64_t)v27);
      MEMORY[0x1A1ADBE9C](v23, -1, -1);
      archive_write_close();
LABEL_16:
      archive_write_free();
    }
    else
    {
      sub_19CEE025C();
      swift_allocError();
      *v21 = 0;
      v21[1] = 0;
      swift_willThrow();
    }
    archive_read_close();
    return archive_read_free();
  }
  else
  {
    sub_19CEE025C();
    swift_allocError();
    *v15 = 0;
    v15[1] = 0;
    return swift_willThrow();
  }
}

unint64_t PackageSerializationError.errorDescription.getter()
{
  uint64_t v0;
  unint64_t result;

  result = 0xD000000000000019;
  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
      result = 0x206E776F6E6B6E55;
      break;
    case 1:
      return result;
    case 2:
      result = 0xD000000000000025;
      break;
    case 3:
      result = 0xD00000000000003CLL;
      break;
    case 4:
      result = 0xD000000000000016;
      break;
    default:
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFDF698();
      result = 0xD000000000000010;
      break;
  }
  return result;
}

unint64_t sub_19CEE025C()
{
  unint64_t result;

  result = qword_1EE441510;
  if (!qword_1EE441510)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackageSerializationError, &type metadata for PackageSerializationError);
    atomic_store(result, (unint64_t *)&qword_1EE441510);
  }
  return result;
}

unint64_t destroy for PackageSerializationError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9JetEngine25PackageSerializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for PackageSerializationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PackageSerializationError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PackageSerializationError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 5)
    return (v3 - 4);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PackageSerializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

uint64_t sub_19CEE04F8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_19CEE0518(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageSerializationError()
{
  return &type metadata for PackageSerializationError;
}

uint64_t sub_19CEE0558(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v3;
  char *v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v10;
  int v11;
  _BYTE v12[40];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (archive_write_new())
  {
    archive_write_add_filter_none();
    archive_write_set_format_ustar();
    sub_19CCD5B84(a2, (uint64_t)v12);
    archive_write_open();
    if (archive_read_disk_new())
    {
      v6 = getcwd(0, 0);
      if (v6)
      {
        v7 = v6;
        sub_19CFDED68();
        if (!v3)
        {
          if (v11)
          {
            sub_19CE907B4();
          }
          else
          {
            sub_19CEE0770(a3);
            if (chdir(v7))
              sub_19CF13494(0xD000000000000029, 0x800000019D075280);
          }
        }
        free(v7);
      }
      else
      {
        sub_19CE907B4();
      }
      archive_read_close();
      archive_read_free();
    }
    else
    {
      sub_19CEE025C();
      swift_allocError();
      *v10 = 0;
      v10[1] = 0;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    archive_write_close();
    return archive_write_free();
  }
  else
  {
    sub_19CEE025C();
    swift_allocError();
    *v8 = 0;
    v8[1] = 0;
    return swift_willThrow();
  }
}

uint64_t sub_19CEE0750()
{
  return 0;
}

uint64_t sub_19CEE0758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEE0D74(a2, a3, a4);
}

uint64_t sub_19CEE0768()
{
  return 0;
}

uint64_t sub_19CEE0770(size_t a1)
{
  uint64_t disk_open;
  uint64_t v3;
  _DWORD *v4;
  int next_header;
  int v6;
  uint64_t result;
  int v8;
  int v10;
  int v11;
  void *v12;
  ssize_t v13;
  uint64_t v14;
  ssize_t v15;
  ssize_t v16;
  __int128 *v17;
  __int128 v18;

  disk_open = archive_read_disk_open();
  if ((sub_19CE72414(disk_open, (uint64_t)&unk_1E3DD1408) & 1) == 0)
    return sub_19CEE0B08();
  v3 = 0;
  v4 = &unk_1E3DD1388;
  while (1)
  {
    next_header = archive_read_next_header();
    if (next_header)
      break;
    swift_bridgeObjectRelease();
    if (v3 > 2)
      goto LABEL_29;
LABEL_9:
    v8 = archive_write_header();
    if (v8 == -20 || v8 == 0)
    {
      if (!archive_entry_sourcepath())
      {
        sub_19CEE025C();
        swift_allocError();
        v18 = xmmword_19D05F750;
        goto LABEL_31;
      }
      v10 = sub_19CFDF230();
      if (v10 == -1)
        return sub_19CE907B4();
      v11 = v10;
      v12 = (void *)swift_slowAlloc();
      v13 = read(v11, v12, a1);
      if (v13 == -1)
      {
        if (MEMORY[0x1A1AD9460](-1, v14) != 21)
        {
LABEL_28:
          sub_19CE907B4();
          MEMORY[0x1A1ADBE9C](v12, -1, -1);
          return close(v11);
        }
      }
      else if (v13 >= 1)
      {
        archive_write_data();
        v15 = read(v11, v12, a1);
        if (v15 == -1)
          goto LABEL_28;
        v16 = v15;
        while (v16 >= 1)
        {
          archive_write_data();
          v16 = read(v11, v12, a1);
          if (v16 == -1)
            goto LABEL_28;
        }
      }
      MEMORY[0x1A1ADBE9C](v12, -1, -1);
      close(v11);
      v3 = 0;
      v4 = &unk_1E3DD13E0;
      if (archive_read_disk_descend())
        return sub_19CEE0B08();
    }
    else
    {
      if (v8 != -10)
        return sub_19CEE0B08();
      ++v3;
      v4 = &unk_1E3DD13E0;
    }
  }
  v6 = next_header;
  if (v4[9] == next_header)
  {
    result = swift_bridgeObjectRelease();
    if (v6 == 1)
      return result;
    if (v3 > 2)
    {
LABEL_29:
      sub_19CEE025C();
      swift_allocError();
      v18 = xmmword_19D050770;
LABEL_31:
      *v17 = v18;
      return swift_willThrow();
    }
    goto LABEL_9;
  }
  sub_19CEE0B08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEE0A84()
{
  return 0;
}

uint64_t sub_19CEE0A8C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_19CEE0EFC(a2, a3);
}

uint64_t sub_19CEE0A98()
{
  return 0;
}

uint64_t sub_19CEE0AA0@<X0>(const char *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  _OWORD *v4;

  if (a1)
  {
    result = chdir(a1);
    *a2 = result;
  }
  else
  {
    sub_19CEE025C();
    swift_allocError();
    *v4 = xmmword_19D05F750;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_19CEE0B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  if (archive_error_string())
  {
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    sub_19CFDF6B0();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CF13494(0xD00000000000001BLL, 0x800000019D0752B0);
    swift_bridgeObjectRelease();
    v0 = sub_19CFDF6B0();
    v2 = v1;
    sub_19CEE025C();
    swift_allocError();
    *v3 = v0;
    v3[1] = v2;
  }
  else
  {
    sub_19CEE025C();
    swift_allocError();
    *v4 = 0;
    v4[1] = 0;
  }
  return swift_willThrow();
}

uint64_t sub_19CEE0C0C()
{
  int data_block;
  int v2;

  data_block = archive_read_data_block();
  if (data_block)
  {
    if (data_block == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  if ((archive_write_data_block() & 0x8000000000000000) == 0)
  {
    while (1)
    {
      v2 = archive_read_data_block();
      if (v2)
        break;
      swift_bridgeObjectRelease();
      if (archive_write_data_block() < 0)
        return sub_19CEE0B08();
    }
    if (v2 == 1)
      return swift_bridgeObjectRelease();
LABEL_9:
    sub_19CEE0B08();
    return swift_bridgeObjectRelease();
  }
  return sub_19CEE0B08();
}

uint64_t sub_19CEE0D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  if (!a1)
    goto LABEL_5;
  sub_19CCD5B84(a1, (uint64_t)v8);
  sub_19CCD14C4(v8, (uint64_t)v9);
  if (!a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
LABEL_5:
    sub_19CF13494(0xD000000000000038, 0x800000019D0752D0);
    return -1;
  }
  v5 = v10;
  v6 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a3, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return a3;
}

uint64_t sub_19CEE0ED0()
{
  return archive_entry_set_pathname();
}

uint64_t sub_19CEE0EFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
  {
    sub_19CEE1048(a1, (uint64_t)v8);
    v3 = v9;
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v5 = v12;
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32))(v12, v11, v3, v4);
    if (a2)
      *a2 = v5;
    sub_19CDDDA40((uint64_t)v8);
  }
  else
  {
    sub_19CF13494(0xD000000000000038, 0x800000019D0752D0);
    return -1;
  }
  return v6;
}

uint64_t sub_19CEE1048(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

uint64_t initializeWithCopy for PackageSerialization.DeserializationClientData(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for PackageSerialization.DeserializationClientData(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

ValueMetadata *type metadata accessor for PackageSerialization.DeserializationClientData()
{
  return &type metadata for PackageSerialization.DeserializationClientData;
}

uint64_t sub_19CEE1164()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___JEMediaActivity_type;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_19CEE11F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___JEMediaActivity_type);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_19CEE1238())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_19CEE12C4()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_19CEE1370(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_19CEE13C0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_19CEE1428())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_19CEE1480()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 216);
}

id MediaActivity.__allocating_init(type:playlistItem:pipeline:topic:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;

  v11 = (char *)objc_allocWithZone(v5);
  swift_getObjectType();
  return sub_19CEE2FC8(a1, a2, a3, a4, a5, v11);
}

id MediaActivity.init(type:playlistItem:pipeline:topic:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;

  swift_getObjectType();
  return sub_19CEE2FC8(a1, a2, a3, a4, a5, v5);
}

char *sub_19CEE15E4(unint64_t a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  id v6;
  char *result;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  unint64_t v27;
  BOOL v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[32];
  __int128 v32;
  __int128 v33;
  char v34;
  _QWORD v35[3];
  uint64_t v36;
  _QWORD *v37;

  v3 = (id *)(v1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  v4 = *v3;
  v5 = 0;
  if ((objc_msgSend(*v3, sel_respondsToSelector_, sel_startOverallPosition) & 1) != 0)
    v5 = objc_msgSend(v4, sel_startOverallPosition);
  v6 = *v3;
  if ((objc_msgSend(v6, sel_respondsToSelector_, sel_startPosition) & 1) != 0)
  {
    result = (char *)objc_msgSend(v6, sel_startPosition);
    if ((unint64_t)v5 <= a1)
    {
LABEL_19:
      v27 = a1 - (_QWORD)v5;
      if (a1 < (unint64_t)v5)
      {
        __break(1u);
      }
      else
      {
        v28 = __CFADD__(v27, result);
        result += v27;
        if (!v28)
          return result;
      }
      __break(1u);
      return result;
    }
  }
  else if ((unint64_t)v5 <= a1)
  {
    result = 0;
    goto LABEL_19;
  }
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v8 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
  v10 = v8;
  v37 = sub_19CD40918(0, 98, 0, MEMORY[0x1E0DEE9D8]);
  v11._countAndFlagsBits = 0xD00000000000003BLL;
  v11._object = (void *)0x800000019D0753D0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  v12 = MEMORY[0x1E0DEE190];
  v36 = MEMORY[0x1E0DEE190];
  v35[0] = a1;
  sub_19CD40794((uint64_t)v35, (uint64_t)v31);
  v29 = 0u;
  v30 = 0u;
  sub_19CD40658((uint64_t)v31, (uint64_t)&v29);
  v34 = 1;
  v32 = v29;
  v33 = v30;
  v13 = v37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v32;
  v18 = v33;
  *((_BYTE *)v16 + 64) = v34;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v37 = v13;
  sub_19CCECFE4((uint64_t)v35, &qword_1ECEB3370);
  v19._object = (void *)0x800000019D075410;
  v19._countAndFlagsBits = 0xD000000000000025;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v36 = v12;
  v35[0] = v5;
  sub_19CD40794((uint64_t)v35, (uint64_t)v31);
  v29 = 0u;
  v30 = 0u;
  sub_19CD40658((uint64_t)v31, (uint64_t)&v29);
  v34 = 1;
  v32 = v29;
  v33 = v30;
  v20 = v37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[5 * v22];
  v24 = v32;
  v25 = v33;
  *((_BYTE *)v23 + 64) = v34;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  v37 = v20;
  sub_19CCECFE4((uint64_t)v35, &qword_1ECEB3370);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(_QWORD *)(v9 + 32) = v37;
  *(_QWORD *)&v32 = v10;
  LOBYTE(v29) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v29);

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19CEE19A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  return sub_19CEE1A34(a1, a2, a3, a4, a5, a6, a7, (uint64_t)JEMediaActivityFieldNameStartType, (uint64_t)JEMediaActivityFieldNameStartReason, (uint64_t)JEMediaActivityFieldValueActionTypeStart, (void (*)(uint64_t, uint64_t, unint64_t))sub_19CEF0A0C);
}

uint64_t sub_19CEE19F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  return sub_19CEE1A34(a1, a2, a3, a4, a5, a6, a7, (uint64_t)JEMediaActivityFieldNameStopType, (uint64_t)JEMediaActivityFieldNameStopReason, (uint64_t)JEMediaActivityFieldValueActionTypeStop, (void (*)(uint64_t, uint64_t, unint64_t))sub_19CEF0BF4);
}

uint64_t sub_19CEE1A34(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v11;
  uint64_t inited;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  _QWORD *v40;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D055650;
  *(_QWORD *)(inited + 32) = sub_19CFDF578();
  *(_QWORD *)(inited + 40) = v18;
  v19 = sub_19CEE15E4(a1);
  v20 = MEMORY[0x1E0DEE190];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEE190];
  *(_QWORD *)(inited + 48) = v19;
  *(_QWORD *)(inited + 80) = sub_19CFDF578();
  *(_QWORD *)(inited + 88) = v21;
  *(_QWORD *)(inited + 120) = v20;
  *(_QWORD *)(inited + 96) = a1;
  *(_QWORD *)(inited + 128) = sub_19CFDF578();
  *(_QWORD *)(inited + 136) = v22;
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 144) = a2;
  *(_QWORD *)(inited + 152) = a3;
  *(_QWORD *)(inited + 176) = sub_19CFDF578();
  *(_QWORD *)(inited + 184) = v23;
  *(_QWORD *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  *(_QWORD *)(inited + 192) = a4;
  *(_QWORD *)(inited + 200) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_19CD30650(inited);
  if (a6)
    v25 = a6;
  else
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_19CED518C(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_19CED518C((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v25[v27 + 4] = v24;
  v28 = (unint64_t *)(v11 + OBJC_IVAR___JEMediaActivity_type);
  swift_beginAccess();
  v29 = sub_19CEE1D0C(*v28);
  v31 = v25[2];
  v30 = v25[3];
  if (v31 >= v30 >> 1)
    v25 = sub_19CED518C((_QWORD *)(v30 > 1), v31 + 1, 1, v25);
  v25[2] = v31 + 1;
  v25[v31 + 4] = v29;
  v40 = v25;
  sub_19CEE3254((uint64_t *)&v40);
  v32 = sub_19CEF1DC4((uint64_t)v40);
  swift_bridgeObjectRelease();
  sub_19CD40794(a7, (uint64_t)v38);
  if (v39)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436FA8);
    if (swift_dynamicCast())
      v33 = v37;
    else
      v33 = 0;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v38, &qword_1ECEB3370);
    v33 = 0;
  }
  a11(v32, v33, *v28);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_19CEE1D0C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 > 1)
    return sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v1 = sub_19CFDF578();
  v3 = v2;
  v4 = sub_19CFDF578();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  *(_QWORD *)(inited + 32) = sub_19CFDF578();
  *(_QWORD *)(inited + 40) = v8;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 80) = sub_19CFDF578();
  *(_QWORD *)(inited + 88) = v10;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 104) = v6;
  return sub_19CD30650(inited);
}

uint64_t sub_19CEE1E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _OWORD v22[2];

  v14 = sub_19CFDF578();
  v16 = v15;
  if (a5)
  {
    v17 = sub_19CFDF578();
    a5 = v18;
    if (!a6)
      goto LABEL_4;
    goto LABEL_3;
  }
  v17 = 0;
  if (a6)
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    a6 = sub_19CFDF86C();
  }
LABEL_4:
  if (a7)
  {
    v19 = a1;
    swift_unknownObjectRetain();
    sub_19CFE004C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
    v20 = a1;
  }
  a8(a3, v14, v16, v17, a5, a6, v22);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_19CCECFE4((uint64_t)v22, &qword_1ECEB3370);
}

double sub_19CEE1F78@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    swift_retain();
    v3 = sub_19CEE2E94((uint64_t)sub_19CEE1FF8, 0);
    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436FA8);
    swift_release();
    *(_QWORD *)a1 = v3;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_19CEE1FF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v4 = sub_19CEE2708(v2, v3);
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_19CEE2160()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CEE21D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CEE2248(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[48];
  _QWORD v12[5];

  if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    v7 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    swift_retain();
    v12[3] = v7;
    v12[4] = &protocol witness table for OS_dispatch_queue;
    v12[0] = sub_19CFDFDB8();
    v10[0] = sub_19CDB7B30;
    v10[1] = v5;
    v10[2] = sub_19CEE3514;
    v10[3] = v6;
    sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
    v11[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    v9 = swift_bridgeObjectRetain();
    a1(v9);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CEE23C4(void (*a1)(uint64_t), uint64_t a2)
{
  char *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v11;
  char *v12;
  _QWORD v13[4];
  _BYTE v14[48];
  _QWORD v15[5];

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  if (*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 224))
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_19CEE351C;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_19CEE351C;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    v9 = v2;
    swift_retain();
    swift_retain();
    v15[3] = v8;
    v15[4] = &protocol witness table for OS_dispatch_queue;
    v15[0] = sub_19CFDFDB8();
    v13[0] = sub_19CDB7B30;
    v13[1] = v6;
    v13[2] = sub_19CEE3514;
    v13[3] = v7;
    sub_19CCD5B84((uint64_t)v15, (uint64_t)v14);
    v14[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v13, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    return swift_release();
  }
  else
  {
    v11 = v2;
    swift_retain_n();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_19CEE3B34((uint64_t)v12, a1, a2);
    swift_release();

    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void sub_19CEE25C4(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);

}

id MediaActivity.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MediaActivity.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MediaActivity.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaActivity();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19CEE2708(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_19CEE2858((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, v3);
    if (v2)
      swift_willThrow();
    else
      return v7;
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v3 = sub_19CEE2858((uint64_t)v8, v5, v3);
    MEMORY[0x1A1ADBE9C](v8, -1, -1);
  }
  return v3;
}

uint64_t sub_19CEE2858(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  _BYTE v31[32];
  uint64_t v32;

  v25 = (unint64_t *)result;
  v26 = 0;
  v3 = 0;
  v32 = a3;
  v6 = *(_QWORD *)(a3 + 64);
  v4 = a3 + 64;
  v5 = v6;
  v7 = 1 << *(_BYTE *)(v4 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v5;
  v27 = v4;
  v28 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
LABEL_4:
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v3 << 6);
    }
    else
    {
      v12 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_39;
      if (v12 >= v28)
        return sub_19CEE2B50(v25, a2, v26, v32);
      v13 = *(_QWORD *)(v27 + 8 * v12);
      ++v3;
      if (!v13)
      {
        v3 = v12 + 1;
        if (v12 + 1 >= v28)
          return sub_19CEE2B50(v25, a2, v26, v32);
        v13 = *(_QWORD *)(v27 + 8 * v3);
        if (!v13)
        {
          v3 = v12 + 2;
          if (v12 + 2 >= v28)
            return sub_19CEE2B50(v25, a2, v26, v32);
          v13 = *(_QWORD *)(v27 + 8 * v3);
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v28)
              return sub_19CEE2B50(v25, a2, v26, v32);
            v13 = *(_QWORD *)(v27 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                v3 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_40;
                if (v3 >= v28)
                  return sub_19CEE2B50(v25, a2, v26, v32);
                v13 = *(_QWORD *)(v27 + 8 * v3);
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
            }
            v3 = v14;
          }
        }
      }
LABEL_19:
      v9 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v3 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    sub_19CD436B0(*(_QWORD *)(v32 + 56) + 32 * v11, (uint64_t)v31);
    v29[0] = v17;
    v29[1] = v16;
    sub_19CD436B0((uint64_t)v31, (uint64_t)&v30);
    if (*(_QWORD *)"dsId" != v17 || v16 != 0xE400000000000000)
    {
      result = sub_19CFE06A0();
      if ((result & 1) == 0)
        break;
    }
LABEL_34:
    swift_bridgeObjectRetain_n();
    swift_arrayDestroy();
    sub_19CCECFE4((uint64_t)v29, &qword_1EE43BB68);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    result = swift_bridgeObjectRelease();
    *(unint64_t *)((char *)v25 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    if (__OFADD__(v26++, 1))
    {
      __break(1u);
      return sub_19CEE2B50(v25, a2, v26, v32);
    }
  }
  v19 = &unk_1E3DCB0B0;
  v20 = 1;
  while (1)
  {
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (*(v19 - 1) == v17 && *v19 == v16)
      goto LABEL_34;
    result = sub_19CFE06A0();
    if ((result & 1) != 0)
      goto LABEL_34;
    v19 += 2;
    ++v20;
    if (v21 == 3)
    {
      swift_bridgeObjectRetain_n();
      swift_arrayDestroy();
      sub_19CCECFE4((uint64_t)v29, &qword_1EE43BB68);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      result = swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_19CEE2B50(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _OWORD v32[2];
  _OWORD v33[2];

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2F10);
  result = sub_19CFE03B8();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v30)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v30)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v30)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v30)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v30)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_19CD433C0(v33, v32);
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    result = (uint64_t)sub_19CD433C0(v32, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v23));
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_19CEE2E10(__int128 *a1, void (*a2)(uint64_t *__return_ptr, __int128 *))
{
  uint64_t v3;
  __int128 v4;

  v4 = *a1;
  a2(&v3, &v4);
  sub_19CFBF618(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEE2E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436FA8);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CEE408C;
  v9[1] = v7;
  v9[2] = sub_19CEE4098;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0B50);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

id sub_19CEE2FC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  objc_super v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[4];

  type metadata accessor for WrappedMetricsPipeline();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    *(_QWORD *)&a6[OBJC_IVAR___JEMediaActivity_type] = a1;
    *(_QWORD *)&a6[OBJC_IVAR___JEMediaActivity_playlistItem] = a2;
    sub_19CD50F74(v12 + OBJC_IVAR___JEWrappedMetricsPipeline_pipeline, (uint64_t)&v30);
    type metadata accessor for MediaActivityPipelineHandler();
    v13 = swift_allocObject();
    *(_BYTE *)(v13 + 216) = 0;
    *(_QWORD *)(v13 + 224) = 0;
    *(_QWORD *)(v13 + 232) = 0;
    v14 = a6;
    swift_unknownObjectRetain();
    v15 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 240) = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v13 + 248) = sub_19CD30650(v15);
    v16 = v39;
    *(_OWORD *)(v13 + 144) = v38;
    *(_OWORD *)(v13 + 160) = v16;
    *(_OWORD *)(v13 + 176) = v40;
    *(_BYTE *)(v13 + 192) = v41;
    v17 = v35;
    *(_OWORD *)(v13 + 80) = v34;
    *(_OWORD *)(v13 + 96) = v17;
    v18 = v37;
    *(_OWORD *)(v13 + 112) = v36;
    *(_OWORD *)(v13 + 128) = v18;
    v19 = v31;
    *(_OWORD *)(v13 + 16) = v30;
    *(_OWORD *)(v13 + 32) = v19;
    v20 = v33;
    *(_OWORD *)(v13 + 48) = v32;
    *(_OWORD *)(v13 + 64) = v20;
    *(_QWORD *)(v13 + 200) = a4;
    *(_QWORD *)(v13 + 208) = a5;
    *(_QWORD *)&v14[OBJC_IVAR___JEMediaActivity_pipelineHandler] = v13;

    v29.receiver = v14;
    v29.super_class = (Class)type metadata accessor for MediaActivity();
    v21 = objc_msgSendSuper2(&v29, sel_init);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v22 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v24 = swift_allocObject();
    v25 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v24 + 16) = xmmword_19D0522A0;
    v42[3] = v25;
    v42[0] = 0xD00000000000006ALL;
    v42[1] = 0x800000019D075540;
    v30 = 0u;
    v31 = 0u;
    v26 = v22;
    sub_19CD40658((uint64_t)v42, (uint64_t)&v30);
    *(_BYTE *)(v24 + 64) = 0;
    v27 = v31;
    *(_OWORD *)(v24 + 32) = v30;
    *(_OWORD *)(v24 + 48) = v27;
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)&v30 = v26;
    LOBYTE(v42[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)v42);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for MediaActivity();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v21;
}

uint64_t sub_19CEE3254(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t inited;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  __int128 v27;
  __int128 v28;

  v2 = sub_19CFDEF84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDF578();
  v9 = v8;
  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 16);
  if (v11)
  {
    v26 = a1;
    swift_bridgeObjectRetain();
    for (i = 0; i != v11; ++i)
    {
      v13 = *(_QWORD *)(v10 + 8 * i + 32);
      if (*(_QWORD *)(v13 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = sub_19CD3FD1C(v7, v9);
        if ((v15 & 1) != 0)
        {
          sub_19CD436B0(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v27);
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v28 + 1))
        {
          sub_19CCECFE4((uint64_t)&v27, &qword_1ECEB3370);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v27 = 0u;
        v28 = 0u;
        swift_bridgeObjectRetain();
      }
      sub_19CCECFE4((uint64_t)&v27, &qword_1ECEB3370);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    a1 = v26;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v18 = (void *)objc_opt_self();
  sub_19CFDEF78();
  v19 = (void *)sub_19CFDEF0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v20 = objc_msgSend(v18, sel_serverTimeFromDate_, v19);

  *(_QWORD *)(inited + 72) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  *(_QWORD *)(inited + 48) = v20;
  v21 = sub_19CD30650(inited);
  v22 = (_QWORD *)*a1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_19CED518C(0, v22[2] + 1, 1, v22);
    v22 = (_QWORD *)result;
  }
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
  {
    result = (uint64_t)sub_19CED518C((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v22 = (_QWORD *)result;
  }
  v22[2] = v24 + 1;
  v22[v24 + 4] = v21;
  *a1 = (uint64_t)v22;
  return result;
}

uint64_t sub_19CEE34F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEE351C()
{
  uint64_t v0;

  return sub_19CEE3B34(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_19CEE3528(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[5];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  if (*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 224))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_19CEE3F94;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_19CEE3F94;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    _Block_copy(a2);
    swift_retain();
    v11[3] = v7;
    v11[4] = &protocol witness table for OS_dispatch_queue;
    v11[0] = sub_19CFDFDB8();
    v9[0] = sub_19CDB7B30;
    v9[1] = v5;
    v9[2] = sub_19CEE3514;
    v9[3] = v6;
    sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
    v10[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    swift_release();
  }
  else
  {
    _Block_copy(a2);
    swift_bridgeObjectRetain();
    v8 = (id)sub_19CFDF3B0();
    ((void (**)(_QWORD, id))a2)[2](a2, v8);
    swift_release();
    swift_bridgeObjectRelease();

  }
}

void sub_19CEE3714(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[5];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  if (*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 232))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_19CEE3F94;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_19CEE3F94;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    _Block_copy(a2);
    swift_retain();
    v11[3] = v7;
    v11[4] = &protocol witness table for OS_dispatch_queue;
    v11[0] = sub_19CFDFDB8();
    v9[0] = sub_19CDB38C4;
    v9[1] = v5;
    v9[2] = sub_19CEE3514;
    v9[3] = v6;
    sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
    v10[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    swift_release();
  }
  else
  {
    _Block_copy(a2);
    swift_bridgeObjectRetain();
    v8 = (id)sub_19CFDF3B0();
    ((void (**)(_QWORD, id))a2)[2](a2, v8);
    swift_release();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_19CEE3900(char *a1, void *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v11;
  char *v12;
  _QWORD v13[4];
  _BYTE v14[48];
  _QWORD v15[5];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a1;
  v5[3] = sub_19CEE3F94;
  v5[4] = v4;
  if (*(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 224))
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_19CEE40A0;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_19CEE40A0;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    _Block_copy(a2);
    v9 = a1;
    swift_retain();
    swift_retain();
    v15[3] = v8;
    v15[4] = &protocol witness table for OS_dispatch_queue;
    v15[0] = sub_19CFDFDB8();
    v13[0] = sub_19CDB7B30;
    v13[1] = v6;
    v13[2] = sub_19CEE3514;
    v13[3] = v7;
    sub_19CCD5B84((uint64_t)v15, (uint64_t)v14);
    v14[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v13, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    swift_release();
    return swift_release();
  }
  else
  {
    v11 = a1;
    swift_retain();
    _Block_copy(a2);
    v12 = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19CEE3714((uint64_t)v12, (void (**)(_QWORD, _QWORD))a2);
    swift_release_n();

    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CEE3B34(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[48];
  _QWORD v12[5];

  if (*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 232))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a2;
    *(_QWORD *)(v5 + 24) = a3;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = a3;
    v7 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    swift_retain_n();
    swift_retain();
    v12[3] = v7;
    v12[4] = &protocol witness table for OS_dispatch_queue;
    v12[0] = sub_19CFDFDB8();
    v10[0] = sub_19CDB7B30;
    v10[1] = v5;
    v10[2] = sub_19CEE3514;
    v10[3] = v6;
    sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
    v11[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CD1929C();
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB0B50);
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    v9 = swift_bridgeObjectRetain();
    a2(v9);
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for MediaActivity()
{
  return objc_opt_self();
}

uint64_t sub_19CEE3CC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___JEMediaActivity_type);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_19CEE3D14(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___JEMediaActivity_type);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_19CEE3D60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___JEMediaActivity_playlistItem);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for MediaActivity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaActivity.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MediaActivity.type.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MediaActivity.type.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MediaActivity.playlistItem.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MediaActivity.isStopped.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MediaActivity.__allocating_init(type:playlistItem:pipeline:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of MediaActivity.position(overallPosition:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MediaActivity.startedAt(overallPosition:type:reason:eventData:transitioningEventData:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MediaActivity.stoppedAt(overallPosition:type:reason:eventData:transitioningEventData:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MediaActivity.eventDataForTransitioningEvents()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MediaActivity.startMetricsFields()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MediaActivity.stopMetricsFields()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MediaActivity.postProcessedStartMetricsFields(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MediaActivity.postProcessedStopMetricsFields(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t sub_19CEE3F70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_19CEE3FC8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_19CFDF3B0();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_19CEE4024()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 16);
  sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEE4060()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEE408C(__int128 *a1)
{
  uint64_t v1;

  return sub_19CEE2E10(a1, *(void (**)(uint64_t *__return_ptr, __int128 *))(v1 + 16));
}

void sub_19CEE4098(void *a1)
{
  sub_19CF4C9F0(a1);
}

double static AutomationSemantics.menuItem(_:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)&v14[0] = &unk_1E3DD0170;
  *((_QWORD *)&v14[0] + 1) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_19CD4CE58(v10, (uint64_t)sub_19CD4D1F0, 0);
  v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a3, (uint64_t)v14);
  sub_19CD4C788(0, (uint64_t)v14, (uint64_t *)(inited + 32));
  sub_19CD40794(a4, (uint64_t)v14);
  sub_19CD4C788(1, (uint64_t)v14, (uint64_t *)(inited + 64));
  sub_19CD4C984(inited);
  result = *(double *)&v13;
  *a5 = v13;
  return result;
}

uint64_t sub_19CEE4244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unint64_t *a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  char *v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t result;
  int64_t *v16;
  int64_t v17;
  int64_t v18;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[9];
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  int64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  char *v139;
  _QWORD *v140;
  _OWORD v141[2];
  _OWORD v142[25];
  __int128 v143;
  __int128 v144;
  _OWORD v145[2];
  _QWORD v146[50];
  __int128 v147;
  __int128 v148;
  uint64_t v149;

  v9 = (char *)*a3;
  v11 = *a4;
  v10 = a4[1];
  v12 = type metadata accessor for PageRenderEvent();
  v13 = *(void **)((char *)v5 + *(int *)(v12 + 20));
  if (v13)
  {
    v14 = v13;
    return swift_willThrow();
  }
  LODWORD(v138) = (_DWORD)v9;
  v129 = v12;
  v16 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  v18 = *v16;
  v17 = v16[1];
  v136 = v17;
  if (v11 == v18 && v10 < v17)
  {
    __break(1u);
    goto LABEL_135;
  }
  if ((uint64_t)v11 < v18)
  {
LABEL_132:
    __break(1u);
  }
  else
  {
    v9 = v139;
    v134 = v18;
    v135 = v10;
    v130 = a1;
    v131 = a5;
    v132 = a2;
    if (qword_1ECEB0220 == -1)
      goto LABEL_9;
  }
  swift_once();
LABEL_9:
  v20 = qword_1ECEB50B8;
  v21 = *(void **)(qword_1ECEB50B8 + 32);
  objc_msgSend(v21, sel_lock);
  swift_beginAccess();
  v22 = *(_QWORD *)(v20 + 24);
  v23 = swift_bridgeObjectRetain();
  v24 = sub_19CEEE860(v23, v22);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v21, sel_unlock);
  MEMORY[0x1E0C80A78](v25, v26);
  v127[2] = v5;
  v127[3] = v134;
  v127[4] = v136;
  v127[5] = v11;
  v128 = v11;
  v127[6] = v135;
  v27 = v9;
  v28 = sub_19CEE52C0((uint64_t)sub_19CEE5938, (uint64_t)v127, v24);
  v29 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_19D052350;
  *(_QWORD *)(v30 + 32) = 0x707954746E657665;
  *(_QWORD *)(v30 + 40) = 0xE900000000000065;
  v31 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 48) = 0x646E655265676170;
  *(_QWORD *)(v30 + 56) = 0xEA00000000007265;
  *(_QWORD *)(v30 + 72) = v31;
  strcpy((char *)(v30 + 80), "eventVersion");
  *(_QWORD *)(v30 + 120) = MEMORY[0x1E0DEB418];
  *(_BYTE *)(v30 + 93) = 0;
  *(_WORD *)(v30 + 94) = -5120;
  *(_QWORD *)(v30 + 96) = 3;
  v11 = sub_19CD30650(v30);
  a2 = MEMORY[0x1E0DEE9E8];
  v149 = MEMORY[0x1E0DEE9E8];
  v9 = *(char **)(v28 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_62:
    if (qword_1ECEB0160 == -1)
    {
LABEL_63:
      v70 = sub_19CFE013C();
      if (*(_QWORD *)(v11 + 16) && (v72 = sub_19CD3FD1C(v70, v71), (v73 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v72, (uint64_t)&v147);
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      v74 = *((_QWORD *)&v148 + 1);
      sub_19CD3F190((uint64_t)&v147);
      if (v74)
      {
        v75 = v149;
        if (*(_QWORD *)(v149 + 16))
        {
          sub_19CDC2424();
          swift_allocError();
          *(_QWORD *)v76 = v75;
          *(_QWORD *)(v76 + 8) = 0;
          *(_BYTE *)(v76 + 16) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_107;
        }
      }
      v146[0] = a2;
      if (qword_1ECEB0280 != -1)
        swift_once();
      v77 = sub_19CFE013C();
      if (*(_QWORD *)(v11 + 16) && (v79 = sub_19CD3FD1C(v77, v78), (v80 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v79, (uint64_t)&v147);
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      v81 = *((_QWORD *)&v148 + 1);
      sub_19CD3F190((uint64_t)&v147);
      if (!v81)
      {
        v82 = sub_19CFE013C();
        sub_19CE8891C((uint64_t *)&v147, v82, v83);
        swift_bridgeObjectRelease();
      }
      if (qword_1ECEB02A8 != -1)
        swift_once();
      v84 = sub_19CFE013C();
      if (*(_QWORD *)(v11 + 16) && (v86 = sub_19CD3FD1C(v84, v85), (v87 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v86, (uint64_t)&v147);
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      v88 = *((_QWORD *)&v148 + 1);
      sub_19CD3F190((uint64_t)&v147);
      if (!v88)
      {
        v89 = sub_19CFE013C();
        if (*(_QWORD *)(v11 + 16) && (v91 = sub_19CD3FD1C(v89, v90), (v92 & 1) != 0))
        {
          sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v91, (uint64_t)&v147);
        }
        else
        {
          v147 = 0u;
          v148 = 0u;
        }
        swift_bridgeObjectRelease();
        v93 = *((_QWORD *)&v148 + 1);
        sub_19CD3F190((uint64_t)&v147);
        if (v93)
        {
          v94 = sub_19CFE013C();
          sub_19CE8891C((uint64_t *)&v147, v94, v95);
          swift_bridgeObjectRelease();
        }
      }
      v96 = sub_19CFE013C();
      if (*(_QWORD *)(v11 + 16) && (v98 = sub_19CD3FD1C(v96, v97), (v99 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v98, (uint64_t)&v147);
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      v100 = *((_QWORD *)&v148 + 1);
      sub_19CD3F190((uint64_t)&v147);
      if (!v100)
      {
        if (qword_1ECEB0298 != -1)
          swift_once();
        v101 = sub_19CFE013C();
        if (*(_QWORD *)(v11 + 16) && (v103 = sub_19CD3FD1C(v101, v102), (v104 & 1) != 0))
        {
          sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v103, (uint64_t)&v147);
        }
        else
        {
          v147 = 0u;
          v148 = 0u;
        }
        swift_bridgeObjectRelease();
        v105 = *((_QWORD *)&v148 + 1);
        sub_19CD3F190((uint64_t)&v147);
        if (!v105)
        {
          v106 = sub_19CFE013C();
          sub_19CE8891C((uint64_t *)&v147, v106, v107);
          swift_bridgeObjectRelease();
        }
      }
      v108 = v146[0];
      if (*(_QWORD *)(v146[0] + 16))
      {
        sub_19CDC2424();
        swift_allocError();
        *(_QWORD *)v109 = v108;
        *(_QWORD *)(v109 + 8) = 0;
        v110 = 3;
LABEL_106:
        *(_BYTE *)(v109 + 16) = v110;
LABEL_107:
        swift_willThrow();
LABEL_108:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v111 = sub_19CFE013C();
      if (*(_QWORD *)(v11 + 16))
      {
        v113 = sub_19CD3FD1C(v111, v112);
        if ((v114 & 1) != 0)
        {
          sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v113, (uint64_t)&v147);
        }
        else
        {
          v147 = 0u;
          v148 = 0u;
        }
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v148 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_126;
        v115 = *(double *)v142;
        v116 = sub_19CFE013C();
        if (*(_QWORD *)(v11 + 16) && (v118 = sub_19CD3FD1C(v116, v117), (v119 & 1) != 0))
        {
          sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v118, (uint64_t)&v147);
        }
        else
        {
          v147 = 0u;
          v148 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v148 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0 && *(double *)v142 - v115 >= 300000.0)
          {
            sub_19CDC2424();
            swift_allocError();
            *(_OWORD *)v109 = xmmword_19D053D30;
            v110 = 5;
            goto LABEL_106;
          }
LABEL_126:
          swift_bridgeObjectRetain();
          v120 = sub_19CE467A4((uint64_t)&unk_1E3DCCE98);
          swift_arrayDestroy();
          swift_bridgeObjectRelease();
          v121 = v131;
          v122 = v132;
          *v131 = v130;
          v121[1] = v122;
          *((_BYTE *)v121 + 16) = 0;
          v121[3] = v11;
          v121[4] = v120;
          v121[5] = a2;
          swift_bridgeObjectRetain();
          return swift_bridgeObjectRelease();
        }
      }
      sub_19CD3F190((uint64_t)&v147);
      goto LABEL_126;
    }
LABEL_135:
    swift_once();
    goto LABEL_63;
  }
  sub_19CD376A0((const void *)(v28 + 32), &v147);
  LOBYTE(v142[0]) = (_BYTE)v138;
  sub_19CD376A0(&v147, v146);
  sub_19CDE9E64((uint64_t)&v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD375C8);
  sub_19CE1C1F0(v146);
  sub_19CD376A0((const void *)(v28 + 32), v146);
  sub_19CD376A0(v146, v142);
  sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD375C8);
  sub_19CECBA78();
  v34 = v28;
  v133 = v28;
  if (v27)
  {
    sub_19CDE9E64((uint64_t)&v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
    return swift_bridgeObjectRelease();
  }
  v35 = v32;
  v36 = v33;
  v138 = v5;
  v139 = (char *)(v34 + 432);
  v137 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    v37 = v29;
    sub_19CD433C0(&v143, v145);
    sub_19CD436B0((uint64_t)v145, (uint64_t)v141);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v140 = (_QWORD *)v11;
    v5 = (_QWORD *)v11;
    v39 = sub_19CD3FD1C(v35, v36);
    v41 = v11;
    v11 = v39;
    v42 = *(_QWORD *)(v41 + 16);
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_129:
      swift_bridgeObjectRelease();
LABEL_130:
      swift_bridgeObjectRelease();
      v123 = (_QWORD *)((char *)v138 + *(int *)(v129 + 24));
      v124 = *v123;
      v125 = v123[1];
      *(_QWORD *)&v143 = v134;
      *((_QWORD *)&v143 + 1) = v136;
      *(_QWORD *)&v144 = v128;
      *((_QWORD *)&v144 + 1) = v135;
      sub_19CDE9B84(v124, v125, (uint64_t *)&v143);
      sub_19CDC2424();
      swift_allocError();
      *(_QWORD *)v126 = v35;
      *(_QWORD *)(v126 + 8) = v36;
      *(_BYTE *)(v126 + 16) = 0;
      swift_willThrow();
      sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
      sub_19CDE9E64((uint64_t)&v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v145);
      goto LABEL_108;
    }
    v45 = v40;
    if (*(_QWORD *)(v41 + 24) < v44)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v48 = v140;
      if ((v40 & 1) == 0)
        goto LABEL_18;
    }
    else
    {
      v5 = &v140;
      sub_19CD141BC();
      v48 = v140;
      if ((v45 & 1) == 0)
      {
LABEL_18:
        v48[(v11 >> 6) + 8] |= 1 << v11;
        v49 = (uint64_t *)(v48[6] + 16 * v11);
        *v49 = v35;
        v49[1] = v36;
        sub_19CD433C0(v141, (_OWORD *)(v48[7] + 32 * v11));
        v50 = v48[2];
        v51 = __OFADD__(v50, 1);
        v52 = v50 + 1;
        if (v51)
        {
          __break(1u);
          goto LABEL_132;
        }
        v11 = (unint64_t)v48;
        v48[2] = v52;
        v143 = 0u;
        v144 = 0u;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      }
    }
LABEL_22:
    sub_19CD433C0((_OWORD *)(v48[7] + 32 * v11), &v143);
    sub_19CD433C0(v141, (_OWORD *)(v48[7] + 32 * v11));
    v11 = (unint64_t)v48;
LABEL_23:
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v144 + 1))
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v145);
      sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
      swift_bridgeObjectRelease();
      sub_19CD3F190((uint64_t)&v143);
      v29 = v37;
      goto LABEL_36;
    }
    sub_19CD433C0(&v143, v142);
    sub_19CD436B0((uint64_t)v142, (uint64_t)&v143);
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v54 = *(_QWORD *)&v141[0];
      sub_19CD436B0((uint64_t)v145, (uint64_t)&v143);
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)&v143 = v54;
        sub_19CD2E5EC(*(uint64_t *)&v141[0]);
        *((_QWORD *)&v144 + 1) = v53;
        sub_19CD433C0(&v143, v141);
        v55 = swift_isUniquelyReferenced_nonNull_native();
        v140 = (_QWORD *)v11;
        sub_19CD13D40(v141, v35, v36, v55);
        v11 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v145);
        v29 = v37;
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
    }
    v29 = v37;
    if (qword_1ECEB0170 != -1)
      swift_once();
    *(_QWORD *)&v143 = sub_19CFE013C();
    *((_QWORD *)&v143 + 1) = v56;
    sub_19CFDF698();
    if (v143 == __PAIR128__(v36, v35))
      goto LABEL_32;
    v57 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_34;
    if (qword_1ECEB0290 != -1)
      swift_once();
    if (sub_19CFE013C() == v35 && v62 == v36)
      goto LABEL_32;
    v63 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v63 & 1) != 0)
      goto LABEL_34;
    if (qword_1ECEB0298 != -1)
      swift_once();
    if (sub_19CFE013C() == v35 && v64 == v36)
    {
LABEL_32:
      swift_bridgeObjectRelease();
    }
    else
    {
      v65 = sub_19CFE06A0();
      swift_bridgeObjectRelease();
      if ((v65 & 1) == 0)
      {
        if (qword_1ECEB0280 != -1)
          swift_once();
        if (sub_19CFE013C() == v35 && v66 == v36)
          goto LABEL_129;
        v67 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        if ((v67 & 1) != 0)
          goto LABEL_130;
        if (qword_1ECEB0160 != -1)
          swift_once();
        if (sub_19CFE013C() == v35 && v68 == v36)
          goto LABEL_129;
        v69 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        if ((v69 & 1) != 0)
          goto LABEL_130;
        sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
LABEL_34:
    sub_19CD436B0((uint64_t)v142, (uint64_t)&v143);
    v58 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v141[0] = v11;
    sub_19CD13D40(&v143, v35, v36, v58);
    v11 = *(_QWORD *)&v141[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
LABEL_35:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v142);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v145);
LABEL_36:
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      sub_19CDE9E64((uint64_t)&v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
      a2 = MEMORY[0x1E0DEE9E8];
      goto LABEL_62;
    }
    v59 = v139 + 400;
    sub_19CD376A0(v139, v146);
    sub_19CD376A0(v146, v142);
    sub_19CDE9E64((uint64_t)v146, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD375C8);
    sub_19CECBA78();
    v35 = v60;
    v36 = v61;
    v139 = v59;
  }
  sub_19CD13ED8(v44, isUniquelyReferenced_nonNull_native);
  v5 = v140;
  v46 = sub_19CD3FD1C(v35, v36);
  if ((v45 & 1) == (v47 & 1))
  {
    v11 = v46;
    v48 = v140;
    if ((v45 & 1) == 0)
      goto LABEL_18;
    goto LABEL_22;
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CEE52C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(_BYTE *);
  _BYTE v15[400];
  _BYTE v16[408];
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(_BYTE *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v9 = (char *)(a3 + 32);
    v14 = (uint64_t (*)(_BYTE *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      sub_19CD376A0(v9, v15);
      sub_19CD376A0(v15, v16);
      sub_19CDE9E64((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD375C8);
      v10 = v6(v16);
      if (v3)
      {
        sub_19CDE9E64((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
        swift_release();
        goto LABEL_15;
      }
      if ((v10 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v17 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19CE4A33C(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v17;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_19CE4A33C(v12 > 1, v13 + 1, 1);
          v8 = v17;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        result = (uint64_t)sub_19CD376A0(v15, (void *)(v8 + 400 * v13 + 32));
        v6 = v14;
      }
      else
      {
        result = sub_19CDE9E64((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CD4ABD8);
      }
      ++v7;
      v9 += 400;
      if (v5 == v7)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

id sub_19CEE545C()
{
  uint64_t v0;
  id result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE441538);
  v0 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = result;
  *(_QWORD *)(v0 + 24) = v2;
  qword_1EE465D00 = v0;
  return result;
}

uint64_t PageRenderEvent.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PageRenderEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEF84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = *(int *)(a3 + 20);
    v10 = *(void **)((char *)a2 + v9);
    v11 = v10;
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for MonotonicTimeReference() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = *(int *)(a3 + 20);
  v11 = *(void **)(a1 + v10);
  v12 = *(void **)(a2 + v10);
  v13 = v12;
  *(_QWORD *)(a1 + v10) = v12;

  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for PageRenderEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 20);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEE579C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for MonotonicTimeReference();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEE5828(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for MonotonicTimeReference();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_19CEE58A4(const void *a1)
{
  char v1;
  _BYTE v3[400];
  _BYTE v4[400];

  sub_19CD376A0(a1, v4);
  sub_19CD376A0(v4, v3);
  type metadata accessor for PageRenderEvent();
  sub_19CECB91C();
  return v1 & 1;
}

uint64_t sub_19CEE5938(const void *a1)
{
  return sub_19CEE58A4(a1) & 1;
}

uint64_t JSIntentRequest.init(intent:timeoutInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;

  v11 = a6 + *(int *)(type metadata accessor for JSIntentRequest(0, a4, a5, a4) + 36);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  *(_QWORD *)v11 = a2;
  *(_BYTE *)(v11 + 8) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for JSIntentRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSIntentRequest);
}

uint64_t JSIntentRequest.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JSIntentRequest.intent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*JSIntentRequest.intent.modify())()
{
  return nullsub_1;
}

uint64_t JSIntentRequest.timeoutInterval.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 36));
}

uint64_t JSIntentRequest.timeoutInterval.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 36);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*JSIntentRequest.timeoutInterval.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CEE5A64()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CEE5AD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v10;
    *(_BYTE *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_19CEE5B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19CEE5BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19CEE5C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19CEE5CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_19CEE5D20(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  v6 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v7 = (a2 - v5 + 255) >> (8 * v6);
  if (v6 < 4)
    v8 = v7 + 1;
  else
    v8 = 2;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_19CEE5D9C + 4 * byte_19D05F8E8[v10]))();
}

void sub_19CEE5E04(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v12 = 0u;
    if (v7 >= a2)
      goto LABEL_14;
  }
  else
  {
    v9 = (a3 - v7 + 255) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (v7 >= a2)
LABEL_14:
      __asm { BR              X11 }
  }
  if (v8 >= 4)
    v13 = ~v7 + a2;
  else
    v13 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v13;
  else
    *(_DWORD *)a1 = v13;
  __asm { BR              X10 }
}

void sub_19CEE5F14()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19CEE5F1C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19CEE5F24);
}

void sub_19CEE5F40()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_19CEE5F48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_19CEE5F50(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x19CEE5F58);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

ValueMetadata *type metadata accessor for StoreFrontHeaderFieldProvider()
{
  return &type metadata for StoreFrontHeaderFieldProvider;
}

uint64_t sub_19CEE5F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

JetEngine::ViewWillDisappearReason __swiftcall ViewWillDisappearReason.init(rawValue:)(JetEngine::ViewWillDisappearReason rawValue)
{
  JetEngine::ViewWillDisappearReason *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t ViewWillDisappearReason.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static ViewWillDisappearReason.unspecified.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6669636570736E75;
  a1[1] = 0xEB00000000646569;
}

void static ViewWillDisappearReason.poppedFromNavigationStack.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x800000019D070760;
}

void static ViewWillDisappearReason.sheetDismissed.getter(char *a1@<X8>)
{
  strcpy(a1, "sheetDismissed");
  a1[15] = -18;
}

void static ViewWillDisappearReason.background.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x756F72676B636162;
  a1[1] = 0xEA0000000000646ELL;
}

uint64_t dispatch thunk of ViewControllerPresenter.viewWillDisappear(forReason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidDisappear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ViewControllerPresenter.viewDidReceiveMemoryWarning()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void JSConditionalReference.__allocating_init(value:ownedBy:)(void *a1, _QWORD *a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v9[32];

  v4 = swift_allocObject();
  sub_19CD436B0((uint64_t)a2, (uint64_t)v9);
  sub_19CD15680();
  if (swift_dynamicCast())
  {

    sub_19CFAB974((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v5 = a1;
  v6 = sub_19CFE0688();
  v7 = objc_msgSend((id)objc_opt_self(), sel_managedValueWithValue_andOwner_, v5, v6);
  swift_unknownObjectRelease();

  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);

    *(_QWORD *)(v4 + 16) = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t JSConditionalReference.init(value:ownedBy:)(void *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  sub_19CEE620C(a1, a2);
  v4 = v3;

  return v4;
}

id JSConditionalReference.referent.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_value);
}

uint64_t JSConditionalReference.deinit()
{
  uint64_t v0;

  return v0;
}

void sub_19CEE620C(void *a1, _QWORD *a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v9[32];

  sub_19CD436B0((uint64_t)a2, (uint64_t)v9);
  sub_19CD15680();
  if ((swift_dynamicCast() & 1) != 0)
  {

    sub_19CFAB974((unint64_t)"JetEngine/JSConditionalReference.swift", 0x26uLL, 2, 0x1AuLL);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v5 = a1;
  v6 = sub_19CFE0688();
  v7 = objc_msgSend((id)objc_opt_self(), sel_managedValueWithValue_andOwner_, v5, v6);
  swift_unknownObjectRelease();

  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a2);
    *(_QWORD *)(v2 + 16) = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t method lookup function for JSConditionalReference()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSConditionalReference.__allocating_init(value:ownedBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PipelineBackoff.nextWaitInterval()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PipelineBackoff.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JSReference.referent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_19CEE6348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (qword_1ECEB2540 != -1)
    swift_once();
  v1 = qword_1ECEB23C0;
  v0 = *(_QWORD *)algn_1ECEB23C8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D052350;
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = 0xD00000000000001FLL;
  *(_QWORD *)(v2 + 56) = 0x800000019D075650;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v3 = sub_19CFDF4F4();
  v5 = v4;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  qword_1EE43BB88 = v3;
  *(_QWORD *)algn_1EE43BB90 = v5;
  return result;
}

uint64_t _s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0()
{
  _BYTE *v0;
  os_unfair_lock_s *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v7;

  if (qword_1ECEB1958 != -1)
    swift_once();
  v0 = (char *)off_1ECEB1948 + 16;
  v1 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_19CD3EA18(v0, &v7);
  os_unfair_lock_unlock(v1);
  v2 = v7;
  swift_release();
  if (v2 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0)
      return 0;
  }
  else if ((v2 & 1) == 0)
  {
    return 0;
  }
  if (qword_1ECEB2920 != -1)
    swift_once();
  if (qword_1EE43BAB0 != -1)
    swift_once();
  v3 = qword_1EE43BB88;
  v4 = *(_QWORD *)algn_1EE43BB90;
  swift_bridgeObjectRetain();
  v5 = sub_19CD1A8A8(v3, v4);
  swift_bridgeObjectRelease();
  if (v5 == 2)
    return 0;
  return v5 & 1;
}

ValueMetadata *type metadata accessor for ImpressionsTracking()
{
  return &type metadata for ImpressionsTracking;
}

uint64_t ClosureActionImplementation.init(scheduler:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCD14C4(a1, a2);
}

uint64_t ClosureActionImplementation.scheduler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

uint64_t ClosureActionImplementation.scheduler.setter(__int128 *a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_19CCD14C4(a1, v1);
}

uint64_t (*ClosureActionImplementation.scheduler.modify())()
{
  return nullsub_1;
}

uint64_t ClosureActionImplementation.perform(_:asPartOf:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = *a1;
  v9 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 16) = v11;
  *(_QWORD *)(v10 + 24) = v12;
  *(_BYTE *)(v10 + 32) = 0;
  sub_19CCD5B84(v4, (uint64_t)v18);
  v13 = v19;
  v14 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = v8;
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v15 + 56) = v9;
  *(_QWORD *)(v15 + 64) = v10;
  v16 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v16(sub_19CEE6828, v15, v13, v14);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  return v10;
}

void sub_19CEE6760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v5[6];

  v5[2] = a4;
  v5[3] = a5;
  (*(void (**)(uint64_t (*)(), _QWORD *, uint64_t))(*(_QWORD *)a1 + 104))(sub_19CD34AA4, v5, MEMORY[0x1E0DEE9C0] + 8);
  sub_19CFBC820(0);
}

uint64_t sub_19CEE67E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CEE6828()
{
  uint64_t *v0;

  sub_19CEE6760(v0[3], v0[4], v0[5], v0[6], v0[7]);
}

_UNKNOWN **sub_19CEE683C()
{
  return &protocol witness table for ClosureAction;
}

uint64_t type metadata accessor for ClosureActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClosureActionImplementation);
}

uint64_t sub_19CEE6858()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  id v16;
  _QWORD v17[4];
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;

  v1 = v0;
  v2 = *v0;
  v3 = swift_retain();
  sub_19CCFBBB0(&v22, v3);
  v4 = (uint64_t)v22;
  v5 = v23;
  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v6 = sub_19CCFBBB4(v4, v5, (uint64_t)v22);
  v7 = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    sub_19CFE0A6C();
    v13 = sub_19CDA6790((uint64_t)v22);
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    v14 = (void *)swift_allocError();
    *v15 = v13;
    swift_willThrow();
    v22 = v14;
    v16 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = v21;
      sub_19CFE0868();
      swift_bridgeObjectRelease();
      v19 = 0;
      v18 = 54;
    }
    else
    {

      v22 = 0;
      v23 = 0xE000000000000000;
      sub_19CFDF698();
      v21 = v14;
      sub_19CFE02E0();
      v19 = 0;
      v18 = 56;
    }
    result = sub_19CFE0340();
    __break(1u);
  }
  else
  {
    v9 = v0[2];
    MEMORY[0x1E0C80A78](v7, v8);
    v17[2] = v1;
    v17[3] = v4;
    v18 = v5;
    type metadata accessor for DependencyCell.ObjectState(0, *(_QWORD *)(v2 + 80), v10, v11);
    swift_retain();
    sub_19CDF62F4((void (*)(uint64_t))sub_19CEE7C74, (uint64_t)v17, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_19CEE6B10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  int v45;
  char v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_signpost_id_t v53;
  uint8_t *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  char *v60;
  os_signpost_type_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  uint8_t *v71;
  os_signpost_id_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;

  *(_QWORD *)&v94 = a3;
  *((_QWORD *)&v94 + 1) = a4;
  v98 = a5;
  v6 = *a2;
  v7 = sub_19CFDF278();
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDF1E8();
  v88 = *(_QWORD *)(v11 - 8);
  v89 = v11;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v87 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v6 + 80);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v13, v17);
  v19 = (char *)v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_19CFDF1AC();
  v101 = *(_QWORD *)(v20 - 8);
  v102 = v20;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v97 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v96 = (char *)v79 - v26;
  MEMORY[0x1E0C80A78](v25, v27);
  v100 = (char *)v79 - v28;
  v31 = type metadata accessor for DependencyCell.ObjectState(0, v15, v29, v30);
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = (_QWORD *)((char *)v79 - v33);
  v93 = v35;
  v36 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 16);
  v95 = a1;
  v36(v34, a1, v31);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = (char *)v34;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v98, v19, v15);
  }
  v83 = v16;
  v81 = *v34;
  v92 = v34[1];
  if (v15 == type metadata accessor for StartUpPerformanceEvent())
  {
    v40 = 0;
    v39 = 0;
  }
  else
  {
    type metadata accessor for BaseObjectGraph();
    v37 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    *(_QWORD *)&v104 = v37;
    swift_retain();
    swift_task_localValuePush();
    v38 = swift_bridgeObjectRetain();
    v39 = sub_19CD49828(v38);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v39)
    {
      swift_retain();
      v40 = sub_19CD49C64(v15);
      swift_release();
      v41 = v100;
      if (v40)
      {
        swift_retain();
        sub_19CFDF29C();
        swift_release();
      }
      goto LABEL_12;
    }
    v40 = 0;
  }
  v41 = v100;
LABEL_12:
  v99 = v40;
  if (qword_1EE43B4E8 != -1)
    swift_once();
  v85 = v15;
  v42 = sub_19CFDF1DC();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EE465C48);
  sub_19CFDF1C4();
  swift_unknownObjectRetain();
  sub_19CFDF17C();
  v79[1] = v43;
  v44 = sub_19CFDF1C4();
  v45 = sub_19CFDFE84();
  v46 = sub_19CFDFF2C();
  v86 = v31;
  v79[0] = v10;
  v82 = v39;
  if ((v46 & 1) != 0)
  {
    v84 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    LODWORD(v80) = v45;
    v47 = v96;
    v84(v96, v41, v102);
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_QWORD *)&v104 = v49;
    *(_DWORD *)v48 = 136315138;
    v50 = sub_19CFE0A90();
    v105 = sub_19CD37070(v50, v51, (uint64_t *)&v104);
    v41 = v100;
    sub_19CFDFFC8();
    v52 = v95;
    swift_bridgeObjectRelease();
    v53 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v44, (os_signpost_type_t)v80, v53, "MakeLazyDependency", "object=%s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v49, -1, -1);
    v54 = v48;
    v31 = v86;
    MEMORY[0x1A1ADBE9C](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v102);
    v55 = v84;
  }
  else
  {

    v55 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    v52 = v95;
    v47 = v96;
  }
  v84 = v55;
  v55(v47, v41, v102);
  sub_19CFDF20C();
  swift_allocObject();
  v56 = sub_19CFDF200();
  v104 = v94;
  v57 = v92;
  swift_retain();
  v15 = v85;
  v58 = v103;
  sub_19CE4810C(v81, v57, &v104);
  v103 = v58;
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v52, v31);
  swift_release();
  v59 = sub_19CFDF1C4();
  v60 = v97;
  sub_19CFDF1F4();
  v61 = sub_19CFDFE78();
  v62 = sub_19CFDFF2C();
  v80 = v56;
  if ((v62 & 1) != 0)
  {
    *((_QWORD *)&v94 + 1) = v19;
    swift_retain();
    v63 = v87;
    sub_19CFDF218();
    swift_release();
    v65 = v88;
    v64 = v89;
    if ((*(unsigned int (**)(char *, uint64_t))(v88 + 88))(v63, v89) == *MEMORY[0x1E0DF2190])
    {
      v66 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
      v66 = "";
    }
    v68 = v96;
    v69 = v97;
    v70 = v102;
    v84(v96, v97, v102);
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    v72 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v59, v61, v72, "MakeLazyDependency", v66, v71, 2u);
    MEMORY[0x1A1ADBE9C](v71, -1, -1);

    v67 = *(void (**)(char *, uint64_t))(v101 + 8);
    v67(v69, v70);
    v67(v68, v70);
    v19 = (char *)*((_QWORD *)&v94 + 1);
    v52 = v95;
  }
  else
  {

    v67 = *(void (**)(char *, uint64_t))(v101 + 8);
    v67(v60, v102);
  }
  if (v99)
  {
    v73 = v52;
    v74 = v90;
    v75 = v91;
    v76 = v79[0];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v90 + 104))(v79[0], *MEMORY[0x1E0CCE198], v91);
    swift_retain();
    sub_19CFDF2A8();
    swift_release();
    v77 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v52 = v73;
    v77(v76, v75);
  }
  if (v82)
  {
    *(_QWORD *)&v104 = swift_getDynamicType();
    swift_retain();
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v104);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();
    v67(v100, v102);
  }
  else
  {
    v67(v100, v102);
    swift_release();
    swift_release();
    swift_release();
  }
  v16 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v52, v19, v15);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v98, v19, v15);
}

uint64_t *sub_19CEE7340(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_18:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 2)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 != 1)
  {
    v11 = a2[1];
    *v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 0;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t *))(v4 + 16))(a1);
  *((_BYTE *)v3 + v5) = 1;
  return v3;
}

_QWORD *sub_19CEE7454(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_19CEE75E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_19CEE76B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_19CEE7844(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CEE7908 + 4 * byte_19D05FB40[(v4 - 1)]))();
}

void sub_19CEE7954(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_19CEE7AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CEE7B44 + 4 * byte_19D05FB4E[v3]))();
}

void sub_19CEE7B8C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_19CEE7C54()
{
  return sub_19CEE6858();
}

uint64_t sub_19CEE7C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CEE6B10(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t Result.init(from:orElse:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v9 + 16))(v12, a1, v8, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a3) != 1)
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v8);
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v18, v12, a3);
    v22(a4, v18, a3);
    type metadata accessor for Result(0, a3, v23, v24);
    return swift_storeEnumTagMultiPayload();
  }
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  if (a2)
  {
    v19(a1, v8);
    *(_QWORD *)a4 = a2;
    type metadata accessor for Result(0, a3, v20, v21);
    return swift_storeEnumTagMultiPayload();
  }
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t Result.init(trying:)@<X0>(void (*a1)(double)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v6 = type metadata accessor for Result(0, a2, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v13 - v10;
  a1(v9);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v11, v6);
}

uint64_t Result.init(trying:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v4[2] = a1;
  v6 = type metadata accessor for Result(0, a4, a3, a4);
  v4[3] = v6;
  v4[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v4[5] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v4[6] = v8;
  *v8 = v4;
  v8[1] = sub_19CEE7FC0;
  return v10(v7);
}

uint64_t sub_19CEE7FC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEE8024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEE8088()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Result.unwrap()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v6 = MEMORY[0x1E0C80A78](a1, v3);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_willThrow();
  else
    return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a2, v8);
}

uint64_t Result.map<A>(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_QWORD *, uint64_t, double))(v17 + 16))(v16, v18, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a5 = *v16;
  }
  else
  {
    (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v9 + 32))(v11, v16, v8);
    a1(v11);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
  type metadata accessor for Result(0, a4, v19, v20);
  return swift_storeEnumTagMultiPayload();
}

id *sub_19CEE82E8(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

id *sub_19CEE840C(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_19CEE85A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_19CEE8674(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_19CEE8800(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CEE88C4 + 4 * byte_19D05FC08[(v4 - 1)]))();
}

void sub_19CEE8910(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_19CEE8AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CEE8B00 + 4 * byte_19D05FC16[v3]))();
}

void sub_19CEE8B48(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for XpSendMethodFieldProvider()
{
  return &type metadata for XpSendMethodFieldProvider;
}

uint64_t sub_19CEE8C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a3;
  return swift_task_switch();
}

unint64_t CompoundActionImplementation.PerformError.localizedDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[40];
  __int128 v5;
  uint64_t v6;

  (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(&v5, v1, a1);
  if (!v6)
    return 0xD00000000000003ALL;
  sub_19CCD14C4(&v5, (uint64_t)v4);
  sub_19CFE010C();
  sub_19CFDF698();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360);
  sub_19CFE02E0();
  sub_19CFDF698();
  v2 = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2;
}

uint64_t CompoundActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEE9018(a1, a2, *(_QWORD *)(a3 + 16), a4);
}

void sub_19CEE8D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[5];
  char v27;
  __int128 v28[2];
  _QWORD v29[6];

  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(v16 + 16);
  if (v17 == v18)
  {
    v26[0] = 0;
    v24 = 0u;
    v25 = 0u;
  }
  else
  {
    if (v17 >= v18)
    {
      __break(1u);
      return;
    }
    sub_19CCD5B84(v16 + 40 * v17 + 32, (uint64_t)&v24);
    *(_QWORD *)(a1 + 24) = v17 + 1;
    if (*((_QWORD *)&v25 + 1))
    {
      sub_19CCD14C4(&v24, (uint64_t)v29);
      *(_QWORD *)&v24 = a3;
      *((_QWORD *)&v24 + 1) = a4;
      *(_QWORD *)&v25 = a5;
      *(_QWORD *)&v28[0] = 0;
      v21 = type metadata accessor for ActionDispatcher(0, a8, v19, v20);
      ActionDispatcher.perform(_:withMetrics:asPartOf:)(v29, (__darwin_time_t *)v28, a6, v21);
      sub_19CCD5B84(a7, (uint64_t)&v24);
      sub_19CCD5B84((uint64_t)v29, (uint64_t)v28);
      v22 = (_QWORD *)swift_allocObject();
      v22[2] = a8;
      v22[3] = a1;
      v22[4] = a2;
      v22[5] = a3;
      v22[6] = a4;
      v22[7] = a5;
      v22[8] = a6;
      sub_19CCD14C4(&v24, (uint64_t)(v22 + 9));
      sub_19CCD14C4(v28, (uint64_t)(v22 + 14));
      *(_QWORD *)&v24 = sub_19CEE95EC;
      *((_QWORD *)&v24 + 1) = v22;
      *(_QWORD *)&v25 = sub_19CEE9624;
      *((_QWORD *)&v25 + 1) = a2;
      sub_19CCD5B84(a7, (uint64_t)v26);
      v27 = 0;
      v23 = a5;
      swift_retain();
      swift_retain();
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19CDBF598();
      sub_19CCECFE4((uint64_t)&v24, &qword_1EE439CD0);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
      return;
    }
  }
  sub_19CCECFE4((uint64_t)&v24, qword_1EE439B38);
  sub_19CFBC820(0);
}

void sub_19CEE8F60(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;

  if ((*a1 & 1) != 0)
  {
    v10 = type metadata accessor for CompoundActionImplementation.PerformError(0, a10, a3, a4);
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CompoundActionImplementation<A>.PerformError, v10);
    v11 = (void *)swift_allocError();
    sub_19CCD5B84(a9, v12);
    sub_19CEBB860(v11);

  }
  else
  {
    sub_19CEE8D4C(a2, a3, a4, a5, a6, a7, a8, a10);
  }
}

uint64_t sub_19CEE9010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CEE9018(a1, a2, *(_QWORD *)(a3 + 16), a4);
}

uint64_t sub_19CEE9018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v23;
  void *v25;
  _UNKNOWN **v26;
  __int128 v27;
  unint64_t v28;
  _UNKNOWN **v29;
  _QWORD v30[2];
  void *v31;
  ValueMetadata *v32;
  _UNKNOWN **v33;

  v6 = *(_QWORD *)(a1 + 16);
  type metadata accessor for ActionDispatcher(0, a3, a3, a4);
  BaseObjectGraph._injectIfAvailable<A>(_:)();
  v9 = v30[0];
  if (v30[0])
  {
    v11 = v30[1];
    v10 = v31;
    if (v31)
    {
      v28 = sub_19CD48F8C();
      v29 = &protocol witness table for OS_dispatch_queue;
      *(_QWORD *)&v27 = v31;
      sub_19CCD14C4(&v27, (uint64_t)v30);
      v12 = v32;
      v25 = v10;
      v26 = v33;
    }
    else
    {
      v25 = 0;
      v12 = &type metadata for SyncTaskScheduler;
      v32 = &type metadata for SyncTaskScheduler;
      v33 = &protocol witness table for SyncTaskScheduler;
      v26 = &protocol witness table for SyncTaskScheduler;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
    v16 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v18 = swift_allocObject();
    *(_DWORD *)(v18 + 16) = 0;
    v19 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 16) = v18;
    *(_QWORD *)(v16 + 24) = v19;
    *(_BYTE *)(v16 + 32) = 0;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v6;
    *(_QWORD *)(v20 + 24) = 0;
    __swift_project_boxed_opaque_existential_1(v30, (uint64_t)v12);
    sub_19CCD5B84((uint64_t)v30, (uint64_t)&v27);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a3;
    v21[3] = v20;
    v21[4] = v16;
    v21[5] = v9;
    v21[6] = v11;
    v21[7] = v10;
    v21[8] = a2;
    sub_19CCD14C4(&v27, (uint64_t)(v21 + 9));
    v22 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v26[1];
    v23 = v25;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_19CD24A40(v9, v11, v10);
    swift_retain();
    v22(sub_19CEE9578, v21, v12, v26);
    sub_19CE2A4A0(v9, v11, v10);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  }
  else
  {
    v13 = type metadata accessor for CompoundActionImplementation.PerformError(0, a3, v7, v8);
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CompoundActionImplementation<A>.PerformError, v13);
    v14 = swift_allocError();
    *(_OWORD *)v15 = 0u;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_QWORD *)(v15 + 32) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
    v16 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v17 = swift_allocObject();
    *(_DWORD *)(v17 + 16) = 0;
    *(_QWORD *)(v16 + 16) = v17;
    *(_QWORD *)(v16 + 24) = v14;
    *(_BYTE *)(v16 + 32) = 2;
  }
  return v16;
}

void sub_19CEE929C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

_UNKNOWN **sub_19CEE92AC()
{
  return &protocol witness table for CompoundAction;
}

uint64_t type metadata accessor for CompoundActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CompoundActionImplementation);
}

uint64_t sub_19CEE92C4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return a1;
}

uint64_t sub_19CEE92DC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t sub_19CEE9338(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t sub_19CEE93D0(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_19CEE941C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_19CEE946C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

double sub_19CEE94C8(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CompoundActionImplementation.PerformError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CompoundActionImplementation.PerformError);
}

uint64_t sub_19CEE9500()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEE9524()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  return swift_deallocObject();
}

void sub_19CEE9578()
{
  uint64_t v0;

  sub_19CEE8D4C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 16));
}

uint64_t sub_19CEE9590()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  return swift_deallocObject();
}

void sub_19CEE95EC(_BYTE *a1)
{
  uint64_t *v1;

  sub_19CEE8F60(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], (uint64_t)(v1 + 9), (uint64_t)(v1 + 14), v1[2]);
}

uint64_t ShelfModel.layoutReferenceItem.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(a1 + 40))();
  if (*(_QWORD *)(v3 + 16))
  {
    sub_19CCD5B84(v3 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t ShelfModel.isHomogenousForLayout.getter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t DynamicType;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[5];

  v4 = *(uint64_t (**)(void))(a2 + 40);
  v5 = v4();
  if (!*(_QWORD *)(v5 + 16))
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_19CCD5B84(v5 + 32, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_10:
    sub_19CEE97E0((uint64_t)&v13);
    return 1;
  }
  sub_19CCD14C4(&v13, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  DynamicType = swift_getDynamicType();
  result = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  v8 = *(_QWORD *)(result + 16);
  v9 = v8 != 0;
  if (v8 == v9)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    v12 = 1;
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    return v12;
  }
  v10 = result + 40 * (v8 != 0) + 32;
  while (v9 < v8)
  {
    sub_19CCD5B84(v10, (uint64_t)&v13);
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    v11 = swift_getDynamicType();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    if (v11 != DynamicType)
    {
      swift_bridgeObjectRelease();
      v12 = 0;
      goto LABEL_12;
    }
    ++v9;
    v10 += 40;
    if (v8 == v9)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CEE97E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441668);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of ShelfModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShelfModel.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MultiCache.withValues<A>(forKey:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of MultiCache.removeAll(keepingCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.removeAll(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of MultiCacheValueCollection.removeAll(keepingCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t JSONDateFormat.date(from:)@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_19CD05558();
  v3 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDateFormat_, v3);

  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(v2, sel_dateFromString_, v4);

  if (v5)
  {
    sub_19CFDEF60();

    v6 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {

    v8 = sub_19CFDEF84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t static JSONDateFormat.allValues.getter()
{
  if (qword_1EE43C3C8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t JSONDateFormat.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001FLL;
  else
    return 0xD00000000000001ALL;
}

uint64_t JSONDateFormat.string(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD1F0E4(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_19CCECFE4((uint64_t)v5, (uint64_t *)&unk_1ECEB2040);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    v12 = sub_19CD05558();
    v13 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setDateFormat_, v13);

    v14 = (void *)sub_19CFDEF0C();
    v15 = objc_msgSend(v12, sel_stringFromDate_, v14);

    v11 = sub_19CFDF578();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v11;
}

JetEngine::JSONDateFormat_optional __swiftcall JSONDateFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  JetEngine::JSONDateFormat_optional result;
  char v5;

  v2 = v1;
  v3 = sub_19CFE0424();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_19CEE9C68(char *a1, char *a2)
{
  return sub_19CE81D1C(*a1, *a2);
}

uint64_t sub_19CEE9C74()
{
  return sub_19CF98C2C();
}

uint64_t sub_19CEE9C7C()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEE9CE0()
{
  return sub_19CE11B30();
}

JetEngine::JSONDateFormat_optional sub_19CEE9CE8(Swift::String *a1)
{
  return JSONDateFormat.init(rawValue:)(*a1);
}

void sub_19CEE9CF4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001FLL;
  else
    v2 = 0xD00000000000001ALL;
  v3 = 0x800000019D06C8A0;
  if (*v1)
    v3 = 0x800000019D06C8C0;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_19CEE9D40()
{
  unint64_t result;

  result = qword_1EE441670;
  if (!qword_1EE441670)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSONDateFormat, &type metadata for JSONDateFormat);
    atomic_store(result, (unint64_t *)&qword_1EE441670);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JSONDateFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CEE9DD0 + 4 * byte_19D05FE01[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CEE9E04 + 4 * asc_19D05FDFC[v4]))();
}

uint64_t sub_19CEE9E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEE9E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEE9E14);
  return result;
}

uint64_t sub_19CEE9E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEE9E28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CEE9E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEE9E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NSURLRequestCachePolicy __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSURLRequestCachePolicy.init(_:)(JSValue a1)
{
  id v2;

  v2 = sub_19CEEA220(a1.super.isa);

  return (NSURLRequestCachePolicy)v2;
}

unint64_t NSURLRequestCachePolicy.init(deserializing:using:)(uint64_t a1)
{
  return sub_19CCBF1DC(a1);
}

void sub_19CEE9E90(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;

  v5 = sub_19CEEA220(a1);

  if (!v2)
    *a2 = v5;
}

unint64_t sub_19CEE9ED4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_19CCBF1DC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *NSURLRequestCachePolicy.init(from:)(_QWORD *a1)
{
  return sub_19CEEA038(a1);
}

uint64_t NSURLRequestCachePolicy.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  sub_19CEEA2F8();
  sub_19CFE073C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

_QWORD *sub_19CEE9FF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_19CEEA038(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_19CEEA020(_QWORD *a1)
{
  return NSURLRequestCachePolicy.encode(to:)(a1);
}

_QWORD *sub_19CEEA038(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _WORD v12[8];
  _QWORD v13[4];

  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v1)
    goto LABEL_7;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  v4 = sub_19CFE06AC();
  v6 = sub_19CD596A4(v4, v5);
  if ((v7 & 1) != 0)
  {
    v8 = sub_19CFE01B4();
    swift_allocError();
    v10 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    strcpy((char *)v12, "Unknown case ");
    v12[7] = -4864;
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    v3 = v12;
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DEC458], v8);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v3;
  }
  v3 = (_QWORD *)v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

id sub_19CEEA220(void *a1)
{
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  result = objc_msgSend(a1, sel_toString);
  if (result)
  {
    v3 = result;
    v4 = sub_19CFDF578();
    v6 = v5;

    v7 = sub_19CD596A4(v4, v6);
    LOBYTE(v4) = v8;
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      sub_19CDC98D8();
      swift_allocError();
      JSError.init(badValue:expected:)(a1, v9);
      swift_willThrow();
    }
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_19CEEA2F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE43F7B8;
  if (!qword_1EE43F7B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB2550);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43F7B8);
  }
  return result;
}

void sub_19CEEA354()
{
  sub_19CFE0340();
  __break(1u);
}

void sub_19CEEA39C()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CEEA3E8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v1);
  sub_19CFDF7F4();
  swift_getAssociatedConformanceWitness();
  return sub_19CFE00C4();
}

uint64_t sub_19CEEA4CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_19CEEA518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1 + 16, a1);
}

uint64_t sub_19CEEA524()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
}

uint64_t sub_19CEEA52C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_19CEEA550(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 112) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128), a1);
  return v2;
}

uint64_t sub_19CEEA5A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 120) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_19CEEA5D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 112) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
}

uint64_t sub_19CEEA5F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_19CEEA610()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t DiffableLens.value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t DiffableLens.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(_QWORD **)v2 + 96))(v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t DiffableLens.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v5 = *a1;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(_QWORD **)v3 + 96))(v8);
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v12[0] = v12[1];
  return ReadOnlyLens.init(_:)((uint64_t)v12, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v5 + 8), a3);
}

uint64_t DiffableLens.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 88))();
}

uint64_t DiffableLens.hash(into:)()
{
  uint64_t v0;
  _QWORD v2[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)v0 + 88))(v2);
  _s9JetEngine15CodeAnyHashableV4hash4intoys6HasherVz_tF_0();
  return sub_19CD20334((uint64_t)v2);
}

uint64_t static DiffableLens.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD v5[5];
  _QWORD v6[5];

  v2 = *a2;
  v3 = (*(_QWORD *(**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 88))(v6);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(*(_QWORD *)v2 + 88))(v5, v3);
  LOBYTE(v2) = MEMORY[0x1A1ADA2C4](v6, v5);
  sub_19CD20334((uint64_t)v5);
  sub_19CD20334((uint64_t)v6);
  return v2 & 1;
}

uint64_t DiffableLens.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;

  v3 = MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(double))(**(_QWORD **)v2 + 96))(v3);
  return sub_19CFDF5E4();
}

uint64_t DiffableLens.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  v1 = *v0;
  v2 = sub_19CFE08C8();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v1 + 88))(v4, v2);
  _s9JetEngine15CodeAnyHashableV4hash4intoys6HasherVz_tF_0();
  sub_19CD20334((uint64_t)v4);
  return sub_19CFE0910();
}

uint64_t sub_19CEEA9A0()
{
  sub_19CFE08C8();
  DiffableLens.hash(into:)();
  return sub_19CFE0910();
}

uint64_t DiffableLens<A>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19CEEAA90(a1, (void (*)(_QWORD))type metadata accessor for IdentifiableValueBox, a2);
}

{
  return sub_19CEEAA90(a1, (void (*)(_QWORD))type metadata accessor for ComponentModelValueBox, a2);
}

uint64_t type metadata accessor for IdentifiableValueBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IdentifiableValueBox);
}

uint64_t DiffableLens<A>.init(_:)@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for AnyComponentModelValueBox();
  v4 = swift_allocObject();
  result = sub_19CCD14C4(a1, v4 + 16);
  *a2 = v4;
  return result;
}

uint64_t type metadata accessor for AnyComponentModelValueBox()
{
  uint64_t result;

  result = qword_1EE43C180;
  if (!qword_1EE43C180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CEEAA90@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  a2(0);
  v5 = swift_allocObject();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 112) - 8) + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 128), a1);
  *a3 = v5;
  return result;
}

uint64_t type metadata accessor for ComponentModelValueBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ComponentModelValueBox);
}

uint64_t sub_19CEEAB00()
{
  return MEMORY[0x1E0DEC1A0];
}

void sub_19CEEAB0C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t type metadata accessor for AnyValueBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyValueBox);
}

uint64_t sub_19CEEAB2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19CEEAB6C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DiffableLens(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiffableLens);
}

uint64_t sub_19CEEABE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (void *)sub_19CFDF554();
  v7 = (void *)sub_19CFDF554();
  if (a4)
    a4 = (void *)sub_19CFDF554();
  v8 = (void *)sub_19CFDF554();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_localization_, v6, v7, a4, v8);

  v10 = sub_19CFDF578();
  v12 = v11;

  if (!v10 && v12 == 0xE100000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

JetEngine::EmptyAction __swiftcall EmptyAction.init(actionMetrics:)(JetEngine::EmptyAction actionMetrics)
{
  _OWORD *v1;

  *v1 = *(_OWORD *)actionMetrics.actionMetrics.data._rawValue;
  return actionMetrics;
}

double EmptyAction.init(deserializing:using:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  double result;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;

  v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v8);
  v10 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v8, &v10, (uint64_t *)&v9);
  sub_19CD3E3F8(a1);
  if (!v3)
  {
    result = *(double *)&v9;
    *a3 = v9;
  }
  return result;
}

uint64_t EmptyAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EmptyAction.actionMetrics.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*EmptyAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CEEAE20()
{
  return 0x654D6E6F69746361;
}

uint64_t sub_19CEEAE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19CEEAEFC()
{
  sub_19CEEB048();
  return sub_19CFE0A48();
}

uint64_t sub_19CEEAF24()
{
  sub_19CEEB048();
  return sub_19CFE0A54();
}

uint64_t EmptyAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441678);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CEEB048();
  sub_19CFE0A24();
  v10 = *v2;
  sub_19CE8BE18();
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_19CEEB048()
{
  unint64_t result;

  result = qword_1EE441680;
  if (!qword_1EE441680)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06031C, &type metadata for EmptyAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441680);
  }
  return result;
}

uint64_t EmptyAction.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441688);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CEEB048();
  sub_19CFE09E8();
  if (!v2)
  {
    sub_19CE8C13C();
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CEEB1AC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return EmptyAction.init(from:)(a1, a2);
}

uint64_t sub_19CEEB1C0(_QWORD *a1)
{
  return EmptyAction.encode(to:)(a1);
}

double sub_19CEEB1D4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  double result;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;

  v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v8);
  v10 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v8, &v10, (uint64_t *)&v9);
  sub_19CD3E3F8(a1);
  if (!v3)
  {
    result = *(double *)&v9;
    *a3 = v9;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyAction()
{
  return &type metadata for EmptyAction;
}

uint64_t storeEnumTagSinglePayload for EmptyAction.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEEB2C4 + 4 * asc_19D0601C8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEEB2E4 + 4 * byte_19D0601CD[v4]))();
}

_BYTE *sub_19CEEB2C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEEB2E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEEB2EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEEB2F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEEB2FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEEB304(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmptyAction.CodingKeys()
{
  return &type metadata for EmptyAction.CodingKeys;
}

unint64_t sub_19CEEB324()
{
  unint64_t result;

  result = qword_1EE441690;
  if (!qword_1EE441690)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0602F4, &type metadata for EmptyAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441690);
  }
  return result;
}

unint64_t sub_19CEEB36C()
{
  unint64_t result;

  result = qword_1EE441698;
  if (!qword_1EE441698)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D060264, &type metadata for EmptyAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441698);
  }
  return result;
}

unint64_t sub_19CEEB3B4()
{
  unint64_t result;

  result = qword_1EE4416A0;
  if (!qword_1EE4416A0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D06028C, &type metadata for EmptyAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE4416A0);
  }
  return result;
}

id sub_19CEEB3F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 0);
  qword_1EE4416A8 = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall JSPromiseLogExecutorError()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (qword_1EE43D6C0 != -1)
    swift_once();
  if (objc_msgSend((id)qword_1EE4416A8, sel_compareWithValue_andExchangeWithValue_, 0, 1))
  {
    if (qword_1EE43D6C8 != -1)
      swift_once();
    v0 = (void *)qword_1EE465D08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_19D050760;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v2 = swift_allocObject();
    v3 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
    v14 = v3;
    v12 = 0xD000000000000048;
    v13 = 0x800000019D075880;
    v10 = 0u;
    v11 = 0u;
    v4 = v0;
    sub_19CD40658((uint64_t)&v12, (uint64_t)&v10);
    *(_BYTE *)(v2 + 64) = 0;
    v5 = v11;
    *(_OWORD *)(v2 + 32) = v10;
    *(_OWORD *)(v2 + 48) = v5;
    *(_QWORD *)(v1 + 32) = v2;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
    v14 = v3;
    v12 = 0xD00000000000004ALL;
    v13 = 0x800000019D0758D0;
    v10 = 0u;
    v11 = 0u;
    sub_19CD40658((uint64_t)&v12, (uint64_t)&v10);
    *(_BYTE *)(v6 + 64) = 0;
    v7 = v11;
    *(_OWORD *)(v6 + 32) = v10;
    *(_OWORD *)(v6 + 48) = v7;
    *(_QWORD *)(v1 + 40) = v6;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
    v14 = v3;
    v12 = 0xD000000000000052;
    v13 = 0x800000019D075920;
    v10 = 0u;
    v11 = 0u;
    sub_19CD40658((uint64_t)&v12, (uint64_t)&v10);
    *(_BYTE *)(v8 + 64) = 0;
    v9 = v11;
    *(_OWORD *)(v8 + 32) = v10;
    *(_OWORD *)(v8 + 48) = v9;
    *(_QWORD *)(v1 + 48) = v8;
    *(_QWORD *)&v10 = v4;
    LOBYTE(v12) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v12);

    swift_bridgeObjectRelease();
  }
}

id sub_19CEEB660()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x73696D6F7250534ALL, 0xE900000000000065);
  qword_1EE465D08 = (uint64_t)result;
  return result;
}

uint64_t sub_19CEEB6F4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_19CEEB718(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id result;
  _QWORD *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;

  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_19CFE0394();
    v9 = (_QWORD *)(a4 + 16);
    if (result)
    {
LABEL_3:
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = (id)MEMORY[0x1A1ADA390](0, a3);
      }
      else
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
        v10 = *(id *)(a3 + 32);
      }
      v11 = v10;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (*v9)
      {
        sub_19CDC98D8();
        v12 = (void *)swift_allocError();
        v14 = v13;
        swift_retain();
        JSError.init(_:)(v11, v14);
        sub_19CEBC044(v12);

        swift_release();
      }
      swift_beginAccess();
      *v9 = 0;
      swift_release();
      result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
      if (result)
      {
        v15 = result;

        return v15;
      }
      goto LABEL_18;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    v9 = (_QWORD *)(a4 + 16);
    if (v7)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*v9)
  {
LABEL_14:
    swift_beginAccess();
    *v9 = 0;
    swift_release();
    result = objc_msgSend((id)objc_opt_self(), sel_valueWithUndefinedInContext_, a1);
    v15 = result;
    if (result)
      return v15;
    goto LABEL_19;
  }
  v16 = (void *)objc_opt_self();
  swift_retain();
  result = objc_msgSend(v16, sel_valueWithUndefinedInContext_, a1);
  if (result)
  {
    v17 = result;
    sub_19CD159DC(result);

    swift_release();
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t JSPromise.promise.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2450);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = 0;
  sub_19CD2F10C(v0);
  return v0;
}

uint64_t sub_19CEEB9F4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_19CEEBA18(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_19CEEB718(a1, a2, a3, v3);
}

uint64_t JSONObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  _UNKNOWN **v7;
  ValueMetadata *v8;
  char v10;
  void **v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t *v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[3];
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v16 = a2;
    if ((sub_19CFE03E8() & 1) != 0)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 40) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2B88);
      *(_QWORD *)(v6 + 16) = v5;
      v7 = &off_1E3DCC5B0;
      v8 = &type metadata for FoundationValue;
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      *v16 = v6;
      v16[1] = 0;
      v16[2] = 0;
      v16[3] = (uint64_t)v8;
      v16[4] = (uint64_t)v7;
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    }
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v10 = sub_19CFE06B8();
    v11 = (void **)MEMORY[0x1E0C9AE40];
    if ((v10 & 1) != 0)
      v11 = (void **)MEMORY[0x1E0C9AE50];
    v12 = *v11;
    if (*v11)
    {
      type metadata accessor for CFBoolean(0);
      *((_QWORD *)&v18 + 1) = v13;
      *(_QWORD *)&v17 = v12;
      if (v13)
      {
        v6 = swift_allocObject();
        sub_19CD433C0(&v17, (_OWORD *)(v6 + 16));
        v14 = v12;
        v8 = &type metadata for FoundationValue;
        v7 = &off_1E3DCC5B0;
        goto LABEL_4;
      }
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    v15 = v12;
    sub_19CCECFE4((uint64_t)&v17, &qword_1ECEB3370);
    v6 = 0;
    v8 = 0;
    v7 = 0;
    goto LABEL_4;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19CEEC3A8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE439F30;
  if (!qword_1EE439F30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE439F28);
    v2 = sub_19CE080B8();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE439F30);
  }
  return result;
}

unint64_t sub_19CEEC414()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE4416C0[0];
  if (!qword_1EE4416C0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE4416B8);
    v2 = sub_19CE080B8();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, qword_1EE4416C0);
  }
  return result;
}

uint64_t sub_19CEEC478()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t JSONObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 *v21;
  __int128 *v22;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[32];
  _OWORD v72[2];
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  _UNKNOWN **v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  void *v81;
  _QWORD v82[4];
  __int128 v83;
  __int128 v84;

  v3 = v1;
  v5 = sub_19CFE01CC();
  v62 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v60 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v58 = (char *)&v55 - v10;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4372B8);
  v59 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63, v11);
  v64 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDECB4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v3;
  sub_19CCF8C5C(v3, (uint64_t)&v78, &qword_1ECEB1328);
  v18 = v79;
  if (!v79)
  {
    sub_19CCECFE4((uint64_t)&v78, &qword_1ECEB1328);
    v83 = 0u;
    v84 = 0u;
    goto LABEL_10;
  }
  v57 = v5;
  v65 = v2;
  v19 = v80;
  __swift_project_boxed_opaque_existential_1(&v78, v79);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v19 + 96))(&v83, v18, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
  if (!*((_QWORD *)&v84 + 1))
  {
LABEL_10:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
    sub_19CFE0748();
    v21 = &v78;
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    return sub_19CCECFE4((uint64_t)&v83, &qword_1ECEB3370);
  }
  sub_19CCF8C5C((uint64_t)&v83, (uint64_t)v82, &qword_1ECEB3370);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  if (swift_dynamicCast())
  {
    v20 = (void *)v75;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    if (*MEMORY[0x1E0C9AE50] && v20 == (void *)*MEMORY[0x1E0C9AE50]
      || *MEMORY[0x1E0C9AE40] && v20 == (void *)*MEMORY[0x1E0C9AE40])
    {
      objc_msgSend(v20, sel_BOOLValue);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
      sub_19CFE0718();
    }
    else
    {
      objc_msgSend(v20, sel_doubleValue);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
      sub_19CFE0724();
    }

LABEL_17:
    v22 = &v78;
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    v21 = (__int128 *)v82;
    goto LABEL_19;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
    sub_19CFE0718();
    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
    sub_19CFE0724();
    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
    sub_19CFE070C();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB1710);
  if (swift_dynamicCast())
  {
    v24 = *(char **)&v72[0];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A00();
    v64 = v24;
    sub_19CFDFECC();
    sub_19CFDECA8();
    if (v74)
    {
      while (1)
      {
        *((_QWORD *)&v76 + 1) = &type metadata for FoundationValue;
        v77 = &off_1E3DCC5B0;
        *(_QWORD *)&v75 = swift_allocObject();
        sub_19CD433C0(&v73, (_OWORD *)(v75 + 16));
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
        sub_19CE081CC();
        v25 = v65;
        sub_19CFE0658();
        v65 = v25;
        if (v25)
          break;
        sub_19CD3E3F8((uint64_t)&v75);
        sub_19CFDECA8();
        if (!v74)
          goto LABEL_27;
      }

      sub_19CD3E3F8((uint64_t)&v75);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    else
    {
LABEL_27:
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);

    }
    v36 = &v78;
    goto LABEL_42;
  }
  sub_19CCE5204(0, (unint64_t *)&unk_1ECEB2F00);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v82);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    *(_QWORD *)&v78 = 0;
    *((_QWORD *)&v78 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    v82[0] = 0xD000000000000024;
    v82[1] = 0x800000019D0759B0;
    v33 = v61;
    sub_19CCF8C5C(v61, (uint64_t)&v78, &qword_1ECEB1328);
    v34 = v79;
    if (v79)
    {
      v35 = v80;
      __swift_project_boxed_opaque_existential_1(&v78, v79);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v35 + 96))(&v75, v34, v35);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v78, &qword_1ECEB1328);
      v75 = 0u;
      v76 = 0u;
    }
    sub_19CCECFE4((uint64_t)&v75, &qword_1ECEB3370);
    sub_19CFDF698();
    v37 = v60;
    sub_19CFE019C();
    v38 = sub_19CFE01D8();
    swift_allocError();
    v40 = v39;
    v41 = (char *)v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
    v40[3] = (uint64_t)&type metadata for JSONObject;
    v42 = swift_allocObject();
    *v40 = v42;
    sub_19CD3E448(v33, v42 + 16);
    v43 = v62;
    v44 = v41;
    v45 = v57;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v44, v37, v57);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, *MEMORY[0x1E0DEC4B0], v38);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v45);
    return sub_19CCECFE4((uint64_t)&v83, &qword_1ECEB3370);
  }
  v26 = v81;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDD5ED8();
  sub_19CFE0A24();
  v56 = v26;
  v27 = sub_19CFDFCF8();
  swift_retain();
  sub_19CFDFD04();
  sub_19CCC290C((uint64_t)&v75, (uint64_t)&v78, &qword_1ECEB0F68);
  if (!v79)
  {
LABEL_43:
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v64, v63);
    goto LABEL_44;
  }
  v60 = (char *)v27;
  while (1)
  {
    sub_19CD433C0(&v78, &v73);
    sub_19CD433C0(&v80, v72);
    sub_19CD436B0((uint64_t)&v73, (uint64_t)v71);
    if (!swift_dynamicCast())
      break;
    v28 = v69;
    v29 = v70;
    *((_QWORD *)&v76 + 1) = &type metadata for FoundationValue;
    v77 = &off_1E3DCC5B0;
    *(_QWORD *)&v75 = swift_allocObject();
    sub_19CD436B0((uint64_t)v72, v75 + 16);
    v66 = v28;
    v67 = v29;
    v68 = 1;
    sub_19CE081CC();
    v30 = v65;
    sub_19CFE0568();
    v65 = v30;
    if (v30)
    {
      swift_bridgeObjectRelease();

      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)&v75);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
LABEL_33:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v71);
    sub_19CFDFD04();
    sub_19CCC290C((uint64_t)&v75, (uint64_t)&v78, &qword_1ECEB0F68);
    if (!v79)
      goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    *(_QWORD *)&v75 = 0;
    *((_QWORD *)&v75 + 1) = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v75 = 0xD000000000000022;
    *((_QWORD *)&v75 + 1) = 0x800000019D0759E0;
    __swift_project_boxed_opaque_existential_1(&v73, v74);
    swift_getDynamicType();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    v46 = v58;
    sub_19CFE019C();
    v47 = sub_19CFE01D8();
    swift_allocError();
    v49 = v48;
    v50 = (char *)v48 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
    v49[3] = (uint64_t)&type metadata for JSONObject;
    v51 = swift_allocObject();
    *v49 = v51;
    sub_19CD3E448(v61, v51 + 16);
    v52 = v62;
    v53 = v50;
    v54 = v57;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v53, v46, v57);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v49, *MEMORY[0x1E0DEC4B0], v47);
    swift_willThrow();

    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v54);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v64, v63);
    v22 = (__int128 *)v71;
    goto LABEL_18;
  }
  v31 = v69;
  *((_QWORD *)&v76 + 1) = &type metadata for FoundationValue;
  v77 = &off_1E3DCC5B0;
  *(_QWORD *)&v75 = swift_allocObject();
  sub_19CD436B0((uint64_t)v72, v75 + 16);
  v66 = v31;
  v67 = 0;
  v68 = 0;
  sub_19CE081CC();
  v32 = v65;
  sub_19CFE0568();
  v65 = v32;
  if (!v32)
  {
    sub_19CD3E3F8((uint64_t)&v75);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
    goto LABEL_33;
  }

LABEL_50:
  swift_release_n();
  sub_19CD3E3F8((uint64_t)&v75);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v64, v63);
  v36 = (__int128 *)v71;
LABEL_42:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
LABEL_44:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v82);
  return sub_19CCECFE4((uint64_t)&v83, &qword_1ECEB3370);
}

uint64_t sub_19CEED190()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CEED1BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return JSONObject.init(from:)(a1, a2);
}

uint64_t sub_19CEED1D0(_QWORD *a1)
{
  return JSONObject.encode(to:)(a1);
}

uint64_t Lockable.locked<A>(perform:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  objc_msgSend((id)v8(a3, a5), sel_lock);
  v9 = swift_unknownObjectRelease();
  a1(v9);
  objc_msgSend((id)v8(a3, a5), sel_unlock);
  return swift_unknownObjectRelease();
}

uint64_t dispatch thunk of Lockable.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t StatePath<A>.starts(with:)()
{
  uint64_t v0;

  v0 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v0);
  return sub_19CFDF7D0() & 1;
}

uint64_t StatePath.init<A>(components:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(char *, uint64_t, double))(v7 + 16))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v10 = sub_19CFDF974();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  *a4 = v10;
  return result;
}

uint64_t StatePath.init(component:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_19CEEDFF0(a2, a2);
  v6 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v7 = sub_19CFDF884();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, a1, a2);
  result = sub_19CE48CB8(v7);
  *a3 = result;
  return result;
}

uint64_t StatePath.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_19CFDF8B4();
  *a1 = result;
  return result;
}

uint64_t StatePath.appending(component:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = *v3;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v5, v6);
  v10 = sub_19CFDF938();
  swift_bridgeObjectRetain();
  sub_19CFDF908();
  v12 = v13;
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v10);
  return StatePath.init<A>(components:)((uint64_t)&v12, v5, v10, a3);
}

uint64_t StatePath.appending<A>(components:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = MEMORY[0x1E0C80A78](a1, a1);
  v13 = *v3;
  (*(void (**)(char *, double))(v8 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = sub_19CFDF938();
  swift_bridgeObjectRetain();
  sub_19CFDF8FC();
  v12 = v13;
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v10);
  return StatePath.init<A>(components:)((uint64_t)&v12, v9, v10, a3);
}

uint64_t StatePath.appending(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v5 = *v3;
  v9[0] = *a1;
  v9[1] = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = sub_19CFDF938();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v7);
  sub_19CFDF8FC();
  v9[0] = v5;
  return StatePath.init<A>(components:)((uint64_t)v9, v6, v7, a3);
}

uint64_t StatePath.description.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)&v12 = *v1;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v3);
  sub_19CFDF794();
  v11 = v9;
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v4 = sub_19CFE0130();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC330], v4);
  sub_19CFE0400();
  swift_release();
  swift_bridgeObjectRelease();
  v9 = v12;
  v10 = v13;
  v5 = sub_19CFE02C8();
  v8 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF20], v3);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC850], v5, &v8);
  v6 = sub_19CFDF4F4();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19CEED898@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = MEMORY[0x1E0C80A78](a1, a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  result = sub_19CFDF5E4();
  *a2 = result;
  a2[1] = v7;
  return result;
}

uint64_t sub_19CEED914(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19CEED9A4()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_19CEED9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CEED914(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19CEED9EC(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D060618, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CEEDA20(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D060618, a1);
  return sub_19CFE0A54();
}

uint64_t StatePath<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];

  v17 = a4;
  v15 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for StatePath.CodingKeys(255, v15, a3, a4);
  MEMORY[0x1A1ADBD7C](&unk_19D060618, v6);
  v7 = sub_19CFE0574();
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v14 - v9;
  v11 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A24();
  v18[2] = v11;
  v12 = sub_19CFDF938();
  v18[0] = v17;
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF10], v12, v18);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v7);
}

uint64_t StatePath<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  _QWORD v18[3];

  v16[1] = a2;
  v17 = a3;
  v16[0] = a5;
  v7 = type metadata accessor for StatePath.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1A1ADBD7C](&unk_19D060618, v7);
  v8 = sub_19CFE04D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v16 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09E8();
  if (!v5)
  {
    v13 = (_QWORD *)v16[0];
    v14 = sub_19CFDF938();
    v18[0] = v17;
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF40], v14, v18);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    *v13 = v18[2];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CEEDD1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return StatePath<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4, a5);
}

uint64_t sub_19CEEDD38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return StatePath<A>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

uint64_t static StatePath<A>.== infix(_:_:)()
{
  return sub_19CFDF95C();
}

uint64_t sub_19CEEDD5C()
{
  return static StatePath<A>.== infix(_:_:)();
}

uint64_t StatePath<A>.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDF7F4();
  StatePath.init(component:)((uint64_t)v9, a2, &v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *a4 = v12;
  return result;
}

uint64_t StatePath<A>.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19CFDF950();
  return swift_bridgeObjectRelease();
}

uint64_t StatePath<A>.hashValue.getter()
{
  sub_19CFE08C8();
  StatePath<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CEEDEC0()
{
  return StatePath<A>.hashValue.getter();
}

uint64_t sub_19CEEDEC8()
{
  return StatePath<A>.hash(into:)();
}

uint64_t sub_19CEEDED0()
{
  sub_19CFE08C8();
  StatePath<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t StatePath<A>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_19CFDF128();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  sub_19CEEE060();
  v9 = sub_19CFDF77C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *a2 = v9;
  return result;
}

void StatePath<A>.indexPath.getter()
{
  swift_bridgeObjectRetain();
  JUMPOUT(0x1A1AD9340);
}

uint64_t sub_19CEEDFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  else
    return sub_19CFE05B0();
}

uint64_t sub_19CEEE03C()
{
  return swift_deallocObject();
}

uint64_t sub_19CEEE04C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19CEED898(a1, a2);
}

uint64_t type metadata accessor for StatePath.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatePath.CodingKeys);
}

unint64_t sub_19CEEE060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE439FC0[0];
  if (!qword_1EE439FC0[0])
  {
    v1 = sub_19CFDF128();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB1688], v1);
    atomic_store(result, qword_1EE439FC0);
  }
  return result;
}

uint64_t sub_19CEEE0A8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEEE0E8 + 4 * byte_19D0603E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEEE108 + 4 * byte_19D0603E5[v4]))();
}

_BYTE *sub_19CEEE0E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEEE108(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEEE110(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEEE118(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEEE120(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEEE128(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_19CEEE134()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CEEE144()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CEEE154()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

double static NetRequestPropertyCollectionBuilder.buildExpression<A, B>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43CAB8);
  v5 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4 + 8);
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t static NetRequestPropertyCollectionBuilder.buildBlock(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_19CD02AAC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19CEEE1F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_19CEEE22C(a1, *a2, sub_19CEDBC88);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_19CEEE22C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v6[5];
  _BYTE v7[40];
  uint64_t v8;
  uint64_t v9;

  sub_19CD3E448(a1, (uint64_t)v7);
  v6[0] = a2;
  swift_bridgeObjectRetain();
  v8 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v6);
  v9 = MEMORY[0x1E0DEE9D8];
  v6[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
  v6[4] = sub_19CD21828();
  v6[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v7, v6[0] + 16);
  LOBYTE(a3) = a3(v6);
  sub_19CD21708((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return a3 & 1;
}

uint64_t static NetRequestProperty.value(byDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8[5];
  _BYTE v9[40];
  uint64_t v10;
  uint64_t v11;

  v6 = *a2;
  sub_19CD3E448(a1, (uint64_t)v9);
  v8[0] = v6;
  swift_bridgeObjectRetain();
  v10 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v8);
  v11 = MEMORY[0x1E0DEE9D8];
  v8[3] = (uint64_t)&type metadata for _JSONObjectDecoder;
  v8[4] = sub_19CD21828();
  v8[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v9, v8[0] + 16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 32))(v8, a3, a4);
  sub_19CD21708((uint64_t)v9);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_19CEEE3C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_19CEEE22C(a1, *a2, sub_19CEDBB30);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_19CEEE3FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_19CEEE22C(a1, *a2, sub_19CEDBCB8);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_19CEEE47C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static NetRequestProperty.value(byDeserializing:using:)(a1, a2, a3, a4);
}

uint64_t sub_19CEEE490(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return static NetRequestProperty.value(from:)(a1, a2, a3);
}

uint64_t static NetRequestProperty.value(from:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];
  _BYTE v10[40];
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_19CFE09D0();
  if (!v3)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_19CE080B8();
    sub_19CFE06DC();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v8);
    v9[0] = v9[1];
    (*(void (**)(_BYTE *, _QWORD *, uint64_t, uint64_t))(a3 + 24))(v10, v9, a2, a3);
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  return result;
}

void static JSONContext.Property<A>.requestProperties.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000019D06E010;
}

uint64_t sub_19CEEE5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  char v25[32];

  v24 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = &v25[-v11];
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = &v25[-v16];
  sub_19CD436B0(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441748);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v18)
  {
    v19(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 40))(v17, v24, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, AssociatedTypeWitness);
  }
  else
  {
    v19(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v21 = sub_19CFE01D8();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
    v23[3] = swift_getMetatypeMetadata();
    *v23 = AssociatedTypeWitness;
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC4B0], v21);
    return swift_willThrow();
  }
}

double static NetRequestPropertyCollectionBuilder.buildExpression(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43CAB8);
  v4 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  return result;
}

uint64_t sub_19CEEE860(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  _QWORD *v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[400];
  _BYTE v24[400];
  _BYTE v25[408];

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = result;
    result = swift_bridgeObjectRetain();
    if (v2 <= a2)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v6 = 0;
    v7 = 0;
    v8 = v5 + 32;
    v9 = (char *)(v3 + 4);
    while (1)
    {
      while (1)
      {
        sub_19CDE9DA4(v8 + 400 * a2, (uint64_t)v24);
        sub_19CDE9DA4((uint64_t)v24, (uint64_t)v25);
        result = sub_19CDE9DEC((uint64_t)v25);
        if ((uint64_t)(a2 + 1) < (uint64_t)v2)
          ++a2;
        else
          a2 = 0;
        v10 = v6 + 1;
        v11 = __OFADD__(v6, 1);
        if ((_DWORD)result != 1)
          break;
        if (v11)
          goto LABEL_43;
        if (v10 == v2)
        {
          result = swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        ++v6;
        if (a2 >= v2)
          goto LABEL_42;
      }
      if (v11)
        goto LABEL_44;
      v22 = v5;
      if (v7)
      {
        sub_19CDE9DA4((uint64_t)v24, (uint64_t)v23);
        sub_19CD37530((uint64_t)v23);
        v12 = v3;
      }
      else
      {
        v13 = v3[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_47;
        v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1)
          v15 = 1;
        else
          v15 = v14;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0470);
        v12 = (_QWORD *)swift_allocObject();
        v16 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 400;
        v12[2] = v15;
        v12[3] = 2 * v16;
        v17 = v3[3] >> 1;
        v9 = (char *)&v12[50 * v17 + 4];
        v7 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v3[2])
        {
          if (v12 >= v3 && v12 + 4 < &v3[50 * v17 + 4] && v12 == v3)
          {
            sub_19CDE9DA4((uint64_t)v24, (uint64_t)v23);
            sub_19CD37530((uint64_t)v23);
          }
          else
          {
            sub_19CDE9DA4((uint64_t)v24, (uint64_t)v23);
            sub_19CD37530((uint64_t)v23);
            memmove(v12 + 4, v3 + 4, 400 * v17);
          }
          v3[2] = 0;
        }
        else
        {
          sub_19CDE9DA4((uint64_t)v24, (uint64_t)v23);
          sub_19CD37530((uint64_t)v23);
        }
        swift_release();
      }
      result = sub_19CDE9DA4((uint64_t)v24, (uint64_t)v23);
      v18 = __OFSUB__(v7--, 1);
      if (v18)
        goto LABEL_45;
      result = (uint64_t)sub_19CD376A0(v23, v9);
      if (v10 == v2)
        break;
      v9 += 400;
      v6 = v10;
      v3 = v12;
      v5 = v22;
      if (a2 >= v2)
        goto LABEL_42;
    }
    result = swift_bridgeObjectRelease();
    v3 = v12;
  }
  else
  {
    v7 = 0;
  }
LABEL_37:
  v19 = v3[3];
  if (v19 < 2)
    return (uint64_t)v3;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v7);
  v21 = v20 - v7;
  if (!v18)
  {
    v3[2] = v21;
    return (uint64_t)v3;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_19CEEEB04(uint64_t result, unint64_t a2)
{
  int64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(result + 16);
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = result + 32;
    result = swift_bridgeObjectRetain();
    v6 = 0;
    v7 = 0;
    v8 = v3 + 32;
    while (a2 < v2)
    {
      v9 = (uint64_t *)(v5 + 16 * a2);
      v10 = v9[1];
      if (v10)
      {
        if ((uint64_t)(a2 + 1) < v2)
          ++a2;
        else
          a2 = 0;
        v12 = __OFADD__(v7++, 1);
        if (v12)
          goto LABEL_42;
        v27 = *v9;
        if (v6)
        {
          result = swift_bridgeObjectRetain();
          v12 = __OFSUB__(v6--, 1);
          if (v12)
            goto LABEL_43;
        }
        else
        {
          v13 = *((_QWORD *)v3 + 3);
          if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_45;
          v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
          if (v14 <= 1)
            v15 = 1;
          else
            v15 = v14;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
          v16 = (char *)swift_allocObject();
          v17 = _swift_stdlib_malloc_size(v16);
          v18 = v17 - 32;
          if (v17 < 32)
            v18 = v17 - 17;
          v19 = v18 >> 4;
          *((_QWORD *)v16 + 2) = v15;
          *((_QWORD *)v16 + 3) = 2 * (v18 >> 4);
          v20 = v16 + 32;
          v21 = *((_QWORD *)v3 + 3) >> 1;
          v8 = &v16[16 * v21 + 32];
          v22 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v21;
          if (*((_QWORD *)v3 + 2))
          {
            v23 = v3 + 32;
            if (v16 < v3 || v20 >= &v23[16 * v21] || v16 != v3)
              memmove(v20, v23, 16 * v21);
            swift_bridgeObjectRetain();
            *((_QWORD *)v3 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          result = swift_release();
          v3 = v16;
          v12 = __OFSUB__(v22, 1);
          v6 = v22 - 1;
          if (v12)
            goto LABEL_43;
        }
        *(_QWORD *)v8 = v27;
        *((_QWORD *)v8 + 1) = v10;
        v8 += 16;
        if (v7 == v2)
          goto LABEL_34;
      }
      else
      {
        v11 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_41;
        if ((uint64_t)(a2 + 1) < v2)
          ++a2;
        else
          a2 = 0;
        ++v7;
        if (v11 == v2)
        {
LABEL_34:
          result = swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v6 = 0;
LABEL_36:
  v24 = *((_QWORD *)v3 + 3);
  if (v24 < 2)
    return (uint64_t)v3;
  v25 = v24 >> 1;
  v12 = __OFSUB__(v25, v6);
  v26 = v25 - v6;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v26;
    return (uint64_t)v3;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_19CEEED00()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of static NetRequestProperty.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static NetRequestProperty.value(byDeserializing:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static NetRequestProperty.value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of static NetRequestProperty.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of static NetRequestPropertyScope.allProperties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for NetRequestPropertyCollectionBuilder()
{
  return &type metadata for NetRequestPropertyCollectionBuilder;
}

ValueMetadata *type metadata accessor for NetRequestPropertyLookup()
{
  return &type metadata for NetRequestPropertyLookup;
}

uint64_t dispatch thunk of JetPackResourceBundle.data(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JetPackResourceBundle.contentsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

id JSValue.isFunction.getter()
{
  return sub_19CEEEDFC((uint64_t (*)(const OpaqueJSContext *, const OpaqueJSValue *))MEMORY[0x1E0CBDEA8]);
}

id JSValue.isConstructor.getter()
{
  return sub_19CEEEDFC((uint64_t (*)(const OpaqueJSContext *, const OpaqueJSValue *))MEMORY[0x1E0CBDEA0]);
}

id sub_19CEEEDFC(uint64_t (*a1)(const OpaqueJSContext *, const OpaqueJSValue *))
{
  void *v1;
  id result;
  void *v4;
  const OpaqueJSContext *v5;
  const OpaqueJSValue *v6;

  result = objc_msgSend(v1, sel_context);
  if (result)
  {
    v4 = result;
    v5 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    v6 = (const OpaqueJSValue *)objc_msgSend(v1, sel_JSValueRef);
    if (JSValueGetType(v5, v6) == kJSTypeObject)
      return (id)a1(v5, v6);
    else
      return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

JSObjectRef JSValue.isJSONObject.getter()
{
  void *v0;
  JSObjectRef result;
  void *v2;
  const OpaqueJSContext *v3;
  const OpaqueJSValue *v4;
  OpaqueJSValue *v5;

  result = (JSObjectRef)objc_msgSend(v0, sel_context);
  if (result)
  {
    v2 = result;
    v3 = (const OpaqueJSContext *)-[OpaqueJSValue JSGlobalContextRef](result, sel_JSGlobalContextRef);

    v4 = (const OpaqueJSValue *)objc_msgSend(v0, sel_JSValueRef);
    result = (JSObjectRef)JSValueIsObject(v3, v4);
    if ((_DWORD)result)
    {
      result = JSValueToObject(v3, v4, 0);
      if (result)
      {
        v5 = result;
        if (JSObjectIsFunction(v3, result))
          return 0;
        else
          return (JSObjectRef)!JSObjectIsConstructor(v3, v5);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19CEEEF50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t result;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_name);
  v9 = sub_19CFDF578();
  v32 = v10;
  v33 = v9;

  v11 = objc_msgSend(a1, sel_value);
  v12 = sub_19CFDF578();
  v14 = v13;

  v15 = objc_msgSend(a1, sel_expiresDate);
  if (v15)
  {
    v16 = v15;
    sub_19CFDEF60();

    v17 = sub_19CFDEF84();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
  }
  else
  {
    v18 = sub_19CFDEF84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  }
  v19 = objc_msgSend(a1, sel_domain);
  v20 = sub_19CFDF578();
  v22 = v21;

  v23 = objc_msgSend(a1, sel_path);
  v24 = sub_19CFDF578();
  v26 = v25;

  v27 = v32;
  *a2 = v33;
  a2[1] = v27;
  a2[2] = v12;
  a2[3] = v14;
  v28 = (int *)type metadata accessor for JSCookie();
  result = sub_19CD057DC((uint64_t)v7, (uint64_t)a2 + v28[6]);
  v30 = (uint64_t *)((char *)a2 + v28[7]);
  *v30 = v20;
  v30[1] = v22;
  v31 = (uint64_t *)((char *)a2 + v28[8]);
  *v31 = v24;
  v31[1] = v26;
  return result;
}

void sub_19CEEF130(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  int *v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v52 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_19CFDEF84();
  v56 = *(_QWORD *)(v53 - 8);
  v10 = MEMORY[0x1E0C80A78](v53, v9);
  v49 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v12);
  v50 = (char *)&v48 - v13;
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_valueWithNewObjectInContext_, a1);
  if (!v15)
  {
    __break(1u);
    goto LABEL_12;
  }
  v16 = v15;
  v17 = v2[1];
  v54 = *v2;
  v55 = v17;
  swift_bridgeObjectRetain();
  v18 = a1;
  v19 = objc_msgSend(v14, sel_valueWithObject_inContext_, sub_19CFE0808(), v18);
  swift_unknownObjectRelease();

  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v51 = v3;
  v20 = v19;
  v21 = (void *)sub_19CFDF554();
  objc_msgSend(v16, sel_setValue_forProperty_, v20, v21);

  v22 = v2[3];
  v54 = v2[2];
  v55 = v22;
  v23 = v18;
  swift_bridgeObjectRetain();
  v24 = objc_msgSend(v14, sel_valueWithObject_inContext_, sub_19CFE0808(), v23);
  swift_unknownObjectRelease();

  if (!v24)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v25 = v24;
  v26 = (void *)sub_19CFDF554();
  objc_msgSend(v16, sel_setValue_forProperty_, v25, v26);

  v27 = (int *)type metadata accessor for JSCookie();
  v28 = (uint64_t *)((char *)v2 + v27[7]);
  v29 = v28[1];
  v54 = *v28;
  v55 = v29;
  v30 = v23;
  swift_bridgeObjectRetain();
  v31 = objc_msgSend(v14, sel_valueWithObject_inContext_, sub_19CFE0808(), v30);
  swift_unknownObjectRelease();

  if (!v31)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v32 = v31;
  v33 = (void *)sub_19CFDF554();
  objc_msgSend(v16, sel_setValue_forProperty_, v32, v33);

  v34 = (uint64_t *)((char *)v2 + v27[8]);
  v35 = v34[1];
  v54 = *v34;
  v55 = v35;
  v36 = v30;
  swift_bridgeObjectRetain();
  v37 = objc_msgSend(v14, sel_valueWithObject_inContext_, sub_19CFE0808(), v36);
  swift_unknownObjectRelease();

  if (!v37)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v38 = v37;
  v39 = (void *)sub_19CFDF554();
  objc_msgSend(v16, sel_setValue_forProperty_, v38, v39);

  sub_19CD1F0E4((uint64_t)v2 + v27[6], (uint64_t)v8);
  v40 = v56;
  v41 = v53;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v8, 1, v53) == 1)
  {
    sub_19CDEABB4((uint64_t)v8);
LABEL_10:
    v47 = v52;
    v47[3] = sub_19CD15680();
    v47[4] = &protocol witness table for JSValue;
    *v47 = v16;
    return;
  }
  v42 = v50;
  (*(void (**)(void))(v40 + 32))();
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v49, v42, v41);
  v43 = v36;
  v44 = objc_msgSend(v14, sel_valueWithObject_inContext_, sub_19CFE0808(), v43);
  swift_unknownObjectRelease();

  if (v44)
  {
    v45 = v44;
    v46 = (void *)sub_19CFDF554();
    objc_msgSend(v16, sel_setValue_forProperty_, v45, v46);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

void sub_19CEEF638(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_19CEEF130(a1, a2);
}

uint64_t *sub_19CEEF64C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_19CFDEF84();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (uint64_t *)((char *)v4 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_19CEEF794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_19CFDEF84();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_19CEEF830(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEF84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)((char *)a1 + v16);
  v21 = (_QWORD *)((char *)a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_19CEEF94C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEF84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_19CEEFAF4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEF84();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

_QWORD *sub_19CEEFBD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_19CFDEF84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CEEFD3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEEFD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_19CEEFDC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CEEFDD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CEEFE50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;

  v5 = *v2;
  v6 = v2[1];
  if (!*(_QWORD *)(v2[2] + 16))
  {
LABEL_4:
    if (!v5)
      return 0;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EB78);
    swift_getExtendedExistentialTypeMetadata();
    if ((swift_dynamicCast() & 1) != 0)
      return v10;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  if (!v5)
    return 0;
LABEL_7:
  if (!*(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_19CD3FD1C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E1B0);
  swift_getExtendedExistentialTypeMetadata();
  if ((swift_dynamicCast() & 1) != 0)
    return v10;
  return 0;
}

void static JSONContext.Property<A>.intentTypes.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000019D06EBD0;
}

unint64_t AnyIntentTypes.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t result;

  result = sub_19CE10A70(MEMORY[0x1E0DEE9D8]);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

unint64_t AnyIntentTypes.init()@<X0>(_QWORD *a1@<X8>)
{
  unint64_t result;

  result = sub_19CE10A70(MEMORY[0x1E0DEE9D8]);
  *a1 = 0;
  a1[1] = 0;
  a1[2] = result;
  return result;
}

uint64_t AnyIntentTypes.register<A>(_:forKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = 0x8000000000000000;
  sub_19CE17794(a1, a5, a6, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v6 + 16) = v14;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AnyIntentTypes.registering<A>(_:forKind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v6 + 16);
  *(_OWORD *)a6 = *(_OWORD *)v6;
  *(_QWORD *)(a6 + 16) = v12;
  swift_bridgeObjectRetain();
  return AnyIntentTypes.register<A>(_:forKind:)(a1, a2, a3, v13, a4, a5);
}

uint64_t AnyIntentTypes.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _QWORD v13[2];

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 24))(v13, a2, a4);
  v8 = v13[0];
  v9 = v13[1];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = 0x8000000000000000;
  sub_19CE17794(a1, a3, a4, v8, v9, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + 16) = v12;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AnyIntentTypes.registering<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(_QWORD *)(v5 + 16);
  *(_OWORD *)a5 = *(_OWORD *)v5;
  *(_QWORD *)(a5 + 16) = v10;
  swift_bridgeObjectRetain();
  return AnyIntentTypes.register<A>(_:)(a1, a2, a3, a4);
}

uint64_t assignWithCopy for AnyIntentTypes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnyIntentTypes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnyIntentTypes()
{
  return &type metadata for AnyIntentTypes;
}

uint64_t type metadata accessor for IDSyncPerfMeasurement()
{
  return objc_opt_self();
}

uint64_t sub_19CEF0368()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEF038C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Unstable.AccountHandle.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id Unstable.AccountHandle.forReading.getter()
{
  id *v0;

  return *v0;
}

uint64_t Unstable.AccountHandle.forWriting.getter()
{
  id *v0;
  uint64_t v2;

  objc_msgSend(*v0, sel_copy);
  sub_19CFE004C();
  swift_unknownObjectRelease();
  sub_19CEF0430();
  swift_dynamicCast();
  return v2;
}

unint64_t sub_19CEF0430()
{
  unint64_t result;

  result = qword_1EE4370F8;
  if (!qword_1EE4370F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE4370F8);
  }
  return result;
}

uint64_t sub_19CEF046C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];
  _BYTE v8[48];
  _BYTE v9[24];
  ValueMetadata *v10;
  _UNKNOWN **v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4371B8);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v2;
  v10 = &type metadata for SyncTaskScheduler;
  v11 = &protocol witness table for SyncTaskScheduler;
  v7[0] = sub_19CEF210C;
  v7[1] = v5;
  v7[2] = sub_19CEF211C;
  v7[3] = v2;
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v8);
  v8[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC1178();
  sub_19CCECFE4((uint64_t)v7, &qword_1EE436F88);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v2;
}

uint64_t sub_19CEF0590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD v8[4];
  _BYTE v9[48];
  _BYTE v10[24];
  ValueMetadata *v11;
  _UNKNOWN **v12;
  _QWORD v13[2];

  v13[0] = a1;
  v13[1] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a4;
  sub_19CEF2158((uint64_t)v13, v6 + 24);
  v11 = &type metadata for SyncTaskScheduler;
  v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = sub_19CEF21A0;
  v8[1] = v6;
  v8[2] = sub_19CEF2220;
  v8[3] = a4;
  sub_19CCD5B84((uint64_t)v10, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  sub_19CDC2D64(a1);
  swift_retain();
  swift_retain();
  sub_19CDC0F6C();
  sub_19CCECFE4((uint64_t)v8, &qword_1EE436F90);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  swift_release();
  return swift_release();
}

uint64_t sub_19CEF0694(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _OWORD v31[3];
  _OWORD v32[2];
  _OWORD v33[2];
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  _OWORD v37[2];
  uint64_t v38;
  _OWORD *v39;

  v2 = MEMORY[0x1E0DEE9E0];
  v38 = MEMORY[0x1E0DEE9E0];
  v30 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v39 = v37;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v7 + 1;
    if (!v12)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v29)
        goto LABEL_37;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v7 + 3;
        if (v7 + 3 >= v29)
          goto LABEL_37;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v7 + 4;
          if (v7 + 4 >= v29)
            goto LABEL_37;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v7 = v13;
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v39);
    *(_QWORD *)&v36 = v16;
    *((_QWORD *)&v36 + 1) = v17;
    v34 = v36;
    v35[0] = v37[0];
    v35[1] = v37[1];
    sub_19CD436B0((uint64_t)v35, (uint64_t)v33);
    v18 = v34;
    v31[2] = v34;
    sub_19CD433C0(v35, v32);
    sub_19CD433C0(v33, v31);
    v19 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v2 + 24) <= v19)
    {
      v20 = v19 + 1;
      swift_bridgeObjectRetain();
      sub_19CD13ED8(v20, 1);
      v2 = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v21 = v2 + 64;
    v22 = -1 << *(_BYTE *)(v2 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v21 + 8 * v24);
      }
      while (v28 == -1);
      v8 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v21 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v8) = v18;
    sub_19CD433C0(v31, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  }
  v14 = v7 + 5;
  if (v7 + 5 >= v29)
  {
LABEL_37:
    sub_19CDB88CC();
    return v2;
  }
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19CEF0A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v7 = *v3;
  v3[30] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436FA8);
    v8 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v9 = swift_allocObject();
    *(_DWORD *)(v9 + 16) = 0;
    v10 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(v8 + 16) = v9;
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = 1;
  }
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a3;
  v11[5] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v12 = sub_19CEF1900((uint64_t)sub_19CEF21FC, (uint64_t)v11);
  swift_release();
  swift_release();
  v3[28] = v12;
  return swift_release();
}

uint64_t sub_19CEF0B20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0130);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_19CEF1DC4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  swift_arrayDestroy();
  v9 = sub_19CEF0EEC(v8, a4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19CEF0BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v8 = *v4;
  v4[31] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436FA8);
    v9 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v10 = swift_allocObject();
    *(_DWORD *)(v10 + 16) = 0;
    v11 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v9 + 24) = v11;
    *(_BYTE *)(v9 + 32) = 1;
    if (v4[28])
      goto LABEL_3;
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE436F98);
    v12 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v13 = swift_allocObject();
    *(_DWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 16) = v13;
    *(_BYTE *)(v12 + 40) = 1;
    swift_retain();
    goto LABEL_6;
  }
  v9 = a2;
  if (!v4[28])
    goto LABEL_5;
LABEL_3:
  swift_retain();
  swift_retain();
  sub_19CEF1B3C((uint64_t)sub_19CEF0DD8, 0);
  swift_release();
LABEL_6:
  sub_19CEF046C(v9);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v4;
  v14[3] = a1;
  v14[4] = a3;
  v14[5] = v8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_19CEF2088;
  *(_QWORD *)(v15 + 24) = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = sub_19CEF1C74((uint64_t)sub_19CEF20B8, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4[29] = v16;
  return swift_release();
}

uint64_t sub_19CEF0DD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CEF0E08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[2];

  v8 = *a1;
  v9 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0130);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  *(_QWORD *)(inited + 32) = a4;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_19CEF1DC4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  swift_arrayDestroy();
  v14[0] = v8;
  v14[1] = v9;
  v12 = sub_19CEF1030(v11, a5, v14);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_19CEF0EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  _QWORD v11[2];
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
    v4 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v5 = swift_allocObject();
    *(_DWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = a1;
    *(_QWORD *)(v4 + 32) = MEMORY[0x1E0DEE9D8];
    *(_BYTE *)(v4 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 200);
    v6 = *(_QWORD *)(v2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_19CE467A4((uint64_t)&unk_1E3DD6588);
    swift_arrayDestroy();
    v11[0] = v7;
    v11[1] = v6;
    v12 = 0;
    v13 = a1;
    v14 = v8;
    v15 = sub_19CEF1EA8(a1);
    v10 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    v4 = MetricsPipeline.process(_:using:)((uint64_t)v11, (uint64_t *)&v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_19CEF1030(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v4 = v3;
  v6 = *a3;
  if (!*a3)
  {
    v19 = *(_QWORD *)(v3 + 200);
    v18 = *(_QWORD *)(v3 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_19CE467A4((uint64_t)&unk_1E3DD65B8);
    swift_arrayDestroy();
    *(_QWORD *)&v87 = v19;
    *((_QWORD *)&v87 + 1) = v18;
    v88 = 0;
    v89 = a1;
    v90 = v20;
    v91 = sub_19CEF1EA8(a1);
    goto LABEL_63;
  }
  v86 = MEMORY[0x1E0DEE9E8];
  v8 = sub_19CFDF578();
  v10 = v9;
  if (!*(_QWORD *)(v6 + 16))
  {
    v84 = 0u;
    v85 = 0u;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v11 = v8;
  swift_bridgeObjectRetain();
  v12 = sub_19CD3FD1C(v11, v10);
  if ((v13 & 1) == 0)
  {
    v84 = 0u;
    v85 = 0u;
    goto LABEL_9;
  }
  sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v12, (uint64_t)&v84);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v14 = sub_19CFDF578();
    v16 = v15;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v14, v16, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
    goto LABEL_11;
  }
LABEL_10:
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
LABEL_11:
  v21 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v23 = sub_19CD3FD1C(v21, v22), (v24 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v23, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v25 = sub_19CFDF578();
    v27 = v26;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v25, v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v29 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v31 = sub_19CD3FD1C(v29, v30), (v32 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v31, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v33 = sub_19CFDF578();
    v35 = v34;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v36 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v33, v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v37 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v39 = sub_19CD3FD1C(v37, v38), (v40 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v39, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v41 = sub_19CFDF578();
    v43 = v42;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v41, v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v45 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v47 = sub_19CD3FD1C(v45, v46), (v48 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v47, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v49 = sub_19CFDF578();
    v51 = v50;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v52 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v49, v51, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v53 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v55 = sub_19CD3FD1C(v53, v54), (v56 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v55, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v57 = sub_19CFDF578();
    v59 = v58;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v60 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v57, v59, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v61 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v63 = sub_19CD3FD1C(v61, v62), (v64 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v63, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    if (a2 == 1)
    {
      v65 = sub_19CFDF578();
      v67 = v66;
      sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
      v68 = swift_isUniquelyReferenced_nonNull_native();
      sub_19CD13D40(&v84, v65, v67, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  }
  v69 = sub_19CFDF578();
  if (*(_QWORD *)(v6 + 16) && (v71 = sub_19CD3FD1C(v69, v70), (v72 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v6 + 56) + 32 * v71, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v85 + 1))
  {
    sub_19CD433C0(&v84, &v87);
    v73 = sub_19CFDF578();
    v75 = v74;
    sub_19CD436B0((uint64_t)&v87, (uint64_t)&v84);
    v76 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(&v84, v73, v75, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v87);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
    sub_19CD42B74((uint64_t *)&v87, 1682535268, 0xE400000000000000);
    swift_bridgeObjectRelease();
  }
  v78 = *(_QWORD *)(v4 + 200);
  v77 = *(_QWORD *)(v4 + 208);
  v79 = v86;
  swift_bridgeObjectRetain();
  v80 = swift_bridgeObjectRetain();
  v81 = sub_19CEF1EA8(v80);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v87 = v78;
  *((_QWORD *)&v87 + 1) = v77;
  v88 = 0;
  v89 = a1;
  v90 = v79;
  v91 = v81;
LABEL_63:
  *(_QWORD *)&v84 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v82 = MetricsPipeline.process(_:using:)((uint64_t)&v87, (uint64_t *)&v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_19CEF1894()
{
  uint64_t v0;

  sub_19CD510B0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaActivityPipelineHandler()
{
  return objc_opt_self();
}

uint64_t sub_19CEF1900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CEF220C;
  v9[1] = v7;
  v9[2] = sub_19CE312F0;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0F6C();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE436F90);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CEF1A50(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *a3;
  v5 = a3[1];
  sub_19CDC2D64(*a3);
  swift_bridgeObjectRetain();
  sub_19CFBF0F8(v4, v5, v3);
  sub_19CDC2D38(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEF1AB0(__int128 *a1, void (*a2)(uint64_t *__return_ptr, __int128 *))
{
  uint64_t v2;
  uint64_t v4[2];
  __int128 v5;

  v5 = *a1;
  a2(v4, &v5);
  v2 = v4[0];
  sub_19CFBF380(v4[0], v4[1]);
  return sub_19CDC2D38(v2);
}

uint64_t sub_19CEF1B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE436F98);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CEF21D8;
  v9[1] = v7;
  v9[2] = sub_19CEF21E4;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0B50);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

uint64_t sub_19CEF1C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CEF20E0;
  v9[1] = v7;
  v9[2] = sub_19CDC30D8;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0F90();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE4371B0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CEF1DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = MEMORY[0x1E0DEE9E0];
  do
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_19CEF0694(v4);
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = v3;
    sub_19CE3502C(v5, (uint64_t)sub_19CEC6470, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
    ++v2;
    v3 = v8;
    swift_bridgeObjectRelease();
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19CEF1EA8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  _QWORD v13[4];
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9E8];
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_19CD3FD1C(0x6D6954746E657665, 0xE900000000000065), (v3 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v11);
    sub_19CCECFE4((uint64_t)&v11, &qword_1ECEB3370);
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v4 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v6 = swift_allocObject();
    v7 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
    v13[3] = v7;
    v13[0] = 0xD00000000000006FLL;
    v13[1] = 0x800000019D075B20;
    v11 = 0u;
    v12 = 0u;
    v8 = v4;
    sub_19CD40658((uint64_t)v13, (uint64_t)&v11);
    *(_BYTE *)(v6 + 64) = 0;
    v9 = v12;
    *(_OWORD *)(v6 + 32) = v11;
    *(_OWORD *)(v6 + 48) = v9;
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)&v11 = v8;
    LOBYTE(v13[0]) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)v13);

    swift_bridgeObjectRelease();
    sub_19CE88BFC((uint64_t *)&v11, 0x6D6954746E657665, 0xE900000000000065);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
    sub_19CCECFE4((uint64_t)&v11, &qword_1ECEB3370);
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_19CEF2078()
{
  return objectdestroyTm_2((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_19CEF2088(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_19CEF0E08(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_19CEF2094()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEF20B8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_19CEF20E0(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF783A0(*a1, a1[1], a1[2], *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_19CEF20FC()
{
  return objectdestroyTm_2((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CEF210C(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CEF0590(*a1, a1[1], *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CEF2120()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_19CEF2158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4371A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CEF21A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CEF1A50(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_19CEF21AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEF21D8(__int128 *a1)
{
  uint64_t v1;

  return sub_19CEF1AB0(a1, *(void (**)(uint64_t *__return_ptr, __int128 *))(v1 + 16));
}

void sub_19CEF21E4(void *a1)
{
  sub_19CF4C9D0(a1);
}

uint64_t sub_19CEF21EC()
{
  return objectdestroyTm_2((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_19CEF21FC(uint64_t *a1)
{
  uint64_t *v1;

  return sub_19CEF0B20(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_19CEF220C(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF782F8(*a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

unint64_t IntentDispatcherError.errorDescription.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD0000000000000A5;
  if (*v0 == 1)
    v1 = 0xD0000000000000C2;
  if (*v0)
    return v1;
  else
    return 0xD0000000000000B5;
}

BOOL static IntentDispatcherError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IntentDispatcherError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t IntentDispatcherError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CEF2308()
{
  unint64_t result;

  result = qword_1EE441750;
  if (!qword_1EE441750)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for IntentDispatcherError, &type metadata for IntentDispatcherError);
    atomic_store(result, (unint64_t *)&qword_1EE441750);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IntentDispatcherError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CEF23A0 + 4 * byte_19D060875[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CEF23D4 + 4 * asc_19D060870[v4]))();
}

uint64_t sub_19CEF23D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEF23DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEF23E4);
  return result;
}

uint64_t sub_19CEF23F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEF23F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CEF23FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEF2404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntentDispatcherError()
{
  return &type metadata for IntentDispatcherError;
}

uint64_t *sub_19CEF2420()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v2 = sub_19CD16068();
  if (!v1)
  {
    if (v2[2])
    {
      v4 = v2[4];
      v5 = v2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6 = v0[9];
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
      sub_19CD3FA18((_QWORD *)(v6 + 16), v4, v5, v0, (uint64_t)v9);
      os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
      swift_bridgeObjectRelease();
      swift_release();
      v7 = v10;
      v8 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      v0 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
      sub_19CEF2588((uint64_t)v9);
    }
    else
    {
      swift_bridgeObjectRelease();
      return (uint64_t *)MEMORY[0x1E0DEE9D8];
    }
  }
  return v0;
}

uint64_t sub_19CEF2534()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t *sub_19CEF2568()
{
  return sub_19CEF2420();
}

uint64_t sub_19CEF2588(uint64_t a1)
{
  destroy for StatefulCodingThunk(a1);
  return a1;
}

uint64_t sub_19CEF25BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v6, a1, a4);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19CEF2620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_19CCBE344;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t Future.then()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_19CEF26B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43E8E8 + dword_1EE43E8E8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  swift_getAssociatedTypeWitness();
  *v4 = v0;
  v4[1] = sub_19CCDEA0C;
  return v6(*(_QWORD *)(v0 + 16), 0, 0, (uint64_t)sub_19CEF2898, v2);
}

uint64_t sub_19CEF2774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a1;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = sub_19CEF2AD8;
  v8[5] = v7;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_19CEF2ABC;
  *(_QWORD *)(v10 + 24) = v9;
  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  (*(void (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t (*)(void *), uint64_t, _BYTE *, uint64_t, uint64_t))(a4 + 16))(sub_19CEF29CC, v8, sub_19CEF2A78, v10, v12, a3, a4);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t sub_19CEF2898(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CEF2774(a1, v1[4], v1[2], v1[3]);
}

uint64_t dispatch thunk of Future.then(perform:orCatchError:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_19CEF28AC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  sub_19CEF2AE4(a1, a2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_19CEF290C(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, double))(v9 + 16))((char *)&v11 - v7, a1, v6);
  return a2(v8);
}

uint64_t sub_19CEF29A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEF29CC(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEF290C(a1, *(uint64_t (**)(char *))(v1 + 32));
}

uint64_t sub_19CEF29D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2, &v4, v1);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_19CEF2A54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEF2A78(void *a1)
{
  uint64_t v1;
  uint64_t (*v3)(void *);
  id v4;

  v3 = *(uint64_t (**)(void *))(v1 + 16);
  v4 = a1;
  return v3(a1);
}

uint64_t sub_19CEF2AAC()
{
  return swift_deallocObject();
}

uint64_t sub_19CEF2ABC(uint64_t a1)
{
  return sub_19CEF29D8(a1);
}

uint64_t sub_19CEF2AC8()
{
  return swift_deallocObject();
}

uint64_t sub_19CEF2AD8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEF28AC(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_19CEF2AE4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - v8, a1, AssociatedTypeWitness, v7);
  (*(void (**)(_QWORD, char *, uint64_t))(v5 + 32))(*(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), v9, AssociatedTypeWitness);
  return swift_continuation_throwingResume();
}

uint64_t AppleServicesLocalizerFactory.__allocating_init(localizer:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_19CCD14C4(a1, v2 + 16);
  return v2;
}

uint64_t AppleServicesLocalizerFactory.init(localizer:)(__int128 *a1)
{
  uint64_t v1;

  sub_19CCD14C4(a1, v1 + 16);
  return v1;
}

id AppleServicesLocalizerFactory.jsExport.getter()
{
  _QWORD *v0;
  objc_class *v1;
  id v2;
  id v3;
  objc_super v5;
  _QWORD v6[5];

  v6[3] = *v0;
  v6[4] = &protocol witness table for AppleServicesLocalizerFactory;
  v1 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v2 = objc_allocWithZone(v1);
  sub_19CCD5B84((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v5.receiver = v2;
  v5.super_class = v1;
  swift_retain();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v3;
}

uint64_t AppleServicesLocalizerFactory.localizer(forLanguage:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CEF2CA0()
{
  uint64_t v0;

  sub_19CCD5B84(*(_QWORD *)(v0 + 24) + 16, *(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppleServicesLocalizerFactory.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t result;
  objc_super v7;
  _QWORD v8[4];

  v8[3] = *v1;
  v3 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v4 = objc_allocWithZone(v3);
  sub_19CCD5B84((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v7.receiver = v4;
  v7.super_class = v3;
  swift_retain();
  v5 = objc_msgSendSuper2(&v7, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  a1[3] = v3;
  a1[4] = &off_1E3DD3698;
  *a1 = v5;
  return result;
}

uint64_t AppleServicesLocalizerFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t AppleServicesLocalizerFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_19CEF2DCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;
  _QWORD v9[5];

  v3 = *v2;
  v9[3] = a1;
  v9[4] = a2;
  v9[0] = v3;
  v4 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v9, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v8.receiver = v5;
  v8.super_class = v4;
  swift_retain();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v6;
}

uint64_t sub_19CEF2E58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_19CEF2E74@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  objc_class *v5;
  id v6;
  id v7;
  uint64_t result;
  objc_super v9;
  _QWORD v10[5];

  v4 = *v2;
  v10[4] = &protocol witness table for AppleServicesLocalizerFactory;
  v10[3] = a1;
  v10[0] = v4;
  v5 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v6 = objc_allocWithZone(v5);
  sub_19CCD5B84((uint64_t)v10, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_retain();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a2[3] = v5;
  a2[4] = &off_1E3DD3698;
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for AppleServicesLocalizerFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppleServicesLocalizerFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppleServicesLocalizerFactory.__allocating_init(localizer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  swift_allocObject();
  v6 = sub_19CEF4044(a1, a2, a3);

  return v6;
}

_QWORD *AMSMetricsEventRecorder.init(metrics:defaultTopic:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;

  v4 = sub_19CEF4044(a1, a2, a3);

  return v4;
}

_QWORD *AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:anonymousTopics:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  swift_allocObject();
  v8 = sub_19CEF4124(a1, a2, a3, a4);

  return v8;
}

_QWORD *AMSMetricsEventRecorder.init(metrics:defaultTopic:anonymousTopics:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;

  v5 = sub_19CEF4124(a1, a2, a3, a4);

  return v5;
}

id AMSMetricsEventRecorder.monitorsLifecycleEvents.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_monitorsLifecycleEvents);
}

id AMSMetricsEventRecorder.monitorsLifecycleEvents.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setMonitorsLifecycleEvents_, a1 & 1);
}

id (*AMSMetricsEventRecorder.monitorsLifecycleEvents.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 16);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v3, sel_monitorsLifecycleEvents);
  return sub_19CEF30F4;
}

id sub_19CEF30F4(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setMonitorsLifecycleEvents_, *(unsigned __int8 *)(a1 + 8));
}

id sub_19CEF310C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t (*v17)(id);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v23;

  if (!*(_QWORD *)(*(_QWORD *)a1 + 16))
    return 0;
  v4 = v3;
  if (!a3)
    swift_bridgeObjectRetain();
  v6 = objc_allocWithZone(MEMORY[0x1E0CFDB68]);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithTopic_, v7);

  v9 = v4[11];
  v10 = objc_msgSend(v8, sel_topic);
  v11 = sub_19CFDF578();
  v13 = v12;

  LOBYTE(v9) = sub_19CD19780(v11, v13, v9);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    objc_msgSend(v8, sel_setAnonymous_, 1);
  v14 = v4[9];
  v15 = v4[10];
  __swift_project_boxed_opaque_existential_1(v4 + 6, v14);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v15 + 8))(&v23, v14, v15);
  v16 = v23;
  objc_msgSend(v8, sel_setAccount_, v23);
  v17 = (uint64_t (*)(id))v4[12];
  if (v17)
  {
    swift_retain();
    v5 = (id)v17(v8);
    sub_19CCE9F48((uint64_t)v17);
  }
  else
  {
    v5 = v8;
  }
  v18 = MEMORY[0x1E0DEA968];
  v19 = (void *)sub_19CFDF3B0();
  objc_msgSend(v5, sel_addPropertiesWithDictionary_, v19);

  sub_19CCE9F58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2BA0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v20 + 56) = v18;
  *(_QWORD *)(v20 + 32) = 0xD000000000000017;
  *(_QWORD *)(v20 + 40) = 0x800000019D075F50;
  v21 = (void *)sub_19CFDF854();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_removePropertiesForKeys_, v21);

  return v5;
}

uint64_t AMSMetricsEventRecorder._recordAsync(_:on:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t (*v23)();
  uint64_t v24;
  _BYTE v25[56];
  _QWORD v26[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
  v7 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 24) = v9;
  *(_BYTE *)(v7 + 32) = 0;
  v22 = *a1;
  v10 = sub_19CEF310C((uint64_t)&v22, a2, a3);
  if (v10)
  {
    v12 = v10;
    if ((v11 & 1) != 0)
    {

      sub_19CFBA2F4();
    }
    else
    {
      v13 = *(void **)(v3 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_19D058CC0;
      *(_QWORD *)(v14 + 32) = v12;
      *(_QWORD *)&v22 = v14;
      sub_19CFDF878();
      sub_19CCE5204(0, (unint64_t *)&qword_1EE43C2B8);
      v15 = v12;
      v16 = (void *)sub_19CFDF854();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v13, sel_promiseForEnqueueingEvents_, v16);

      v18 = sub_19CFC9A28(v17);
      v19 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
      v20 = sub_19CFDFDB8();
      v26[3] = v19;
      v26[4] = &protocol witness table for OS_dispatch_queue;
      v26[0] = v20;
      *(_QWORD *)&v22 = sub_19CEF36C4;
      *((_QWORD *)&v22 + 1) = 0;
      v23 = sub_19CEF36C8;
      v24 = 0;
      sub_19CCD5B84((uint64_t)v26, (uint64_t)v25);
      v25[40] = 0;
      sub_19CDBDCE8();
      sub_19CCECFE4((uint64_t)&v22, &qword_1EE43D300);

      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      return v18;
    }
  }
  else
  {
    sub_19CFBA2F4();
  }
  return v7;
}

uint64_t sub_19CEF35A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  __int128 v5;
  __int128 v7;
  __int128 v8;
  _QWORD v9[4];

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v0 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v9[3] = v3;
  v9[0] = 0xD000000000000016;
  v9[1] = 0x800000019D075F30;
  v7 = 0u;
  v8 = 0u;
  v4 = v0;
  sub_19CD40658((uint64_t)v9, (uint64_t)&v7);
  *(_BYTE *)(v2 + 64) = 0;
  v5 = v8;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)&v7 = v4;
  LOBYTE(v9[0]) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEF36C8()
{
  void *v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  Swift::String v11;
  __int128 v13;
  __int128 v14;
  _BYTE v15[32];
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[4];
  _QWORD *v22;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v0 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19D0522A0;
  v2 = v0;
  v22 = sub_19CD40918(0, 43, 0, MEMORY[0x1E0DEE9D8]);
  v3._object = (void *)0x800000019D075F00;
  v3._countAndFlagsBits = 0xD00000000000002ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v3);
  swift_getErrorValue();
  v21[3] = v20;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v20);
  sub_19CD40794((uint64_t)v21, (uint64_t)v15);
  v13 = 0u;
  v14 = 0u;
  sub_19CD40658((uint64_t)v15, (uint64_t)&v13);
  v18 = 0;
  v16 = v13;
  v17 = v14;
  v5 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_19CD40918(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_19CD40918((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[5 * v7];
  v9 = v16;
  v10 = v17;
  *((_BYTE *)v8 + 64) = v18;
  *((_OWORD *)v8 + 2) = v9;
  *((_OWORD *)v8 + 3) = v10;
  v22 = v5;
  sub_19CCECFE4((uint64_t)v21, &qword_1ECEB3370);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  *(_QWORD *)(v1 + 32) = v22;
  *(_QWORD *)&v16 = v2;
  LOBYTE(v13) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v13);

  return swift_bridgeObjectRelease();
}

uint64_t AMSMetricsEventRecorder.flush()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[4];
  _BYTE v4[48];
  _QWORD v5[5];

  sub_19CE69F7C(objc_msgSend(*(id *)(v0 + 16), sel_flush));
  v5[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  v5[4] = &protocol witness table for OS_dispatch_queue;
  v5[0] = sub_19CFDFDB8();
  v3[0] = sub_19CEF39A8;
  v3[1] = 0;
  v3[2] = sub_19CEF3BAC;
  v3[3] = 0;
  sub_19CCD5B84((uint64_t)v5, (uint64_t)v4);
  v4[40] = 0;
  sub_19CDBDE78();
  sub_19CCECFE4((uint64_t)v3, &qword_1ECEB0538);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  v1 = sub_19CEF3F10((uint64_t)sub_19CEF3DA8, 0);
  swift_release();
  return v1;
}

uint64_t sub_19CEF39A8(void **a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  id v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];
  __int128 v18;
  __int128 v19;
  char v20;
  _QWORD v21[4];
  _QWORD *v22;

  v1 = *a1;
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v22 = sub_19CD40918(0, 24, 0, MEMORY[0x1E0DEE9D8]);
  v5._countAndFlagsBits = 0x2064656873756C46;
  v5._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  v21[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  v21[0] = v1;
  sub_19CD40794((uint64_t)v21, (uint64_t)v17);
  v15 = 0u;
  v16 = 0u;
  v6 = v1;
  sub_19CD40658((uint64_t)v17, (uint64_t)&v15);
  v20 = 0;
  v18 = v15;
  v19 = v16;
  v7 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_19CD40918(0, v7[2] + 1, 1, v7);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_19CD40918((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  v10 = &v7[5 * v9];
  v11 = v18;
  v12 = v19;
  *((_BYTE *)v10 + 64) = v20;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  v22 = v7;
  sub_19CCECFE4((uint64_t)v21, &qword_1ECEB3370);
  v13._countAndFlagsBits = 0x7363697274656D20;
  v13._object = (void *)0xEF73746E65766520;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(_QWORD *)(v3 + 32) = v22;
  *(_QWORD *)&v18 = v4;
  LOBYTE(v15) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CEF3BAC()
{
  void *v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  Swift::String v11;
  __int128 v13;
  __int128 v14;
  _BYTE v15[32];
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[4];
  _QWORD *v22;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v0 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19D0522A0;
  v2 = v0;
  v22 = sub_19CD40918(0, 41, 0, MEMORY[0x1E0DEE9D8]);
  v3._object = (void *)0x800000019D075ED0;
  v3._countAndFlagsBits = 0xD000000000000028;
  LogMessage.StringInterpolation.appendLiteral(_:)(v3);
  swift_getErrorValue();
  v21[3] = v20;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v19, v20);
  sub_19CD40794((uint64_t)v21, (uint64_t)v15);
  v13 = 0u;
  v14 = 0u;
  sub_19CD40658((uint64_t)v15, (uint64_t)&v13);
  v18 = 0;
  v16 = v13;
  v17 = v14;
  v5 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_19CD40918(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_19CD40918((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[5 * v7];
  v9 = v16;
  v10 = v17;
  *((_BYTE *)v8 + 64) = v18;
  *((_OWORD *)v8 + 2) = v9;
  *((_OWORD *)v8 + 3) = v10;
  v22 = v5;
  sub_19CCECFE4((uint64_t)v21, &qword_1ECEB3370);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  *(_QWORD *)(v1 + 32) = v22;
  *(_QWORD *)&v16 = v2;
  LOBYTE(v13) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v13);

  return swift_bridgeObjectRelease();
}

id sub_19CEF3DA8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_integerValue);
  *a2 = result;
  return result;
}

uint64_t AMSMetricsEventRecorder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  sub_19CCE9F48(*(_QWORD *)(v0 + 96));
  return v0;
}

uint64_t sub_19CEF3E24(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return AMSMetricsEventRecorder._recordAsync(_:on:)(a1, a2, a3);
}

uint64_t sub_19CEF3E44()
{
  return AMSMetricsEventRecorder.flush()();
}

uint64_t sub_19CEF3E64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_19CEF3E94(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  a2(&v2, &v3);
  sub_19CFBA4F4(v2);
}

uint64_t sub_19CEF3F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _BYTE v11[24];
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v12 = &type metadata for SyncTaskScheduler;
  v13 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1608);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  v9[0] = sub_19CEF4294;
  v9[1] = v7;
  v9[2] = sub_19CEF42A0;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBDE78();
  sub_19CCECFE4((uint64_t)v9, &qword_1ECEB0538);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v4;
}

_QWORD *sub_19CEF4044(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  id v8;

  v3[12] = 0;
  v3[13] = 0;
  v3[2] = a1;
  v6 = objc_msgSend(a1, "bag");
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA78]), sel_initWithBag_, v6);
  swift_unknownObjectRelease();
  v3[3] = v7;
  v3[4] = a2;
  v3[5] = a3;
  v8 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v3[9] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
  v3[10] = &protocol witness table for ACAccountStore;
  v3[6] = v8;
  v3[11] = MEMORY[0x1E0DEE9E8];
  return v3;
}

_QWORD *sub_19CEF4124(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;

  v4[12] = 0;
  v4[13] = 0;
  v4[2] = a1;
  v8 = objc_msgSend(a1, "bag");
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA78]), sel_initWithBag_, v8);
  swift_unknownObjectRelease();
  v4[3] = v9;
  v4[4] = a2;
  v4[5] = a3;
  v4[11] = a4;
  v10 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v4[9] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
  v4[10] = &protocol witness table for ACAccountStore;
  v4[6] = v10;
  return v4;
}

id sub_19CEF4200@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_monitorsLifecycleEvents);
  *a2 = (_BYTE)result;
  return result;
}

id sub_19CEF4234(unsigned __int8 *a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a2 + 16), sel_setMonitorsLifecycleEvents_, *a1);
}

uint64_t method lookup function for AMSMetricsEventRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AMSMetricsEventRecorder.__allocating_init(metrics:defaultTopic:anonymousTopics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19CEF4268()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CEF4294(uint64_t *a1)
{
  uint64_t v1;

  sub_19CEF3E94(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void sub_19CEF42A0(void *a1)
{
  sub_19CF4C8F0(a1);
}

uint64_t static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v23;

  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v23 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v18((char *)&v23 - v16, a2, v8, v15);
  ((void (*)(char *, uint64_t, uint64_t))v18)(v12, a3, v8);
  type metadata accessor for UnpackJetpackPhase();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  v20 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v20(v19 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v17, v8);
  v20(v19 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v12, v8);
  *(_BYTE *)(v19 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = 0;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_19CEF4E48;
  *(_QWORD *)(v21 + 24) = v19;
  *a4 = sub_19CEF4A64;
  a4[1] = v21;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnpackJetpackPhase()
{
  uint64_t result;

  result = qword_1ECEB1430;
  if (!qword_1ECEB1430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CEF4438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  unint64_t v12;
  uint64_t (*v13)(char *, _QWORD *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _UNKNOWN **v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v27 = sub_19CFDEDE0();
  v2 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB2C88 != -1)
    swift_once();
  v6 = (void *)qword_1ECEB29D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  v28 = xmmword_19D0522A0;
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v8 + 16) = v28;
  v35 = v9;
  v32 = 0xD00000000000001DLL;
  v33 = 0x800000019D075FD0;
  v29 = 0u;
  v30 = 0u;
  v10 = v6;
  sub_19CD40658((uint64_t)&v32, (uint64_t)&v29);
  *(_BYTE *)(v8 + 64) = 0;
  v11 = v30;
  *(_OWORD *)(v8 + 32) = v29;
  *(_OWORD *)(v8 + 48) = v11;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)&v29 = v10;
  LOBYTE(v32) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v32);

  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature))
    v13 = sub_19CEC786C;
  else
    v13 = 0;
  v14 = OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL;
  swift_bridgeObjectRetain();
  sub_19CFDED8C();
  v15 = type metadata accessor for FileInputStream();
  swift_allocObject();
  v16 = sub_19CE90378();
  v17 = v1 + v14;
  v32 = v12;
  v33 = (unint64_t)v13;
  v34 = 0;
  *((_QWORD *)&v30 + 1) = v15;
  v31 = &off_1E3DCC580;
  *(_QWORD *)&v29 = v16;
  sub_19CEC8008(&v29, v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v17, v27);
  sub_19CFDED8C();
  v22 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v23 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v22, sel_initWithPath_, v23);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v21);
  if (v24)
  {
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v13);
    v25 = 1;
  }
  else
  {
    sub_19CEF4C34();
    v24 = (id)swift_allocError();
    swift_bridgeObjectRelease();
    sub_19CCE9F48((uint64_t)v13);
    v25 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB15F0);
  v18 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v18 + 16) = v19;
  *(_QWORD *)(v18 + 24) = v24;
  *(_BYTE *)(v18 + 32) = v25;
  return v18;
}

uint64_t static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v25;

  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)&v25 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v20((char *)&v25 - v18, a2, v10, v17);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v14, a3, v10);
  type metadata accessor for UnpackJetpackPhase();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v22(v21 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v19, v10);
  v22(v21 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v14, v10);
  *(_BYTE *)(v21 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = a4;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_19CEF4A68;
  *(_QWORD *)(v23 + 24) = v21;
  *a5 = sub_19CEF4A64;
  a5[1] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CEF48E0()
{
  return sub_19CEF4438();
}

uint64_t static UnpackJetpackError.== infix(_:_:)()
{
  return 1;
}

uint64_t UnpackJetpackError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t UnpackJetpackError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CEF496C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL;
  v2 = sub_19CFDEDE0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_19CEF49E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v5 = sub_19CEF4C78(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19CEF4A40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEF4A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CEF4C78(v2, v3);
  swift_release();
  return v4;
}

unint64_t sub_19CEF4AC8()
{
  unint64_t result;

  result = qword_1EE441780;
  if (!qword_1EE441780)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for UnpackJetpackError, &type metadata for UnpackJetpackError);
    atomic_store(result, (unint64_t *)&qword_1EE441780);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnpackJetpackError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEF4B4C + 4 * byte_19D060B10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEF4B6C + 4 * byte_19D060B15[v4]))();
}

_BYTE *sub_19CEF4B4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEF4B6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEF4B74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEF4B7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEF4B84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEF4B8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UnpackJetpackError()
{
  return &type metadata for UnpackJetpackError;
}

uint64_t sub_19CEF4BA8()
{
  return type metadata accessor for UnpackJetpackPhase();
}

uint64_t sub_19CEF4BB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_19CEF4C34()
{
  unint64_t result;

  result = qword_1EE441788;
  if (!qword_1EE441788)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for UnpackJetpackError, &type metadata for UnpackJetpackError);
    atomic_store(result, (unint64_t *)&qword_1EE441788);
  }
  return result;
}

uint64_t sub_19CEF4C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB15F0);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CEF4DF0;
  v9[1] = v7;
  v9[2] = sub_19CEF4E00;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE6E0((uint64_t)v9);
  sub_19CEF4E08((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CEF4DBC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CEF4DF0(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF7844C(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CEF4E00(void *a1)
{
  sub_19CF7875C(a1);
}

uint64_t sub_19CEF4E08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D310);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CodeByKind.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_19CEF4EA8(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[2];
  __int128 v24;
  int64_t v25;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v25 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = 16 * i;
    v18 = *(_QWORD *)(a3 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(a3 + 48) + v17);
    v21 = *v19;
    v20 = v19[1];
    v23[0] = *v19;
    v23[1] = v20;
    v24 = *(_OWORD *)(v18 + v17);
    swift_bridgeObjectRetain();
    v22 = a1(v23);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v21;
    }
    if ((v22 & 1) != 0)
    {
      swift_release();
      return v21;
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
      break;
    if (v11 >= v25)
      goto LABEL_28;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v25)
        goto LABEL_28;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_16;
      v16 = v11 + 2;
      if (v11 + 2 >= v25)
        goto LABEL_28;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_16;
      v16 = v11 + 3;
      if (v11 + 3 >= v25)
        goto LABEL_28;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_16:
        v11 = v16;
        goto LABEL_17;
      }
      v16 = v11 + 4;
      if (v11 + 4 < v25)
      {
        v15 = *(_QWORD *)(v6 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            v11 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_31;
            if (v11 >= v25)
              goto LABEL_28;
            v15 = *(_QWORD *)(v6 + 8 * v11);
            ++v16;
            if (v15)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_19CEF50B4(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v22[3];
  int64_t v23;

  v21 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v23 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * i);
    v22[0] = *v16;
    v22[1] = v17;
    v22[2] = v19;
    swift_bridgeObjectRetain();
    v20 = a1(v22);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((v20 & 1) != 0)
    {
      swift_release();
      return v18;
    }
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      break;
    if (v10 >= v23)
      goto LABEL_28;
    v14 = *(_QWORD *)(v21 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v23)
        goto LABEL_28;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
        goto LABEL_16;
      v15 = v10 + 2;
      if (v10 + 2 >= v23)
        goto LABEL_28;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
        goto LABEL_16;
      v15 = v10 + 3;
      if (v10 + 3 >= v23)
        goto LABEL_28;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
      {
LABEL_16:
        v10 = v15;
        goto LABEL_17;
      }
      v15 = v10 + 4;
      if (v10 + 4 < v23)
      {
        v14 = *(_QWORD *)(v21 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            v10 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_31;
            if (v10 >= v23)
              goto LABEL_28;
            v14 = *(_QWORD *)(v21 + 8 * v10);
            ++v15;
            if (v14)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    v8 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t CodeByKind.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t CodeByKind.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

uint64_t (*CodeByKind.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodeByKind.description.getter()
{
  swift_getAssociatedTypeWitness();
  sub_19CFE0670();
  return 0;
}

uint64_t CodeByKind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, _QWORD *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t AssociatedTypeWitness;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  char v93;
  _QWORD *v94;

  v79 = a4;
  v7 = sub_19CFE01A8();
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v80 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v78 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v10);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v74 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v15, v16);
  v73 = (char *)&v73 - v17;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F70);
  v87 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84, v18);
  v86 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439F10);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v73 - v26;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (char **)((char *)&v73 - v30);
  MEMORY[0x1E0C80A78](v32, v33);
  v35 = (char *)&v73 - v34;
  v88 = a3;
  v37 = type metadata accessor for CodeByKind(0, a2, a3, v36);
  v76 = *(_QWORD *)(v37 - 8);
  v77 = v37;
  MEMORY[0x1E0C80A78](v37, v38);
  v75 = (char *)&v73 - v39;
  v40 = a1[3];
  v94 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v40);
  sub_19CDD5ED8();
  v41 = v89;
  sub_19CFE09E8();
  if (v41)
  {
    *v31 = v41;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_19CEF5BB4((uint64_t)v27, (uint64_t)v31);
  }
  v42 = (uint64_t)v31;
  v43 = (uint64_t)v35;
  sub_19CEF5BB4(v42, (uint64_t)v35);
  sub_19CEF5BFC((uint64_t)v35, (uint64_t)v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_19CCECFE4((uint64_t)v23, (uint64_t *)&unk_1EE439F10);
LABEL_9:
    v47 = v94;
    v48 = v88;
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 24))(a2, v88);
    if (!v49)
    {
      __swift_project_boxed_opaque_existential_1(v47, v47[3]);
      sub_19CFE09B8();
      *(_QWORD *)&v92 = 0;
      *((_QWORD *)&v92 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v52 = v80;
      sub_19CFE019C();
      v53 = sub_19CFE01B4();
      swift_allocError();
      v55 = v54;
      v57 = v81;
      v56 = v82;
      (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v54, v52, v82);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v55, *MEMORY[0x1E0DEC458], v53);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v56);
      sub_19CCECFE4(v43, (uint64_t *)&unk_1EE439F10);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    }
    v50 = v83;
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v48 + 40))(v49, v47, a2, v48);
    goto LABEL_11;
  }
  v44 = v86;
  v45 = v87;
  v46 = v84;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v23, v84);
  v89 = xmmword_19D060C40;
  v92 = xmmword_19D060C40;
  v93 = 1;
  if ((sub_19CFE04CC() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
    goto LABEL_9;
  }
  v92 = v89;
  v93 = 1;
  v59 = sub_19CFE0490();
  v61 = v60;
  v62 = v88;
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 16))(a2, v88);
  if (*(_QWORD *)(v63 + 16))
  {
    swift_bridgeObjectRetain();
    v64 = sub_19CD23A50(v59, v61);
    if ((v65 & 1) != 0)
    {
      v66 = v62;
      v67 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v64);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v68 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v62 + 40);
      v69 = v73;
      v47 = v94;
      v68(v67, v94, a2, v66);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v46);
      sub_19CCECFE4(v43, (uint64_t *)&unk_1EE439F10);
      v50 = v69;
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 32))(a2, v62);
  if (!v70)
  {
    v92 = v89;
    v93 = 1;
    v90 = 0;
    v91 = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    v90 = 1008758606;
    v91 = 0xE400000000000000;
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFE01B4();
    swift_allocError();
    sub_19CEF6434();
    v72 = v86;
    sub_19CFE0190();
    swift_bridgeObjectRelease();
    sub_19CDD5F1C(v92, *((uint64_t *)&v92 + 1), v93);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v46);
    sub_19CCECFE4(v43, (uint64_t *)&unk_1EE439F10);
    v47 = v94;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
  }
  v71 = v70;
  swift_bridgeObjectRelease();
  v50 = v74;
  v47 = v94;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v62 + 40))(v71, v94, a2, v62);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v46);
LABEL_11:
  sub_19CCECFE4(v43, (uint64_t *)&unk_1EE439F10);
LABEL_12:
  v51 = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v50, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v79, v51, v77);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
}

uint64_t type metadata accessor for CodeByKind(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodeByKind);
}

uint64_t sub_19CEF5BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CEF5BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CodeByKind.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, double);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  char *v49;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4372B8);
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2 + 16;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(v12 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v17((char *)&v40 - v18, v3, AssociatedTypeWitness, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441798);
  if (swift_dynamicCast())
  {
    sub_19CCD14C4(&v44, (uint64_t)v47);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    MEMORY[0x1E0C80A78](v19, v20);
    *(&v40 - 2) = (uint64_t)v47;
    v21 = v49;
    sub_19CEF50B4((uint64_t (*)(_QWORD *))sub_19CEF6480, (uint64_t)(&v40 - 4), v19);
    v23 = v22;
    swift_bridgeObjectRelease();
    if (v23)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19CDD5ED8();
      sub_19CFE0A24();
      v44 = xmmword_19D060C40;
      LOBYTE(v45) = 1;
      sub_19CFE0538();
      swift_bridgeObjectRelease();
      if (!v21)
      {
        __swift_project_boxed_opaque_existential_1(v47, v48);
        sub_19CFDF4B8();
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    }
    else
    {
      v30 = sub_19CFE01D8();
      swift_allocError();
      v32 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8);
      v33 = v48;
      v34 = __swift_project_boxed_opaque_existential_1(v47, v48);
      *((_QWORD *)&v45 + 1) = v33;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_2Tm, v34, v33);
      v36 = runtimeType(of:)(&v44);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v44);
      v32[3] = swift_getMetatypeMetadata();
      *v32 = v36;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19CFE09B8();
      *(_QWORD *)&v44 = 0;
      *((_QWORD *)&v44 + 1) = 0xE000000000000000;
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      v42 = 0xD000000000000017;
      v43 = 0x800000019D0760A0;
      v37 = v48;
      v38 = __swift_project_boxed_opaque_existential_1(v47, v48);
      *((_QWORD *)&v45 + 1) = v37;
      v39 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v39, v38, v37);
      runtimeType(of:)(&v44);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v44);
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x1E0DEC4B0], v30);
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
  }
  else
  {
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
    sub_19CCECFE4((uint64_t)&v44, &qword_1EE4417A0);
    v24 = sub_19CFE01D8();
    v41 = swift_allocError();
    v26 = v25;
    v49 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
    v26[3] = AssociatedTypeWitness;
    v27 = __swift_allocate_boxed_opaque_existential_2Tm(v26);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v17)(v27, v3, AssociatedTypeWitness);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v44 = 60;
    *((_QWORD *)&v44 + 1) = 0xE100000000000000;
    v48 = AssociatedTypeWitness;
    v28 = __swift_allocate_boxed_opaque_existential_2Tm(v47);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v17)(v28, v3, AssociatedTypeWitness);
    runtimeType(of:)(v47);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC4B0], v24);
    return swift_willThrow();
  }
}

uint64_t runtimeType(of:)(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return swift_getDynamicType();
}

BOOL sub_19CEF61E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v6;
  uint64_t v8[4];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = a2[3];
  v4 = __swift_project_boxed_opaque_existential_1(a2, v3);
  v8[3] = v3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v8);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_2Tm, v4, v3);
  v6 = runtimeType(of:)(v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v2 == v6;
}

uint64_t sub_19CEF6268@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodeByKind.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_19CEF6284(_QWORD *a1, uint64_t a2)
{
  return CodeByKind.encode(to:)(a1, a2);
}

uint64_t static CodeByKind<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19CFDF548() & 1;
}

uint64_t sub_19CEF6300()
{
  return static CodeByKind<>.== infix(_:_:)();
}

uint64_t CodeByKind<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19CFDF4D0();
}

uint64_t CodeByKind<>.hashValue.getter()
{
  sub_19CFE08C8();
  swift_getAssociatedTypeWitness();
  sub_19CFDF4D0();
  return sub_19CFE0910();
}

uint64_t sub_19CEF63D4()
{
  return CodeByKind<>.hashValue.getter();
}

uint64_t sub_19CEF63DC()
{
  return CodeByKind<>.hash(into:)();
}

uint64_t sub_19CEF63E4()
{
  sub_19CFE08C8();
  CodeByKind<>.hash(into:)();
  return sub_19CFE0910();
}

unint64_t sub_19CEF6434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE441790;
  if (!qword_1EE441790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE439F70);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DED060], v1);
    atomic_store(result, (unint64_t *)&qword_1EE441790);
  }
  return result;
}

BOOL sub_19CEF6480(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEF61E0(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_19CEF649C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> CodeByKind<A>, a1, &v4);
}

uint64_t sub_19CEF64D4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CEF6550(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_19CEF65E4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_19CEF6630(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CEF6688(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CEF66E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CEF6738(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_19CEF6790(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_19CEF68D0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

ValueMetadata *type metadata accessor for SystemDateProvider()
{
  return &type metadata for SystemDateProvider;
}

uint64_t dispatch thunk of DeepLinkIntentModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for BaseVersionFieldProvider()
{
  return &type metadata for BaseVersionFieldProvider;
}

uint64_t sub_19CEF6ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a3;
  return swift_task_switch();
}

void sub_19CEF6AE4(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;
  _QWORD v11[2];

  v5 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  v6 = v5 + 4;
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_19CCE3B14(v6, a1);
  os_unfair_lock_unlock(v7);
  if (!v2)
  {
    v11[1] = v11;
    v8 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_db);
    v9 = (uint64_t *)&v8[4];
    v10 = v8 + 6;
    os_unfair_lock_lock(v8 + 6);
    sub_19CEF6D80(v9, a2);
    os_unfair_lock_unlock(v10);
    os_unfair_lock_lock(v7);
    sub_19CCC57D8((uint64_t *)v6, a1);
    os_unfair_lock_unlock(v7);
  }
}

void sub_19CEF6C38(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;

  v5 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  v6 = v5 + 4;
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_19CCE3B14(v6, a1);
  os_unfair_lock_unlock(v7);
  if (!v2)
  {
    v8 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_db);
    v9 = (uint64_t *)&v8[4];
    v10 = v8 + 6;
    os_unfair_lock_lock(v8 + 6);
    sub_19CEFB850(v9, a2, &v11);
    os_unfair_lock_unlock(v10);
    os_unfair_lock_lock(v7);
    sub_19CCC57D8((uint64_t *)v6, a1);
    os_unfair_lock_unlock(v7);
  }
}

uint64_t sub_19CEF6D80(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CCE3B90(a1);
  if (!v2)
  {
    a2();
    return swift_release();
  }
  return result;
}

void sub_19CEF6DE8(void (*a1)(__int128 *__return_ptr), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v10;
  os_unfair_lock_s *v11;
  _QWORD v12[2];

  v6 = v5;
  if (qword_1EE43D750 != -1)
    swift_once();
  if ((byte_1EE465D91 & 1) == 0)
  {
    v12[1] = v12;
    os_unfair_lock_lock((os_unfair_lock_t)(a5 + 40));
    sub_19CE91270((uint64_t *)(a5 + 16), a1);
    if (v5)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)a5);
      __break(1u);
      return;
    }
    v6 = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
  }
  a3();
  if (v6)
  {
    if ((byte_1EE465D91 & 1) == 0)
    {
LABEL_8:
      v10 = (void *)(a5 + 16);
      v11 = (os_unfair_lock_s *)(a5 + 40);
      os_unfair_lock_lock(v11);
      sub_19CE9194C(v10);
      os_unfair_lock_unlock(v11);
    }
  }
  else if ((byte_1EE465D91 & 1) == 0)
  {
    goto LABEL_8;
  }
}

void sub_19CEF6F60(void (*a1)(__int128 *__return_ptr), uint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v10;
  os_unfair_lock_s *v11;
  void *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;

  v6 = v5;
  if (qword_1EE43D750 != -1)
    swift_once();
  if ((byte_1EE465D91 & 1) == 0)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a5 + 40));
    sub_19CE91270((uint64_t *)(a5 + 16), a1);
    if (v5)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)a5);
      __break(1u);
      return;
    }
    v6 = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 40));
  }
  a3(&v14);
  if (v6)
  {
    if ((byte_1EE465D91 & 1) == 0)
    {
      v10 = (void *)(a5 + 16);
      v11 = (os_unfair_lock_s *)(a5 + 40);
      os_unfair_lock_lock(v11);
      sub_19CE9194C(v10);
      os_unfair_lock_unlock(v11);
    }
  }
  else if ((byte_1EE465D91 & 1) == 0)
  {
    v12 = (void *)(a5 + 16);
    v13 = (os_unfair_lock_s *)(a5 + 40);
    os_unfair_lock_lock(v13);
    sub_19CE9194C(v12);
    os_unfair_lock_unlock(v13);
  }
}

uint64_t sub_19CEF70C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19CEF7100 + 4 * byte_19D060E20[a1]))(0xD000000000000018, 0x800000019D076280);
}

uint64_t sub_19CEF7100(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_19CEF7134()
{
  unsigned __int8 *v0;

  return sub_19CEF70C8(*v0);
}

id JetPackAssetDiskCache.__allocating_init(url:)(char *a1)
{
  return sub_19CCE162C(a1);
}

uint64_t JetPackAssetDiskCache._cache(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[72] = v2;
  v3[71] = a2;
  v3[70] = a1;
  v4 = sub_19CFDECF0();
  v3[73] = v4;
  v3[74] = *(_QWORD *)(v4 - 8);
  v3[75] = swift_task_alloc();
  v5 = sub_19CFDEDE0();
  v3[76] = v5;
  v3[77] = *(_QWORD *)(v5 - 8);
  v3[78] = swift_task_alloc();
  v6 = sub_19CFDEFA8();
  v3[79] = v6;
  v3[80] = *(_QWORD *)(v6 - 8);
  v3[81] = swift_task_alloc();
  v7 = sub_19CFDF1E8();
  v3[82] = v7;
  v3[83] = *(_QWORD *)(v7 - 8);
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  v3[89] = swift_task_alloc();
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  v8 = sub_19CFDF1AC();
  v3[92] = v8;
  v3[93] = *(_QWORD *)(v8 - 8);
  v3[94] = swift_task_alloc();
  v3[95] = swift_task_alloc();
  v3[96] = swift_task_alloc();
  v3[97] = swift_task_alloc();
  v3[98] = swift_task_alloc();
  v3[99] = swift_task_alloc();
  v3[100] = swift_task_alloc();
  v3[101] = swift_task_alloc();
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEF734C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  int *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  NSObject *v52;
  os_signpost_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(_QWORD, uint64_t, uint64_t);
  uint64_t v70;
  _QWORD *v71[2];
  __int128 v72;
  __int128 v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  if (qword_1ECEB0900 != -1)
    swift_once();
  v70 = v0 + 336;
  v1 = sub_19CFDF1DC();
  *(_QWORD *)(v0 + 832) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECEB09F8);
  sub_19CFDF1C4();
  sub_19CFDF188();
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 816);
    v5 = *(_QWORD *)(v0 + 744);
    v6 = *(_QWORD *)(v0 + 736);
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16);
    v7(v4, *(_QWORD *)(v0 + 824), v6);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v9, "Cache Asset", "", v8, 2u);
    MEMORY[0x1A1ADBE9C](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 744);

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v11 = (__int128 *)(v0 + 216);
  *(_QWORD *)(v0 + 840) = v7;
  v69 = v7;
  v7(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 824), *(_QWORD *)(v0 + 736));
  sub_19CFDF20C();
  swift_allocObject();
  *(_QWORD *)(v0 + 848) = sub_19CFDF200();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v12 = *(_QWORD *)(v0 + 568);
  v13 = (void *)qword_1ECEB0B60;
  *(_QWORD *)(v0 + 856) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  v71[0] = sub_19CD40918(0, 30, 0, MEMORY[0x1E0DEE9D8]);
  v16._object = (void *)0x800000019D0760D0;
  v16._countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  v17 = type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v0 + 864) = v17;
  v18 = *(int *)(v17 + 28);
  *(_DWORD *)(v0 + 156) = v18;
  v19 = (uint64_t *)(v12 + v18);
  v20 = *v19;
  v21 = v19[1];
  *(_QWORD *)(v0 + 360) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 336) = v20;
  *(_QWORD *)(v0 + 344) = v21;
  sub_19CD40794(v70, v0 + 400);
  *v11 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658(v0 + 400, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v22 = *(_OWORD *)(v0 + 232);
  v72 = *v11;
  v73 = v22;
  v74 = *(_BYTE *)(v0 + 248);
  v23 = v71[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_19CD40918(0, v71[0][2] + 1, 1, v71[0]);
  v25 = v23[2];
  v24 = v23[3];
  if (v25 >= v24 >> 1)
    v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
  v26 = *(_QWORD *)(v0 + 568);
  v23[2] = v25 + 1;
  v27 = &v23[5 * v25];
  v28 = v72;
  v29 = v73;
  *((_BYTE *)v27 + 64) = v74;
  *((_OWORD *)v27 + 2) = v28;
  *((_OWORD *)v27 + 3) = v29;
  v71[0] = v23;
  sub_19CCECFE4(v70, &qword_1ECEB3370);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *(_QWORD *)(v14 + 32) = v23;
  *(_QWORD *)&v72 = v15;
  LOBYTE(v71[0]) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)v71);
  swift_bridgeObjectRelease();

  v31 = (int *)(v26 + *(int *)(v17 + 24));
  if ((v31[1] & 1) != 0)
  {
    v32 = *(_QWORD **)(v0 + 568);
    sub_19CEF9310(*v19, v19[1]);
    v33 = v32[3];
    v34 = v32[4];
    __swift_project_boxed_opaque_existential_1(v32, v33);
    *(_QWORD *)(v0 + 872) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
    return swift_task_switch();
  }
  else
  {
    v68 = *v31;
    v36 = (void *)qword_1ECEB0B60;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 392) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 368) = 0xD000000000000029;
    *(_QWORD *)(v0 + 376) = 0x800000019D076110;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    v39 = v36;
    sub_19CD40658(v0 + 368, v0 + 296);
    *(_BYTE *)(v0 + 328) = 0;
    v40 = *(_OWORD *)(v0 + 312);
    *(_OWORD *)(v38 + 32) = *(_OWORD *)(v0 + 296);
    *(_OWORD *)(v38 + 48) = v40;
    *(_BYTE *)(v38 + 64) = *(_BYTE *)(v0 + 328);
    *(_QWORD *)(v37 + 32) = v38;
    *(_QWORD *)&v72 = v39;
    LOBYTE(v71[0]) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v37, (JetEngine::LogMessageLevel)v71);
    swift_bridgeObjectRelease();

    sub_19CFDE9C0();
    swift_allocObject();
    sub_19CFDE9B4();
    type metadata accessor for JetPackAsset.Metadata(0);
    sub_19CCC60DC(&qword_1ECEB0908, (uint64_t)&protocol conformance descriptor for JetPackAsset.Metadata);
    v41 = sub_19CFDE9A8();
    v43 = v42;
    v44 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(*(_QWORD *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
    v45 = swift_task_alloc();
    *(_QWORD *)(v45 + 16) = v41;
    *(_QWORD *)(v45 + 24) = v43;
    *(_DWORD *)(v45 + 32) = v68;
    *(_QWORD *)(v45 + 40) = v44;
    v46 = *(_QWORD *)(v44 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
    v47 = (_QWORD *)swift_task_alloc();
    v47[2] = v44;
    v47[3] = sub_19CEFBBD8;
    v47[4] = v45;
    sub_19CD3BE5C(v41, v43);
    swift_retain();
    sub_19CEF6DE8((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v44, sub_19CEFBF1C, (uint64_t)v47, v46);
    v48 = *(_QWORD *)(v0 + 568);
    v49 = *(_QWORD *)(v0 + 560);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    v50 = v75;
    v51 = v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CCF4A54(v50, v51);
    sub_19CD3BE18(v41, v43);
    swift_release();
    sub_19CD3BE18(v41, v43);
    sub_19CDF3E10(v48, v49);
    v52 = sub_19CFDF1C4();
    sub_19CFDF1F4();
    v53 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      v54 = *(_QWORD *)(v0 + 728);
      v55 = *(_QWORD *)(v0 + 664);
      v56 = *(_QWORD *)(v0 + 656);
      swift_retain();
      sub_19CFDF218();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v55 + 88))(v54, v56) == *MEMORY[0x1E0DF2190])
      {
        v57 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 664) + 8))(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 656));
        v57 = "";
      }
      v58 = (uint64_t *)(v0 + 816);
      v61 = *(_QWORD *)(v0 + 808);
      v62 = *(_QWORD *)(v0 + 744);
      v63 = *(_QWORD *)(v0 + 736);
      v69(*(_QWORD *)(v0 + 816), v61, v63);
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      v65 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v52, v53, v65, "Cache Asset", v57, v64, 2u);
      MEMORY[0x1A1ADBE9C](v64, -1, -1);

      v60 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v60(v61, v63);
    }
    else
    {
      v58 = (uint64_t *)(v0 + 808);
      v59 = *(_QWORD *)(v0 + 744);

      v60 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    }
    v66 = *(_QWORD *)(v0 + 824);
    v67 = *(_QWORD *)(v0 + 736);
    v60(*v58, v67);
    swift_release();
    v60(v66, v67);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CEF805C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = v0 + 552;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_19CEF8108;
  *(_QWORD *)(v0 + 80) = swift_continuation_init();
  *(_BYTE *)(v0 + 152) = 1;
  sub_19CCDFA5C();
  sub_19CCECFE4(v0 + 80, qword_1ECEB1C80);
  return swift_continuation_await();
}

uint64_t sub_19CEF8108()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 880) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 888) = *(_QWORD *)(v1 + 552);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CEF81C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  __int128 v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  id v50;
  uint64_t v51;
  NSObject *v52;
  os_signpost_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_signpost_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t *v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  os_signpost_id_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint8_t *v85;
  os_signpost_id_t v86;
  uint64_t v87;
  uint64_t v88;
  int v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  __int128 v102;
  __int128 v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;

  v107 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 640);
  v3 = *(_QWORD *)(v0 + 632);
  sub_19CFDEF9C();
  v4 = sub_19CFDEF90();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 528) = 0x6B63617074656A2ELL;
  *(_QWORD *)(v0 + 536) = 0xE800000000000000;
  *(_QWORD *)(v0 + 496) = v4;
  *(_QWORD *)(v0 + 504) = v6;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v102 = sub_19CFDF758();
  *((_QWORD *)&v102 + 1) = v7;
  sub_19CFDF68C();
  swift_bridgeObjectRelease();
  v100 = *((_QWORD *)&v102 + 1);
  sub_19CFDE9C0();
  swift_allocObject();
  sub_19CFDE9B4();
  type metadata accessor for JetPackAsset.Metadata(0);
  sub_19CCC60DC(&qword_1ECEB0908, (uint64_t)&protocol conformance descriptor for JetPackAsset.Metadata);
  v8 = sub_19CFDE9A8();
  v10 = v9;
  v11 = (uint64_t *)(*(_QWORD *)(v0 + 568) + *(int *)(v0 + 156));
  v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(*(_QWORD *)(v0 + 576) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v13 = v102;
  v14 = *v11;
  v15 = v11[1];
  *(_DWORD *)(v0 + 160) = 0;
  *(_BYTE *)(v0 + 164) = 1;
  *(_QWORD *)(v0 + 168) = v14;
  *(_QWORD *)(v0 + 176) = v15;
  v98 = v13;
  *(_QWORD *)(v0 + 184) = v13;
  *(_QWORD *)(v0 + 192) = v100;
  *(_QWORD *)(v0 + 200) = v8;
  *(_QWORD *)(v0 + 208) = v10;
  v16 = v10;
  v17 = *v12;
  v18 = swift_task_alloc();
  *(_QWORD *)(v18 + 16) = v0 + 160;
  *(_QWORD *)(v18 + 24) = v17;
  v19 = *(_QWORD *)(v17 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  v20 = (_QWORD *)swift_task_alloc();
  v20[2] = v17;
  v20[3] = sub_19CEFBB9C;
  v20[4] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD3BE5C(v8, v16);
  swift_retain();
  sub_19CEF6DE8((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v17, sub_19CEFBBBC, (uint64_t)v20, v19);
  v21 = *(_QWORD *)(v0 + 600);
  v96 = *(_QWORD *)(v0 + 584);
  v95 = *(_QWORD *)(v0 + 592);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v94 = v8;
  v22 = v16;
  sub_19CCF4A54(v8, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  v90 = v102;
  v91 = BYTE4(v102);
  v92 = v105;
  v93 = v106;
  *(_QWORD *)(v0 + 512) = v98;
  *(_QWORD *)(v0 + 520) = v100;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v95 + 104))(v21, *MEMORY[0x1E0CAFD78], v96);
  sub_19CD41144();
  v23 = MEMORY[0x1E0DEA968];
  sub_19CFDEDD4();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v21, v96);
  swift_bridgeObjectRelease();
  v24 = sub_19CFDED80();
  v26 = v25;
  v27 = (void *)qword_1ECEB0B60;
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_19D0522A0;
  v29 = v27;
  v101 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v30._object = (void *)0x800000019D0760F0;
  v30._countAndFlagsBits = 0xD000000000000011;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *(_QWORD *)(v0 + 456) = v23;
  *(_QWORD *)(v0 + 432) = v24;
  *(_QWORD *)(v0 + 440) = v26;
  sub_19CD40794(v0 + 432, v0 + 464);
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658(v0 + 464, v0 + 256);
  *(_BYTE *)(v0 + 288) = 0;
  v31 = *(_OWORD *)(v0 + 272);
  v102 = *(_OWORD *)(v0 + 256);
  v103 = v31;
  v104 = *(_BYTE *)(v0 + 288);
  v32 = v101;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v32 = sub_19CD40918(0, v101[2] + 1, 1, v101);
  v34 = v32[2];
  v33 = v32[3];
  if (v34 >= v33 >> 1)
    v32 = sub_19CD40918((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
  v99 = v22;
  v35 = *(void **)(v0 + 888);
  v32[2] = v34 + 1;
  v36 = &v32[5 * v34];
  v37 = v102;
  v38 = v103;
  *((_BYTE *)v36 + 64) = v104;
  *((_OWORD *)v36 + 2) = v37;
  *((_OWORD *)v36 + 3) = v38;
  v101 = v32;
  sub_19CCECFE4(v0 + 432, &qword_1ECEB3370);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  *(_QWORD *)(v28 + 32) = v32;
  *(_QWORD *)&v102 = v29;
  LOBYTE(v101) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v28, (JetEngine::LogMessageLevel)&v101);
  swift_bridgeObjectRelease();

  v40 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v41 = sub_19CFDF554();
  objc_msgSend(v40, sel_createFileAtPath_contents_attributes_, v41, 0, 0);

  v42 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 544) = 0;
  LOBYTE(v41) = objc_msgSend(v35, sel_writeToFile_blockSize_error_, v42, 0x20000, v0 + 544);

  v43 = *(void **)(v0 + 544);
  v44 = *(void **)(v0 + 888);
  if ((v41 & 1) != 0)
  {
    v97 = *(_QWORD *)(v0 + 864);
    v45 = *(_QWORD *)(v0 + 624);
    v46 = *(_QWORD *)(v0 + 608);
    v47 = *(_QWORD *)(v0 + 568);
    v48 = *(_QWORD *)(v0 + 560);
    v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 616) + 8);
    v50 = v43;
    v49(v45, v46);
    sub_19CD3BE18(v94, v99);
    swift_release();

    sub_19CDF3E10(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CCF4A54(v92, v93);
    v51 = v48 + *(int *)(v97 + 24);
    *(_DWORD *)v51 = v90;
    *(_BYTE *)(v51 + 4) = v91;
    v52 = sub_19CFDF1C4();
    sub_19CFDF1F4();
    v53 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      v54 = *(_QWORD *)(v0 + 696);
      v55 = *(_QWORD *)(v0 + 664);
      v56 = *(_QWORD *)(v0 + 656);
      swift_retain();
      sub_19CFDF218();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v55 + 88))(v54, v56) == *MEMORY[0x1E0DF2190])
      {
        v57 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 664) + 8))(*(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 656));
        v57 = "";
      }
      v68 = (uint64_t *)(v0 + 816);
      v74 = *(_QWORD *)(v0 + 776);
      v75 = *(_QWORD *)(v0 + 744);
      v76 = *(_QWORD *)(v0 + 736);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 840))(*(_QWORD *)(v0 + 816), v74, v76);
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      v78 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v52, v53, v78, "Cache Asset", v57, v77, 2u);
      MEMORY[0x1A1ADBE9C](v77, -1, -1);

      v70 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v70(v74, v76);
    }
    else
    {
      v68 = (uint64_t *)(v0 + 776);
      v69 = *(_QWORD *)(v0 + 744);

      v70 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    }
    v79 = *(_QWORD *)(v0 + 824);
    v80 = *(_QWORD *)(v0 + 736);
    v70(*v68, v80);
    swift_release();
    v70(v79, v80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v81 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v58 = *(_QWORD *)(v0 + 624);
    v59 = *(_QWORD *)(v0 + 616);
    v60 = *(_QWORD *)(v0 + 608);
    v61 = v43;
    sub_19CFDEC9C();

    swift_willThrow();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CCF4A54(v92, v93);
    sub_19CD3BE18(v94, v99);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
    v62 = sub_19CFDF1C4();
    sub_19CFDF1F4();
    v63 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      v64 = *(_QWORD *)(v0 + 672);
      v65 = *(_QWORD *)(v0 + 664);
      v66 = *(_QWORD *)(v0 + 656);
      swift_retain();
      sub_19CFDF218();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v65 + 88))(v64, v66) == *MEMORY[0x1E0DF2190])
      {
        v67 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 664) + 8))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 656));
        v67 = "";
      }
      v71 = (uint64_t *)(v0 + 816);
      v82 = *(_QWORD *)(v0 + 752);
      v83 = *(_QWORD *)(v0 + 744);
      v84 = *(_QWORD *)(v0 + 736);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 840))(*(_QWORD *)(v0 + 816), v82, v84);
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      v86 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v62, v63, v86, "Cache Asset", v67, v85, 2u);
      MEMORY[0x1A1ADBE9C](v85, -1, -1);

      v73 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v73(v82, v84);
    }
    else
    {
      v71 = (uint64_t *)(v0 + 752);
      v72 = *(_QWORD *)(v0 + 744);

      v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    }
    v87 = *(_QWORD *)(v0 + 824);
    v88 = *(_QWORD *)(v0 + 736);
    v73(*v71, v88);
    swift_release();
    v73(v87, v88);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v81 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v81();
}

uint64_t sub_19CEF8FFC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release();
  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 712);
    v4 = *(_QWORD *)(v0 + 664);
    v5 = *(_QWORD *)(v0 + 656);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 664) + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 656));
      v6 = "";
    }
    v7 = (uint64_t *)(v0 + 816);
    v10 = *(_QWORD *)(v0 + 792);
    v11 = *(_QWORD *)(v0 + 744);
    v12 = *(_QWORD *)(v0 + 736);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 840))(*(_QWORD *)(v0 + 816), v10, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v14, "Cache Asset", v6, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    v7 = (uint64_t *)(v0 + 792);
    v8 = *(_QWORD *)(v0 + 744);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 824);
  v16 = *(_QWORD *)(v0 + 736);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19CEF9310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  Swift::String v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[12];
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[32];
  _QWORD v49[3];
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v3 = v2;
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v6 = (void *)qword_1ECEB0B60;
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  v44 = xmmword_19D0522A0;
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v8 = v6;
  v51 = sub_19CD40918(0, 32, 0, MEMORY[0x1E0DEE9D8]);
  v9._countAndFlagsBits = 0xD00000000000001FLL;
  v9._object = (void *)0x800000019D076330;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  v50 = MEMORY[0x1E0DEA968];
  v49[0] = a1;
  v49[1] = a2;
  sub_19CD40794((uint64_t)v49, (uint64_t)v48);
  v47 = 0u;
  v46 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v48, (uint64_t)&v46);
  LOBYTE(v54) = 0;
  v52 = v46;
  v53 = v47;
  v10 = v51;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[5 * v12];
  v14 = v52;
  v15 = v53;
  *((_BYTE *)v13 + 64) = v54;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v51 = v10;
  sub_19CCECFE4((uint64_t)v49, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v7 + 32) = v51;
  *(_QWORD *)&v52 = v8;
  LOBYTE(v46) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v46);

  swift_bridgeObjectRelease();
  v17 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v18 = *v17;
  MEMORY[0x1E0C80A78](v17, v19);
  v43[8] = a1;
  v43[9] = a2;
  v43[10] = v18;
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  MEMORY[0x1E0C80A78](v21, v22);
  v43[2] = v18;
  v43[3] = sub_19CEFBEBC;
  v43[4] = v23;
  swift_retain();
  sub_19CEF6F60((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v18, (void (*)(uint64_t *__return_ptr))sub_19CEFBC70, (uint64_t)v43, v20);
  v25 = v24;
  swift_release();
  v26 = (void *)qword_1ECEB0B60;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v44;
  v28 = v26;
  v51 = sub_19CD40918(0, 23, 0, MEMORY[0x1E0DEE9D8]);
  v29._countAndFlagsBits = 0x20646E756F46;
  v29._object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  v30 = *(_QWORD *)(v25 + 16);
  v50 = MEMORY[0x1E0DEB418];
  v49[0] = v30;
  sub_19CD40794((uint64_t)v49, (uint64_t)v48);
  v47 = 0u;
  v46 = 0u;
  sub_19CD40658((uint64_t)v48, (uint64_t)&v46);
  LOBYTE(v54) = 0;
  v52 = v46;
  v53 = v47;
  v31 = v51;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  v34 = &v31[5 * v33];
  v35 = v52;
  v36 = v53;
  *((_BYTE *)v34 + 64) = v54;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  v51 = v31;
  sub_19CCECFE4((uint64_t)v49, &qword_1ECEB3370);
  v37._object = (void *)0x800000019D076190;
  v37._countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(_QWORD *)(v27 + 32) = v51;
  *(_QWORD *)&v52 = v28;
  LOBYTE(v46) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v46);

  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v25 + 16);
  if (v38)
  {
    v39 = 32;
    do
    {
      v40 = *(_OWORD *)(v25 + v39);
      v41 = *(_OWORD *)(v25 + v39 + 16);
      v42 = *(_OWORD *)(v25 + v39 + 32);
      v55 = *(_QWORD *)(v25 + v39 + 48);
      v53 = v41;
      v54 = v42;
      v52 = v40;
      sub_19CEFBC84((uint64_t)&v52);
      sub_19CEFB334((uint64_t)&v52);
      sub_19CEFBCD0((uint64_t)&v52);
      v39 += 56;
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
}

uint64_t JetPackAssetDiskCache._asset(withID:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 108) = a2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v2;
  return swift_task_switch();
}

uint64_t sub_19CEF9AAC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v1 = *(_DWORD *)(v0 + 108);
  v2 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v3 = swift_task_alloc();
  *(_DWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = v2;
  v5[3] = sub_19CEFBBF8;
  v5[4] = v3;
  swift_retain();
  sub_19CEF6DE8((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v2, sub_19CEFBF1C, (uint64_t)v5, v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v19 == 1)
  {
    v6 = (_OWORD *)(v0 + 72);
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v7 = *(_QWORD *)(v0 + 144);
    v8 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v10 = swift_allocObject();
    v11 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 136) = v11;
    *(_QWORD *)(v0 + 112) = 0xD000000000000026;
    *(_QWORD *)(v0 + 120) = 0x800000019D076160;
    *v6 = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    v12 = v8;
    sub_19CD40658(v0 + 112, v0 + 72);
    *(_BYTE *)(v0 + 104) = 0;
    v13 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v10 + 32) = *v6;
    *(_OWORD *)(v10 + 48) = v13;
    *(_BYTE *)(v10 + 64) = *(_BYTE *)(v0 + 104);
    *(_QWORD *)(v9 + 32) = v10;
    v24 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v24);
    swift_bridgeObjectRelease();

    v14 = type metadata accessor for JetPackAsset(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  else
  {
    v15 = *(_QWORD **)(v0 + 144);
    *(_DWORD *)(v0 + 16) = v17;
    *(_BYTE *)(v0 + 20) = BYTE4(v17) & 1;
    *(_QWORD *)(v0 + 24) = v18;
    *(_QWORD *)(v0 + 32) = v19;
    *(_QWORD *)(v0 + 40) = v20;
    *(_QWORD *)(v0 + 48) = v21;
    *(_QWORD *)(v0 + 56) = v22;
    *(_QWORD *)(v0 + 64) = v23;
    sub_19CCEAD20((_QWORD *)(v0 + 16), v15);
    sub_19CCC429C(v17, v18, v19, v20, v21, v22, v23);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JetPackAssetDiskCache._evict(asset:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[8];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v3 = v2;
  result = type metadata accessor for JetPackAsset(0);
  v6 = (int *)(a1 + *(int *)(result + 24));
  if ((v6[1] & 1) == 0)
  {
    v7 = *v6;
    v8 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v1 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
    v9 = *v8;
    MEMORY[0x1E0C80A78](v8, v10);
    v24 = v7;
    v25 = v9;
    v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
    MEMORY[0x1E0C80A78](v12, v13);
    v23[2] = v9;
    v23[3] = sub_19CEFBF08;
    v23[4] = v14;
    swift_retain();
    sub_19CEF6DE8((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v9, sub_19CEFBF1C, (uint64_t)v23, v11);
    result = swift_release();
    if (!v3)
    {
      v15 = v28;
      if (v28 == 1)
      {
        sub_19CEFBC14();
        swift_allocError();
        *v16 = 1;
        return swift_willThrow();
      }
      else
      {
        v17 = v26;
        v18 = v27;
        v19 = v29;
        v20 = v30;
        v21 = v31;
        v22 = v32;
        v33 = v26;
        v34 = BYTE4(v26) & 1;
        v35 = v27;
        v36 = v28;
        v37 = v29;
        v38 = v30;
        v39 = v31;
        v40 = v32;
        sub_19CEF9EF0((uint64_t)&v33);
        return sub_19CCC429C(v17, v18, v15, v19, v20, v21, v22);
      }
    }
  }
  return result;
}

uint64_t sub_19CEF9EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  void *v33;
  unsigned int v34;
  id v35;
  void *v36;
  unsigned int v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56[8];
  int v57;
  char v58;
  int v59;
  char v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[32];
  __int128 v64;
  __int128 v65;
  char v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[16];
  __int128 v70;
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v51 = sub_19CFDECF0();
  v3 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51, v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDEDE0();
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v50 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v14 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
  v16 = v14;
  v55 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v17._object = (void *)0x800000019D0762C0;
  v17._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  sub_19CCC290C(a1, (uint64_t)v56, &qword_1ECEB0C18);
  sub_19CCC290C((uint64_t)v56, (uint64_t)&v59, &qword_1ECEB0C18);
  if ((v60 & 1) != 0)
  {
    v67 = 0u;
    v68 = 0u;
  }
  else
  {
    *((_QWORD *)&v68 + 1) = MEMORY[0x1E0DEDBC8];
    LODWORD(v67) = v59;
  }
  sub_19CD40794((uint64_t)&v67, (uint64_t)v63);
  v62 = 0u;
  v61 = 0u;
  sub_19CD40658((uint64_t)v63, (uint64_t)&v61);
  v66 = 0;
  v64 = v61;
  v65 = v62;
  v18 = v55;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v54 = v11;
  v49 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
    v18 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
  v18[2] = v21 + 1;
  v22 = &v18[5 * v21];
  v23 = v64;
  v24 = v65;
  *((_BYTE *)v22 + 64) = v66;
  *((_OWORD *)v22 + 2) = v23;
  *((_OWORD *)v22 + 3) = v24;
  v55 = v18;
  sub_19CCECFE4((uint64_t)&v67, &qword_1ECEB3370);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  *(_QWORD *)(v15 + 32) = v55;
  *(_QWORD *)&v64 = v16;
  LOBYTE(v61) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v61);

  swift_bridgeObjectRelease();
  sub_19CCC290C((uint64_t)v56, (uint64_t)&v57, &qword_1ECEB0C18);
  if ((v58 & 1) != 0)
    goto LABEL_19;
  v26 = v57;
  sub_19CCC290C(a1 + 24, (uint64_t)v69, &qword_1ECEB2550);
  sub_19CCC290C((uint64_t)v69, (uint64_t)&v70, &qword_1ECEB2550);
  if (!*((_QWORD *)&v70 + 1))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v10, 1, 1, v54);
    goto LABEL_18;
  }
  v64 = v70;
  v27 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CAFD78], v51);
  sub_19CD41144();
  sub_19CFDEDD4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v27);
  v28 = v53;
  v29 = v54;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v10, 0, 1, v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v29) == 1)
  {
LABEL_18:
    sub_19CCECFE4((uint64_t)v10, (uint64_t *)&unk_1ECEB3030);
LABEL_19:
    sub_19CEFBC14();
    swift_allocError();
    *v46 = 0;
    return swift_willThrow();
  }
  LODWORD(v51) = v26;
  v30 = v50;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v50, v10, v29);
  v31 = (void *)objc_opt_self();
  v32 = objc_msgSend(v31, sel_defaultManager);
  sub_19CFDED80();
  v33 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v32, sel_fileExistsAtPath_, v33);

  if (v34)
  {
    v35 = objc_msgSend(v31, sel_defaultManager);
    v36 = (void *)sub_19CFDED2C();
    *(_QWORD *)&v64 = 0;
    v37 = objc_msgSend(v35, sel_removeItemAtURL_error_, v36, &v64);

    if (!v37)
    {
      v48 = (id)v64;
      sub_19CFDEC9C();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v29);
    }
    v38 = (id)v64;
  }
  v39 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v52 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v52 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v40 = *v39;
  MEMORY[0x1E0C80A78](v39, v41);
  *((_DWORD *)&v49 - 4) = v51;
  v42 = *(_QWORD *)(v40 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  MEMORY[0x1E0C80A78](v43, v44);
  *(&v49 - 4) = v40;
  *(&v49 - 3) = (uint64_t)sub_19CEFBE78;
  *(&v49 - 2) = v45;
  swift_retain();
  sub_19CEF6DE8((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v40, sub_19CEFBBBC, (uint64_t)(&v49 - 6), v42);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v29);
}

uint64_t JetPackAssetDiskCache._allCachedAssets.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19CEFA5C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  v4 = (_QWORD *)swift_task_alloc();
  v4[2] = v2;
  v4[3] = sub_19CEFBC58;
  v4[4] = v2;
  swift_retain();
  sub_19CEF6F60((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v2, (void (*)(uint64_t *__return_ptr))sub_19CEFBC70, (uint64_t)v4, v3);
  v6 = v5;
  swift_release();
  swift_task_dealloc();
  v7 = *(_QWORD *)(v0 + 16);
  swift_retain();
  v8 = sub_19CEFB8CC(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v8);
}

uint64_t sub_19CEFA6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  void *v22;
  uint64_t v24;
  id v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  _OWORD v35[3];
  uint64_t v36;
  _BYTE v37[16];
  int v38;
  char v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_OWORD *)(a1 + 16);
  v35[0] = *(_OWORD *)a1;
  v35[1] = v8;
  v35[2] = *(_OWORD *)(a1 + 32);
  v36 = *(_QWORD *)(a1 + 48);
  sub_19CCEAD20(v35, v7);
  v9 = type metadata accessor for JetPackAsset(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB1140);
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v11 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v25 = v11;
    v34 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
    v13._object = (void *)0x800000019D0762A0;
    v13._countAndFlagsBits = 0xD000000000000018;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_19CCC290C((uint64_t)v35, (uint64_t)v37, &qword_1ECEB0C18);
    sub_19CCC290C((uint64_t)v37, (uint64_t)&v38, &qword_1ECEB0C18);
    if ((v39 & 1) != 0)
    {
      v32 = 0u;
      v33 = 0u;
    }
    else
    {
      *((_QWORD *)&v33 + 1) = MEMORY[0x1E0DEDBC8];
      LODWORD(v32) = v38;
    }
    sub_19CD40794((uint64_t)&v32, (uint64_t)v28);
    v26 = 0u;
    v27 = 0u;
    sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
    v31 = 0;
    v29 = v26;
    v30 = v27;
    v15 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v29;
    v20 = v30;
    *((_BYTE *)v18 + 64) = v31;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v34 = v15;
    sub_19CCECFE4((uint64_t)&v32, &qword_1ECEB3370);
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v12 + 32) = v34;
    v22 = v25;
    *(_QWORD *)&v29 = v25;
    LOBYTE(v26) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v26);

    swift_bridgeObjectRelease();
    v14 = 1;
  }
  else
  {
    sub_19CCFE8AC((uint64_t)v7, a2, type metadata accessor for JetPackAsset);
    v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, v14, 1, v9);
}

uint64_t JetPackAssetDiskCache._empty()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = v0;
  return swift_task_switch();
}

uint64_t sub_19CEFA9FC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t (*v37)(void);
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  char v43;

  v1 = (_OWORD *)(v0 + 72);
  v2 = v0 + 112;
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 240);
  v4 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 136) = MEMORY[0x1E0DEA968];
  strcpy((char *)(v0 + 112), "Emptying cache");
  *(_BYTE *)(v0 + 127) = -18;
  *v1 = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  v7 = v4;
  sub_19CD40658(v0 + 112, v0 + 72);
  *(_BYTE *)(v0 + 104) = 0;
  v8 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 32) = *v1;
  *(_OWORD *)(v6 + 48) = v8;
  *(_BYTE *)(v6 + 64) = *(_BYTE *)(v0 + 104);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)&v41 = v7;
  LOBYTE(v40) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v40);
  swift_bridgeObjectRelease();

  v9 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v3 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive);
  v12 = (_QWORD *)swift_task_alloc();
  v12[2] = v10;
  v12[3] = sub_19CEFBC58;
  v12[4] = v10;
  swift_retain();
  sub_19CEF6F60((void (*)(__int128 *__return_ptr))sub_19CEFBBB4, v10, (void (*)(uint64_t *__return_ptr))sub_19CEFBC70, (uint64_t)v12, v11);
  v14 = v13;
  swift_release();
  swift_task_dealloc();
  v15 = (void *)qword_1ECEB0B60;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  v17 = v15;
  v40 = sub_19CD40918(0, 23, 0, MEMORY[0x1E0DEE9D8]);
  v18._countAndFlagsBits = 0x20646E756F46;
  v18._object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  v19 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v0 + 136) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v0 + 112) = v19;
  sub_19CD40794(v2, v0 + 144);
  *v1 = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  sub_19CD40658(v0 + 144, (uint64_t)v1);
  *(_BYTE *)(v0 + 104) = 0;
  v20 = *(_OWORD *)(v0 + 88);
  v41 = *v1;
  v42 = v20;
  v43 = *(_BYTE *)(v0 + 104);
  v21 = v40;
  v39 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v24 = &v21[5 * v23];
  v25 = v41;
  v26 = v42;
  *((_BYTE *)v24 + 64) = v43;
  *((_OWORD *)v24 + 2) = v25;
  *((_OWORD *)v24 + 3) = v26;
  v40 = v21;
  sub_19CCECFE4(v2, &qword_1ECEB3370);
  v27._object = (void *)0x800000019D076190;
  v27._countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *(_QWORD *)(v16 + 32) = v40;
  *(_QWORD *)&v41 = v17;
  LOBYTE(v40) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);
  swift_bridgeObjectRelease();

  v28 = *(_QWORD *)(v39 + 16);
  if (v28)
  {
    v29 = (_OWORD *)(v0 + 16);
    v30 = (__int128 *)(v39 + 32);
    v31 = MEMORY[0x1E0DEE9D8];
    do
    {
      v33 = v30[1];
      v32 = v30[2];
      v34 = *v30;
      *(_QWORD *)(v0 + 64) = *((_QWORD *)v30 + 6);
      *(_OWORD *)(v0 + 32) = v33;
      *(_OWORD *)(v0 + 48) = v32;
      *v29 = v34;
      sub_19CEFBC84((uint64_t)v29);
      sub_19CEF9EF0((uint64_t)v29);
      sub_19CEFBCD0((uint64_t)v29);
      v30 = (__int128 *)((char *)v30 + 56);
      --v28;
    }
    while (v28);
  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v31 + 16))
  {
    sub_19CE04734();
    swift_allocError();
    v36 = v35;
    if (!*(_QWORD *)(v31 + 16))
      sub_19CFA8E78((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
    *v36 = v31;
    swift_willThrow();
    v37 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v37();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JetPackAssetDiskCache._beginTransaction()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v2 = *v1;
  v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_19CCE3B14(v4, v2);
  os_unfair_lock_unlock(v5);
}

Swift::Void __swiftcall JetPackAssetDiskCache._endTransaction()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore), *(_QWORD *)(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore + 24));
  v2 = *v1;
  v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_19CCC57D8(v4, v2);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_19CEFB334(uint64_t a1)
{
  return sub_19CEF9EF0(a1);
}

uint64_t JetPackAssetDiskCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_assetsURL;
  v2 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC9JetEngine21JetPackAssetDiskCache_metadataStore);
  return v0;
}

uint64_t sub_19CEFB6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return JetPackAssetDiskCache._cache(_:)(a1, a2);
}

uint64_t sub_19CEFB740(uint64_t a1)
{
  uint64_t v1;

  JetPackAssetDiskCache._evict(asset:)(a1);
  return sub_19CE71E70(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_19CEFB790()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_19CD579FC;
  v3[30] = v2;
  return swift_task_switch();
}

uint64_t sub_19CEFB7F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_19CCC1F98;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_19CEFB850@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;

  result = sub_19CCE3B90(a1);
  if (!v3)
  {
    a2(&v7);
    result = swift_release();
    *a3 = v7;
  }
  return result;
}

unint64_t sub_19CEFB8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for JetPackAsset(0);
  v37 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28, v8);
  v27 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v26 = (uint64_t)&v25 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v25 = a1;
  v14 = (uint64_t *)(a1 + 40);
  v15 = MEMORY[0x1E0DEE9D8];
  do
  {
    v17 = v14[4];
    v16 = v14[5];
    v18 = v14[3];
    v19 = *v14;
    v20 = *((_BYTE *)v14 - 4);
    v30 = *((_DWORD *)v14 - 2);
    v31 = v20;
    v32 = v19;
    v33 = *(_OWORD *)(v14 + 1);
    v34 = v18;
    v35 = v17;
    v36 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CD61F18(v17, v16);
    sub_19CEFA6D4((uint64_t)&v30, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19CCF4A54(v17, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CCF4A54(v17, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v7, 1, v28) == 1)
    {
      sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB1140);
    }
    else
    {
      v21 = v26;
      sub_19CCFE8AC((uint64_t)v7, v26, type metadata accessor for JetPackAsset);
      sub_19CCFE8AC(v21, v27, type metadata accessor for JetPackAsset);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_19CED6900(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v23 = *(_QWORD *)(v15 + 16);
      v22 = *(_QWORD *)(v15 + 24);
      if (v23 >= v22 >> 1)
        v15 = sub_19CED6900(v22 > 1, v23 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v23 + 1;
      sub_19CCFE8AC(v27, v15+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v23, type metadata accessor for JetPackAsset);
    }
    v14 += 7;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_19CEFBB9C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_19CE36C58(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_19CEFBBB4(_QWORD *a1@<X8>)
{
  sub_19CE37988(a1);
}

void sub_19CEFBBBC()
{
  uint64_t v0;

  sub_19CEF6AE4(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_19CEFBBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CE37518(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_DWORD *)(v2 + 32), a2);
}

uint64_t sub_19CEFBBF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19CE36270(a1, *(_DWORD *)(v2 + 16), a2);
}

unint64_t sub_19CEFBC14()
{
  unint64_t result;

  result = qword_1EE4417D0;
  if (!qword_1EE4417D0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D060F5C, &type metadata for JetPackAssetDiskCacheError);
    atomic_store(result, (unint64_t *)&qword_1EE4417D0);
  }
  return result;
}

uint64_t sub_19CEFBC58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE36634(a1, a2);
}

void sub_19CEFBC70(_QWORD *a1@<X8>)
{
  sub_19CEFBED8(a1);
}

uint64_t sub_19CEFBC84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD61F18(v2, v3);
  return a1;
}

uint64_t sub_19CEFBCD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CCF4A54(v2, v3);
  return a1;
}

uint64_t sub_19CEFBD1C()
{
  return type metadata accessor for JetPackAssetDiskCache();
}

uint64_t method lookup function for JetPackAssetDiskCache()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for JetPackAssetDiskCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CEFBD7C + 4 * byte_19D060E29[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CEFBDB0 + 4 * byte_19D060E24[v4]))();
}

uint64_t sub_19CEFBDB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEFBDB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEFBDC0);
  return result;
}

uint64_t sub_19CEFBDCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEFBDD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CEFBDD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEFBDE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetDiskCacheError()
{
  return &type metadata for JetPackAssetDiskCacheError;
}

unint64_t sub_19CEFBE04()
{
  unint64_t result;

  result = qword_1EE441810;
  if (!qword_1EE441810)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D060F34, &type metadata for JetPackAssetDiskCacheError);
    atomic_store(result, (unint64_t *)&qword_1EE441810);
  }
  return result;
}

void sub_19CEFBE48(uint64_t *a1)
{
  uint64_t v1;

  sub_19CCC57D8(a1, v1);
}

void sub_19CEFBE60(_QWORD *a1)
{
  uint64_t v1;

  sub_19CCE3B14(a1, v1);
}

_QWORD *sub_19CEFBE78(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE3720C(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_19CEFBE90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEFBEBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_19CE36878(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_19CEFBED8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_19CEF6C38(*(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
  if (!v2)
    *a1 = v4;
}

uint64_t sub_19CEFBF08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19CEFBBF8(a1, a2);
}

void sub_19CEFBF1C()
{
  sub_19CEFBBBC();
}

ValueMetadata *actionTableFromUserInfo(_:)(uint64_t a1)
{
  ValueMetadata *result;

  result = (ValueMetadata *)sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, a1);
  if (!result)
    return &type metadata for EmptyActionKindTable;
  return result;
}

uint64_t decodeActionModel<A, B>(using:container:forKey:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t MetatypeMetadata;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v5 = type metadata accessor for CodeByKind(0, a1, *(_QWORD *)(a2 + 8), a1);
  sub_19CFE04D8();
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v5);
  sub_19CFE0484();
  if (v3)
  {
    sub_19CFE0448();
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = sub_19CFE09DC();
    sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v7, (uint64_t)&v15);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    sub_19CCF8C5C((uint64_t)&v15, (uint64_t)v12, qword_1EE43A238);
    v8 = v13;
    if (v13)
    {
      v9 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      MetatypeMetadata = swift_getMetatypeMetadata();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v9 + 8))(MetatypeMetadata, v3, v8, v9);

      sub_19CCECFE4((uint64_t)&v15, qword_1EE43A238);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v15, qword_1EE43A238);

      result = sub_19CCECFE4((uint64_t)v12, qword_1EE43A238);
    }
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else if (*((_QWORD *)&v16 + 1))
  {
    sub_19CCD5B84((uint64_t)&v15, a3);
    return (*(uint64_t (**)(__int128 *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v15, v5);
  }
  else
  {
    v11 = sub_19CFDFF5C();
    result = (*(uint64_t (**)(__int128 *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(&v15, v11);
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t encodeActionModel<A, B>(_:using:container:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[40];
  __int128 v14;
  uint64_t v15;
  _BYTE v16[40];

  sub_19CCF8C5C(a1, (uint64_t)&v14, qword_1EE439B38);
  if (!v15)
    return sub_19CCECFE4((uint64_t)&v14, qword_1EE439B38);
  sub_19CCD14C4(&v14, (uint64_t)v16);
  sub_19CCD5B84((uint64_t)v16, (uint64_t)v13);
  v9 = *(_QWORD *)(a7 + 8);
  CodeByKind.init(wrappedValue:)((uint64_t)v13, (uint64_t)&v14);
  sub_19CFE0574();
  v11 = type metadata accessor for CodeByKind(0, a5, v9, v10);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for CodeByKind<A>, v11);
  sub_19CFE0568();
  (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(&v14, v11);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

ValueMetadata *type metadata accessor for EmptyActionKindTable()
{
  return &type metadata for EmptyActionKindTable;
}

unint64_t sub_19CEFC2FC()
{
  unint64_t result;

  result = sub_19CE105BC(MEMORY[0x1E0DEE9D8]);
  qword_1EE465D10 = result;
  return result;
}

uint64_t sub_19CEFC320()
{
  if (qword_1EE43D6D8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

double sub_19CEFC360@<D0>(_OWORD *a1@<X8>)
{
  return ComponentModel.contextMenu.getter(a1);
}

double ComponentModel.contextMenu.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void ComponentModel<>.doNotAdoptBothComponentModelAndIdentifiable()()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t ComponentModel<>.id.getter()
{
  return sub_19CFE00C4();
}

uint64_t ComponentTypes.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE43B368);
  swift_getTupleTypeMetadata2();
  sub_19CFDF8B4();
  result = sub_19CFDF41C();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

void sub_19CEFC4A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  ComponentTypes.makeInstance(ofKind:byDeserializing:using:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19CEFC4B4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of ComponentModel.segue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ComponentModel.contextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

JetEngine::AppMetricsFieldProvider __swiftcall AppMetricsFieldProvider.init(bundle:)(JetEngine::AppMetricsFieldProvider bundle)
{
  JetEngine::AppMetricsFieldProvider *v1;

  v1->bundle.super.isa = bundle.bundle.super.isa;
  return bundle;
}

void AppMetricsFieldProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CEFC514(uint64_t a1)
{
  return AppMetricsFieldProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for AppMetricsFieldProvider()
{
  return &type metadata for AppMetricsFieldProvider;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(Swift::String a1)
{
  uint64_t *v1;
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  JetEngine::PreferenceNamespace result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = v1;
  v7 = *v2;
  v6 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D052350;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *(_QWORD *)(v8 + 48) = countAndFlagsBits;
  *(_QWORD *)(v8 + 56) = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v9 = sub_19CFDF4F4();
  v11 = v10;
  v12 = swift_bridgeObjectRelease();
  *v5 = v9;
  v5[1] = v11;
  result.rawValue._object = v13;
  result.rawValue._countAndFlagsBits = v12;
  return result;
}

uint64_t PreferenceNamespace.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static PreferenceNamespace.delimiter.getter()
{
  return 95;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(subsystem:)(Swift::String subsystem)
{
  uint64_t *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  JetEngine::PreferenceNamespace result;

  object = subsystem._object;
  countAndFlagsBits = subsystem._countAndFlagsBits;
  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v5 + 32) = countAndFlagsBits;
  *(_QWORD *)(v5 + 40) = object;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v6 = sub_19CFDF4F4();
  v8 = v7;
  v9 = swift_bridgeObjectRelease();
  *v4 = v6;
  v4[1] = v8;
  result.rawValue._object = v10;
  result.rawValue._countAndFlagsBits = v9;
  return result;
}

uint64_t static PreferenceNamespace.jetEngine.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ECEB2540 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1ECEB23C8;
  *a1 = qword_1ECEB23C0;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  JetEngine::PreferenceNamespace result;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v2 = sub_19CFDF4F4();
  *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.rawValue._object = v3;
  result.rawValue._countAndFlagsBits = v2;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(components:)(Swift::OpaquePointer components)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  JetEngine::PreferenceNamespace result;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v3 = sub_19CFDF4F4();
  v5 = v4;
  v6 = swift_bridgeObjectRelease();
  *v2 = v3;
  v2[1] = v5;
  result.rawValue._object = v7;
  result.rawValue._countAndFlagsBits = v6;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.init(subsystem:category:)(Swift::String subsystem, Swift::String category)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  JetEngine::PreferenceNamespace result;

  object = category._object;
  countAndFlagsBits = category._countAndFlagsBits;
  v5 = subsystem._object;
  v6 = subsystem._countAndFlagsBits;
  v7 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D052350;
  *(_QWORD *)(v8 + 32) = v6;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = countAndFlagsBits;
  *(_QWORD *)(v8 + 56) = object;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v9 = sub_19CFDF4F4();
  v11 = v10;
  v12 = swift_bridgeObjectRelease();
  *v7 = v9;
  v7[1] = v11;
  result.rawValue._object = v13;
  result.rawValue._countAndFlagsBits = v12;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(Swift::Int a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  JetEngine::PreferenceNamespace result;

  v3 = v1;
  v5 = *v2;
  v4 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D052350;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 48) = sub_19CFE0598();
  *(_QWORD *)(v6 + 56) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v8 = sub_19CFDF4F4();
  v10 = v9;
  v11 = swift_bridgeObjectRelease();
  *v3 = v8;
  v3[1] = v10;
  result.rawValue._object = v12;
  result.rawValue._countAndFlagsBits = v11;
  return result;
}

JetEngine::PreferenceNamespace __swiftcall PreferenceNamespace.appending(_:)(JetEngine::PreferenceNamespace a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  JetEngine::PreferenceNamespace result;

  v3 = v1;
  v5 = *(_QWORD *)a1.rawValue._countAndFlagsBits;
  v4 = *(_QWORD *)(a1.rawValue._countAndFlagsBits + 8);
  v7 = *v2;
  v6 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_19D052350;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *(_QWORD *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v9 = sub_19CFDF4F4();
  v11 = v10;
  v12 = swift_bridgeObjectRelease();
  *v3 = v9;
  v3[1] = v11;
  result.rawValue._object = v13;
  result.rawValue._countAndFlagsBits = v12;
  return result;
}

uint64_t static PreferenceNamespace.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

BOOL static ActionOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActionOutcome.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ActionOutcome.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CEFCB60()
{
  unint64_t result;

  result = qword_1EE441818;
  if (!qword_1EE441818)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ActionOutcome, &type metadata for ActionOutcome);
    atomic_store(result, (unint64_t *)&qword_1EE441818);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionOutcome(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CEFCBF0 + 4 * byte_19D061105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CEFCC24 + 4 * asc_19D061100[v4]))();
}

uint64_t sub_19CEFCC24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEFCC2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEFCC34);
  return result;
}

uint64_t sub_19CEFCC40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEFCC48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CEFCC4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEFCC54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of ActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

double sub_19CEFCC68(double a1, double a2, double a3, double a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v6 = a1;
  v7 = a1 / a3;
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v7;
  else
    v8 = 0.0;
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = a2 / a4;
  else
    v9 = 0.0;
  v10 = sub_19CFDF578();
  v12 = v11;
  if (v10 == sub_19CFDF578() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_12;
  }
  if (v6 == a2)
    return floor(v6);
LABEL_12:
  v15 = sub_19CFDF578();
  v17 = v16;
  if (v15 == sub_19CFDF578() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    return floor(v6);
  }
  v19 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return floor(v6);
  v20 = sub_19CFDF578();
  v22 = v21;
  if (v20 == sub_19CFDF578() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:
    v6 = a3;
    return floor(v6);
  }
  v24 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_20;
  v26 = v9 * a3;
  v27 = sub_19CFDF578();
  v29 = v28;
  if (v27 == sub_19CFDF578() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v31 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
LABEL_26:
    if (v8 >= v9)
      v6 = v26;
    return floor(v6);
  }
  if (v8 < v9)
    v6 = v26;
  return floor(v6);
}

double static AMSMetricsIdentifierFieldsProvider.metricsResetInterval.getter()
{
  return 15552000.0;
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:keys:activeITunesAccountRequired:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v15;
  uint64_t v17;
  _BYTE v18[40];

  v15 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v18);
  v17 = v15;
  sub_19CEFCFE8((uint64_t)v18, a2, &v17, a4, a5, a6, (uint64_t)sub_19CEFCF9C, 0, a7, a8);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_19CEFCF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441848);
  a3[4] = &off_1E3DD3348;
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

void sub_19CEFCFE8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  Swift::String v41;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[32];
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50[6];

  v50[4] = *MEMORY[0x1E0C80C00];
  v18 = *a3;
  *(_QWORD *)(a9 + 8) = *a3;
  *(_QWORD *)(a9 + 16) = 0;
  *(_BYTE *)a9 = a4;
  sub_19CCD5B84(a1, a9 + 24);
  *(_QWORD *)(a9 + 64) = a2;
  *(double *)(a9 + 72) = a10;
  *(_QWORD *)(a9 + 80) = a5;
  *(_BYTE *)(a9 + 88) = a6;
  *(_QWORD *)(a9 + 96) = a7;
  *(_QWORD *)(a9 + 104) = a8;
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    return;
  }
  *(_QWORD *)&v47 = v18;
  v19 = a2;
  swift_retain();
  swift_unknownObjectRetain();
  if (!sub_19CD52A88(0x696669746E656469, 0xEB00000000737265, 0, 0))
  {

    swift_release();
    swift_unknownObjectRelease();
    v27 = 0;
    goto LABEL_7;
  }
  sub_19CFDE930();
  swift_allocObject();
  sub_19CFDE924();
  v20 = (void *)objc_opt_self();
  v21 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v44 = 0;
  v22 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v21, 0, &v44);

  v23 = (id)v44;
  if (v22)
  {
    v24 = sub_19CFDEE70();
    v26 = v25;

    sub_19CCEC208();
    sub_19CFDE918();
    swift_release();
    sub_19CD3BE18(v24, v26);

    swift_release();
    swift_unknownObjectRelease();
    v27 = v47;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a9 + 16) = v27;
    return;
  }
  v28 = v23;
  swift_release();
  v29 = (void *)sub_19CFDEC9C();

  swift_willThrow();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v30 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  v43 = sub_19CD40918(0, 47, 0, MEMORY[0x1E0DEE9D8]);
  v33._object = (void *)0x800000019D073390;
  v33._countAndFlagsBits = 0xD00000000000002ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  swift_getErrorValue();
  v50[3] = v42;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v50);
  (*(void (**)(uint64_t *))(*(_QWORD *)(v42 - 8) + 16))(boxed_opaque_existential_2Tm);
  sub_19CD40794((uint64_t)v50, (uint64_t)v46);
  v44 = 0u;
  v45 = 0u;
  sub_19CD40658((uint64_t)v46, (uint64_t)&v44);
  v49 = 0;
  v47 = v44;
  v48 = v45;
  v35 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = sub_19CD40918(0, v43[2] + 1, 1, v43);
  v37 = v35[2];
  v36 = v35[3];
  if (v37 >= v36 >> 1)
    v35 = sub_19CD40918((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
  v35[2] = v37 + 1;
  v38 = &v35[5 * v37];
  v39 = v47;
  v40 = v48;
  *((_BYTE *)v38 + 64) = v49;
  *((_OWORD *)v38 + 2) = v39;
  *((_OWORD *)v38 + 3) = v40;
  sub_19CCECFE4((uint64_t)v50, &qword_1ECEB3370);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  *(_QWORD *)(v31 + 32) = v35;
  *(_QWORD *)&v47 = v32;
  LOBYTE(v44) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v44);

  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

}

void AMSMetricsIdentifierFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CEFD460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 96) = a6;
  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  *(_QWORD *)(v6 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEFD4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD **)(v0 + 32);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v7 = v3 + 24;
  v8 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v0 + 16) = v2;
  v9 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v12 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v10;
  *v10 = v0;
  v10[1] = sub_19CEFD5B0;
  return v12(*(_QWORD *)(v0 + 40), v7, v8, v0 + 16, *(unsigned __int8 *)(v0 + 96), *(_QWORD *)(v0 + 64), v5, v6);
}

uint64_t sub_19CEFD5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_19CCECFE4(*(_QWORD *)(v4 + 64), (uint64_t *)&unk_1ECEB2040);
  }
  else
  {
    v5 = *(_QWORD *)(v4 + 64);
    *(_QWORD *)(v4 + 88) = a1;
    sub_19CCECFE4(v5, (uint64_t *)&unk_1ECEB2040);
  }
  return swift_task_switch();
}

uint64_t sub_19CEFD644()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEFD684()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19CEFD6B8(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;

  v5 = *a1;
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a3);
}

void sub_19CEFD720(uint64_t a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  Swift::String v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[4];
  _QWORD *v24;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v3 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v24 = sub_19CD40918(0, 40, 0, MEMORY[0x1E0DEE9D8]);
  v6._object = (void *)0x800000019D076440;
  v6._countAndFlagsBits = 0xD000000000000027;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v23[3] = v22;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_2Tm, v21, v22);
  sub_19CD40794((uint64_t)v23, (uint64_t)v17);
  v15 = 0u;
  v16 = 0u;
  sub_19CD40658((uint64_t)v17, (uint64_t)&v15);
  v20 = 0;
  v18 = v15;
  v19 = v16;
  v8 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_19CD40918(0, v8[2] + 1, 1, v8);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_19CD40918((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v10 + 1;
  v11 = &v8[5 * v10];
  v12 = v18;
  v13 = v19;
  *((_BYTE *)v11 + 64) = v20;
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  v24 = v8;
  sub_19CCECFE4((uint64_t)v23, &qword_1ECEB3370);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(_QWORD *)(v4 + 32) = v24;
  *(_QWORD *)&v18 = v5;
  LOBYTE(v15) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v15);

  swift_bridgeObjectRelease();
  dispatch_group_leave(a2);
}

uint64_t sub_19CEFD930(uint64_t a1, uint64_t *a2)
{
  return AMSMetricsIdentifierFieldsProvider.addMetricsFields(into:using:)(a1, a2);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:eventRecorder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[40];

  v11 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v16);
  if (qword_1EE43B018 != -1)
    swift_once();
  v12 = qword_1EE43B010;
  sub_19CCD5B84((uint64_t)v16, (uint64_t)v15);
  v14 = v11;
  swift_bridgeObjectRetain();
  sub_19CEFCFE8((uint64_t)v15, a2, &v14, a4 & 1, v12, 0, (uint64_t)sub_19CEFCF9C, 0, a6, 15552000.0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  sub_19CCECFE4(a5, &qword_1EE43BCA8);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:eventRecorder:keys:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v15;
  uint64_t v17;
  _BYTE v18[40];
  _BYTE v19[40];

  v15 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v19);
  sub_19CCD5B84((uint64_t)v19, (uint64_t)v18);
  v17 = v15;
  sub_19CEFCFE8((uint64_t)v18, a2, &v17, a4, a6, 0, (uint64_t)sub_19CEFCF9C, 0, a7, a8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  sub_19CCECFE4(a5, &qword_1EE43BCA8);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[40];
  _BYTE v14[40];

  v9 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v14);
  if (qword_1EE43B018 != -1)
    swift_once();
  v10 = qword_1EE43B010;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v12 = v9;
  swift_bridgeObjectRetain();
  sub_19CEFCFE8((uint64_t)v13, a2, &v12, a4 & 1, v10, 0, (uint64_t)sub_19CEFCF9C, 0, a5, 15552000.0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t AMSMetricsIdentifierFieldsProvider.init(accountProvider:process:bag:shouldMigrate:resetInterval:keys:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[40];
  _BYTE v17[40];

  v13 = *a3;
  sub_19CCD5B84(a1, (uint64_t)v17);
  sub_19CCD5B84((uint64_t)v17, (uint64_t)v16);
  v15 = v13;
  sub_19CEFCFE8((uint64_t)v16, a2, &v15, a4, a5, 0, (uint64_t)sub_19CEFCF9C, 0, a6, a7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

void (*sub_19CEFDC8C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_19CEFDCE0(v6, a2, a3);
  return sub_19CDB97F0;
}

void (*sub_19CEFDCE0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1A1ADA390](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for QueryExpression.Rule;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CEFDD4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEFDD70()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEFDDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 56);
  v6 = v1 + 64;
  v7 = *(_QWORD *)(v1 + 176);
  v8 = *(_BYTE *)(v1 + 184);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return sub_19CEFD460(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CEFDE5C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEFDE90(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C00
                                                                                     + dword_1EE442C00))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CEFDF24()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_19CEFDF50(uint64_t *a1)
{
  uint64_t v1;

  sub_19CEFD6B8(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19CEFDF58()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_19CEFDF7C(uint64_t a1)
{
  uint64_t v1;

  sub_19CEFD720(a1, *(NSObject **)(v1 + 16));
}

uint64_t assignWithCopy for AMSMetricsIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  v4 = *(void **)(a2 + 64);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AMSMetricsIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AMSMetricsIdentifierFieldsProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSMetricsIdentifierFieldsProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_19CEFE190()
{
  id v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  sub_19CD3E52C();
  sub_19CF00EFC();
  v0 = v1;
  sub_19CFE00C4();

}

uint64_t static MediaArtwork._nullCachedImagesKey.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE43D6E0 != -1)
    swift_once();
  return sub_19CD23A14((uint64_t)&unk_1EE441850, a1);
}

uint64_t MediaArtwork.init(_:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  sub_19CCD5B84((uint64_t)a1, (uint64_t)v20);
  v4 = v21;
  v5 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v7 = v21;
  v8 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  LOBYTE(v8) = v10;
  v11 = v21;
  v12 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  v14 = v21;
  v15 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
  v18 = v17;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v13;
  *(double *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v18;
  return sub_19CCD14C4(a1, a2 + 48);
}

uint64_t MediaArtwork.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  ValueMetadata *v4;
  _UNKNOWN **v5;

  v4 = &_s20_AppleServicesSourceVN;
  v5 = &off_1EE437A10;
  *(_QWORD *)&v3 = a1;
  return MediaArtwork.init(_:)(&v3, a2);
}

uint64_t MediaArtwork.init(urlTemplate:sourceImageSize:colors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  __int128 v8;
  ValueMetadata *v9;
  _UNKNOWN **v10;

  v9 = &_s20_AppleServicesSourceVN;
  v10 = &off_1EE437A10;
  *(_QWORD *)&v8 = sub_19CF2262C(a1, a2, a3, a5, a6);
  return MediaArtwork.init(_:)(&v8, a4);
}

uint64_t MediaArtwork.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  v9 = _s10_URLSourceVMa();
  v10 = &off_1EE4378F0;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v8);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(boxed_opaque_existential_2Tm, a1, v5);
  MediaArtwork.init(_:)(&v8, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t MediaArtwork.init()@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  ValueMetadata *v3;
  _UNKNOWN **v4;

  v3 = &_s12_EmptySourceVN;
  v4 = &off_1EE4379C0;
  return MediaArtwork.init(_:)(&v2, a1);
}

uint64_t MediaArtwork.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  uint64_t v39;
  void **v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t *boxed_opaque_existential_2Tm;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[3];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441878);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s10_URLSourceVMa();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a2;
  sub_19CD3E448(a1, (uint64_t)v81);
  sub_19CCF8C5C((uint64_t)v81, (uint64_t)v85, &qword_1ECEB1328);
  v16 = v86;
  if (!v86)
  {
    sub_19CCECFE4((uint64_t)v85, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v81);
    goto LABEL_13;
  }
  v79 = a1;
  v17 = v87;
  __swift_project_boxed_opaque_existential_1(v85, v86);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 104);
  v19 = v17;
  a1 = v79;
  v20 = v18(v16, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
  sub_19CD3E3F8((uint64_t)v81);
  if ((v20 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v40 = (void **)MEMORY[0x1E0CFD8F0];
    *(_QWORD *)(a3 + 72) = &_s12_EmptySourceVN;
    *(_QWORD *)(a3 + 80) = &off_1EE4379C0;
    v41 = *v40;
    v42 = (void *)*MEMORY[0x1E0CFD8D8];
    *(_QWORD *)a3 = *v40;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
    *(_QWORD *)(a3 + 32) = 0;
    *(_QWORD *)(a3 + 40) = 0;
    *(_QWORD *)(a3 + 24) = v42;
    v43 = v41;
    v44 = v42;
    v45 = a1;
    return sub_19CD3E3F8(v45);
  }
  sub_19CD3E448(a1, (uint64_t)v81);
  v85[0] = v15;
  swift_bridgeObjectRetain();
  sub_19CF2096C((uint64_t)v81, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    swift_bridgeObjectRelease();
    sub_19CF00B00((uint64_t)v9, (uint64_t)v14);
    *(_QWORD *)(a3 + 72) = v10;
    *(_QWORD *)(a3 + 80) = &off_1EE4378F0;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(a3 + 48));
    sub_19CF00B44((uint64_t)v14, (uint64_t)boxed_opaque_existential_2Tm);
    v48 = (void *)*MEMORY[0x1E0CFD8F0];
    v49 = (void *)*MEMORY[0x1E0CFD8D8];
    *(_QWORD *)a3 = *MEMORY[0x1E0CFD8F0];
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
    *(_QWORD *)(a3 + 32) = 0;
    *(_QWORD *)(a3 + 40) = 0;
    *(_QWORD *)(a3 + 24) = v49;
    v50 = v48;
    v51 = v49;
    sub_19CD3E3F8(a1);
    return sub_19CF00B88((uint64_t)v14);
  }
  sub_19CCECFE4((uint64_t)v9, &qword_1EE441878);
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v81);
  sub_19CCF8C5C((uint64_t)v81, (uint64_t)v85, &qword_1ECEB1328);
  v21 = v86;
  if (!v86)
  {
    sub_19CCECFE4((uint64_t)v85, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v81);
    goto LABEL_17;
  }
  v22 = v87;
  __swift_project_boxed_opaque_existential_1(v85, v86);
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 24);
  v24 = v22;
  a1 = v79;
  v25 = v23(v21, v24);
  v27 = v26;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
  sub_19CD3E3F8((uint64_t)v81);
  if (!v27)
  {
LABEL_17:
    sub_19CD3E448(a1, (uint64_t)v81);
    v85[0] = v15;
    v52 = sub_19CF21D3C((uint64_t)v81);
    if (!v52)
    {
      sub_19CDC5494();
      swift_allocError();
      v61 = MEMORY[0x1E0DEE9D8];
      *v60 = (uint64_t)&type metadata for MediaArtwork;
LABEL_20:
      v60[1] = v61;
      v60[2] = 0;
      v60[3] = 0;
LABEL_26:
      swift_willThrow();
      return sub_19CD3E3F8(a1);
    }
    v53 = v52;
    *(_QWORD *)(a3 + 72) = &_s20_AppleServicesSourceVN;
    *(_QWORD *)(a3 + 80) = &off_1EE437A10;
    *(_QWORD *)(a3 + 48) = v52;
    v54 = (void *)*MEMORY[0x1E0CFD8D8];
    v55 = a1;
    v56 = (id)*MEMORY[0x1E0CFD8F0];
    v57 = v54;
    objc_msgSend(v53, sel_artworkSize);
    *(_QWORD *)a3 = v56;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
    *(_QWORD *)(a3 + 24) = v57;
    *(_QWORD *)(a3 + 32) = v58;
    *(_QWORD *)(a3 + 40) = v59;
    v45 = v55;
    return sub_19CD3E3F8(v45);
  }
  swift_bridgeObjectRetain();
  v28 = sub_19CF8EC50(0xD000000000000027, 0x800000019D076470, v15);
  swift_bridgeObjectRelease();
  if (!v28)
    goto LABEL_25;
  if (!*(_QWORD *)(v28 + 16))
  {
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880) | 0x8000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *v63 = v25;
    v63[1] = v27;
    v63[2] = v62;
    v63[3] = 0;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v29 = sub_19CD3FD1C(v25, v27);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 16 * v29);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v32 = dynamic_cast_existential_2_conditional(v31);
  if (v32)
  {
    v35 = v32;
    v36 = v33;
    v37 = v34;
    sub_19CD3E448(a1, (uint64_t)v85);
    v88 = v15;
    v38 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v36 + 8);
    v82 = v35;
    v83 = v36;
    v84 = v37;
    __swift_allocate_boxed_opaque_existential_2Tm(v81);
    v39 = v80;
    v38(v85, &v88, v35, v36);
    if (v39)
    {
      sub_19CD3E3F8(a1);
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v81);
    }
    v69 = v82;
    v70 = v84;
    goto LABEL_34;
  }
  v64 = dynamic_cast_existential_2_conditional(v31);
  if (!v64)
  {
    swift_bridgeObjectRelease();
    sub_19CDC5494();
    swift_allocError();
    v61 = MEMORY[0x1E0DEE9D8];
    *v60 = v31;
    goto LABEL_20;
  }
  v67 = v64;
  v84 = v66;
  v85[0] = v15;
  v82 = v64;
  v83 = v65;
  __swift_allocate_boxed_opaque_existential_2Tm(v81);
  v68 = v80;
  JSONObject.decode<A>(_:using:)(v67, v85);
  if (v68)
  {
    sub_19CD3E3F8(a1);
    swift_bridgeObjectRelease();
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v81);
  }
  swift_bridgeObjectRelease();
  v69 = v82;
  v70 = v83;
LABEL_34:
  __swift_project_boxed_opaque_existential_1(v81, v69);
  *(_QWORD *)(a3 + 72) = v69;
  *(_QWORD *)(a3 + 80) = v70;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(a3 + 48));
  (*(void (**)(void))(*(_QWORD *)(v69 - 8) + 16))();
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 24))(v69, v70);
  v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 32))(v69, v70);
  v74 = v73;
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
  v76 = (*(double (**)(uint64_t, uint64_t))(v70 + 48))(v69, v70);
  *(_QWORD *)a3 = v71;
  *(_QWORD *)(a3 + 8) = v72;
  *(_BYTE *)(a3 + 16) = v74 & 1;
  *(_QWORD *)(a3 + 24) = v75;
  *(double *)(a3 + 32) = v76;
  *(_QWORD *)(a3 + 40) = v77;
  sub_19CD3E3F8(v79);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
}

uint64_t MediaArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *boxed_opaque_existential_2Tm;
  void *v41;
  id v42;
  id v43;
  __int128 v44;
  __int128 v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[5];
  uint64_t v94[5];
  __int128 v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _UNKNOWN **v105;
  uint64_t v106;

  v91 = sub_19CFE01A8();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91, v5);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441888);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F70);
  v92 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106, v12);
  v89 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441878);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s10_URLSourceVMa();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCD5B84((uint64_t)a1, (uint64_t)&v95);
  sub_19CF21A98(&v95);
  if (v2)
  {

    sub_19CCD5B84((uint64_t)a1, (uint64_t)&v95);
    sub_19CF20BC4(&v95, (uint64_t)v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
    if (v27 == 1)
    {
      sub_19CCECFE4((uint64_t)v17, &qword_1EE441878);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19CDD5ED8();
      sub_19CFE09E8();
      v28 = v106;
      v29 = v92;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v11, 0, 1, v106);
      v30 = v89;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v89, v11, v28);
      v95 = xmmword_19D060C40;
      v96 = 1;
      v31 = sub_19CFE0454();
      v33 = v32;
      if (v32)
      {
        v88 = v31;
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        v47 = v89;
        v48 = sub_19CFE09DC();
        v49 = sub_19CF06418(0xD000000000000027, 0x800000019D076470, v48);
        swift_bridgeObjectRelease();
        if (v49)
        {
          if (*(_QWORD *)(v49 + 16))
          {
            swift_bridgeObjectRetain();
            v50 = sub_19CD3FD1C(v88, v33);
            if ((v51 & 1) != 0)
            {
              v52 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 16 * v50);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              v53 = dynamic_cast_existential_2_conditional(v52);
              if (v53)
              {
                v56 = v53;
                v57 = v54;
                v58 = v55;
                sub_19CCD5B84((uint64_t)a1, (uint64_t)v94);
                v97 = v56;
                v98 = v57;
                v99 = v58;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v95);
                sub_19CFDFB90();
                v73 = v97;
                v74 = v98;
              }
              else
              {
                v65 = dynamic_cast_existential_2_conditional(v52);
                if (!v65)
                {
                  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
                  sub_19CFE09B8();
                  *(_QWORD *)&v95 = 0;
                  *((_QWORD *)&v95 + 1) = 0xE000000000000000;
                  sub_19CFE010C();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)&v95 = 60;
                  *((_QWORD *)&v95 + 1) = 0xE100000000000000;
                  sub_19CFE0A90();
                  sub_19CFDF698();
                  swift_bridgeObjectRelease();
                  sub_19CFDF698();
                  sub_19CFE019C();
                  v81 = sub_19CFE01B4();
                  swift_allocError();
                  v83 = v82;
                  v84 = (char *)v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530) + 48);
                  *v83 = v52;
                  v85 = v90;
                  v86 = v91;
                  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v84, v7, v91);
                  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v83, *MEMORY[0x1E0DEC450], v81);
                  swift_willThrow();
                  (*(void (**)(char *, uint64_t))(v85 + 8))(v7, v86);
                  (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v106);
                  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
                }
                v68 = v65;
                v69 = v66;
                v70 = v67;
                sub_19CCD5B84((uint64_t)a1, (uint64_t)v93);
                JSONObject.init(from:)(v93, v94);
                __swift_project_boxed_opaque_existential_1(a1, a1[3]);
                v71 = sub_19CFE09DC();
                JSONContext.init(userInfo:)((Swift::OpaquePointer)v71);
                v72 = *(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t))(v69 + 8);
                v97 = v68;
                v98 = v69;
                v99 = v70;
                __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v95);
                v72(v94, v93, v68, v69);
                v73 = v97;
                v74 = v99;
              }
              __swift_project_boxed_opaque_existential_1(&v95, v73);
              *((_QWORD *)&v104 + 1) = v73;
              v105 = (_UNKNOWN **)v74;
              __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v103);
              (*(void (**)(void))(*(_QWORD *)(v73 - 8) + 16))();
              v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
              v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 32))(v73, v74);
              LODWORD(v91) = v77;
              v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 40))(v73, v74);
              v79 = (*(double (**)(uint64_t, uint64_t))(v74 + 48))(v73, v74);
              *(_QWORD *)&v100 = v75;
              *((_QWORD *)&v100 + 1) = v76;
              LOBYTE(v101) = v91 & 1;
              *((_QWORD *)&v101 + 1) = v78;
              *(double *)&v102 = v79;
              *((_QWORD *)&v102 + 1) = v80;
              (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v106);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v95);
              goto LABEL_7;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_19CFE09B8();
        *(_QWORD *)&v95 = 0;
        *((_QWORD *)&v95 + 1) = 0xE000000000000000;
        sub_19CFE010C();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v95 = 0xD000000000000023;
        *((_QWORD *)&v95 + 1) = 0x800000019D0764C0;
        sub_19CFDF698();
        swift_bridgeObjectRelease();
        sub_19CFDF698();
        sub_19CFE019C();
        v59 = sub_19CFE01B4();
        swift_allocError();
        v61 = v60;
        v62 = (char *)v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530) + 48);
        *v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
        v63 = v90;
        v64 = v91;
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v62, v7, v91);
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v61, *MEMORY[0x1E0DEC460], v59);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v64);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v47, v106);
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(v30, v106);
      sub_19CCD5B84((uint64_t)a1, (uint64_t)&v95);
      v34 = sub_19CF20D2C(&v95);
      *((_QWORD *)&v104 + 1) = &_s20_AppleServicesSourceVN;
      v105 = &off_1EE437A10;
      *(_QWORD *)&v103 = v34;
      v35 = (void *)*MEMORY[0x1E0CFD8D8];
      v36 = (id)*MEMORY[0x1E0CFD8F0];
      v37 = v35;
      objc_msgSend(v34, sel_artworkSize);
      v100 = (unint64_t)v36;
      LOBYTE(v101) = 1;
      *((_QWORD *)&v101 + 1) = v37;
      *(_QWORD *)&v102 = v38;
      *((_QWORD *)&v102 + 1) = v39;
    }
    else
    {
      sub_19CF00B00((uint64_t)v17, (uint64_t)v22);
      *((_QWORD *)&v104 + 1) = v18;
      v105 = &off_1EE4378F0;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v103);
      sub_19CF00B44((uint64_t)v22, (uint64_t)boxed_opaque_existential_2Tm);
      v41 = (void *)*MEMORY[0x1E0CFD8D8];
      v100 = (unint64_t)*MEMORY[0x1E0CFD8F0];
      LOBYTE(v101) = 1;
      v102 = 0uLL;
      *((_QWORD *)&v101 + 1) = v41;
      v42 = (id)v100;
      v43 = v41;
      sub_19CF00B88((uint64_t)v22);
    }
  }
  else
  {
    v105 = &off_1EE4379C0;
    v23 = (void *)*MEMORY[0x1E0CFD8F0];
    LOBYTE(v101) = 1;
    v24 = (void *)*MEMORY[0x1E0CFD8D8];
    v100 = (unint64_t)v23;
    *((_QWORD *)&v104 + 1) = &_s12_EmptySourceVN;
    v102 = 0uLL;
    *((_QWORD *)&v101 + 1) = v24;
    v25 = v23;
    v26 = v24;
  }
LABEL_7:
  v44 = v103;
  *(_OWORD *)(a2 + 32) = v102;
  *(_OWORD *)(a2 + 48) = v44;
  *(_OWORD *)(a2 + 64) = v104;
  *(_QWORD *)(a2 + 80) = v105;
  v45 = v101;
  *(_OWORD *)a2 = v100;
  *(_OWORD *)(a2 + 16) = v45;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MediaArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *boxed_opaque_existential_2Tm;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  char *v37;
  uint64_t DynamicType;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[24];
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  id v52;

  v2 = v1;
  v44 = sub_19CFE01CC();
  v4 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44, v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4372B8);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42, v8);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s10_URLSourceVMa();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCD5B84(v1 + 48, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441798);
  if (swift_dynamicCast())
  {
    v14 = v44;
    sub_19CCD14C4(&v45, (uint64_t)v50);
    sub_19CCD5B84((uint64_t)v50, (uint64_t)v48);
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (!swift_dynamicCast())
      {
        if (swift_dynamicCast())
        {

          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_19CFE0A0C();
          __swift_project_boxed_opaque_existential_1(v50, v51);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v45, *((uint64_t *)&v46 + 1));
          sub_19CFE073C();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v45);
        }
        else
        {
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          v25 = sub_19CFE09DC();
          v26 = sub_19CF06418(0xD000000000000027, 0x800000019D076470, v25);
          v27 = swift_bridgeObjectRelease();
          if (v26
            && (MEMORY[0x1E0C80A78](v27, v28),
                *(&v39 - 2) = (uint64_t)v50,
                v29 = v43,
                sub_19CEF4EA8((uint64_t (*)(_QWORD *))sub_19CF00BC4, (uint64_t)(&v39 - 4), v26),
                v31 = v30,
                swift_bridgeObjectRelease(),
                v31))
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_19CDD5ED8();
            v32 = v41;
            sub_19CFE0A24();
            v45 = xmmword_19D060C40;
            LOBYTE(v46) = 1;
            v33 = v42;
            sub_19CFE0538();
            swift_bridgeObjectRelease();
            if (!v29)
            {
              __swift_project_boxed_opaque_existential_1(v50, v51);
              sub_19CFDF4B8();
            }
            (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
          }
          else
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_19CFE09B8();
            *(_QWORD *)&v45 = 0;
            *((_QWORD *)&v45 + 1) = 0xE000000000000000;
            sub_19CFE010C();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v45 = 0xD000000000000017;
            *((_QWORD *)&v45 + 1) = 0x800000019D0760A0;
            __swift_project_boxed_opaque_existential_1(v50, v51);
            swift_getDynamicType();
            sub_19CFE0A90();
            sub_19CFDF698();
            swift_bridgeObjectRelease();
            sub_19CFDF698();
            sub_19CFE019C();
            v34 = sub_19CFE01D8();
            swift_allocError();
            v36 = v35;
            v37 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
            __swift_project_boxed_opaque_existential_1(v50, v51);
            DynamicType = swift_getDynamicType();
            v36[3] = swift_getMetatypeMetadata();
            *v36 = DynamicType;
            (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v37, v7, v14);
            (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x1E0DEC4B0], v34);
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v14);
          }
        }
        goto LABEL_6;
      }
      sub_19CF00B88((uint64_t)v13);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE0A0C();
    __swift_project_boxed_opaque_existential_1(v50, v51);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
    sub_19CFE073C();
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
  }
  v47 = 0;
  v45 = 0u;
  v46 = 0u;
  sub_19CCECFE4((uint64_t)&v45, &qword_1EE4417A0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09B8();
  v50[0] = 0;
  v50[1] = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  sub_19CFE019C();
  v16 = sub_19CFE01D8();
  swift_allocError();
  v18 = v17;
  v19 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
  v20 = *(_QWORD *)(v2 + 72);
  v21 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), v20);
  v18[3] = v20;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v18);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v21, v20);
  v23 = v19;
  v24 = v44;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v23, v7, v44);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC4B0], v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v24);
}

uint64_t MediaArtwork.isEmpty.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_19CCD5B84(v0 + 48, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
  return swift_dynamicCast();
}

double MediaArtwork.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t MediaArtwork.subscript.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[9];
  v4 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
}

void MediaArtwork.resize(_:croppedTo:)(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  id v21[6];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  sub_19CF00C18((uint64_t)v4, a2);
  v9 = v4[9];
  v10 = v4[10];
  __swift_project_boxed_opaque_existential_1(v4 + 6, v9);
  v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  sub_19CF00C18((uint64_t)v4, (uint64_t)v21);
  if (v11 <= 0.0)
  {
    sub_19CF00C4C(v21);
  }
  else
  {
    v12 = v23;
    v13 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
    v15 = v14;
    sub_19CF00C4C(v21);
    if (v15 > 0.0)
    {
      v17 = v4[9];
      v16 = v4[10];
      __swift_project_boxed_opaque_existential_1(v4 + 6, v17);
      v18 = (*(double (**)(uint64_t, uint64_t))(v16 + 48))(v17, v16);
      a3 = sub_19CEFCC68(a3, a4, v18, v19);
      a4 = v20;
    }
  }
  *(double *)(a2 + 32) = a3;
  *(double *)(a2 + 40) = a4;
  objc_storeStrong((id *)(a2 + 24), a1);
}

void MediaArtwork.format(_:withQuality:)(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_19CF00C18(v4, a4);
  objc_storeStrong((id *)a4, a1);
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3 & 1;
}

uint64_t sub_19CF00074@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaArtwork.init(from:)(a1, a2);
}

uint64_t sub_19CF00088(_QWORD *a1)
{
  return MediaArtwork.encode(to:)(a1);
}

uint64_t sub_19CF0009C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return MediaArtwork.init(deserializing:using:)(a1, a2, a3);
}

uint64_t MediaArtwork.init(_partiallyFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[2];
  char v15;
  _BYTE v16[7];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD v23[2];

  sub_19CCD5B84(a1, (uint64_t)&v12);
  MediaArtwork.init(from:)(&v12, (uint64_t)v14);
  v4 = v14[1];
  v5 = v15;
  v23[0] = *(_DWORD *)v16;
  *(_DWORD *)((char *)v23 + 3) = *(_DWORD *)&v16[3];
  v6 = v17;
  v7 = v18;
  v12 = v19;
  v8 = v21;
  v13 = v20;
  v9 = v22;
  *(_QWORD *)a2 = v14[0];
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + 17) = v23[0];
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)v23 + 3);
  *(_QWORD *)(a2 + 24) = v6;
  v10 = v12;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v8;
  *(_QWORD *)(a2 + 80) = v9;
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t MediaArtwork._partiallyEncode(to:)(_QWORD *a1)
{
  return MediaArtwork.encode(to:)(a1);
}

uint64_t MediaArtwork._cachedImagesKey(withScale:)(CGFloat a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  CGFloat v5;
  char v6;
  void *v7;
  CGFloat v8;
  CGFloat v9;
  id v10;
  id v11;
  CGSize v12;
  CGAffineTransform v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  CGSize v18;

  sub_19CCD5B84(v1 + 48, (uint64_t)v15);
  v3 = v16;
  v4 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  v5 = *(double *)(v1 + 8);
  v6 = *(_BYTE *)(v1 + 16);
  v7 = *(void **)(v1 + 24);
  v8 = *(double *)(v1 + 32);
  v9 = *(double *)(v1 + 40);
  v10 = *(id *)v1;
  v11 = v7;
  if (a1 <= 0.0)
    sub_19CFB28B8((uint64_t)"JetEngine/MediaArtworkSourceConfiguration.swift", 47, 2, 58, sub_19CF00C78);
  CGAffineTransformMakeScale(&v14, a1, a1);
  v18.width = v8;
  v18.height = v9;
  v12 = CGSizeApplyAffineTransform(v18, &v14);
  *(_QWORD *)&v14.a = v10;
  v14.b = v5;
  LOBYTE(v14.c) = v6;
  *(_QWORD *)&v14.d = v11;
  *(CGSize *)&v14.tx = v12;
  (*(void (**)(CGAffineTransform *, uint64_t, uint64_t))(v4 + 64))(&v14, v3, v4);

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
}

uint64_t MediaArtwork._resource(withScale:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  CGFloat v7;
  char v8;
  void *v9;
  CGFloat v10;
  CGFloat v11;
  id v12;
  id v13;
  CGSize v14;
  void (*v15)(CGAffineTransform *, uint64_t, uint64_t, double);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t *v25;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD v28[3];
  uint64_t v29;
  CGFloat v30;
  CGAffineTransform v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  CGSize v35;

  v29 = a1;
  sub_19CCD5B84(v2 + 48, (uint64_t)v32);
  v4 = v33;
  v5 = v34;
  v28[2] = __swift_project_boxed_opaque_existential_1(v32, v33);
  v6 = *(void **)v2;
  v7 = *(double *)(v2 + 8);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = *(void **)(v2 + 24);
  v10 = *(double *)(v2 + 32);
  v11 = *(double *)(v2 + 40);
  v30 = a2;
  v12 = v6;
  v13 = v9;
  if (a2 <= 0.0)
    sub_19CFB28B8((uint64_t)"JetEngine/MediaArtworkSourceConfiguration.swift", 47, 2, 58, sub_19CF00F44);
  CGAffineTransformMakeScale(&v31, a2, a2);
  v35.width = v10;
  v35.height = v11;
  v14 = CGSizeApplyAffineTransform(v35, &v31);
  *(_QWORD *)&v31.a = v12;
  v31.b = v7;
  LOBYTE(v31.c) = v8;
  *(_QWORD *)&v31.d = v13;
  *(CGSize *)&v31.tx = v14;
  v15 = *(void (**)(CGAffineTransform *, uint64_t, uint64_t, double))(v5 + 72);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_19CFDFF5C();
  v28[1] = v28;
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v22 = (char *)v28 - v21;
  v15(&v31, v4, v5, v20);

  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    v24 = (_OWORD *)v29;
    *(_QWORD *)(v29 + 32) = 0;
    *v24 = 0u;
    v24[1] = 0u;
  }
  else
  {
    v25 = (uint64_t *)v29;
    *(_QWORD *)(v29 + 24) = AssociatedTypeWitness;
    v25[4] = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v25);
    (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_2Tm, v22, AssociatedTypeWitness);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
}

uint64_t MediaArtwork.init(urlTemplate:sourceImageSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  unint64_t v10;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v10 = sub_19CE10BA0(MEMORY[0x1E0DEE9D8]);
  v13 = &_s20_AppleServicesSourceVN;
  v14 = &off_1EE437A10;
  *(_QWORD *)&v12 = sub_19CF2262C(a1, a2, v10, a4, a5);
  return MediaArtwork.init(_:)(&v12, a3);
}

uint64_t MediaArtwork.url(withScale:)@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  uint64_t v3;
  int v4;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  MediaArtwork._resource(withScale:)((uint64_t)v7, a2);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441898);
    v3 = sub_19CFDEDE0();
    v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, v4 ^ 1u, 1, v3);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v7, &qword_1EE441890);
    v6 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t _s9JetEngine12MediaArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char v23;
  _QWORD v25[2];
  __int128 v26[2];
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  __int128 v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;
  __int128 v35;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v32[0] = *(_QWORD *)a1;
  v32[1] = v4;
  v33 = v5;
  v34 = v6;
  v35 = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v28[0] = *(_QWORD *)a2;
  v28[1] = v7;
  v29 = v8;
  v30 = v9;
  v31 = *(_OWORD *)(a2 + 32);
  if (!_s9JetEngine31MediaArtworkSourceConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v32, (uint64_t)v28))
    goto LABEL_6;
  sub_19CCD5B84(a1 + 48, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A710);
  if (!swift_dynamicCast())
  {
    v27 = 0;
    memset(v26, 0, sizeof(v26));
    sub_19CCECFE4((uint64_t)v26, (uint64_t *)&unk_1EE439CD8);
LABEL_6:
    v23 = 0;
    return v23 & 1;
  }
  sub_19CCD14C4(v26, (uint64_t)v32);
  v10 = v34;
  v25[1] = v35;
  __swift_project_boxed_opaque_existential_1(v32, v34);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](a2 + 48, v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCD5B84(v15, (uint64_t)v28);
  v16 = sub_19CFDFF5C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)v25 - v19;
  v21 = swift_dynamicCast();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v21)
  {
    v22(v20, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v20, v10);
    v23 = sub_19CFDF548();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v22(v20, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v23 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  return v23 & 1;
}

uint64_t sub_19CF00B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF00B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF00B88(uint64_t a1)
{
  uint64_t v2;

  v2 = _s10_URLSourceVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_19CF00BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 24));
  return v2 == swift_getDynamicType();
}

uint64_t sub_19CF00C18(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MediaArtwork(a2, a1);
  return a2;
}

id *sub_19CF00C4C(id *a1)
{
  destroy for MediaArtwork(a1);
  return a1;
}

uint64_t sub_19CF00C78()
{
  return sub_19CDCCA58();
}

uint64_t destroy for MediaArtwork(id *a1)
{

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 6));
}

uint64_t initializeWithCopy for MediaArtwork(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = a1 + 48;
  v7 = a2 + 48;
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v3;
  v12 = v5;
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for MediaArtwork(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MediaArtwork(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaArtwork(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaArtwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaArtwork()
{
  return &type metadata for MediaArtwork;
}

unint64_t sub_19CF00EFC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE4418A0;
  if (!qword_1EE4418A0)
  {
    v1 = sub_19CD3E52C();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE4418A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EventTimeTreatmentFilter()
{
  return &type metadata for EventTimeTreatmentFilter;
}

uint64_t sub_19CF00F58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v18;
  __int128 v19;
  _QWORD v20[4];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v3 = a1[1];
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_13;
  v5 = sub_19CD3FD1C(0x707954746E657665, 0xE900000000000065);
  if ((v6 & 1) == 0)
    goto LABEL_13;
  sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v21);
  v7 = MEMORY[0x1E0DEA968];
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  if (v18 != __PAIR128__(0xEA00000000007265, 0x646E655265676170))
  {
    v8 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_7;
LABEL_13:
    *a2 = v4;
    a2[1] = v3;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  if (!*(_QWORD *)(v4 + 16) || (v9 = sub_19CD3FD1C(0x7571655265676170, 0xEF656D6954747365), (v10 & 1) == 0))
  {
    if (qword_1EE43D060 != -1)
      swift_once();
    sub_19CFE0A6C();
    v13 = v22;
    v24 = v23;
    __swift_project_boxed_opaque_existential_1(&v21, v22);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
    v20[3] = v7;
    v20[0] = 0xD00000000000004ELL;
    v20[1] = 0x800000019D076560;
    v18 = 0u;
    v19 = 0u;
    sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
    *(_BYTE *)(v15 + 64) = 0;
    v16 = v19;
    *(_OWORD *)(v15 + 32) = v18;
    *(_OWORD *)(v15 + 48) = v16;
    *(_QWORD *)(v14 + 32) = v15;
    Logger.error(_:)(v14, v13, v24);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
    goto LABEL_13;
  }
  sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v9, (uint64_t)&v18);
  sub_19CD433C0(&v18, &v21);
  sub_19CD436B0((uint64_t)&v21, (uint64_t)&v18);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20[0] = v4;
  sub_19CD13D40(&v18, 0x6D6954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  v12 = v20[0];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
  *a2 = v12;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF0124C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CF00F58(a1, a2);
}

BOOL sub_19CF01260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1, v2);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_19CFDFF5C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
    v8 = sub_19CFE0970();
    v9 = swift_getEnumCaseMultiPayload() != 1;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return 0;
  }
  return v9;
}

BOOL sub_19CF01358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1, v2);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_19CFDFF5C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
    v8 = sub_19CFE0970();
    v9 = swift_getEnumCaseMultiPayload() == 1;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return 0;
  }
  return v9;
}

uint64_t sub_19CF01450(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  void (*v11)(char *, uint64_t);
  uint64_t v12;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v5 + 16))(v8, v2, a2, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, a2);
  }
  else
  {
    v11 = *(void (**)(char *, uint64_t))(v5 + 8);
    v11(v2, a2);
    v11(v8, a2);
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(v2, a1);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19CF01548(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE441AD8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v6);
  v9 = (char *)&v19 - v8;
  v11 = *(int *)(v10 + 48);
  v12 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, _QWORD *, uint64_t, double))(v12 + 16))((char *)&v19 - v8, v2, a2, v7);
  *(_QWORD *)&v9[v11] = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, a2);
    v18 = a1;
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v2, a2);
    if (a1)
      goto LABEL_7;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 56))(v2, 1, 1, *(_QWORD *)(a2 + 16));
LABEL_10:
    sub_19CFDFF5C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
    sub_19CFE0970();
    goto LABEL_11;
  }
  v15 = a1;
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v2, a2);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  if (!a1)
  {
    (*(void (**)(_QWORD *, char *, _QWORD))(v17 + 32))(v2, v9, *(_QWORD *)(a2 + 16));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v2, 0, 1, v16);
    goto LABEL_10;
  }
  (*(void (**)(char *, _QWORD))(v17 + 8))(v9, *(_QWORD *)(a2 + 16));
LABEL_7:
  *v2 = a1;
  sub_19CFDFF5C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  sub_19CFE0970();
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19CF01748(uint64_t a1)
{
  swift_allocObject();
  return sub_19CF01780(a1);
}

uint64_t sub_19CF01780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void (*v54)(char *, id *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t result;
  void (*v61)(char *, id *, uint64_t);
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  id *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;

  v82 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v70 = sub_19CFDFAE8();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v4);
  v67 = (char *)&v65 - v5;
  v79 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v66 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v69 = (char *)&v65 - v11;
  v84 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(0, v2, v12, v13);
  v81 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84, v14);
  v75 = (id *)((char *)&v65 - v15);
  v16 = sub_19CFDFB48();
  v73 = *(_QWORD *)(v16 - 8);
  v74 = (char *)v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v72 = (char *)&v65 - v18;
  v19 = sub_19CFDFB18();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21);
  v71 = (char *)&v65 - v22;
  v78 = sub_19CFDFAF4();
  v23 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78, v24);
  v26 = (uint64_t *)((char *)&v65 - v25);
  v65 = v3;
  v83 = sub_19CFDFB54();
  v80 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83, v27);
  v29 = (char *)&v65 - v28;
  v30 = sub_19CFDFF5C();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v32);
  v34 = (char *)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35, v36);
  v39 = (char *)&v65 - v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v20 + 56))((char *)&v65 - v38, 1, 1, v19, v37);
  *v26 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v26, *MEMORY[0x1E0DF0A48], v78);
  v85 = v2;
  v86 = v39;
  nullsub_1(v2);
  sub_19CFDFB60();
  v77 = v30;
  v78 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v39, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v34, 1, v19) != 1)
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v41 = v71;
    v40(v71, v34, v19);
    v42 = v76;
    v40((char *)(v76 + *(_QWORD *)(*(_QWORD *)v76 + 88)), v41, v19);
    v43 = v72;
    v44 = v83;
    sub_19CFDFA58();
    (*(void (**)(uint64_t, char *, char *))(v73 + 32))(v42 + *(_QWORD *)(*(_QWORD *)v42 + 96), v43, v74);
    v46 = v81;
    v45 = v82;
    v47 = v75;
    v48 = v84;
    (*(void (**)(id *, uint64_t, uint64_t))(v81 + 16))(v75, v82, v84);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v50 = v45;
    if (EnumCaseMultiPayload)
    {
      v51 = v79;
      if (EnumCaseMultiPayload != 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v50, v48);
LABEL_12:
        (*(void (**)(char *, uint64_t))(v80 + 8))(v29, v44);
        goto LABEL_13;
      }
      sub_19CFDFF5C();
      sub_19CFE0970();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v87 = *v47;
        v52 = v87;
        v53 = v87;
        sub_19CFDFB0C();

LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v82, v84);
        goto LABEL_12;
      }
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v51 + 48))(v47, 1, v2) == 1)
      {
        v87 = 0;
        sub_19CFDFB0C();
        goto LABEL_11;
      }
      v61 = *(void (**)(char *, id *, uint64_t))(v51 + 32);
      v74 = v29;
      v55 = v69;
      v61(v69, v47, v2);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v66, v55, v2);
      v62 = v39;
      v63 = v67;
      sub_19CFDFB00();
      v64 = v63;
      v39 = v62;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v70);
      v87 = 0;
      sub_19CFDFB0C();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v82, v84);
    }
    else
    {
      v51 = v79;
      v54 = *(void (**)(char *, id *, uint64_t))(v79 + 32);
      v74 = v29;
      v55 = v69;
      v56 = v50;
      v54(v69, v47, v2);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v66, v55, v2);
      v57 = v39;
      v58 = v67;
      sub_19CFDFB00();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v56, v84);
      v59 = v58;
      v39 = v57;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v59, v70);
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v55, v2);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v83);
LABEL_13:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v39, v77);
    return v42;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v34, v77);
  __break(1u);
  return result;
}

uint64_t sub_19CF01DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v4 = sub_19CFDFB18();
  v5 = sub_19CFDFF5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  v6 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v4);
}

uint64_t sub_19CF01E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v8 = sub_19CFDFAE8();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, v4, v11);
  sub_19CFDFB18();
  sub_19CFDFB00();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_19CF01F9C(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  sub_19CFDFB18();
  return sub_19CFDFB0C();
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.next()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CF02024()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  sub_19CFDFB48();
  *v1 = v0;
  v1[1] = sub_19CF020CC;
  return sub_19CFDFB3C();
}

uint64_t sub_19CF020CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CF02140()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  v2 = sub_19CFDFB18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v4 = sub_19CFDFB48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t _AsyncSequenceMultiplexer.AsyncIterator.__deallocating_deinit()
{
  _AsyncSequenceMultiplexer.AsyncIterator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF02244(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  v5[5] = a1;
  v5[6] = v4;
  v5[7] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CF022B0()
{
  swift_weakInit();
  swift_weakAssign();
  return swift_release();
}

uint64_t _AsyncSequenceMultiplexer.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  _AsyncSequenceMultiplexer.init()(v0, v1, v2, v3);
  return v0;
}

_QWORD *_AsyncSequenceMultiplexer.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = *(_QWORD *)(*v4 + 80);
  v6 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v5, a3, a4);
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v5, v7, v8);
  sub_19CFDF938();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2, v11);
  v13 = (char *)&v24 - v12;
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v24 - v17;
  swift_storeEnumTagMultiPayload();
  v19 = sub_19CFDF8B4();
  v20 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v18, v6);
  *(_QWORD *)&v13[v20] = v19;
  v21 = sub_19CCFC9C8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, TupleTypeMetadata2);
  v4[2] = v21;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE4418B0);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  v4[3] = v22;
  return v4;
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer);
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncSequenceMultiplexer.WeakAsyncIterator);
}

uint64_t _AsyncSequenceMultiplexer.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = v4;
  v10 = swift_allocObject();
  _AsyncSequenceMultiplexer.init()(v10, v11, v12, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(v5 + 80);
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a1;
  v14[6] = a2;
  swift_retain();
  swift_retain();
  _AsyncSequenceMultiplexer.yield<A>(contentsOf:)((uint64_t)sub_19CF03F18, (uint64_t)v14, a3, a4);
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

uint64_t _AsyncSequenceMultiplexer.yield<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;

  v9 = v4[3];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_19CF02CF4((uint64_t *)(v9 + 16), v4, a1, a2, a3, a4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  return swift_release();
}

uint64_t _AsyncSequenceMultiplexer.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  if (*(_QWORD *)(v1 + 16))
    sub_19CFDFAA0();
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t _AsyncSequenceMultiplexer.__deallocating_deinit()
{
  _AsyncSequenceMultiplexer.deinit();
  return swift_deallocClassInstance();
}

uint64_t _AsyncSequenceMultiplexer.isFinishedSuccess.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CF026AC((void (*)(uint64_t))sub_19CF03F38, a2, a3, a4);
}

uint64_t _AsyncSequenceMultiplexer.isFinishedFailure.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CF026AC((void (*)(uint64_t))sub_19CF03F54, a2, a3, a4);
}

uint64_t sub_19CF026AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v6 = *v4;
  v7 = v4[2];
  v12 = *(_QWORD *)(v6 + 80);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v12, a3, a4);
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v12, v8, v9);
  sub_19CFDF938();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19CDF62F4(a1, (uint64_t)&v11, v7);
  swift_release();
  return v13;
}

uint64_t sub_19CF02768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;

  v6 = *v4;
  v7 = v4[2];
  v20 = *(_QWORD *)(v6 + 80);
  v21 = a1;
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v20, a3, a4);
  v10 = type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v20, v8, v9);
  sub_19CFDF938();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CF056E0, (uint64_t)&v19, v7);
  swift_release();
  v11 = v24;
  if (MEMORY[0x1A1AD9B44](v24, v10))
  {
    v12 = 0;
    v13 = v11 + 32;
    do
    {
      v14 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(v10 - 8);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v23, v13, v10);
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_10;
      }
      else
      {
        v22 = sub_19CFE0160();
        v15 = *(_QWORD *)(v10 - 8);
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v15 + 16))(v23, &v22, v10);
        swift_unknownObjectRelease();
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v15 + 32))(&v22, v23, v10);
      if (swift_weakLoadStrong())
      {
        sub_19CF01E80(a1, v17);
        swift_release();
      }
      (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(&v22, v10);
      v13 += 8;
      ++v12;
    }
    while (v16 != MEMORY[0x1A1AD9B44](v11, v10));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF0294C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, a3, a3, a4);
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, a3, v10, v11);
  v12 = sub_19CFDF938();
  v13 = (_QWORD *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF28], v12);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v12);
  sub_19CFDFCBC();
  sub_19CF01450(a2, v9);
  *a5 = *v13;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF02A58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;

  v6 = *v4;
  v7 = v4[2];
  v19 = *(_QWORD *)(v6 + 80);
  v20 = a1;
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v19, a3, a4);
  v10 = type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v19, v8, v9);
  sub_19CFDF938();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CF05734, (uint64_t)&v18, v7);
  swift_release();
  v11 = v22;
  if (MEMORY[0x1A1AD9B44](v22, v10))
  {
    v12 = 0;
    v13 = v11 + 32;
    do
    {
      v14 = sub_19CFDF8D8();
      sub_19CFDF890();
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(v10 - 8);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v22, v13, v10);
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_10;
      }
      else
      {
        v21[0] = sub_19CFE0160();
        v15 = *(_QWORD *)(v10 - 8);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v15 + 16))(&v22, v21, v10);
        swift_unknownObjectRelease();
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v15 + 32))(v21, &v22, v10);
      if (swift_weakLoadStrong())
      {
        sub_19CF01F9C(a1);
        swift_release();
      }
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v21, v10);
      v13 += 8;
      ++v12;
    }
    while (v16 != MEMORY[0x1A1AD9B44](v11, v10));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF02C3C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(0, a2, a2, a3);
  *a4 = sub_19CFDF398();
  v9 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, a2, v7, v8);
  sub_19CFDF938();
  swift_getTupleTypeMetadata2();
  sub_19CFE0814();
  return sub_19CF01548(a1, v9);
}

uint64_t sub_19CF02CF4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v11 = *a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  result = swift_release();
  if (v16)
  {
    __break(1u);
  }
  else
  {
    v18 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
    v19 = swift_allocObject();
    swift_weakInit();
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = *(_QWORD *)(v11 + 80);
    v20[5] = a5;
    v20[6] = a6;
    v20[7] = a3;
    v20[8] = a4;
    v20[9] = v19;
    swift_retain();
    v21 = sub_19CF0344C((uint64_t)v15, (uint64_t)&unk_1EE441AD0, (uint64_t)v20);
    result = sub_19CCFC068((uint64_t)v15);
    *a1 = v21;
  }
  return result;
}

uint64_t sub_19CF02E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v12;

  v8[15] = a8;
  v8[16] = v12;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  v8[17] = *(_QWORD *)(a7 - 8);
  v8[18] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[19] = AssociatedTypeWitness;
  v8[20] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  sub_19CFDFF5C();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v10 = swift_getAssociatedTypeWitness();
  v8[25] = v10;
  v8[26] = *(_QWORD *)(v10 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF02F84()
{
  uint64_t v0;
  _QWORD *v1;

  (*(void (**)(void))(v0 + 88))();
  sub_19CFDFADC();
  swift_beginAccess();
  *(_QWORD *)(v0 + 224) = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v1;
  *v1 = v0;
  v1[1] = sub_19CF03070;
  return sub_19CFDF9EC();
}

uint64_t sub_19CF03070()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF030D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_19CF02A58(0, v4, v5, v6);
      swift_release();
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 144), v1, v3);
    if (swift_weakLoadStrong())
    {
      v11 = *(_QWORD *)(v0 + 136);
      v10 = *(_QWORD *)(v0 + 144);
      v12 = *(_QWORD *)(v0 + 112);
      sub_19CF02768(v10, v7, v8, v9);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      *(_QWORD *)(v0 + 224) = swift_getAssociatedConformanceWitness();
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v13;
      *v13 = v0;
      v13[1] = sub_19CF03070;
      return sub_19CFDF9EC();
    }
    v16 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 200);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF032BC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 32);
  v1(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
  swift_getAssociatedConformanceWitness();
  v2 = sub_19CFE0664();
  v3 = *(_QWORD *)(v0 + 168);
  if (v2)
  {
    v4 = (void *)v2;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 152);
    v4 = (void *)swift_allocError();
    v1(v6, v3, v5);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v7 = v4;
    sub_19CF02A58(v4, v8, v9, v10);

    swift_release();
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF0344C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CF05674(a1, (uint64_t)v9);
  v10 = sub_19CFDFA10();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_19CCFC068((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_19CFDF998();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CFDFA04();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t _AsyncSequenceMultiplexer.makeAsyncIterator()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v4[2];
  v12 = *(_QWORD *)(*v4 + 80);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v12, a3, a4);
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v12, v6, v7);
  sub_19CFDF938();
  swift_retain();
  swift_getTupleTypeMetadata2();
  type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator(0, v12, v8, v9);
  sub_19CDF62F4((void (*)(uint64_t))sub_19CF03FC8, (uint64_t)&v11, v5);
  swift_release();
  return v13;
}

uint64_t sub_19CF0369C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v19 - v11;
  type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator(0, a2, v13, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  swift_allocObject();
  v15 = sub_19CF01780((uint64_t)v12);
  result = sub_19CF01260(v8);
  if ((result & 1) == 0)
  {
    result = sub_19CF01358(v8);
    if ((result & 1) == 0)
    {
      swift_retain();
      sub_19CF022B0();
      type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, a2, v17, v18);
      sub_19CFDF938();
      swift_getTupleTypeMetadata2();
      result = sub_19CFDF908();
    }
  }
  *a5 = v15;
  return result;
}

unint64_t _AsyncSequenceMultiplexer.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[2];

  v5 = *v4;
  v6 = v4[2];
  v10 = *(_QWORD *)(v5 + 80);
  type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(255, v10, a3, a4);
  type metadata accessor for _AsyncSequenceMultiplexer.WeakAsyncIterator(255, v10, v7, v8);
  sub_19CFDF938();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_19CF03DB8((void (*)(uint64_t))sub_19CF03FEC, v6, MEMORY[0x1E0DEA968], (uint64_t)v11);
  swift_release();
  if (v11[1])
    return v11[0];
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0xD000000000000013;
}

void sub_19CF03924(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  void *v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(0, v9, v10, v11);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (void **)((char *)&v24 - v15);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))((char *)&v24 - v15, a1, v12, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    goto LABEL_10;
  if (EnumCaseMultiPayload != 1)
    goto LABEL_8;
  sub_19CFDFF5C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  sub_19CFE0970();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v16, 1, a2) == 1)
    {
LABEL_8:
      v24 = 0;
      v25 = 0xE000000000000000;
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      v24 = 0xD000000000000013;
      v25 = 0x800000019D0765E0;
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      goto LABEL_9;
    }
LABEL_10:
    (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v8, v16, a2);
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    sub_19CFE0670();
    sub_19CFDF698();
    v22 = v24;
    v23 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    goto LABEL_11;
  }
  v19 = *v16;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v24 = 0xD000000000000013;
  v25 = 0x800000019D0765E0;
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v20 = (void *)sub_19CFDEC90();
  v21 = (id)AMSLogableError();

  sub_19CFDF578();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();

LABEL_9:
  v22 = v24;
  v23 = v25;
LABEL_11:
  *a3 = v22;
  a3[1] = v23;
}

uint64_t sub_19CF03D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = _AsyncSequenceMultiplexer.makeAsyncIterator()(a1, a2, a3, a4);
  result = swift_release();
  *a5 = v6;
  return result;
}

unint64_t sub_19CF03D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _AsyncSequenceMultiplexer.debugDescription.getter(a1, a2, a3, a4);
}

void sub_19CF03DB8(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_19CF03E20((os_unfair_lock_t)(a2 + ((*(unsigned int *)(*(_QWORD *)a2 + 48) + 3) & 0x1FFFFFFFCLL)), a2 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a2 + 16), a1, a3, &v4, a4);
}

void sub_19CF03E20(os_unfair_lock_t lock@<X1>, uint64_t a2@<X0>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X5>, _QWORD *a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;

  if (os_unfair_lock_trylock(lock))
  {
    a3(a2);
    if (v6)
    {
      os_unfair_lock_unlock(lock);
      *a5 = v6;
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a6, 0, 1, a4);
      os_unfair_lock_unlock(lock);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
}

uint64_t sub_19CF03EF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF03F18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_19CF03F38@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  return sub_19CF03F70((uint64_t (*)(uint64_t))sub_19CF01260, a1, a2, a3);
}

uint64_t sub_19CF03F54@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  return sub_19CF03F70((uint64_t (*)(uint64_t))sub_19CF01358, a1, a2, a3);
}

uint64_t sub_19CF03F70@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t result;

  v7 = type metadata accessor for _AsyncSequenceMultiplexer.NewAsyncIteratorBuffer(0, *(_QWORD *)(v4 + 16), a2, a3);
  result = a1(v7);
  *a4 = result & 1;
  return result;
}

uint64_t sub_19CF03FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_19CF0369C(a1, *(_QWORD *)(v4 + 16), a2, a3, a4);
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncSequenceMultiplexer.AsyncIterator);
}

void sub_19CF03FEC(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_19CF03924(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_19CF04004()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF04014()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for _AsyncSequenceMultiplexer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncSequenceMultiplexer);
}

uint64_t method lookup function for _AsyncSequenceMultiplexer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _AsyncSequenceMultiplexer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19CF04078()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
  result = sub_19CFDFB18();
  if (v1 <= 0x3F)
  {
    result = sub_19CFDFB48();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _AsyncSequenceMultiplexer.AsyncIterator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_19CF0415C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_19CFDFF5C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB1F50);
    v0 = sub_19CFE0970();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

id *sub_19CF04218(id *__dst, id *__src, uint64_t a3)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;

  v4 = __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = v7 + 1;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  if (v10 + 1 > v7)
    v11 = v10 + 1;
  else
    v11 = *(_QWORD *)(v6 + 64);
  if ((v8 & 0x1000F8) != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    v13 = (char *)*__src;
    *v4 = *__src;
    v4 = (id *)&v13[(unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v14 = *((unsigned __int8 *)__src + v11);
    if (v14 >= 2)
    {
      if (v11 <= 3)
        v15 = v11;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 1)
    {
      v16 = *((unsigned __int8 *)__src + v10);
      if (v16 >= 2)
      {
        if (v10 <= 3)
          v17 = v10;
        else
          v17 = 4;
        __asm { BR              X12 }
      }
      if (v16 == 1)
      {
        v18 = *__src;
        v19 = *__src;
        *v4 = v18;
        v20 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
        {
          memcpy(v4, __src, v9);
        }
        else
        {
          (*(void (**)(id *, id *, uint64_t))(v6 + 16))(v4, __src, v5);
          (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        }
        v20 = 0;
      }
      *((_BYTE *)v4 + v10) = v20;
      *((_BYTE *)v4 + v11) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)v4 + v11) = 0;
    }
  }
  return v4;
}

void sub_19CF04460(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = v5 + 1;
  if (v6 <= 8)
    v6 = 8;
  if (v6 + 1 > v5)
    v5 = v6 + 1;
  v7 = *((unsigned __int8 *)a1 + v5);
  if (v7 >= 2)
  {
    if (v5 <= 3)
      v8 = v5;
    else
      v8 = 4;
    __asm { BR              X14 }
  }
  if (v7 != 1)
    goto LABEL_14;
  v9 = *((unsigned __int8 *)a1 + v6);
  if (v9 >= 2)
  {
    if (v6 <= 3)
      v10 = v6;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {

  }
  else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
  {
LABEL_14:
    (*(void (**)(id *, uint64_t))(v4 + 8))(a1, v3);
  }
}

_QWORD *sub_19CF045F0(_QWORD *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  id v15;
  id v16;
  char v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  if (v9 + 1 > v7)
    v10 = v9 + 1;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = *((unsigned __int8 *)__src + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 1)
  {
    v13 = *((unsigned __int8 *)__src + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v15 = *__src;
      v16 = *__src;
      *__dst = v15;
      v17 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(id *, uint64_t, _QWORD))(v6 + 48))(__src, 1, *(_QWORD *)(a3 + 16)))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(_QWORD *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      v17 = 0;
    }
    *((_BYTE *)__dst + v9) = v17;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, id *, _QWORD))(v6 + 16))(__dst, __src, *(_QWORD *)(a3 + 16));
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

id *sub_19CF04800(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v21;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  if (v9 + 1 > v7)
    v10 = v9 + 1;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = *((unsigned __int8 *)__dst + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 1)
  {
    v13 = *((unsigned __int8 *)__dst + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {

      goto LABEL_26;
    }
    if ((*(unsigned int (**)(id *, uint64_t, _QWORD))(v6 + 48))(__dst, 1, *(_QWORD *)(a3 + 16)))
      goto LABEL_26;
  }
  (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
LABEL_26:
  v15 = *((unsigned __int8 *)__src + v10);
  if (v15 >= 2)
  {
    if (v10 <= 3)
      v16 = v10;
    else
      v16 = 4;
    __asm { BR              X12 }
  }
  if (v15 == 1)
  {
    v17 = *((unsigned __int8 *)__src + v9);
    if (v17 >= 2)
    {
      if (v9 <= 3)
        v18 = v9;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      v19 = *__src;
      v20 = v19;
      *__dst = v19;
      v21 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      v21 = 0;
    }
    *((_BYTE *)__dst + v9) = v21;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

_QWORD *sub_19CF04B7C(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  if (v9 + 1 > v7)
    v10 = v9 + 1;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = __src[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 1)
  {
    v13 = __src[v9];
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      *__dst = *(_QWORD *)__src;
      v15 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, _QWORD))(v6 + 48))(__src, 1, *(_QWORD *)(a3 + 16)))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      v15 = 0;
    }
    *((_BYTE *)__dst + v9) = v15;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, unsigned __int8 *, _QWORD))(v6 + 32))(__dst, __src, *(_QWORD *)(a3 + 16));
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

id *sub_19CF04D84(id *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (__dst == (id *)__src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  if (v9 + 1 > v7)
    v10 = v9 + 1;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = *((unsigned __int8 *)__dst + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 1)
  {
    v13 = *((unsigned __int8 *)__dst + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {

      goto LABEL_26;
    }
    if ((*(unsigned int (**)(id *, uint64_t, _QWORD))(v6 + 48))(__dst, 1, *(_QWORD *)(a3 + 16)))
      goto LABEL_26;
  }
  (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
LABEL_26:
  v15 = __src[v10];
  if (v15 >= 2)
  {
    if (v10 <= 3)
      v16 = v10;
    else
      v16 = 4;
    __asm { BR              X12 }
  }
  if (v15 == 1)
  {
    v17 = __src[v9];
    if (v17 >= 2)
    {
      if (v9 <= 3)
        v18 = v9;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      *__dst = *(id *)__src;
      v19 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
      {
        memcpy(__dst, __src, v8);
      }
      else
      {
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
      }
      v19 = 0;
    }
    *((_BYTE *)__dst + v9) = v19;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

uint64_t sub_19CF050F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (*(_DWORD *)(v3 + 84))
    v5 = *(_QWORD *)(v3 + 64);
  else
    v5 = v4 + 1;
  if (v5 <= 8)
    v5 = 8;
  if (v5 + 1 > v4)
    v4 = v5 + 1;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_26;
  v6 = v4 + 1;
  v7 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v10 < 2)
    {
LABEL_26:
      v12 = *(unsigned __int8 *)(a1 + v4);
      if (v12 >= 3)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_26;
LABEL_19:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if (!(_DWORD)v6)
    return (v11 + 254);
  if (v6 > 3)
    LODWORD(v6) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF051D4 + 4 * byte_19D061360[(v6 - 1)]))();
}

void sub_19CF05220(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = v6 + 1;
  if (v7 <= 8)
    v7 = 8;
  if (v7 + 1 > v6)
    v8 = v7 + 1;
  else
    v8 = v6;
  v9 = v8 + 1;
  if (a3 < 0xFE)
  {
    v10 = 0u;
  }
  else if (v9 <= 3)
  {
    v12 = ((a3 + ~(-1 << (8 * v9)) - 253) >> (8 * v9)) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v11 = a2 - 254;
  if (v9 < 4)
  {
    if ((_DWORD)v8 != -1)
    {
      v13 = v11 & ~(-1 << (8 * v9));
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *a1 = v13;
        *((_BYTE *)a1 + 2) = BYTE2(v13);
      }
      else if ((_DWORD)v9 == 2)
      {
        *a1 = v13;
      }
      else
      {
        *(_BYTE *)a1 = v13;
      }
    }
  }
  else
  {
    bzero(a1, v8 + 1);
    *(_DWORD *)a1 = v11;
  }
  __asm { BR              X10 }
}

uint64_t sub_19CF053E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84))
    v4 = *(_QWORD *)(v2 + 64);
  else
    v4 = v3 + 1;
  if (v4 <= 8)
    v4 = 8;
  if (v4 + 1 > v3)
    v3 = v4 + 1;
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v5 = v3;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF05440 + 4 * byte_19D06136E[v5]))();
}

_BYTE *sub_19CF05488(_BYTE *result, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  size_t v7;
  char v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = v5 + 1;
  if (v6 <= 8)
    v6 = 8;
  if (v6 + 1 > v5)
    v7 = v6 + 1;
  else
    v7 = v5;
  if (a2 > 1)
  {
    if (v7 <= 3)
      v8 = ((a2 - 2) >> (8 * v7)) + 2;
    else
      v8 = 2;
    result[v7] = v8;
    if (v7 >= 4)
      v9 = 4;
    else
      v9 = v7;
    bzero(result, v7);
    __asm { BR              X10 }
  }
  result[v7] = a2;
  return result;
}

uint64_t sub_19CF05574(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF01DE0(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CF0557C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CF055A0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF055D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[7];
  v10 = v1[8];
  v9 = v1[9];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_19CCBE344;
  return sub_19CF02E40(a1, v6, v7, v8, v10, v9, v4, v5);
}

uint64_t sub_19CF05674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF056BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF056E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_19CF0294C(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

BOOL sub_19CF056F8()
{
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  if (Strong)
    swift_release();
  return Strong == 0;
}

uint64_t sub_19CF05734@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19CF02C3C(*(void **)(v2 + 24), *(_QWORD *)(v2 + 16), a1, a2);
}

uint64_t destroy for UserPreferenceIntentReplayDispatcherConfigurationProvider()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserPreferenceIntentReplayDispatcherConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UserPreferenceIntentReplayDispatcherConfigurationProvider()
{
  return &type metadata for UserPreferenceIntentReplayDispatcherConfigurationProvider;
}

uint64_t sub_19CF05890()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_19CF05898()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_19CF058A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_19CF058A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF058B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dictionary<>.init(_partiallyFrom:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _BYTE v41[40];
  uint64_t v42;

  v35 = a3;
  v5 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v27 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_19CFDF38C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v14, (uint64_t)v41);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDD5ED8();
  sub_19CFE09E8();
  v37 = a2;
  v32 = v8;
  v28 = a1;
  v33 = v13;
  v34 = v9;
  v15 = sub_19CFE04C0();
  v30 = sub_19CFDF464();
  sub_19CFDF404();
  v29 = v15;
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (unsigned __int8 *)(v29 + 48);
    v31 = v10;
    do
    {
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      v20 = *v17;
      if (v20 == 1)
      {
        swift_bridgeObjectRetain_n();
        v36 = v18;
        v21 = v19;
      }
      else
      {
        v38 = *((_QWORD *)v17 - 2);
        v36 = sub_19CFE0598();
        v21 = v22;
      }
      v23 = v32;
      v24 = v37;
      v38 = v18;
      v39 = v19;
      v40 = v20;
      sub_19CFE04B4();
      sub_19CDD5F1C(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
      v38 = v36;
      v39 = v21;
      sub_19CFDF4AC();
      v10 = v31;
      v17 += 24;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v33, v34);
  sub_19CCECFE4((uint64_t)v41, qword_1EE43A238);
  v25 = v42;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v25;
}

uint64_t sub_19CF05CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char v12;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  char v33;
  _QWORD v34[4];
  _QWORD *v35;
  _OWORD v36[2];

  v6 = sub_19CFE0310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CF20948(a1, a2, (uint64_t)v10);
  if (*(_QWORD *)(a3 + 16) && (v11 = sub_19CD2258C((uint64_t)v10), (v12 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (*((_QWORD *)&v32 + 1))
  {
    sub_19CD433C0(&v31, v36);
    sub_19CD436B0((uint64_t)v36, (uint64_t)&v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B00);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
      return v28;
    }
    if (qword_1EE43BE78 != -1)
      swift_once();
    v14 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D052350;
    v16 = v14;
    v35 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
    v17._object = (void *)0x800000019D070120;
    v17._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B08);
    v34[0] = a1;
    v34[1] = a2;
    sub_19CCF8C5C((uint64_t)v34, (uint64_t)v30, &qword_1ECEB3370);
    v28 = 0u;
    v29 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v30, (uint64_t)&v28);
    v33 = 0;
    v31 = v28;
    v32 = v29;
    v18 = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[5 * v20];
    v22 = v31;
    v23 = v32;
    *((_BYTE *)v21 + 64) = v33;
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    v35 = v18;
    sub_19CCECFE4((uint64_t)v34, &qword_1ECEB3370);
    v24._countAndFlagsBits = 96;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v15 + 32) = v35;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v25 = swift_allocObject();
    v26 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v29 + 1) = v26;
    *(_QWORD *)&v28 = 0xD000000000000027;
    *((_QWORD *)&v28 + 1) = 0x800000019D06F490;
    v31 = 0u;
    v32 = 0u;
    sub_19CD40658((uint64_t)&v28, (uint64_t)&v31);
    *(_BYTE *)(v25 + 64) = 0;
    v27 = v32;
    *(_OWORD *)(v25 + 32) = v31;
    *(_OWORD *)(v25 + 48) = v27;
    *(_QWORD *)(v15 + 40) = v25;
    *(_QWORD *)&v31 = v16;
    LOBYTE(v28) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v28);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v31, &qword_1ECEB3370);
  }
  return 0;
}

double sub_19CF06068@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  double result;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[32];
  _QWORD v33[4];
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];

  v8 = sub_19CFE0310();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CF20954(a1, a2, (uint64_t)v12);
  if (*(_QWORD *)(a3 + 16) && (v13 = sub_19CD2258C((uint64_t)v12), (v14 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v13, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (*((_QWORD *)&v36 + 1))
  {
    sub_19CD433C0(&v35, v38);
    sub_19CD436B0((uint64_t)v38, (uint64_t)&v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436C30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
      sub_19CCD14C4(&v35, a4);
      return result;
    }
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    sub_19CCECFE4((uint64_t)&v35, qword_1EE43A238);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v16 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D052350;
    v18 = v16;
    v34 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
    v19._object = (void *)0x800000019D070120;
    v19._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    v33[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B10);
    v33[0] = a1;
    v33[1] = a2;
    sub_19CCF8C5C((uint64_t)v33, (uint64_t)v32, &qword_1ECEB3370);
    v30 = 0u;
    v31 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v32, (uint64_t)&v30);
    LOBYTE(v37) = 0;
    v35 = v30;
    v36 = v31;
    v20 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
    v22 = v20[2];
    v21 = v20[3];
    if (v22 >= v21 >> 1)
      v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
    v20[2] = v22 + 1;
    v23 = &v20[5 * v22];
    v24 = v35;
    v25 = v36;
    *((_BYTE *)v23 + 64) = v37;
    *((_OWORD *)v23 + 2) = v24;
    *((_OWORD *)v23 + 3) = v25;
    v34 = v20;
    sub_19CCECFE4((uint64_t)v33, &qword_1ECEB3370);
    v26._countAndFlagsBits = 96;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    *(_QWORD *)(v17 + 32) = v34;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v27 = swift_allocObject();
    v28 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v27 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v31 + 1) = v28;
    *(_QWORD *)&v30 = 0xD000000000000027;
    *((_QWORD *)&v30 + 1) = 0x800000019D06F490;
    v35 = 0u;
    v36 = 0u;
    sub_19CD40658((uint64_t)&v30, (uint64_t)&v35);
    *(_BYTE *)(v27 + 64) = 0;
    v29 = v36;
    *(_OWORD *)(v27 + 32) = v35;
    *(_OWORD *)(v27 + 48) = v29;
    *(_QWORD *)(v17 + 40) = v27;
    *(_QWORD *)&v35 = v18;
    LOBYTE(v30) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v30);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v35, &qword_1ECEB3370);
  }
  *(_QWORD *)(a4 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_19CF06418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char v12;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  char v33;
  _QWORD v34[4];
  _QWORD *v35;
  _OWORD v36[2];

  v6 = sub_19CFE0310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CF20960(a1, a2, (uint64_t)v10);
  if (*(_QWORD *)(a3 + 16) && (v11 = sub_19CD2258C((uint64_t)v10), (v12 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (*((_QWORD *)&v32 + 1))
  {
    sub_19CD433C0(&v31, v36);
    sub_19CD436B0((uint64_t)v36, (uint64_t)&v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441AF0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
      return v28;
    }
    if (qword_1EE43BE78 != -1)
      swift_once();
    v14 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D052350;
    v16 = v14;
    v35 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
    v17._object = (void *)0x800000019D070120;
    v17._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441AF8);
    v34[0] = a1;
    v34[1] = a2;
    sub_19CCF8C5C((uint64_t)v34, (uint64_t)v30, &qword_1ECEB3370);
    v28 = 0u;
    v29 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v30, (uint64_t)&v28);
    v33 = 0;
    v31 = v28;
    v32 = v29;
    v18 = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[5 * v20];
    v22 = v31;
    v23 = v32;
    *((_BYTE *)v21 + 64) = v33;
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    v35 = v18;
    sub_19CCECFE4((uint64_t)v34, &qword_1ECEB3370);
    v24._countAndFlagsBits = 96;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v15 + 32) = v35;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v25 = swift_allocObject();
    v26 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v29 + 1) = v26;
    *(_QWORD *)&v28 = 0xD000000000000027;
    *((_QWORD *)&v28 + 1) = 0x800000019D06F490;
    v31 = 0u;
    v32 = 0u;
    sub_19CD40658((uint64_t)&v28, (uint64_t)&v31);
    *(_BYTE *)(v25 + 64) = 0;
    v27 = v32;
    *(_OWORD *)(v25 + 32) = v31;
    *(_OWORD *)(v25 + 48) = v27;
    *(_QWORD *)(v15 + 40) = v25;
    *(_QWORD *)&v31 = v16;
    LOBYTE(v28) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v28);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v31, &qword_1ECEB3370);
  }
  return 0;
}

uint64_t Bool.init(_partiallyFrom:)(_QWORD *a1)
{
  char v2;
  _QWORD v4[3];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  __swift_project_boxed_opaque_existential_1(v4, v5);
  if ((sub_19CFE03E8() & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v2 = sub_19CFE06B8();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v2 & 1;
}

uint64_t sub_19CF0695C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Bool.init(_partiallyFrom:)(a1);
  *a2 = result & 1;
  return result;
}

uint64_t Array<A>.init(_partiallyFrom:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  _BYTE v9[40];
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1, a2);
  v10 = sub_19CFDF398();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v3, (uint64_t)v9);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09C4();
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_19CFE05BC();
  if ((v4 & 1) == 0)
  {
    sub_19CFDF938();
    sub_19CFDF89C();
  }
  __swift_project_boxed_opaque_existential_1(v7, v8);
  while ((sub_19CFE05D4() & 1) == 0)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_19CFE05C8();
    sub_19CFDF938();
    sub_19CFDF908();
    __swift_project_boxed_opaque_existential_1(v7, v8);
  }
  sub_19CCECFE4((uint64_t)v9, qword_1EE43A238);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  v5 = v10;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v5;
}

unint64_t sub_19CF06D34()
{
  unint64_t result;

  result = qword_1EE441AE0;
  if (!qword_1EE441AE0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for NilState, &type metadata for NilState);
    atomic_store(result, (unint64_t *)&qword_1EE441AE0);
  }
  return result;
}

uint64_t sub_19CF06D78()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CF06E0C()
{
  return sub_19CF06D78();
}

uint64_t sub_19CF06E14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = Array<A>.init(_partiallyFrom:)(a1, *(_QWORD *)(a2 + 16));
  *a3 = result;
  return result;
}

uint64_t sub_19CF06E40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = Dictionary<>.init(_partiallyFrom:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
  *a4 = result;
  return result;
}

uint64_t dispatch thunk of _DiscardOnErrorDecodable.init(_partiallyFrom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19CF06E74(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CCE958C();
  sub_19CFE0A24();
  v10[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B70);
  sub_19CCE9518((unint64_t *)&qword_1EE440150, (uint64_t (*)(void))sub_19CE74DC0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_19CF06F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1937335659 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19CF0701C()
{
  sub_19CCE958C();
  return sub_19CFE0A48();
}

uint64_t sub_19CF07044()
{
  sub_19CCE958C();
  return sub_19CFE0A54();
}

uint64_t sub_19CF0706C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CF06E74(a1, *v1);
}

uint64_t sub_19CF07084()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for KeyFileContents()
{
  return &type metadata for KeyFileContents;
}

uint64_t storeEnumTagSinglePayload for KeyFileContents.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF070E4 + 4 * byte_19D061620[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF07104 + 4 * byte_19D061625[v4]))();
}

_BYTE *sub_19CF070E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF07104(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF0710C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF07114(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF0711C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF07124(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_19CF07134()
{
  unint64_t result;

  result = qword_1EE441B20;
  if (!qword_1EE441B20)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D061758, &type metadata for KeyFileContents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE441B20);
  }
  return result;
}

uint64_t StateStore.performTransaction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 64))(1, a1, a2, a4, a3);
}

uint64_t StateStore.removeState(at:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *a1;
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(a3 + 48))(&v4, 0, a2);
}

uint64_t dispatch thunk of StateStore.isConcurrent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StateStore.onChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StateStore.currentState<A>(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of StateStore.updateState(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of StateStore.removeState(at:recursively:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StateStore.removeAllState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of StateStore.performTransaction<A>(postingChanges:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

ValueMetadata *type metadata accessor for ClientEventIdFieldProvider()
{
  return &type metadata for ClientEventIdFieldProvider;
}

ValueMetadata *type metadata accessor for XPSamplingFieldsProvider()
{
  return &type metadata for XPSamplingFieldsProvider;
}

uint64_t sub_19CF07244()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JSBytesDeallocatorHolder()
{
  return objc_opt_self();
}

uint64_t sub_19CF07288(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  if (a2)
  {
    v2 = result;
    v3 = *(void (**)(uint64_t))(a2 + 16);
    swift_retain();
    v3(v2);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_19CF072DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v8, (uint64_t)v7, a2);
  v9 = (char *)sub_19CF073A0 + 4 * byte_19D06187C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_19CF073A0()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  *v0 = *v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(v1);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v0, 0, 1, v3);
}

void sub_19CF0745C(uint64_t a1)
{
  swift_beginAccess();
  __asm { BR              X10 }
}

id sub_19CF074B0(void *a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1;
  *(_BYTE *)(v1 + 8) = 1;
  return a1;
}

uint64_t sub_19CF074F8(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3[2];

  a2(v3);
  sub_19CD1946C(v3[0], v3[1]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF0757C(uint64_t a1, void (*a2)(uint64_t, double))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = sub_19CFDE90C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v7);
  sub_19CFBAFC0((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t sub_19CF07644(uint64_t a1, void (*a2)(_QWORD *__return_ptr))
{
  _QWORD v3[5];

  a2(v3);
  sub_19CFBF890((uint64_t)v3);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
}

void sub_19CF076BC(uint64_t *a1, uint64_t a2)
{
  sub_19CF07724(a1, a2, &qword_1EE441B38, (uint64_t)sub_19CF0BA04, (void (*)(void))sub_19CEC7490, &qword_1EE441B40);
}

void sub_19CF076F0(uint64_t *a1, uint64_t a2)
{
  sub_19CF07724(a1, a2, &qword_1EE441B48, (uint64_t)sub_19CF0BAA8, (void (*)(void))sub_19CEC7490, &qword_1EE441B50);
}

void sub_19CF07724(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(void), uint64_t *a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;

  v29 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (id *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v27 - v17;
  v19 = swift_beginAccess();
  v20 = *a1;
  if (!*a1)
    goto LABEL_6;
  v27 = a2;
  v28 = a3;
  v21 = (os_unfair_lock_s *)(*(_QWORD *)(v20 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v21);
  a5();
  if (v6)
  {
    os_unfair_lock_unlock(v21);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v21);
    v22 = v29;
    v23 = __swift_instantiateConcreteTypeFromMangledName(v29);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v18, 1, v23);
    v25 = v28;
    if (v24 != 1)
    {
      sub_19CCF8C5C((uint64_t)v18, (uint64_t)v14, v28);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_release();

        v19 = sub_19CCECFE4((uint64_t)v18, v25);
        a2 = v27;
LABEL_6:
        v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 88))(v19);
        swift_beginAccess();
        *a1 = v26;
        swift_retain();
        swift_release();
        return;
      }
      sub_19CCECFE4((uint64_t)v14, v22);
    }
    sub_19CCECFE4((uint64_t)v18, v25);
  }
}

void sub_19CF0791C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 v10;

  v5 = swift_beginAccess();
  if (!*(_QWORD *)a1)
  {
LABEL_7:
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 88))(v5);
    swift_beginAccess();
    *(_QWORD *)a1 = v8;
    swift_retain();
    swift_release();
    return;
  }
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_19CEC7490(v7, (uint64_t (*)(void))sub_19CF0B9A4);
  if (v2)
  {
    os_unfair_lock_unlock(v6);
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(v6);
  if (v10 != 255)
  {
    if ((v10 & 1) == 0)
    {
      sub_19CF0B9BC(v9, v10);
      return;
    }
    swift_release();
    sub_19CF0B9BC(v9, v10);
    goto LABEL_7;
  }
}

uint64_t JetpackLoader.jetpackBundlePipeline.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t JetpackLoader.sourceDataPipeline.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t JetpackLoader.sourcePipeline.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t JetpackLoader.init(jetpackURL:keyURL:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  void *v46;
  void *v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v47 = a7;
  v48 = a8;
  v45 = a9;
  v46 = a6;
  v49 = a4;
  v50 = a3;
  v12 = sub_19CFDEDE0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v44 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v41 - v18;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v41 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *a5;
  v51 = a2;
  sub_19CCF8C5C(a2, (uint64_t)v27, (uint64_t *)&unk_1ECEB3030);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v27, 1, v12) == 1)
  {
    v28 = 0;
    v29 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v27, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440ED0);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F3C8);
    v31 = *(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80);
    v42 = a1;
    v32 = (v31 + 32) & ~v31;
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_19D0522A0;
    v34 = (_QWORD *)(v33 + v32);
    v35 = (char *)v34 + *(int *)(v30 + 48);
    *v34 = 0;
    v29 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v29(v35, v23, v12);
    v28 = sub_19CE1BF90(v33);
    swift_setDeallocating();
    a1 = v42;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
  }
  v29(v23, a1, v12);
  v36 = v50;
  v29(v19, v50, v12);
  v37 = v44;
  v38 = v49;
  v29(v44, v49, v12);
  v52 = v43;
  JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)((uint64_t)v23, v28, v19, v37, &v52, v46, v47, v48, v45);
  v39 = *(void (**)(char *, uint64_t))(v13 + 8);
  v39(v38, v12);
  v39(v36, v12);
  sub_19CCECFE4(v51, (uint64_t *)&unk_1ECEB3030);
  return ((uint64_t (*)(char *, uint64_t))v39)(a1, v12);
}

uint64_t JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, double);
  id v48;
  id v49;
  void (*v50)(char *, char *, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  id v84;
  char *v85;
  char *v86;
  uint64_t v87;

  v84 = a8;
  v85 = a4;
  v72 = a6;
  v86 = a3;
  v82 = a9;
  v83 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v12, v13);
  v81 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_19CFDEDE0();
  MEMORY[0x1E0C80A78](v19, v20);
  v80 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v23);
  v79 = (char *)&v70 - v24;
  MEMORY[0x1E0C80A78](v25, v26);
  v78 = (char *)&v70 - v27;
  MEMORY[0x1E0C80A78](v28, v29);
  v77 = (char *)&v70 - v30;
  MEMORY[0x1E0C80A78](v31, v32);
  v76 = (char *)&v70 - v33;
  MEMORY[0x1E0C80A78](v34, v35);
  v37 = (char *)&v70 - v36;
  v40 = MEMORY[0x1E0C80A78](v38, v39);
  v42 = (char *)&v70 - v41;
  v43 = *a5;
  v44 = a7;
  v46 = v45;
  v47 = *(void (**)(char *, uint64_t, uint64_t, double))(v45 + 16);
  v47((char *)&v70 - v41, a1, v19, v40);
  if (v44)
  {
    v48 = v44;
    swift_unknownObjectRelease();
    v75 = *(void (**)(char *, uint64_t))(v46 + 8);
    v75(v42, v19);
    v74 = v48;
  }
  else
  {
    v87 = v43;
    v49 = sub_19CEADB4C((uint64_t)v42, &v87, (uint64_t)v84);
    v74 = 0;
    v48 = v49;
    v75 = *(void (**)(char *, uint64_t))(v46 + 8);
    v75(v42, v19);
    swift_unknownObjectRelease();
  }
  ((void (*)(char *, uint64_t, uint64_t))v47)(v37, a1, v19);
  v73 = a1;
  v71 = v46;
  v50 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v50(v18, v37, v19);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v51 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v52 = swift_allocObject();
  *(_DWORD *)(v52 + 16) = 0;
  v51[2] = v52;
  sub_19CCC290C((uint64_t)v18, (uint64_t)v51 + *(_QWORD *)(*v51 + 96), &qword_1ECEB2418);
  v53 = v85;
  ((void (*)(char *, char *, uint64_t))v47)(v37, v85, v19);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v54 = v72;
  v70 = v54;
  v55 = v48;
  v72 = v55;
  v56 = sub_19CD51798(v55);
  type metadata accessor for RemoteJetpackFetcher();
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v54;
  *(_QWORD *)(v57 + 24) = v55;
  *(_QWORD *)(v57 + 32) = 0;
  *(_QWORD *)(v57 + 40) = 0;
  *(_QWORD *)(v57 + 48) = 4;
  *(_BYTE *)(v57 + 56) = 1;
  *(_QWORD *)(v57 + 64) = v56;
  v50((char *)(v57 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL), v37, v19);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = sub_19CF0ADD0;
  *(_QWORD *)(v58 + 24) = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC48);
  v60 = (_QWORD *)swift_allocObject();
  v60[2] = v59;
  v60[3] = sub_19CF0ADFC;
  v60[4] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCB8);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v60;
  ((void (*)(char *, char *, uint64_t))v47)(v37, v86, v19);
  v62 = v76;
  ((void (*)(char *, char *, uint64_t))v47)(v76, v53, v19);
  v63 = v77;
  ((void (*)(char *, char *, uint64_t))v47)(v77, v37, v19);
  v64 = v78;
  ((void (*)(char *, char *, uint64_t))v47)(v78, v62, v19);
  v87 = v61;
  v65 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v81, 1, 1, v19);
  v66 = (uint64_t)v79;
  ((void (*)(char *, char *, uint64_t))v47)(v79, v63, v19);
  v67 = (uint64_t)v80;
  ((void (*)(char *, char *, uint64_t))v47)(v80, v64, v19);
  swift_retain();
  sub_19CF088A4(&v87, v65, v83, v66, v67, 0, v82);
  v68 = v75;
  v75(v64, v19);
  v68(v63, v19);
  v68(v62, v19);
  v68(v37, v19);
  swift_release();

  v68(v85, v19);
  v68(v86, v19);
  return ((uint64_t (*)(uint64_t, uint64_t))v68)(v73, v19);
}

uint64_t JetpackLoader.init(filePipeline:keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, double);
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a3;
  v36 = a4;
  v37 = a5;
  v38 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDEDE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v34 - v18;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v34 - v22;
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)&v34 - v27;
  v29 = *a1;
  v30 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v30((char *)&v34 - v27, a3, v11, v26);
  v31 = v36;
  ((void (*)(char *, char *, uint64_t))v30)(v23, v36, v11);
  v39 = v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  ((void (*)(char *, char *, uint64_t))v30)(v19, v28, v11);
  ((void (*)(char *, char *, uint64_t))v30)(v15, v23, v11);
  sub_19CF088A4(&v39, (uint64_t)v10, v38, (uint64_t)v19, (uint64_t)v15, 0, v37);
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v23, v11);
  v32(v28, v11);
  v32(v31, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v35, v11);
}

uint64_t JetpackLoader.init(jetpackURL:keyURLs:bundleOutputURL:artifactStoreURL:bag:urlSession:urlEncoder:process:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  id v35;
  void (*v36)(char *, char *, uint64_t);
  _QWORD *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  int v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  id v65;
  char *v66;
  uint64_t v67;

  v65 = a8;
  v66 = a4;
  v56 = a6;
  v63 = a2;
  v64 = a3;
  v62 = a9;
  v61 = a10;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v13, v14);
  v60 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_19CFDEDE0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  v59 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v54 - v26;
  v30 = MEMORY[0x1E0C80A78](v28, v29);
  v32 = (char *)&v54 - v31;
  v33 = *a5;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16);
  v34((char *)&v54 - v31, a1, v20, v30);
  if (a7)
  {
    v35 = a7;
    swift_unknownObjectRelease();
    v58 = *(void (**)(char *, uint64_t))(v21 + 8);
    v58(v32, v20);
    v57 = v35;
  }
  else
  {
    v67 = v33;
    v57 = 0;
    v35 = sub_19CEADB4C((uint64_t)v32, &v67, (uint64_t)v65);
    v58 = *(void (**)(char *, uint64_t))(v21 + 8);
    v58(v32, v20);
    swift_unknownObjectRelease();
  }
  ((void (*)(char *, uint64_t, uint64_t))v34)(v27, a1, v20);
  v55 = a1;
  v36 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v36(v19, v27, v20);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v37 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  v37[2] = v38;
  sub_19CCC290C((uint64_t)v19, (uint64_t)v37 + *(_QWORD *)(*v37 + 96), &qword_1ECEB2418);
  ((void (*)(char *, char *, uint64_t))v34)(v27, v66, v20);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v39 = v56;
  v40 = v35;
  v56 = v40;
  v41 = sub_19CD51798(v40);
  type metadata accessor for RemoteJetpackFetcher();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v39;
  *(_QWORD *)(v42 + 24) = v40;
  *(_QWORD *)(v42 + 32) = 0;
  *(_QWORD *)(v42 + 40) = 0;
  *(_QWORD *)(v42 + 48) = 4;
  *(_BYTE *)(v42 + 56) = 1;
  *(_QWORD *)(v42 + 64) = v41;
  v36((char *)(v42 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL), v27, v20);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_19CF0ADD0;
  *(_QWORD *)(v43 + 24) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC48);
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v44;
  v45[3] = sub_19CF0BC14;
  v45[4] = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCB8);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v45;
  v67 = v46;
  v47 = (uint64_t)v60;
  v48 = v55;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v60, v55, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
  v49 = v64;
  ((void (*)(char *, char *, uint64_t))v34)(v27, v64, v20);
  v50 = (uint64_t)v59;
  v51 = v66;
  ((void (*)(char *, char *, uint64_t))v34)(v59, v66, v20);
  swift_retain();
  sub_19CF088A4(&v67, v47, v63, (uint64_t)v27, v50, v61 & 1, v62);
  swift_release();

  v52 = v58;
  v58(v51, v20);
  v52(v49, v20);
  return ((uint64_t (*)(uint64_t, uint64_t))v52)(v48, v20);
}

uint64_t sub_19CF088A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[2];
  uint64_t v107;
  _BYTE v108[48];

  v92 = a6;
  v105 = a4;
  v91 = a3;
  v93 = a2;
  v95 = a7;
  v11 = sub_19CFDF5CC();
  v102 = *(_QWORD *)(v11 - 8);
  v103 = *(_QWORD *)(v102 + 64);
  v104 = v11;
  MEMORY[0x1E0C80A78](v11, v12);
  v101 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v100 = (char *)&v89 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
  v96 = *(_QWORD *)(v17 - 8);
  v97 = v18;
  MEMORY[0x1E0C80A78](v17, v19);
  v94 = (uint64_t)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_19CFDF2E4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23);
  v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_19CFDEDE0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  v90 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30, v31);
  v33 = (char *)&v89 - v32;
  v89 = *a1;
  v34 = type metadata accessor for JetpackLoader();
  sub_19CCF8C5C(a2, (uint64_t)a7 + *(int *)(v34 + 28), (uint64_t *)&unk_1ECEB3030);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v98 = v27;
  v99 = a5;
  v35(v33, a5, v26);
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_19CFE00C4();
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E0DEF540], v21);
  v36 = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  sub_19CD23A14((uint64_t)v108, (uint64_t)v106);
  type metadata accessor for PersistentPipelineBackoff();
  v37 = swift_allocObject();
  v38 = v106[1];
  *(_OWORD *)(v37 + 16) = v106[0];
  *(_OWORD *)(v37 + 32) = v38;
  *(_QWORD *)(v37 + 48) = v107;
  *(_QWORD *)(v37 + 56) = sub_19CDEB7C8;
  *(_QWORD *)(v37 + 64) = 0;
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v37;
  v39[3] = &off_1E3DD44E0;
  v39[4] = v36;
  sub_19CD20334((uint64_t)v108);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC90);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v89;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC48);
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = v40;
  v41[3] = sub_19CF0B5D0;
  v41[4] = v39;
  v35(v33, v105, v26);
  v42 = v90;
  v35(v90, a5, v26);
  type metadata accessor for UnpackJetpackPhase();
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v91;
  v44 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v44(v43 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_bundleOutputURL, v33, v26);
  v44(v43 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_artifactStoreURL, v42, v26);
  *(_BYTE *)(v43 + OBJC_IVAR____TtC9JetEngine18UnpackJetpackPhase_verifySignature) = v92;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = sub_19CF0B5E0;
  *(_QWORD *)(v45 + 24) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCB8);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC38);
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = v46;
  v47[3] = sub_19CF0B5E8;
  v47[4] = v45;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = 0;
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v49;
  *(_QWORD *)(v50 + 24) = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCA8);
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC60);
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v51;
  v52[3] = sub_19CF0B640;
  v52[4] = v50;
  v53 = v93;
  v54 = v94;
  sub_19CCF8C5C(v93, v94, (uint64_t *)&unk_1ECEB3030);
  v55 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  v56 = swift_allocObject();
  sub_19CCC290C(v54, v56 + v55, (uint64_t *)&unk_1ECEB3030);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCD0);
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v52;
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = v57;
  v58[3] = sub_19CF0B744;
  v58[4] = v56;
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = v58;
  v60 = v95;
  *v95 = v59;
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_19D05F750;
  *(_QWORD *)(v61 + 32) = 0;
  *(_QWORD *)(v61 + 40) = 0;
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = sub_19CEB1370;
  *(_QWORD *)(v62 + 24) = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCA0);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC58);
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v63;
  v64[3] = sub_19CF0B7B8;
  v64[4] = v62;
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = sub_19CFD23AC;
  *(_QWORD *)(v65 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCC8);
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC40);
  v67 = (_QWORD *)swift_allocObject();
  v67[2] = v66;
  v67[3] = sub_19CF0B7C0;
  v67[4] = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCB0);
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = v67;
  v60[1] = v68;
  v69 = v60;
  swift_retain();
  swift_retain();
  v70 = v100;
  sub_19CFDF5B4();
  v72 = v101;
  v71 = v102;
  v73 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v101, v70, v104);
  v74 = v71;
  v75 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  v76 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v76 + v75, v72, v73);
  v77 = swift_allocObject();
  *(_QWORD *)(v77 + 16) = sub_19CEADEA8;
  *(_QWORD *)(v77 + 24) = v76;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v73);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC98);
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = v68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC50);
  v79 = (_QWORD *)swift_allocObject();
  v79[2] = v78;
  v79[3] = sub_19CEDF554;
  v79[4] = v77;
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = sub_19CEADF4C;
  *(_QWORD *)(v80 + 24) = 0;
  v81 = swift_allocObject();
  *(_QWORD *)(v81 + 16) = sub_19CEADF50;
  *(_QWORD *)(v81 + 24) = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCC0);
  v82 = swift_allocObject();
  *(_QWORD *)(v82 + 16) = v79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC70);
  v83 = (_QWORD *)swift_allocObject();
  v83[2] = v82;
  v83[3] = sub_19CEADF58;
  v83[4] = v81;
  v84 = swift_allocObject();
  *(_QWORD *)(v84 + 16) = sub_19CF09DBC;
  *(_QWORD *)(v84 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCE0);
  v85 = swift_allocObject();
  *(_QWORD *)(v85 + 16) = v83;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC68);
  v86 = (_QWORD *)swift_allocObject();
  v86[2] = v85;
  v86[3] = sub_19CF0B7D4;
  v86[4] = v84;
  v87 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  swift_retain();
  v87(v99, v26);
  v87(v105, v26);
  sub_19CCECFE4(v53, (uint64_t *)&unk_1ECEB3030);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCD8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v86;
  v69[2] = result;
  return result;
}

uint64_t JetpackLoader.init(fileURL:keyURLs:bundleOutputURL:artifactStoreURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, double);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v52 = a4;
  v53 = a5;
  v54 = a2;
  v55 = a3;
  v50 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v51 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDEDE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v49 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v48 = (char *)&v47 - v19;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v47 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v47 - v26;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (char *)&v47 - v30;
  v34 = MEMORY[0x1E0C80A78](v32, v33);
  v36 = (char *)&v47 - v35;
  v37 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v37((char *)&v47 - v35, a1, v13, v34);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v36, v13);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v38 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  v38[2] = v39;
  sub_19CCC290C((uint64_t)v12, (uint64_t)v38 + *(_QWORD *)(*v38 + 96), &qword_1ECEB2418);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v38;
  ((void (*)(char *, char *, uint64_t))v37)(v36, v55, v13);
  v47 = v31;
  v41 = v52;
  ((void (*)(char *, char *, uint64_t))v37)(v31, v52, v13);
  ((void (*)(char *, char *, uint64_t))v37)(v27, v36, v13);
  ((void (*)(char *, char *, uint64_t))v37)(v23, v31, v13);
  v56 = v40;
  v42 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v51, 1, 1, v13);
  v43 = (uint64_t)v48;
  ((void (*)(char *, char *, uint64_t))v37)(v48, v27, v13);
  v44 = (uint64_t)v49;
  ((void (*)(char *, char *, uint64_t))v37)(v49, v23, v13);
  sub_19CF088A4(&v56, v42, v54, v43, v44, 0, v53);
  v45 = *(void (**)(char *, uint64_t))(v14 + 8);
  v45(v23, v13);
  v45(v27, v13);
  v45(v47, v13);
  v45(v36, v13);
  v45(v41, v13);
  v45(v55, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v45)(v50, v13);
}

uint64_t JetpackLoader.init(fileURL:keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, double);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v47 = a5;
  v44 = a3;
  v45 = a6;
  v46 = a2;
  v42 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v8, v9);
  v43 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_19CFDEDE0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v41 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v41 - v21;
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v41 - v25;
  v29 = MEMORY[0x1E0C80A78](v27, v28);
  v31 = (char *)&v41 - v30;
  v32 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v32((char *)&v41 - v30, a1, v15, v29);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v31, v15);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v33 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v34 = swift_allocObject();
  *(_DWORD *)(v34 + 16) = 0;
  v33[2] = v34;
  sub_19CCC290C((uint64_t)v14, (uint64_t)v33 + *(_QWORD *)(*v33 + 96), &qword_1ECEB2418);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v33;
  v36 = v44;
  ((void (*)(char *, char *, uint64_t))v32)(v31, v44, v15);
  ((void (*)(char *, char *, uint64_t))v32)(v26, a4, v15);
  v48 = v35;
  v37 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v43, 1, 1, v15);
  ((void (*)(char *, char *, uint64_t))v32)(v22, v31, v15);
  v38 = (uint64_t)v41;
  ((void (*)(char *, char *, uint64_t))v32)(v41, v26, v15);
  sub_19CF088A4(&v48, v37, v46, (uint64_t)v22, v38, v47, v45);
  v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v26, v15);
  v39(v31, v15);
  v39(a4, v15);
  v39(v36, v15);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v42, v15);
}

uint64_t JetpackLoader.init(filePipeline:keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  _BYTE v28[4];
  int v29;
  uint64_t v30;

  v29 = a5;
  v11 = sub_19CFDEDE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = &v28[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v24 = &v28[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = *a1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(v12 + 56))(v24, 1, 1, v11, v22);
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
  v25(v19, a3, v11);
  v25(v15, a4, v11);
  sub_19CF088A4(&v30, (uint64_t)v24, a2, (uint64_t)v19, (uint64_t)v15, v29, a6);
  v26 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v26(a4, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(a3, v11);
}

uint64_t sub_19CF0994C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[4];
  _BYTE v27[48];
  _BYTE v28[24];
  ValueMetadata *v29;
  _UNKNOWN **v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  v12 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v26[-1] - v16;
  v18 = (*(uint64_t (**)(double))(**(_QWORD **)a1 + 88))(v15);
  sub_19CCF8C5C(a2, (uint64_t)v7, (uint64_t *)&unk_1ECEB3030);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB3030);
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v17, v7, v8);
    v25 = v18;
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v20(v12, v17, v8);
    v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v22 = swift_allocObject();
    v19((char *)(v22 + v21), v12, v8);
    v20(v12, v17, v8);
    v18 = v25;
    v23 = swift_allocObject();
    v19((char *)(v23 + v21), v12, v8);
    v29 = &type metadata for SyncTaskScheduler;
    v30 = &protocol witness table for SyncTaskScheduler;
    v26[0] = sub_19CF0B8BC;
    v26[1] = v22;
    v26[2] = sub_19CF0B968;
    v26[3] = v23;
    sub_19CCD5B84((uint64_t)v28, (uint64_t)v27);
    v27[40] = 0;
    swift_retain();
    swift_retain();
    sub_19CDC0F48();
    sub_19CCECFE4((uint64_t)v26, qword_1EE43B200);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  return v18;
}

uint64_t sub_19CF09BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE43A538 != -1)
    swift_once();
  v7 = *(os_unfair_lock_s **)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock(v7 + 6);
  sub_19CDEBD64(a2, (uint64_t)v6);
  os_unfair_lock_unlock(v7 + 6);
  swift_release();
  return sub_19CCECFE4((uint64_t)v6, (uint64_t *)&unk_1ECEB3030);
}

uint64_t sub_19CF09CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  os_unfair_lock_s *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B70);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE43A538 != -1)
    swift_once();
  v7 = *(os_unfair_lock_s **)(qword_1EE465B50 + 16);
  swift_retain();
  os_unfair_lock_lock(v7 + 6);
  sub_19CDEBD90(a2, v6);
  os_unfair_lock_unlock(v7 + 6);
  swift_release();
  v8 = &v6[*(int *)(v3 + 48)];
  v9 = sub_19CFDEDE0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_19CF09DBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *boxed_opaque_existential_2Tm;

  a2[3] = type metadata accessor for JSSource();
  a2[4] = (uint64_t)&protocol witness table for JSSource;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return sub_19CF0B86C(a1, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t JetpackLoader.fetchJetpackBundle()()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)v0 + 88);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t JetpackLoader.fetchSource()()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 16) + 88);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_19CF09E94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  double v27;
  void (*v28)(char *, uint64_t);
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v35 = a1;
  v36 = a4;
  v6 = sub_19CFDF2D8();
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF308();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDF320();
  v15 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v33 - v21;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C320);
  v23 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + 16) = 0;
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 16) = v24;
  *(_QWORD *)(v23 + 24) = v25;
  *(_QWORD *)(v23 + 32) = 0;
  *(_BYTE *)(v23 + 40) = 0;
  ObjectType = swift_getObjectType();
  v27 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19CFDF314();
  MEMORY[0x1A1AD955C](v18, v27);
  v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  v28(v18, v14);
  v29 = (_QWORD *)swift_allocObject();
  v30 = v36;
  v29[2] = v35;
  v29[3] = a2;
  v29[4] = a3;
  v29[5] = v23;
  v29[6] = v30;
  aBlock[4] = sub_19CF0BA38;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_65;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v30;
  sub_19CFDF2F0();
  v40 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  sub_19CFE0070();
  MEMORY[0x1A1AD9FB8](v22, v13, v9, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
  v28(v22, v34);
  swift_release();
  return v23;
}

_QWORD *sub_19CF0A18C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t ObjectType;
  double v28;
  void (*v29)(char *, uint64_t);
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v36 = a1;
  v37 = a4;
  v38 = sub_19CFDF2D8();
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF308();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF320();
  v14 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v35 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v22, v22);
  v24 = (uint64_t *)((char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v24 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B90);
  v25 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = 0;
  v25[2] = v26;
  sub_19CCC290C((uint64_t)v24, (uint64_t)v25 + *(_QWORD *)(*v25 + 96), (uint64_t *)&unk_1EE43E400);
  ObjectType = swift_getObjectType();
  v28 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19CFDF314();
  MEMORY[0x1A1AD955C](v17, v28);
  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v17, v13);
  v30 = (_QWORD *)swift_allocObject();
  v31 = v37;
  v30[2] = v36;
  v30[3] = a2;
  v30[4] = a3;
  v30[5] = v25;
  v30[6] = v31;
  aBlock[4] = sub_19CF0BADC;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_74;
  v32 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v31;
  sub_19CFDF2F0();
  v42 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  v33 = v38;
  sub_19CFE0070();
  MEMORY[0x1A1AD9FB8](v21, v12, v8, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
  v29(v21, v35);
  swift_release();
  return v25;
}

_QWORD *sub_19CF0A4E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t ObjectType;
  double v28;
  void (*v29)(char *, uint64_t);
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v36 = a1;
  v37 = a4;
  v38 = sub_19CFDF2D8();
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF308();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDF320();
  v14 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v35 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v22, v22);
  v24 = (uint64_t *)((char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v24 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v25 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = 0;
  v25[2] = v26;
  sub_19CCC290C((uint64_t)v24, (uint64_t)v25 + *(_QWORD *)(*v25 + 96), &qword_1ECEB2418);
  ObjectType = swift_getObjectType();
  v28 = (*(double (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_19CFDF314();
  MEMORY[0x1A1AD955C](v17, v28);
  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v17, v13);
  v30 = (_QWORD *)swift_allocObject();
  v31 = v37;
  v30[2] = v36;
  v30[3] = a2;
  v30[4] = a3;
  v30[5] = v25;
  v30[6] = v31;
  aBlock[4] = sub_19CF0B9E4;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_25;
  v32 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v31;
  sub_19CFDF2F0();
  v42 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD3DE28();
  v33 = v38;
  sub_19CFE0070();
  MEMORY[0x1A1AD9FB8](v21, v12, v8, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
  v29(v21, v35);
  swift_release();
  return v25;
}

uint64_t sub_19CF0A844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];

  (*(void (**)(void))(*(_QWORD *)a1 + 88))();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19CD48F8C();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19CF0BB88;
  v12[1] = v9;
  v12[2] = sub_19CF0BBE0;
  v12[3] = a4;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  v10 = a5;
  swift_retain();
  sub_19CCDFA5C();
  sub_19CCECFE4((uint64_t)v12, qword_1ECEB1C80);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19CF0A954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];

  (*(void (**)(void))(*(_QWORD *)a1 + 88))();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19CD48F8C();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19CF0BA48;
  v12[1] = v9;
  v12[2] = sub_19CF0BAA4;
  v12[3] = a4;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  v10 = a5;
  swift_retain();
  sub_19CDC0D70();
  sub_19CCECFE4((uint64_t)v12, &qword_1EE440CF0);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19CF0AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];

  (*(void (**)(void))(*(_QWORD *)a1 + 88))();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19CD48F8C();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19CF0BAEC;
  v12[1] = v9;
  v12[2] = sub_19CF0BB54;
  v12[3] = a4;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  v10 = a5;
  swift_retain();
  sub_19CDC0AF4();
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1EE443AF0);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19CF0AB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];

  (*(void (**)(void))(*(_QWORD *)a1 + 88))();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v14[3] = sub_19CD48F8C();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a5;
  v12[0] = sub_19CF0B9F4;
  v12[1] = v9;
  v12[2] = sub_19CF0BA00;
  v12[3] = a4;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_unknownObjectRetain();
  v10 = a5;
  swift_retain();
  sub_19CDBE6E0((uint64_t)v12);
  sub_19CCECFE4((uint64_t)v12, &qword_1EE43D310);
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_19CF0AC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v8[4];
  _BYTE v9[48];
  _BYTE v10[24];
  ValueMetadata *v11;
  _UNKNOWN **v12;

  v11 = &type metadata for SyncTaskScheduler;
  v12 = &protocol witness table for SyncTaskScheduler;
  v8[0] = MEMORY[0x1E0DEE9D8];
  v9[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436B98);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v4 + 16) = v5;
  sub_19CCC290C((uint64_t)v8, v4 + 24, (uint64_t *)&unk_1EE436B80);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v4;
  v8[0] = sub_19CF0B858;
  v8[1] = v6;
  v8[2] = sub_19CF0B864;
  v8[3] = v4;
  sub_19CCD5B84((uint64_t)v10, (uint64_t)v9);
  v9[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBECC4();
  sub_19CCECFE4((uint64_t)v8, &qword_1EE43E3F8);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v4;
}

_QWORD *sub_19CF0ADD0(uint64_t a1)
{
  return sub_19CE4B804(a1);
}

uint64_t sub_19CF0ADD8()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_19CF0ADFC(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE4C044(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t *initializeBufferWithCopyOfBuffer for JetpackLoader(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_19CFDEDE0();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t destroy for JetpackLoader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_19CFDEDE0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for JetpackLoader(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for JetpackLoader(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for JetpackLoader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for JetpackLoader(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackLoader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF0B3E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for JetpackLoader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CF0B474(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for JetpackLoader()
{
  uint64_t result;

  result = qword_1EE43CC18;
  if (!qword_1EE43CC18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_19CF0B528()
{
  unint64_t v0;

  sub_19CCC8A30();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_19CF0B5A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

_QWORD *sub_19CF0B5D0(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF0A4E8(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_19CF0B5E0()
{
  return sub_19CEF48E0();
}

uint64_t sub_19CF0B5E8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEF49E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CF0B5F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF0B614()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF0B640(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(void **)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = *a1;
  v5 = v2 + 16;
  objc_msgSend(v3, sel_lock);
  sub_19CF0791C(v5, v4);
  v7 = v6;
  objc_msgSend(v3, sel_unlock);
  return v7;
}

uint64_t sub_19CF0B6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030) - 8)
                          + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_19CFDEDE0();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_19CF0B744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030) - 8)
                          + 80);
  return sub_19CF0994C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_19CF0B784()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

_QWORD *sub_19CF0B7B8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEB138C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CF0B7C0(uint64_t a1)
{
  uint64_t v1;

  return sub_19CFD243C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CF0B7C8()
{
  return objectdestroy_31Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CB1A18]);
}

uint64_t sub_19CF0B7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CF0AC84(v2, v3);
  swift_release();
  return v4;
}

uint64_t sub_19CF0B82C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF0B858(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF07644(a1, *(void (**)(_QWORD *__return_ptr))(v1 + 16));
}

void sub_19CF0B864(void *a1)
{
  sub_19CF4CA10(a1);
}

uint64_t sub_19CF0B86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF0B8B0()
{
  return objectdestroy_31Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_19CF0B8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDEDE0() - 8) + 80);
  return sub_19CF09BB4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_19CF0B8F8()
{
  return objectdestroy_31Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_31Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_19CF0B968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDEDE0() - 8) + 80);
  return sub_19CF09CA8(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_19CF0B9A4()
{
  uint64_t v0;

  sub_19CF0745C(v0);
}

void sub_19CF0B9BC(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_19CF0B9D4(a1);
}

void sub_19CF0B9D4(id a1)
{

}

uint64_t sub_19CF0B9E4()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF0AB74);
}

uint64_t sub_19CF0B9F4(uint64_t a1)
{
  return sub_19CF0BAF8(a1, (uint64_t (*)(uint64_t))sub_19CFBD058);
}

void sub_19CF0BA04()
{
  uint64_t v0;

  sub_19CF072DC(v0, &qword_1EE436B90);
}

uint64_t sub_19CF0BA38()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF0A954);
}

void sub_19CF0BA48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *a1;
  v4 = a1[1];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_19CFBB3F4(v3, v4);
}

void sub_19CF0BAA8()
{
  uint64_t v0;

  sub_19CF072DC(v0, (uint64_t *)&unk_1EE43E400);
}

uint64_t sub_19CF0BADC()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF0AA64);
}

uint64_t sub_19CF0BAEC(uint64_t a1)
{
  return sub_19CF0BAF8(a1, (uint64_t (*)(uint64_t))sub_19CFBED20);
}

uint64_t sub_19CF0BAF8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  return a2(a1);
}

uint64_t objectdestroy_58Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_19CF0BB88(void **a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *a1;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_19CFBB650(v3);
}

void CapacityMetricsFieldsProvider.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void CapacityMetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19CF0BC2C(_QWORD *a1)
{
  return CapacityMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

void CapacityMetricsFieldsProvider.init(device:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

ValueMetadata *type metadata accessor for CapacityMetricsFieldsProvider()
{
  return &type metadata for CapacityMetricsFieldsProvider;
}

void _chain<A, B>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[4];

  v13 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a1);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v22, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a7, v22, a3);
  v23[0] = a3;
  v23[1] = a4;
  v23[2] = a5;
  v23[3] = a6;
  type metadata accessor for _AsyncChainedSequence();
}

uint64_t sub_19CF0BD34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void _AsyncChainedSequence.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for _AsyncChainedSequence();
}

uint64_t sub_19CF0BDC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for _AsyncChainedSequence()
{
  JUMPOUT(0x1A1ADBCC8);
}

void _AsyncChainedSequence.AsyncIterator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
  type metadata accessor for _AsyncChainedSequence.AsyncIterator();
}

uint64_t sub_19CF0BE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v2 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v3, v1, AssociatedTypeWitness);
}

void type metadata accessor for _AsyncChainedSequence.AsyncIterator()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t _AsyncChainedSequence.AsyncIterator.first.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t _AsyncChainedSequence.AsyncIterator.first.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

uint64_t (*_AsyncChainedSequence.AsyncIterator.first.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncChainedSequence.AsyncIterator.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t _AsyncChainedSequence.AsyncIterator.second.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a2 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v4, a1, AssociatedTypeWitness);
}

uint64_t (*_AsyncChainedSequence.AsyncIterator.second.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncChainedSequence.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[5] = AssociatedTypeWitness;
  v5 = sub_19CFDFF5C();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v3[13] = v6;
  *v6 = v3;
  v6[1] = sub_19CF0C1C0;
  return sub_19CFDF9E0();
}

uint64_t sub_19CF0C1C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF0C224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 120) = v4;
  if (v4(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 8);
    *(_QWORD *)(v0 + 128) = v6;
    v6(v1, v5);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v7;
    *v7 = v0;
    v7[1] = sub_19CF0C3B4;
    return sub_19CFDF9E0();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 16);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v11(v9, v1, v3);
    v11(v10, v9, v3);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF0C3B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF0C418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 120))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v0 + 128))(v1, *(_QWORD *)(v0 + 48));
    v3 = 1;
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 16);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 32);
    v6(v4, v1, v2);
    v6(v5, v4, v2);
    v3 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), v3, 1, *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF0C500()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF0C558()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF0C5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  return _AsyncChainedSequence.AsyncIterator.next()(a1, a2);
}

uint64_t sub_19CF0C610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_19CF0C6E8;
  return sub_19CFDF9F8();
}

uint64_t sub_19CF0C6E8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return ((uint64_t (*)(void))v3[1])();
}

uint64_t _AsyncChainedSequence.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _AsyncChainedSequence.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

void _AsyncChainedSequence.makeAsyncIterator()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a3;
  v4 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)&v22 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v21 = v23;
  v20(v14, v23, v9, v17);
  sub_19CFDFADC();
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v21 + *(int *)(a1 + 52), v4);
  sub_19CFDFADC();
  _AsyncChainedSequence.AsyncIterator.init(_:_:)((uint64_t)v19, v25);
}

uint64_t _AsyncChainedSequence.debugDescription.getter()
{
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CF0C9EC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_19CF0CA7C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF0CA8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _AsyncChainedSequence.makeAsyncIterator()(a1, a2, a3);
}

uint64_t sub_19CF0CAA0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_19CF0CAC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF0CB9C + 4 * byte_19D0618E0[v17 - 1]))();
}

void sub_19CF0CC18(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_19CF0CE18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_19CF0CECC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v6 + v9) & (unint64_t)~v9) + *(_QWORD *)(v8 + 64) > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    v15 = v7;
    v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v15);
  }
  return a1;
}

uint64_t sub_19CF0CFE8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_19CF0D08C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CF0D148(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CF0D204(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CF0D2C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CF0D37C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = *(_QWORD *)(v5 + 64) + v11;
  if (a2 <= v10)
    goto LABEL_23;
  v13 = (v12 & ~v11) + *(_QWORD *)(v8 + 64);
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_23:
      if (v10)
      {
        if (v6 >= v9)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v12 + a1) & ~v11, v9, v7);
      }
      return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_23;
LABEL_14:
  v17 = (v15 - 1) << v14;
  if (v13 > 3)
    v17 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v18 = v13;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  return v10 + v17 + 1;
}

void sub_19CF0D55C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + *(_QWORD *)(v8 + 64);
  if (a3 <= v9)
  {
    v11 = 0u;
  }
  else if (v10 <= 3)
  {
    v13 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v11 = 4u;
    }
    else if (v13 >= 0x100)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 > 1;
    }
  }
  else
  {
    v11 = 1u;
  }
  if (v9 < a2)
  {
    v12 = ~v9 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v14 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if ((_DWORD)v10 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

__n128 JSRequest.route.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*JSRequest.route.modify())()
{
  return nullsub_1;
}

uint64_t (*JSRequest.timeoutInterval.modify())()
{
  return nullsub_1;
}

uint64_t JSRequest.version.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v5;
  _BYTE v6[32];

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v1 + 16)
    && (v2 = sub_19CD3FD1C(0x6E6F697372657624, 0xE800000000000000), (v3 & 1) != 0)
    && (sub_19CD436B0(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)v6), swift_dynamicCast()))
  {
    return v5;
  }
  else
  {
    return 0;
  }
}

uint64_t JSRequest.version.setter(uint64_t a1)
{
  _QWORD v2[4];

  v2[3] = MEMORY[0x1E0DEBB98];
  v2[0] = a1;
  return sub_19CD13C70((uint64_t)v2, 0x6E6F697372657624, 0xE800000000000000);
}

void (*JSRequest.version.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = sub_19CD3FD1C(0x6E6F697372657624, 0xE800000000000000);
    if ((v7 & 1) != 0
      && (sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)v3), swift_dynamicCast()))
    {
      v5 = v3[5];
    }
    else
    {
      v5 = 0;
    }
  }
  v3[4] = v5;
  return sub_19CF0D9CC;
}

void sub_19CF0D9CC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD v3[4];

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3[3] = MEMORY[0x1E0DEBB98];
  v3[0] = v2;
  sub_19CD13C70((uint64_t)v3, 0x6E6F697372657624, 0xE800000000000000);
  free(v1);
}

Swift::Void __swiftcall JSRequest.removeOption(withName:)(Swift::String withName)
{
  void *object;
  uint64_t countAndFlagsBits;
  _OWORD v3[2];

  object = withName._object;
  countAndFlagsBits = withName._countAndFlagsBits;
  if ((sub_19CFDF71C() & 1) != 0)
    sub_19CFAE074("JetEngine/JSRequest.swift", 25, 2, 106);
  sub_19CD143A0(countAndFlagsBits, (uint64_t)object, v3);
  sub_19CD3F190((uint64_t)v3);
}

void __swiftcall JSRequest.removingOption(withName:)(JetEngine::JSRequest *__return_ptr retstr, Swift::String withName)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::Double v10;
  char v11;
  void *v12;
  _OWORD v13[2];

  object = withName._object;
  countAndFlagsBits = withName._countAndFlagsBits;
  v7 = *(_QWORD *)v2;
  v6 = *(void **)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(void **)(v2 + 24);
  v10 = *(double *)(v2 + 32);
  v11 = *(_BYTE *)(v2 + 40);
  v12 = *(void **)(v2 + 48);
  retstr->route.service._countAndFlagsBits = v7;
  retstr->route.service._object = v6;
  retstr->route.function._countAndFlagsBits = v8;
  retstr->route.function._object = v9;
  retstr->timeoutInterval.value = v10;
  retstr->timeoutInterval.is_nil = v11;
  retstr->options._rawValue = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_19CFDF71C() & 1) != 0)
    sub_19CFAE074("JetEngine/JSRequest.swift", 25, 2, 106);
  sub_19CD143A0(countAndFlagsBits, (uint64_t)object, v13);
  sub_19CD3F190((uint64_t)v13);
}

Swift::Void __swiftcall JSRequest.removeAllOptions()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = MEMORY[0x1E0DEE9E0];
}

void __swiftcall JSRequest.removingAllOptions()(JetEngine::JSRequest *__return_ptr retstr)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Swift::Double v7;
  char v8;

  v4 = *(_QWORD *)v1;
  v3 = *(void **)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v7 = *(double *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  retstr->route.service._countAndFlagsBits = v4;
  retstr->route.service._object = v3;
  retstr->route.function._countAndFlagsBits = v6;
  retstr->route.function._object = v5;
  retstr->timeoutInterval.value = v7;
  retstr->timeoutInterval.is_nil = v8;
  retstr->options._rawValue = (void *)MEMORY[0x1E0DEE9E0];
}

uint64_t static JSRequest.versionOption.getter()
{
  return 0x6E6F697372657624;
}

uint64_t sub_19CF0DC1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = JSRequest.version.getter();
  *a1 = result;
  return result;
}

uint64_t sub_19CF0DC70(uint64_t *a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v1 = *a1;
  v3[3] = MEMORY[0x1E0DEBB98];
  v3[0] = v1;
  return sub_19CD13C70((uint64_t)v3, 0x6E6F697372657624, 0xE800000000000000);
}

uint64_t assignWithCopy for JSRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CF0DE8C()
{
  int v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  uint64_t v5;

  v5 = 0;
  MEMORY[0x1A1ADBEB4](&v5, 8);
  v0 = v5;
  v1 = objc_msgSend((id)objc_opt_self(), sel_currentContext);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, (*(_QWORD *)&v0 & 0x20000) == 0, v1);

    if (v3)
      return (uint64_t)v3;
    __break(1u);
  }
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CF0DF78()
{
  unint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = sub_19CEC001C(0x20000000000001uLL);
  v1 = objc_msgSend((id)objc_opt_self(), sel_currentContext);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, v1, (double)v0 * 1.11022302e-16 + 0.0);

    if (v3)
      return (uint64_t)v3;
    __break(1u);
  }
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CF0E078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t result;
  _QWORD v19[4];

  v0 = sub_19CFDEFA8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF9C();
  v5 = sub_19CFDEF90();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v8 = MEMORY[0x1E0DEA968];
  v19[3] = MEMORY[0x1E0DEA968];
  v19[0] = v5;
  v19[1] = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentContext);
  if (v9)
  {
    v10 = v9;
    v11 = __swift_project_boxed_opaque_existential_1(v19, v8);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = MEMORY[0x1E0C80A78](v11, v11);
    v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v15, v13);
    v16 = sub_19CFE0688();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    v17 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v16, v10);
    swift_unknownObjectRelease();

    if (v17)
      return (uint64_t)v17;
    __break(1u);
  }
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CF0E250(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  _BYTE v9[32];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  sub_19CE4A23C(0, v2, 0);
  v3 = v10;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_19CD436B0(i, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19CE4A23C(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v10;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_19CE4A23C(v5 > 1, v6 + 1, 1);
        v3 = v10;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      *(_QWORD *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id RollItemsMediaActivityTracker.__allocating_init(pipeline:playlist:eventData:topic:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  objc_super v19;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData;
  *(_QWORD *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity] = 0;
  v13 = &v11[OBJC_IVAR___JERollItemsMediaActivityTracker_activity];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline] = a1;
  *(_QWORD *)&v11[OBJC_IVAR___JERollItemsMediaActivityTracker_playlist] = a2;
  *(_QWORD *)&v11[v12] = a3;
  v14 = v11;
  v15 = a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v16 = &v14[OBJC_IVAR___JERollItemsMediaActivityTracker_topic];
  *(_QWORD *)v16 = a4;
  *((_QWORD *)v16 + 1) = a5;

  v19.receiver = v14;
  v19.super_class = v5;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

id RollItemsMediaActivityTracker.init(pipeline:playlist:eventData:topic:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;

  v6 = sub_19CF0F8A0(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v6;
}

void sub_19CF0E640(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  _OWORD v31[2];

  v9 = v8;
  v14 = *(void **)(v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline);
  v15 = v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_topic;
  v16 = *(_QWORD *)(v8 + OBJC_IVAR___JERollItemsMediaActivityTracker_topic);
  v17 = *(_QWORD *)(v15 + 8);
  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for MediaActivity());
  v19 = v14;
  swift_bridgeObjectRetain();
  v20 = a7;
  v21 = sub_19CF0F608(a1, v20, v19, v16, v17, v18);
  if (v21)
  {
    v22 = v21;
    v23 = (_QWORD *)sub_19CF0F4B8(a8, v20, v9);
    memset(v31, 0, sizeof(v31));
    sub_19CEE19A0(a2, a3, a4, a5, a6, v23, (uint64_t)v31);
    swift_bridgeObjectRelease();
    sub_19CD3F190((uint64_t)v31);
    if (a1)
    {
      if (a1 != 1)
      {
LABEL_7:

        return;
      }
      v24 = &OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity;
    }
    else
    {
      v24 = &OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity;
    }
    v25 = *v24;
    v26 = *(void **)(v9 + v25);
    *(_QWORD *)(v9 + v25) = v22;
    v22 = v26;
    goto LABEL_7;
  }
}

uint64_t RollItemsMediaActivityTracker.playStoppedAtOverallPosition(_:type:reason:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_19CFDF578();
  v8 = v7;
  v9 = sub_19CFDF578();
  sub_19CF0E8AC(0, a1, v6, v8, v9, v10, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_19CF0E8AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  void **v16;
  void *v17;
  char *v18;
  id v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __int128 v31;
  void *v32;
  _QWORD *v33;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  if (a1)
  {
    if (a1 != 1)
    {
      v15 = 0;
      goto LABEL_15;
    }
    v13 = &OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity;
  }
  else
  {
    v13 = &OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity;
  }
  v14 = *v13;
  v15 = *(char **)(v7 + v14);
  *(_QWORD *)(v7 + v14) = 0;
  if (v15 && (*(_BYTE *)(*(_QWORD *)&v15[OBJC_IVAR___JEMediaActivity_pipelineHandler] + 216) & 1) == 0)
  {
    v16 = (void **)&v15[OBJC_IVAR___JEMediaActivity_playlistItem];
    swift_beginAccess();
    objc_opt_self();
    v17 = (void *)swift_dynamicCastObjCClass();
    v18 = v15;
    if (v17)
    {
      swift_unknownObjectRetain();
      if ((unint64_t)objc_msgSend(v17, sel_startOverallPosition) > a2)
        goto LABEL_11;
      v19 = objc_msgSend(v17, sel_startOverallPosition);
      v20 = (char *)objc_msgSend(v17, sel_duration);
      if (__CFADD__(v19, v20))
      {
        __break(1u);
        return;
      }
      if (&v20[(_QWORD)v19] < (char *)a2)
      {
LABEL_11:
        if (qword_1ECEB31D8 != -1)
          swift_once();
        v21 = (void *)qword_1ECEB30F0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_19D0522A0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
        v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_19D0522A0;
        v39 = MEMORY[0x1E0DEA968];
        v37 = 0xD000000000000041;
        v38 = 0x800000019D0768F0;
        v35 = 0u;
        v36 = 0u;
        v24 = v21;
        sub_19CD40658((uint64_t)&v37, (uint64_t)&v35);
        *(_BYTE *)(v23 + 64) = 0;
        v25 = v36;
        *(_OWORD *)(v23 + 32) = v35;
        *(_OWORD *)(v23 + 48) = v25;
        *(_QWORD *)(v22 + 32) = v23;
        *(_QWORD *)&v35 = v24;
        LOBYTE(v37) = 0;
        OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v22, (JetEngine::LogMessageLevel)&v37);

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      swift_unknownObjectRelease();
    }
    v32 = *v16;
    swift_getObjectType();
    swift_unknownObjectRetain();
    v33 = (_QWORD *)sub_19CF0F4B8(a7, v32, v7);
    swift_unknownObjectRelease();
    v35 = 0u;
    v36 = 0u;
    sub_19CEE19F0(a2, a3, a4, a5, a6, v33, (uint64_t)&v35);
    swift_bridgeObjectRelease();

    sub_19CD3F190((uint64_t)&v35);
    return;
  }
LABEL_15:
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v26 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v28 = swift_allocObject();
  v29 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v28 + 16) = xmmword_19D0522A0;
  v39 = v29;
  v37 = 0xD000000000000024;
  v38 = 0x800000019D0768C0;
  v35 = 0u;
  v36 = 0u;
  v30 = v26;
  sub_19CD40658((uint64_t)&v37, (uint64_t)&v35);
  *(_BYTE *)(v28 + 64) = 0;
  v31 = v36;
  *(_OWORD *)(v28 + 32) = v35;
  *(_OWORD *)(v28 + 48) = v31;
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)&v35 = v30;
  LOBYTE(v37) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v37);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall RollItemsMediaActivityTracker.jumpFromOverallPosition(_:fromRollItem:toRollItem:eventData:)(Swift::UInt64 _, JEHLSRollItem *fromRollItem, JEHLSRollItem *toRollItem, Swift::OpaquePointer_optional eventData)
{
  uint64_t v4;
  void *rawValue;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  rawValue = eventData.value._rawValue;
  v9 = *(_QWORD *)(v4 + OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity);
  if (v9)
  {
    v10 = (_QWORD *)(v9 + OBJC_IVAR___JEMediaActivity_type);
    swift_beginAccess();
    if (!*v10)
    {
      v11 = sub_19CFDF578();
      v13 = v12;
      v14 = sub_19CFDF578();
      sub_19CF0E8AC(0, _, v11, v13, v14, v15, (uint64_t)rawValue);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v16 = sub_19CFDF578();
  v18 = v17;
  v19 = sub_19CFDF578();
  sub_19CF0E640(1, _, v16, v18, v19, v20, fromRollItem, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = -[JEHLSItem startOverallPosition](toRollItem, sel_startOverallPosition);
  v22 = sub_19CFDF578();
  v24 = v23;
  v25 = sub_19CFDF578();
  sub_19CF0E8AC(1, v21, v22, v24, v25, v26, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s9JetEngine29RollItemsMediaActivityTrackerC28playStartedAtOverallPosition_4type6reason8rollItem9eventDatays6UInt64V_So07JEMediaF11TriggerTypeaSo0tF15PlayStartReasonaSo09JEHLSRollP0CSaySDySSypGGSgtF_0(-[JEHLSItem startOverallPosition](toRollItem, sel_startOverallPosition), (int)CFSTR("automatic"), (int)CFSTR("next"), toRollItem, (uint64_t)rawValue);
}

uint64_t RollItemsMediaActivityTracker.seekStartedAtOverallPosition(_:type:reason:rollItem:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_19CFDF578();
  v10 = v9;
  v11 = sub_19CFDF578();
  sub_19CF0E640(1, a1, v8, v10, v11, v12, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t RollItemsMediaActivityTracker.seekStoppedAtOverallPosition(_:type:reason:rollItem:eventData:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = sub_19CFDF578();
  v9 = v8;
  v10 = sub_19CFDF578();
  sub_19CF0E8AC(1, a1, v7, v9, v10, v11, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id RollItemsMediaActivityTracker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RollItemsMediaActivityTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RollItemsMediaActivityTracker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19CF0F4B8(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v5 = *(void **)(a3 + OBJC_IVAR___JERollItemsMediaActivityTracker_playlist);
  if ((objc_msgSend(v5, sel_respondsToSelector_, sel_eventData) & 1) != 0)
  {
    v6 = objc_msgSend(v5, sel_eventData);
    if (v6)
    {
      v7 = v6;
      v8 = sub_19CFDF86C();

      if (v8)
      {
        v9 = sub_19CF0E250(v8);
        sub_19CF0FDC0(v8);
        if (v9)
          sub_19CDC7474(v9);
      }
    }
  }
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_eventData) & 1) != 0)
  {
    v10 = objc_msgSend(a2, sel_eventData);
    if (v10)
    {
      v11 = v10;
      v12 = sub_19CFDF86C();

      if (v12)
      {
        v13 = sub_19CF0E250(v12);
        sub_19CF0FDC0(v12);
        if (v13)
          sub_19CDC7474(v13);
      }
    }
  }
  if (a1)
  {
    v14 = swift_bridgeObjectRetain();
    sub_19CDC7474(v14);
  }
  return v16;
}

id sub_19CF0F608(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  objc_super v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  _QWORD v43[4];

  type metadata accessor for WrappedMetricsPipeline();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    *(_QWORD *)&a6[OBJC_IVAR___JEMediaActivity_type] = a1;
    *(_QWORD *)&a6[OBJC_IVAR___JEMediaActivity_playlistItem] = a2;
    sub_19CD50F74(v12 + OBJC_IVAR___JEWrappedMetricsPipeline_pipeline, (uint64_t)&v31);
    type metadata accessor for MediaActivityPipelineHandler();
    v13 = swift_allocObject();
    *(_BYTE *)(v13 + 216) = 0;
    *(_QWORD *)(v13 + 224) = 0;
    *(_QWORD *)(v13 + 232) = 0;
    v14 = a6;
    v15 = a2;
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 240) = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v13 + 248) = sub_19CD30650(v16);
    v17 = v40;
    *(_OWORD *)(v13 + 144) = v39;
    *(_OWORD *)(v13 + 160) = v17;
    *(_OWORD *)(v13 + 176) = v41;
    *(_BYTE *)(v13 + 192) = v42;
    v18 = v36;
    *(_OWORD *)(v13 + 80) = v35;
    *(_OWORD *)(v13 + 96) = v18;
    v19 = v38;
    *(_OWORD *)(v13 + 112) = v37;
    *(_OWORD *)(v13 + 128) = v19;
    v20 = v32;
    *(_OWORD *)(v13 + 16) = v31;
    *(_OWORD *)(v13 + 32) = v20;
    v21 = v34;
    *(_OWORD *)(v13 + 48) = v33;
    *(_OWORD *)(v13 + 64) = v21;
    *(_QWORD *)(v13 + 200) = a4;
    *(_QWORD *)(v13 + 208) = a5;
    *(_QWORD *)&v14[OBJC_IVAR___JEMediaActivity_pipelineHandler] = v13;

    v30.receiver = v14;
    v30.super_class = (Class)type metadata accessor for MediaActivity();
    v22 = objc_msgSendSuper2(&v30, sel_init);

  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v23 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v25 = swift_allocObject();
    v26 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
    v43[3] = v26;
    v43[0] = 0xD00000000000006ALL;
    v43[1] = 0x800000019D075540;
    v31 = 0u;
    v32 = 0u;
    v27 = v23;
    sub_19CD40658((uint64_t)v43, (uint64_t)&v31);
    *(_BYTE *)(v25 + 64) = 0;
    v28 = v32;
    *(_OWORD *)(v25 + 32) = v31;
    *(_OWORD *)(v25 + 48) = v28;
    *(_QWORD *)(v24 + 32) = v25;
    *(_QWORD *)&v31 = v27;
    LOBYTE(v43[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)v43);

    swift_bridgeObjectRelease();
    type metadata accessor for MediaActivity();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v22;
}

id sub_19CF0F8A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData;
  *(_QWORD *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_trackerEventData] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_seekActivity] = 0;
  v13 = &v5[OBJC_IVAR___JERollItemsMediaActivityTracker_activity];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_pipeline] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___JERollItemsMediaActivityTracker_playlist] = a2;
  *(_QWORD *)&v5[v12] = a3;
  v14 = v5;
  v15 = a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v16 = &v14[OBJC_IVAR___JERollItemsMediaActivityTracker_topic];
  *(_QWORD *)v16 = a4;
  *((_QWORD *)v16 + 1) = a5;

  v18.receiver = v14;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t _s9JetEngine29RollItemsMediaActivityTrackerC28playStartedAtOverallPosition_4type6reason8rollItem9eventDatays6UInt64V_So07JEMediaF11TriggerTypeaSo0tF15PlayStartReasonaSo09JEHLSRollP0CSaySDySSypGGSgtF_0(unint64_t a1, int a2, int a3, id a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[32];
  _QWORD v38[4];
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  char v42;

  if ((unint64_t)objc_msgSend(a4, sel_startOverallPosition) > a1)
    goto LABEL_4;
  v9 = objc_msgSend(a4, sel_startOverallPosition);
  v10 = (char *)objc_msgSend(a4, sel_duration);
  if (__CFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (&v10[(_QWORD)v9] >= (char *)a1)
  {
    v22 = *(_QWORD *)(v5 + OBJC_IVAR___JERollItemsMediaActivityTracker_playActivity);
    if (!v22
      || (v23 = (_QWORD *)(v22 + OBJC_IVAR___JEMediaActivity_type), swift_beginAccess(), *v23)
      || *(_BYTE *)(*(_QWORD *)(v22 + OBJC_IVAR___JEMediaActivity_pipelineHandler) + 216) == 1)
    {
      v24 = sub_19CFDF578();
      v26 = v25;
      v27 = sub_19CFDF578();
      sub_19CF0E640(0, a1, v24, v26, v27, v28, a4, a5);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (qword_1ECEB31D8 == -1)
    {
LABEL_17:
      v30 = (void *)qword_1ECEB30F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_19D0522A0;
      *((_QWORD *)&v36 + 1) = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v35 = 0xD000000000000037;
      *((_QWORD *)&v35 + 1) = 0x800000019D076940;
      v40 = 0u;
      v41 = 0u;
      v33 = v30;
      sub_19CD40658((uint64_t)&v35, (uint64_t)&v40);
      *(_BYTE *)(v32 + 64) = 0;
      v34 = v41;
      *(_OWORD *)(v32 + 32) = v40;
      *(_OWORD *)(v32 + 48) = v34;
      *(_QWORD *)(v31 + 32) = v32;
      *(_QWORD *)&v40 = v33;
      LOBYTE(v35) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v35);

      return swift_bridgeObjectRelease();
    }
LABEL_19:
    swift_once();
    goto LABEL_17;
  }
LABEL_4:
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v11 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
  v13 = v11;
  v39 = sub_19CD40918(0, 70, 0, MEMORY[0x1E0DEE9D8]);
  v14._object = (void *)0x800000019D076980;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v38[3] = MEMORY[0x1E0DEE190];
  v38[0] = a1;
  sub_19CD40794((uint64_t)v38, (uint64_t)v37);
  v35 = 0u;
  v36 = 0u;
  sub_19CD40658((uint64_t)v37, (uint64_t)&v35);
  v42 = 1;
  v40 = v35;
  v41 = v36;
  v15 = v39;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v18 = &v15[5 * v17];
  v19 = v40;
  v20 = v41;
  *((_BYTE *)v18 + 64) = v42;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  v39 = v15;
  sub_19CD3F190((uint64_t)v38);
  v21._countAndFlagsBits = 0xD00000000000002BLL;
  v21._object = (void *)0x800000019D0769A0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v12 + 32) = v39;
  *(_QWORD *)&v40 = v13;
  LOBYTE(v35) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v35);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for RollItemsMediaActivityTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for RollItemsMediaActivityTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RollItemsMediaActivityTracker.__allocating_init(pipeline:playlist:eventData:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19CF0FDC0(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_19CF0FDD0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;
  __int128 v19[2];
  uint64_t v20;
  uint64_t v21;

  if ((a2 & 1) != 0)
  {
    sub_19CCD5B84(a1, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CD8);
    v9 = (_QWORD *)swift_allocObject();
    v10 = objc_allocWithZone((Class)JEUnfairLock);
    swift_retain();
    v9[2] = objc_msgSend(v10, sel_init);
    sub_19CCD14C4(v19, (uint64_t)(v9 + 3));
    v9[8] = a3;
    v9[9] = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CE0);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    v12 = *(_QWORD *)(v5 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
    sub_19CFD8C00((uint64_t *)(v12 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    swift_release();
    result = swift_release();
    *a5 = v11;
  }
  else
  {
    sub_19CCD5B84(a1, (uint64_t)v19);
    v20 = a3;
    v21 = a4;
    sub_19CF10168((uint64_t)v19, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CD0);
    v14 = swift_allocObject();
    v15 = v17[1];
    *(_OWORD *)(v14 + 16) = v17[0];
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = v17[2];
    *(_QWORD *)(v14 + 64) = v18;
    v16 = *(_QWORD *)(v5 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
    sub_19CFD8C00((uint64_t *)(v16 + 16), v14);
    os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
    swift_release();
    *a5 = v14;
    return sub_19CF101B0((uint64_t)v19);
  }
  return result;
}

id sub_19CF0FF80()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicFlag), sel_initWithInitialValue_, 0);
  qword_1EE441CA8 = (uint64_t)result;
  return result;
}

uint64_t sub_19CF0FFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _QWORD v3[5];
  uint64_t v4;

  if (qword_1EE43D6F0 != -1)
    swift_once();
  -[_JEAtomicFlag setCurrentValue:](qword_1EE441CA8, 1u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CB8);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CC0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v1;
  v3[3] = &type metadata for SyncTaskScheduler;
  v3[4] = &protocol witness table for SyncTaskScheduler;
  sub_19CF0FDD0((uint64_t)v3, 0, (uint64_t)sub_19CF1009C, 0, &v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  result = swift_release();
  qword_1EE465D18 = v0;
  return result;
}

void sub_19CF1009C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  sub_19CE8F0A0(v1, v2);
}

uint64_t static JetEngineTracing.onEnterPointOfInterest.getter()
{
  if (qword_1EE43D6F8 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for JetEngineTracing()
{
  return &type metadata for JetEngineTracing;
}

unint64_t sub_19CF1011C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE441CB0;
  if (!qword_1EE441CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE441CB8);
    result = MEMORY[0x1A1ADBD7C](&unk_19D05E930, v1);
    atomic_store(result, (unint64_t *)&qword_1EE441CB0);
  }
  return result;
}

uint64_t sub_19CF10168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CF101B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441CC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalizerFormattingKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDF080();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for LocalizerFormattingKey(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_19CFDF080();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for LocalizerFormattingKey(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDF080();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for LocalizerFormattingKey(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_19CFDF080();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for LocalizerFormattingKey(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDF080();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for LocalizerFormattingKey(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_19CFDF080();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizerFormattingKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF10654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_19CFDF080();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LocalizerFormattingKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF106AC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_19CFDF080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_19CF106FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CFDF080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_19CF10734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDF080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for LocalizerFormattingKey()
{
  uint64_t result;

  result = qword_1EE441CE8;
  if (!qword_1EE441CE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CF107B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDF080();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _IntentReplayDispatcher.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;

  if (qword_1ECEB2920 != -1)
    swift_once();
  swift_retain();
  v4 = sub_19CF128FC();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_release();
  a2[8] = &type metadata for UserPreferenceIntentReplayDispatcherConfigurationProvider;
  a2[9] = &off_1E3DD8638;
  v11 = swift_allocObject();
  a2[5] = v11;
  *(_BYTE *)(v11 + 16) = v4 & 1;
  *(_BYTE *)(v11 + 17) = HIBYTE(v4) & 1;
  *(_QWORD *)(v11 + 24) = v6;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v10;
  sub_19CF12AE8(a1, (uint64_t)a2);
  v12 = a2[8];
  v13 = a2[9];
  __swift_project_boxed_opaque_existential_1(a2 + 5, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  v15 = type metadata accessor for StandardIntentReplayStorage();
  v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v16 + 120) = 0;
  *(_BYTE *)(v16 + 112) = v14 & 1;
  *(_QWORD *)(v16 + 128) = sub_19CCD3DDC(MEMORY[0x1E0DEE9D8]);
  v19 = v15;
  v20 = &off_1E3DD5AC0;
  *(_QWORD *)&v18 = v16;
  sub_19CCECFE4(a1, qword_1EE437050);
  return sub_19CCD14C4(&v18, (uint64_t)(a2 + 10));
}

uint64_t sub_19CF1097C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t result;
  _OWORD *v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58[2];
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  _OWORD v69[2];
  __int128 v70;
  _OWORD v71[2];
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;

  v61 = sub_19CFE0964();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61, v9);
  v63 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4[8];
  v12 = v4[9];
  __swift_project_boxed_opaque_existential_1(v4 + 5, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_53;
  v16 = sub_19CD3FD1C(v14, v15);
  if ((v17 & 1) == 0)
    goto LABEL_53;
  v18 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v16);
  v20 = *v18;
  v19 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v76 = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v75);
  v22 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, a1, a2);
  *(_QWORD *)&v72 = 47;
  *((_QWORD *)&v72 + 1) = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v22, v23);
  v57 = &v72;
  swift_bridgeObjectRetain();
  v24 = sub_19CD3C1F0(0x7FFFFFFFFFFFFFFFLL, 1, sub_19CD3C68C, (uint64_t)&v58[-4], v20, v19);
  swift_bridgeObjectRelease();
  v25 = sub_19CDFE120(v24);
  swift_bridgeObjectRelease();
  v26 = v25[2];
  v58[0] = a4;
  if (!v26)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    v55 = (_OWORD *)v58[0];
    *(_QWORD *)(v58[0] + 32) = 0;
    *v55 = 0u;
    v55[1] = 0u;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
  }
  v64 = &v73;
  v58[1] = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v25 = sub_19CF81A00(v25);
      v27 = v25[2];
      if (v27)
        goto LABEL_9;
LABEL_52:
      __break(1u);
LABEL_53:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
    }
    v27 = v25[2];
    if (!v27)
      goto LABEL_52;
LABEL_9:
    v28 = v27 - 1;
    v59 = v25 + 4;
    v29 = &v25[4 * v28 + 4];
    v30 = v25;
    v32 = *v29;
    v31 = v29[1];
    v34 = v29[2];
    v33 = v29[3];
    v62 = v30;
    v30[2] = v28;
    sub_19CD436B0((uint64_t)&v75, (uint64_t)&v72);
    sub_19CFE0928();
    sub_19CFE0958();
    sub_19CFE02D4();
    swift_release();
    swift_retain();
    sub_19CFE03D0();
    if (!v74)
    {
LABEL_5:
      swift_release_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
      v25 = v62;
      goto LABEL_6;
    }
    v35 = v32 >> 16;
    v36 = v31 >> 16;
    while (1)
    {
      v37 = v72;
      v70 = v72;
      sub_19CD433C0(v64, v71);
      v68 = v37;
      sub_19CD436B0((uint64_t)v71, (uint64_t)v69);
      if (!*((_QWORD *)&v37 + 1))
      {
        sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
        goto LABEL_12;
      }
      swift_bridgeObjectRetain_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
      v38 = (*((_QWORD *)&v37 + 1) & 0x2000000000000000) != 0
          ? HIBYTE(*((_QWORD *)&v37 + 1)) & 0xFLL
          : v37 & 0xFFFFFFFFFFFFLL;
      v39 = (_QWORD)v37 == v34 && *((_QWORD *)&v37 + 1) == v33;
      v40 = v39 && v35 == 0;
      if (v40 && v38 == v36)
        break;
      LOBYTE(v57) = 0;
      a4 = sub_19CFE058C();
      swift_bridgeObjectRelease();
      if ((a4 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v33 = *((_QWORD *)&v37 + 1);
        v34 = v37;
        goto LABEL_31;
      }
      sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
      swift_bridgeObjectRelease();
LABEL_12:
      sub_19CFE03D0();
      if (!v74)
        goto LABEL_5;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    v25 = v62;
    if (!v62[2])
      break;
LABEL_34:
    *(_QWORD *)&v68 = v34;
    *((_QWORD *)&v68 + 1) = v33;
    sub_19CD436B0((uint64_t)v71, (uint64_t)v69);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    if (swift_dynamicCast())
    {
      v42 = v65;
      v43 = v25[2];
      if (v43)
      {
        v44 = &v59[4 * v43];
        a4 = *(v44 - 4);
        v45 = *(v44 - 3);
        v47 = *(v44 - 2);
        v46 = *(v44 - 1);
        swift_bridgeObjectRetain();
        v48 = MEMORY[0x1A1ADA1C8](42, 0xE100000000000000);
        if (!v46)
          goto LABEL_56;
        if (v47 == v50 && v46 == v51 && a4 >> 16 == v48 >> 16 && v45 >> 16 == v49 >> 16)
        {
          swift_bridgeObjectRelease_n();
LABEL_44:
          if (*(_QWORD *)(v42 + 16))
          {
            sub_19CD436B0(v42 + 32, (uint64_t)&v65);
          }
          else
          {
            v66 = 0u;
            v65 = 0u;
          }
          v25 = v62;
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v66 + 1))
          {
            sub_19CD433C0(&v65, &v68);
            v53 = v25[2];
            if (v53)
              v25[2] = v53 - 1;
            swift_release();
            swift_bridgeObjectRelease();
            sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
            (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
            sub_19CD433C0(&v68, &v75);
            goto LABEL_6;
          }
          sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
          swift_release();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
          swift_bridgeObjectRelease();
          sub_19CCECFE4((uint64_t)&v65, &qword_1ECEB3370);
          v56 = v58[0];
LABEL_61:
          *(_QWORD *)(v56 + 32) = 0;
          *(_OWORD *)v56 = 0u;
          *(_OWORD *)(v56 + 16) = 0u;
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
        }
        LOBYTE(v57) = 0;
        v52 = sub_19CFE058C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v52 & 1) != 0)
          goto LABEL_44;
        swift_bridgeObjectRelease();
        swift_release();
        v56 = v58[0];
      }
      else
      {
        MEMORY[0x1A1ADA1C8](42, 0xE100000000000000);
LABEL_56:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = v58[0];
      }
      sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
    v68 = v70;
    sub_19CD433C0(v71, v69);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
    sub_19CD433C0(v69, &v75);
LABEL_6:
    if (!v25[2])
      goto LABEL_54;
  }
  *(_QWORD *)&v68 = v34;
  *((_QWORD *)&v68 + 1) = v33;
  sub_19CD436B0((uint64_t)v71, (uint64_t)v69);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v67 = 0;
    v66 = 0u;
    v65 = 0u;
    sub_19CCECFE4((uint64_t)&v65, &qword_1EE441D48);
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_19CCECFE4((uint64_t)&v70, &qword_1EE441D68);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
  swift_bridgeObjectRelease();
  sub_19CCD14C4(&v65, v58[0]);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
}

uint64_t sub_19CF1120C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  _QWORD v39[4];
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v44 = sub_19CFDF380();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44, v7);
  v43 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF374();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v42 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v45 = (char *)v39 - v14;
  v15 = sub_19CFDE948();
  MEMORY[0x1E0C80A78](v15, v16);
  v48 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)v39 - v25;
  v28 = v3[8];
  v27 = v3[9];
  __swift_project_boxed_opaque_existential_1(v3 + 5, v28);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 32))(v28, v27);
  v49 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 32);
  v50 = a3;
  v30 = v49(a2, a3);
  LOBYTE(a3) = sub_19CD19780(v30, v31, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = 0;
  if ((a3 & 1) == 0)
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v33(v26, a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D38);
    if (swift_dynamicCast())
    {
      sub_19CCD14C4(&v53, (uint64_t)&v56);
      v51 = 0;
      v52 = 0xE000000000000000;
      v49(a2, v50);
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      __swift_project_boxed_opaque_existential_1(&v56, v57);
      *((_QWORD *)&v54 + 1) = swift_getAssociatedTypeWitness();
      *(_QWORD *)&v55 = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v53);
      sub_19CFDF7F4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D60);
      sub_19CFE02E0();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
      v32 = v51;
LABEL_6:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v56);
      return v32;
    }
    *(_QWORD *)&v55 = 0;
    v53 = 0u;
    v54 = 0u;
    sub_19CCECFE4((uint64_t)&v53, &qword_1EE441D40);
    v34 = v50;
    sub_19CF1097C(a1, a2, v50, (unint64_t)&v53);
    if (*((_QWORD *)&v54 + 1))
    {
      sub_19CCD14C4(&v53, (uint64_t)&v56);
      *(_QWORD *)&v53 = 0;
      *((_QWORD *)&v53 + 1) = 0xE000000000000000;
      v49(a2, v34);
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D60);
      sub_19CFE02E0();
      v32 = v53;
      goto LABEL_6;
    }
    sub_19CCECFE4((uint64_t)&v53, &qword_1EE441D48);
    v33(v22, a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D00);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_19CD568D0(&v53, &v56);
      sub_19CFDE9C0();
      swift_allocObject();
      v36 = sub_19CFDE9B4();
      sub_19CFDE93C();
      sub_19CFDE954();
      __swift_project_boxed_opaque_existential_1(&v56, v57);
      sub_19CFDE9A8();
      v40 = v37;
      sub_19CCC5C88(&qword_1EE441D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      sub_19CFDF368();
      v38 = (char *)&loc_19CF1178C + *((int *)qword_19CF11BB8 + (v40 >> 62));
      v39[3] = a2;
      v39[2] = v36;
      __asm { BR              X10 }
    }
    v54 = 0u;
    v55 = 0u;
    v53 = 0u;
    sub_19CCECFE4((uint64_t)&v53, &qword_1EE441D10);
    return 0;
  }
  return v32;
}

uint64_t _IntentReplayDispatcher.load<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF11BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = sub_19CF1120C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  *(_QWORD *)(v0 + 104) = v2;
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v0 + 112) = AssociatedTypeWitness;
    v6 = dynamic_cast_existential_2_conditional(AssociatedTypeWitness);
    *(_QWORD *)(v0 + 120) = v6;
    *(_QWORD *)(v0 + 128) = v7;
    *(_QWORD *)(v0 + 136) = v8;
    if (v6)
    {
      v9 = *(_QWORD **)(v0 + 96);
      v10 = v9[13];
      v11 = v9[14];
      __swift_project_boxed_opaque_existential_1(v9 + 10, v10);
      v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24) + *(_QWORD *)(v11 + 24));
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v12;
      *v12 = v0;
      v12[1] = sub_19CF11D3C;
      return v16(v3, v4, v10, v11);
    }
    swift_bridgeObjectRelease();
  }
  v14 = *(_QWORD *)(v0 + 64);
  v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF11D3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF11DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  __int128 v8;

  if (*(_QWORD *)(v0 + 160) >> 60 == 15)
  {
    v1 = *(_QWORD *)(v0 + 64);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 120);
    sub_19CFDE930();
    swift_allocObject();
    v8 = *(_OWORD *)(v0 + 128);
    sub_19CFDE924();
    *(_QWORD *)(v0 + 40) = v3;
    *(_OWORD *)(v0 + 48) = v8;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 16));
    sub_19CFDE918();
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 64);
    sub_19CCF4A54(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D00);
    v6 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v5, v6 ^ 1u, 1, v4);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _IntentReplayDispatcher.cache<A>(result:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;

  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[19] = AssociatedTypeWitness;
  v5[20] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF11F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = sub_19CF1120C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  *(_QWORD *)(v0 + 176) = v2;
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 152));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441D00);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_19CD568D0((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_19CFDE9C0();
      swift_allocObject();
      sub_19CFDE9B4();
      v5 = sub_19CFDE9A8();
      v7 = v6;
      v8 = *(_QWORD **)(v0 + 144);
      swift_release();
      *(_QWORD *)(v0 + 184) = v7;
      *(_QWORD *)(v0 + 192) = v5;
      v9 = v8 + 10;
      v10 = v8[13];
      v11 = v8[14];
      __swift_project_boxed_opaque_existential_1(v9, v10);
      v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 16)
                                                                                         + *(_QWORD *)(v11 + 16));
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v12;
      *v12 = v0;
      v12[1] = sub_19CF1218C;
      return v14(v3, v4, v5, v7, v10, v11);
    }
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    swift_bridgeObjectRelease();
    sub_19CCECFE4(v0 + 64, &qword_1EE441D10);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF1218C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF121EC()
{
  uint64_t v0;

  sub_19CD3BE18(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _IntentReplayDispatcher.perform<A, B>(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[17] = a6;
  v7[18] = v6;
  v7[15] = a4;
  v7[16] = a5;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  v7[19] = *(_QWORD *)(a4 - 8);
  v7[20] = swift_task_alloc();
  v8 = sub_19CFDFF5C();
  v7[21] = v8;
  v7[22] = *(_QWORD *)(v8 - 8);
  v7[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF122C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  sub_19CF12AE8(*(_QWORD *)(v0 + 144), v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_19CCD14C4((__int128 *)(v0 + 56), v0 + 16);
    v1 = swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v1;
    *(_QWORD *)v1 = v0;
    *(_QWORD *)(v1 + 8) = sub_19CF123C4;
    v2 = *(_QWORD *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_OWORD *)(v0 + 128);
    *(_QWORD *)(v1 + 96) = *(_QWORD *)(v0 + 144);
    *(_OWORD *)(v1 + 80) = v4;
    *(_QWORD *)(v1 + 64) = v2;
    *(_QWORD *)(v1 + 72) = v3;
    return swift_task_switch();
  }
  else
  {
    sub_19CCECFE4(v0 + 56, qword_1EE437050);
    sub_19CF12B30();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF123C4()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_19CF12430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v1, *(_QWORD *)(v0 + 168));
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
    v8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 16)
                                                                                          + *(_QWORD *)(v5 + 16));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v6;
    *v6 = v0;
    v6[1] = sub_19CF1254C;
    return v8(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 96), v1, v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF1254C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[27] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_19CF125E8;
  return _IntentReplayDispatcher.cache<A>(result:for:)(v2[20], v2[13], v2[16], v2[17]);
}

uint64_t sub_19CF125E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF1263C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 120));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF126A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[19] + 56))(v0[23], 1, 1, v0[15]);
  (*(void (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16)
                                                                                        + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[25] = v3;
  *v3 = v0;
  v3[1] = sub_19CF1254C;
  return v5(v0[20], v0[13], v0[14], v0[16], v0[17], v1, v2);
}

uint64_t sub_19CF12760()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF127A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_19CCBE344;
  return _IntentReplayDispatcher.perform<A, B>(_:asPartOf:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19CF12838(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_19CFDEBA0();
  if (!result || (result = sub_19CFDEBC4(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_19CFDEBB8();
      sub_19CFDF380();
      sub_19CCC5C88(&qword_1EE441D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return sub_19CFDF350();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF128FC()
{
  char v0;
  char v1;

  if (qword_1ECEB2920 != -1)
    swift_once();
  sub_19CD1A8A8(0xD000000000000012, 0x800000019D0769D0);
  sub_19CD1A8A8(0x4D6E496568636163, 0xED000079726F6D65);
  sub_19CDD60D4(0xD000000000000011, 0x800000019D0769F0);
  if (sub_19CDD60F0(0xD000000000000016, 0x800000019D076A10))
    swift_bridgeObjectRelease();
  if (!sub_19CDD610C(0xD000000000000019, 0x800000019D076A30))
    sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  v0 = sub_19CD1A8A8(0xD000000000000012, 0x800000019D0769D0);
  v1 = sub_19CD1A8A8(0x4D6E496568636163, 0xED000079726F6D65);
  sub_19CDD60D4(0xD000000000000011, 0x800000019D0769F0);
  sub_19CDD60F0(0xD000000000000016, 0x800000019D076A10);
  if (!sub_19CDD610C(0xD000000000000019, 0x800000019D076A30))
    sub_19CD2758C(MEMORY[0x1E0DEE9D8]);
  return v0 & 1 | ((v1 & 1) << 8);
}

uint64_t sub_19CF12ABC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF12AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE437050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_19CF12B30()
{
  unint64_t result;

  result = qword_1EE441D20;
  if (!qword_1EE441D20)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D061BC4, &type metadata for IntentReplayDispatcherError);
    atomic_store(result, (unint64_t *)&qword_1EE441D20);
  }
  return result;
}

uint64_t destroy for _IntentReplayDispatcher(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
}

uint64_t initializeWithCopy for _IntentReplayDispatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 80, a2 + 80);
  return a1;
}

uint64_t assignWithCopy for _IntentReplayDispatcher(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for _IntentReplayDispatcher(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for _IntentReplayDispatcher(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _IntentReplayDispatcher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _IntentReplayDispatcher()
{
  return &type metadata for _IntentReplayDispatcher;
}

uint64_t storeEnumTagSinglePayload for IntentReplayDispatcherError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CF12E80 + 4 * byte_19D061AF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CF12EA0 + 4 * byte_19D061AF5[v4]))();
}

_BYTE *sub_19CF12E80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CF12EA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF12EA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF12EB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CF12EB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CF12EC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IntentReplayDispatcherError()
{
  return &type metadata for IntentReplayDispatcherError;
}

unint64_t sub_19CF12EE0()
{
  unint64_t result;

  result = qword_1EE441D30;
  if (!qword_1EE441D30)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D061B9C, &type metadata for IntentReplayDispatcherError);
    atomic_store(result, (unint64_t *)&qword_1EE441D30);
  }
  return result;
}

uint64_t sub_19CF12F24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

JetEngine::PackagingLog::LogTypes __swiftcall PackagingLog.LogTypes.init(rawValue:)(JetEngine::PackagingLog::LogTypes rawValue)
{
  JetEngine::PackagingLog::LogTypes *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t PackagingLog.LogTypes.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static PackagingLog.LogTypes.debug.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PackagingLog.LogTypes.info.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static PackagingLog.LogTypes.warning.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static PackagingLog.LogTypes.error.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void sub_19CF12FB8()
{
  qword_1EE441D70 = 14;
}

uint64_t static PackagingLog.LogTypes.default.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EE43D700 != -1)
    result = swift_once();
  *a1 = qword_1EE441D70;
  return result;
}

_QWORD *sub_19CF1303C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_19CF13050@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_19CF13064@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_19CF13078(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_19CF130A8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_19CF130D4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_19CF130F8(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_19CF1310C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_19CF13120(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_19CF13134@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_19CF13148(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_19CF1315C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_19CF13170(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_19CF13184()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_19CF13194()
{
  return sub_19CFE0064();
}

_QWORD *sub_19CF131AC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_19CF131C4()
{
  uint64_t result;

  if (qword_1EE43D700 != -1)
    result = swift_once();
  qword_1EE441D78 = qword_1EE441D70;
  return result;
}

uint64_t static PackagingLog.enabledLogTypes.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EE43D708 != -1)
    swift_once();
  result = swift_beginAccess();
  *a1 = qword_1EE441D78;
  return result;
}

uint64_t static PackagingLog.enabledLogTypes.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  if (qword_1EE43D708 != -1)
    swift_once();
  result = swift_beginAccess();
  qword_1EE441D78 = v1;
  return result;
}

uint64_t (*static PackagingLog.enabledLogTypes.modify())()
{
  if (qword_1EE43D708 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_19CF13358()
{
  unint64_t result;

  result = qword_1EE441D80;
  if (!qword_1EE441D80)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackagingLog.LogTypes, &type metadata for PackagingLog.LogTypes);
    atomic_store(result, (unint64_t *)&qword_1EE441D80);
  }
  return result;
}

unint64_t sub_19CF133A0()
{
  unint64_t result;

  result = qword_1EE441D88;
  if (!qword_1EE441D88)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackagingLog.LogTypes, &type metadata for PackagingLog.LogTypes);
    atomic_store(result, (unint64_t *)&qword_1EE441D88);
  }
  return result;
}

unint64_t sub_19CF133E8()
{
  unint64_t result;

  result = qword_1EE441D90;
  if (!qword_1EE441D90)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackagingLog.LogTypes, &type metadata for PackagingLog.LogTypes);
    atomic_store(result, (unint64_t *)&qword_1EE441D90);
  }
  return result;
}

unint64_t sub_19CF13430()
{
  unint64_t result;

  result = qword_1EE441D98;
  if (!qword_1EE441D98)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for PackagingLog.LogTypes, &type metadata for PackagingLog.LogTypes);
    atomic_store(result, &qword_1EE441D98);
  }
  return result;
}

ValueMetadata *type metadata accessor for PackagingLog()
{
  return &type metadata for PackagingLog;
}

ValueMetadata *type metadata accessor for PackagingLog.LogTypes()
{
  return &type metadata for PackagingLog.LogTypes;
}

uint64_t sub_19CF13494(uint64_t a1, uint64_t a2)
{
  return sub_19CF134AC(a1, a2, 0);
}

uint64_t sub_19CF1349C(uint64_t a1, uint64_t a2)
{
  return sub_19CF134AC(a1, a2, 2);
}

uint64_t sub_19CF134A4(uint64_t a1, uint64_t a2)
{
  return sub_19CF134AC(a1, a2, 1);
}

uint64_t sub_19CF134AC(uint64_t a1, uint64_t a2, char a3)
{
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;
  char v23;
  _QWORD v24[4];
  _QWORD *v25;

  if (qword_1ECEB0FA0 != -1)
    swift_once();
  v6 = (void *)qword_1ECEB1D40;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v8 = v6;
  v25 = sub_19CD40918(0, 1, 0, MEMORY[0x1E0DEE9D8]);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  v24[3] = MEMORY[0x1E0DEA968];
  v24[0] = a1;
  v24[1] = a2;
  sub_19CD40794((uint64_t)v24, (uint64_t)v20);
  v18 = 0u;
  v19 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
  v23 = 0;
  v21 = v18;
  v22 = v19;
  v10 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[5 * v12];
  v14 = v21;
  v15 = v22;
  *((_BYTE *)v13 + 64) = v23;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v25 = v10;
  sub_19CD3F190((uint64_t)v24);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v7 + 32) = v25;
  *(_QWORD *)&v21 = v8;
  LOBYTE(v18) = a3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF13680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[7] = a3;
  v5[8] = a4;
  v5[5] = a1;
  v5[6] = a2;
  v5[9] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CF136A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[7] = a3;
  v5[8] = a4;
  v5[5] = a1;
  v5[6] = a2;
  v5[9] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CF136C8()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t, char);
  void *v6;
  id v7;
  uint64_t (*v9)(uint64_t);

  if (v0[8])
  {
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    v1 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v2 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
    v3 = (_QWORD *)swift_allocObject();
    v0[10] = v3;
    v3[2] = v2;
    v3[3] = sub_19CD04754;
    v3[4] = 0;

    swift_unknownObjectRelease();
    v9 = (uint64_t (*)(uint64_t))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
    v4 = (_QWORD *)swift_task_alloc();
    v0[11] = v4;
    v5 = sub_19CF138B4;
  }
  else
  {
    sub_19CFDF698();
    v6 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
    v3 = (_QWORD *)swift_allocObject();
    v0[12] = v3;
    v3[2] = v7;
    v3[3] = sub_19CD04754;
    v3[4] = 0;

    swift_unknownObjectRelease();
    v9 = (uint64_t (*)(uint64_t))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
    v4 = (_QWORD *)swift_task_alloc();
    v0[13] = v4;
    v5 = sub_19CCC13F8;
  }
  *v4 = v0;
  v4[1] = v5;
  return v9((uint64_t)v3);
}

uint64_t sub_19CF138B4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_BYTE *)(v3 + 112) = a2;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF13918()
{
  uint64_t v0;
  void *v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);

  if ((*(_BYTE *)(v0 + 112) & 1) == 0)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24), 0);
  sub_19CFDF698();
  v2 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_doubleForKey_, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
  v4 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 96) = v4;
  v4[2] = v3;
  v4[3] = sub_19CD04754;
  v4[4] = 0;

  swift_unknownObjectRelease();
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_19CCC13F8;
  return v6((uint64_t)v4);
}

uint64_t sub_19CF13A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  _QWORD *v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  char v21;
  char v22;

  v5 = *v4;
  v6 = sub_19CD52C60(a1, a2, a3, a4);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = v6 + 8 * v8;
    v10 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v10;
    v12 = objc_msgSend(v5, sel_integerForKey_, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0850);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v12;
    v13[3] = sub_19CD5AED0;
    v13[4] = 0;
    swift_unknownObjectRelease();
    sub_19CD2DA44(v13);
    LOBYTE(v12) = v14;
    swift_bridgeObjectRelease();

    result = swift_release();
    if ((v12 & 1) == 0)
      break;
    if (v7 == ++v8)
      goto LABEL_7;
  }
  if (v7 == v8)
  {
LABEL_7:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
    __break(1u);
  }
  else
  {
    v17 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    v18 = v17;
    v19 = objc_msgSend(v5, sel_integerForKey_, v18);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v19;
    v20[3] = sub_19CD5AED0;
    v20[4] = 0;
    swift_unknownObjectRelease();
    v16 = sub_19CD2DA44(v20);
    v22 = v21;

    result = swift_release();
    if ((v22 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF13C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  _QWORD *v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  char v21;
  char v22;

  v5 = *v4;
  v6 = sub_19CD52C60(a1, a2, a3, a4);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = v6 + 8 * v8;
    v10 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v10;
    v12 = objc_msgSend(v5, sel_doubleForKey_, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v12;
    v13[3] = sub_19CD04754;
    v13[4] = 0;
    swift_unknownObjectRelease();
    sub_19CD2DA44(v13);
    LOBYTE(v12) = v14;
    swift_bridgeObjectRelease();

    result = swift_release();
    if ((v12 & 1) == 0)
      break;
    if (v7 == ++v8)
      goto LABEL_7;
  }
  if (v7 == v8)
  {
LABEL_7:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
    __break(1u);
  }
  else
  {
    v17 = *(void **)(v9 + 32);
    swift_unknownObjectRetain();
    v18 = v17;
    v19 = objc_msgSend(v5, sel_doubleForKey_, v18);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v19;
    v20[3] = sub_19CD04754;
    v20[4] = 0;
    swift_unknownObjectRelease();
    v16 = sub_19CD2DA44(v20);
    v22 = v21;

    result = swift_release();
    if ((v22 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  NSObject *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  double *v46;
  uint64_t v47;
  double v48;
  double v49;
  id v50;
  double v51;
  os_signpost_id_t v52;
  os_log_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  os_log_t v57;
  int v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  double v71;
  uint64_t v72[3];
  _BYTE v73[400];
  _QWORD v74[6];
  char v75;
  void *v76;
  char v77;

  v9 = sub_19CFDF1AC();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14);
  v69 = (char *)&v57 - v15;
  v70 = sub_19CFDF1DC();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a4;
  v20 = a4[1];
  v21 = *(const char **)v4;
  v22 = *(_QWORD *)(v4 + 8);
  v23 = *(unsigned __int8 *)(v4 + 16);
  v62 = v19;
  if (qword_1ECEB0220 != -1)
  {
    v56 = v20;
    swift_once();
    v20 = v56;
    v19 = v62;
  }
  v67 = v18;
  v61 = v13;
  v24 = qword_1ECEB50B8;
  v74[0] = a2;
  v74[1] = a3;
  v74[2] = v19;
  v74[3] = v20;
  v74[4] = v21;
  v74[5] = v22;
  v75 = v23;
  v76 = a1;
  v25 = v19;
  v63 = a2;
  v26 = v20;
  sub_19CF1634C((uint64_t)v74);
  sub_19CD376A0(v74, v73);
  v27 = *(void **)(v24 + 32);
  swift_bridgeObjectRetain();
  v28 = a1;
  objc_msgSend(v27, sel_lock);
  sub_19CD372F8(v24, v73);
  objc_msgSend(v27, sel_unlock);
  swift_bridgeObjectRelease();

  v64 = (char *)v21;
  v60 = v23;
  v29 = sub_19CFE013C();
  v72[0] = v25;
  v72[1] = v26;
  v59 = v26;
  v30 = v63;
  sub_19CD37A18(v29, v31, v63, a3, v72);
  swift_bridgeObjectRelease();
  v32 = a3;
  if (qword_1ECEB0228 != -1)
    swift_once();
  v33 = v70;
  v34 = __swift_project_value_buffer(v70, (uint64_t)qword_1ECEB50C0);
  v35 = v67;
  v36 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v34, v33);
  sub_19CFDF734();
  v37 = v69;
  sub_19CFDF1B8();
  swift_bridgeObjectRetain();
  v38 = a1;
  swift_bridgeObjectRetain();
  v39 = a1;
  v40 = sub_19CFDF1C4();
  v58 = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v66);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v33);
  }
  v57 = v40;
  if ((v60 & 1) != 0)
  {
    v42 = v61;
    if ((unint64_t)v64 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v64 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v43 = v66;
      if (v64 >> 16 <= 0x10)
      {
        v64 = &v77;
        v41 = v65;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  v41 = v65;
  v42 = v61;
  if (!v64)
  {
LABEL_20:

    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v43 = v66;
LABEL_14:
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, v37, v43);
  v45 = swift_slowAlloc();
  v46 = (double *)swift_slowAlloc();
  v47 = swift_slowAlloc();
  v72[0] = v47;
  *(_DWORD *)v45 = 136315650;
  swift_bridgeObjectRetain();
  v71 = COERCE_DOUBLE(sub_19CD37070(v30, v32, v72));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v45 + 12) = 2048;
  v48 = (double)v62;
  v49 = (double)v59;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v71 = v49 / *(double *)&qword_1ECEB2D50 + v48;
  sub_19CFDFFC8();
  *(_WORD *)(v45 + 22) = 2112;
  v50 = a1;
  v51 = COERCE_DOUBLE(_swift_stdlib_bridgeErrorToNSError());
  v71 = v51;
  sub_19CFDFFC8();
  *v46 = v51;

  v52 = sub_19CFDF194();
  v53 = v57;
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v57, (os_signpost_type_t)v58, v52, v64, "id=%s, instant=%f, value=%@", (uint8_t *)v45, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43B500);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v46, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v47, -1, -1);
  MEMORY[0x1A1ADBE9C](v45, -1, -1);

  v54 = v66;
  v55 = *(void (**)(char *, uint64_t))(v65 + 8);
  v55(v69, v66);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v70);
  return ((uint64_t (*)(char *, uint64_t))v55)(v42, v54);
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(uint64_t a1, uint64_t a2, unint64_t a3, double *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  os_signpost_id_t v45;
  os_log_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  os_log_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[2];
  double v69;
  unint64_t v70;
  _BYTE v71[400];
  _QWORD v72[6];
  char v73;
  double v74;
  unint64_t v75;
  char v76;

  v56 = a6;
  v51 = a3;
  v65 = a1;
  v66 = *(_QWORD *)(a5 + 16);
  v67 = a2;
  v61 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v64 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_19CFDF1AC();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52, v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v59 = (char *)&v48 - v14;
  v60 = sub_19CFDF1DC();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60, v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *a4;
  v55 = *((_QWORD *)a4 + 1);
  v19 = *(const char **)v6;
  v18 = *(_QWORD *)(v6 + 8);
  v63 = *(unsigned __int8 *)(v6 + 16);
  if (qword_1ECEB0220 != -1)
    swift_once();
  v57 = v17;
  v50 = v11;
  v20 = qword_1ECEB50B8;
  v21 = v51;
  swift_bridgeObjectRetain();
  sub_19CFDF7F4();
  v72[0] = v67;
  v72[1] = v21;
  v22 = v62;
  *(double *)&v72[2] = v62;
  v23 = v55;
  v72[3] = v55;
  v72[4] = v19;
  v72[5] = v18;
  v73 = v63;
  v74 = v69;
  v75 = v70;
  sub_19CE31518((uint64_t)v72);
  sub_19CD376A0(v72, v71);
  v24 = *(void **)(v20 + 32);
  objc_msgSend(v24, sel_lock);
  sub_19CD372F8(v20, v71);
  objc_msgSend(v24, sel_unlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53 = (char *)v19;
  v25 = sub_19CFE013C();
  v69 = v22;
  v70 = v23;
  sub_19CD37A18(v25, v26, v67, v21, (uint64_t *)&v69);
  swift_bridgeObjectRelease();
  v27 = v66;
  if (qword_1ECEB0228 != -1)
    swift_once();
  v28 = v60;
  v29 = __swift_project_value_buffer(v60, (uint64_t)qword_1ECEB50C0);
  v31 = v57;
  v30 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v29, v28);
  sub_19CFDF734();
  v32 = v59;
  sub_19CFDF1B8();
  v33 = v61;
  v34 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v64, v65, v27);
  swift_bridgeObjectRetain_n();
  v35 = sub_19CFDF1C4();
  LODWORD(v65) = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v27);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v28);
  }
  v49 = v35;
  v36 = v52;
  if ((v63 & 1) != 0)
  {
    v38 = v64;
    if ((unint64_t)v53 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v53 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v27 = *(_QWORD *)&v62;
      if (v53 >> 16 <= 0x10)
      {
        v53 = &v76;
        v37 = v54;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  v37 = v54;
  v38 = v64;
  if (!v53)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v27);
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v27 = *(_QWORD *)&v62;
LABEL_14:
  v40 = v50;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v50, v32, v52);
  v41 = swift_slowAlloc();
  v42 = swift_slowAlloc();
  v68[0] = v42;
  *(_DWORD *)v41 = 136315650;
  swift_bridgeObjectRetain();
  v69 = COERCE_DOUBLE(sub_19CD37070(v67, v21, v68));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v41 + 12) = 2048;
  v43 = (double)v55;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v69 = v43 / *(double *)&qword_1ECEB2D50 + (double)v27;
  sub_19CFDFFC8();
  *(_WORD *)(v41 + 22) = 2080;
  v44 = v66;
  sub_19CFDF7F4();
  v69 = COERCE_DOUBLE(sub_19CD37070(*(uint64_t *)&v69, v70, v68));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v44);
  v45 = sub_19CFDF194();
  v46 = v49;
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v49, (os_signpost_type_t)v65, v45, v53, "id=%s, instant=%f, value=%s", (uint8_t *)v41, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v42, -1, -1);
  MEMORY[0x1A1ADBE9C](v41, -1, -1);

  v47 = *(void (**)(char *, uint64_t))(v54 + 8);
  v47(v59, v36);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v60);
  return ((uint64_t (*)(char *, uint64_t))v47)(v40, v36);
}

uint64_t sub_19CF149C8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(unsigned __int8 *)(result + 376);
  v2 = *(_QWORD *)(result + 96) & 1;
  v3 = *(_QWORD *)(result + 112) & 1;
  v4 = *(_QWORD *)(result + 128) & 0xFF01;
  v5 = *(_QWORD *)(result + 144) & 1;
  v6 = *(_QWORD *)(result + 160) & 1;
  v7 = *(_QWORD *)(result + 176) & 1;
  v8 = *(_QWORD *)(result + 192) & 1;
  v9 = *(_QWORD *)(result + 208) & 1;
  v10 = *(_QWORD *)(result + 224) & 1;
  v11 = *(_QWORD *)(result + 240) & 1;
  v12 = *(_QWORD *)(result + 256) & 1;
  v13 = *(_QWORD *)(result + 272) & 1;
  v14 = *(_QWORD *)(result + 288) & 0xFF01;
  v15 = *(_QWORD *)(result + 304) & 1;
  v16 = *(_QWORD *)(result + 320) & 1;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 112) = v3;
  *(_QWORD *)(result + 128) = v4;
  *(_QWORD *)(result + 144) = v5;
  *(_QWORD *)(result + 160) = v6;
  *(_QWORD *)(result + 176) = v7;
  *(_QWORD *)(result + 192) = v8;
  *(_QWORD *)(result + 208) = v9;
  *(_QWORD *)(result + 224) = v10;
  *(_QWORD *)(result + 240) = v11;
  *(_QWORD *)(result + 256) = v12;
  *(_QWORD *)(result + 272) = v13;
  *(_QWORD *)(result + 288) = v14;
  *(_QWORD *)(result + 304) = v15;
  *(_QWORD *)(result + 320) = v16;
  *(_QWORD *)(result + 376) = v1;
  return result;
}

void PageRenderField<>.init(timestampWithName:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v8;

  sub_19CFE013C();
  v8 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
}

void PageRenderField<>.init(intervalWithBaseName:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v8;
  char v9;

  sub_19CFE013C();
  v8 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    sub_19CFA949C((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  sub_19CFE013C();
  v9 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    sub_19CFA9AC0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
}

void PageRenderField<>.callAsFunction(for:at:)()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(uint64_t a1, uint64_t a2, uint64_t *a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  NSObject *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  double v44;
  os_signpost_id_t v45;
  void (*v46)(_BYTE *, uint64_t);
  uint64_t v47;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63[3];
  _BYTE v64[400];
  _QWORD v65[6];
  char v66;
  double v67;
  char v68;

  v54 = sub_19CFDF1AC();
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54, v9);
  v52 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11, v12);
  v59 = &v48[-v13];
  v60 = sub_19CFDF1DC();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60, v14);
  v16 = &v48[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *a3;
  v17 = a3[1];
  v20 = *(const char **)v4;
  v19 = *(_QWORD *)(v4 + 8);
  v21 = *(unsigned __int8 *)(v4 + 16);
  if (qword_1ECEB0220 != -1)
  {
    v47 = a3[1];
    swift_once();
    v17 = v47;
  }
  v57 = v16;
  v22 = qword_1ECEB50B8;
  v65[0] = a1;
  v65[1] = a2;
  v65[2] = v18;
  v65[3] = v17;
  v65[4] = v20;
  v65[5] = v19;
  v66 = v21;
  v67 = a4;
  v61 = a2;
  v23 = a1;
  v24 = v17;
  sub_19CF165E0((uint64_t)v65);
  sub_19CD376A0(v65, v64);
  v25 = *(void **)(v22 + 32);
  swift_bridgeObjectRetain();
  objc_msgSend(v25, sel_lock);
  sub_19CD372F8(v22, v64);
  objc_msgSend(v25, sel_unlock);
  swift_bridgeObjectRelease();
  v55 = (char *)v20;
  v53 = v21;
  v26 = sub_19CFE013C();
  v50 = v24;
  v51 = v18;
  v63[0] = v18;
  v63[1] = v24;
  v27 = v23;
  sub_19CD37A18(v26, v28, v23, v61, v63);
  swift_bridgeObjectRelease();
  if (qword_1ECEB0228 != -1)
    swift_once();
  v29 = v60;
  v30 = __swift_project_value_buffer(v60, (uint64_t)qword_1ECEB50C0);
  v32 = v57;
  v31 = v58;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v58 + 16))(v57, v30, v29);
  sub_19CFDF734();
  v33 = v59;
  sub_19CFDF1B8();
  swift_bridgeObjectRetain_n();
  v34 = sub_19CFDF1C4();
  v35 = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v33, v54);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v31 + 8))(v32, v29);
  }
  v49 = v35;
  if ((v53 & 1) != 0)
  {
    if ((unint64_t)v55 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v55 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v37 = v54;
      v38 = v52;
      if (v55 >> 16 <= 0x10)
      {
        v55 = &v68;
        v36 = v56;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  v36 = v56;
  if (!v55)
  {
LABEL_20:
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v37 = v54;
  v38 = v52;
LABEL_14:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 16))(v38, v33, v37);
  v40 = swift_slowAlloc();
  v41 = swift_slowAlloc();
  v63[0] = v41;
  *(_DWORD *)v40 = 136315650;
  v42 = v61;
  swift_bridgeObjectRetain();
  v62 = COERCE_DOUBLE(sub_19CD37070(v27, v42, v63));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v40 + 12) = 2048;
  v43 = (double)v51;
  v44 = (double)v50;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v62 = v44 / *(double *)&qword_1ECEB2D50 + v43;
  sub_19CFDFFC8();
  *(_WORD *)(v40 + 22) = 2048;
  v62 = a4;
  sub_19CFDFFC8();
  v45 = sub_19CFDF194();
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v34, (os_signpost_type_t)v49, v45, v55, "id=%s, instant=%f, value=%f", (uint8_t *)v40, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v41, -1, -1);
  MEMORY[0x1A1ADBE9C](v40, -1, -1);

  v46 = *(void (**)(_BYTE *, uint64_t))(v56 + 8);
  v46(v59, v37);
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v57, v60);
  return ((uint64_t (*)(_BYTE *, uint64_t))v46)(v38, v37);
}

void PageRenderField<>.init(enum:withName:)(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
}

uint64_t PageRenderField<>.callAsFunction(_:for:at:)(const void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  const char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  NSObject *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  char *v55;
  os_signpost_id_t v56;
  os_log_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  os_log_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74[3];
  _BYTE v75[400];
  _QWORD v76[43];
  _QWORD v77[50];
  _BYTE v78[400];
  char v79;

  v9 = sub_19CFDF1AC();
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v64 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v69 = (char *)&v60 - v14;
  v15 = sub_19CFDF1DC();
  v71 = *(_QWORD *)(v15 - 8);
  v72 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v70 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v76, a1, sizeof(v76));
  v18 = *a4;
  v19 = a4[1];
  v21 = *(const char **)v4;
  v20 = *(NSObject **)(v4 + 8);
  v22 = *(unsigned __int8 *)(v4 + 16);
  if (qword_1ECEB0220 != -1)
    swift_once();
  v23 = qword_1ECEB50B8;
  v77[0] = a2;
  v77[1] = a3;
  v77[2] = v18;
  v77[3] = v19;
  v77[4] = v21;
  v77[5] = v20;
  LOBYTE(v77[6]) = v22;
  v65 = v20;
  v24 = v19;
  memcpy(&v77[7], a1, 0x158uLL);
  memcpy(v78, v77, sizeof(v78));
  sub_19CF166BC((uint64_t)v78);
  sub_19CD376A0(v78, v75);
  v25 = a2;
  v26 = *(void **)(v23 + 32);
  swift_bridgeObjectRetain();
  sub_19CE6BB1C((uint64_t)v76);
  objc_msgSend(v26, sel_lock);
  sub_19CD372F8(v23, v75);
  objc_msgSend(v26, sel_unlock);
  sub_19CF16798((uint64_t)v77);
  v66 = (char *)v21;
  LODWORD(v65) = v22;
  v27 = sub_19CFE013C();
  v61 = v24;
  v62 = v18;
  v74[0] = v18;
  v74[1] = v24;
  sub_19CD37A18(v27, v28, v25, a3, v74);
  swift_bridgeObjectRelease();
  v29 = a3;
  if (qword_1ECEB0228 != -1)
    swift_once();
  v30 = v72;
  v31 = __swift_project_value_buffer(v72, (uint64_t)qword_1ECEB50C0);
  v33 = v70;
  v32 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v31, v30);
  sub_19CFDF734();
  v34 = v69;
  sub_19CFDF1B8();
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  sub_19CE6BB1C((uint64_t)v76);
  swift_bridgeObjectRetain();
  sub_19CE6BB1C((uint64_t)v76);
  swift_bridgeObjectRetain();
  sub_19CE6BB1C((uint64_t)v76);
  v35 = sub_19CFDF1C4();
  v63 = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {
    sub_19CE6BB90((uint64_t)v76);

    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v34, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v30);
  }
  if ((v65 & 1) != 0)
  {
    v37 = v64;
    if ((unint64_t)v66 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v66 >> 11 == 27)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v38 = v68;
      if (v66 >> 16 <= 0x10)
      {
        v66 = &v79;
        v36 = v67;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
  v36 = v67;
  v37 = v64;
  if (!v66)
  {
LABEL_46:
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    sub_19CE6BB90((uint64_t)v76);
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v38 = v68;
LABEL_14:
  v65 = v35;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v37, v34, v38);
  v40 = swift_slowAlloc();
  v41 = swift_slowAlloc();
  v74[0] = v41;
  *(_DWORD *)v40 = 136317954;
  swift_bridgeObjectRetain();
  v73 = COERCE_DOUBLE(sub_19CD37070(v25, v29, v74));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v40 + 12) = 2048;
  v42 = (double)v62;
  v43 = (double)v61;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v73 = v43 / *(double *)&qword_1ECEB2D50 + v42;
  sub_19CFDFFC8();
  *(_WORD *)(v40 + 22) = 2080;
  if (v76[1])
    v44 = v76[0];
  else
    v44 = 0;
  if (v76[1])
    v45 = v76[1];
  else
    v45 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v73 = COERCE_DOUBLE(sub_19CD37070(v44, v45, v74));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 32) = 2080;
  if (v76[3])
    v46 = v76[2];
  else
    v46 = 0;
  if (v76[3])
    v47 = v76[3];
  else
    v47 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v73 = COERCE_DOUBLE(sub_19CD37070(v46, v47, v74));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 42) = 2048;
  v48 = *(double *)&v76[4];
  if (LOBYTE(v76[5]))
    v48 = 0.0;
  v73 = v48;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 52) = 2048;
  v49 = *(double *)&v76[6];
  if (LOBYTE(v76[7]))
    v49 = 0.0;
  v73 = v49;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 62) = 2048;
  v50 = *(double *)&v76[8];
  if (LOBYTE(v76[9]))
    v50 = 0.0;
  v73 = v50;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 72) = 1024;
  sub_19CE6BB90((uint64_t)v76);
  LODWORD(v73) = BYTE1(v76[9]) & 1;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 78) = 2048;
  v51 = *(double *)&v76[10];
  if (LOBYTE(v76[11]))
    v51 = 0.0;
  v73 = v51;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 88) = 2048;
  v52 = *(double *)&v76[12];
  if (LOBYTE(v76[13]))
    v52 = 0.0;
  v73 = v52;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 98) = 2048;
  v53 = *(double *)&v76[14];
  if (LOBYTE(v76[15]))
    v53 = 0.0;
  v73 = v53;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  *(_WORD *)(v40 + 108) = 2048;
  v54 = *(double *)&v76[16];
  if (LOBYTE(v76[17]))
    v54 = 0.0;
  v73 = v54;
  sub_19CFDFFC8();
  sub_19CE6BB90((uint64_t)v76);
  sub_19CE6BB90((uint64_t)v76);
  v55 = v64;
  v56 = sub_19CFDF194();
  v57 = v65;
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v65, (os_signpost_type_t)v63, v56, v66, "id=%s, instant=%f, clientCorrelationKey=%s, pageURL=%s, requestStartTime=%f, responseStartTime=%f, responseEndTime=%f, responseWasCached=%{BOOL}d, parseStartTime=%f, parseEndTime=%f, modelConstructionStartTime=%f, modelConstructionEndTime=%f", (uint8_t *)v40, 0x76u);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v41, -1, -1);
  MEMORY[0x1A1ADBE9C](v40, -1, -1);

  v58 = v68;
  v59 = *(void (**)(char *, uint64_t))(v67 + 8);
  v59(v69, v68);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  return ((uint64_t (*)(char *, uint64_t))v59)(v55, v58);
}

uint64_t _s9JetEngine15PageRenderFieldVAASbRszrlE12flagWithNameACySbGs12StaticStringV_tcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
  return result;
}

JetEngine::PagePreloadStatus __swiftcall PagePreloadStatus.init(rawValue:)(JetEngine::PagePreloadStatus rawValue)
{
  JetEngine::PagePreloadStatus *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t PagePreloadStatus.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static PagePreloadStatus.full.getter(_QWORD *a1@<X8>)
{
  *a1 = 1819047270;
  a1[1] = 0xE400000000000000;
}

void static PagePreloadStatus.visible.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x656C6269736976;
  a1[1] = 0xE700000000000000;
}

void static PagePreloadStatus.partial.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616974726170;
  a1[1] = 0xE700000000000000;
}

void static PagePreloadStatus.previouslyShown.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x73756F6976657270;
  a1[1] = 0xEF6E776F6853796CLL;
}

void sub_19CF15C1C()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1ECEAFF20 = "interstitialPageAppearTime";
  *((_QWORD *)&xmmword_1ECEAFF20 + 1) = 26;
  byte_1ECEAFF30 = 2;
  qword_1ECEAFF38 = 0;
  byte_1ECEAFF40 = 1;
}

double static PageRenderField<>._interstitialPageAppearTime.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;
  double result;

  if (qword_1ECEAFF48 != -1)
    swift_once();
  v2 = byte_1ECEAFF30;
  v3 = qword_1ECEAFF38;
  v4 = byte_1ECEAFF40;
  result = *(double *)&xmmword_1ECEAFF20;
  *(_OWORD *)a1 = xmmword_1ECEAFF20;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

void sub_19CF15D28()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1ECEB51A0 = "pageEndTime";
  *((_QWORD *)&xmmword_1ECEB51A0 + 1) = 11;
  byte_1ECEB51B0 = 2;
  qword_1ECEB51B8 = 0;
  byte_1ECEB51C0 = 1;
}

void sub_19CF15DC8()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1ECEB5128 = "pageInterruptTime";
  *((_QWORD *)&xmmword_1ECEB5128 + 1) = 17;
  byte_1ECEB5138 = 2;
  qword_1ECEB5140 = 0;
  byte_1ECEB5148 = 1;
}

void sub_19CF15E68()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1ECEB5100 = "pageReappearTime";
  *((_QWORD *)&xmmword_1ECEB5100 + 1) = 16;
  byte_1ECEB5110 = 2;
  qword_1ECEB5118 = 0;
  byte_1ECEB5120 = 1;
}

void sub_19CF15F08()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1EE465BF8 = "primaryDataFetchStartTime";
  *((_QWORD *)&xmmword_1EE465BF8 + 1) = 25;
  byte_1EE465C08 = 2;
  qword_1EE465C10 = 0;
  byte_1EE465C18 = 1;
}

void sub_19CF15FA8()
{
  char v0;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    sub_19CFAA0E4((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x31uLL);
  *(_QWORD *)&xmmword_1EE465D20 = "primaryDataSecureConnectionStartTime";
  *((_QWORD *)&xmmword_1EE465D20 + 1) = 36;
  byte_1EE465D30 = 2;
  qword_1EE465D38 = 0;
  byte_1EE465D40 = 1;
}

void sub_19CF16048()
{
  char v0;
  char v1;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
    sub_19CFA949C((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  sub_19CFE013C();
  v1 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    sub_19CFA9AC0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  *(_QWORD *)&xmmword_1EE465D48 = "primaryDataConnection";
  *((_QWORD *)&xmmword_1EE465D48 + 1) = 21;
  byte_1EE465D58 = 2;
  qword_1EE465D60 = 0;
  byte_1EE465D68 = 1;
}

void sub_19CF16154()
{
  char v0;
  char v1;

  sub_19CFE013C();
  v0 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
    sub_19CFA949C((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x54uLL);
  sub_19CFE013C();
  v1 = sub_19CFDF728();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    sub_19CFA9AC0((unint64_t)"JetEngine/PageRenderField.swift", 0x1FuLL, 2, 0x56uLL);
  *(_QWORD *)&xmmword_1EE465D70 = "primaryDataDomainLookup";
  *((_QWORD *)&xmmword_1EE465D70 + 1) = 23;
  byte_1EE465D80 = 2;
  qword_1EE465D88 = 0;
  byte_1EE465D90 = 1;
}

char *sub_19CF16260()
{
  char v1;

  return &v1;
}

uint64_t sub_19CF16270(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0x2000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF1634C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0xE000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF16428(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0x4000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF16504(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0x6000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF165E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0x8000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF166BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0xC000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CF16798(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CF16820(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_19CF16840(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PagePreloadStatus()
{
  return &type metadata for PagePreloadStatus;
}

uint64_t sub_19CF16880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  _BYTE v21[128];
  uint64_t v22;
  unint64_t v23;

  v4 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = sub_19CFDE864();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2
    || a1 == 42 && a2 == 0xE100000000000000
    || (sub_19CFE06A0() & 1) != 0
    || !a1 && a2 == 0xE000000000000000
    || (sub_19CFE06A0() & 1) != 0)
  {
    return 10798;
  }
  swift_bridgeObjectRetain();
  if ((sub_19CFDF71C() & 1) != 0 || (sub_19CFDF728() & 1) != 0)
  {
    if ((sub_19CFDF71C() & 1) == 0 || (sub_19CFDF728() & 1) == 0)
    {
      sub_19CFDE828();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19D052350;
      *(_QWORD *)(inited + 32) = sub_19CFDF578();
      *(_QWORD *)(inited + 40) = v13;
      v22 = 0;
      v23 = 0xE000000000000000;
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      v22 = 0x206E726574746150;
      v23 = 0xE800000000000000;
      sub_19CFDF698();
      sub_19CFDF698();
      v14 = v22;
      v15 = v23;
      v16 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 48) = v14;
      *(_QWORD *)(inited + 56) = v15;
      *(_QWORD *)(inited + 80) = sub_19CFDF578();
      *(_QWORD *)(inited + 88) = v17;
      *(_QWORD *)(inited + 120) = v16;
      *(_QWORD *)(inited + 96) = a1;
      *(_QWORD *)(inited + 104) = a2;
      sub_19CD30650(inited);
      sub_19CEDD8AC();
      sub_19CFDEC84();
      sub_19CFDE81C();
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
      return swift_willThrow();
    }
    v22 = 94;
    v23 = 0xE100000000000000;
    sub_19CFDF698();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = 94;
    v23 = 0xE100000000000000;
    v18 = (void *)objc_opt_self();
    v19 = (void *)sub_19CFDF554();
    v20 = objc_msgSend(v18, sel_escapedPatternForString_, v19);

    sub_19CFDF578();
    sub_19CFDF698();
  }
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v22;
}

uint64_t sub_19CF16BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ECEB2540 != -1)
    swift_once();
  v1 = qword_1ECEB23C0;
  v0 = *(_QWORD *)algn_1ECEB23C8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D052350;
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 56) = 0x800000019D076C50;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v3 = sub_19CFDF4F4();
  v5 = v4;
  swift_bridgeObjectRelease();
  qword_1EE43BAC0 = v3;
  unk_1EE43BAC8 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF16CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (qword_1EE43BE18 != -1)
    swift_once();
  v1 = qword_1EE43BAC0;
  v0 = unk_1EE43BAC8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D052350;
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = v0;
  strcpy((char *)(v2 + 48), "isAllowedStub");
  *(_WORD *)(v2 + 62) = -4864;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB24E8);
  sub_19CCF5B68();
  v3 = sub_19CFDF4F4();
  v5 = v4;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  qword_1EE43BE20 = v3;
  *(_QWORD *)algn_1EE43BE28 = v5;
  return result;
}

uint64_t sub_19CF16E08()
{
  _BYTE *v0;
  os_unfair_lock_s *v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  if (qword_1ECEB1958 != -1)
    swift_once();
  v0 = (char *)off_1ECEB1948 + 16;
  v1 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_19CD3EA18(v0, &v7);
  os_unfair_lock_unlock(v1);
  v2 = v7;
  swift_release();
  if (v2 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0)
      return 2;
  }
  else if ((v2 & 1) == 0)
  {
    return 2;
  }
  if (qword_1ECEB2920 != -1)
    swift_once();
  if (qword_1EE43BBA0 != -1)
    swift_once();
  v4 = qword_1EE43BE20;
  v5 = *(_QWORD *)algn_1EE43BE28;
  swift_bridgeObjectRetain();
  v6 = sub_19CD1A8A8(v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t getEnumTagSinglePayload for MetricsDiagnosticsAndUsage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsDiagnosticsAndUsage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF17038 + 4 * byte_19D061E85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF1706C + 4 * asc_19D061E80[v4]))();
}

uint64_t sub_19CF1706C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF17074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF1707CLL);
  return result;
}

uint64_t sub_19CF17088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF17090);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF17094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF1709C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsDiagnosticsAndUsage()
{
  return &type metadata for MetricsDiagnosticsAndUsage;
}

uint64_t *sub_19CF170B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  swift_unknownObjectWeakCopyAssign();
  v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CF17104(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_19CF17158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t *sub_19CF171CC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return IntentDispatcher.dispatch<A>(intent:jsonContext:)(a1, a2, a5, a3, a6, a4);
}

uint64_t *IntentDispatcher.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  _QWORD *v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v50 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v53 = a5;
  v54 = v9;
  v52 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v49 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for _IntentAsJSIntentModel(0, v11, v12, v11);
  v13 = *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64);
  v14 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48, v15);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v44 - v18;
  v20 = *a2;
  v45 = a6;
  v46 = (char *)&v44 - v18;
  v44 = a4;
  sub_19CDD7A7C(a4, (uint64_t)&v44 - v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2F20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 64) = &type metadata for JSONContext;
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 32) = &type metadata for JSONContext;
  sub_19CD249F0();
  swift_bridgeObjectRetain();
  v55 = sub_19CFDF3F8();
  sub_19CD23D8C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v22 = v55;
  type metadata accessor for BaseObjectGraph();
  v23 = (_QWORD *)swift_allocObject();
  v23[3] = 0xD00000000000001DLL;
  v23[4] = 0x800000019D076C70;
  v23[2] = v22;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v47 = type metadata accessor for Promise(0, AssociatedTypeWitness, v25, v26);
  v27 = v54;
  v29 = v49;
  v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v49, v51, v50);
  v30 = v14;
  v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v32 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v19;
  v34 = v48;
  v31(v32, v33, v48);
  v35 = (*(unsigned __int8 *)(v27 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v36 = v30;
  v37 = (v52 + *(unsigned __int8 *)(v30 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v38 = (v13 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (char *)swift_allocObject();
  v40 = v44;
  *((_QWORD *)v39 + 2) = v28;
  *((_QWORD *)v39 + 3) = v40;
  v41 = v45;
  *((_QWORD *)v39 + 4) = v53;
  *((_QWORD *)v39 + 5) = v41;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v39[v35], v29, v28);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v39[v37], v32, v34);
  *(_QWORD *)&v39[v38] = v23;
  v42 = Promise.__allocating_init(task:)((uint64_t)&unk_1EE441DB8, (uint64_t)v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v46, v34);
  return v42;
}

uint64_t sub_19CF174F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v13;
  *v13 = v9;
  v13[1] = sub_19CCBE344;
  v13[4] = a8;
  v13[5] = v8;
  v13[2] = a1;
  v13[3] = a7;
  return swift_task_switch();
}

uint64_t IntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[4] = a7;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a4;
  return swift_task_switch();
}

uint64_t sub_19CF17580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v5 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v5;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v2);
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_2Tm, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF175DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_19CD579FC;
  v16[18] = a5;
  v16[19] = v7;
  v16[16] = a4;
  v16[17] = a7;
  v16[14] = a3;
  v16[15] = a6;
  v16[12] = a1;
  v16[13] = a2;
  return swift_task_switch();
}

uint64_t IntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[18] = a7;
  v8[19] = v7;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a3;
  v8[15] = a4;
  v8[12] = a1;
  v8[13] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF1769C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t (*v8)(_QWORD *, _QWORD *, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);

  v1 = v0[17];
  (*(void (**)(_QWORD, _QWORD))(v0[18] + 40))(v0[16], v0[18]);
  v3 = v0[5];
  v2 = v0[6];
  v4 = __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v8 = (uint64_t (*)(_QWORD *, _QWORD *, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[20] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *v5 = v0;
  v5[1] = sub_19CF1778C;
  return v8(v0 + 7, v4, v0[14], AssociatedTypeWitness, v3, v2, v0[15], v0[17]);
}

uint64_t sub_19CF1778C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF177F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16)
                                                                                        + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[22] = v3;
  *v3 = v0;
  v3[1] = sub_19CF1787C;
  return v5(v0[12], v0[13], v0[14], v0[16], v0[18], v1, v2);
}

uint64_t sub_19CF1787C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF178E0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF17920()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF17954()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t IntentDispatcher.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t v12;

  v12 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v10 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, &v12, a3, a5, a2, a4);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_19CF17A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8[3] = a6;
  v8[4] = a8;
  v8[2] = a1;
  type metadata accessor for _UncheckedSendableIntentReturnType(0, a6, a8, a4);
  v15 = swift_task_alloc();
  v8[5] = v15;
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 16)
                                                                                              + *(_QWORD *)(a7 + 16));
  v16 = (_QWORD *)swift_task_alloc();
  v8[6] = v16;
  v18 = type metadata accessor for _IntentAsJSIntentModel(0, a6, a8, v17);
  v19 = MEMORY[0x1A1ADBD7C](&unk_19D053E54, v18);
  *v16 = v8;
  v16[1] = sub_19CF17B2C;
  return v21(v15, a3, a4, v18, v19, a5, a7);
}

uint64_t sub_19CF17B2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF17B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v2, v1, AssociatedTypeWitness);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF17BFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF17C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _IntentAsJSIntentModel(0, v6, *((_QWORD *)v4 + 5), a4)- 8)+ 80);
  v11 = (v8 + v9 + v10) & ~v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(&v4[v8], v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(&v4[v11], v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF17CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = v4[5];
  v11 = *(_QWORD *)(v7 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(type metadata accessor for _IntentAsJSIntentModel(0, v8, v10, a4) - 8);
  v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = (uint64_t)v4 + v12;
  v17 = (uint64_t)v4 + v15;
  v18 = *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFF8));
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v19;
  *v19 = v5;
  v19[1] = sub_19CD579FC;
  return sub_19CF17A24(a1, v16, v17, v18, v7, v8, v9, v10);
}

uint64_t dispatch thunk of IntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 8) + *(_QWORD *)(a8 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_19CCBE344;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 16)
                                                                                              + *(_QWORD *)(a7 + 16));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_19CD579FC;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of IntentDispatcher.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_19CF17F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v20;
  _UNKNOWN **v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E48);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &type metadata for JSRequestIntent;
  v21 = &protocol witness table for JSRequestIntent;
  v19 = swift_allocObject();
  sub_19CCF9BF0(a1, v19 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E40);
  v13 = swift_dynamicCast();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v13)
  {
    v14(v7, 0, 1, v8);
    sub_19CCC290C((uint64_t)v7, (uint64_t)v12, &qword_1EE441E50);
    sub_19CCFE8AC((uint64_t)v12, a2, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
    v15 = type metadata accessor for JSIntentResult();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
  else
  {
    v14(v7, 1, 1, v8);
    sub_19CCECFE4((uint64_t)v7, &qword_1EE441E48);
    v17 = type metadata accessor for JSIntentResult();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

uint64_t sub_19CF180F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[74] = v3;
  v4[73] = a3;
  v4[72] = a2;
  v4[71] = a1;
  v5 = type metadata accessor for JSIntentResult();
  v4[75] = v5;
  v4[76] = *(_QWORD *)(v5 - 8);
  v4[77] = swift_task_alloc();
  v4[78] = type metadata accessor for JSResponse();
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  v4[81] = type metadata accessor for PageRenderEvent();
  v4[82] = swift_task_alloc();
  v4[83] = swift_task_alloc();
  v4[84] = type metadata accessor for JSStack.DecoratedIntent();
  v4[85] = swift_task_alloc();
  v4[86] = swift_task_alloc();
  v4[87] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CA80);
  v4[88] = swift_task_alloc();
  v6 = type metadata accessor for PageIntentInstrumentation();
  v4[89] = v6;
  v4[90] = *(_QWORD *)(v6 - 8);
  v4[91] = swift_task_alloc();
  v4[92] = swift_task_alloc();
  v4[93] = swift_task_alloc();
  v4[94] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E38);
  v4[95] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF1829C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 600);
  sub_19CF17F44(*(_QWORD *)(v0 + 576), v1);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  v5 = *(_QWORD *)(v0 + 760);
  if (v4 == 1)
  {
    sub_19CCECFE4(v5, &qword_1EE441E38);
    if (qword_1ECEB1330 != -1)
      swift_once();
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 584);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 768) = v6;
    *v6 = v0;
    v6[1] = sub_19CF184A4;
    return sub_19CFE0A84();
  }
  else
  {
    sub_19CCFE8AC(v5, *(_QWORD *)(v0 + 568), (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CF184A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 776) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF18508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 704);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 720) + 48))(v1, 1, *(_QWORD *)(v0 + 712)) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_19CCECFE4(v1, &qword_1EE43CA80);
  }
  else
  {
    sub_19CCFE8AC(v1, *(_QWORD *)(v0 + 752), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  }
  sub_19CCF9BF0(*(_QWORD *)(v0 + 576), v0 + 160);
  *(_QWORD *)(v0 + 472) = &type metadata for JSRequestIntent;
  *(_QWORD *)(v0 + 480) = &protocol witness table for JSRequestIntent;
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 448) = v2;
  sub_19CCF9BF0(v0 + 160, v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E40);
  if (swift_dynamicCast())
  {
    sub_19CD33A94(v0 + 160);
    v3 = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 304) = v3;
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 329) = *(_OWORD *)(v0 + 265);
LABEL_8:
    v4 = *(_QWORD *)(v0 + 584);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
    *(_QWORD *)(v0 + 552) = v4;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 784) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BDB8);
    *v5 = v0;
    v5[1] = sub_19CF18938;
    return sub_19CFE0A84();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A6D8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CD33A94(v0 + 160);
    sub_19CD568D0((__int128 *)(v0 + 352), (_OWORD *)(v0 + 288));
    *(_QWORD *)(v0 + 336) = 0;
    *(_BYTE *)(v0 + 344) = 1;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v0 + 752);
  sub_19CE8E210();
  swift_allocError();
  *v8 = 2;
  swift_willThrow();
  sub_19CD33A94(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 448);
  sub_19CCEACE4(v7, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF18848()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF18938()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 792) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF1899C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  __int128 v21;
  uint64_t v22;

  if ((*(_BYTE *)(v0 + 537) & 1) == 0 && (*(_BYTE *)(v0 + 536) & 1) == 0)
  {
    *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v0 + 344) = 0;
  }
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v22 = *(_QWORD *)(v0 + 688);
  v4 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 672);
  sub_19CD3839C(v0 + 288, v0 + 400);
  sub_19CD33A50(v1, v2);
  v21 = *(_OWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 424);
  v7 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 400), v6);
  *(_OWORD *)(v4 + 24) = v21;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v4);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v6);
  v9 = *(_QWORD *)(v0 + 424);
  v10 = *(_QWORD *)(v0 + 440);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 400), v9);
  *(_QWORD *)(v4 + 40) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  *(_QWORD *)(v4 + 48) = v11;
  sub_19CCFE8AC(v2, v4 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  sub_19CCFE8AC(v4, v22, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 400);
  sub_19CD33A50(v1, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v13 = *(_QWORD *)(v0 + 736);
  if (EnumCaseMultiPayload)
  {
    sub_19CCEACE4(v13, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 664);
    v17 = *(_QWORD *)(v0 + 648);
    sub_19CCFE8AC(v13, v16, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
    v18 = (uint64_t *)(v16 + *(int *)(v17 + 24));
    v14 = *v18;
    v15 = v18[1];
    swift_bridgeObjectRetain();
    sub_19CCEACE4(v16, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  }
  *(_QWORD *)(v0 + 808) = v15;
  *(_QWORD *)(v0 + 800) = v14;
  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 584);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 816) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D330);
  *v19 = v0;
  v19[1] = sub_19CF18CF0;
  return sub_19CFE0A84();
}

uint64_t sub_19CF18BE4()
{
  uint64_t v0;

  sub_19CCEACE4(*(_QWORD *)(v0 + 752), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  sub_19CD33A94(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF18CF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF18D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v0 + 832) = *(_QWORD *)(v0 + 824);
  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 688);
  v4 = *(_QWORD *)(v0 + 592);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 288), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(_QWORD *)(v0 + 840) = sub_19CE64140(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(_QWORD *)(v0 + 336), *(unsigned __int8 *)(v0 + 344), v3, v2, v1, (_QWORD *)(v0 + 488), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF18E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v0 + 520) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_QWORD *)(v0 + 832) = 0;
  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 688);
  v4 = *(_QWORD *)(v0 + 592);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 288), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(_QWORD *)(v0 + 840) = sub_19CE64140(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(_QWORD *)(v0 + 336), *(unsigned __int8 *)(v0 + 344), v3, v2, v1, (_QWORD *)(v0 + 488), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CF18F58()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[79];
  v0[2] = v0;
  v0[3] = sub_19CF18FD4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD3810C();
  sub_19CCECFE4(v1, &qword_1ECEB1270);
  return swift_continuation_await();
}

uint64_t sub_19CF18FD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 848) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CCFE8AC(*(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 640), (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
  return swift_task_switch();
}

uint64_t sub_19CF19054()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  timespec v21;
  timespec v22;

  v1 = v0[104];
  v2 = v0[80];
  v3 = v0[77];
  v4 = (void (*)(uint64_t))v0[73];
  swift_release();
  v5 = swift_bridgeObjectRetain();
  sub_19CD33764(v5);
  swift_bridgeObjectRelease();
  sub_19CF19578(v2, v4, v3);
  v6 = v0[94];
  if (v1)
  {
    v7 = v0[86];
    sub_19CCEACE4(v0[80], (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
    sub_19CCECFE4((uint64_t)(v0 + 61), &qword_1EE43D330);
    sub_19CCEACE4(v7, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
    sub_19CCEACE4(v6, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    sub_19CD33A94((uint64_t)(v0 + 36));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_19CD33A50(v0[94], v0[91]);
    if (swift_getEnumCaseMultiPayload())
    {
      v9 = v0[94];
      v10 = v0[91];
      v11 = v0[86];
      sub_19CCEACE4(v0[80], (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
      sub_19CCECFE4((uint64_t)(v0 + 61), &qword_1EE43D330);
      sub_19CCEACE4(v11, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
      sub_19CCEACE4(v9, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
      v12 = v10;
    }
    else
    {
      sub_19CCFE8AC(v0[91], v0[82], (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
      if (qword_1EE43A5F0 != -1)
        swift_once();
      v13 = v0[94];
      v14 = v0[86];
      v15 = v0[82];
      v16 = v0[80];
      v17 = (uint64_t *)(v15 + *(int *)(v0[81] + 24));
      v18 = *v17;
      v19 = v17[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(&v21);
      v22 = v21;
      PageRenderField<>.endTime(for:at:)(v18, v19, &v22.tv_sec);
      swift_bridgeObjectRelease();
      sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
      sub_19CCEACE4(v16, (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
      sub_19CCECFE4((uint64_t)(v0 + 61), &qword_1EE43D330);
      sub_19CCEACE4(v14, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
      v12 = v13;
    }
    sub_19CCEACE4(v12, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    sub_19CCFE8AC(v0[77], v0[71], (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
    sub_19CD33A94((uint64_t)(v0 + 36));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_19CF19438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 688);
  swift_release();
  sub_19CCECFE4(v0 + 488, &qword_1EE43D330);
  sub_19CCEACE4(v2, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
  sub_19CCEACE4(v1, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  sub_19CD33A94(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF19578@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void (*v23)(uint64_t *, void (**)(uint64_t), int *, uint64_t);
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  void (*v42[3])(uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);

  v39 = a3;
  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDEA44();
  v38 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for JSIntentResult();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB1330 != -1)
    swift_once();
  v42[0] = a2;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  v17 = swift_bridgeObjectRetain();
  sub_19CD33F84(v17, v42);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  v18 = v42[0];
  if (!v42[0])
    v18 = (void (*)(uint64_t))sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v19 = swift_conformsToProtocol2();
  if (v19)
    v20 = v19;
  else
    v20 = 0;
  if (v19)
    v21 = v13;
  else
    v21 = 0;
  if (!v21)
  {
    v37 = v9;
    v25 = swift_conformsToProtocol2();
    if (v25)
      v26 = v25;
    else
      v26 = 0;
    if (v25)
      v27 = (uint64_t)v13;
    else
      v27 = 0;
    if (!v27)
    {
      swift_bridgeObjectRelease();
      v29 = type metadata accessor for JSResponse();
      v30 = v40;
      v31 = v37;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      v32(v12, v40 + *(int *)(v29 + 20), v37);
      sub_19CD47288(v30 + *(int *)(v29 + 24), (uint64_t)v8);
      v32(v16, (uint64_t)v12, v31);
      sub_19CD47288((uint64_t)v8, (uint64_t)&v16[v13[5]]);
      v33 = MEMORY[0x1E0DEE9D8];
      v42[0] = (void (*)(uint64_t))sub_19CD30650(MEMORY[0x1E0DEE9D8]);
      v34 = sub_19CF61748((uint64_t)v8, (uint64_t *)v42);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v16[v13[6]] = v34;
      JSONObject.subscript.getter(0xD000000000000013, 0x800000019D072120, (uint64_t)v42);
      v35 = sub_19CD30650(v33);
      v36 = sub_19CD30784((uint64_t)v42, v35);
      sub_19CCECFE4((uint64_t)v8, &qword_1ECEB2208);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v31);
      *(_QWORD *)&v16[v13[7]] = v36;
      return sub_19CCFE8AC((uint64_t)v16, v39, (uint64_t (*)(_QWORD))type metadata accessor for JSIntentResult);
    }
    type metadata accessor for JSResponse();
    v41[0] = (uint64_t)v18;
    v43 = v27;
    v44 = v26;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v42);
    JSONObject.decode<A>(_:using:)(v27, v41);
    swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_19CCD5B84((uint64_t)v42, (uint64_t)v41);
      v24 = &qword_1EE43FE10;
      goto LABEL_25;
    }
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v42);
  }
  v22 = type metadata accessor for JSResponse();
  sub_19CD3E448(v40 + *(int *)(v22 + 24), (uint64_t)v41);
  v45 = v18;
  v23 = *(void (**)(uint64_t *, void (**)(uint64_t), int *, uint64_t))(v20 + 8);
  v43 = (uint64_t)v21;
  v44 = v20;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v42);
  v23(v41, &v45, v21, v20);
  if (v3)
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v42);
  sub_19CCD5B84((uint64_t)v42, (uint64_t)v41);
  v24 = &qword_1EE43A6C8;
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(v24);
  swift_dynamicCast();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
}

uint64_t *sub_19CF19964(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return JSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

uint64_t *JSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _QWORD *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t *v26;
  _QWORD v28[2];
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = type metadata accessor for _IntentAsJSIntentModel(0, a3, a4, a4);
  v7 = *(_QWORD *)(v31 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v31, v9);
  v30 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v29 = (char *)v28 - v12;
  v13 = *a2;
  sub_19CDD7A7C(a3, (uint64_t)v28 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2F20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 64) = &type metadata for JSONContext;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 32) = &type metadata for JSONContext;
  sub_19CD249F0();
  swift_bridgeObjectRetain();
  v33 = sub_19CFDF3F8();
  sub_19CD23D8C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v15 = v33;
  type metadata accessor for BaseObjectGraph();
  v16 = (_QWORD *)swift_allocObject();
  v16[3] = 0xD00000000000001DLL;
  v16[4] = 0x800000019D076C70;
  v16[2] = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28[1] = type metadata accessor for Promise(0, AssociatedTypeWitness, v18, v19);
  v20 = v29;
  v21 = v30;
  v22 = v31;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v30, v29, v31);
  v23 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = a3;
  *((_QWORD *)v25 + 3) = a4;
  *((_QWORD *)v25 + 4) = v32;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v25[v23], v21, v22);
  *(_QWORD *)&v25[v24] = v16;
  swift_retain();
  v26 = Promise.__allocating_init(task:)((uint64_t)&unk_1EE441DF8, (uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v22);
  return v26;
}

uint64_t static JSStack.servicesGlobalName.getter()
{
  return 0x7365636976726573;
}

uint64_t static JSStack.bootstrapGlobalName.getter()
{
  return 0x727473746F6F6224;
}

uint64_t static JSStack.makeStandardPrerequisites(using:bag:urlSession:process:accounts:)(uint64_t a1, uint64_t *a2, void *a3, void *a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  _UNKNOWN **v14;
  uint64_t v15;
  _BYTE v16[8];
  __int128 v17;

  v8 = *(_BYTE *)(a1 + 1);
  v9 = *a2;
  v16[0] = *(_BYTE *)a1;
  v16[1] = v8;
  v17 = *(_OWORD *)(a1 + 8);
  v15 = v9;
  if (a5)
  {
    *((_QWORD *)&v13 + 1) = type metadata accessor for Unstable.Accounts();
    v14 = &protocol witness table for Unstable.Accounts;
    *(_QWORD *)&v12 = a5;
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
  }
  swift_retain();
  v10 = _s9JetEngine7JSStackC25makeStandardPrerequisites5using3bag10urlSession7process15accountProviderSayAC12PrerequisiteOGAC0E19GlobalConfigurationV_AA3BagVSgSo13AMSURLSessionCSgSo14AMSProcessInfoCSgAA07AccountM0_pSgtFZ_0((uint64_t)v16, &v15, a3, a4, (uint64_t)&v12);
  sub_19CCECFE4((uint64_t)&v12, &qword_1ECEB1B80);
  return v10;
}

uint64_t static JSStack.makeStandardPrerequisites(using:bag:urlSession:process:accountStore:)(uint64_t a1, uint64_t *a2, void *a3, void *a4, void *a5)
{
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  _UNKNOWN **v15;
  uint64_t v16;
  _BYTE v17[8];
  __int128 v18;

  v8 = *(_BYTE *)(a1 + 1);
  v9 = *a2;
  v17[0] = *(_BYTE *)a1;
  v17[1] = v8;
  v18 = *(_OWORD *)(a1 + 8);
  v16 = v9;
  if (a5)
  {
    *((_QWORD *)&v14 + 1) = sub_19CD598F0();
    v15 = &protocol witness table for ACAccountStore;
    *(_QWORD *)&v13 = a5;
  }
  else
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
  }
  v10 = a5;
  v11 = _s9JetEngine7JSStackC25makeStandardPrerequisites5using3bag10urlSession7process15accountProviderSayAC12PrerequisiteOGAC0E19GlobalConfigurationV_AA3BagVSgSo13AMSURLSessionCSgSo14AMSProcessInfoCSgAA07AccountM0_pSgtFZ_0((uint64_t)v17, &v16, a3, a4, (uint64_t)&v13);
  sub_19CCECFE4((uint64_t)&v13, &qword_1ECEB1B80);
  return v11;
}

id static JSStack.makeNetObject(configuration:urlSession:bag:accounts:process:)(unsigned __int8 *a1, void *a2, uint64_t *a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  __int16 v12;
  id v13;

  v8 = *((_QWORD *)a1 + 1);
  v9 = *((_QWORD *)a1 + 2);
  v10 = *a3;
  if (a1[1])
    v11 = 256;
  else
    v11 = 0;
  v12 = v11 | *a1;
  swift_retain();
  v13 = sub_19CF1A928(v12, v8, v9, a2, v10, a4, a5);
  swift_release();
  return v13;
}

id static JSStack.makeNetObject(configuration:urlSession:bag:accounts:process:)(uint64_t a1, void *a2, uint64_t *a3, _QWORD *a4, void *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = a4[3];
  v11 = a4[4];
  v12 = __swift_project_boxed_opaque_existential_1(a4, v10);
  return sub_19CF1AA64(a1, a2, a3, (uint64_t)v12, a5, v5, v10, v11);
}

uint64_t *JSStack.dispatch<A>(intentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[2];
  uint64_t v51[3];
  uint64_t v52;
  _UNKNOWN **v53;
  uint64_t v54;
  uint64_t v55;
  char v56;

  v5 = v4;
  v9 = type metadata accessor for JSIntentRequest(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  v45 = v9;
  v47 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  v46 = (char *)&v43 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v14, v15);
  v44 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440CD8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (uint64_t *)((char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for _IntentAsJSIntentModel(0, a2, a3, v21);
  v53 = &off_1E3DD2360;
  v54 = MEMORY[0x1A1ADBD7C](&unk_19D053E54, v52);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v51);
  v43 = a1;
  sub_19CDD7A7C(a2, (uint64_t)boxed_opaque_existential_2Tm);
  v23 = (uint64_t *)(a1 + *(int *)(v11 + 36));
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v55 = v24;
  v56 = (char)v23;
  sub_19CD249F0();
  *(_QWORD *)&v48 = sub_19CFDF3F8();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_19CD23D8C(MEMORY[0x1E0DEE9D8]);
  v26 = v48;
  type metadata accessor for BaseObjectGraph();
  v27 = (_QWORD *)swift_allocObject();
  v27[3] = 0xD000000000000018;
  v27[4] = 0x800000019D076C90;
  v27[2] = v26;
  sub_19CCF9BF0((uint64_t)v51, (uint64_t)&v48);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v5;
  v29 = v49;
  *(_OWORD *)(v28 + 24) = v48;
  *(_OWORD *)(v28 + 40) = v29;
  *(_OWORD *)(v28 + 56) = v50[0];
  *(_OWORD *)(v28 + 65) = *(_OWORD *)((char *)v50 + 9);
  *(_QWORD *)(v28 + 88) = v27;
  *v20 = v25;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E10);
  v30 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  v30[2] = v31;
  sub_19CCC290C((uint64_t)v20, (uint64_t)v30 + *(_QWORD *)(*v30 + 96), &qword_1EE440CD8);
  v32 = sub_19CFDFA10();
  v33 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v44, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_1EE441E08;
  v34[5] = v28;
  v34[6] = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CF5B8E4(v33, (uint64_t)&unk_1EE441E18, (uint64_t)v34);
  swift_release();
  v35 = v45;
  v36 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v46, v43, v45);
  v37 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = a2;
  *(_QWORD *)(v38 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v38 + v37, v36, v35);
  type metadata accessor for JSIntentResult();
  v40 = type metadata accessor for JSIntentResponse(0, a2, a3, v39);
  *((_QWORD *)&v49 + 1) = &type metadata for SyncTaskScheduler;
  *(_QWORD *)&v50[0] = &protocol witness table for SyncTaskScheduler;
  v41 = Promise.map<A>(on:_:)((uint64_t)&v48, (uint64_t)sub_19CF1ADAC, v38, v40);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v48);
  sub_19CD33A94((uint64_t)v51);
  return v41;
}

uint64_t sub_19CF1A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE441E30 + dword_1EE441E30);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_19CCBE344;
  return v10(a1, a3, a4);
}

uint64_t sub_19CF1A310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_19CFDEA44();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for JSIntentRequest(0, a3, a4, v18);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)&v27 - v22;
  (*(void (**)(char *, uint64_t, double))(v24 + 16))((char *)&v27 - v22, a2, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  v25 = type metadata accessor for JSIntentResult();
  sub_19CD47288(a1 + *(int *)(v25 + 20), (uint64_t)v12);
  return sub_19CF9534C((uint64_t)v23, (uint64_t)v17, (uint64_t)v12, a3, a4, v28);
}

uint64_t sub_19CF1A470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a1;
  type metadata accessor for _UncheckedSendableIntentReturnType(0, a5, a6, a4);
  v11 = swift_task_alloc();
  v6[5] = v11;
  v12 = (_QWORD *)swift_task_alloc();
  v6[6] = v12;
  v14 = type metadata accessor for _IntentAsJSIntentModel(0, a5, a6, v13);
  v15 = MEMORY[0x1A1ADBD7C](&unk_19D053E54, v14);
  *v12 = v6;
  v12[1] = sub_19CF17B2C;
  return JSStack.dispatch<A>(_:objectGraph:)(v11, a3, a4, v14, v15);
}

uint64_t JSStack.dispatch<A>(intentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CF1A578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v4[5];
  v6 = v4[4];
  v4[7] = (uint64_t)JSStack.dispatch<A>(intentRequest:)(v4[3], v6, v5, a4);
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = (uint64_t)v7;
  v9 = type metadata accessor for JSIntentResponse(255, v6, v5, v8);
  v12 = type metadata accessor for Promise(0, v9, v10, v11);
  v13 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v12);
  *v7 = v4;
  v7[1] = sub_19CE52EF0;
  return Future.result.getter(v4[2], v12, v13);
}

uint64_t JSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a4;
  v6[5] = a5;
  v6[2] = a1;
  v6[3] = a2;
  v7 = *a3;
  v6[6] = v5;
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_19CF1A648()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v11 = v0[7];
  v0[8] = (uint64_t)JSStack.dispatch<A>(intent:jsonContext:)(v3, &v11, v2, v1);
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for Promise(0, AssociatedTypeWitness, v6, v7);
  v9 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v8);
  *v4 = v0;
  v4[1] = sub_19CF1A718;
  return Future.result.getter(v0[2], v8, v9);
}

uint64_t sub_19CF1A718()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CF1A77C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF1A7B0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF1A7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _IntentAsJSIntentModel(0, v5, *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v7 = (v6 + 40) & ~v6;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF1A874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = v4[2];
  v8 = v4[3];
  v9 = *(_QWORD *)(type metadata accessor for _IntentAsJSIntentModel(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4[4];
  v12 = (uint64_t)v4 + v10;
  v13 = *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_19CD579FC;
  return sub_19CF1A470(a1, v11, v12, v13, v7, v8);
}

id sub_19CF1A928(__int16 a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14;
  objc_class *v15;
  id v16;
  id v17;
  objc_super v19;
  uint64_t v20[5];
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];
  _QWORD v26[5];

  v26[3] = type metadata accessor for Unstable.Accounts();
  v26[4] = &protocol witness table for Unstable.Accounts;
  v26[0] = a6;
  v22 = a1 & 0x101;
  v23 = a2;
  v24 = a3;
  v21 = a5;
  sub_19CCD5B84((uint64_t)v26, (uint64_t)v20);
  swift_retain();
  sub_19CCEA360(a2);
  v14 = a4;
  swift_unknownObjectRetain();
  sub_19CD038E0(v14, (char *)&v22, &v21, v20, a7, v25);
  sub_19CCD5B84((uint64_t)v25, (uint64_t)v20);
  v15 = (objc_class *)type metadata accessor for JSNetObject();
  v16 = objc_allocWithZone(v15);
  sub_19CCD5B84((uint64_t)v20, (uint64_t)v16 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v19.receiver = v16;
  v19.super_class = v15;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  sub_19CD5AE28((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  return v17;
}

id sub_19CF1AA64(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_2Tm;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_class *v20;
  id v21;
  id v22;
  objc_super v24;
  uint64_t v25[5];
  uint64_t v26;
  char v27[8];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];
  uint64_t v31[5];

  v31[3] = a7;
  v31[4] = a8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_2Tm, a4, a7);
  v15 = *(_BYTE *)(a1 + 1);
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *a3;
  v27[0] = *(_BYTE *)a1;
  v27[1] = v15;
  v28 = v16;
  v29 = v17;
  v26 = v18;
  sub_19CCD5B84((uint64_t)v31, (uint64_t)v25);
  sub_19CCEA360(v16);
  v19 = a2;
  swift_unknownObjectRetain();
  sub_19CD038E0(v19, v27, &v26, v25, a5, v30);
  sub_19CCD5B84((uint64_t)v30, (uint64_t)v25);
  v20 = (objc_class *)type metadata accessor for JSNetObject();
  v21 = objc_allocWithZone(v20);
  sub_19CCD5B84((uint64_t)v25, (uint64_t)v21 + OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts);
  v24.receiver = v21;
  v24.super_class = v20;
  v22 = objc_msgSendSuper2(&v24, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  sub_19CD5AE28((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return v22;
}

uint64_t sub_19CF1AB9C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF1ABD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = v1 + 24;
  v5 = *(_QWORD *)(v1 + 88);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_19CD579FC;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE441E30 + dword_1EE441E30);
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_19CCBE344;
  return v9(a1, v4, v5);
}

uint64_t sub_19CF1AC78()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF1ACAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442BF8
                                                                                     + dword_1EE442BF8))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CF1AD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSIntentRequest(0, v5, *(_QWORD *)(v4 + 24), a4) - 8)
                          + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + ((v6 + 32) & ~v6), v5);
  return swift_deallocObject();
}

uint64_t sub_19CF1ADAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSIntentRequest(0, v6, v7, a2) - 8) + 80);
  return sub_19CF1A310(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_19CF1AE20()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF1AE44(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 1112) = v14;
  *(_QWORD *)(v8 + 1104) = v13;
  *(_QWORD *)(v8 + 1096) = a8;
  *(_QWORD *)(v8 + 1088) = a7;
  *(_QWORD *)(v8 + 1080) = a6;
  *(_BYTE *)(v8 + 329) = a5;
  *(_QWORD *)(v8 + 1072) = a3;
  *(_QWORD *)(v8 + 1064) = a2;
  *(_QWORD *)(v8 + 1056) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC50);
  *(_QWORD *)(v8 + 1120) = swift_task_alloc();
  v10 = type metadata accessor for MTMetricsIdentifier();
  *(_QWORD *)(v8 + 1128) = v10;
  *(_QWORD *)(v8 + 1136) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 1144) = swift_task_alloc();
  *(_QWORD *)(v8 + 1152) = swift_task_alloc();
  *(_QWORD *)(v8 + 1160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  *(_QWORD *)(v8 + 1168) = swift_task_alloc();
  *(_QWORD *)(v8 + 1176) = swift_task_alloc();
  v11 = sub_19CFDEF84();
  *(_QWORD *)(v8 + 1184) = v11;
  *(_QWORD *)(v8 + 1192) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 1200) = swift_task_alloc();
  *(_QWORD *)(v8 + 1208) = swift_task_alloc();
  *(_QWORD *)(v8 + 1216) = *a4;
  return swift_task_switch();
}

uint64_t sub_19CF1AF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_2Tm;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, unint64_t);
  char v26;
  unint64_t v27;

  v1 = *(_QWORD *)(v0 + 1096);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 1192);
    v3 = *(_QWORD *)(v0 + 1184);
    v4 = *(_QWORD *)(v0 + 1176);
    v5 = *(_QWORD *)(v0 + 1080);
    v6 = swift_allocObject();
    *(_QWORD *)(v0 + 1224) = v6;
    *(_QWORD *)(v6 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441E70);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D052350;
    *(_BYTE *)(inited + 32) = 5;
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 40) = 0;
    *(_BYTE *)(inited + 72) = 6;
    v8 = sub_19CFDF98C();
    *(_QWORD *)(inited + 104) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
    *(_QWORD *)(inited + 80) = v8;
    v9 = sub_19CD1F12C(inited);
    sub_19CCF8C5C(v5, v4, (uint64_t *)&unk_1ECEB2040);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    *(_QWORD *)(v0 + 1232) = v10;
    if (v10(v4, 1, v3) == 1)
    {
      sub_19CCECFE4(*(_QWORD *)(v0 + 1176), (uint64_t *)&unk_1ECEB2040);
    }
    else
    {
      v19 = *(_QWORD *)(v0 + 1208);
      v20 = *(_QWORD *)(v0 + 1192);
      v21 = *(_QWORD *)(v0 + 1184);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 32))(v19, *(_QWORD *)(v0 + 1176), v21);
      *(_QWORD *)(v0 + 776) = v21;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 752));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 16))(boxed_opaque_existential_2Tm, v19, v21);
      sub_19CD433C0((_OWORD *)(v0 + 752), (_OWORD *)(v0 + 656));
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v27 = v9;
      sub_19CE17564((_OWORD *)(v0 + 656), 0, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    *(_QWORD *)(v0 + 1240) = v9;
    v24 = *(_QWORD *)(v0 + 1088);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)sub_19CF1C990(v6, *(_QWORD *)(v0 + 1216), *(_QWORD *)(v0 + 1104))+ 144);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 1248) = v25(v24, v1, v9);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v11 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v13 = swift_allocObject();
    v14 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 840) = v14;
    *(_QWORD *)(v0 + 816) = 0xD000000000000038;
    *(_QWORD *)(v0 + 824) = 0x800000019D076D50;
    *(_OWORD *)(v0 + 576) = 0u;
    *(_OWORD *)(v0 + 592) = 0u;
    v15 = v11;
    sub_19CD40658(v0 + 816, v0 + 576);
    *(_BYTE *)(v0 + 608) = 0;
    *(_BYTE *)(v13 + 64) = 0;
    v16 = *(_OWORD *)(v0 + 592);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v13 + 48) = v16;
    *(_QWORD *)(v12 + 32) = v13;
    v27 = (unint64_t)v15;
    v26 = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v26);
    swift_bridgeObjectRelease();

    v17 = sub_19CD20744(MEMORY[0x1E0DEE9D8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v17);
  }
}

uint64_t sub_19CF1B360()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = v0 + 1048;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_19CF1B3E0;
  *(_QWORD *)(v0 + 256) = swift_continuation_init();
  *(_BYTE *)(v0 + 328) = 1;
  sub_19CD1E634();
  sub_19CCECFE4(v0 + 256, &qword_1EE440CC0);
  return swift_continuation_await();
}

uint64_t sub_19CF1B3E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 1256) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 1264) = *(_QWORD *)(v1 + 1048);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF1B45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  unsigned int v47;
  void *v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  id v98;
  uint64_t v99;
  id v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114[9];

  v1 = *(_QWORD *)(v0 + 1096);
  v2 = *(_QWORD *)(v0 + 1088);
  v3 = *(_QWORD *)(v0 + 1056);
  v114[0] = 1;
  sub_19CD04F24(v2, v1, v114, v3, (uint64_t)&v110);
  v4 = v111;
  if (!v111)
  {
    swift_bridgeObjectRelease();
LABEL_94:
    swift_release();
    v75 = *(_QWORD *)(v0 + 1264);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v75);
  }
  v96 = v0;
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v5 + 16);
  v107 = v6;
  v108 = v110;
  if (v112)
  {
    if (v6)
    {
      v93 = v113;
      v7 = 0;
      v94 = v5 + 32;
      v95 = v112;
      v8 = *(_QWORD *)(v112 + 16);
      v92 = (_QWORD *)(v112 + 56);
      while (1)
      {
        if (v8)
        {
          v9 = v94 + 72 * v7;
          v11 = *(_QWORD *)v9;
          v10 = *(_QWORD *)(v9 + 8);
          v101 = *(_BYTE *)(v9 + 40);
          v12 = *(_QWORD *)(v9 + 64);
          v97 = *(double *)(v9 + 32);
          v99 = *(_QWORD *)(v9 + 56);
          if (*(_QWORD *)(v95 + 32) == *(_QWORD *)v9 && *(_QWORD *)(v95 + 40) == v10)
            goto LABEL_43;
          result = sub_19CFE06A0();
          if ((result & 1) != 0)
            goto LABEL_43;
          if (v8 != 1)
            break;
        }
LABEL_5:
        if (++v7 == v107)
          goto LABEL_93;
      }
      v15 = v92;
      v16 = 1;
      while (1)
      {
        v17 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (*(v15 - 1) == v11 && *v15 == v10)
          goto LABEL_43;
        result = sub_19CFE06A0();
        if ((result & 1) != 0)
          goto LABEL_43;
        ++v16;
        v15 += 2;
        if (v17 == v8)
          goto LABEL_5;
      }
      __break(1u);
LABEL_137:
      __break(1u);
      return result;
    }
    goto LABEL_93;
  }
  if (!v6)
  {
LABEL_93:
    v0 = v96;
    sub_19CD04ED4(v108, v4);
    swift_bridgeObjectRelease();
    goto LABEL_94;
  }
  v93 = v113;
  v19 = 0;
  v105 = (char *)(v5 + 32);
  v20 = v110;
  while (1)
  {
    v21 = &v105[72 * v19];
    v22 = (_QWORD *)*((_QWORD *)v21 + 6);
    if (!v22)
      goto LABEL_25;
    v23 = v22[2];
    if (!v23)
      goto LABEL_25;
    v11 = *(_QWORD *)v21;
    v10 = *((_QWORD *)v21 + 1);
    v101 = v21[40];
    v12 = *((_QWORD *)v21 + 8);
    v97 = *((double *)v21 + 4);
    v99 = *((_QWORD *)v21 + 7);
    if (v22[4] == v20 && v4 == v22[5])
      break;
    result = sub_19CFE06A0();
    v20 = v108;
    if ((result & 1) != 0)
      break;
    if (v23 != 1)
    {
      v25 = v22 + 7;
      v26 = 1;
      do
      {
        v27 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_137;
        if (*(v25 - 1) == v20 && v4 == *v25)
          goto LABEL_43;
        result = sub_19CFE06A0();
        v20 = v108;
        if ((result & 1) != 0)
          goto LABEL_43;
        ++v26;
        v25 += 2;
      }
      while (v27 != v23);
    }
LABEL_25:
    if (++v19 == v107)
      goto LABEL_93;
  }
LABEL_43:
  v29 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = *(_QWORD **)(v96 + 1064);
  v0 = v96;
  sub_19CD04ED4(v108, v4);
  v31 = v30[3];
  v32 = v30[4];
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v110, v31, v32);
  v33 = (void *)v110;
  *(_QWORD *)(v96 + 1272) = v110;
  if (!v33)
  {
    swift_bridgeObjectRelease();
    sub_19CD04ED4(v11, v10);
    goto LABEL_94;
  }
  v34 = *(unsigned __int8 *)(v96 + 329);
  v35 = *(_QWORD *)(v96 + 1072);
  v36 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init, v93);
  *(_QWORD *)(v96 + 1280) = v36;
  objc_msgSend(v36, sel_setAccount_, v33);
  objc_msgSend(v36, sel_setClientInfo_, v35);
  v37 = v36;
  v38 = (void *)sub_19CFDF554();
  objc_msgSend(v37, sel_setDomain_, v38);

  objc_msgSend(v37, sel_setIsActiveITunesAccountRequired_, v34);
  v109 = v33;
  if ((v101 & 1) != 0)
  {
    if (v29)
    {
      if (v99 == 0x796C696164 && v29 == 0xE500000000000000)
      {
        sub_19CD04ED4(v11, v10);
        objc_msgSend(v37, sel_setResetInterval_, 86400.0, 0xE500000000000000);
      }
      else
      {
        v39 = sub_19CFE06A0();
        sub_19CD04ED4(v11, v10);
        if ((v39 & 1) != 0)
          objc_msgSend(v37, sel_setResetInterval_, 86400.0, v29);
      }
    }
    else
    {
      sub_19CD04ED4(v11, v10);
    }
  }
  else
  {
    sub_19CD04ED4(v11, v10);
    objc_msgSend(v37, sel_setResetInterval_, v97, v29);
  }
  v40 = (void *)sub_19CFDF554();
  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_keyWithName_crossDeviceSync_, v40, 0);
  *(_QWORD *)(v96 + 1288) = v42;

  v43 = (void *)sub_19CFDF554();
  v44 = objc_msgSend(v41, sel_keyWithName_crossDeviceSync_, v43, 1);
  *(_QWORD *)(v96 + 1296) = v44;

  v45 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v46 = (void *)sub_19CFDF554();
  v47 = objc_msgSend(v45, sel_BOOLForKey_, v46);

  if (v47)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_reset);

    v48 = v109;
LABEL_57:

    goto LABEL_94;
  }
  v102 = v96 + 456;
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 1232);
  v50 = *(_QWORD *)(v96 + 1184);
  v51 = *(_QWORD *)(v96 + 1168);
  v52 = *(_QWORD *)(v96 + 1080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_19D054B60;
  *(_QWORD *)(v53 + 32) = v42;
  *(_QWORD *)(v53 + 40) = v44;
  v110 = v53;
  sub_19CFDF878();
  sub_19CCE5204(0, qword_1EE43A340);
  v106 = v37;
  v54 = v42;
  v98 = v44;
  v55 = (void *)sub_19CFDF854();
  swift_bridgeObjectRelease();
  sub_19CCF8C5C(v52, v51, (uint64_t *)&unk_1ECEB2040);
  v100 = v54;
  if (v49(v51, 1, v50) == 1)
  {
    v56 = *(_QWORD *)(v96 + 1168);
    sub_19CFDEF6C();
    sub_19CCECFE4(v56, (uint64_t *)&unk_1ECEB2040);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v96 + 1192) + 32))(*(_QWORD *)(v96 + 1200), *(_QWORD *)(v96 + 1168), *(_QWORD *)(v96 + 1184));
  }
  v57 = *(_QWORD *)(v96 + 1200);
  v58 = *(_QWORD *)(v96 + 1192);
  v59 = *(_QWORD *)(v96 + 1184);
  v60 = (void *)sub_19CFDEF0C();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
  v61 = objc_msgSend(v106, sel_generateEventFieldsForKeys_date_, v55, v60);

  v62 = sub_19CFDF3C8();
  *(_QWORD *)(v96 + 960) = 0x644972657375;
  *(_QWORD *)(v96 + 968) = 0xE600000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v62 + 16) && (v63 = sub_19CD20240(v102), (v64 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v62 + 56) + 32 * v63, v96 + 880);
  }
  else
  {
    *(_OWORD *)(v96 + 880) = 0u;
    *(_OWORD *)(v96 + 896) = 0u;
  }
  sub_19CD20334(v102);
  if (*(_QWORD *)(v96 + 904))
  {
    v65 = swift_dynamicCast();
    v66 = *(_QWORD *)(v96 + 1024);
    if (!v65)
      v66 = 0;
    v103 = v66;
    if (v65)
      v67 = *(_QWORD *)(v96 + 1032);
    else
      v67 = 0;
  }
  else
  {
    sub_19CCECFE4(v96 + 880, &qword_1ECEB3370);
    v103 = 0;
    v67 = 0;
  }
  v68 = *(_QWORD *)(v96 + 1264);
  *(_QWORD *)(v96 + 992) = 0x644972657375;
  *(_QWORD *)(v96 + 1000) = 0xE600000000000000;
  sub_19CFE00C4();
  v104 = v68;
  if (*(_QWORD *)(v68 + 16) && (v69 = sub_19CD20240(v96 + 416), (v70 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v96 + 1264) + 56) + 32 * v69, v96 + 720);
  }
  else
  {
    *(_OWORD *)(v96 + 720) = 0u;
    *(_OWORD *)(v96 + 736) = 0u;
  }
  sub_19CD20334(v96 + 416);
  if (!*(_QWORD *)(v96 + 744))
  {
    sub_19CCECFE4(v96 + 720, &qword_1ECEB3370);
    if (v67)
      goto LABEL_89;
LABEL_92:
    v74 = 1;
    goto LABEL_97;
  }
  v71 = swift_dynamicCast();
  if (v71)
    v72 = *(_QWORD *)(v96 + 1008);
  else
    v72 = 0;
  if (v71)
    v73 = *(_QWORD *)(v96 + 1016);
  else
    v73 = 0;
  if (!v67)
  {
    if (v73)
    {
      v74 = 0;
      goto LABEL_96;
    }
    goto LABEL_92;
  }
  if (!v73)
  {
LABEL_89:
    v74 = 0;
    goto LABEL_96;
  }
  if (v103 == v72 && v67 == v73)
  {
    swift_bridgeObjectRelease();
    v74 = 1;
  }
  else
  {
    v74 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
  }
LABEL_96:
  swift_bridgeObjectRelease();
LABEL_97:
  *(_BYTE *)(v96 + 330) = v74 & 1;
  *(_QWORD *)(v96 + 912) = 0x6449746E65696C63;
  *(_QWORD *)(v96 + 920) = 0xE800000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v62 + 16) && (v76 = sub_19CD20240(v96 + 536), (v77 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(v62 + 56) + 32 * v76, v96 + 688);
  }
  else
  {
    *(_OWORD *)(v96 + 688) = 0u;
    *(_OWORD *)(v96 + 704) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_19CD20334(v96 + 536);
  if (*(_QWORD *)(v96 + 712))
  {
    v78 = swift_dynamicCast();
    if (v78)
      v79 = *(_QWORD *)(v96 + 928);
    else
      v79 = 0;
    if (v78)
      v80 = *(_QWORD *)(v96 + 936);
    else
      v80 = 0;
  }
  else
  {
    sub_19CCECFE4(v96 + 688, &qword_1ECEB3370);
    v79 = 0;
    v80 = 0;
  }
  *(_QWORD *)(v96 + 944) = 0x6449746E65696C63;
  *(_QWORD *)(v96 + 952) = 0xE800000000000000;
  sub_19CFE00C4();
  if (*(_QWORD *)(v104 + 16) && (v81 = sub_19CD20240(v96 + 496), (v82 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v96 + 1264) + 56) + 32 * v81, v96 + 784);
  }
  else
  {
    *(_OWORD *)(v96 + 784) = 0u;
    *(_OWORD *)(v96 + 800) = 0u;
  }
  sub_19CD20334(v96 + 496);
  if (!*(_QWORD *)(v96 + 808))
  {
    sub_19CCECFE4(v96 + 784, &qword_1ECEB3370);
    if (v80)
      goto LABEL_129;
LABEL_130:
    if ((v74 & 1) == 0)
      goto LABEL_131;
    goto LABEL_133;
  }
  v83 = swift_dynamicCast();
  if (v83)
    v84 = *(_QWORD *)(v96 + 976);
  else
    v84 = 0;
  if (v83)
    v85 = *(_QWORD *)(v96 + 984);
  else
    v85 = 0;
  if (!v80)
  {
    if (v85)
      goto LABEL_129;
    goto LABEL_130;
  }
  if (!v85)
  {
LABEL_129:
    swift_bridgeObjectRelease();
    v86 = 0;
    goto LABEL_135;
  }
  if (v79 == v84 && v80 == v85)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v74 & 1) == 0)
    {
LABEL_131:
      v86 = 1;
      goto LABEL_135;
    }
LABEL_133:
    swift_bridgeObjectRelease();

    v48 = v100;
    goto LABEL_57;
  }
  v87 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v74 & v87 & 1) != 0)
    goto LABEL_133;
  v86 = (v74 ^ 1) & v87;
LABEL_135:
  *(_BYTE *)(v96 + 331) = v86 & 1;
  v88 = *(_QWORD *)(v96 + 1240);
  v89 = *(_QWORD *)(v96 + 1096);
  v90 = *(_QWORD *)(v96 + 1088);
  v91 = sub_19CF1C990(*(_QWORD *)(v96 + 1224), *(_QWORD *)(v96 + 1216), *(_QWORD *)(v96 + 1104));
  *(_QWORD *)(v96 + 1304) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v91 + 128))(v90, v89, v88);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF1C28C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF1C35C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = v0 + 1040;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_19CF1C3DC;
  *(_QWORD *)(v0 + 336) = swift_continuation_init();
  *(_BYTE *)(v0 + 408) = 1;
  sub_19CDC0104();
  sub_19CCECFE4(v0 + 336, &qword_1EE441050);
  return swift_continuation_await();
}

uint64_t sub_19CF1C3DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1312) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 1320) = *(_QWORD *)(v1 + 1040);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF1C458()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;

  if ((*(_BYTE *)(v0 + 330) & 1) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 1320) + 16))
    {
      v1 = sub_19CE1213C(0);
      if ((v2 & 1) != 0)
      {
        v3 = *(_QWORD *)(v0 + 1160);
        v4 = *(_QWORD *)(v0 + 1152);
        v5 = *(_QWORD *)(v0 + 1128);
        sub_19CDE26B4(*(_QWORD *)(*(_QWORD *)(v0 + 1320) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 1136) + 72) * v1, v4);
        sub_19CDE2B4C(v4, v3);
        if ((*(_BYTE *)(v3 + *(int *)(v5 + 32)) & 1) != 0)
        {
          v6 = *(_QWORD *)(v0 + 1296);
          v7 = *(id *)(v0 + 1280);
          swift_bridgeObjectRetain();
          v8 = (void *)sub_19CFDF554();
          swift_bridgeObjectRelease();
          v9 = (void *)sub_19CFDEF0C();
          objc_msgSend(v7, sel__setIdentifier_withStartedDate_forKey_, v8, v9, v6);

        }
        sub_19CDE2B90(*(_QWORD *)(v0 + 1160));
      }
    }
  }
  if ((*(_BYTE *)(v0 + 331) & 1) != 0)
  {
    v10 = *(void **)(v0 + 1296);
    v11 = *(void **)(v0 + 1288);
    v12 = *(void **)(v0 + 1272);

    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 1320) + 16))
    {
      v13 = 1;
      v14 = sub_19CE1213C(1);
      if ((v15 & 1) != 0)
      {
        sub_19CDE26B4(*(_QWORD *)(*(_QWORD *)(v0 + 1320) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 1136) + 72) * v14, *(_QWORD *)(v0 + 1120));
        v13 = 0;
      }
    }
    else
    {
      v13 = 1;
    }
    v16 = *(_QWORD *)(v0 + 1136);
    v17 = *(_QWORD *)(v0 + 1128);
    v18 = *(_QWORD *)(v0 + 1120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, v13, 1, v17);
    swift_bridgeObjectRelease();
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17);
    v20 = *(void **)(v0 + 1296);
    v21 = *(void **)(v0 + 1288);
    v22 = *(void **)(v0 + 1280);
    v23 = *(void **)(v0 + 1272);
    if (v19 == 1)
    {
      v24 = *(_QWORD *)(v0 + 1120);

      sub_19CCECFE4(v24, &qword_1EE43EC50);
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 1144);
      sub_19CDE2B4C(*(_QWORD *)(v0 + 1120), v25);
      v26 = v22;
      swift_bridgeObjectRetain();
      v27 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      v28 = (void *)sub_19CFDEF0C();
      objc_msgSend(v26, sel__setIdentifier_withStartedDate_forKey_, v27, v28, v21);

      sub_19CDE2B90(v25);
    }
    swift_release();
  }
  v29 = *(_QWORD *)(v0 + 1264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_19CF1C794()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  char v13;

  swift_release();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 1296);
  v2 = *(void **)(v0 + 1288);
  v3 = *(void **)(v0 + 1280);
  v4 = *(void **)(v0 + 1272);
  v5 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 872) = v8;
  *(_QWORD *)(v0 + 848) = 0xD000000000000022;
  *(_QWORD *)(v0 + 856) = 0x800000019D076DB0;
  *(_OWORD *)(v0 + 616) = 0u;
  *(_OWORD *)(v0 + 632) = 0u;
  v9 = v5;
  sub_19CD40658(v0 + 848, v0 + 616);
  *(_BYTE *)(v0 + 648) = 0;
  *(_BYTE *)(v7 + 64) = 0;
  v10 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v7 + 48) = v10;
  *(_QWORD *)(v6 + 32) = v7;
  v13 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v13);
  swift_bridgeObjectRelease();

  swift_release();
  v11 = *(_QWORD *)(v0 + 1264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_19CF1C990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);
  _QWORD v8[3];

  v4 = (uint64_t *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3;
  }
  else
  {
    v8[0] = a2;
    v6 = *(uint64_t (**)(_QWORD *))(a3 + 104);
    swift_unknownObjectRetain();
    v5 = v6(v8);
    swift_beginAccess();
    *v4 = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

_QWORD *sub_19CF1CA24(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  id v6;
  void *v7;
  id v8;

  v3 = (_QWORD *)*a1;
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    type metadata accessor for MTStandardIDServiceWrapper();
    v4 = (_QWORD *)swift_allocObject();
    v6 = objc_allocWithZone((Class)JESoftLinkedMTStandardIDService);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_19CFDF3B0();
    v8 = objc_msgSend(v6, sel_initWithConfigDictionary_, v7);

    v4[2] = v8;
    v4[3] = 0;
    v4[4] = a2;
    swift_beginAccess();
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

void sub_19CF1CB18(uint64_t a1, void *a2, void *a3, void *a4, NSObject *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char v15;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  Swift::String v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  __int128 v45;
  __int128 v46;
  Swift::String v47;
  id v48;
  NSObject *v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[32];
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;

  v9 = sub_19CFDEF84();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCE5204(0, &qword_1ECEB24D0);
  v14 = (void *)sub_19CFDFF08();
  v15 = sub_19CFDFEF0();

  if ((v15 & 1) != 0)
  {
    v48 = a4;
    v49 = a5;
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v16 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
    v18 = v16;
    v59 = sub_19CD40918(0, 32, 0, MEMORY[0x1E0DEE9D8]);
    v19._countAndFlagsBits = 0x20676E69766F4DLL;
    v19._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    v20 = objc_msgSend(a2, sel_name);
    v21 = sub_19CFDF578();
    v23 = v22;

    v58 = MEMORY[0x1E0DEA968];
    v56 = v21;
    v57 = v23;
    sub_19CCF8C5C((uint64_t)&v56, (uint64_t)v52, &qword_1ECEB3370);
    v50 = 0u;
    v51 = 0u;
    sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
    v55 = 0;
    v53 = v50;
    v54 = v51;
    v24 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = sub_19CD40918(0, v24[2] + 1, 1, v24);
    v26 = v24[2];
    v25 = v24[3];
    if (v26 >= v25 >> 1)
      v24 = sub_19CD40918((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
    v24[2] = v26 + 1;
    v27 = &v24[5 * v26];
    v28 = v53;
    v29 = v54;
    *((_BYTE *)v27 + 64) = v55;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v29;
    v59 = v24;
    sub_19CCECFE4((uint64_t)&v56, &qword_1ECEB3370);
    v30._countAndFlagsBits = 0xD000000000000018;
    v30._object = (void *)0x800000019D076DE0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    *(_QWORD *)(v17 + 32) = v59;
    *(_QWORD *)&v53 = v18;
    LOBYTE(v50) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v50);

    swift_bridgeObjectRelease();
    v31 = objc_msgSend(a3, sel_identifierForKey_, a2);
    if (!v31)
    {
      sub_19CFDF578();
      v31 = (id)sub_19CFDF554();
      swift_bridgeObjectRelease();
    }
    sub_19CFDEF6C();
    v32 = (void *)sub_19CFDEF0C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    objc_msgSend(v48, sel__setIdentifier_withStartedDate_forKey_, v31, v32, a2);

    a5 = v49;
  }
  else
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v33 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_19D0522A0;
    v35 = v33;
    v59 = sub_19CD40918(0, 59, 0, MEMORY[0x1E0DEE9D8]);
    v36._object = (void *)0x800000019D076E70;
    v36._countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    v37 = objc_msgSend(a2, sel_name);
    v38 = sub_19CFDF578();
    v40 = v39;

    v58 = MEMORY[0x1E0DEA968];
    v56 = v38;
    v57 = v40;
    sub_19CCF8C5C((uint64_t)&v56, (uint64_t)v52, &qword_1ECEB3370);
    v50 = 0u;
    v51 = 0u;
    sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
    v55 = 0;
    v53 = v50;
    v54 = v51;
    v41 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_19CD40918(0, v41[2] + 1, 1, v41);
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
      v41 = sub_19CD40918((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
    v41[2] = v43 + 1;
    v44 = &v41[5 * v43];
    v45 = v53;
    v46 = v54;
    *((_BYTE *)v44 + 64) = v55;
    *((_OWORD *)v44 + 2) = v45;
    *((_OWORD *)v44 + 3) = v46;
    v59 = v41;
    sub_19CCECFE4((uint64_t)&v56, &qword_1ECEB3370);
    v47._countAndFlagsBits = 0xD000000000000027;
    v47._object = (void *)0x800000019D076E90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    *(_QWORD *)(v34 + 32) = v59;
    *(_QWORD *)&v53 = v35;
    LOBYTE(v50) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v34, (JetEngine::LogMessageLevel)&v50);

    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a5);
}

void sub_19CF1D074(uint64_t a1, void *a2, void *a3, void *a4, NSObject *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  Swift::String v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  dispatch_group_t v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[32];
  __int128 v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;
  _QWORD *v52;

  v41 = a5;
  v40 = a4;
  v7 = sub_19CFDEF84();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v11 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
  v13 = v11;
  v52 = sub_19CD40918(0, 75, 0, MEMORY[0x1E0DEE9D8]);
  v14._countAndFlagsBits = 0xD000000000000028;
  v14._object = (void *)0x800000019D076E40;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  swift_getErrorValue();
  v15 = v48;
  v16 = v49;
  v51 = v49;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v50);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v15, v16);
  sub_19CCF8C5C((uint64_t)v50, (uint64_t)v44, &qword_1ECEB3370);
  v43 = 0u;
  v42 = 0u;
  sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
  v47 = 0;
  v45 = v42;
  v46 = v43;
  v18 = v52;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
  v18[2] = v20 + 1;
  v21 = &v18[5 * v20];
  v22 = v45;
  v23 = v46;
  *((_BYTE *)v21 + 64) = v47;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v23;
  v52 = v18;
  sub_19CCECFE4((uint64_t)v50, &qword_1ECEB3370);
  v24._countAndFlagsBits = 0x676E69766F6D202CLL;
  v24._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  v25 = objc_msgSend(a2, sel_name);
  v26 = sub_19CFDF578();
  v28 = v27;

  v51 = MEMORY[0x1E0DEA968];
  v50[0] = v26;
  v50[1] = v28;
  sub_19CCF8C5C((uint64_t)v50, (uint64_t)v44, &qword_1ECEB3370);
  v43 = 0u;
  v42 = 0u;
  sub_19CD40658((uint64_t)v44, (uint64_t)&v42);
  v47 = 0;
  v45 = v42;
  v46 = v43;
  v29 = v52;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v29 = sub_19CD40918(0, v29[2] + 1, 1, v29);
  v31 = v29[2];
  v30 = v29[3];
  if (v31 >= v30 >> 1)
    v29 = sub_19CD40918((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
  v29[2] = v31 + 1;
  v32 = &v29[5 * v31];
  v33 = v45;
  v34 = v46;
  *((_BYTE *)v32 + 64) = v47;
  *((_OWORD *)v32 + 2) = v33;
  *((_OWORD *)v32 + 3) = v34;
  v52 = v29;
  sub_19CCECFE4((uint64_t)v50, &qword_1ECEB3370);
  v35._object = (void *)0x800000019D076DE0;
  v35._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  *(_QWORD *)(v12 + 32) = v52;
  *(_QWORD *)&v45 = v13;
  LOBYTE(v42) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v42);

  swift_bridgeObjectRelease();
  v36 = objc_msgSend(a3, sel_identifierForKey_, a2);
  if (!v36)
  {
    sub_19CFDF578();
    v36 = (id)sub_19CFDF554();
    swift_bridgeObjectRelease();
  }
  sub_19CFDEF6C();
  v37 = (void *)sub_19CFDEF0C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v7);
  objc_msgSend(v40, sel__setIdentifier_withStartedDate_forKey_, v36, v37, a2);

  dispatch_group_leave(v41);
}

uint64_t sub_19CF1D4E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v15 = *v6;
  v14 = v6[1];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v16;
  *v16 = v7;
  v16[1] = sub_19CCC1F98;
  return sub_19CF1AE44(a1, a2, a3, a4, a5, a6, v15, v14);
}

uint64_t sub_19CF1D594(void *a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_19CF1DA80(a1, a2, a3, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), a4);
}

uint64_t static JEMetricsSecretMigrator.migrateSecretIfNecessaryAndReturnSecretValue(namespace:topic:secretKey:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE441E60 + dword_1EE441E60);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCC5B54;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19CF1D774(void *a1, void *a2, void *a3, void *a4, void *aBlock)
{
  _QWORD *v5;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE441E60 + dword_1EE441E60);
  v10 = a1;
  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = (_QWORD *)swift_task_alloc();
  v5[7] = v14;
  *v14 = v5;
  v14[1] = sub_19CF1D834;
  return v16((uint64_t)v10, (uint64_t)v11, (uint64_t)v12, (uint64_t)v13);
}

uint64_t sub_19CF1D834()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v5 = *(void **)(*v1 + 32);
  v4 = *(void **)(*v1 + 40);
  v7 = *(void **)(*v1 + 16);
  v6 = *(void **)(*v1 + 24);
  v8 = *v1;
  swift_task_dealloc();

  if (v0)
  {
    v9 = sub_19CFDEC90();

    v10 = 0;
    v11 = (void *)v9;
  }
  else
  {
    v10 = sub_19CFDF554();
    swift_bridgeObjectRelease();
    v9 = 0;
    v11 = (void *)v10;
  }
  v12 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 48);
  v12[2](v12, v10, v9);

  _Block_release(v12);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

id JEMetricsSecretMigrator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id JEMetricsSecretMigrator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JEMetricsSecretMigrator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id JEMetricsSecretMigrator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JEMetricsSecretMigrator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19CF1D9D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_19CD579FC;
  return v6();
}

uint64_t sub_19CF1DA2C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_19CD579FC;
  return v7();
}

uint64_t sub_19CF1DA80(void *a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t);
  char *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  NSObject *v66;
  id v67;
  id v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  id v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[48];
  __int128 v84;
  __int128 v85;
  _UNKNOWN **v86;
  _BYTE v87[32];
  _QWORD v88[4];
  _QWORD *v89;

  v75 = a6;
  v74 = a5;
  v73 = a4;
  v80 = a3;
  v78 = sub_19CFDF2E4();
  v8 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78, v9);
  v77 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v11 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v12 = swift_allocObject();
  v79 = xmmword_19D0522A0;
  *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
  v13 = v11;
  v89 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
  v14._countAndFlagsBits = 0x6E6974617267694DLL;
  v14._object = (void *)0xEA00000000002067;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v15 = objc_msgSend(a1, sel_name);
  v16 = sub_19CFDF578();
  v18 = v17;

  v88[3] = MEMORY[0x1E0DEA968];
  v88[0] = v16;
  v88[1] = v18;
  sub_19CCF8C5C((uint64_t)v88, (uint64_t)v87, &qword_1ECEB3370);
  v84 = 0u;
  v85 = 0u;
  sub_19CD40658((uint64_t)v87, (uint64_t)&v84);
  v83[0] = 0;
  v81 = v84;
  v82 = v85;
  v19 = v89;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
  v21 = v19[2];
  v20 = v19[3];
  v76 = a1;
  if (v21 >= v20 >> 1)
    v19 = sub_19CD40918((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
  v19[2] = v21 + 1;
  v22 = &v19[5 * v21];
  v23 = v81;
  v24 = v82;
  *((_BYTE *)v22 + 64) = v83[0];
  *((_OWORD *)v22 + 2) = v23;
  *((_OWORD *)v22 + 3) = v24;
  v89 = v19;
  sub_19CCECFE4((uint64_t)v88, &qword_1ECEB3370);
  v25._object = (void *)0x800000019D076DE0;
  v25._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v25);
  *(_QWORD *)(v12 + 32) = v89;
  *(_QWORD *)&v81 = v13;
  LOBYTE(v84) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v84);

  swift_bridgeObjectRelease();
  v26 = a2[3];
  v27 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v26);
  v28 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v27 + 8);
  v28(&v81, v26, v27);
  v29 = (void *)v81;
  if ((_QWORD)v81)
  {
    v30 = objc_msgSend((id)v81, sel_identifier);

  }
  else
  {
    v30 = 0;
  }
  v31 = objc_msgSend(v80, sel_account);
  v32 = objc_msgSend(v31, sel_identifier);

  if (v30)
  {
    if (v32)
    {
      sub_19CCE5204(0, &qword_1ECEB24D0);
      v33 = v30;
      v34 = sub_19CFDFEF0();

      if ((v34 & 1) == 0)
        goto LABEL_18;
LABEL_15:
      v35 = (void *)qword_1ECEB30F0;
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v79;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v79;
      *((_QWORD *)&v85 + 1) = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v84 = 0xD00000000000003ELL;
      *((_QWORD *)&v84 + 1) = 0x800000019D076E00;
      v82 = 0u;
      v81 = 0u;
      v38 = v35;
      sub_19CD40658((uint64_t)&v84, (uint64_t)&v81);
      *(_BYTE *)(v37 + 64) = 0;
      v39 = v82;
      *(_OWORD *)(v37 + 32) = v81;
      *(_OWORD *)(v37 + 48) = v39;
      *(_QWORD *)(v36 + 32) = v37;
      *(_QWORD *)&v81 = v38;
      LOBYTE(v84) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v36, (JetEngine::LogMessageLevel)&v84);

      return swift_bridgeObjectRelease();
    }
    v32 = v30;
  }
  else if (!v32)
  {
    goto LABEL_15;
  }

LABEL_18:
  v41 = v8;
  v42 = dispatch_group_create();
  dispatch_group_enter(v42);
  v43 = v75;
  v44 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v28(&v81, v26, v27);
  v45 = (void *)v81;
  objc_msgSend(v44, sel_setAccount_, (_QWORD)v81);

  v46 = v44;
  v47 = v80;
  v48 = objc_msgSend(v80, sel_clientInfo);
  objc_msgSend(v46, sel_setClientInfo_, v48);

  v49 = v46;
  objc_msgSend(v49, sel_setIsActiveITunesAccountRequired_, objc_msgSend(v47, sel_isActiveITunesAccountRequired));

  v50 = v49;
  v51 = objc_msgSend(v47, sel_domain);
  objc_msgSend(v50, sel_setDomain_, v51);

  v52 = v50;
  objc_msgSend(v47, sel_resetInterval);
  objc_msgSend(v52, sel_setResetInterval_);

  v53 = v76;
  *(_QWORD *)&v79 = sub_19CCF3FC0(objc_msgSend(v47, sel_identifierIfExistsForKey_, v76));
  v54 = (_QWORD *)swift_allocObject();
  v55 = v73;
  v56 = v74;
  v54[2] = v73;
  v54[3] = v56;
  v54[4] = v43;
  v54[5] = v53;
  v54[6] = v52;
  v54[7] = v47;
  v72 = v42;
  v54[8] = v42;
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v55;
  v57[3] = v56;
  v57[4] = v43;
  v57[5] = v53;
  v57[6] = v52;
  v57[7] = v47;
  v57[8] = v42;
  v58 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  v59 = v41;
  v60 = *(void (**)(char *, _QWORD, uint64_t))(v41 + 104);
  v61 = v77;
  v62 = v78;
  v60(v77, *MEMORY[0x1E0DEF540], v78);
  v63 = v52;
  v64 = v53;
  v65 = v47;
  v66 = v72;
  v80 = v63;
  v67 = v64;
  v68 = v65;
  v69 = v66;
  v70 = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v62);
  *((_QWORD *)&v85 + 1) = v58;
  v86 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v84 = v70;
  *(_QWORD *)&v81 = sub_19CF1ED88;
  *((_QWORD *)&v81 + 1) = v54;
  *(_QWORD *)&v82 = sub_19CF1EDDC;
  *((_QWORD *)&v82 + 1) = v57;
  sub_19CCD5B84((uint64_t)&v84, (uint64_t)v83);
  v83[40] = 0;
  swift_retain();
  swift_retain();
  sub_19CCF411C();
  sub_19CCECFE4((uint64_t)&v81, &qword_1ECEAFFD0);
  swift_release();
  swift_release();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v84);
}

uint64_t sub_19CF1E27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[31] = a5;
  v6[32] = a6;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF1E29C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void **__return_ptr, uint64_t, uint64_t);
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v12;
  void *v13;

  v1 = v0[31];
  v12 = v0[32];
  v2 = (_QWORD *)v0[30];
  v0[26] = 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB80]), sel_init);
  v0[33] = v3;
  v4 = v2[3];
  v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v6 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 8);
  v7 = v3;
  v6(&v13, v4, v5);
  v8 = v13;
  objc_msgSend(v7, sel_setAccount_, v13);

  objc_msgSend(v7, sel_setClientInfo_, v1);
  v9 = v7;
  v10 = (void *)sub_19CFDF554();
  objc_msgSend(v9, sel_setDomain_, v10);

  sub_19CF1CA24(v0 + 26, v12);
  v0[34] = sub_19CDE247C();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CF1E3E8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CF1E464;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBEB10();
  sub_19CCECFE4(v1, &qword_1EE43E3F0);
  return swift_continuation_await();
}

uint64_t sub_19CF1E464()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 280) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = v1[21];
    v1[36] = v1[20];
    v1[37] = v3;
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CF1E4E0()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v23;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_19CFDF554();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  v4 = *(void **)(v0 + 264);
  if (!v3)
  {
    v5 = *(void **)(v0 + 232);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19D058CC0;
    *(_QWORD *)(v6 + 32) = v5;
    v23 = v6;
    sub_19CFDF878();
    sub_19CCE5204(0, qword_1EE43A340);
    v7 = v4;
    v8 = v5;
    v9 = (void *)sub_19CFDF854();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v7, sel_generateEventFieldsForKeys_, v9, v23);

    v11 = sub_19CFDF3C8();
    v12 = objc_msgSend(v8, sel_name);
    v13 = sub_19CFDF578();
    v15 = v14;

    *(_QWORD *)(v0 + 192) = v13;
    *(_QWORD *)(v0 + 200) = v15;
    sub_19CFE00C4();
    if (*(_QWORD *)(v11 + 16) && (v16 = sub_19CD20240(v0 + 80), (v17 & 1) != 0))
    {
      sub_19CD436B0(*(_QWORD *)(v11 + 56) + 32 * v16, v0 + 160);
    }
    else
    {
      *(_OWORD *)(v0 + 160) = 0u;
      *(_OWORD *)(v0 + 176) = 0u;
    }
    swift_bridgeObjectRelease();
    sub_19CD20334(v0 + 80);
    if (*(_QWORD *)(v0 + 184))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(v0 + 192) == *(_QWORD *)(v0 + 288) && *(_QWORD *)(v0 + 200) == *(_QWORD *)(v0 + 296))
        {
          swift_bridgeObjectRelease();
LABEL_14:

          goto LABEL_16;
        }
        v18 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_14;
      }
    }
    else
    {
      sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
    }
    v19 = *(_QWORD *)(v0 + 232);
    v20 = *(id *)(v0 + 264);
    v21 = (void *)sub_19CFDF554();
    objc_msgSend(v20, sel_setIdentifier_forKey_, v21, v19);

    goto LABEL_16;
  }
  objc_msgSend(*(id *)(v0 + 264), sel_reset);

LABEL_16:
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
}

uint64_t sub_19CF1E808()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF1E848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch();
}

uint64_t sub_19CF1E864()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void **)(v0 + 56);
  v3 = *(id *)(v0 + 64);
  sub_19CFDF5D8();
  *(_QWORD *)(v0 + 88) = v4;
  v5 = v2;
  v6 = sub_19CFDF5D8();
  v8 = v7;
  *(_QWORD *)(v0 + 96) = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  *(_QWORD *)(v0 + 40) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
  *(_QWORD *)(v0 + 48) = &protocol witness table for ACAccountStore;
  *(_QWORD *)(v0 + 16) = v9;
  v10 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  *(_QWORD *)(v0 + 104) = v10;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE441EA8
                                                                                     + dword_1EE441EA8);
  v11 = (id)v1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v12;
  *v12 = v0;
  v12[1] = sub_19CF1E9A0;
  return v14(v6, v8, *(_QWORD *)(v0 + 72), v0 + 16, (uint64_t)v10, ~(v1 >> 1) & 0x4000000000000000 | v1);
}

uint64_t sub_19CF1E9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  void *v9;
  void *v10;

  v6 = *v3;
  *(_QWORD *)(v6 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    v7 = *(void **)(v6 + 104);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v9 = *(void **)(v6 + 104);
    v10 = *(void **)(v6 + 80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm(v6 + 16);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  }
}

uint64_t sub_19CF1EA80()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for JEMetricsSecretMigrator()
{
  return objc_opt_self();
}

uint64_t sub_19CF1EAD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF1EAF8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_19CF1EB3C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_19CCBE344;
  return ((uint64_t (*)(void *, void *, void *, void *, void *))((char *)&dword_1EE441E78 + dword_1EE441E78))(v2, v3, v4, v5, v6);
}

uint64_t sub_19CF1EBCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EE441E88 + dword_1EE441E88))(v2, v3, v4);
}

uint64_t sub_19CF1EC48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE441E98 + dword_1EE441E98))(a1, v4, v5, v6);
}

uint64_t sub_19CF1ECCC(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_19CF1ED28(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for AMSMetricsFieldsMigrator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AMSMetricsFieldsMigrator);
}

void sub_19CF1ED88(uint64_t a1)
{
  uint64_t v1;

  sub_19CF1CB18(a1, *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

uint64_t objectdestroy_23Tm_0()
{
  id *v0;

  return swift_deallocObject();
}

void sub_19CF1EDDC(uint64_t a1)
{
  uint64_t v1;

  sub_19CF1D074(a1, *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

BOOL static LRUMultiCache.Values.Index.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL static LRUMultiCache.Values.Index.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t LRUMultiCache.Values.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = 0;
  return swift_bridgeObjectRetain();
}

void LRUMultiCache.Values.startIndex.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t LRUMultiCache.Values.endIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = MEMORY[0x1A1AD9B44](*(_QWORD *)(v2 + 8), *(_QWORD *)(a1 + 24));
  *a2 = result;
  return result;
}

_QWORD *LRUMultiCache.Values.index(after:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

uint64_t LRUMultiCache.Values.subscript.getter()
{
  return sub_19CFDF980();
}

uint64_t LRUMultiCache.Values.insert(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1A1AD9B14](v2[1], v4, v6);
  if ((v9 & 0x8000000000000000) == 0 && v9 == *v2)
  {
    v10 = sub_19CFDF938();
    MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v10);
    sub_19CFDFCA4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  sub_19CFDF938();
  return sub_19CFDF908();
}

uint64_t LRUMultiCache.Values.removeAll(where:)()
{
  uint64_t v0;

  v0 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF28], v0);
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF58], v0);
  return sub_19CFDFCBC();
}

Swift::Void __swiftcall LRUMultiCache.Values.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  sub_19CFDF938();
  sub_19CFDF92C();
}

uint64_t sub_19CF1F04C()
{
  return LRUMultiCache.Values.removeAll(where:)();
}

void sub_19CF1F064(_QWORD *a1@<X8>)
{
  LRUMultiCache.Values.startIndex.getter(a1);
}

void (*sub_19CF1F07C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_19CF1F0D8(v6, a2, a3);
  return sub_19CDB97F0;
}

void (*sub_19CF1F0D8(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  sub_19CFDF980();
  return sub_19CE83D24;
}

uint64_t sub_19CF1F160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CF202B4(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_19CF1F184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CF202B4(a1, a2, a3, a4, MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

_QWORD *sub_19CF1F1AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LRUMultiCache.Values.index(after:)(a1, a2);
}

_QWORD *sub_19CF1F1C0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;

  result = LRUMultiCache.Values.index(after:)(a1, &v3);
  *a1 = v3;
  return result;
}

uint64_t sub_19CF1F1F4@<X0>(_QWORD *a1@<X8>)
{
  LRUMultiCache.Values.makeIterator()(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF1F20C(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LRUMultiCache<A, B>.Values, a1);
  return sub_19CFDFC20();
}

uint64_t sub_19CF1F240(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LRUMultiCache<A, B>.Values, a1);
  v1 = sub_19CF20128();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t LRUMultiCache.__allocating_init(keyLimit:valueLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  LRUMultiCache.init(keyLimit:valueLimit:)(a1, a2);
  return v4;
}

void LRUMultiCache.init(keyLimit:valueLimit:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t (*v45)();
  _QWORD *v46;

  v3 = v2;
  v37 = (_QWORD *)*v3;
  v6 = sub_19CFDF2D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDF308();
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v39 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFE24();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  if (a1 && a2)
  {
    v3[2] = a2;
    sub_19CF1F674();
    v36 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441F38);
    v34 = v7;
    v35 = v11;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19D052350;
    sub_19CFDFE0C();
    sub_19CFDFE18();
    aBlock = v19;
    sub_19CF1F6B0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441F48);
    sub_19CF1F6F8();
    sub_19CFE0070();
    v20 = sub_19CFDFE30();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v3[3] = v20;
    v21 = v37[10];
    v22 = v37[11];
    v23 = v37[12];
    v24 = type metadata accessor for LRUMultiCache.Values(0, v21, v22, v23);
    aBlock = sub_19CEC0C68(v38);
    v42 = v25;
    v43 = v26;
    v27 = type metadata accessor for _LRUCache(0, v21, v24, v23);
    v28 = sub_19CCFC9C4(&aBlock, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3[4] = v28;
    swift_getObjectType();
    v29 = swift_allocObject();
    swift_weakInit();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = v21;
    v30[3] = v22;
    v30[4] = v23;
    v30[5] = v29;
    v45 = sub_19CF1FF38;
    v46 = v30;
    aBlock = MEMORY[0x1E0C809B0];
    v42 = 1107296256;
    v43 = sub_19CD0C78C;
    v44 = &block_descriptor_26;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    v32 = v39;
    sub_19CE2D434();
    sub_19CD51134();
    sub_19CFDFE3C();
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v35);
    swift_release();
    swift_release();
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDFE6C();
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_19CF1F674()
{
  unint64_t result;

  result = qword_1ECEB0400;
  if (!qword_1ECEB0400)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECEB0400);
  }
  return result;
}

unint64_t sub_19CF1F6B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE441F40;
  if (!qword_1EE441F40)
  {
    v1 = sub_19CFDFE24();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEF9D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE441F40);
  }
  return result;
}

unint64_t sub_19CF1F6F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE441F50[0];
  if (!qword_1EE441F50[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE441F48);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, qword_1EE441F50);
  }
  return result;
}

uint64_t type metadata accessor for LRUMultiCache.Values(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUMultiCache.Values);
}

uint64_t sub_19CF1F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  v0 = sub_19CFDFE24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    sub_19CFDFEC0();
    sub_19CF1F81C();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return result;
}

void sub_19CF1F81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  void (*v6)(char *, uint64_t);
  char v7;
  uint64_t v8;

  v0 = sub_19CFDFE24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDFE0C();
  sub_19CF1F6B0();
  v5 = sub_19CFE0058();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  if ((v5 & 1) != 0 || (sub_19CFDFE18(), v7 = sub_19CFE0058(), v6(v4, v0), (v7 & 1) != 0))
    LRUMultiCache.removeAll(keepingCapacity:)(v5 & 1);
}

uint64_t LRUMultiCache.deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_19CFDFE48();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUMultiCache.__deallocating_deinit()
{
  LRUMultiCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t LRUMultiCache.withValues<A>(forKey:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v5 = (_QWORD *)*v4;
  v6 = v4[4];
  v11[2] = a4;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  v7 = v5[10];
  v8 = v5[12];
  v9 = type metadata accessor for LRUMultiCache.Values(255, v7, v5[11], v8);
  type metadata accessor for _LRUCache(0, v7, v9, v8);
  swift_retain();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CF1FF44, (uint64_t)v11, v6);
  return swift_release();
}

uint64_t sub_19CF1FA1C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a6;
  v10 = *(_QWORD *)(*a5 + 80);
  v9 = *(_QWORD *)(*a5 + 88);
  v11 = *(_QWORD *)(*a5 + 96);
  v12 = type metadata accessor for LRUMultiCache.Values(255, v10, v9, v11);
  v13 = type metadata accessor for _LRUCache(0, v10, v12, v11);
  sub_19CEC00E8(a2, v13, (char *)&v18);
  if (v19)
  {
    v20 = v18;
    v21 = v19;
    a3(&v20);
    sub_19CF1FB60(&v20, a1, a2, v10, v9, v22, v11);
  }
  else
  {
    v14 = a5[2];
    v15 = sub_19CFDF8B4();
    v20 = v14;
    v21 = v15;
    a3(&v20);
    sub_19CF1FCA8(&v20, a1, a2, v10, v9, v22, v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF1FB60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v14[1];
  v24 = *v14;
  v25 = v15;
  v19 = type metadata accessor for LRUMultiCache.Values(0, v16, v17, v18);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LRUMultiCache<A, B>.Values, v19);
  if ((sub_19CFDFC5C() & 1) != 0)
  {
    v20 = type metadata accessor for _LRUCache(0, a4, v19, a7);
    sub_19CEC05D0(a3, v20, (char *)&v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a4);
    v22 = a1[1];
    v24 = *a1;
    v25 = v22;
    v23 = type metadata accessor for _LRUCache(0, a4, v19, a7);
    swift_bridgeObjectRetain();
    return sub_19CEC03FC((char *)&v24, (uint64_t)v13, v23);
  }
}

uint64_t sub_19CF1FCA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v14[1];
  v23 = *v14;
  v24 = v15;
  v19 = type metadata accessor for LRUMultiCache.Values(0, v16, v17, v18);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LRUMultiCache<A, B>.Values, v19);
  result = sub_19CFDFC5C();
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a4);
    v21 = a1[1];
    v23 = *a1;
    v24 = v21;
    v22 = type metadata accessor for _LRUCache(0, a4, v19, a7);
    swift_bridgeObjectRetain();
    return sub_19CEC03FC((char *)&v23, (uint64_t)v13, v22);
  }
  return result;
}

Swift::Void __swiftcall LRUMultiCache.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool v10;

  v2 = *v1;
  v3 = v1[4];
  v4 = *(_QWORD *)(*v1 + 88);
  v7 = *(_QWORD *)(*v1 + 80);
  v8 = v4;
  v9 = *(_QWORD *)(v2 + 96);
  v10 = keepingCapacity;
  v5 = type metadata accessor for LRUMultiCache.Values(255, v7, v4, v9);
  type metadata accessor for _LRUCache(0, v7, v5, v9);
  swift_retain();
  sub_19CDF62F4((void (*)(uint64_t))sub_19CF1FF64, (uint64_t)&v6, v3);
  swift_release();
}

uint64_t sub_19CF1FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  v7 = type metadata accessor for LRUMultiCache.Values(255, a3, a4, a5);
  type metadata accessor for _LRUCache(0, a3, v7, a5);
  return sub_19CEC11F0();
}

uint64_t sub_19CF1FED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LRUMultiCache.withValues<A>(forKey:perform:)(a1, a2, a3, a4);
}

uint64_t sub_19CF1FEF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CF1FF14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF1FF38()
{
  return sub_19CF1F750();
}

uint64_t sub_19CF1FF44(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF1FA1C(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CF1FF64(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF1FE60(a1, *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_19CF1FF84()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF1FF94(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LRUMultiCache<A, B>.Values);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_19CF1FFC0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF1FFD0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF1FFE0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CF1FFF0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF20000()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_19CF2003C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF2004C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUMultiCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUMultiCache);
}

uint64_t method lookup function for LRUMultiCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LRUMultiCache.__allocating_init(keyLimit:valueLimit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for LRUMultiCache.Values.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUMultiCache.Values.Index);
}

void sub_19CF200D4()
{
  uint64_t v0;

  v0 = sub_19CFDF938();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v0);
  sub_19CFE02EC();
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CF2012C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_19CFDFCD4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v19 - v11;
  v13 = sub_19CFDF50C();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v12, a1, v4);
  v14(v8, a2, v4);
  if ((v13 & 1) == 0)
  {
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v18)(v12, v4);
    goto LABEL_5;
  }
  v15 = sub_19CFDF50C();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v12, v4);
  if ((v15 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_19CF202B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t (*v25)(char *, char *, uint64_t, uint64_t);

  v25 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v24 - v19;
  v21 = sub_19CFDF50C();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v22 = v25(v20, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, AssociatedTypeWitness);
  if ((v22 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

void LanguagesMetricFieldProvider.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void LanguagesMetricFieldProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19CF20474(_QWORD *a1)
{
  return LanguagesMetricFieldProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for LanguagesMetricFieldProvider()
{
  return &type metadata for LanguagesMetricFieldProvider;
}

__n128 AppleServicesEncoderInstrumented.init(_:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v2;
  v3 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v3;
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v5;
  return result;
}

uint64_t AppleServicesEncoderInstrumented.encodeRequest(fromContentsOf:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a1;
  v2[3] = a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE2C8;
  return AppleServicesEncoder.encodeRequest(fromContentsOf:)(a2);
}

id InstrumentedAMSURLRequest.amsURLRequest.getter()
{
  id *v0;

  return *v0;
}

uint64_t assignWithCopy for AppleServicesEncoderInstrumented(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v7;
      *(_QWORD *)(a1 + 88) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v7)
  {
    sub_19CF2060C(a1 + 80);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CF2060C(uint64_t a1)
{
  destroy for JSONBridgingConfiguration.BagConfiguration();
  return a1;
}

uint64_t assignWithTake for AppleServicesEncoderInstrumented(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_5;
  if (!v6)
  {
    sub_19CF2060C(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesEncoderInstrumented(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesEncoderInstrumented(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeWithCopy for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InstrumentedAMSURLRequest(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentedAMSURLRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentedAMSURLRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CF20948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CD225F8(a1, a2, &qword_1EE441B08, a3);
}

uint64_t sub_19CF20954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CD225F8(a1, a2, &qword_1EE441B10, a3);
}

uint64_t sub_19CF20960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CD225F8(a1, a2, &qword_1EE441AF8, a3);
}

uint64_t sub_19CF2096C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s10_URLSourceVMa();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v36 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  sub_19CDE0324(a1, (uint64_t)v37);
  v17 = v38;
  if (v38)
  {
    v35 = v7;
    v18 = v8;
    v19 = v9;
    v20 = v12;
    v21 = a1;
    v22 = v14;
    v23 = v13;
    v24 = a2;
    v25 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v26 = *(void (**)(uint64_t, uint64_t))(v25 + 24);
    v27 = v25;
    a2 = v24;
    v13 = v23;
    v14 = v22;
    a1 = v21;
    v12 = v20;
    v9 = v19;
    v8 = v18;
    v7 = v35;
    v26(v17, v27);
    v29 = v28;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    if (v29)
    {
      sub_19CFDEDA4();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v37, &qword_1ECEB1328);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
  sub_19CD3E3F8(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB3030);
    v30 = 1;
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v31(v12, v7, v8);
    v32 = (uint64_t)v36;
    v31(v36, v12, v8);
    sub_19CF00B00(v32, a2);
    v30 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v30, 1, v13);
}

uint64_t sub_19CF20BC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v15[4];
  uint64_t v16;

  v16 = a2;
  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s10_URLSourceVMa();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v15[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_19CF225E4();
    sub_19CFE06DC();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v8, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    sub_19CF00B00((uint64_t)v12, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

id sub_19CF20D2C(_QWORD *a1)
{
  return sub_19CF22058(a1);
}

id sub_19CF20D40()
{
  return (id)*MEMORY[0x1E0CFD8F0];
}

id MediaArtworkSource.preferredFormat.getter()
{
  return (id)*MEMORY[0x1E0CFD8F0];
}

uint64_t MediaArtworkSource.preferredQuality.getter()
{
  return 0;
}

id sub_19CF20D6C()
{
  return (id)*MEMORY[0x1E0CFD8D8];
}

id MediaArtworkSource.preferredCropStyle.getter()
{
  return (id)*MEMORY[0x1E0CFD8D8];
}

double sub_19CF20D8C()
{
  return 0.0;
}

double MediaArtworkSource.preferredSize.getter()
{
  return 0.0;
}

uint64_t MediaArtworkSource.subscript.getter()
{
  return 0;
}

uint64_t sub_19CF20DAC@<X0>(uint64_t a1@<X8>)
{
  return MediaArtworkSource.cachedImagesKey(using:)(a1);
}

uint64_t MediaArtworkSource.cachedImagesKey(using:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE43D6E0 != -1)
    swift_once();
  return sub_19CD23A14((uint64_t)&unk_1EE441850, a1);
}

void static JSONContext.Property<A>.mediaArtworkSources.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000027;
  a1[1] = 0x800000019D076470;
}

uint64_t static CodingUserInfoKey.mediaArtworkSources.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19CD225F8(0xD000000000000027, 0x800000019D076470, &qword_1EE441AF8, a1);
}

uint64_t dispatch thunk of MediaArtworkSource.preferredFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredQuality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredCropStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MediaArtworkSource.preferredSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MediaArtworkSource.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MediaArtworkSource.cachedImagesKey(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MediaArtworkSource.resolve(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

ValueMetadata *_s12_EmptySourceVMa()
{
  return &_s12_EmptySourceVN;
}

uint64_t sub_19CF20EC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF20ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_19CF20F10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CF20F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s10_URLSourceVMa()
{
  uint64_t result;

  result = qword_1EE4420F0;
  if (!qword_1EE4420F0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *_s20_AppleServicesSourceVMa()
{
  return &_s20_AppleServicesSourceVN;
}

uint64_t sub_19CF20FA8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE43D6E0 != -1)
    swift_once();
  return sub_19CD23A14((uint64_t)&unk_1EE441850, a1);
}

uint64_t sub_19CF20FF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_19CF21034(_QWORD *a1)
{
  return sub_19CF21A98(a1);
}

uint64_t sub_19CF21048(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE0748();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CF210C8(uint64_t a1)
{
  return sub_19CF21C30(a1);
}

uint64_t sub_19CF210DC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_19CF21FB0(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19CF21104@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _BYTE v17[40];
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441878);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *a2;
  sub_19CD3E448(a1, (uint64_t)v17);
  v18 = v10;
  sub_19CF2096C((uint64_t)v17, (uint64_t)v9);
  v11 = _s10_URLSourceVMa();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    sub_19CCECFE4((uint64_t)v9, &qword_1EE441878);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
    sub_19CDC5494();
    swift_allocError();
    v13 = MEMORY[0x1E0DEE9D8];
    *v14 = v12;
    v14[1] = v13;
    v14[2] = 0;
    v14[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  else
  {
    sub_19CD3E3F8(a1);
    return sub_19CF00B00((uint64_t)v9, a3);
  }
}

uint64_t sub_19CF21244()
{
  sub_19CFDECFC();
  return sub_19CFE00C4();
}

uint64_t sub_19CF2128C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF20BC4(a1, a2);
}

uint64_t sub_19CF212A0(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  sub_19CFDECFC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CF21350@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF21104(a1, a2, a3);
}

uint64_t sub_19CF2136C@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD v24[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)v24 - v17;
  v19 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_quality_, a1[3], *a1, 70, 1.0, 1.0);
  if (v19)
  {
    v20 = v19;
    sub_19CFDED74();

    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v21(v9, v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v21(v18, v9, v10);
      v24[0] = sub_19CFDECFC();
      v24[1] = v22;
      sub_19CFE00C4();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1ECEB3030);
  if (qword_1EE43D6E0 != -1)
    swift_once();
  return sub_19CD23A14((uint64_t)&unk_1EE441850, a3);
}

uint64_t sub_19CF21570@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v27 - v12;
  if (*((double *)a1 + 4) <= 0.0 || *((double *)a1 + 5) <= 0.0)
  {
    v19 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    v14 = *a1;
    v15 = a1[3];
    if ((a1[2] & 1) != 0)
    {
      v16 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_, v15, v14);
      if (v16)
      {
        v17 = v16;
        sub_19CFDED74();

        v18 = sub_19CFDEDE0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
      }
      else
      {
        v24 = sub_19CFDEDE0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
      }
      v25 = (uint64_t)v9;
    }
    else
    {
      v21 = objc_msgSend(a2, sel_URLWithSize_cropStyle_format_quality_, v15, v14, a1[1]);
      if (v21)
      {
        v22 = v21;
        sub_19CFDED74();

        v23 = sub_19CFDEDE0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
      }
      else
      {
        v26 = sub_19CFDEDE0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v13, 1, 1, v26);
      }
      v25 = (uint64_t)v13;
    }
    return sub_19CEDEE18(v25, a3);
  }
}

id sub_19CF2174C()
{
  id *v0;

  return objc_msgSend(*v0, sel_artworkSize);
}

id sub_19CF2175C(uint64_t a1)
{
  id *v1;

  return objc_msgSend(objc_retainAutorelease(*v1), sel_colorWithKind_, a1);
}

uint64_t sub_19CF2178C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;

  return sub_19CF2136C(a1, *v2, a2);
}

uint64_t sub_19CF21794@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;

  return sub_19CF21570(a1, *v2, a2);
}

id sub_19CF2179C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_19CF22058(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_19CF217C4(_QWORD *a1)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];

  v3 = objc_msgSend(*v1, sel_artworkDictionary);
  v4 = sub_19CFDF3C8();

  v7[3] = &type metadata for FoundationValue;
  v7[4] = &off_1E3DCC5B0;
  v5 = swift_allocObject();
  v7[0] = v5;
  *(_QWORD *)(v5 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
  *(_QWORD *)(v5 + 16) = v4;
  JSONObject.encode(to:)(a1);
  return sub_19CD3E3F8((uint64_t)v7);
}

uint64_t sub_19CF2189C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _BYTE v10[40];

  sub_19CD3E448(a1, (uint64_t)v10);
  v4 = sub_19CF21D3C((uint64_t)v10);
  if (v4)
  {
    v5 = v4;
    result = sub_19CD3E3F8(a1);
    *a2 = v5;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
    sub_19CDC5494();
    swift_allocError();
    v8 = MEMORY[0x1E0DEE9D8];
    *v9 = v7;
    v9[1] = v8;
    v9[2] = 0;
    v9[3] = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  return result;
}

id sub_19CF21958@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_19CF21D3C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19CF2197C(void **a1, void **a2)
{
  return sub_19CF21994(*a1, *a2);
}

_UNKNOWN **sub_19CF21988()
{
  return &protocol witness table for URL;
}

uint64_t sub_19CF21994(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[3];
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_artworkDictionary);
  v4 = sub_19CFDF3C8();

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
  v9[0] = v4;
  v5 = objc_msgSend(a2, sel_artworkDictionary);
  v6 = sub_19CFDF3C8();

  v8[3] = v10;
  v8[0] = v6;
  LOBYTE(v5) = _isStructurallyEqual(_:to:with:at:)(v9, v8, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  return v5 & 1;
}

uint64_t sub_19CF21A98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[4];

  v3 = sub_19CFE01A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    if ((sub_19CFE03E8() & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_19CFE09B8();
      sub_19CFE019C();
      v8 = sub_19CFE01B4();
      swift_allocError();
      v10 = v9;
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v9, v7, v3);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DEC458], v8);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CF21C30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[40];

  sub_19CD3E448(a1, (uint64_t)v12);
  swift_bridgeObjectRelease();
  sub_19CDE0324((uint64_t)v12, (uint64_t)v9);
  v2 = v10;
  if (v10)
  {
    v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    sub_19CD3E3F8((uint64_t)v12);
    if ((v4 & 1) == 0)
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441880);
      sub_19CDC5494();
      swift_allocError();
      v6 = MEMORY[0x1E0DEE9D8];
      *v7 = v5;
      v7[1] = v6;
      v7[2] = 0;
      v7[3] = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v9, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v12);
  }
  return sub_19CD3E3F8(a1);
}

id sub_19CF21D3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v2 = sub_19CFDEDE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  JSONObject.dictionary.getter((uint64_t)v21);
  v11 = v22;
  if (!v22)
  {
    sub_19CCECFE4((uint64_t)v21, &qword_1EE43C1C8);
    goto LABEL_7;
  }
  v12 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v13 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 32))(MEMORY[0x1E0DEC198], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEC1A0], v11, v12);
  sub_19CDC6248((uint64_t)v21);
  if (!v13)
  {
LABEL_7:
    sub_19CD3E3F8(a1);
    return 0;
  }
  v14 = objc_allocWithZone(MEMORY[0x1E0CFDB28]);
  v15 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithDictionary_, v15);

  objc_msgSend(v16, sel_artworkSize);
  v17 = objc_msgSend(v16, sel_URLWithSize_);
  if (!v17)
  {
    sub_19CD3E3F8(a1);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, 1, 1, v2);
    goto LABEL_9;
  }
  v18 = v17;
  sub_19CFDED74();

  sub_19CD3E3F8(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v6, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
LABEL_9:

    sub_19CCECFE4((uint64_t)v10, (uint64_t *)&unk_1ECEB3030);
    return 0;
  }
  sub_19CCECFE4((uint64_t)v10, (uint64_t *)&unk_1ECEB3030);
  return v16;
}

uint64_t sub_19CF21FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_19CDE0324(a1, (uint64_t)v6);
  v2 = v7;
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    sub_19CD3E3F8(a1);
    if ((v4 & 1) == 0)
      return 1;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v6, &qword_1ECEB1328);
    sub_19CD3E3F8(a1);
  }
  return 0;
}

id sub_19CF22058(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  char *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  void *v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[4];
  _QWORD *v60;

  v2 = sub_19CFDEDE0();
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFE01A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v15);
  v16 = v60;
  sub_19CFE09D0();
  if (v16)
    goto LABEL_14;
  v48 = v5;
  v49 = v14;
  v50 = v7;
  v60 = a1;
  v51 = v6;
  v52 = v10;
  __swift_project_boxed_opaque_existential_1(v59, v59[3]);
  sub_19CE080B8();
  sub_19CFE06DC();
  JSONObject.dictionary.getter((uint64_t)v55);
  v15 = v56;
  if (!v56)
  {
    sub_19CCECFE4((uint64_t)v55, &qword_1EE43C1C8);
    goto LABEL_9;
  }
  v17 = v57;
  __swift_project_boxed_opaque_existential_1(v55, (uint64_t)v56);
  v18 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, id, uint64_t))(v17 + 32))(MEMORY[0x1E0DEC198], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEC1A0], v15, v17);
  sub_19CDC6248((uint64_t)v55);
  if (!v18)
  {
LABEL_9:
    __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    sub_19CFE09B8();
    v30 = v52;
    sub_19CFE019C();
    v31 = sub_19CFE01B4();
    swift_allocError();
    v33 = v32;
    v34 = (char *)v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530) + 48);
    *v33 = sub_19CCE5204(0, &qword_1EE442100);
    v36 = v50;
    v35 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v34, v30, v51);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v35);
    goto LABEL_12;
  }
  v19 = objc_allocWithZone(MEMORY[0x1E0CFDB28]);
  v20 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v19, sel_initWithDictionary_, v20);

  objc_msgSend(v15, sel_artworkSize);
  v21 = objc_msgSend(v15, sel_URLWithSize_);
  v22 = v52;
  if (!v21)
  {
    v27 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v49, 1, 1, v54);
    v29 = v60;
    goto LABEL_11;
  }
  v23 = v21;
  v24 = v48;
  sub_19CFDED74();

  v25 = v53;
  v26 = v54;
  v27 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v49, v24, v54);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26);
  v29 = v60;
  if (v28 == 1)
  {
LABEL_11:
    sub_19CCECFE4(v27, (uint64_t *)&unk_1ECEB3030);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    v37 = sub_19CFE01B4();
    swift_allocError();
    v39 = v38;
    v40 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F350) + 48);
    *(_QWORD *)(v39 + 24) = &type metadata for OpenCodingKey;
    *(_QWORD *)(v39 + 32) = sub_19CDD5ED8();
    *(_OWORD *)v39 = xmmword_19D05B5E0;
    *(_BYTE *)(v39 + 16) = 1;
    v41 = v50;
    v42 = v40;
    v43 = v22;
    v44 = v22;
    v45 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v42, v43, v51);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DEC448], v37);
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v45);
LABEL_12:
    sub_19CD3E3F8((uint64_t)v58);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
    a1 = v60;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v15;
  }
  sub_19CCECFE4(v27, (uint64_t *)&unk_1ECEB3030);
  sub_19CD3E3F8((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  return v15;
}

uint64_t sub_19CF225C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_19CF225E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE440558;
  if (!qword_1EE440558)
  {
    v1 = sub_19CFDEDE0();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0038], v1);
    atomic_store(result, (unint64_t *)&qword_1EE440558);
  }
  return result;
}

uint64_t sub_19CF2262C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t inited;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _OWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  uint64_t result;
  int64_t v55;
  _OWORD v56[2];
  __int128 v57;
  uint64_t v58;
  _QWORD v59[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D050760;
  v11 = MEMORY[0x1E0DEA968];
  sub_19CFE00C4();
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  sub_19CFE00C4();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a4);
  v13 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB24C0);
  *(_QWORD *)(inited + 168) = v13;
  *(_QWORD *)(inited + 144) = v12;
  v59[0] = 0x746867696568;
  v59[1] = 0xE600000000000000;
  sub_19CFE00C4();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a5);
  *(_QWORD *)(inited + 240) = v13;
  *(_QWORD *)(inited + 216) = v14;
  v15 = (_QWORD *)sub_19CD20744(inited);
  v16 = 0;
  v17 = a3 + 64;
  v18 = 1 << *(_BYTE *)(a3 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(a3 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  v55 = v21;
  if (!v20)
    goto LABEL_7;
LABEL_4:
  v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v22 | (v16 << 6); ; i = __clz(__rbit64(v31)) + (v16 << 6))
  {
    v24 = 8 * i;
    v25 = *(void **)(*(_QWORD *)(a3 + 56) + v24);
    v26 = *(id *)(*(_QWORD *)(a3 + 48) + v24);
    v27 = v25;
    sub_19CDED368(0);
    if (!v29)
    {

      if (v20)
        goto LABEL_4;
      goto LABEL_7;
    }
    v33 = v28;
    v34 = v29;
    *(_QWORD *)&v57 = sub_19CFDF578();
    *((_QWORD *)&v57 + 1) = v35;
    v36 = MEMORY[0x1E0DEA968];
    sub_19CFE00C4();
    v58 = v36;
    *(_QWORD *)&v57 = v33;
    *((_QWORD *)&v57 + 1) = v34;
    sub_19CD433C0(&v57, v56);
    v37 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40 = sub_19CD20240((uint64_t)v59);
    v41 = v37[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
      goto LABEL_37;
    v44 = v39;
    if (v37[3] >= v43)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v15 = v37;
        if ((v39 & 1) == 0)
          goto LABEL_30;
      }
      else
      {
        sub_19CE18490();
        v15 = v37;
        if ((v44 & 1) == 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_19CD20454(v43, isUniquelyReferenced_nonNull_native);
      v45 = sub_19CD20240((uint64_t)v59);
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_39;
      v40 = v45;
      v15 = v37;
      if ((v44 & 1) == 0)
      {
LABEL_30:
        v15[(v40 >> 6) + 8] |= 1 << v40;
        sub_19CD23A14((uint64_t)v59, v15[6] + 40 * v40);
        sub_19CD433C0(v56, (_OWORD *)(v15[7] + 32 * v40));
        v48 = v15[2];
        v49 = __OFADD__(v48, 1);
        v50 = v48 + 1;
        if (v49)
          goto LABEL_38;
        v15[2] = v50;
        goto LABEL_32;
      }
    }
    v47 = (_OWORD *)(v15[7] + 32 * v40);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    sub_19CD433C0(v56, v47);
LABEL_32:
    swift_bridgeObjectRelease();
    sub_19CD20334((uint64_t)v59);

    v21 = v55;
    if (v20)
      goto LABEL_4;
LABEL_7:
    v30 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 >= v21)
      goto LABEL_34;
    v31 = *(_QWORD *)(v17 + 8 * v30);
    ++v16;
    if (!v31)
    {
      v16 = v30 + 1;
      if (v30 + 1 >= v21)
        goto LABEL_34;
      v31 = *(_QWORD *)(v17 + 8 * v16);
      if (!v31)
      {
        v16 = v30 + 2;
        if (v30 + 2 >= v21)
          goto LABEL_34;
        v31 = *(_QWORD *)(v17 + 8 * v16);
        if (!v31)
          break;
      }
    }
LABEL_20:
    v20 = (v31 - 1) & v31;
  }
  v32 = v30 + 3;
  if (v32 >= v21)
  {
LABEL_34:
    swift_release();
    v51 = objc_allocWithZone(MEMORY[0x1E0CFDB28]);
    v52 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    v53 = objc_msgSend(v51, sel_initWithDictionary_, v52);

    return (uint64_t)v53;
  }
  v31 = *(_QWORD *)(v17 + 8 * v32);
  if (v31)
  {
    v16 = v32;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v16 >= v21)
      goto LABEL_34;
    v31 = *(_QWORD *)(v17 + 8 * v16);
    ++v32;
    if (v31)
      goto LABEL_20;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF22AC0(void (*a1)(uint64_t *__return_ptr, _BYTE *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[15];
  uint64_t v15;

  v4 = sub_19CFDEF84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_19CD1F0E4(v1, (uint64_t)v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
    return 2;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v8, v12, v4);
  a1(&v15, v8);
  if (v2)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

uint64_t sub_19CF22C04(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_19CCC5D50(a1, a2, a3, (uint64_t)sub_19CF242B0, (uint64_t)sub_19CF242B4);
}

uint64_t sub_19CF22C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  int64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t i;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(unint64_t, char *, uint64_t);
  char *v38;
  unint64_t v39;
  uint64_t v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v36 = (char *)&v35 - v12;
  v13 = *(_QWORD *)(a1 + 64);
  v40 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  if (v16)
    goto LABEL_8;
LABEL_14:
  v30 = v19 + 1;
  if (!__OFADD__(v19, 1))
  {
    if (v30 < v17)
    {
      v31 = *(_QWORD *)(v40 + 8 * v30);
      ++v19;
      if (v31)
        goto LABEL_29;
      v19 = v30 + 1;
      if (v30 + 1 >= v17)
        goto LABEL_32;
      v31 = *(_QWORD *)(v40 + 8 * v19);
      if (v31)
        goto LABEL_29;
      v19 = v30 + 2;
      if (v30 + 2 >= v17)
        goto LABEL_32;
      v31 = *(_QWORD *)(v40 + 8 * v19);
      if (v31)
        goto LABEL_29;
      v19 = v30 + 3;
      if (v30 + 3 >= v17)
        goto LABEL_32;
      v31 = *(_QWORD *)(v40 + 8 * v19);
      if (v31)
      {
LABEL_29:
        v16 = (v31 - 1) & v31;
        for (i = __clz(__rbit64(v31)) + (v19 << 6); ; i = v22 | (v19 << 6))
        {
          v33 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * i);
          v34 = objc_msgSend(v33, sel_beginDate);
          if (v34)
          {
            v20 = v34;
            sub_19CFDEF60();

            v21 = 0;
          }
          else
          {
            v21 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v21, 1, v6);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
          {
            result = sub_19CDEABB4((uint64_t)v5);
            if (!v16)
              goto LABEL_14;
          }
          else
          {
            v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
            v25 = v36;
            v24(v36, v5, v6);
            v37 = (uint64_t (*)(unint64_t, char *, uint64_t))v24;
            v24(v38, v25, v6);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v39 = sub_19CED6A40(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
            v27 = *(_QWORD *)(v39 + 16);
            v26 = *(_QWORD *)(v39 + 24);
            if (v27 >= v26 >> 1)
              v39 = sub_19CED6A40(v26 > 1, v27 + 1, 1, v39);
            v28 = v38;
            v29 = v39;
            *(_QWORD *)(v39 + 16) = v27 + 1;
            result = v37(v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v27, v28, v6);
            if (!v16)
              goto LABEL_14;
          }
LABEL_8:
          v22 = __clz(__rbit64(v16));
          v16 &= v16 - 1;
        }
      }
      v32 = v30 + 4;
      if (v32 < v17)
      {
        v31 = *(_QWORD *)(v40 + 8 * v32);
        if (v31)
        {
          v19 = v32;
          goto LABEL_29;
        }
        while (1)
        {
          v19 = v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_34;
          if (v19 >= v17)
            break;
          v31 = *(_QWORD *)(v40 + 8 * v19);
          ++v32;
          if (v31)
            goto LABEL_29;
        }
      }
    }
LABEL_32:
    swift_release();
    return v39;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t SignpostAggregator.TimedEvent.Duration.nanoseconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double SignpostAggregator.TimedEvent.Duration.milliseconds.getter()
{
  unint64_t *v0;

  return (double)*v0 / 1000000.0;
}

double SignpostAggregator.TimedEvent.Duration.seconds.getter()
{
  unint64_t *v0;

  return (double)*v0 / 1000000.0 / 1000.0;
}

void SignpostAggregator.TimedEvent.duration.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t SignpostAggregator.TimedEvent.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignpostAggregator.__allocating_init(subsystem:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;

  v8 = swift_allocObject();
  sub_19CFDEF78();
  v9 = (_QWORD *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_subsystem);
  *v9 = a1;
  v9[1] = a2;
  v10 = (_QWORD *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_category);
  *v10 = a3;
  v10[1] = a4;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock) = v11;
  return v8;
}

uint64_t SignpostAggregator.init(subsystem:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v9 = sub_19CFDEF84();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF78();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime, v13, v9);
  v14 = (_QWORD *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_subsystem);
  *v14 = a1;
  v14[1] = a2;
  v15 = (_QWORD *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_category);
  *v15 = a3;
  v15[1] = a4;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock) = v16;
  return v4;
}

uint64_t SignpostAggregator.collect(on:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_19CCD5B84(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE442108);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  v5 = v11;
  v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_19CF2332C;
  v7[3] = v1;
  v7[4] = v2;
  v8 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v6 + 8);
  swift_retain_n();
  swift_retain();
  v8(sub_19CF23360, v7, v5, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v2;
}

id sub_19CF2329C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(void *), void *a4, _QWORD *a5)
{
  void *v10;

  v10 = *(void **)((char *)a5 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_lock);
  swift_retain();
  objc_msgSend(v10, sel_lock);
  sub_19CF2338C(a5, a3, a4, a1, a2);
  return objc_msgSend(v10, sel_unlock);
}

id sub_19CF2332C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(void *), void *a4)
{
  _QWORD *v4;

  return sub_19CF2329C(a1, a2, a3, a4, v4);
}

uint64_t sub_19CF23334()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF23360()
{
  uint64_t v0;

  return sub_19CCC5D50(*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)sub_19CF254D4, (uint64_t)sub_19CF254DC);
}

uint64_t sub_19CF2338C(_QWORD *a1, void (*a2)(void *), void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void *v47;
  void (*v48)(char *, uint64_t);
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t *v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v77;
  void (*v78)(void *);
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  void (*v82)(uint64_t *);
  char *v83;
  char *v84;
  id v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94[3];
  uint64_t aBlock;
  uint64_t v96;
  uint64_t (*v97)();
  void *v98;
  uint64_t (*v99)(void *);
  uint64_t v100;
  uint64_t v101;

  v89 = a5;
  v82 = a4;
  v77 = a3;
  v78 = a2;
  v86 = a1;
  v101 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v5, v6);
  v75 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v84 = (char *)&v72 - v10;
  v11 = sub_19CFDEF84();
  v12 = *(_QWORD **)(v11 - 8);
  v91 = v11;
  MEMORY[0x1E0C80A78](v11, v13);
  v74 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v80 = (char *)&v72 - v17;
  MEMORY[0x1E0C80A78](v18, v19);
  v83 = (char *)&v72 - v20;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)&v72 - v23;
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v72 - v27;
  v29 = swift_allocObject();
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v29 + 16) = MEMORY[0x1E0DEE9D8];
  v81 = (uint64_t *)(v29 + 16);
  v90 = v28;
  sub_19CFDEF78();
  v31 = swift_allocBox();
  v32 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12[7];
  v73 = v33;
  v76 = v32;
  v32(v33, 1, 1, v11);
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D97678]), sel_init);
  v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D97680]), sel_init);
  v36 = (void *)sub_19CFDF554();
  v37 = (void *)sub_19CFDF554();
  objc_msgSend(v35, sel_addSubsystem_category_, v36, v37);

  v85 = v35;
  objc_msgSend(v34, sel_setSubsystemCategoryFilter_, v35);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v29;
  *(_QWORD *)(v38 + 24) = v31;
  v99 = sub_19CF25530;
  v100 = v38;
  v39 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v96 = 1107296256;
  v97 = sub_19CF23FC8;
  v98 = &block_descriptor_27;
  v40 = _Block_copy(&aBlock);
  v88 = v29;
  swift_retain();
  v87 = v31;
  swift_retain();
  swift_release();
  objc_msgSend(v34, sel_setIntervalCompletionProcessingBlock_, v40);
  _Block_release(v40);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_19CE1C0F8(v30);
  v99 = sub_19CF25538;
  v100 = v41;
  aBlock = v39;
  v96 = 1107296256;
  v97 = sub_19CF23FC8;
  v98 = &block_descriptor_12_3;
  v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v34, sel_setBeginEventProcessingBlock_, v42);
  _Block_release(v42);
  v99 = sub_19CF25540;
  v100 = v41;
  aBlock = v39;
  v96 = 1107296256;
  v97 = sub_19CF23FC8;
  v98 = &block_descriptor_15_1;
  v43 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v34, sel_setEndEventProcessingBlock_, v43);
  _Block_release(v43);
  v44 = (char *)v86 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime;
  swift_beginAccess();
  v45 = (void (*)(char *, char *, uint64_t))v12[2];
  v46 = v91;
  v45(v24, v44, v91);
  v47 = (void *)sub_19CFDEF0C();
  v86 = v12;
  v48 = (void (*)(char *, uint64_t))v12[1];
  v48(v24, v46);
  v94[0] = 0;
  LODWORD(v46) = objc_msgSend(v34, sel_processLogArchiveWithPath_startDate_endDate_errorOut_, 0, v47, 0, v94);

  v49 = v94[0];
  if (!(_DWORD)v46)
  {
    v59 = v49;
    v60 = (void *)sub_19CFDEC9C();

    swift_willThrow();
    v78(v60);

    v61 = v90;
    v62 = v91;
LABEL_14:
    v48(v61, v62);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  v78 = (void (*)(void *))v48;
  v77 = v34;
  v50 = v85;
  swift_beginAccess();
  v51 = swift_bridgeObjectRetain();
  v52 = v79;
  v53 = (_QWORD *)sub_19CF22C18(v51);
  swift_bridgeObjectRelease();
  v93 = (char *)v53;
  swift_bridgeObjectRetain();
  sub_19CF242B8((_QWORD **)&v93);
  if (!v52)
  {
    swift_bridgeObjectRelease();
    v54 = *((_QWORD *)v93 + 2);
    v55 = v86;
    v79 = 0;
    if (v54)
    {
      v56 = (uint64_t)v84;
      v57 = v91;
      v45(v84, &v93[(*((unsigned __int8 *)v86 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v86 + 80)], v91);
      v58 = 0;
    }
    else
    {
      v58 = 1;
      v57 = v91;
      v56 = (uint64_t)v84;
    }
    v76(v56, v58, 1, v57);
    swift_release();
    v63 = v80;
    v45(v80, v90, v57);
    v64 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v55[6];
    v62 = v57;
    if (v64(v56, 1, v57) == 1)
    {
      v65 = v73;
      swift_beginAccess();
      v66 = v75;
      sub_19CD1F0E4(v65, v75);
      v67 = (void (*)(char *, char *, uint64_t))v55[4];
      v68 = v74;
      v67(v74, v63, v62);
      if (v64(v66, 1, v62) == 1)
      {
        v67(v83, v68, v62);
        sub_19CDEABB4(v66);
      }
      else
      {
        ((void (*)(char *, uint64_t))v78)(v68, v62);
        v67(v83, (char *)v66, v62);
      }
      v61 = v90;
      sub_19CDEABB4((uint64_t)v84);
      v55 = v86;
      v69 = v83;
    }
    else
    {
      ((void (*)(char *, uint64_t))v78)(v63, v57);
      v69 = v83;
      ((void (*)(char *, uint64_t, uint64_t))v55[4])(v83, v56, v62);
      v61 = v90;
    }
    swift_beginAccess();
    ((void (*)(char *, char *, uint64_t))v55[5])(v44, v69, v62);
    swift_endAccess();
    v70 = v81;
    swift_beginAccess();
    v92 = *v70;
    swift_bridgeObjectRetain();
    v82(&v92);

    swift_bridgeObjectRelease();
    v48 = (void (*)(char *, uint64_t))v78;
    goto LABEL_14;
  }
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_19CF23C08(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  MEMORY[0x1E0C80A78](v4, v5);
  v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v48 = (uint64_t)&v47 - v9;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v47 - v12;
  v14 = sub_19CFDEF84();
  v51 = *(_QWORD *)(v14 - 8);
  v52 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v50 = (char *)&v47 - v20;
  v21 = (_QWORD *)(a2 + 16);
  v49 = swift_projectBox();
  v22 = objc_msgSend(a1, sel_durationNanoseconds);
  v23 = objc_msgSend(a1, sel_name);
  v24 = sub_19CFDF578();
  v26 = v25;

  swift_beginAccess();
  v27 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v27;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v27 = sub_19CED6A54(0, v27[2] + 1, 1, v27);
    *v21 = v27;
  }
  v30 = v27[2];
  v29 = v27[3];
  if (v30 >= v29 >> 1)
  {
    v27 = sub_19CED6A54((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
    *v21 = v27;
  }
  v31 = v51;
  v27[2] = v30 + 1;
  v32 = &v27[3 * v30];
  v32[4] = v22;
  v32[5] = v24;
  v32[6] = v26;
  swift_endAccess();
  v33 = objc_msgSend(a1, sel_endEvent);
  v34 = objc_msgSend(v33, sel_endDate);

  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v13, 1, 1, v52);
    goto LABEL_11;
  }
  sub_19CFDEF60();

  v35 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v36 = v17;
  v37 = v52;
  v35(v13, v36, v52);
  v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
  v38(v13, 0, 1, v37);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v37) == 1)
  {
LABEL_11:
    sub_19CDEABB4((uint64_t)v13);
    return 1;
  }
  v39 = v50;
  v35(v50, v13, v37);
  v40 = v49;
  swift_beginAccess();
  v41 = v48;
  v42 = sub_19CD1F0E4(v40, v48);
  MEMORY[0x1E0C80A78](v42, v43);
  *(&v47 - 2) = v39;
  v44 = sub_19CF22AC0((void (*)(uint64_t *__return_ptr, _BYTE *))sub_19CF25548);
  sub_19CDEABB4(v41);
  if (v44 == 2 || (v44 & 1) != 0)
  {
    v46 = (uint64_t)v47;
    v35(v47, v50, v37);
    v38((char *)v46, 0, 1, v37);
    swift_beginAccess();
    sub_19CF2557C(v46, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v50, v37);
  }
  return 1;
}

uint64_t sub_19CF23FCC(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v4 = objc_msgSend(a1, sel_signpostId);
  swift_beginAccess();
  v5 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0x8000000000000000;
  sub_19CE17A58((uint64_t)v5, (uint64_t)v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 16) = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return 1;
}

uint64_t sub_19CF24074(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_19CF240C4(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_signpostId);
  swift_beginAccess();
  v2 = (void *)sub_19CDD2FF0((uint64_t)v1);
  swift_endAccess();

  return 1;
}

uint64_t SignpostAggregator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime;
  v2 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t SignpostAggregator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9JetEngine18SignpostAggregator_nextStartTime;
  v2 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_19CF2422C()
{
  return type metadata accessor for SignpostAggregator();
}

uint64_t method lookup function for SignpostAggregator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignpostAggregator.__allocating_init(subsystem:category:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *assignWithCopy for SignpostAggregator.TimedEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SignpostAggregator.TimedEvent()
{
  return &type metadata for SignpostAggregator.TimedEvent;
}

ValueMetadata *type metadata accessor for SignpostAggregator.TimedEvent.Duration()
{
  return &type metadata for SignpostAggregator.TimedEvent.Duration;
}

void sub_19CF242B8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_19CFDEF84() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_19CE74130(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_19CF24338(v5);
  *a1 = v3;
}

void sub_19CF24338(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  int64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  int64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t);
  char *v147;
  char *v148;
  _QWORD *v149;
  int64_t v150;
  char *v151;
  uint64_t v152;
  int64_t v153;
  uint64_t v154;

  v3 = sub_19CFDEF84();
  v154 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v140 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v7);
  v151 = (char *)&v136 - v8;
  MEMORY[0x1E0C80A78](v9, v10);
  v148 = (char *)&v136 - v11;
  MEMORY[0x1E0C80A78](v12, v13);
  v147 = (char *)&v136 - v14;
  v15 = a1[1];
  v16 = sub_19CFE0580();
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_140;
    if (v15)
      sub_19CF24D50(0, v15, 1, a1);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_148;
  v137 = v16;
  v143 = v1;
  if (v15 < 2)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    v142 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    if (v15 != 1)
    {
      v24 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v23 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_105:
      v136 = v21;
      if (v24 >= 2)
      {
        v127 = *a1;
        do
        {
          v128 = v24 - 2;
          if (v24 < 2)
            goto LABEL_135;
          if (!v127)
            goto LABEL_147;
          v129 = v23;
          v130 = v23 + 32;
          v131 = *(_QWORD *)&v23[16 * v128 + 32];
          v132 = *(_QWORD *)&v23[16 * v24 + 24];
          v133 = v143;
          sub_19CF24FB0(v127 + *(_QWORD *)(v154 + 72) * v131, v127 + *(_QWORD *)(v154 + 72) * *(_QWORD *)&v130[16 * v24 - 16], v127 + *(_QWORD *)(v154 + 72) * v132, v142);
          v143 = v133;
          if (v133)
            break;
          if (v132 < v131)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v129 = sub_19CF53AFC((uint64_t)v129);
          if (v128 >= *((_QWORD *)v129 + 2))
            goto LABEL_137;
          v134 = &v129[16 * v128 + 32];
          *(_QWORD *)v134 = v131;
          *((_QWORD *)v134 + 1) = v132;
          v135 = *((_QWORD *)v129 + 2);
          if (v24 > v135)
            goto LABEL_138;
          v23 = v129;
          memmove(&v129[16 * v24 + 16], &v129[16 * v24 + 32], 16 * (v135 - v24));
          *((_QWORD *)v129 + 2) = v135 - 1;
          v24 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v136 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v18 = v17 >> 1;
    v19 = sub_19CFDF8C0();
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v154 + 80);
    v136 = v19;
    v142 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v23 = (char *)MEMORY[0x1E0DEE9D8];
  v149 = a1;
  while (1)
  {
    v25 = v22;
    v26 = v22 + 1;
    v141 = v22;
    if (v22 + 1 >= v15)
    {
      v38 = v22 + 1;
      v45 = v143;
    }
    else
    {
      v145 = *a1;
      v27 = v145;
      v152 = v15;
      v28 = v22;
      v29 = v154;
      v30 = *(_QWORD *)(v154 + 72);
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
      v32 = v147;
      v31(v147, v145 + v30 * v26, v3);
      v33 = v27 + v30 * v28;
      v34 = v148;
      v31(v148, v33, v3);
      v150 = sub_19CCDA660();
      LODWORD(v146) = sub_19CFDF500();
      v35 = *(void (**)(char *, uint64_t))(v29 + 8);
      v36 = v34;
      v37 = v145;
      v35(v36, v3);
      v35(v32, v3);
      v38 = v28 + 2;
      v15 = v152;
      v153 = v30;
      if (v38 >= v152)
      {
        v45 = v143;
        v44 = v30;
      }
      else
      {
        v138 = v23;
        v144 = v30 * v26;
        v39 = v30 * v38;
        while (1)
        {
          v40 = v38;
          v41 = v147;
          v31(v147, v37 + v39, v3);
          v42 = v148;
          v31(v148, v37 + v144, v3);
          v43 = sub_19CFDF500();
          v35(v42, v3);
          v35(v41, v3);
          if (((v146 ^ v43) & 1) != 0)
            break;
          v38 = v40 + 1;
          v15 = v152;
          v44 = v153;
          v37 += v153;
          if (v152 == v38)
          {
            v38 = v152;
            v45 = v143;
            v23 = v138;
            goto LABEL_25;
          }
        }
        v45 = v143;
        v23 = v138;
        v38 = v40;
        v15 = v152;
        v44 = v153;
      }
LABEL_25:
      a1 = v149;
      v25 = v141;
      if ((v146 & 1) != 0)
      {
        if (v38 < v141)
          goto LABEL_141;
        if (v141 < v38)
        {
          v138 = v23;
          v46 = 0;
          v47 = v44 * (v38 - 1);
          v48 = v38 * v44;
          v49 = v141;
          v50 = v141 * v44;
          v150 = v38;
          do
          {
            if (v49 != v38 + v46 - 1)
            {
              if (!v145)
                goto LABEL_146;
              v51 = v45;
              v52 = v145 + v50;
              v53 = (char *)(v145 + v47);
              v146 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 32);
              v146(v140, v145 + v50, v3);
              if (v50 < v47 || v52 >= v145 + v48)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v50 != v47)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              v146(v53, (uint64_t)v140, v3);
              v45 = v51;
              a1 = v149;
              v38 = v150;
              v44 = v153;
            }
            ++v49;
            --v46;
            v47 -= v44;
            v48 -= v44;
            v50 += v44;
          }
          while (v49 < v38 + v46);
          v23 = v138;
          v25 = v141;
          v15 = v152;
        }
      }
    }
    if (v38 >= v15)
      goto LABEL_57;
    if (__OFSUB__(v38, v25))
      goto LABEL_139;
    if (v38 - v25 >= v137)
      goto LABEL_57;
    if (__OFADD__(v25, v137))
      goto LABEL_142;
    v54 = v25 + v137 >= v15 ? v15 : v25 + v137;
    if (v54 < v25)
      break;
    if (v38 != v54)
    {
      v138 = v23;
      v139 = v54;
      v55 = *(_QWORD *)(v154 + 72);
      v56 = *(char **)(v154 + 16);
      v143 = v45;
      v144 = (uint64_t)v56;
      v57 = v55 * (v38 - 1);
      v145 = v55;
      v58 = v38 * v55;
      do
      {
        v60 = 0;
        v150 = v38;
        v146 = (void (*)(char *, uint64_t, uint64_t))v58;
        while (1)
        {
          v61 = *a1;
          v152 = v58 + v60;
          v153 = v25;
          v62 = (char *)(v58 + v60 + v61);
          v63 = v147;
          v64 = (void (*)(char *, uint64_t, uint64_t))v144;
          ((void (*)(char *, char *, uint64_t))v144)(v147, v62, v3);
          v65 = v57;
          v66 = v57 + v60 + v61;
          v67 = a1;
          v68 = v148;
          v64(v148, v66, v3);
          sub_19CCDA660();
          LOBYTE(v61) = sub_19CFDF500();
          v69 = *(void (**)(char *, uint64_t))(v154 + 8);
          v69(v68, v3);
          v69(v63, v3);
          if ((v61 & 1) == 0)
            break;
          v70 = *v67;
          if (!*v67)
            goto LABEL_144;
          v58 = (uint64_t)v146;
          v57 = v65;
          v71 = (char *)(v70 + v65 + v60);
          v72 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
          v72(v151, (char *)v146 + v70 + v60, v3);
          swift_arrayInitWithTakeFrontToBack();
          v72(v71, v151, v3);
          v60 -= v145;
          v25 = v153 + 1;
          a1 = v149;
          v59 = v150;
          if (v150 == v153 + 1)
            goto LABEL_50;
        }
        v59 = v150;
        a1 = v67;
        v57 = v65;
        v58 = (uint64_t)v146;
LABEL_50:
        v38 = v59 + 1;
        v57 += v145;
        v58 += v145;
        v25 = v141;
      }
      while (v38 != v139);
      v38 = v139;
      v45 = v143;
      v23 = v138;
    }
LABEL_57:
    if (v38 < v25)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v143 = v45;
    v150 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v23 = sub_19CF537A8(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v75 = *((_QWORD *)v23 + 2);
    v74 = *((_QWORD *)v23 + 3);
    v24 = v75 + 1;
    if (v75 >= v74 >> 1)
      v23 = sub_19CF537A8((char *)(v74 > 1), v75 + 1, 1, v23);
    *((_QWORD *)v23 + 2) = v24;
    v76 = v23 + 32;
    v77 = &v23[16 * v75 + 32];
    v78 = v150;
    *(_QWORD *)v77 = v25;
    *((_QWORD *)v77 + 1) = v78;
    if (v75)
    {
      while (1)
      {
        v79 = v24 - 1;
        if (v24 >= 4)
        {
          v84 = &v76[16 * v24];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_123;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_124;
          v91 = v24 - 2;
          v92 = &v76[16 * v24 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_126;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_129;
          if (v96 >= v87)
          {
            v114 = &v76[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_133;
            v107 = v82 < v117;
            goto LABEL_94;
          }
        }
        else
        {
          if (v24 != 3)
          {
            v108 = *((_QWORD *)v23 + 4);
            v109 = *((_QWORD *)v23 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_88;
          }
          v81 = *((_QWORD *)v23 + 4);
          v80 = *((_QWORD *)v23 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_125;
        v91 = v24 - 2;
        v97 = &v76[16 * v24 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_128;
        v103 = &v76[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_131;
        if (__OFADD__(v101, v106))
          goto LABEL_132;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_94:
          if (v107)
            v79 = v91;
          goto LABEL_96;
        }
LABEL_88:
        if ((v102 & 1) != 0)
          goto LABEL_127;
        v110 = &v76[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_130;
        if (v113 < v101)
          goto LABEL_15;
LABEL_96:
        v118 = v79 - 1;
        if (v79 - 1 >= v24)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v119 = *a1;
        if (!*a1)
          goto LABEL_145;
        v120 = v23;
        v121 = &v76[16 * v118];
        v122 = *(_QWORD *)v121;
        v123 = &v76[16 * v79];
        v124 = *((_QWORD *)v123 + 1);
        v125 = v143;
        sub_19CF24FB0(v119 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v121, v119 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v123, v119 + *(_QWORD *)(v154 + 72) * v124, v142);
        v143 = v125;
        if (v125)
          goto LABEL_116;
        if (v124 < v122)
          goto LABEL_120;
        if (v79 > *((_QWORD *)v120 + 2))
          goto LABEL_121;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v76[16 * v118 + 8] = v124;
        v126 = *((_QWORD *)v120 + 2);
        if (v79 >= v126)
          goto LABEL_122;
        v23 = v120;
        v24 = v126 - 1;
        memmove(&v76[16 * v79], v123 + 16, 16 * (v126 - 1 - v79));
        *((_QWORD *)v120 + 2) = v126 - 1;
        a1 = v149;
        if (v126 <= 2)
          goto LABEL_15;
      }
    }
    v24 = 1;
LABEL_15:
    v15 = a1[1];
    v22 = v150;
    if (v150 >= v15)
    {
      v21 = v136;
      goto LABEL_105;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_19CFE0334();
  __break(1u);
}

void sub_19CF24D50(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  v31 = a1;
  v7 = sub_19CFDEF84();
  v39 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v38 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v35 = (char *)&v29 - v12;
  v15.n128_f64[0] = MEMORY[0x1E0C80A78](v13, v14);
  v34 = (char *)&v29 - v16;
  v37 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v17 = v39[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v39[2];
    v33 = a4;
    v41 = v17 * (v37 - 1);
    v36 = v17;
    v40 = v17 * v37;
LABEL_5:
    v18 = 0;
    v19 = v31;
    while (1)
    {
      v20 = *a4;
      v21 = v34;
      v22 = v32;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v34, v40 + v18 + *a4, v7, v15);
      v23 = v35;
      v22(v35, v41 + v18 + v20, v7);
      sub_19CCDA660();
      LOBYTE(v20) = sub_19CFDF500();
      v24 = (void (*)(char *, uint64_t))v39[1];
      v25 = v23;
      a4 = v33;
      v24(v25, v7);
      v24(v21, v7);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        v41 += v36;
        v40 += v36;
        if (++v37 == v30)
          return;
        goto LABEL_5;
      }
      v26 = *a4;
      if (!*a4)
        break;
      v27 = (char *)(v26 + v41 + v18);
      v28 = (void (*)(char *, uint64_t, uint64_t))v39[4];
      v28(v38, v26 + v40 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v38, v7);
      v18 -= v36;
      if (v37 == ++v19)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_19CF24FB0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, unint64_t, uint64_t);
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = sub_19CFDEF84();
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v50 = (char *)&v44 - v14;
  v52 = v9[9];
  if (!v52)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_63;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_64;
  v16 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v17 = v15 / v52;
  if (v16 >= v15 / v52)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v52;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = a4 + v19;
      v53 = a4 + v19;
      v55 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        v32 = -v52;
        v33 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v45 = -v52;
        v46 = v33;
        v48 = a4;
        v49 = a1;
        v47 = v9;
        do
        {
          v52 = a3 + v32;
          v34 = v50;
          v35 = v46;
          v46(v50, v30 + v32, v8);
          v36 = a2 + v32;
          v37 = v51;
          v35(v51, a2 + v32, v8);
          sub_19CCDA660();
          LOBYTE(v35) = sub_19CFDF500();
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v37, v8);
          v38(v34, v8);
          if ((v35 & 1) != 0)
          {
            v39 = v52;
            if (a3 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v32 = v45;
            v55 += v45;
          }
          else
          {
            v39 = v52;
            v42 = v53;
            v53 += v32;
            if (a3 < v42 || v52 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
              v36 = a2;
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront();
              v36 = a2;
            }
            v32 = v45;
          }
          v30 = v53;
          if (v53 <= v40)
            break;
          a2 = v36;
          a3 = v39;
        }
        while (v36 > v41);
      }
      goto LABEL_61;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v52;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v49 = a4 + v18;
    v53 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v21 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v22 = a3;
        v23 = v50;
        v21(v50, a2, v8);
        v24 = v51;
        v21(v51, a4, v8);
        sub_19CCDA660();
        v25 = sub_19CFDF500();
        v26 = (void (*)(char *, uint64_t))v9[1];
        v26(v24, v8);
        v26(v23, v8);
        v27 = v55;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v52;
          if (v55 < a2 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v55 == a2)
              v27 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v29 = v54 + v52;
          if (v55 < v54 || v55 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront();
          }
          v54 = v29;
          v28 = a2;
        }
        v55 = v27 + v52;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_61:
    sub_19CF539F0(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_65:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

void sub_19CF254D4(uint64_t *a1)
{
  sub_19CFBFF08(*a1);
}

uint64_t sub_19CF254E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF25504()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF25530(void *a1)
{
  uint64_t v1;

  return sub_19CF23C08(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CF25538(void *a1)
{
  uint64_t v1;

  return sub_19CF23FCC(a1, v1);
}

uint64_t sub_19CF25540(void *a1)
{
  return sub_19CF240C4(a1);
}

uint64_t sub_19CF25548@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CFDEF18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19CF2557C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void JSONInitFailureObserver.tryingToEncode(_:didFailWith:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;

  v8 = sub_19CFE01CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  sub_19CFE0868();
  v13 = a2;
  sub_19CFE019C();
  v14 = sub_19CFE01D8();
  v15 = (void *)swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E9B8) + 48);
  v17[3] = swift_getMetatypeMetadata();
  *v17 = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v18, v12, v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v17, *MEMORY[0x1E0DEC4B0], v14);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(a4 + 8))(a1, v15, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

}

uint64_t dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSONInitFailureObserver.tryingToEncode(_:didFailWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t MetricsFieldExclusionRequest.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  sub_19CDE0324(a1, (uint64_t)v12);
  v4 = v13;
  if (v13)
  {
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if (v8)
    {
      result = sub_19CD3E3F8(a1);
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19CDE036C((uint64_t)v12);
  }
  sub_19CDC5494();
  swift_allocError();
  v10 = MEMORY[0x1E0DEE9D8];
  *v11 = &type metadata for MetricsFieldExclusionRequest;
  v11[1] = v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_willThrow();
  return sub_19CD3E3F8(a1);
}

uint64_t MetricsFieldExclusionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5 = sub_19CFE06AC();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsFieldExclusionRequest.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsFieldExclusionRequest.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsFieldExclusionRequest.app.getter(_QWORD *a1@<X8>)
{
  *a1 = 7368801;
  a1[1] = 0xE300000000000000;
}

void static MetricsFieldExclusionRequest.appVersion.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6973726556707061;
  a1[1] = 0xEA00000000006E6FLL;
}

void static MetricsFieldExclusionRequest.baseVersion.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7372655665736162;
  a1[1] = 0xEB000000006E6F69;
}

void static MetricsFieldExclusionRequest.clientEventId.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "clientEventId");
  *(_WORD *)(a1 + 14) = -4864;
}

void static MetricsFieldExclusionRequest.clientBuildType.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7542746E65696C63;
  a1[1] = 0xEF65707954646C69;
}

void static MetricsFieldExclusionRequest.connection.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x697463656E6E6F63;
  a1[1] = 0xEA00000000006E6FLL;
}

void static MetricsFieldExclusionRequest.osLanguages.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6175676E614C736FLL;
  a1[1] = 0xEB00000000736567;
}

void static MetricsFieldExclusionRequest.isSignedIn.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x64656E6769537369;
  a1[1] = 0xEA00000000006E49;
}

void static MetricsFieldExclusionRequest.storeFrontHeader.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x800000019D06D180;
}

void static MetricsFieldExclusionRequest.timezoneOffset.getter(char *a1@<X8>)
{
  strcpy(a1, "timezoneOffset");
  a1[15] = -18;
}

void static MetricsFieldExclusionRequest.userAgent.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65674172657375;
  a1[1] = 0xE900000000000074;
}

void static MetricsFieldExclusionRequest.xpPostFrequency.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x724674736F507078;
  a1[1] = 0xEF79636E65757165;
}

void static MetricsFieldExclusionRequest.capacity.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7974696361706163;
  a1[1] = 0xE800000000000000;
}

void static MetricsFieldExclusionRequest.eventTime.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6954746E657665;
  a1[1] = 0xE900000000000065;
}

void static MetricsFieldExclusionRequest.systemInfo.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6E496D6574737973;
  a1[1] = 0xEA00000000006F66;
}

void static MetricsFieldExclusionRequest.screen.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6565726373;
  a1[1] = 0xE600000000000000;
}

void static MetricsFieldExclusionRequest.pageHistory.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7473694865676170;
  a1[1] = 0xEB0000000079726FLL;
}

void static MetricsFieldExclusionRequest.eventVersion.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "eventVersion");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldExclusionRequest.sampling.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696C706D6173;
  a1[1] = 0xE800000000000000;
}

void static MetricsFieldExclusionRequest.xpViewablePercentage.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000019D06EE00;
}

void static MetricsFieldExclusionRequest.xpViewableThreshold.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000019D06EE20;
}

void static MetricsFieldExclusionRequest.xpSendMethod.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "xpSendMethod");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldExclusionRequest.config.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6769666E6F63;
  a1[1] = 0xE600000000000000;
}

void static MetricsFieldExclusionRequest.pageRenderClientId.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000019D06ECD0;
}

uint64_t sub_19CF25CEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsFieldExclusionRequest.init(deserializing:using:)(a1, a2);
}

uint64_t static AnyActionTypes.makeInstance(byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[3];
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];

  v5 = *a2;
  swift_bridgeObjectRetain();
  sub_19CF8E900(0xD00000000000001FLL, 0x800000019D077050, v5, v19);
  swift_bridgeObjectRelease();
  v6 = *((_QWORD *)&v19[0] + 1);
  if ((~*((_QWORD *)&v19[0] + 1) & 0xF000000000000007) != 0)
  {
    v9 = *(_QWORD *)&v19[0];
    JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v19);
    sub_19CCF8C5C((uint64_t)v19, (uint64_t)v16, &qword_1ECEB1328);
    v10 = v17;
    if (v17)
    {
      v11 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      v14 = v13;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      sub_19CD3E3F8((uint64_t)v19);
      if (v14)
      {
        *(_QWORD *)&v19[0] = v9;
        *((_QWORD *)&v19[0] + 1) = v6;
        v16[0] = v5;
        AnyActionTypes.makeInstance(ofKind:byDeserializing:using:)(v12, v14, a1, v16, a3);
        swift_bridgeObjectRelease();
        return sub_19CF25EFC(v9, v6);
      }
    }
    else
    {
      sub_19CCECFE4((uint64_t)v16, &qword_1ECEB1328);
      sub_19CD3E3F8((uint64_t)v19);
    }
    sub_19CF25EFC(v9, v6);
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_19D060C40;
    v8 = &type metadata for JSONObject;
  }
  else
  {
    sub_19CDC5494();
    swift_allocError();
    *(_QWORD *)v7 = 0xD00000000000001FLL;
    *(_QWORD *)(v7 + 8) = 0x800000019D077050;
    v8 = &type metadata for JSONContext;
  }
  *(_QWORD *)(v7 + 16) = (unint64_t)v8 | 0x2000000000000000;
  *(_QWORD *)(v7 + 24) = 0;
  return swift_willThrow();
}

uint64_t sub_19CF25EFC(uint64_t a1, uint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0)
    return sub_19CD225EC(a1, a2);
  return a1;
}

uint64_t AnyActionTypes.init(types:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

void AnyActionTypes.makeInstance(ofKind:byDeserializing:using:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD *);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[5];
  uint64_t v71[3];
  __int128 v72;
  uint64_t v73;
  id v74[3];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a5;
  v10 = sub_19CFE01B4();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v14, v15);
  v20 = (char *)&v66 - v19;
  v21 = *a4;
  v22 = *v5;
  v23 = v5[1];
  if ((v23 & 0x8000000000000000) == 0)
  {
    if (!*(_QWORD *)(v22 + 16))
    {
LABEL_14:
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360) | 0x6000000000000000;
      sub_19CDC5494();
      swift_allocError();
      *v41 = a1;
      v41[1] = a2;
      v41[2] = v40;
      v41[3] = 0;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_willThrow();
      return;
    }
    sub_19CD44C0C(*v5, v5[1]);
    swift_bridgeObjectRetain();
    v24 = sub_19CD3FD1C(a1, a2);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(v22 + 56) + 24 * v24;
      v27 = *(_QWORD *)(v26 + 16);
      v68 = *(_OWORD *)v26;
      sub_19CD225EC(v22, v23);
      swift_bridgeObjectRelease();
      sub_19CD3E448(a3, (uint64_t)v71);
      v70[0] = v21;
      v28 = *(void (**)(uint64_t *, _QWORD *))(v27 + 8);
      v75 = v68;
      v76 = v27;
      __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v74);
      swift_bridgeObjectRetain();
      v29 = v69;
      goto LABEL_9;
    }
    sub_19CD225EC(v22, v23);
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v67 = v17;
  *(_QWORD *)&v68 = v16;
  v30 = (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v23 + 8) + 16))(v22, v18);
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  v31 = sub_19CD3FD1C(a1, a2);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v33 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = dynamic_cast_existential_2_conditional(v33);
  if (v34)
  {
    v37 = v34;
    v38 = v35;
    v39 = v36;
    sub_19CD3E448(a3, (uint64_t)v71);
    v70[0] = v21;
    v28 = *(void (**)(uint64_t *, _QWORD *))(v39 + 8);
    *(_QWORD *)&v75 = v37;
    *((_QWORD *)&v75 + 1) = v38;
    v76 = v39;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v74);
    swift_bridgeObjectRetain();
    v29 = v69;
LABEL_9:
    v28(v71, v70);
    if (v29)
    {
      __swift_deallocate_boxed_opaque_existential_2((uint64_t)v74);
    }
    else
    {
      v69 = v75;
      v42 = v75;
      v43 = __swift_project_boxed_opaque_existential_1(v74, v75);
      v44 = (uint64_t *)v78;
      *(_OWORD *)(v78 + 24) = v69;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(boxed_opaque_existential_2Tm, v43, v42);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
    }
    return;
  }
  v46 = dynamic_cast_existential_2_conditional(v33);
  if (!v46)
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360);
    sub_19CDC5494();
    swift_allocError();
    v60 = MEMORY[0x1E0DEE9D8];
    *v61 = v59;
    v61[1] = v60;
    v61[2] = 0;
    v61[3] = 0;
    goto LABEL_15;
  }
  v49 = v46;
  v50 = v47;
  v51 = v48;
  sub_19CD3E448(a3, (uint64_t)v74);
  v71[0] = v21;
  swift_bridgeObjectRetain();
  v76 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v71);
  v77 = MEMORY[0x1E0DEE9D8];
  v70[3] = &type metadata for _JSONObjectDecoder;
  v70[4] = sub_19CD21828();
  v70[0] = swift_allocObject();
  sub_19CD21778((uint64_t)v74, v70[0] + 16);
  *(_QWORD *)&v72 = v49;
  *((_QWORD *)&v72 + 1) = v50;
  v73 = v51;
  __swift_allocate_boxed_opaque_existential_2Tm(v71);
  v52 = (void *)v69;
  sub_19CFDFB90();
  if (v52)
  {
    sub_19CD21708((uint64_t)v74);
    __swift_deallocate_boxed_opaque_existential_2((uint64_t)v71);
    v74[0] = v52;
    v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    v54 = v68;
    if (swift_dynamicCast())
    {

      v55 = v67;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v13, v20, v54);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v56 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v57, v13, v54);
      sub_19CDC5494();
      swift_allocError();
      *v58 = v49;
      v58[1] = v56;
      v58[2] = 0;
      v58[3] = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v54);
    }

  }
  else
  {
    v69 = v72;
    v62 = v72;
    v63 = __swift_project_boxed_opaque_existential_1(v71, v72);
    v64 = (uint64_t *)v78;
    *(_OWORD *)(v78 + 24) = v69;
    v65 = __swift_allocate_boxed_opaque_existential_2Tm(v64);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v65, v63, v62);
    sub_19CD21708((uint64_t)v74);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v71);
  }
}

double static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t v10[3];
  uint64_t v11;
  uint64_t v12;

  v5 = *a2;
  sub_19CCF8C5C(a1, (uint64_t)v10, &qword_1ECEB1328);
  v6 = v11;
  if (v11)
  {
    v7 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v8 & 1) == 0)
    {
      v10[0] = v5;
      static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, v10, a3);
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
  }
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t static AnyActionTypes.makeInstances(byDeserializing:using:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD v7[4];

  v7[2] = *a2;
  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360);
  return v4(sub_19CF26F60, v7, v5, v2, v3);
}

uint64_t sub_19CF266AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = a2;
  return static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, &v4, a3);
}

uint64_t static AnyActionTypes.tryToMakeInstances(byDeserializing:using:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD v7[4];

  v7[2] = *a2;
  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = *(uint64_t (**)(double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360);
  return v4(sub_19CF26F88, v7, v5, v2, v3);
}

void sub_19CF26748(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  AnyActionTypes.makeInstance(ofKind:byDeserializing:using:)(*a1, a1[1], a2, a3, a4);
}

uint64_t static JSONContext.actionKindKey.getter()
{
  return 0x646E696B24;
}

uint64_t AnyActionTypes.init<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t result;
  _QWORD *v58;
  int64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;

  v70 = a3;
  v4 = a2;
  v60 = a4;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE439B28);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_19CFDFF5C();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.n128_f64[0] = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v59 - v16;
  v19 = 0;
  v20 = *a1;
  v21 = *(_QWORD *)(*a1 + 64);
  v61 = *a1 + 64;
  v63 = v20;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v62 = (unint64_t)(v22 + 63) >> 6;
  v59 = v62 - 1;
  v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v68 = v6;
  v69 = v4;
  v66 = TupleTypeMetadata2;
  v67 = v8;
  v64 = (char *)&v59 - v16;
  v65 = v13;
  while (1)
  {
    if (v24)
    {
      v74 = (v24 - 1) & v24;
      v27 = __clz(__rbit64(v24)) | (v19 << 6);
      goto LABEL_8;
    }
    v33 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_41;
    if (v33 < v62)
    {
      v34 = *(_QWORD *)(v61 + 8 * v33);
      if (v34)
        goto LABEL_12;
      v19 += 2;
      if (v33 + 1 >= v62)
      {
        v74 = 0;
        v29 = 1;
        v19 = v33;
        goto LABEL_21;
      }
      v34 = *(_QWORD *)(v61 + 8 * v19);
      if (v34)
      {
        ++v33;
        goto LABEL_12;
      }
      v35 = v33 + 2;
      if (v33 + 2 < v62)
        break;
    }
    v74 = 0;
    v29 = 1;
LABEL_21:
    v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v13, v29, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v18, v13, v72);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, TupleTypeMetadata2) == 1)
    {
      result = swift_release();
      v58 = v60;
      *v60 = v25;
      v58[1] = 0;
      return result;
    }
    v73 = v19;
    v37 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    v39 = *(_QWORD *)v37;
    v38 = *((_QWORD *)v37 + 1);
    v40 = *((_QWORD *)v37 + 2);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v18, v4);
    sub_19CFDF7F4();
    v42 = v76;
    v41 = v77;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v75 = v25;
    v45 = sub_19CD3FD1C(v42, v41);
    v46 = v25[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v49 = v44;
    if (v25[3] >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v25 = v75;
        if ((v44 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_19CE1AD20();
        v25 = v75;
        if ((v49 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_19CE156E0(v48, isUniquelyReferenced_nonNull_native);
      v50 = sub_19CD3FD1C(v42, v41);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_43;
      v45 = v50;
      v25 = v75;
      if ((v49 & 1) != 0)
      {
LABEL_4:
        v26 = (_QWORD *)(v25[7] + 24 * v45);
        *v26 = v39;
        v26[1] = v38;
        v26[2] = v40;
        goto LABEL_5;
      }
    }
    v25[(v45 >> 6) + 8] |= 1 << v45;
    v52 = (uint64_t *)(v25[6] + 16 * v45);
    *v52 = v42;
    v52[1] = v41;
    v53 = (_QWORD *)(v25[7] + 24 * v45);
    *v53 = v39;
    v53[1] = v38;
    v53[2] = v40;
    v54 = v25[2];
    v55 = __OFADD__(v54, 1);
    v56 = v54 + 1;
    if (v55)
      goto LABEL_40;
    v25[2] = v56;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v67;
    v6 = v68;
    v4 = v69;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
    v13 = v65;
    TupleTypeMetadata2 = v66;
    v18 = v64;
    v19 = v73;
    v24 = v74;
  }
  v34 = *(_QWORD *)(v61 + 8 * v35);
  if (v34)
  {
    v33 += 2;
LABEL_12:
    v74 = (v34 - 1) & v34;
    v27 = __clz(__rbit64(v34)) + (v33 << 6);
    v19 = v33;
LABEL_8:
    v28 = v63;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v13, *(_QWORD *)(v63 + 48) + *(_QWORD *)(v6 + 72) * v27, v4, v17);
    v29 = 0;
    v30 = *(_QWORD *)(v28 + 56) + 24 * v27;
    v31 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    v32 = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v31 = *(_OWORD *)v30;
    *((_QWORD *)v31 + 2) = v32;
    goto LABEL_21;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v62)
    {
      v74 = 0;
      v29 = 1;
      v19 = v59;
      goto LABEL_21;
    }
    v34 = *(_QWORD *)(v61 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_12;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t ActionTypes.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE439B30);
  swift_getTupleTypeMetadata2();
  sub_19CFDF8B4();
  result = sub_19CFDF41C();
  *a1 = result;
  return result;
}

uint64_t ActionTypes.registering(_:toKind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v10 = *(_QWORD *)(a4 + 16);
  v11 = MEMORY[0x1E0C80A78](a1, a2);
  *a5 = *v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v10, v11);
  v16[1] = a1;
  v16[2] = a2;
  v16[3] = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE439B30);
  sub_19CFDF464();
  return sub_19CFDF4AC();
}

uint64_t ActionTypes.makeInstance(ofKind:byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v27;
  _BYTE v28[40];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v11 = *a3;
  v12 = *v5;
  v13 = *(_QWORD *)(a4 + 16);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B30);
  MEMORY[0x1A1AD96C4](&v29, a1, v12, v13, v14, *(_QWORD *)(a4 + 24));
  v15 = v29;
  if (v29)
  {
    v16 = v30;
    v17 = v31;
    sub_19CD3E448(a2, (uint64_t)v28);
    v34 = v11;
    v18 = *(void (**)(_BYTE *, uint64_t *, uint64_t, uint64_t))(v17 + 8);
    *(_QWORD *)&v32 = v15;
    *((_QWORD *)&v32 + 1) = v16;
    v33 = v17;
    __swift_allocate_boxed_opaque_existential_2Tm(&v29);
    swift_bridgeObjectRetain();
    v18(v28, &v34, v15, v17);
    if (v6)
    {
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v29);
    }
    else
    {
      v27 = v32;
      v24 = v32;
      v25 = __swift_project_boxed_opaque_existential_1(&v29, v32);
      *(_OWORD *)(a5 + 24) = v27;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a5);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v24);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
    }
  }
  else
  {
    sub_19CFDF7F4();
    v20 = v29;
    v21 = v30;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B360) | 0x6000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *v23 = v20;
    v23[1] = v21;
    v23[2] = v22;
    v23[3] = 0;
    return swift_willThrow();
  }
}

uint64_t sub_19CF26F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return ActionTypes.makeInstance(ofKind:byDeserializing:using:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19CF26F24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF26F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 16);
  return static AnyActionTypes.makeInstance(byDeserializing:using:)(a1, &v4, a2);
}

double sub_19CF26F88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 16);
  return static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)(a1, &v4, a2);
}

uint64_t dispatch thunk of ActionModel.actionMetrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ActionTypes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionTypes);
}

uint64_t *_s9JetEngine14AnyActionTypesV8RegistryOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_19CD44C0C(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_19CD225EC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for AnyActionTypes.Registry(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19CD225EC(v3, v4);
  return a1;
}

uint64_t _s9JetEngine14AnyActionTypesV8RegistryOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s9JetEngine14AnyActionTypesV8RegistryOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_19CF27100(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_19CF2710C(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_19CF2711C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AnyActionTypes.Registry()
{
  return &type metadata for AnyActionTypes.Registry;
}

uint64_t OpenIntent.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  uint64_t v24;

  v10 = *a2;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v23);
  sub_19CDE0324((uint64_t)v23, (uint64_t)v20);
  v11 = v21;
  if (!v21)
  {
    sub_19CCECFE4((uint64_t)v20, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v23);
    goto LABEL_6;
  }
  v12 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  v15 = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  sub_19CD3E3F8((uint64_t)v23);
  if (!v15)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    v18 = type metadata accessor for OpenIntent(0, a3, a4, v17) | 0x2000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v19 = xmmword_19D060C40;
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  sub_19CD3E448(a1, (uint64_t)v23);
  v24 = v10;
  ScalarDictionary.init(deserializing:using:)((uint64_t)v23, v20);
  result = sub_19CD3E3F8(a1);
  if (v5)
    return swift_bridgeObjectRelease();
  *a5 = v20[0];
  a5[1] = v13;
  a5[2] = v15;
  return result;
}

uint64_t type metadata accessor for OpenIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OpenIntent);
}

uint64_t OpenIntent.kind.getter()
{
  uint64_t v0;

  v0 = sub_19CF27A70();
  swift_bridgeObjectRetain();
  return v0;
}

JSValue __swiftcall OpenIntent.makeValue(in:)(JSContext in)
{
  uint64_t *v1;
  uint64_t v3;
  __int128 *v4;

  v3 = *v1;
  swift_bridgeObjectRetain();
  v4 = sub_19CDD0B38((uint64_t)in.super.isa, v3);
  swift_bridgeObjectRelease();
  return (JSValue)v4;
}

uint64_t sub_19CF27420()
{
  uint64_t v0;

  v0 = sub_19CF27A70();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19CF27454@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return OpenIntent.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t OpenIntentModifier.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;

  v8 = a3;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v40 = *v14;
  v35 = v40;
  swift_bridgeObjectRetain();
  sub_19CD143A0(0xD000000000000027, 0x800000019D06E560, v43);
  sub_19CCECFE4((uint64_t)v43, &qword_1ECEB3370);
  v15 = v40;
  v36 = a1;
  sub_19CD3E448(a1, (uint64_t)v43);
  JSONObject.dictionary.getter((uint64_t)&v37);
  if (*((_QWORD *)&v38 + 1))
  {
    v33[1] = v33;
    v40 = v37;
    v41 = v38;
    v42 = v39;
    MEMORY[0x1E0C80A78](v16, v17);
    v33[-2] = v15;
    v34 = v13;
    v18 = v8;
    v19 = a4;
    v20 = v11;
    v21 = a5;
    v22 = a6;
    v23 = *((_QWORD *)&v41 + 1);
    v24 = v42;
    __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
    v25 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>), _QWORD *, _QWORD, ValueMetadata *, _QWORD, uint64_t, uint64_t))(v24 + 48);
    v26 = v44;
    v27 = v24;
    a6 = v22;
    a5 = v21;
    v11 = v20;
    a4 = v19;
    v8 = v18;
    v13 = v34;
    v28 = v25(sub_19CDD5B00, &v33[-4], MEMORY[0x1E0DEA968], &type metadata for ScalarDictionary.Value, MEMORY[0x1E0DEA978], v23, v27);
    v44 = v26;
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v43);
    sub_19CDC6248((uint64_t)&v40);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)&v37, &qword_1EE43C1C8);
    sub_19CD3E3F8((uint64_t)v43);
    v28 = MEMORY[0x1E0DEE9E0];
  }
  *a6 = v28;
  v29 = v36;
  sub_19CD3E448(v36, (uint64_t)v43);
  *(_QWORD *)&v40 = v35;
  v30 = v44;
  (*(void (**)(_OWORD *, __int128 *, uint64_t, uint64_t))(a4 + 8))(v43, &v40, v8, a4);
  sub_19CD3E3F8(v29);
  if (v30)
    return swift_bridgeObjectRelease();
  v32 = type metadata accessor for OpenIntentModifier(0, v8, a4, a5);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))((char *)a6 + *(int *)(v32 + 44), v13, v8);
}

uint64_t OpenIntentModifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = MEMORY[0x1E0DEE9E0];
  v7 = (char *)a5 + *(int *)(type metadata accessor for OpenIntentModifier(0, a2, a3, a4) + 44);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v7, a1, a2);
}

uint64_t OpenIntentModifier.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t OpenIntentModifier.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v2 + *(int *)(v8 + 44), v3, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t OpenIntentModifier.kind.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 32) + 32))(*(_QWORD *)(a1 + 16));
}

JSValue __swiftcall OpenIntentModifier.makeValue(in:)(JSContext in)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  __int128 *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  JSValue result;
  id v14;
  void *v15;

  v3 = v1;
  v5 = *v2;
  swift_bridgeObjectRetain();
  v6 = sub_19CDD0B38((uint64_t)in.super.isa, v5);
  swift_bridgeObjectRelease();
  v7 = (void *)(*(uint64_t (**)(Class, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 + 32) + 8) + 24))(in.super.isa, *(_QWORD *)(v3 + 16));
  JSValue.propertyNames.getter();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_19CFDF554();
      v12 = objc_msgSend(v6, sel_valueForProperty_, v11);

      if (!v12)
        break;
      v10 += 16;
      v14 = v12;
      v15 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setValue_forProperty_, v14, v15);

      if (!--v9)
        goto LABEL_5;
    }
    __break(1u);
    __break(1u);
  }
  else
  {
LABEL_5:

    swift_bridgeObjectRelease();
    return (JSValue)v7;
  }
  return result;
}

uint64_t sub_19CF27A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  return OpenIntentModifier.init(deserializing:using:)(a1, a2, a3[2], a3[3], a3[4], a4);
}

uint64_t sub_19CF27A70()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t type metadata accessor for OpenIntentModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OpenIntentModifier);
}

uint64_t sub_19CF27A84()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19CF27AA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19CF27B20(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF27BF4 + 4 * byte_19D0627C0[(v9 - 1)]))();
}

void sub_19CF27C64(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t AMSInMemoryMetricsEventRecorder.__allocating_init(metrics:maximumBatchSize:flushTimeInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7;
  uint64_t v8;

  v7 = a4 & 1;
  swift_allocObject();
  v8 = sub_19CF28E60(a1, a2, a3, v7);

  return v8;
}

uint64_t AMSInMemoryMetricsEventRecorder.init(metrics:maximumBatchSize:flushTimeInterval:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;

  v5 = sub_19CF28E60(a1, a2, a3, a4 & 1);

  return v5;
}

uint64_t AMSInMemoryMetricsEventRecorder.__allocating_init(bag:topic:)(void **a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  double v16;
  char v17;
  char v18;
  double v19;
  uint64_t v20;

  v5 = *a1;
  v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_profile);
  sub_19CFDF578();

  v7 = objc_msgSend(v5, sel_profileVersion);
  sub_19CFDF578();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v8 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  swift_unknownObjectRetain();
  v9 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithContainerID_bag_, v9, v5);

  swift_unknownObjectRelease();
  v11 = AMSMetrics.withRemoteInspection.getter();

  swift_unknownObjectRetain();
  v12 = sub_19CF13A50(0x686374614278616DLL, 0xEC000000657A6953, a2, a3);
  v14 = v13;
  swift_unknownObjectRelease();
  if ((v14 & 1) != 0)
    v15 = 1000;
  else
    v15 = v12;
  v16 = COERCE_DOUBLE(sub_19CF13C34(0x7165724674736F70, 0xED000079636E6575, a2, a3));
  v18 = v17;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    v19 = 60.0;
  else
    v19 = v16 / 1000.0;
  swift_allocObject();
  v20 = sub_19CF28E60(v11, v15, *(uint64_t *)&v19, 0);

  return v20;
}

Swift::Void __swiftcall AMSInMemoryMetricsEventRecorder.record(_:on:)(JetEngine::LintedMetricsEvent _, Swift::String_optional on)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[7];
  BOOL v32;
  uint64_t v33;

  v3 = v2;
  countAndFlagsBits = on.value._countAndFlagsBits;
  v5 = sub_19CFDF2D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF308();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (countAndFlagsBits)
  {
    v28 = v13;
    v29 = v6;
    v16 = objc_allocWithZone(MEMORY[0x1E0CFDB68]);
    swift_bridgeObjectRetain();
    v17 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v16, sel_initWithTopic_, v17);

    v19 = v3[6];
    v20 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v19);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v20 + 8))(aBlock, v19, v20);
    v21 = (void *)aBlock[0];
    objc_msgSend(v18, sel_setAccount_, aBlock[0]);
    v22 = (void *)sub_19CFDF3B0();
    objc_msgSend(v18, sel_addPropertiesWithDictionary_, v22);

    v33 = 0;
    v32 = 0;
    v23 = (void *)v3[9];
    objc_msgSend(v23, sel_lock);
    sub_19CF28484(&v32, (uint64_t)v3, v18, &v33);
    objc_msgSend(v23, sel_unlock);
    v24 = v33;
    if (v33)
    {
      v27[1] = v3[13];
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v3;
      *(_QWORD *)(v25 + 24) = v24;
      aBlock[4] = sub_19CF29104;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_19CD0C78C;
      aBlock[3] = &block_descriptor_28;
      v26 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19CFDF2F0();
      v30 = MEMORY[0x1E0DEE9D8];
      sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
      sub_19CFE0070();
      MEMORY[0x1A1AD9FF4](0, v15, v9, v26);

      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v5);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v28);
      swift_release();
    }
    else
    {
      if (v32)
        sub_19CF28750();

    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CFA6C8C((unint64_t)"JetEngine/AMSInMemoryMetricsEventRecorder.swift", 0x2FuLL, 2, 0x46uLL);
  }
}

uint64_t sub_19CF28484(BOOL *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t result;
  uint64_t v13;

  v8 = (_QWORD *)(a2 + 64);
  swift_beginAccess();
  v9 = *(_QWORD *)(a2 + 64);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v10 == 0;
  swift_beginAccess();
  v11 = a3;
  MEMORY[0x1A1AD9A6C]();
  if (*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_19CFDF8A8();
  sub_19CFDF8E4();
  sub_19CFDF878();
  result = swift_endAccess();
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_19CFE0394();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 >= *(_QWORD *)(a2 + 96))
  {
    *a4 = *v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v8 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CF28614()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  _BYTE v10[48];
  _QWORD v11[5];

  v1 = *(void **)(v0 + 16);
  sub_19CCE5204(0, (unint64_t *)&qword_1EE43C2B8);
  v2 = (void *)sub_19CFDF854();
  v3 = objc_msgSend(v1, sel_flushEvents_, v2);

  sub_19CE69F7C(v3);
  v4 = sub_19CEF3F10((uint64_t)sub_19CEF3DA8, 0);
  swift_release();
  v5 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  v6 = (void *)sub_19CFDFDB8();
  v11[3] = v5;
  v11[4] = &protocol witness table for OS_dispatch_queue;
  v11[0] = v6;
  v9[0] = sub_19CF28A84;
  v9[1] = 0;
  v9[2] = sub_19CEF3BAC;
  v9[3] = 0;
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v10);
  v10[40] = 0;
  v7 = v6;
  sub_19CDBE050();
  sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1ECEB06F0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);

  return v4;
}

void sub_19CF28750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v1 = sub_19CFDF2D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF308();
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CFDF320();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v23 - v17;
  if ((*(_BYTE *)(v0 + 88) & 1) == 0)
  {
    v19 = *(double *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 104);
    sub_19CFDF314();
    MEMORY[0x1A1AD955C](v14, v19);
    v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v14, v10);
    v20 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_19CF29184;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19CD0C78C;
    aBlock[3] = &block_descriptor_6_6;
    v21 = _Block_copy(aBlock);
    v24 = v6;
    v22 = v21;
    swift_retain();
    sub_19CFDF2F0();
    v28 = MEMORY[0x1E0DEE9D8];
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v23 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    sub_19CFE0070();
    MEMORY[0x1A1AD9FB8](v18, v9, v5, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v1);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v24);
    v26(v18, v10);
    swift_release();
    swift_release();
  }
}

uint64_t AMSInMemoryMetricsEventRecorder.flush()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 72);
  objc_msgSend(v1, sel_lock);
  swift_beginAccess();
  *(_QWORD *)(v0 + 64) = MEMORY[0x1E0DEE9D8];
  objc_msgSend(v1, sel_unlock);
  v2 = sub_19CF28614();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_19CF28A84(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  Swift::String v12;
  __int128 v14;
  __int128 v15;
  _BYTE v16[32];
  __int128 v17;
  __int128 v18;
  char v19;
  _QWORD v20[4];
  _QWORD *v21;

  v1 = *a1;
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = v2;
  v21 = sub_19CD40918(0, 24, 0, MEMORY[0x1E0DEE9D8]);
  v5._countAndFlagsBits = 0x2064656873756C46;
  v5._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  v20[3] = MEMORY[0x1E0DEB418];
  v20[0] = v1;
  sub_19CD40794((uint64_t)v20, (uint64_t)v16);
  v14 = 0u;
  v15 = 0u;
  sub_19CD40658((uint64_t)v16, (uint64_t)&v14);
  v19 = 1;
  v17 = v14;
  v18 = v15;
  v6 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_19CD40918(0, v6[2] + 1, 1, v6);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_19CD40918((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[5 * v8];
  v10 = v17;
  v11 = v18;
  *((_BYTE *)v9 + 64) = v19;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  v21 = v6;
  sub_19CCECFE4((uint64_t)v20, &qword_1ECEB3370);
  v12._countAndFlagsBits = 0x7363697274656D20;
  v12._object = (void *)0xEF73746E65766520;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  *(_QWORD *)(v3 + 32) = v21;
  *(_QWORD *)&v17 = v4;
  LOBYTE(v14) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF28C78()
{
  uint64_t result;
  uint64_t v1;
  void *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(void **)(result + 72);
    objc_msgSend(v2, sel_lock);
    swift_beginAccess();
    *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9D8];
    objc_msgSend(v2, sel_unlock);
    sub_19CF28614();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

id *AMSInMemoryMetricsEventRecorder.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AMSInMemoryMetricsEventRecorder.__deallocating_deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_19CF28DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  AMSInMemoryMetricsEventRecorder.record(_:on:)(*(JetEngine::LintedMetricsEvent *)&a1, *(Swift::String_optional *)&a3);
}

uint64_t sub_19CF28DD4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(void **)(v1 + 72);
  objc_msgSend(v2, sel_lock);
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9D8];
  objc_msgSend(v2, sel_unlock);
  v3 = sub_19CF28614();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19CF28E60(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  v24 = a4;
  v22 = a2;
  v23 = a3;
  v21 = a1;
  v20 = sub_19CFDFDAC();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDFD88();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9, v11);
  v12 = sub_19CFDF308();
  MEMORY[0x1E0C80A78](v12, v13);
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 72) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  sub_19CFDF2F0();
  v25 = v14;
  sub_19CCC5C88(qword_1ECEB3068, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF8D0], v20);
  *(_QWORD *)(v4 + 104) = sub_19CFDFDDC();
  v15 = v21;
  *(_QWORD *)(v4 + 16) = v21;
  v16 = (void *)objc_opt_self();
  v17 = v15;
  v18 = objc_msgSend(v16, sel_ams_sharedAccountStore);
  *(_QWORD *)(v4 + 48) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
  *(_QWORD *)(v4 + 56) = &protocol witness table for ACAccountStore;
  *(_QWORD *)(v4 + 24) = v18;
  *(_QWORD *)(v4 + 96) = v22;
  *(_QWORD *)(v4 + 80) = v23;
  *(_BYTE *)(v4 + 88) = v24 & 1;
  return v4;
}

uint64_t sub_19CF290D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF29104()
{
  sub_19CF28614();
  return swift_release();
}

uint64_t type metadata accessor for AMSInMemoryMetricsEventRecorder()
{
  return objc_opt_self();
}

uint64_t method lookup function for AMSInMemoryMetricsEventRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AMSInMemoryMetricsEventRecorder.__allocating_init(metrics:maximumBatchSize:flushTimeInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 136))(a1, a2, a3, a4 & 1);
}

uint64_t sub_19CF29160()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CF29184()
{
  return sub_19CF28C78();
}

uint64_t sub_19CF2918C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  void (*v13)(uint64_t (*)(), char *, uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  sub_19CCD5B84(v2, (uint64_t)v16);
  v7 = v17;
  v8 = v18;
  v15 = __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = v4;
  *((_QWORD *)v12 + 3) = v10;
  *((_QWORD *)v12 + 4) = v9;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v13 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  v13(sub_19CF29AFC, v12, v7, v8);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

_QWORD *sub_19CF292B4(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  sub_19CCD14C4(a1, (uint64_t)(v6 + 3));
  v6[8] = a2;
  v6[9] = a3;
  return v6;
}

uint64_t sub_19CF29324()
{
  uint64_t *v0;
  void *v1;
  unsigned __int8 v3;

  v1 = (void *)v0[2];
  objc_msgSend(v1, sel_lock);
  sub_19CF29384(v0, (char *)&v3);
  objc_msgSend(v1, sel_unlock);
  return v3;
}

uint64_t sub_19CF29384@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _BYTE v10[24];
  uint64_t v11;

  v3 = a1 + 3;
  v4 = *a1;
  swift_beginAccess();
  v7 = type metadata accessor for SingleUseClosureEventObserver.State(0, *(_QWORD *)(v4 + 80), v5, v6);
  result = (*(uint64_t (**)(_BYTE *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v3, v7);
  v9 = v11;
  if (v11)
  {
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    v9 = 1;
  }
  *a2 = v9;
  return result;
}

uint64_t sub_19CF29418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t (*)(), char *, uint64_t, uint64_t);
  uint64_t (*v22)(__int128 *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33[4];

  v3 = v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v3 + 16);
  sub_19CD0C664();
  v12 = type metadata accessor for SingleUseClosureEventObserver.State(0, v5, v10, v11);
  withLock<A, B>(_:_:)(v9, (void (*)(id))sub_19CF29B00);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(v13 + 16))(&v26, v33, v12);
  if (v27)
  {
    v14 = v29;
    v24 = v28;
    sub_19CCD14C4(&v26, (uint64_t)v30);
    v15 = v31;
    v16 = v32;
    v25 = __swift_project_boxed_opaque_existential_1(v30, v31);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    v17 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v18 = (char *)swift_allocObject();
    v19 = v24;
    *((_QWORD *)v18 + 2) = v5;
    *((_QWORD *)v18 + 3) = v19;
    *((_QWORD *)v18 + 4) = v14;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v18[v17], v8, v5);
    v20 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v16 + 8);
    swift_retain();
    v20(sub_19CF29AFC, v18, v15, v16);
    swift_release();
    swift_release();
    (*(void (**)(__int128 *, uint64_t))(v13 + 8))(v33, v12);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  }
  else
  {
    v22 = *(uint64_t (**)(__int128 *, uint64_t))(v13 + 8);
    v22(v33, v12);
    return v22(&v26, v12);
  }
}

uint64_t sub_19CF295F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[3];
  uint64_t v11;

  v3 = a1 + 3;
  v4 = *a1;
  swift_beginAccess();
  v7 = type metadata accessor for SingleUseClosureEventObserver.State(0, *(_QWORD *)(v4 + 80), v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v8 + 16))(a2, v3, v7);
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_beginAccess();
  (*(void (**)(_QWORD *, _OWORD *, uint64_t))(v8 + 40))(v3, v10, v7);
  return swift_endAccess();
}

uint64_t *sub_19CF296B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;

  v4 = type metadata accessor for SingleUseClosureEventObserver.State(0, *(_QWORD *)(v1 + 80), v2, v3);
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + 3, v4);
  return v0;
}

uint64_t sub_19CF29704()
{
  sub_19CF296B0();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF29724(uint64_t result)
{
  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    return swift_release();
  }
  return result;
}

uint64_t sub_19CF29764(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    swift_retain();
  }
  return a1;
}

uint64_t sub_19CF297DC(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      v6 = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    v7 = *a2;
    v8 = a2[1];
    v9 = a2[2];
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_release();
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v5 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CF298A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19CF29940(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_19CF29990(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

double sub_19CF299F0(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SingleUseClosureEventObserver.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleUseClosureEventObserver.State);
}

uint64_t *sub_19CF29A2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CF29A6C(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_19CF29AB4()
{
  return sub_19CF29324() & 1;
}

uint64_t sub_19CF29AD8(uint64_t a1, uint64_t a2)
{
  return sub_19CF29418(a1, a2);
}

uint64_t sub_19CF29B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_19CF295F0(v1, a1);
}

uint64_t sub_19CF29B1C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease();
  if (v4)
    swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_19CF29BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if (qword_1EE43D6D8 != -1)
    swift_once();
  v0 = qword_1EE465D10;
  v1 = qword_1EE439ED0;
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_19CF29B1C(v2, v0, (uint64_t)sub_19CF2AF3C, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_19CF2AC24);
  v4 = sub_19CDB7F60(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t static ActionKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  if (qword_1EE439ED0 != -1)
    swift_once();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_19CF29B1C(v3, v2, (uint64_t)sub_19CF2AF3C, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_19CF2AC24);
  v5 = sub_19CDB7F60(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19CF29D08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19CF29D1C(a1, a2, a3);
}

uint64_t sub_19CF29D1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  void (*v32)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41[5];
  uint64_t v42[5];
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v8 = dynamic_cast_existential_2_conditional(a1);
  if (v8)
  {
    v11 = v8;
    v12 = v10;
    v37 = v9;
    v36 = a3;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v13 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v13);
    v14 = v41[0];
    if (!sub_19CF8EFBC(0xD000000000000023, 0x800000019D06ECA0, v41[0]))
    {
      *(_QWORD *)&v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B00);
      *(_QWORD *)&v43 = v3;
      *((_QWORD *)&v43 + 1) = &off_1E3DD1128;
      sub_19CD433C0(&v43, v42);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46 = v41[0];
      sub_19CD13D40(v42, 0xD000000000000023, 0x800000019D06ECA0, isUniquelyReferenced_nonNull_native);
      v16 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41[0] = v16;
      v14 = v16;
    }
    v17 = a2[3];
    v18 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v17);
    v46 = v14;
    swift_bridgeObjectRetain();
    v19 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v46);
    Decoder.withUserInfo(_:)(v19, v17, v18, v42);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v44 = v11;
    *((_QWORD *)&v44 + 1) = v37;
    v45 = v12;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v43);
    sub_19CFDFB90();
    if (v4)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v43);
    }
  }
  else
  {
    v21 = dynamic_cast_existential_2_conditional(a1);
    if (!v21)
    {
      v29 = sub_19CFE01B4();
      swift_allocError();
      v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v31 = a1;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      sub_19CFE09B8();
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v43 = 60;
      *((_QWORD *)&v43 + 1) = 0xE100000000000000;
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC450], v29);
      return swift_willThrow();
    }
    v24 = v21;
    v38 = v22;
    v39 = v23;
    v36 = a3;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v25 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v25);
    v26 = v46;
    sub_19CF8E900(0xD00000000000001FLL, 0x800000019D077050, v46, &v43);
    v27 = *((_QWORD *)&v43 + 1);
    sub_19CF25EFC(v43, *((uint64_t *)&v43 + 1));
    if ((~v27 & 0xF000000000000007) == 0)
    {
      *(_QWORD *)&v44 = &type metadata for AnyActionTypes;
      *(_QWORD *)&v43 = v3;
      *((_QWORD *)&v43 + 1) = 0x80000001E3DD1128;
      sub_19CD433C0(&v43, v42);
      swift_bridgeObjectRetain();
      v28 = swift_isUniquelyReferenced_nonNull_native();
      v41[0] = v26;
      sub_19CD13D40(v42, 0xD00000000000001FLL, 0x800000019D077050, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v26;
    }
    sub_19CCD5B84((uint64_t)a2, (uint64_t)v41);
    JSONObject.init(from:)(v41, v42);
    if (v4)
      return swift_bridgeObjectRelease();
    v41[0] = v26;
    v32 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v39 + 8);
    *(_QWORD *)&v44 = v24;
    *((_QWORD *)&v44 + 1) = v38;
    v45 = v39;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v43);
    swift_bridgeObjectRetain();
    v32(v42, v41, v24, v39);
  }
  v40 = v44;
  v33 = v44;
  v34 = __swift_project_boxed_opaque_existential_1(&v43, v44);
  *(_OWORD *)(v36 + 24) = v40;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v36);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_2Tm, v34, v33);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
}

uint64_t static ActionKindTable._decode(_:from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45[5];
  uint64_t v46[5];
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v10 = dynamic_cast_existential_2_conditional(a1);
  if (v10)
  {
    v13 = v10;
    v14 = v12;
    v42 = v11;
    v40 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v15 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v15);
    v16 = v45[0];
    if (!sub_19CF8EFBC(0xD000000000000023, 0x800000019D06ECA0, v45[0]))
    {
      *(_QWORD *)&v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE441B00);
      *(_QWORD *)&v47 = v4;
      *((_QWORD *)&v47 + 1) = a3;
      sub_19CD433C0(&v47, v46);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50 = v45[0];
      sub_19CD13D40(v46, 0xD000000000000023, 0x800000019D06ECA0, isUniquelyReferenced_nonNull_native);
      v18 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45[0] = v18;
      v16 = v18;
    }
    v19 = a2[3];
    v20 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v19);
    v50 = v16;
    swift_bridgeObjectRetain();
    v21 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v50);
    Decoder.withUserInfo(_:)(v21, v19, v20, v46);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v48 = v13;
    *((_QWORD *)&v48 + 1) = v42;
    v49 = v14;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v47);
    sub_19CFDFB90();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_2((uint64_t)&v47);
    }
  }
  else
  {
    v23 = dynamic_cast_existential_2_conditional(a1);
    if (!v23)
    {
      v32 = sub_19CFE01B4();
      swift_allocError();
      v34 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530);
      *v34 = a1;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      sub_19CFE09B8();
      sub_19CFE010C();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v47 = 60;
      *((_QWORD *)&v47 + 1) = 0xE100000000000000;
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE019C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC450], v32);
      return swift_willThrow();
    }
    v26 = v23;
    v27 = v25;
    v41 = v24;
    v43 = v4;
    v40 = a4;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v28 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v28);
    v29 = v50;
    sub_19CF8E900(0xD00000000000001FLL, 0x800000019D077050, v50, &v47);
    v30 = *((_QWORD *)&v47 + 1);
    sub_19CF25EFC(v47, *((uint64_t *)&v47 + 1));
    if ((~v30 & 0xF000000000000007) == 0)
    {
      *(_QWORD *)&v48 = &type metadata for AnyActionTypes;
      *(_QWORD *)&v47 = v43;
      *((_QWORD *)&v47 + 1) = a3 | 0x8000000000000000;
      sub_19CD433C0(&v47, v46);
      swift_bridgeObjectRetain();
      v31 = swift_isUniquelyReferenced_nonNull_native();
      v45[0] = v29;
      sub_19CD13D40(v46, 0xD00000000000001FLL, 0x800000019D077050, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v29;
    }
    sub_19CCD5B84((uint64_t)a2, (uint64_t)v45);
    JSONObject.init(from:)(v45, v46);
    if (v5)
      return swift_bridgeObjectRelease();
    v45[0] = v29;
    v35 = v27;
    v36 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v27 + 8);
    *(_QWORD *)&v48 = v26;
    *((_QWORD *)&v48 + 1) = v41;
    v49 = v35;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v47);
    swift_bridgeObjectRetain();
    v36(v46, v45, v26, v35);
  }
  v44 = v48;
  v37 = v48;
  v38 = __swift_project_boxed_opaque_existential_1(&v47, v48);
  *(_OWORD *)(v40 + 24) = v44;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)v40);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(boxed_opaque_existential_2Tm, v38, v37);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v47);
}

uint64_t sub_19CF2A6B4()
{
  uint64_t result;

  result = sub_19CF2A6D0();
  qword_1EE439EC0 = result;
  return result;
}

uint64_t sub_19CF2A6D0()
{
  uint64_t inited;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F88);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D050760;
  strcpy((char *)(inited + 32), "closureAction");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = &type metadata for ClosureAction;
  *(_QWORD *)(inited + 56) = &protocol witness table for ClosureAction;
  strcpy((char *)(inited + 64), "compoundAction");
  *(_BYTE *)(inited + 79) = -18;
  *(_QWORD *)(inited + 80) = &type metadata for CompoundAction;
  *(_QWORD *)(inited + 88) = &protocol witness table for CompoundAction;
  *(_QWORD *)(inited + 96) = 0x7463417974706D65;
  *(_QWORD *)(inited + 104) = 0xEB000000006E6F69;
  *(_QWORD *)(inited + 112) = &type metadata for EmptyAction;
  *(_QWORD *)(inited + 120) = &protocol witness table for EmptyAction;
  v1 = sub_19CE105BC(inited);
  v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D050740;
  *(_QWORD *)(v2 + 32) = 0x7463417472656C61;
  *(_QWORD *)(v2 + 40) = 0xEB000000006E6F69;
  *(_QWORD *)(v2 + 48) = &type metadata for Models.AlertAction;
  *(_QWORD *)(v2 + 56) = &protocol witness table for Models.AlertAction;
  *(_QWORD *)(v2 + 64) = 0xD000000000000011;
  *(_QWORD *)(v2 + 72) = 0x800000019D077150;
  *(_QWORD *)(v2 + 80) = type metadata accessor for Models.ExternalURLAction();
  *(_QWORD *)(v2 + 88) = &protocol witness table for Models.ExternalURLAction;
  *(_QWORD *)(v2 + 96) = 0x6974634170747468;
  *(_QWORD *)(v2 + 104) = 0xEA00000000006E6FLL;
  *(_QWORD *)(v2 + 112) = type metadata accessor for Models.HTTPAction();
  *(_QWORD *)(v2 + 120) = &protocol witness table for Models.HTTPAction;
  *(_QWORD *)(v2 + 128) = 0xD000000000000012;
  *(_QWORD *)(v2 + 136) = 0x800000019D077170;
  *(_QWORD *)(v2 + 144) = type metadata accessor for Models.HTTPTemplateAction();
  *(_QWORD *)(v2 + 152) = &protocol witness table for Models.HTTPTemplateAction;
  *(_QWORD *)(v2 + 160) = 0x7463417473616F74;
  *(_QWORD *)(v2 + 168) = 0xEB000000006E6F69;
  *(_QWORD *)(v2 + 176) = &type metadata for Models.ToastAction;
  *(_QWORD *)(v2 + 184) = &protocol witness table for Models.ToastAction;
  v3 = sub_19CE105BC(v2);
  return sub_19CF29B1C(v3, v1, (uint64_t)sub_19CF2AF3C, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_19CF2A92C);
}

uint64_t _defaultActionKindLookup.getter()
{
  if (qword_1EE439ED0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF2A92C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  char v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  swift_bridgeObjectRetain();
  v7 = swift_retain();
  v8 = sub_19CE24310(v7);
  if (!v9)
    goto LABEL_24;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = (_QWORD *)*a5;
  v18 = sub_19CD3FD1C(v8, v9);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      v21 = sub_19CE18A18();
      v24 = (_QWORD *)*a5;
      if ((v22 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v26 = (uint64_t *)(v24[6] + 16 * v18);
    *v26 = v12;
    v26[1] = v13;
    v27 = (_QWORD *)(v24[7] + 16 * v18);
    *v27 = v14;
    v27[1] = v15;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    v31 = sub_19CE24310(v21);
    if (v32)
    {
      v35 = v31;
      v36 = v32;
      v37 = v33;
      v38 = v34;
      do
      {
        v44 = (_QWORD *)*a5;
        v46 = sub_19CD3FD1C(v35, v36);
        v47 = v44[2];
        v48 = (v45 & 1) == 0;
        v39 = v47 + v48;
        if (__OFADD__(v47, v48))
          goto LABEL_25;
        v49 = v45;
        if (v44[3] < v39)
        {
          sub_19CE13400();
          v39 = sub_19CD3FD1C(v35, v36);
          if ((v49 & 1) != (v50 & 1))
            goto LABEL_27;
          v46 = v39;
        }
        v51 = (_QWORD *)*a5;
        if ((v49 & 1) != 0)
        {
          v39 = swift_bridgeObjectRelease();
          v40 = (_QWORD *)(v51[7] + 16 * v46);
          *v40 = v37;
          v40[1] = v38;
        }
        else
        {
          v51[(v46 >> 6) + 8] |= 1 << v46;
          v52 = (uint64_t *)(v51[6] + 16 * v46);
          *v52 = v35;
          v52[1] = v36;
          v53 = (_QWORD *)(v51[7] + 16 * v46);
          *v53 = v37;
          v53[1] = v38;
          v54 = v51[2];
          v29 = __OFADD__(v54, 1);
          v55 = v54 + 1;
          if (v29)
            goto LABEL_26;
          v51[2] = v55;
        }
        v35 = sub_19CE24310(v39);
        v36 = v41;
        v37 = v42;
        v38 = v43;
      }
      while (v41);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CE13400();
  v21 = sub_19CD3FD1C(v12, v13);
  if ((v22 & 1) == (v23 & 1))
  {
    v18 = v21;
    v24 = (_QWORD *)*a5;
    if ((v22 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v21 = swift_bridgeObjectRelease();
    v25 = (_QWORD *)(v24[7] + 16 * v18);
    *v25 = v14;
    v25[1] = v15;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF2AC24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  char v48;
  _QWORD *v49;
  uint64_t *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  __int128 v56;
  __int128 v57;

  swift_bridgeObjectRetain();
  v7 = swift_retain();
  v8 = sub_19CE24310(v7);
  if (!v9)
    goto LABEL_23;
  v12 = v8;
  v13 = v9;
  v14 = v11;
  v55 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_19CD23A50(v8, v9);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v23 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      v20 = sub_19CE18A18();
      v23 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v24 = (uint64_t *)(v23[6] + 16 * v17);
    *v24 = v12;
    v24[1] = v13;
    v25 = (_QWORD *)(v23[7] + 16 * v17);
    *v25 = v55;
    v25[1] = v14;
    v26 = v23[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v23[2] = v28;
LABEL_13:
    v29 = sub_19CE24310(v20);
    if (v30)
    {
      v33 = v29;
      v34 = v30;
      v35 = v31;
      v36 = v32;
      do
      {
        v42 = (_QWORD *)*a5;
        v38 = sub_19CD23A50(v33, v34);
        v44 = v42[2];
        v45 = (v43 & 1) == 0;
        v27 = __OFADD__(v44, v45);
        v46 = v44 + v45;
        if (v27)
          goto LABEL_24;
        v47 = v43;
        if (v42[3] < v46)
        {
          sub_19CE13400(v46, 1);
          v38 = sub_19CD23A50(v33, v34);
          if ((v47 & 1) != (v48 & 1))
            goto LABEL_26;
        }
        v49 = (_QWORD *)*a5;
        if ((v47 & 1) != 0)
        {
          v37 = 16 * v38;
          v57 = *(_OWORD *)(v49[7] + 16 * v38);
          v38 = swift_bridgeObjectRelease();
          *(_OWORD *)(v49[7] + v37) = v57;
        }
        else
        {
          v49[(v38 >> 6) + 8] |= 1 << v38;
          v50 = (uint64_t *)(v49[6] + 16 * v38);
          *v50 = v33;
          v50[1] = v34;
          v51 = (_QWORD *)(v49[7] + 16 * v38);
          *v51 = v35;
          v51[1] = v36;
          v52 = v49[2];
          v27 = __OFADD__(v52, 1);
          v53 = v52 + 1;
          if (v27)
            goto LABEL_25;
          v49[2] = v53;
        }
        v33 = sub_19CE24310(v38);
        v34 = v39;
        v35 = v40;
        v36 = v41;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  ((void (*)(void))sub_19CE13400)();
  v20 = sub_19CD23A50(v12, v13);
  if ((v21 & 1) == (v22 & 1))
  {
    v17 = v20;
    v23 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v56 = *(_OWORD *)(v23[7] + 16 * v17);
    v20 = swift_bridgeObjectRelease();
    *(_OWORD *)(v23[7] + 16 * v17) = v56;
    goto LABEL_13;
  }
LABEL_26:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF2AF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of static ActionKindTable.table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for AppleServicesNoOpEncoder()
{
  return &type metadata for AppleServicesNoOpEncoder;
}

_UNKNOWN **sub_19CF2AF78()
{
  return &protocol witness table for URLRequestEncoder.PropertyScope;
}

uint64_t sub_19CF2AF84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC28);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v4;
  *v4 = v1;
  v4[1] = sub_19CF2B004;
  return URLRequestEncoder.encodeRequest(fromContentsOf:)(v3, a1);
}

uint64_t sub_19CF2B004()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_19CF2B068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_19CFDE90C();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = 0;
  if (v4 != 1)
  {
    v6 = *(_QWORD *)(v0 + 16);
    v5 = (void *)sub_19CFDE8AC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC78]), sel_initWithRequest_, v5);

  if (v7)
  {
    swift_task_dealloc();
    (*(void (**)(id))(v0 + 8))(v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19CF2B140()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF2B174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE594;
  return sub_19CF2AF84(a2);
}

uint64_t sub_19CF2B1C4()
{
  return sub_19CF2B1E4(0x40000001E3DD9840);
}

uint64_t sub_19CF2B1E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_19CDE0324(v1, (uint64_t)v10);
  v3 = v11;
  if (!v11)
  {
    sub_19CDE036C((uint64_t)v10);
LABEL_5:
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_19D062A70;
    v8 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = v8;
    swift_willThrow();
    return v1;
  }
  v4 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (!v6)
    goto LABEL_5;
  return v1;
}

uint64_t Models.FlowBackAction.Dismissal.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t static Models.FlowBackAction.Dismissal.stackPop.getter()
{
  return 0x706F506B63617473;
}

uint64_t static Models.FlowBackAction.Dismissal.stackPopToRoot.getter()
{
  return 0x706F506B63617473;
}

uint64_t static Models.FlowBackAction.Dismissal.sheetDismiss.getter()
{
  return 0x7369447465656873;
}

uint64_t sub_19CF2B350()
{
  sub_19CF2BF6C();
  return sub_19CFDF83C();
}

uint64_t sub_19CF2B3AC()
{
  sub_19CF2BF6C();
  return sub_19CFDF80C();
}

__n128 Models.FlowBackAction.init(actionMetrics:dismissal:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t Models.FlowBackAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Models.FlowBackAction.actionMetrics.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*Models.FlowBackAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t Models.FlowBackAction.dismissal.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.FlowBackAction.dismissal.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Models.FlowBackAction.dismissal.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CF2B4EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x617373696D736964;
  else
    return 0x654D6E6F69746361;
}

uint64_t sub_19CF2B538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF2BE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF2B55C()
{
  sub_19CF2B700();
  return sub_19CFE0A48();
}

uint64_t sub_19CF2B584()
{
  sub_19CF2B700();
  return sub_19CFE0A54();
}

uint64_t Models.FlowBackAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *((_QWORD *)v3 + 2);
  v13 = *((_QWORD *)v3 + 3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF2B700();
  sub_19CFE0A24();
  v14 = *v3;
  v15 = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (!v2)
  {
    *(_QWORD *)&v14 = v10;
    *((_QWORD *)&v14 + 1) = v13;
    v15 = 1;
    sub_19CF2B744();
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_19CF2B700()
{
  unint64_t result;

  result = qword_1EE442228;
  if (!qword_1EE442228)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D062CC4, &_s14FlowBackActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442228);
  }
  return result;
}

unint64_t sub_19CF2B744()
{
  unint64_t result;

  result = qword_1EE442230;
  if (!qword_1EE442230)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.FlowBackAction.Dismissal, &type metadata for Models.FlowBackAction.Dismissal);
    atomic_store(result, (unint64_t *)&qword_1EE442230);
  }
  return result;
}

uint64_t Models.FlowBackAction.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CF2B700();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v17 = 0;
  sub_19CE8C13C();
  sub_19CFE04B4();
  v10 = v15;
  v11 = v16;
  v17 = 1;
  sub_19CF2B960();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFE04B4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v12 = v15;
  v13 = v16;
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_19CF2B960()
{
  unint64_t result;

  result = qword_1EE442240;
  if (!qword_1EE442240)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.FlowBackAction.Dismissal, &type metadata for Models.FlowBackAction.Dismissal);
    atomic_store(result, (unint64_t *)&qword_1EE442240);
  }
  return result;
}

uint64_t sub_19CF2B9A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Models.FlowBackAction.init(from:)(a1, a2);
}

uint64_t sub_19CF2B9B8(_QWORD *a1)
{
  return Models.FlowBackAction.encode(to:)(a1);
}

uint64_t Models.FlowBackAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];
  uint64_t v14[2];
  uint64_t v15;

  v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v13);
  v15 = v6;
  ActionMetrics.init(deserializing:using:)((uint64_t)v13, &v15, v14);
  if (v3)
    return sub_19CD3E3F8(a1);
  v8 = v14[0];
  v9 = v14[1];
  JSONObject.subscript.getter(0x617373696D736964, 0xE90000000000006CLL, (uint64_t)v13);
  v10 = sub_19CF2B1E4(0x40000001E3DD8E18);
  v12 = v11;
  sub_19CD3E3F8(a1);
  result = sub_19CD3E3F8((uint64_t)v13);
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v12;
  return result;
}

unint64_t sub_19CF2BB00()
{
  unint64_t result;

  result = qword_1EE442248;
  if (!qword_1EE442248)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.FlowBackAction.Dismissal, &type metadata for Models.FlowBackAction.Dismissal);
    atomic_store(result, (unint64_t *)&qword_1EE442248);
  }
  return result;
}

uint64_t _s14FlowBackActionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14FlowBackActionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14FlowBackActionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14FlowBackActionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.FlowBackAction()
{
  return &type metadata for Models.FlowBackAction;
}

ValueMetadata *type metadata accessor for Models.FlowBackAction.Dismissal()
{
  return &type metadata for Models.FlowBackAction.Dismissal;
}

uint64_t _s14FlowBackActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CF2BCF4 + 4 * byte_19D062A85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CF2BD28 + 4 * byte_19D062A80[v4]))();
}

uint64_t sub_19CF2BD28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF2BD30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF2BD38);
  return result;
}

uint64_t sub_19CF2BD44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF2BD4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CF2BD50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF2BD58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14FlowBackActionV10CodingKeysOMa()
{
  return &_s14FlowBackActionV10CodingKeysON;
}

unint64_t sub_19CF2BD78()
{
  unint64_t result;

  result = qword_1EE442250;
  if (!qword_1EE442250)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D062C9C, &_s14FlowBackActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442250);
  }
  return result;
}

unint64_t sub_19CF2BDC0()
{
  unint64_t result;

  result = qword_1EE442258;
  if (!qword_1EE442258)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D062C0C, &_s14FlowBackActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442258);
  }
  return result;
}

unint64_t sub_19CF2BE08()
{
  unint64_t result;

  result = qword_1EE442260;
  if (!qword_1EE442260)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D062C34, &_s14FlowBackActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE442260);
  }
  return result;
}

uint64_t sub_19CF2BE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617373696D736964 && a2 == 0xE90000000000006CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_19CF2BF6C()
{
  unint64_t result;

  result = qword_1EE442268[0];
  if (!qword_1EE442268[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Models.FlowBackAction.Dismissal, &type metadata for Models.FlowBackAction.Dismissal);
    atomic_store(result, qword_1EE442268);
  }
  return result;
}

uint64_t sub_19CF2BFB0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result;

  swift_unknownObjectWeakInit();
  sub_19CCD14C4(a1, a3);
  swift_unknownObjectWeakAssign();
  result = swift_unknownObjectRelease();
  *(_QWORD *)(a3 + 48) = a2;
  return result;
}

uint64_t sub_19CF2C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void (*v16)(id (*)(), char *, uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1A1ADBF98](v2 + 40, v7);
  if (result)
  {
    v10 = result;
    sub_19CCD5B84(v2, (uint64_t)v18);
    v11 = v19;
    v12 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v13 = *(_QWORD *)(v2 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v14 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = (char *)swift_allocObject();
    *((_QWORD *)v15 + 2) = v4;
    *((_QWORD *)v15 + 3) = v10;
    *((_QWORD *)v15 + 4) = v13;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[v14], v8, v4);
    v16 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v12 + 8);
    swift_unknownObjectRetain();
    v16(sub_19CF2C460, v15, v11, v12);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
  return result;
}

id sub_19CF2C158(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFE0688();
  objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_withObject_, a2, v4);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t EventEmitter.addObserver(on:target:selector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  void (*v9)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  _BYTE v16[56];

  sub_19CCD5B84(a1, (uint64_t)v15);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_unknownObjectRetain();
  sub_19CF2BFB0(v15, a3, (uint64_t)v16);
  v9 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  v12 = type metadata accessor for NSObjectEventObserver(0, AssociatedTypeWitness, v10, v11);
  v13 = MEMORY[0x1A1ADBD7C](&unk_19D062D58, v12);
  v9(v16, v12, v13, a4, a5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v16, v12);
}

uint64_t type metadata accessor for NSObjectEventObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSObjectEventObserver);
}

uint64_t sub_19CF2C2B4(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_19CF2C2D8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t *sub_19CF2C328(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  swift_unknownObjectWeakCopyAssign();
  a1[6] = a2[6];
  return a1;
}

uint64_t sub_19CF2C364(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_19CF2C3AC(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_19CF2C3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_19CF2C460()
{
  uint64_t v0;

  return sub_19CF2C158(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_19CF2C480()
{
  void *v0;

  if ((objc_msgSend(v0, sel_isString) & 1) != 0)
    return 0;
  if ((objc_msgSend(v0, sel_isNumber) & 1) != 0)
    return 1;
  if ((objc_msgSend(v0, sel_isArray) & 1) != 0)
    return 3;
  if ((objc_msgSend(v0, sel_isBoolean) & 1) != 0)
    return 4;
  if ((objc_msgSend(v0, sel_isNull) & 1) != 0)
    return 5;
  if ((JSValue.isJSONObject.getter() & 1) != 0)
    return 2;
  return 6;
}

JSStringRef static JSValue.deserializedJSON(_:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  OpaqueJSString *v5;
  JSStringRef result;
  JSValueRef v7;
  id v8;
  char string[8];
  uint64_t v10;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_19CFE0100();
    v5 = *(OpaqueJSString **)string;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)string = a1;
    v10 = a2 & 0xFFFFFFFFFFFFFFLL;
    result = JSStringCreateWithUTF8CString(string);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v5 = result;
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v4 = (const char *)sub_19CFE01FC();
    sub_19CCC2170(v4, (JSStringRef *)string);
    v5 = *(OpaqueJSString **)string;
  }
  v7 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(a3, sel_JSGlobalContextRef), v5);
  if (v7)
    v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, v7, a3);
  else
    v8 = 0;
  JSStringRelease(v5);
  return (JSStringRef)v8;
}

Swift::String_optional __swiftcall JSValue.serializedJSON(indent:)(Swift::UInt32 indent)
{
  void *v1;
  __CFString *v3;
  void *v4;
  __CFString *v5;
  const OpaqueJSContext *v6;
  OpaqueJSString *JSONString;
  OpaqueJSString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String_optional result;

  v3 = (__CFString *)objc_msgSend(v1, sel_context);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v3;
  v6 = (const OpaqueJSContext *)-[__CFString JSGlobalContextRef](v3, sel_JSGlobalContextRef);

  JSONString = JSValueCreateJSONString(v6, (JSValueRef)objc_msgSend(v1, sel_JSValueRef), indent, 0);
  if (!JSONString)
  {
    v10 = 0;
    v12 = 0;
    goto LABEL_6;
  }
  v8 = JSONString;
  v3 = (__CFString *)JSStringCopyCFString((CFAllocatorRef)*MEMORY[0x1E0C9AE00], JSONString);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = v3;
  v10 = sub_19CFDF578();
  v12 = v11;

  JSStringRelease(v8);
LABEL_6:
  v3 = (__CFString *)v10;
  v4 = v12;
LABEL_9:
  result.value._object = v4;
  result.value._countAndFlagsBits = (uint64_t)v3;
  return result;
}

uint64_t sub_19CF2C744@<X0>(uint64_t *a1@<X8>)
{
  char v2;
  id v3;
  unint64_t *v4;
  char v5;
  uint64_t v6;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (qword_1EE43D1E0 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465C90, *(uint64_t *)algn_1EE465C98);
  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
    v4 = (unint64_t *)&unk_1ECEB2F00;
LABEL_9:
    v15 = sub_19CCE5204(0, v4);
    *(_QWORD *)&v14 = v3;
LABEL_10:
    sub_19CD433C0(&v14, v16);
    a1[3] = (uint64_t)&type metadata for FoundationValue;
    a1[4] = (uint64_t)&off_1E3DCC5B0;
    v6 = swift_allocObject();
    *a1 = v6;
    sub_19CD436B0((uint64_t)v16, v6 + 16);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  if (qword_1EE43D2D8 != -1)
    swift_once();
  sub_19CD17ABC(qword_1EE465CD0, *(uint64_t *)algn_1EE465CD8);
  if ((v5 & 1) != 0)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    v4 = (unint64_t *)&qword_1ECEB1710;
    goto LABEL_9;
  }
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_19CFDEE58();
  v13 = 0;
  v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 4, &v13);

  v11 = v13;
  if (v10)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  v12 = v11;
  sub_19CFDEC9C();

  return swift_willThrow();
}

uint64_t sub_19CF2C980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (!v3)
    return v5;
  return result;
}

_QWORD *sub_19CF2C9B8@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_19CF2C9F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF2CA18(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  char v12;
  uint64_t v13;

  v2 = a1[2];
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  v6 = a1[4];
  v7 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v4 - 1;
  for (i = v2 - 1; ; --i)
  {
    swift_bridgeObjectRetain();
    if (v6 != *(_QWORD *)(a2 + v8 * 8 + 32) || v7 != *(_QWORD *)(a2 + v8 * 8 + 40))
      break;
    swift_bridgeObjectRelease();
    v13 = 0;
    if (!i)
      goto LABEL_16;
LABEL_12:
    if (!v9)
      goto LABEL_16;
    v6 = a1[v8 + 6];
    v7 = a1[v8 + 7];
    --v9;
    v8 += 2;
  }
  v12 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v13 = 0;
    if (!i)
      goto LABEL_16;
    goto LABEL_12;
  }
  v13 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_19CF2CB18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE4422F0;
  if (!qword_1EE4422F0)
  {
    v1 = sub_19CFDF110();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB15B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE4422F0);
  }
  return result;
}

uint64_t sub_19CF2CB60(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  dispatch_group_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v41 = a2;
  v42 = a3;
  v4 = sub_19CFDF2D8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDFD88();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7, v9);
  v10 = sub_19CFDF308();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFDAC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DEF8D8], v14);
  sub_19CFDF2F0();
  v19 = MEMORY[0x1E0DEE9D8];
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v43 = v13;
  v20 = (void *)sub_19CFDFDDC();
  v21 = dispatch_group_create();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = v21;
  v24[4] = v22;
  v24[5] = v23;
  v24[6] = v20;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_19CF30B98;
  *(_QWORD *)(v25 + 24) = v24;
  v54 = sub_19CF30C7C;
  v55 = (_QWORD *)v25;
  aBlock = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v52 = sub_19CCE9D50;
  v53 = &block_descriptor_128;
  v26 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v27 = v21;
  swift_retain();
  swift_retain();
  v28 = v20;
  swift_retain();
  swift_release();
  dispatch_sync(v28, v26);
  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
    v30 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v31 = swift_allocObject();
    *(_DWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v30 + 16) = v31;
    *(_QWORD *)(v30 + 24) = v19;
    *(_BYTE *)(v30 + 32) = 0;
    v32 = (_QWORD *)swift_allocObject();
    v33 = v41;
    v32[2] = v30;
    v32[3] = v33;
    v41 = v28;
    v32[4] = v42;
    v32[5] = v22;
    v32[6] = v23;
    v54 = sub_19CF30C08;
    v55 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_19CD0C78C;
    v53 = &block_descriptor_134;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = v22;
    v35 = v27;
    v36 = v43;
    sub_19CFDF2F0();
    v49 = v19;
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    v37 = v44;
    v38 = v48;
    sub_19CFE0070();
    v39 = v41;
    sub_19CFDFD70();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v46);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v30;
  }
  return result;
}

uint64_t sub_19CF2D084(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  dispatch_group_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v41 = a2;
  v42 = a3;
  v4 = sub_19CFDF2D8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDFD88();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7, v9);
  v10 = sub_19CFDF308();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFDAC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DEF8D8], v14);
  sub_19CFDF2F0();
  v19 = MEMORY[0x1E0DEE9D8];
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v43 = v13;
  v20 = (void *)sub_19CFDFDDC();
  v21 = dispatch_group_create();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = v21;
  v24[4] = v22;
  v24[5] = v23;
  v24[6] = v20;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_19CF30AD8;
  *(_QWORD *)(v25 + 24) = v24;
  v54 = sub_19CF30C7C;
  v55 = (_QWORD *)v25;
  aBlock = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v52 = sub_19CCE9D50;
  v53 = &block_descriptor_90;
  v26 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v27 = v21;
  swift_retain();
  swift_retain();
  v28 = v20;
  swift_retain();
  swift_release();
  dispatch_sync(v28, v26);
  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1608);
    v30 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v31 = swift_allocObject();
    *(_DWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v30 + 16) = v31;
    *(_QWORD *)(v30 + 24) = v19;
    *(_BYTE *)(v30 + 32) = 0;
    v32 = (_QWORD *)swift_allocObject();
    v33 = v41;
    v32[2] = v30;
    v32[3] = v33;
    v41 = v28;
    v32[4] = v42;
    v32[5] = v22;
    v32[6] = v23;
    v54 = sub_19CF30AF8;
    v55 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_19CD0C78C;
    v53 = &block_descriptor_96;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = v22;
    v35 = v27;
    v36 = v43;
    sub_19CFDF2F0();
    v49 = v19;
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    v37 = v44;
    v38 = v48;
    sub_19CFE0070();
    v39 = v41;
    sub_19CFDFD70();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v46);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v30;
  }
  return result;
}

uint64_t sub_19CF2D5A8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  dispatch_group_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v41 = a2;
  v42 = a3;
  v4 = sub_19CFDF2D8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDFD88();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7, v9);
  v10 = sub_19CFDF308();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFDAC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DEF8D8], v14);
  sub_19CFDF2F0();
  v19 = MEMORY[0x1E0DEE9D8];
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v43 = v13;
  v20 = (void *)sub_19CFDFDDC();
  v21 = dispatch_group_create();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = v21;
  v24[4] = v22;
  v24[5] = v23;
  v24[6] = v20;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_19CF30898;
  *(_QWORD *)(v25 + 24) = v24;
  v54 = sub_19CF30C7C;
  v55 = (_QWORD *)v25;
  aBlock = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v52 = sub_19CCE9D50;
  v53 = &block_descriptor_25;
  v26 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v27 = v21;
  swift_retain();
  swift_retain();
  v28 = v20;
  swift_retain();
  swift_release();
  dispatch_sync(v28, v26);
  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4422F8);
    v30 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v31 = swift_allocObject();
    *(_DWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v30 + 16) = v31;
    *(_QWORD *)(v30 + 24) = v19;
    *(_BYTE *)(v30 + 32) = 0;
    v32 = (_QWORD *)swift_allocObject();
    v33 = v41;
    v32[2] = v30;
    v32[3] = v33;
    v41 = v28;
    v32[4] = v42;
    v32[5] = v22;
    v32[6] = v23;
    v54 = sub_19CF308B8;
    v55 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_19CD0C78C;
    v53 = &block_descriptor_31;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = v22;
    v35 = v27;
    v36 = v43;
    sub_19CFDF2F0();
    v49 = v19;
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    v37 = v44;
    v38 = v48;
    sub_19CFE0070();
    v39 = v41;
    sub_19CFDFD70();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v46);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v30;
  }
  return result;
}

uint64_t sub_19CF2DACC(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  dispatch_group_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v41 = a2;
  v42 = a3;
  v4 = sub_19CFDF2D8();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDFD88();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7, v9);
  v10 = sub_19CFDF308();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFDAC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DEF8D8], v14);
  sub_19CFDF2F0();
  v19 = MEMORY[0x1E0DEE9D8];
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v43 = v13;
  v20 = (void *)sub_19CFDFDDC();
  v21 = dispatch_group_create();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = v21;
  v24[4] = v22;
  v24[5] = v23;
  v24[6] = v20;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_19CF308D8;
  *(_QWORD *)(v25 + 24) = v24;
  v54 = sub_19CF30C7C;
  v55 = (_QWORD *)v25;
  aBlock = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v52 = sub_19CCE9D50;
  v53 = &block_descriptor_51;
  v26 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v27 = v21;
  swift_retain();
  swift_retain();
  v28 = v20;
  swift_retain();
  swift_release();
  dispatch_sync(v28, v26);
  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE442300);
    v30 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v31 = swift_allocObject();
    *(_DWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v30 + 16) = v31;
    *(_QWORD *)(v30 + 24) = v19;
    *(_QWORD *)(v30 + 32) = 0;
    *(_QWORD *)(v30 + 40) = 0;
    *(_BYTE *)(v30 + 48) = 0;
    v32 = (_QWORD *)swift_allocObject();
    v33 = v41;
    v32[2] = v30;
    v32[3] = v33;
    v41 = v28;
    v32[4] = v42;
    v32[5] = v22;
    v32[6] = v23;
    v54 = sub_19CF308F8;
    v55 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_19CD0C78C;
    v53 = &block_descriptor_57;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = v22;
    v35 = v27;
    v36 = v43;
    sub_19CFDF2F0();
    v49 = v19;
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
    v37 = v44;
    v38 = v48;
    sub_19CFE0070();
    v39 = v41;
    sub_19CFDFD70();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v46);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v30;
  }
  return result;
}

uint64_t sub_19CF2DFF4(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_19CD59B64(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_19CF30A5C(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_19CF2E070(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  NSObject *v11;
  id v12;
  NSObject *v13;
  id v14;
  _BYTE v20[48];
  _QWORD v21[6];

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_19CFE0394();
    if (v6)
    {
LABEL_3:
      if (v6 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1A1ADA390](0, a1);
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 32);
          swift_retain();
        }
        dispatch_group_enter(a2);
        v8 = swift_allocObject();
        *(_QWORD *)(v8 + 16) = a3;
        *(_QWORD *)(v8 + 24) = a2;
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = a4;
        *(_QWORD *)(v9 + 24) = a2;
        v21[3] = sub_19CD48F8C();
        v21[4] = &protocol witness table for OS_dispatch_queue;
        v21[0] = a5;
        sub_19CCD5B84((uint64_t)v21, (uint64_t)v20);
        v20[40] = 0;
        v10 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 16) + 16);
        v11 = a2;
        v12 = a5;
        v13 = v11;
        v14 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v10);
        swift_beginAccess();
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x19CF2E668);
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF2E678(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  NSObject *v11;
  id v12;
  NSObject *v13;
  id v14;
  _BYTE v20[48];
  _QWORD v21[6];

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_19CFE0394();
    if (v6)
    {
LABEL_3:
      if (v6 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1A1ADA390](0, a1);
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 32);
          swift_retain();
        }
        dispatch_group_enter(a2);
        v8 = swift_allocObject();
        *(_QWORD *)(v8 + 16) = a3;
        *(_QWORD *)(v8 + 24) = a2;
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = a4;
        *(_QWORD *)(v9 + 24) = a2;
        v21[3] = sub_19CD48F8C();
        v21[4] = &protocol witness table for OS_dispatch_queue;
        v21[0] = a5;
        sub_19CCD5B84((uint64_t)v21, (uint64_t)v20);
        v20[40] = 0;
        v10 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 16) + 16);
        v11 = a2;
        v12 = a5;
        v13 = v11;
        v14 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v10);
        swift_beginAccess();
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x19CF2EC84);
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF2EC94(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  NSObject *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[4];
  _BYTE v22[48];
  _QWORD v23[6];

  v8 = a1;
  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_19CFE0394();
  v9 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
  }
  else
  {
    v11 = 0;
    v18 = v8 & 0xC000000000000001;
    v19 = v8;
    do
    {
      if (v18)
        MEMORY[0x1A1ADA390](v11, v8);
      else
        swift_retain();
      ++v11;
      dispatch_group_enter(a2);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = a3;
      *(_QWORD *)(v12 + 24) = a2;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a4;
      *(_QWORD *)(v13 + 24) = a2;
      v23[3] = sub_19CD48F8C();
      v23[4] = &protocol witness table for OS_dispatch_queue;
      v23[0] = a5;
      v21[0] = sub_19CF308C8;
      v21[1] = v12;
      v21[2] = sub_19CEBE33C;
      v21[3] = v13;
      sub_19CCD5B84((uint64_t)v23, (uint64_t)v22);
      v22[40] = 0;
      v14 = a2;
      v15 = a5;
      v16 = v14;
      v17 = v15;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_19CDBE1E4();
      sub_19CCECFE4((uint64_t)v21, (uint64_t *)&unk_1EE440C90);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);

      swift_release();
      swift_release();
      swift_release();
      v8 = v19;
    }
    while (v9 != v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CF2EEB4(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  id v15;
  _BYTE v20[48];
  _QWORD v21[6];

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_19CFE0394();
    if (v7)
    {
LABEL_3:
      if (v7 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1A1ADA390](0, a1);
        }
        else
        {
          v8 = *(_QWORD *)(a1 + 32);
          swift_retain();
        }
        dispatch_group_enter(a2);
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = a3;
        *(_QWORD *)(v9 + 24) = a2;
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = a4;
        *(_QWORD *)(v10 + 24) = a2;
        v21[3] = sub_19CD48F8C();
        v21[4] = &protocol witness table for OS_dispatch_queue;
        v21[0] = a5;
        sub_19CCD5B84((uint64_t)v21, (uint64_t)v20);
        v20[40] = 0;
        v11 = (os_unfair_lock_s *)(*(_QWORD *)(v8 + 16) + 16);
        v12 = a2;
        v13 = a5;
        v14 = v12;
        v15 = v13;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v11);
        swift_beginAccess();
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x19CF2F4ECLL);
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
  }
  return swift_bridgeObjectRelease();
}

void sub_19CF2F4FC(uint64_t a1, NSObject *a2)
{
  char **v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = (char **)(a1 + 16);
  swift_beginAccess();
  v5 = *(char **)(a1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_19CED5AD0(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v4 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  v9 = v8 + 1;
  if (v8 >= v7 >> 1)
  {
    v5 = sub_19CED5AD0((char *)(v7 > 1), v8 + 1, 1, v5);
    *v4 = v5;
  }
  *((_QWORD *)v5 + 2) = v9;
  swift_endAccess();
  dispatch_group_leave(a2);
}

void sub_19CF2F5C4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;

  v6 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_19CED5BF0(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_19CED5BF0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v7[v10 + 4] = a1;
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19CF2F6A0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for MTMetricsIdentifier();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (unint64_t *)(a2 + 16);
  sub_19CDE26B4(a1, (uint64_t)v10);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_19CED5C10(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
    *v11 = v12;
  }
  v15 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  if (v15 >= v14 >> 1)
  {
    v12 = sub_19CED5C10(v14 > 1, v15 + 1, 1, v12);
    *v11 = v12;
  }
  *(_QWORD *)(v12 + 16) = v15 + 1;
  sub_19CDE2B4C((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15);
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19CF2F7DC(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFBA2F4();
}

void sub_19CF2F8B4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(&v10, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFBA4F4(v10);
}

uint64_t sub_19CF2F994(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(&v11, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFBA974(v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CF2FA80(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];

  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v11, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFBFF24(v11[0], v11[1], v11[2]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CompoundMetricsEventRecorder.__allocating_init(recorders:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CompoundMetricsEventRecorder.init(recorders:)(a1);
  return v2;
}

uint64_t CompoundMetricsEventRecorder.add(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  _QWORD aBlock[6];
  __int128 v21[2];

  v2 = v1;
  v19 = sub_19CFDF308();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CFDF2D8();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F48);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  sub_19CFDF2CC();
  aBlock[0] = v14;
  sub_19CCC5C88(qword_1ECEB3100, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  sub_19CFE0070();
  sub_19CCD5B84(a1, (uint64_t)v21);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  sub_19CCD14C4(v21, v15 + 24);
  aBlock[4] = sub_19CF2FF0C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  aBlock[3] = &block_descriptor_29;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_19CFDF2F0();
  MEMORY[0x1A1AD9FF4](0, v7, v13, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  return swift_release();
}

uint64_t sub_19CF2FE00(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  __int128 v9[2];

  sub_19CCD5B84(a2, (uint64_t)v9);
  v3 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD **)(a1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_19CED6B78(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_19CED6B78((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *v3 = v4;
  }
  v4[2] = v7 + 1;
  sub_19CCD14C4(v9, (uint64_t)&v4[5 * v7 + 4]);
  return swift_endAccess();
}

uint64_t sub_19CF2FEE0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_19CF2FF0C()
{
  uint64_t v0;

  return sub_19CF2FE00(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_19CF2FF18()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF2FF54()
{
  return swift_deallocObject();
}

uint64_t CompoundMetricsEventRecorder._recordAsync(_:on:)()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AE8);
  sub_19CFDFDC4();
  v0 = sub_19CF2CB60(v2, sub_19CF30170, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CF2FFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v20[2];
  uint64_t v21;

  result = swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v19 = a6;
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CFE0238();
    v16 = (_QWORD *)(v13 + 32);
    do
    {
      v17 = v16[3];
      v18 = v16[4];
      __swift_project_boxed_opaque_existential_1(v16, v17);
      v20[0] = a2;
      v20[1] = a3;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, a4, a5, v17, v18);
      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      v16 += 5;
      --v14;
    }
    while (v14);
    v15 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a6 = v19;
  }
  *a6 = v15;
  return result;
}

uint64_t sub_19CF3015C@<X0>(_QWORD *a1@<X8>)
{
  return sub_19CF30AB4(a1);
}

void sub_19CF30170(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_19CE04734();
    swift_allocError();
    *v3 = a2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

uint64_t CompoundMetricsEventRecorder.flush()()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CD78);
  sub_19CFDFDC4();
  v0 = sub_19CF2D084(v2, sub_19CF30380, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CF30250@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CFE0238();
    v8 = v5 + 32;
    do
    {
      sub_19CCD5B84(v8, (uint64_t)v11);
      v9 = v12;
      v10 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      v8 += 40;
      --v6;
    }
    while (v6);
    v7 = v14;
    result = swift_bridgeObjectRelease();
  }
  *a2 = v7;
  return result;
}

uint64_t sub_19CF30368@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_19CF30250(v1, a1);
}

uint64_t sub_19CF30380@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  BOOL v9;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_19CE04734();
    swift_allocError();
    *v4 = a2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v5 = *(_QWORD *)(result + 16);
    if (v5)
    {
      v6 = 0;
      v7 = (uint64_t *)(result + 32);
      while (1)
      {
        v8 = *v7++;
        v9 = __OFADD__(v6, v8);
        v6 += v8;
        if (v9)
          break;
        if (!--v5)
          goto LABEL_9;
      }
      __break(1u);
    }
    else
    {
      v6 = 0;
LABEL_9:
      *a3 = v6;
    }
  }
  return result;
}

uint64_t CompoundMetricsEventRecorder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t CompoundMetricsEventRecorder.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_19CF30468()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AE8);
  sub_19CFDFDC4();
  v0 = sub_19CF2CB60(v2, sub_19CF30170, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CF304F8()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CD78);
  sub_19CFDFDC4();
  v0 = sub_19CF2D084(v2, sub_19CF30380, 0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19CF30578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17[2];
  uint64_t v18;
  uint64_t v19[5];
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v1 = MEMORY[0x1E0DEE9E8];
  v23 = MEMORY[0x1E0DEE9E8];
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19CCD5B84(v4, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB1E50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A638);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_19CCD14C4(v17, (uint64_t)&v20);
        v5 = *((_QWORD *)&v21 + 1);
        v6 = v22;
        __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
        v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
        if (v8)
        {
          sub_19CE8891C(v19, v7, v8);
          swift_bridgeObjectRelease();
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
      }
      else
      {
        v18 = 0;
        memset(v17, 0, sizeof(v17));
        sub_19CCECFE4((uint64_t)v17, &qword_1EE437138);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v23;
  }
  if (*(_QWORD *)(v1 + 16) >= 2uLL)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v9 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v11 = swift_allocObject();
    v12 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v19[3] = v12;
    v19[0] = 0xD000000000000053;
    v19[1] = 0x800000019D077200;
    v20 = 0u;
    v21 = 0u;
    v13 = v9;
    sub_19CD40658((uint64_t)v19, (uint64_t)&v20);
    *(_BYTE *)(v11 + 64) = 0;
    v14 = v21;
    *(_OWORD *)(v11 + 32) = v20;
    *(_OWORD *)(v11 + 48) = v14;
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)&v20 = v13;
    LOBYTE(v19[0]) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)v19);

    swift_bridgeObjectRelease();
  }
  v15 = sub_19CF2DFF4(v1);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_19CF30804()
{
  return sub_19CF30578();
}

uint64_t method lookup function for CompoundMetricsEventRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CompoundMetricsEventRecorder.__allocating_init(recorders:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19CF30838()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CF3085C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = *a3;
  return a1(&v4);
}

uint64_t sub_19CF30898()
{
  return sub_19CF30BA4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2EC94);
}

uint64_t sub_19CF308A4()
{
  return swift_deallocObject();
}

uint64_t sub_19CF308B8()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2F994);
}

void sub_19CF308C8(uint64_t a1)
{
  uint64_t v1;

  sub_19CF2F6A0(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19CF308D8()
{
  return sub_19CF30BA4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2EEB4);
}

uint64_t sub_19CF308E4()
{
  return swift_deallocObject();
}

uint64_t sub_19CF308F8()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2FA80);
}

void sub_19CF30904(void **a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  id v6;

  v5 = *a1;
  swift_beginAccess();
  v6 = v5;
  MEMORY[0x1A1AD9A6C]();
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_19CFDF8A8();
  sub_19CFDF8E4();
  sub_19CFDF878();
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_19CF309AC(void **a1)
{
  uint64_t v1;

  sub_19CF30904(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

id sub_19CF309BC(id result, char a2)
{
  switch(a2)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19CF309F4(id a1, char a2)
{
  switch(a2)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19CF30A30()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CF30A5C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_19CF30AB4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_19CF2FFF4(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_19CF30AD8()
{
  return sub_19CF30BA4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2E678);
}

uint64_t sub_19CF30AE4()
{
  return swift_deallocObject();
}

uint64_t sub_19CF30AF8()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2F8B4);
}

void sub_19CF30B08(uint64_t *a1)
{
  uint64_t v1;

  sub_19CF2F5C4(*a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_19CF30B20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF30B44()
{
  uint64_t v0;

  return sub_19CF3085C(*(uint64_t (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t *)(v0 + 32));
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CF30B98()
{
  return sub_19CF30BA4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2E070);
}

uint64_t sub_19CF30BA4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_19CF30BB8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CF30C08()
{
  return sub_19CCE9DB8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CF2F7DC);
}

void sub_19CF30C18()
{
  uint64_t v0;

  sub_19CF2F4FC(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24));
}

uint64_t objectdestroy_66Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CF30C58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ClickLocationTracker.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_19CE10CA8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B20);
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_19CD51798(v1);
  return v0;
}

uint64_t ClickLocationTracker.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = sub_19CE10CA8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439B20);
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_19CD51798(v1);
  return v0;
}

uint64_t ClickLocationTracker.onDataSerialized.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall ClickLocationTracker.save(data:)(JetEngine::ClickLocationData *data)
{
  uint64_t v1;
  __int128 v2;
  Swift::String_optional uniqueID;
  uint64_t countAndFlagsBits;
  uint64_t object;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  __int128 v8[3];
  Swift::String_optional v9;

  v2 = *(_OWORD *)&data->position;
  v8[0] = (__int128)data->id;
  v8[1] = v2;
  uniqueID = data->_uniqueID;
  v8[2] = (__int128)data->parentUniqueID;
  v9 = uniqueID;
  if (uniqueID.value._object)
  {
    countAndFlagsBits = v9.value._countAndFlagsBits;
    object = (uint64_t)uniqueID.value._object;
  }
  else
  {
    object = *((_QWORD *)&v8[0] + 1);
    countAndFlagsBits = *(_QWORD *)&v8[0];
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  sub_19CF30EB4((uint64_t)v8);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0x8000000000000000;
  sub_19CE17B90(v8, countAndFlagsBits, object, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 16) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t ClickLocationData.uniqueID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[7])
  {
    v1 = v0[6];
  }
  else
  {
    v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19CF30EB4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

Swift::Void __swiftcall ClickLocationTracker.remove(data:)(JetEngine::ClickLocationData *data)
{
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v3[2];

  if (data->_uniqueID.value._object)
  {
    countAndFlagsBits = data->_uniqueID.value._countAndFlagsBits;
    object = data->_uniqueID.value._object;
  }
  else
  {
    countAndFlagsBits = data->id._countAndFlagsBits;
    object = data->id._object;
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CDD300C(countAndFlagsBits, (uint64_t)object, (uint64_t)v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_19CF318A0(v3[0], v3[1]);
}

uint64_t sub_19CF30FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  _QWORD v39[3];
  unint64_t v40;
  __int128 v41;
  unint64_t v42;
  id v43[29];

  v43[27] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v39[0] = v2;
  v9 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v10 = sub_19CF31468(a1, a2, v9);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v39[2] = v8;
    v43[0] = (id)MEMORY[0x1E0DEE9D8];
    sub_19CE4A23C(0, v11, 0);
    v39[1] = v10;
    v12 = (uint64_t *)(v10 + 48);
    v41 = xmmword_19D052350;
    v40 = 0x800000019D0772A0;
    do
    {
      v14 = *(v12 - 2);
      v13 = *(v12 - 1);
      v16 = *v12;
      v15 = v12[1];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v41;
      *(_QWORD *)(inited + 32) = 25705;
      *(_QWORD *)(inited + 40) = 0xE200000000000000;
      *(_QWORD *)(inited + 48) = v14;
      *(_QWORD *)(inited + 56) = v13;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 80) = 0xD000000000000010;
      *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(inited + 88) = v40;
      *(_QWORD *)(inited + 96) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_19CD30650(inited);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = v18;
      sub_19CECA6DC(v15, (uint64_t)sub_19CEC6470, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v42);
      v20 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v43[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19CE4A23C(0, v21[2] + 1, 1);
        v21 = v43[0];
      }
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_19CE4A23C(v22 > 1, v23 + 1, 1);
        v21 = v43[0];
      }
      v21[2] = v23 + 1;
      v21[v23 + 4] = v20;
      v12 += 8;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v24 = sub_19CE03018((uint64_t)v21);
  if ((_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0() & 1) != 0)
  {
    v25 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F628);
    v26 = swift_initStackObject();
    *(_OWORD *)(v26 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v26 + 32) = 0x6E6F697461636F6CLL;
    *(_QWORD *)(v26 + 40) = 0xE800000000000000;
    *(_QWORD *)(v26 + 48) = v24;
    swift_bridgeObjectRetain();
    sub_19CE101C4(v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0758);
    v27 = (void *)sub_19CFDF3B0();
    swift_bridgeObjectRelease();
    v43[0] = 0;
    v28 = objc_msgSend(v25, sel_dataWithJSONObject_options_error_, v27, 3, v43);

    v29 = v43[0];
    if (v28)
    {
      v30 = sub_19CFDEE70();
      v32 = v31;

      sub_19CFDF5B4();
      v33 = sub_19CFDF590();
      if (v34)
      {
        sub_19CE2650C(v33, v34);
        sub_19CD3BE18(v30, v32);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19CD3BE18(v30, v32);
      }
    }
    else
    {
      v35 = v29;
      v36 = (void *)sub_19CFDEC9C();

      swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  v37 = sub_19CE03018((uint64_t)v21);
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_19CF31468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a3 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v6 = sub_19CD3FD1C(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = (uint64_t *)(*(_QWORD *)(a3 + 56) + (v6 << 6));
  v10 = *v8;
  v9 = v8[1];
  v11 = v8[2];
  v12 = v8[3];
  v13 = v8[5];
  v14 = v8[7];
  v23 = v8[6];
  v24 = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE439D20);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v9;
  *(_QWORD *)(v15 + 48) = v11;
  *(_QWORD *)(v15 + 56) = v12;
  *(_QWORD *)(v15 + 64) = v24;
  *(_QWORD *)(v15 + 72) = v13;
  *(_QWORD *)(v15 + 80) = v23;
  *(_QWORD *)(v15 + 88) = v14;
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = sub_19CD3FD1C(a1, a2);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD *)(a3 + 56) + (v16 << 6);
      v19 = *(_QWORD *)(v18 + 32);
      v20 = *(_QWORD *)(v18 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        v21 = sub_19CF31468(v19, v20, a3);
        swift_bridgeObjectRelease();
        sub_19CDC6DD4(v21);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v15;
}

uint64_t ClickLocationTracker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ClickLocationTracker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ClickLocationData.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationData.position.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ClickLocationData.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationData.parentUniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ClickLocationData.init(id:clickLocationFields:position:parentUniqueID:uniqueID:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String id, Swift::OpaquePointer clickLocationFields, Swift::Int position, Swift::String_optional parentUniqueID, Swift::String_optional uniqueID)
{
  retstr->id = id;
  retstr->position = position;
  retstr->clickLocationFields = clickLocationFields;
  retstr->parentUniqueID = parentUniqueID;
  retstr->_uniqueID = uniqueID;
}

double ClickLocationData.init(impressionMetrics:position:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v5 = a1[3];
  if (v5)
  {
    v6 = *a1;
    v7 = a1[1];
    v8 = a1[2];
    v9 = a1[9];
    if ((a3 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19CEC4AAC(v6, v7, v8, v5);
      *(_QWORD *)a4 = v8;
      *(_QWORD *)(a4 + 8) = v5;
      *(_QWORD *)(a4 + 16) = a2;
      *(_QWORD *)(a4 + 24) = v9;
      result = 0.0;
      *(_OWORD *)(a4 + 32) = 0u;
      *(_OWORD *)(a4 + 48) = 0u;
      return result;
    }
    sub_19CEC4AAC(v6, v7, v8, v5);
  }
  result = 0.0;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

void __swiftcall ClickLocationData.withParentUniqueID(_:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String a2)
{
  uint64_t *v2;
  void *v3;
  Swift::Int v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = (void *)v2[1];
  v4 = v2[2];
  v5 = (void *)v2[3];
  v7 = v2[6];
  v6 = (void *)v2[7];
  retstr->id._countAndFlagsBits = *v2;
  retstr->id._object = v3;
  retstr->position = v4;
  retstr->clickLocationFields._rawValue = v5;
  retstr->parentUniqueID.value = a2;
  retstr->_uniqueID.value._countAndFlagsBits = v7;
  retstr->_uniqueID.value._object = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

void __swiftcall ClickLocationData.withUniqueID(_:)(JetEngine::ClickLocationData *__return_ptr retstr, Swift::String a2)
{
  uint64_t *v2;
  void *v3;
  Swift::Int v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = (void *)v2[1];
  v4 = v2[2];
  v5 = (void *)v2[3];
  v7 = v2[4];
  v6 = (void *)v2[5];
  retstr->id._countAndFlagsBits = *v2;
  retstr->id._object = v3;
  retstr->position = v4;
  retstr->clickLocationFields._rawValue = v5;
  retstr->parentUniqueID.value._countAndFlagsBits = v7;
  retstr->parentUniqueID.value._object = v6;
  retstr->_uniqueID.value = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t sub_19CF318A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ClickLocationTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClickLocationTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClickLocationTracker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t destroy for ClickLocationData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClickLocationData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClickLocationData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ClickLocationData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickLocationData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClickLocationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationData()
{
  return &type metadata for ClickLocationData;
}

uint64_t ExponentialPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v4 + 40) = 0;
  return v4;
}

Swift::Double __swiftcall ExponentialPipelineBackoff.nextWaitInterval()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  v2 = *(_QWORD *)(v0 + 40);
  if (v2 < 1)
    goto LABEL_8;
  v3 = exp2((double)(v2 - 1)) * *(double *)(v0 + 16);
  if (v3 >= *(double *)(v0 + 24))
    v4 = *(double *)(v0 + 24);
  else
    v4 = v3;
  v5 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_8:
    v5 = v2 + 1;
    v4 = 0.0;
  }
  *(_QWORD *)(v0 + 40) = v5;
  objc_msgSend(v1, sel_unlock);
  return v4;
}

Swift::Void __swiftcall ExponentialPipelineBackoff.reset()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  *(_QWORD *)(v0 + 40) = 0;
  objc_msgSend(v1, sel_unlock);
}

uint64_t ExponentialPipelineBackoff.init(baseWaitInterval:maxWaitInterval:)(double a1, double a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = 0;
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 32) = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  *(_QWORD *)(v2 + 40) = 0;
  return v2;
}

double ExponentialPipelineBackoff.baseWaitInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ExponentialPipelineBackoff.maxWaitInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void sub_19CF31CE8(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 40);
  if (v4 < 1)
    goto LABEL_7;
  v5 = exp2((double)(v4 - 1)) * *(double *)(a1 + 16);
  if (v5 >= *(double *)(a1 + 24))
    v5 = *(double *)(a1 + 24);
  *a2 = v5;
  v6 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_7:
    *a2 = 0.0;
    v6 = v4 + 1;
  }
  *(_QWORD *)(a1 + 40) = v6;
}

uint64_t ExponentialPipelineBackoff.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExponentialPipelineBackoff.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

double sub_19CF31D98()
{
  uint64_t v0;
  void *v1;
  double v3;

  v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  sub_19CF31CE8(v0, &v3);
  objc_msgSend(v1, sel_unlock);
  return v3;
}

id sub_19CF31DF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  *(_QWORD *)(v0 + 40) = 0;
  return objc_msgSend(v1, sel_unlock);
}

uint64_t type metadata accessor for ExponentialPipelineBackoff()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExponentialPipelineBackoff()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExponentialPipelineBackoff.__allocating_init(baseWaitInterval:maxWaitInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t CodeByExpressibleByJSON.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t CodeByExpressibleByJSON.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CodeByExpressibleByJSON.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CodeByExpressibleByJSON.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodeByExpressibleByJSON.description.getter()
{
  sub_19CFE0670();
  return 0;
}

uint64_t CodeByExpressibleByJSON.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;

  v36 = a4;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v9;
  v12 = type metadata accessor for CodeByExpressibleByJSON(0, v9, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v31 - v15;
  v17 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = (void *)v39;
  sub_19CFE09D0();
  if (v18)
  {
    v26 = v37;
    v45 = v18;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (swift_dynamicCast())
    {

      v41 = v43;
      v42 = v44;
      v39 = sub_19CFE01B4();
      v38 = swift_allocError();
      v21 = v20;
      __swift_project_boxed_opaque_existential_1(v26, v26[3]);
      v37 = (_QWORD *)sub_19CFE09B8();
      v40[0] = 0;
      v40[1] = 0xE000000000000000;
      sub_19CFE010C();
      sub_19CFDF698();
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      sub_19CFE02E0();
      sub_19CDC5494();
      swift_allocError();
      v22 = v41;
      v23 = v42;
      *v24 = v41;
      v24[1] = v23;
      sub_19CF3230C(v22, *((id *)&v22 + 1), v23);
      sub_19CFE019C();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v39 - 8) + 104))(v21, *MEMORY[0x1E0DEC458]);
      swift_willThrow();
      sub_19CD57DDC(v22, *((id *)&v22 + 1), v23);
    }

  }
  else
  {
    v32 = v16;
    v33 = v13;
    v39 = (uint64_t)v8;
    v34 = v12;
    v35 = v6;
    __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
    sub_19CE080B8();
    sub_19CFE06DC();
    v26 = v37;
    __swift_project_boxed_opaque_existential_1(v37, v37[3]);
    v27 = sub_19CFE09DC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v27);
    sub_19CD3E448((uint64_t)&v41, (uint64_t)v40);
    v29 = v38;
    v28 = v39;
    (*(void (**)(_QWORD *, id *, uint64_t, uint64_t))(a3 + 8))(v40, &v45, v38, a3);
    sub_19CD3E3F8((uint64_t)&v41);
    v30 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v32, v28, v29);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v36, v30, v34);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
}

uint64_t type metadata accessor for CodeByExpressibleByJSON(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodeByExpressibleByJSON);
}

id sub_19CF3230C(int a1, id a2, unint64_t a3)
{
  id result;

  switch(a3 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
      goto LABEL_2;
    case 2uLL:
      swift_bridgeObjectRetain();
LABEL_2:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 5uLL:
      result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19CF32370@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodeByExpressibleByJSON.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t CodeByExpressibleByJSON<>.init()()
{
  return sub_19CFE05A4();
}

uint64_t static CodeByExpressibleByJSON<>.== infix(_:_:)()
{
  return sub_19CFDF548() & 1;
}

uint64_t sub_19CF323D8()
{
  return static CodeByExpressibleByJSON<>.== infix(_:_:)();
}

uint64_t CodeByExpressibleByJSON<>.hash(into:)()
{
  return sub_19CFDF4D0();
}

uint64_t CodeByExpressibleByJSON<>.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF4D0();
  return sub_19CFE0910();
}

uint64_t sub_19CF32440()
{
  return CodeByExpressibleByJSON<>.hashValue.getter();
}

uint64_t sub_19CF32448()
{
  return CodeByExpressibleByJSON<>.hash(into:)();
}

uint64_t sub_19CF32450()
{
  sub_19CFE08C8();
  CodeByExpressibleByJSON<>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t CodeByExpressibleByJSON<>.init(_partiallyFrom:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _OWORD *, uint64_t, uint64_t);
  _BYTE *v19;
  uint64_t v21;
  _BYTE v22[16];
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  _QWORD v28[4];
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for CodeByExpressibleByJSON(0, v11, v12, v13);
  v24 = *(_QWORD *)(v14 - 8);
  v25 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v23 = &v22[-v16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_19CFE09DC();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  sub_19CE080B8();
  sub_19CFE06DC();
  v29[0] = v26[0];
  v29[1] = v26[1];
  v30 = v27;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  v21 = v31;
  sub_19CD3E448((uint64_t)v29, (uint64_t)v28);
  *(_QWORD *)&v26[0] = v21;
  v18 = *(void (**)(_QWORD *, _OWORD *, uint64_t, uint64_t))(a3 + 8);
  swift_bridgeObjectRetain();
  v18(v28, v26, a2, a3);
  sub_19CD3E3F8((uint64_t)v29);
  swift_bridgeObjectRelease();
  v19 = v23;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v23, v10, a2);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v24 + 32))(a4, v19, v25);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CF32758@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return CodeByExpressibleByJSON<>.init(_partiallyFrom:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t CodeByExpressibleByJSON<>.encode(to:)()
{
  return sub_19CFDF4B8();
}

uint64_t sub_19CF32780()
{
  return CodeByExpressibleByJSON<>.encode(to:)();
}

uint64_t CodeByExpressibleByJSON<>._partiallyEncode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a3 + 8))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_19CF327A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> CodeByExpressibleByJSON<A>, a1, &v4);
}

uint64_t sub_19CF327DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CodeByExpressibleByJSON<>._partiallyEncode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_19CF327E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CF32894 + 4 * byte_19D062EEE[(v7 - 1)]))();
}

void sub_19CF328E4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

unint64_t static NativeIntentDispatcher.Builder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t result;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _BYTE v13[48];

  memset(&v13[8], 0, 40);
  sub_19CCECFE4((uint64_t)&v13[8], qword_1EE437050);
  memset(&v13[8], 0, 40);
  result = sub_19CE10E20(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)v13 = result;
  v5 = *(_OWORD *)&v13[32];
  v6 = *(_OWORD *)v13;
  a2[1] = *(_OWORD *)&v13[16];
  a2[2] = v5;
  *a2 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_19CF33104(v8, (uint64_t)v13);
      v9 = *(_QWORD *)v13;
      swift_bridgeObjectRetain();
      v10 = *(_QWORD *)a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = v10;
      *(_QWORD *)a2 = 0x8000000000000000;
      sub_19CF32DA4(v9, (uint64_t)sub_19CF32D64, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v12);
      *(_QWORD *)a2 = v12;
      swift_bridgeObjectRelease();
      sub_19CF33140((uint64_t)v13);
      v8 += 6;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static NativeIntentDispatcher.Builder.buildExpression<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _BYTE v9[48];
  _OWORD v10[3];

  memset(&v9[8], 0, 40);
  sub_19CCECFE4((uint64_t)&v9[8], qword_1EE437050);
  memset(&v9[8], 0, 40);
  *(_QWORD *)v9 = sub_19CE10E20(MEMORY[0x1E0DEE9D8]);
  v10[1] = *(_OWORD *)&v9[16];
  v10[2] = *(_OWORD *)&v9[32];
  v10[0] = *(_OWORD *)v9;
  NativeIntentDispatcher.registering<A>(_:)(a1, a2, a3, a4);
  return sub_19CF33140((uint64_t)v10);
}

uint64_t static NativeIntentDispatcher.Builder.buildOptional(_:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE v7[48];
  _OWORD v8[3];

  result = sub_19CF33174(a1, (uint64_t)v8);
  if (*(_QWORD *)&v8[0])
  {
    v4 = v8[1];
    *a2 = v8[0];
    a2[1] = v4;
    a2[2] = v8[2];
  }
  else
  {
    memset(&v7[8], 0, 40);
    sub_19CCECFE4((uint64_t)&v7[8], qword_1EE437050);
    memset(&v7[8], 0, 40);
    *(_QWORD *)v7 = sub_19CE10E20(MEMORY[0x1E0DEE9D8]);
    v5 = *(_OWORD *)&v7[32];
    v6 = *(_OWORD *)v7;
    a2[1] = *(_OWORD *)&v7[16];
    a2[2] = v5;
    *a2 = v6;
    return sub_19CCECFE4((uint64_t)v8, &qword_1EE442388);
  }
  return result;
}

uint64_t static NativeIntentDispatcher.Builder.buildEither(first:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CF33104(a1, a2);
}

uint64_t NativeIntentDispatcher.init(implementations:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_19CF32D64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_19CCD5B84((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CF32DA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  __int128 v46[2];
  __int128 v47[2];
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v51 = a1;
  v52 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v53 = v8;
  v54 = 0;
  v55 = v11 & v9;
  v56 = a2;
  v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE250EC((uint64_t)&v48);
  v12 = v49;
  if (!v49)
    goto LABEL_27;
  v13 = v48;
  sub_19CCD14C4(v50, (uint64_t)v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_19CD3FD1C(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_19CE1B0F4();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_19CCD14C4(v47, v24[7] + 40 * v16);
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_19CE250EC((uint64_t)&v48);
    for (i = v49; v49; i = v49)
    {
      v31 = v48;
      sub_19CCD14C4(v50, (uint64_t)v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_19CD3FD1C(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_19CE15D64(v37, 1);
        v39 = sub_19CD3FD1C(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_19CCD5B84((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v34;
        __swift_destroy_boxed_opaque_existential_1Tm(v30);
        sub_19CCD14C4(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_19CCD14C4(v47, v41[7] + 40 * v34);
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_19CE250EC((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CE15D64(v19, a4 & 1);
  v21 = sub_19CD3FD1C(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_19CCD5B84((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v16;
    __swift_destroy_boxed_opaque_existential_1Tm(v23);
    sub_19CCD14C4(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CF33104(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for NativeIntentDispatcher(a2, a1);
  return a2;
}

uint64_t sub_19CF33140(uint64_t a1)
{
  destroy for NativeIntentDispatcher(a1);
  return a1;
}

uint64_t sub_19CF33174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE442388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for NativeIntentDispatcher.Builder()
{
  return &type metadata for NativeIntentDispatcher.Builder;
}

uint64_t dispatch thunk of JetPackAssetFetcher._fetch(_:candidate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CE66350;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for UserAgentFieldProvider()
{
  return &type metadata for UserAgentFieldProvider;
}

uint64_t sub_19CF33274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a3;
  return swift_task_switch();
}

uint64_t PageMetricsPresenter.data.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 48));
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  sub_19CF34F7C(v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  return swift_release();
}

uint64_t PageMetricsPresenter.__allocating_init(appMetrics:pipeline:context:data:)(uint64_t a1, uint64_t a2, uint64_t *a3, __int128 *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  PageMetricsPresenter.init(appMetrics:pipeline:context:data:)(a1, a2, a3, a4);
  return v8;
}

uint64_t PageMetricsPresenter.init(appMetrics:pipeline:context:data:)(uint64_t a1, uint64_t a2, uint64_t *a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v6 = *a3;
  v11 = *a4;
  v7 = *((_QWORD *)a4 + 2);
  v8 = *((_QWORD *)a4 + 3);
  *(_QWORD *)(v4 + 208) = 0;
  *(_QWORD *)(v4 + 16) = a1;
  sub_19CD50F74(a2, v4 + 24);
  *(_WORD *)(v4 + 216) = 0;
  *(_QWORD *)(v4 + 232) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BEB0);
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 48) = 0;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v8;
  sub_19CD510B0(a2);
  *(_QWORD *)(v4 + 224) = v9;
  return v4;
}

uint64_t sub_19CF333E8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  if (*(_BYTE *)(v1 + 216) != (result & 1))
  {
    v2 = v1;
    v3 = *(_QWORD *)(v1 + 16);
    if (v3)
    {
      v4 = *(_QWORD *)(v3 + 208);
      if (*(_BYTE *)(v1 + 216))
      {
        swift_weakInit();
        swift_weakAssign();
        sub_19CF34FE8();
        sub_19CF34FF8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BDC0);
        v5 = swift_allocObject();
        sub_19CF34FE8();
        v6 = *(void **)(v4 + 16);
        swift_retain();
        objc_msgSend(v6, sel_lock);
        v7 = (_QWORD *)(v4 + 24);
        swift_beginAccess();
        v8 = *(_QWORD **)(v4 + 24);
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v4 + 24) = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v8 = sub_19CED6B8C(0, v8[2] + 1, 1, v8);
          *v7 = v8;
        }
        v11 = v8[2];
        v10 = v8[3];
        if (v11 >= v10 >> 1)
        {
          v8 = sub_19CED6B8C((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
          *v7 = v8;
        }
        v8[2] = v11 + 1;
        v8[v11 + 4] = v5;
        swift_endAccess();
        objc_msgSend(v6, sel_unlock);
        sub_19CF35008((uint64_t)v23);
        v12 = *(_QWORD *)(v2 + 208);
        if (v12)
        {
          v13 = *(_QWORD *)(v3 + 208);
          v14 = *(void **)(v13 + 16);
          swift_retain();
          swift_retain();
          objc_msgSend(v14, sel_lock);
          swift_beginAccess();
          v15 = sub_19CDF2B74(v12, *(_QWORD *)(v13 + 24));
          if ((v16 & 1) == 0)
          {
            v17 = v15;
            swift_beginAccess();
            sub_19CF7F09C(v17, &v24);
            swift_endAccess();
            swift_release();
          }
          objc_msgSend(v14, sel_unlock);
          swift_release();
          swift_release();
          *(_QWORD *)(v2 + 208) = v5;
        }
        else
        {
          *(_QWORD *)(v2 + 208) = v5;
        }
      }
      else
      {
        v18 = *(_QWORD *)(v1 + 208);
        if (v18)
        {
          v19 = *(void **)(v4 + 16);
          swift_retain_n();
          swift_retain();
          objc_msgSend(v19, sel_lock);
          swift_beginAccess();
          v20 = sub_19CDF2B74(v18, *(_QWORD *)(v4 + 24));
          if ((v21 & 1) == 0)
          {
            v22 = v20;
            swift_beginAccess();
            sub_19CF7F09C(v22, &v24);
            swift_endAccess();
            swift_release();
          }
          objc_msgSend(v19, sel_unlock);
          swift_release();
          swift_release();
        }
        else
        {
          swift_retain();
        }
        *(_QWORD *)(v1 + 208) = 0;
      }
      swift_release();
      return swift_release();
    }
  }
  return result;
}

BOOL PageMetricsPresenter.canProcessAppInstructions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) != 0;
}

uint64_t PageMetricsPresenter.context.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 232);
  return swift_bridgeObjectRetain();
}

uint64_t PageMetricsPresenter.context.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_beginAccess();
  *(_QWORD *)(v1 + 232) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PageMetricsPresenter.context.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_19CF337DC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  _OWORD v6[2];

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 48));
  sub_19CF3397C((uint64_t *)(v3 + 16), (uint64_t *)v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  swift_release();
  result = *(double *)v6;
  v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

void sub_19CF3385C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[4];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  v4[3] = v3;
  sub_19CF34F7C(v4[0]);
  PageMetricsPresenter.data.setter(v4);
}

void PageMetricsPresenter.data.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *(_QWORD *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 48));
  sub_19CE2AA2C(*(_QWORD *)(v6 + 16));
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  sub_19CF34F7C(v2);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
  swift_release();
  if (v2)
  {
    sub_19CE2AA2C(v2);
    if (*(_BYTE *)(v1 + 216) == 1)
    {
      v7[0] = 0x65746E4565676170;
      v7[1] = 0xE900000000000072;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(v7);
    }
  }
}

uint64_t sub_19CF3397C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  return sub_19CF34F7C(v3);
}

void (*PageMetricsPresenter.data.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 224);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 48));
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_QWORD *)(v4 + 40);
  *v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  sub_19CF34F7C(v5);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
  swift_release();
  return sub_19CF33A38;
}

void sub_19CF33A38(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *(_QWORD *)((*a1)[4] + 224);
  if ((a2 & 1) != 0)
  {
    sub_19CF34F7C(**a1);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 48));
    sub_19CE2AA2C(*(_QWORD *)(v7 + 16));
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v4;
    *(_QWORD *)(v7 + 32) = v6;
    *(_QWORD *)(v7 + 40) = v3;
    sub_19CF34F7C(v5);
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 48));
    swift_release();
    if (v5)
    {
      v8 = v2[4];
      sub_19CE2AA2C(v5);
      if (*(_BYTE *)(v8 + 216) == 1)
      {
        v10 = 0x65746E4565676170;
        v11 = 0xE900000000000072;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v10);
      }
    }
    sub_19CE2AA2C(*v2);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 48));
    sub_19CE2AA2C(*(_QWORD *)(v7 + 16));
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v4;
    *(_QWORD *)(v7 + 32) = v6;
    *(_QWORD *)(v7 + 40) = v3;
    sub_19CF34F7C(v5);
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 48));
    swift_release();
    if (v5)
    {
      v9 = v2[4];
      sub_19CE2AA2C(v5);
      if (*(_BYTE *)(v9 + 216) == 1)
      {
        v10 = 0x65746E4565676170;
        v11 = 0xE900000000000072;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v10);
      }
    }
  }
  free(v2);
}

Swift::Void __swiftcall PageMetricsPresenter.viewDidAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];

  v1 = v0;
  v2 = sub_19CFDF32C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (uint64_t *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19CD48F8C();
  *v6 = sub_19CFDFDB8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2);
  v7 = sub_19CFDF344();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    v8 = *(unsigned __int8 *)(v1 + 216);
    *(_BYTE *)(v1 + 216) = 1;
    sub_19CF333E8(v8);
    v9 = *(_QWORD *)(v1 + 224);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 48));
    v10 = *(_QWORD *)(v9 + 16);
    sub_19CF34F7C(v10);
    os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 48));
    swift_release();
    sub_19CE2AA2C(v10);
    if (v10)
    {
      v11[0] = 0x65746E4565676170;
      v11[1] = 0xE900000000000072;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall PageMetricsPresenter.viewWillDisappear(forReason:)(JetEngine::ViewWillDisappearReason forReason)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = v1;
  countAndFlagsBits = forReason.rawValue._countAndFlagsBits;
  v4 = sub_19CFDF32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)countAndFlagsBits;
  v10 = *(_QWORD *)(countAndFlagsBits + 8);
  sub_19CD48F8C();
  *v8 = sub_19CFDFDB8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(countAndFlagsBits) = sub_19CFDF344();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((countAndFlagsBits & 1) != 0)
  {
    if (v9 == 0xD000000000000019 && v10 == 0x800000019D070760 || (sub_19CFE06A0() & 1) != 0)
    {
      v12 = 0x747475426B636162;
      v13 = 0xEA00000000006E6FLL;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v12);
    }
    v12 = 0x7469784565676170;
    v13 = 0xE800000000000000;
    _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v12);
    v11 = *(unsigned __int8 *)(v2 + 216);
    *(_BYTE *)(v2 + 216) = 0;
    sub_19CF333E8(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t PageMetricsPresenter.deinit()
{
  uint64_t v0;

  swift_release();
  sub_19CD510B0(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PageMetricsPresenter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_19CD510B0(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19CF33F4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *a1;
  v2 = a1[1];
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    if (*(_BYTE *)(result + 216) != 1)
      return swift_release();
    v5 = v1 == 0x7265746E65 && v2 == 0xE500000000000000;
    if (v5 || (sub_19CFE06A0() & 1) != 0)
    {
      if ((*(_BYTE *)(v4 + 217) & 1) != 0)
      {
        v6 = 0x7265746E45707061;
        v7 = 0xE800000000000000;
        _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v6);
        *(_BYTE *)(v4 + 217) = 0;
      }
      return swift_release();
    }
    if (v1 == 1953069157 && v2 == 0xE400000000000000 || (sub_19CFE06A0() & 1) != 0)
    {
      v6 = 0x74697845707061;
      v7 = 0xE700000000000000;
      _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(&v6);
      *(_BYTE *)(v4 + 217) = 1;
      return swift_release();
    }
    result = sub_19CFE0340();
    __break(1u);
  }
  return result;
}

BOOL sub_19CF340BC()
{
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  if (Strong)
    swift_release();
  return Strong != 0;
}

void _s9JetEngine20PageMetricsPresenterC19processInstructions3for25waitUntilProcessingStartsyAA0cD0V15InvocationPointV_SbtF_0(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  Swift::String v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  id v40;
  Swift::String v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  Swift::String v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  Swift::String v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  __int128 v64;
  __int128 v65;
  Swift::String v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  __int128 v71;
  __int128 v72;
  Swift::String v73;
  __int128 v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  BOOL v86;
  uint64_t v87;
  _QWORD *v88;
  char v90;
  uint64_t v91;
  unint64_t i;
  unint64_t v93;
  _QWORD *v94;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  _OWORD *v112;
  __int128 v113;
  __int128 v114;
  _QWORD v115[4];
  uint64_t v116;
  unint64_t v117;
  ValueMetadata *v118;
  _QWORD *v119;

  v4 = v1;
  v6 = sub_19CFDF32C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (uint64_t *)((char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a1;
  v11 = a1[1];
  sub_19CD48F8C();
  *v10 = sub_19CFDFDB8();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6);
  v13 = sub_19CFDF344();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v104 = v12;
  v105 = v11;
  v14 = v4[28];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 48));
  v15 = *(_QWORD *)(v14 + 16);
  v2 = *(_QWORD *)(v14 + 24);
  v12 = *(_QWORD *)(v14 + 32);
  sub_19CF34F7C(v15);
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 48));
  swift_release();
  v11 = (unint64_t)&qword_1ECEB2F98[13];
  v3 = &unk_19D052000;
  if (!v15)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v38 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_19D052350;
    v40 = v38;
    v119 = sub_19CD40918(0, 38, 0, MEMORY[0x1E0DEE9D8]);
    v41._countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    swift_unknownObjectRetain();
    sub_19CCF4C08((uint64_t)&v109);
    v42 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_19CD40918(0, v42[2] + 1, 1, v42);
    v44 = v42[2];
    v43 = v42[3];
    if (v44 >= v43 >> 1)
      v42 = sub_19CD40918((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
    v42[2] = v44 + 1;
    v45 = &v42[5 * v44];
    v46 = v109;
    v47 = v110;
    *((_BYTE *)v45 + 64) = v111;
    *((_OWORD *)v45 + 2) = v46;
    *((_OWORD *)v45 + 3) = v47;
    v119 = v42;
    v48._countAndFlagsBits = 0xD000000000000023;
    v48._object = (void *)0x800000019D0773E0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    v118 = &type metadata for PageMetrics.InvocationPoint;
    v116 = v104;
    v117 = v105;
    sub_19CD40794((uint64_t)&v116, (uint64_t)v115);
    v113 = 0u;
    v114 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v115, (uint64_t)&v113);
    LOBYTE(v111) = 0;
    v109 = v113;
    v110 = v114;
    v49 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_19CD40918(0, v49[2] + 1, 1, v49);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_19CD40918((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v49[2] = v51 + 1;
    v52 = &v49[5 * v51];
    v53 = v109;
    v54 = v110;
    *((_BYTE *)v52 + 64) = v111;
    *((_OWORD *)v52 + 2) = v53;
    *((_OWORD *)v52 + 3) = v54;
    v119 = v49;
    sub_19CD3F190((uint64_t)&v116);
    v55._countAndFlagsBits = 44;
    v55._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    *(_QWORD *)(v39 + 32) = v119;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v56 = swift_allocObject();
    v57 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v56 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v114 + 1) = v57;
    *(_QWORD *)&v113 = 0xD000000000000027;
    *((_QWORD *)&v113 + 1) = 0x800000019D077410;
    goto LABEL_37;
  }
  v103 = *(_QWORD *)(v15 + 16);
  if (!v103)
  {
    sub_19CE2AA2C(v15);
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v58 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_19D052350;
    v40 = v58;
    v119 = sub_19CD40918(0, 38, 0, MEMORY[0x1E0DEE9D8]);
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    swift_unknownObjectRetain();
    sub_19CCF4C08((uint64_t)&v109);
    v60 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v60 = sub_19CD40918(0, v60[2] + 1, 1, v60);
    v62 = v60[2];
    v61 = v60[3];
    if (v62 >= v61 >> 1)
      v60 = sub_19CD40918((_QWORD *)(v61 > 1), v62 + 1, 1, v60);
    v60[2] = v62 + 1;
    v63 = &v60[5 * v62];
    v64 = v109;
    v65 = v110;
    *((_BYTE *)v63 + 64) = v111;
    *((_OWORD *)v63 + 2) = v64;
    *((_OWORD *)v63 + 3) = v65;
    v119 = v60;
    v66._countAndFlagsBits = 0xD000000000000023;
    v66._object = (void *)0x800000019D0773E0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v66);
    v118 = &type metadata for PageMetrics.InvocationPoint;
    v116 = v104;
    v117 = v105;
    sub_19CD40794((uint64_t)&v116, (uint64_t)v115);
    v113 = 0u;
    v114 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v115, (uint64_t)&v113);
    LOBYTE(v111) = 0;
    v109 = v113;
    v110 = v114;
    v67 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v67 = sub_19CD40918(0, v67[2] + 1, 1, v67);
    v69 = v67[2];
    v68 = v67[3];
    if (v69 >= v68 >> 1)
      v67 = sub_19CD40918((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
    v67[2] = v69 + 1;
    v70 = &v67[5 * v69];
    v71 = v109;
    v72 = v110;
    *((_BYTE *)v70 + 64) = v111;
    *((_OWORD *)v70 + 2) = v71;
    *((_OWORD *)v70 + 3) = v72;
    v119 = v67;
    sub_19CD3F190((uint64_t)&v116);
    v73._countAndFlagsBits = 44;
    v73._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v73);
    *(_QWORD *)(v39 + 32) = v119;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v114 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v113 = 0xD00000000000001DLL;
    *((_QWORD *)&v113 + 1) = 0x800000019D077460;
LABEL_37:
    v110 = 0u;
    v109 = 0u;
    sub_19CD40658((uint64_t)&v113, (uint64_t)&v109);
    *(_BYTE *)(v56 + 64) = 0;
    v74 = v110;
    *(_OWORD *)(v56 + 32) = v109;
    *(_OWORD *)(v56 + 48) = v74;
    *(_QWORD *)(v39 + 40) = v56;
    *(_QWORD *)&v109 = v40;
    LOBYTE(v113) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v39, (JetEngine::LogMessageLevel)&v113);

    swift_bridgeObjectRelease();
    return;
  }
  v100 = (_QWORD *)v15;
  if (qword_1ECEB31D8 != -1)
LABEL_70:
    swift_once();
  v16 = *(void **)(v11 + 240);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v3[42];
  v18 = v16;
  v119 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  swift_unknownObjectRetain();
  sub_19CCF4C08((uint64_t)&v109);
  v20 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[5 * v22];
  v24 = v109;
  v25 = v110;
  *((_BYTE *)v23 + 64) = v111;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  v119 = v20;
  v26._object = (void *)0x800000019D077440;
  v26._countAndFlagsBits = 0xD00000000000001DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  v118 = &type metadata for PageMetrics.InvocationPoint;
  v116 = v104;
  v117 = v105;
  sub_19CD40794((uint64_t)&v116, (uint64_t)v115);
  v113 = 0u;
  v114 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v115, (uint64_t)&v113);
  LOBYTE(v111) = 0;
  v109 = v113;
  v110 = v114;
  v27 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v27 = sub_19CD40918(0, v27[2] + 1, 1, v27);
  v29 = v27[2];
  v28 = v27[3];
  v3 = (_OWORD *)(v29 + 1);
  if (v29 >= v28 >> 1)
    v27 = sub_19CD40918((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
  v27[2] = v3;
  v30 = &v27[5 * v29];
  v31 = v109;
  v32 = v110;
  *((_BYTE *)v30 + 64) = v111;
  *((_OWORD *)v30 + 2) = v31;
  *((_OWORD *)v30 + 3) = v32;
  v119 = v27;
  sub_19CD3F190((uint64_t)&v116);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  *(_QWORD *)(v17 + 32) = v119;
  *(_QWORD *)&v109 = v18;
  LOBYTE(v113) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v113);

  swift_bridgeObjectRelease();
  sub_19CD198B4();
  swift_beginAccess();
  v34 = v4[29];
  *((_QWORD *)&v110 + 1) = &type metadata for ScalarDictionary;
  *(_QWORD *)&v109 = v12;
  sub_19CD433C0(&v109, &v113);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v115[0] = v34;
  sub_19CD13D40(&v113, 0xD000000000000021, 0x800000019D070730, isUniquelyReferenced_nonNull_native);
  v36 = v115[0];
  swift_bridgeObjectRelease();
  if (v2)
  {
    *((_QWORD *)&v110 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    *(_QWORD *)&v109 = v2;
    sub_19CD433C0(&v109, &v113);
    swift_bridgeObjectRetain();
    v37 = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = v36;
    sub_19CD13D40(&v113, 0xD00000000000001ELL, 0x800000019D06F4C0, v37);
    v99 = v115[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    v99 = v36;
  }
  v11 = (unint64_t)v100;
  v75 = swift_bridgeObjectRetain();
  sub_19CE2AA2C(v75);
  v76 = 0;
  v101 = v4 + 3;
  v4 = (_QWORD *)v11;
  v102 = v11 + 32;
  v77 = v99;
  do
  {
    if (v76 >= v4[2])
    {
      __break(1u);
      goto LABEL_69;
    }
    v78 = v102 + 56 * v76;
    v11 = *(_QWORD *)(v78 + 8);
    v108 = *(_QWORD *)v78;
    v107 = *(unsigned __int8 *)(v78 + 16);
    v12 = *(_QWORD *)(v78 + 24);
    v2 = *(_QWORD *)(v78 + 32);
    v3 = *(_OWORD **)(v78 + 40);
    v79 = *(_QWORD *)(v78 + 48);
    if (!*(_QWORD *)(v79 + 16))
    {
      v106 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_41:
      *(_QWORD *)&v109 = v108;
      v11 = v106;
      *((_QWORD *)&v109 + 1) = v106;
      LOBYTE(v110) = v107;
      *((_QWORD *)&v110 + 1) = v12;
      v111 = v2;
      v112 = v3;
      *(_QWORD *)&v113 = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MetricsPipeline.process(_:using:)((uint64_t)&v109, (uint64_t *)&v113);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_42;
    }
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80 = v105;
    swift_bridgeObjectRetain();
    v81 = v104;
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    v82 = sub_19CFE0910();
    v83 = -1 << *(_BYTE *)(v79 + 32);
    v84 = v82 & ~v83;
    if (((*(_QWORD *)(v79 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFF8)) >> v84) & 1) != 0)
    {
      v106 = v11;
      v98 = *(_QWORD *)(v79 + 48);
      v85 = (_QWORD *)(v98 + 16 * v84);
      v86 = *v85 == v81 && v85[1] == v80;
      v4 = v100;
      v77 = v99;
      if (v86)
        goto LABEL_41;
      v97 = v79 + 56;
      if ((sub_19CFE06A0() & 1) != 0)
        goto LABEL_41;
      v87 = ~v83;
      v11 = (v84 + 1) & v87;
      if (((*(_QWORD *)(v97 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v88 = (_QWORD *)(v98 + 16 * v11);
        if (*v88 == v104 && v88[1] == v105)
          goto LABEL_41;
        v90 = sub_19CFE06A0();
        v91 = v97;
        if ((v90 & 1) != 0)
          goto LABEL_41;
        for (i = v11 + 1; ; i = v93 + 1)
        {
          v93 = i & v87;
          if (((*(_QWORD *)(v91 + (((i & v87) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v87)) & 1) == 0)
            break;
          v94 = (_QWORD *)(v98 + 16 * v93);
          if (*v94 == v104 && v94[1] == v105)
            goto LABEL_41;
          v96 = sub_19CFE06A0();
          v91 = v97;
          if ((v96 & 1) != 0)
            goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v100;
      v77 = v99;
    }
LABEL_42:
    ++v76;
  }
  while (v76 != v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CCE95D0();
}

uint64_t sub_19CF34F7C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t method lookup function for PageMetricsPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PageMetricsPresenter.__allocating_init(appMetrics:pipeline:context:data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_19CF34FE8()
{
  return swift_weakTakeInit();
}

uint64_t sub_19CF34FF8()
{
  return swift_weakCopyInit();
}

uint64_t sub_19CF35008(uint64_t a1)
{
  swift_weakDestroy();
  return a1;
}

ValueMetadata *type metadata accessor for _AppStateChangeObserver()
{
  return &type metadata for _AppStateChangeObserver;
}

Swift::Int static MonotonicTime.- infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return MonotonicTime.init(timeInterval:)((double)v4 / *(double *)&qword_1ECEB2D50 + (double)v3 - a2).seconds;
}

uint64_t static MonotonicTime.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _BOOL4 v2;

  v2 = a1[1] < a2[1] && *a1 == *a2;
  return *a1 < *a2 || v2;
}

Swift::Int static MonotonicTime.+ infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return MonotonicTime.init(timeInterval:)((double)v4 / *(double *)&qword_1ECEB2D50 + (double)v3 + a2).seconds;
}

Swift::Double __swiftcall MonotonicTime.timeIntervalSince(_:)(JetEngine::MonotonicTime a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)a1.seconds;
  v3 = *(_QWORD *)(a1.seconds + 8);
  v5 = *v1;
  v4 = v1[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return (double)v4 / *(double *)&qword_1ECEB2D50 + (double)v5 - ((double)v3 / *(double *)&qword_1ECEB2D50 + (double)v2);
}

BOOL static MonotonicTime.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double MonotonicTime.timeInterval.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return (double)v2 / *(double *)&qword_1ECEB2D50 + (double)v1;
}

double static MonotonicTime.nanosecondsPerSecond.getter()
{
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return *(double *)&qword_1ECEB2D50;
}

double static MonotonicTime.timeIntervalSinceNow(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __darwin_time_t tv_sec;
  uint64_t tv_nsec;
  timespec v6;

  v1 = *a1;
  v2 = a1[1];
  static MonotonicTime.now.getter(&v6);
  tv_sec = v6.tv_sec;
  tv_nsec = v6.tv_nsec;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return (double)tv_nsec / *(double *)&qword_1ECEB2D50
       + (double)tv_sec
       - ((double)v2 / *(double *)&qword_1ECEB2D50
        + (double)v1);
}

double static MonotonicTime.+= infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;

  v4 = *a1;
  v5 = a1[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v5 / *(double *)&qword_1ECEB2D50 + (double)v4 + a2);
  result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  return result;
}

double static MonotonicTime.-= infix(_:_:)(uint64_t *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;

  v4 = *a1;
  v5 = a1[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v5 / *(double *)&qword_1ECEB2D50 + (double)v4 - a2);
  result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  return result;
}

uint64_t MonotonicTime.description.getter()
{
  sub_19CFE010C();
  sub_19CFDF698();
  if (qword_1ECEB2F88 != -1)
    swift_once();
  sub_19CFDFB84();
  sub_19CFDF698();
  return 0;
}

uint64_t sub_19CF35524(_QWORD *a1, _QWORD *a2)
{
  _BOOL4 v2;

  v2 = a1[1] < a2[1] && *a1 == *a2;
  return *a1 < *a2 || v2;
}

BOOL sub_19CF35548(_QWORD *a1, _QWORD *a2)
{
  _BOOL4 v2;

  v2 = a2[1] >= a1[1] || *a2 != *a1;
  return *a2 >= *a1 && v2;
}

BOOL sub_19CF3556C(_QWORD *a1, _QWORD *a2)
{
  _BOOL4 v2;

  v2 = a1[1] >= a2[1] || *a1 != *a2;
  return *a1 >= *a2 && v2;
}

uint64_t sub_19CF35590(_QWORD *a1, _QWORD *a2)
{
  _BOOL4 v2;

  v2 = a2[1] < a1[1] && *a2 == *a1;
  return *a2 < *a1 || v2;
}

unint64_t sub_19CF355BC()
{
  unint64_t result;

  result = qword_1EE4423A8[0];
  if (!qword_1EE4423A8[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MonotonicTime, &type metadata for MonotonicTime);
    atomic_store(result, qword_1EE4423A8);
  }
  return result;
}

uint64_t sub_19CF35600()
{
  return swift_initClassMetadata2();
}

BOOL sub_19CF35648(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_19CF35658()
{
  return sub_19CFE08D4();
}

uint64_t sub_19CF3567C()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CF356C0(char *a1, char *a2)
{
  return sub_19CF35648(*a1, *a2);
}

uint64_t sub_19CF356CC()
{
  return sub_19CF3567C();
}

uint64_t sub_19CF356D4()
{
  return sub_19CF35658();
}

uint64_t sub_19CF356DC()
{
  sub_19CFE08C8();
  sub_19CF35658();
  return sub_19CFE0910();
}

uint64_t type metadata accessor for PackageDataBlobFormatReader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackageDataBlobFormatReader);
}

uint64_t type metadata accessor for PackageDataBlobFormatReader.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackageDataBlobFormatReader.State);
}

void sub_19CF35734()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t _s9JetEngine26PackageDataBlobFormatErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CF35790 + 4 * byte_19D063255[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CF357C4 + 4 * asc_19D063250[v4]))();
}

uint64_t sub_19CF357C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF357CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CF357D4);
  return result;
}

uint64_t sub_19CF357E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CF357E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CF357EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CF357F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PackageDataBlobFormatError()
{
  return &type metadata for PackageDataBlobFormatError;
}

unint64_t sub_19CF35814()
{
  unint64_t result;

  result = qword_1EE442430[0];
  if (!qword_1EE442430[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D0633CC, &type metadata for PackageDataBlobFormatError);
    atomic_store(result, qword_1EE442430);
  }
  return result;
}

uint64_t dispatch thunk of JetPackKeyProvider.keyForIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t OpaqueIntent.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[40];

  swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_OWORD *)(a4 + 40) = xmmword_19D04BBA0;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v21);
  sub_19CCF8C5C((uint64_t)v21, (uint64_t)v18, &qword_1ECEB1328);
  v8 = v19;
  if (v19)
  {
    v9 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    v12 = v11;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    sub_19CD3E3F8((uint64_t)v21);
    if (v12)
    {
      result = sub_19CCECFE4(a4 + 16, &qword_1EE43C2D8);
      v15 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(a4 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(a4 + 32) = v15;
      *(_QWORD *)(a4 + 48) = *(_QWORD *)(a1 + 32);
      *(_QWORD *)a4 = v10;
      *(_QWORD *)(a4 + 8) = v12;
      return result;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v18, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v21);
  }
  v16 = type metadata accessor for OpaqueIntent(0, a2, a3, v13) | 0x2000000000000000;
  sub_19CDC5494();
  swift_allocError();
  *(_OWORD *)v17 = xmmword_19D060C40;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = 0;
  swift_willThrow();
  sub_19CD3E3F8(a1);
  return sub_19CCECFE4(a4 + 16, &qword_1EE43C2D8);
}

uint64_t type metadata accessor for OpaqueIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OpaqueIntent);
}

uint64_t OpaqueIntent.kind.getter()
{
  uint64_t v0;

  v0 = sub_19CD3F3F8();
  swift_bridgeObjectRetain();
  return v0;
}

JSValue_optional __swiftcall OpaqueIntent.makeOptionalValue(in:)(JSContext in)
{
  uint64_t v1;
  Swift::Bool v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  JSValue_optional result;

  sub_19CCF8C5C(v1 + 16, (uint64_t)&v11, &qword_1EE43C2D8);
  if (v12 == 1)
  {
    sub_19CCECFE4((uint64_t)&v11, &qword_1EE43C2D8);
    v6 = 0;
  }
  else
  {
    sub_19CCF8C5C((uint64_t)&v11, (uint64_t)&v8, &qword_1ECEB1328);
    v4 = v9;
    if (v9)
    {
      v5 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, v9);
      v6 = (*(uint64_t (**)(Class, uint64_t, uint64_t))(v5 + 144))(in.super.isa, v4, v5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v8, &qword_1ECEB1328);
      v6 = 0;
    }
    sub_19CD3E3F8((uint64_t)&v11);
  }
  v7 = (objc_class *)v6;
  result.value.super.isa = v7;
  result.is_nil = v3;
  return result;
}

JSValue __swiftcall OpaqueIntent.makeValue(in:)(JSContext in)
{
  uint64_t *v1;
  JSValue v3;
  Class isa;
  void *v5;
  JSValue result;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v3.super.isa = (Class)OpaqueIntent.makeOptionalValue(in:)(in);
  if (v3.super.isa)
    return v3;
  v5 = (void *)objc_opt_self();
  result.super.isa = (Class)objc_msgSend(v5, sel_valueWithNewObjectInContext_, in.super.isa);
  if (result.super.isa)
  {
    isa = result.super.isa;
    v11 = *v1;
    v12 = v1[1];
    swift_bridgeObjectRetain();
    v7 = in.super.isa;
    v8 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19CFE0808(), v7, v11, v12);
    swift_unknownObjectRelease();

    if (v8)
    {
      v9 = v8;
      v10 = (void *)sub_19CFDF554();
      -[objc_class setValue:forProperty:](isa, sel_setValue_forProperty_, v9, v10);

      return (JSValue)isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CF35E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return OpaqueIntent.init(deserializing:using:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_19CF35E44(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) >= 2uLL)
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  return result;
}

uint64_t sub_19CF35E84(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6 > 1)
  {
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, _QWORD *, unint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    v7 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t sub_19CF35F10(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (v6 == 1)
  {
    if (v7 >= 2)
      goto LABEL_10;
    goto LABEL_12;
  }
  if (v7 == 1)
  {
    sub_19CD3E3F8(a1 + 16);
    v8 = *(_QWORD *)(a2 + 48);
    v9 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 48) = v8;
  }
  else
  {
    if (!v6)
    {
      if (v7)
      {
LABEL_10:
        *(_QWORD *)(a1 + 40) = v7;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
        return a1;
      }
LABEL_12:
      v10 = *v5;
      v11 = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *v4 = v10;
      *(_OWORD *)(a1 + 32) = v11;
      return a1;
    }
    if (!v7)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
      goto LABEL_12;
    }
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  }
  return a1;
}

uint64_t sub_19CF36000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 40);
  if (v5 != 1)
  {
    if (*(_QWORD *)(a2 + 40) == 1)
    {
      sub_19CD3E3F8(a1 + 16);
    }
    else if (v5)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
    }
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t CompoundLogger.addLogger(_:)(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_19CCD5B84(a1, (uint64_t)v6);
  v2 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19CED6BA0(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_19CED6BA0((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  result = sub_19CCD14C4(v6, (uint64_t)&v2[5 * v4 + 4]);
  *v1 = v2;
  return result;
}

uint64_t CompoundLogger.addingLogger(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  __int128 v8[2];

  v4 = *v2;
  *a2 = v4;
  sub_19CCD5B84(a1, (uint64_t)v8);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_19CED6BA0(0, v4[2] + 1, 1, v4);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_19CED6BA0((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v4[2] = v6 + 1;
  result = sub_19CCD14C4(v8, (uint64_t)&v4[5 * v6 + 4]);
  *a2 = v4;
  return result;
}

Swift::Void __swiftcall CompoundLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v3)
  {
    v5 = *(_BYTE *)withLevel;
    v6 = *(_QWORD *)v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_19CCD5B84(v6, (uint64_t)v10);
      v7 = v11;
      v8 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      v9 = v5;
      (*(void (**)(void *, char *, uint64_t, uint64_t))(v8 + 8))(contentsOf._rawValue, &v9, v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CF36298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 153) = a4;
  *(_QWORD *)(v5 + 176) = a3;
  *(_QWORD *)(v5 + 184) = v4;
  *(_QWORD *)(v5 + 160) = a1;
  *(_QWORD *)(v5 + 168) = a2;
  type metadata accessor for DiskJetPackResourceBundle();
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CF36340()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_19CF36650(*(_QWORD **)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 153), *(_QWORD *)(v0 + 184));
  return swift_task_switch();
}

uint64_t sub_19CF36388()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[24];
  v0[2] = v0;
  v0[3] = sub_19CF36400;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCF626C();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43B520);
  return swift_continuation_await();
}

uint64_t sub_19CF36400()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 208) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CD61DA8(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 160));
  return swift_task_switch();
}

uint64_t sub_19CF36478()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF364B4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF364F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_19CFDFDAC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDFD88();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = sub_19CFDF308();
  MEMORY[0x1E0C80A78](v7, v8);
  sub_19CD48F8C();
  sub_19CFDF2FC();
  sub_19CFDFD7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_19CFDFDDC();
  qword_1EE43B020 = result;
  return result;
}

__n128 DiskJetPackLoader.init(signingPolicy:keyProviders:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;

  a3[2].n128_u64[1] = (unint64_t)&type metadata for JetPackCompoundKeyProvider;
  a3[3].n128_u64[0] = (unint64_t)&off_1E3DC7C70;
  a3[1].n128_u64[0] = a2;
  result = *a1;
  *a3 = *a1;
  return result;
}

uint64_t sub_19CF36650(_QWORD *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  type metadata accessor for BaseObjectGraph();
  v8 = static BaseObjectGraph.current.getter();
  if (qword_1ECEB1330 != -1)
    swift_once();
  v11 = v8;
  swift_retain();
  swift_task_localValuePush();
  sub_19CCF5334(a1, (uint64_t)v12, a2, a3 & 1, a4, &v11);
  swift_task_localValuePop();
  swift_release();
  v9 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v9;
}

uint64_t assignWithCopy for DiskJetPackLoader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_19CCD6870(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_19CD4C0D4(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    v9 = *(_OWORD *)(a2 + 16);
    v10 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    return a1;
  }
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for DiskJetPackLoader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19CD4C0D4(v4, v5);
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiskJetPackLoader(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiskJetPackLoader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

uint64_t sub_19CF3691C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = sub_19CFDEDE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(v4 + 16);
  v7 = v4 + 8;
  sub_19CD4C0D4(v5, v6);
  if (*(_QWORD *)(v7 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v7 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF369B4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CF369D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_19CF36A1C()
{
  _QWORD *v0;

  sub_19CD4C0D4(v0[2], v0[3]);
  if (v0[7])
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  return swift_deallocObject();
}

void sub_19CF36A54()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t PipelineEntryTask.run()()
{
  sub_19CD0C784();
  return swift_retain();
}

_QWORD *MapPipelineTask.init(previous:body:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = *a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t MapPipelineTask.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t JoinPipelineTask.init(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = *a1;
  *(_QWORD *)(v2 + 24) = v3;
  return v2;
}

uint64_t JoinPipelineTask.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t dispatch thunk of PipelineTask.run()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for MapPipelineTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapPipelineTask.__allocating_init(previous:body:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for JoinPipelineTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JoinPipelineTask.__allocating_init(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_19CF36B54()
{
  sub_19CFE08C8();
  sub_19CFE08EC();
  return sub_19CFE0910();
}

uint64_t sub_19CF36B98()
{
  sub_19CFE08C8();
  sub_19CFE08EC();
  return sub_19CFE0910();
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SQLiteError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SQLiteError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

uint64_t Models.HTTPAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[5];
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v7 = type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v24);
  v22[0] = v11;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v24, v22, (uint64_t *)v23);
  if (v3)
  {
    sub_19CD3E3F8(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *((_QWORD *)&v23[0] + 1);
    v20 = *(_QWORD *)&v23[0];
    v13 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    v26 = v13;
    swift_bridgeObjectRetain();
    v14 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v11);
    swift_bridgeObjectRelease();
    if (v14)
    {
      sub_19CDC6F28(v14);
      v13 = v26;
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
    *(_QWORD *)&v24 = v13;
    sub_19CD433C0(&v24, v23);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22[0] = v11;
    sub_19CD13D40(v23, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
    v16 = v22[0];
    swift_bridgeObjectRelease();
    JSONObject.subscript.getter(0x74736575716572, 0xE700000000000000, (uint64_t)&v24);
    *(_QWORD *)&v23[0] = v16;
    NetRequest.init(deserializing:using:)((uint64_t)&v24, (uint64_t *)v23, v10);
    JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463, (uint64_t)v23);
    v22[0] = v11;
    static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v23, v22, (uint64_t)&v24);
    sub_19CD3E3F8((uint64_t)v23);
    JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463, (uint64_t)v22);
    v21 = v11;
    static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v22, &v21, (uint64_t)v23);
    sub_19CD3E3F8(a1);
    sub_19CD3E3F8((uint64_t)v22);
    swift_bridgeObjectRelease();
    v18 = (int *)type metadata accessor for Models.HTTPAction();
    sub_19CD034A0((uint64_t)v10, (uint64_t)a3 + v18[5]);
    *a3 = v20;
    a3[1] = v12;
    sub_19CF37BC8((uint64_t)&v24, (uint64_t)a3 + v18[6]);
    return sub_19CF37BC8((uint64_t)v23, (uint64_t)a3 + v18[7]);
  }
}

uint64_t Models.HTTPAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.HTTPAction.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 20);
  return sub_19CD03280(v3, a1);
}

uint64_t Models.HTTPAction.successAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 24);
  return sub_19CF37C10(v3, a1);
}

uint64_t Models.HTTPAction.failureAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Models.HTTPAction() + 28);
  return sub_19CF37C10(v3, a1);
}

uint64_t sub_19CF36FDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return Models.HTTPAction.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19CF36FF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CF3702C + 4 * byte_19D0637C0[*v0]))(0x654D6E6F69746361, 0xED00007363697274);
}

uint64_t sub_19CF3702C()
{
  return 0x74736575716572;
}

uint64_t sub_19CF37044()
{
  return 0x4173736563637573;
}

uint64_t sub_19CF3707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CF38988(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CF370A0()
{
  sub_19CF37C58();
  return sub_19CFE0A48();
}

uint64_t sub_19CF370C8()
{
  sub_19CF37C58();
  return sub_19CFE0A54();
}

uint64_t Models.HTTPAction.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _UNKNOWN **v22;
  ValueMetadata *v23;
  _UNKNOWN **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  _UNKNOWN **v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _OWORD v57[2];
  __int128 v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[5];
  _BYTE v64[16];
  _QWORD v65[2];
  uint64_t v66;

  v54 = a2;
  v4 = type metadata accessor for NetRequest();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4424C0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_19CF37C58();
  sub_19CFE09E8();
  if (v2)
  {
    v14 = v55;
  }
  else
  {
    v52 = v7;
    v53 = v9;
    v64[0] = 0;
    sub_19CE8C13C();
    sub_19CFE0484();
    v50 = v8;
    if (v65[0])
      v16 = v65[0];
    else
      v16 = MEMORY[0x1E0DEE9D8];
    if (v65[0])
      v17 = v65[1];
    else
      v17 = MEMORY[0x1E0DEE9E0];
    v51 = v12;
    v18 = v55;
    __swift_project_boxed_opaque_existential_1(v55, v55[3]);
    v19 = sub_19CFE09DC();
    v49 = 0xD000000000000023;
    v48 = 0x800000019D06ECA0;
    v20 = sub_19CF05CE4(0xD000000000000023, 0x800000019D06ECA0, v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    if (v20)
      v23 = (ValueMetadata *)v20;
    else
      v23 = &type metadata for EmptyActionKindTable;
    if (v20)
      v24 = v22;
    else
      v24 = &off_1E3DD1128;
    v64[0] = 2;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v23, (uint64_t)v24, (uint64_t)v65);
    v25 = v17;
    v47 = v16;
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    v26 = sub_19CFE09DC();
    v27 = sub_19CF05CE4(v49, v48, v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    if (v27)
      v30 = (ValueMetadata *)v27;
    else
      v30 = &type metadata for EmptyActionKindTable;
    if (v27)
      v31 = v29;
    else
      v31 = &off_1E3DD1128;
    LOBYTE(v63[0]) = 3;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v30, (uint64_t)v31, (uint64_t)v64);
    v14 = v18;
    LOBYTE(v58) = 1;
    v32 = v50;
    sub_19CFE043C();
    v48 = v62;
    v49 = v61;
    v46 = __swift_project_boxed_opaque_existential_1(v60, v61);
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    sub_19CFE09DC();
    v33 = swift_bridgeObjectRetain();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v33);
    v34 = v58;
    v35 = _s9JetEngine26AppleServicesPropertyScopeV13allPropertiesSayAA010NetRequestE0_pXpGvgZ_0();
    v66 = v35;
    swift_bridgeObjectRetain();
    v36 = sub_19CF8E8EC(0xD00000000000001FLL, 0x800000019D06E010, v34);
    swift_bridgeObjectRelease();
    v45 = v25;
    if (v36)
    {
      sub_19CDC6F28(v36);
      v35 = v66;
    }
    v37 = (uint64_t)v52;
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA8);
    *(_QWORD *)&v58 = v35;
    sub_19CD433C0(&v58, v57);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = v34;
    sub_19CD13D40(v57, 0xD00000000000001FLL, 0x800000019D06E010, isUniquelyReferenced_nonNull_native);
    v39 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v39;
    v40 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)&v58);
    Decoder.withUserInfo(_:)(v40, v49, v48, v63);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
    sub_19CCD5B84((uint64_t)v63, (uint64_t)v60);
    NetRequest.init(from:)(v60, v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v32);
    v41 = (int *)type metadata accessor for Models.HTTPAction();
    v42 = v54;
    sub_19CD034A0(v37, (uint64_t)v54 + v41[5]);
    sub_19CF37BC8((uint64_t)v65, (uint64_t)v42 + v41[6]);
    sub_19CF37BC8((uint64_t)v64, (uint64_t)v42 + v41[7]);
    v43 = v45;
    *v42 = v47;
    v42[1] = v43;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

