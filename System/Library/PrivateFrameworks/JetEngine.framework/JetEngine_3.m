uint64_t method lookup function for BasicImpressionsTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicImpressionsTracker.__allocating_init(threshold:queueName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_19CE29250()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE29274()
{
  uint64_t v0;

  return sub_19CE28EF8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_19CE29280()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE29294()
{
  uint64_t v0;

  return sub_19CE27C04(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_19CE2929C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE292D8()
{
  uint64_t v0;

  return sub_19CE284A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_19CE292E8()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE292FC()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81528);
}

uint64_t sub_19CE2931C()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_19CE29330()
{
  uint64_t v0;

  return sub_19CE28B90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_19CE29338()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE2934C()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81A8C);
}

uint64_t sub_19CE2936C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE293B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390) - 8)
                          + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = (id *)(v0 + v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v4 = sub_19CFDEF84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);

    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_19CE2947C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE294C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390) - 8)
                          + 80);
  return sub_19CE2882C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_19CE294F8()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE2950C()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81A14);
}

uint64_t sub_19CE2952C()
{
  return objectdestroy_44Tm();
}

uint64_t sub_19CE29534()
{
  uint64_t v0;

  return sub_19CE2811C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_19CE29544()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE29558()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81514);
}

uint64_t sub_19CE29578()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE29588()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE2959C()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81970);
}

uint64_t sub_19CE295BC()
{
  return objectdestroy_44Tm();
}

uint64_t objectdestroy_44Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE295FC()
{
  uint64_t *v0;

  return sub_19CE27DA4(v0[2], v0[3], v0[4]);
}

uint64_t sub_19CE29608()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE2961C()
{
  uint64_t v0;

  return sub_19CE27A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(uint64_t))sub_19CF81500);
}

void sub_19CE2967C()
{
  sub_19CFE0340();
  __break(1u);
}

uint64_t sub_19CE296C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
}

unint64_t ActionDispatcher.PerformError.errorDescription.getter()
{
  return 0xD00000000000004ELL;
}

uint64_t static ActionDispatcher.PerformError.== infix(_:_:)()
{
  return 1;
}

uint64_t ActionDispatcher.PerformError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ActionDispatcher.PerformError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE29768()
{
  return 0xD00000000000004ELL;
}

uint64_t ActionDispatcher.next.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD **)(v1 + 8);
  v3 = v2[2];
  v4 = v2[3];
  v5 = (void *)v2[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  return sub_19CD24A40(v3, v4, v5);
}

double sub_19CE2979C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v4;
  uint64_t v5;

  ActionDispatcher.next.getter((uint64_t *)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_19CE297EC(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  __int128 v4;
  void *v5;

  v1 = a1[1];
  v2 = (void *)a1[2];
  *(_QWORD *)&v4 = *a1;
  *((_QWORD *)&v4 + 1) = v1;
  v5 = v2;
  sub_19CD24A40(v4, v1, v2);
  return ActionDispatcher.next.setter(&v4);
}

uint64_t ActionDispatcher.next.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  result = swift_release();
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

void (*ActionDispatcher.next.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  a1[3] = v1;
  v3 = *(_QWORD **)(v1 + 8);
  v4 = v3[2];
  v5 = v3[3];
  v6 = (void *)v3[4];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  sub_19CD24A40(v4, v5, v6);
  return sub_19CE298D8;
}

void sub_19CE298D8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v3 = *a1;
  v2 = a1[1];
  v4 = (void *)a1[2];
  v5 = a1[3];
  if ((a2 & 1) != 0)
  {
    sub_19CD24A40(*a1, v2, v4);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v3;
    v6[3] = v2;
    v6[4] = v4;
    swift_release();
    *(_QWORD *)(v5 + 8) = v6;
    sub_19CE2A4A0(v3, v2, v4);
  }
  else
  {
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v3;
    v7[3] = v2;
    v7[4] = v4;
    swift_release();
    *(_QWORD *)(v5 + 8) = v7;
  }
}

uint64_t ActionDispatcher.withNext(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t result;

  v4 = (void *)v2[2];
  *a2 = *v2;
  a2[2] = v4;
  v5 = *a1;
  v6 = a1[1];
  v7 = (void *)a1[2];
  v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CD24A40(v5, v6, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v5;
  v9[3] = v6;
  v9[4] = v7;
  result = swift_release();
  a2[1] = v9;
  return result;
}

void ActionDispatcher.targetQueue.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*ActionDispatcher.targetQueue.modify())()
{
  return nullsub_1;
}

uint64_t ActionDispatcher.withTargetQueue(_:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = *v2;
  v4 = v2[1];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = a1;
  v5 = a1;
  swift_bridgeObjectRetain();
  return swift_retain();
}

BOOL ActionDispatcher._hasImplementation(forType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v5 = *v4;
  v10 = a1;
  v6 = type metadata accessor for ActionImplementationBox(0, *(_QWORD *)(a3 + 16), a3, a4);
  v7 = sub_19CD249F0();
  MEMORY[0x1A1AD96C4](&v11, &v10, v5, &type metadata for OpaqueMetatype, v6, v7);
  v8 = v11;
  if (v11)
    swift_release();
  return v8 != 0;
}

uint64_t ActionDispatcher.adding<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v11;
  void *v12;
  id v13;

  v11 = v5[1];
  v12 = (void *)v5[2];
  *a5 = *v5;
  a5[1] = v11;
  a5[2] = v12;
  v13 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.add<A>(_:)(a1, a2, a3, a4);
}

uint64_t ActionDispatcher.removeImplementation(forType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ActionImplementationBox(255, *(_QWORD *)(a3 + 16), a3, a4);
  sub_19CD249F0();
  sub_19CFDF464();
  sub_19CFDF3E0();
  return swift_release();
}

uint64_t ActionDispatcher.removingImplementation(forType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v7 = v3[1];
  v8 = (void *)v3[2];
  *a3 = *v3;
  a3[1] = v7;
  a3[2] = v8;
  v9 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.removeImplementation(forType:)(a1, v10, a2, v11);
}

Swift::Void __swiftcall ActionDispatcher.removeAllImplementations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for ActionImplementationBox(255, *(_QWORD *)(v0 + 16), v1, v2);
  sub_19CD249F0();
  sub_19CFDF464();
  sub_19CFDF458();
}

void ActionDispatcher.removingAllImplementations()(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = v1[1];
  v4 = (void *)v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  ActionDispatcher.removeAllImplementations()();
}

uint64_t ActionDispatcher.add(contentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;

  v3 = *(_QWORD *)a1 + 64;
  v4 = 1 << *(_BYTE *)(*(_QWORD *)a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*(_QWORD *)a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v12 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v11;
    if (!v13)
    {
      v11 = v12 + 1;
      if (v12 + 1 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v11);
      if (!v13)
        break;
    }
LABEL_18:
    v6 = (v13 - 1) & v13;
LABEL_5:
    type metadata accessor for ActionImplementationBox(255, *(_QWORD *)(a2 + 16), v9, v10);
    sub_19CD249F0();
    sub_19CFDF464();
    swift_retain();
    result = sub_19CFDF4AC();
  }
  v14 = v12 + 2;
  if (v14 >= v7)
    return swift_release();
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v11 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v11 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v11 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v11);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t ActionDispatcher.adding(contentsOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  void *v8;
  id v9;

  v7 = v3[1];
  v8 = (void *)v3[2];
  *a3 = *v3;
  a3[1] = v7;
  a3[2] = v8;
  v9 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return ActionDispatcher.add(contentsOf:)(a1, a2);
}

uint64_t sub_19CE29EFC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  if (*a1 == 1)
  {
    v13[1] = a2;
    v13[2] = a3;
    v13[3] = a4;
    v13[0] = 0;
    v9 = type metadata accessor for ActionDispatcher(0, a7, a3, a4);
    return ActionDispatcher.perform(_:withMetrics:asPartOf:)(a5, v13, a6, v9);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A640);
    v10 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v11 = swift_allocObject();
    *(_DWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v10 + 16) = v11;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 1;
  }
  return v10;
}

uint64_t ActionDispatcher.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v6 = *(_QWORD **)(v4 + 8);
  type metadata accessor for ActionImplementationBox(0, *(_QWORD *)(a1 + 16), a3, a4);
  sub_19CD249F0();
  v7 = sub_19CFDF428();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DE9ED0], v7);
  sub_19CFDF794();
  v8 = sub_19CFE0130();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC330], v8);
  sub_19CFE0400();
  swift_bridgeObjectRelease();
  v9 = sub_19CFE02C8();
  MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC858], v9);
  sub_19CD41144();
  sub_19CFDF7DC();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = v6[2];
  v11 = v6[3];
  v12 = (void *)v6[4];
  sub_19CD24A40(v10, v11, v12);
  if (v10)
  {
    ActionDispatcher.debugDescription.getter(a1);
    sub_19CE2A4A0(v10, v11, v12);
  }
  sub_19CFE010C();
  v13 = sub_19CFE0A90();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v13;
}

uint64_t sub_19CE2A248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_19CFE0A90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ActionDispatcher.perform(_:withMetrics:asPartOf:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 176) = a4;
  *(_QWORD *)(v6 + 184) = a5;
  *(_QWORD *)(v6 + 160) = a1;
  *(_QWORD *)(v6 + 168) = a2;
  *(_QWORD *)(v6 + 192) = *a3;
  *(_OWORD *)(v6 + 200) = *(_OWORD *)v5;
  *(_QWORD *)(v6 + 216) = *(_QWORD *)(v5 + 16);
  return swift_task_switch();
}

uint64_t sub_19CE2A2AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __darwin_time_t v5;

  v1 = v0[23];
  v2 = (_QWORD *)v0[21];
  v3 = v0[22];
  v5 = v0[24];
  v0[28] = ActionDispatcher.perform(_:withMetrics:asPartOf:)(v2, &v5, v3, v1);
  return swift_task_switch();
}

uint64_t sub_19CE2A30C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_19CE2A388;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF598();
  sub_19CCECFE4(v1, &qword_1EE439CD0);
  return swift_continuation_await();
}

uint64_t sub_19CE2A388()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 232) = v2;
  if (v2)
    swift_willThrow();
  else
    **(_BYTE **)(v1 + 160) = *(_BYTE *)(v1 + 153);
  return swift_task_switch();
}

uint64_t sub_19CE2A400()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2A434()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2A468()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_release();

  }
  return swift_deallocObject();
}

void sub_19CE2A4A0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_release();

  }
}

uint64_t sub_19CE2A4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CE2AA10;
  v9[1] = v7;
  v9[2] = sub_19CE2AA24;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBF598();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE439CD0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CE2A624()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE2A668(_BYTE *a1)
{
  uint64_t *v1;

  return sub_19CE29EFC(a1, v1[3], v1[4], v1[5], (uint64_t)(v1 + 6), v1[11], v1[2]);
}

void sub_19CE2A67C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CE2A68C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CE2A6A4()
{
  return 8;
}

_QWORD *sub_19CE2A6B0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_19CE2A6BC(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

uint64_t sub_19CE2A72C(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

_QWORD *assignWithCopy for MetricsEmitter.Configuration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MetricsEmitter.Configuration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEmitter.Configuration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricsEmitter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_19CE2A884(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_19CE2A89C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE2A8DC + 4 * byte_19D057AB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE2A8FC + 4 * byte_19D057AB5[v4]))();
}

_BYTE *sub_19CE2A8DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE2A8FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE2A904(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE2A90C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE2A914(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE2A91C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for ActionDispatcher.PerformError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionDispatcher.PerformError);
}

_QWORD *__swift_initWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

_QWORD *__swift_assignWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_assignWithTake_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ActionDispatcher.Next(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionDispatcher.Next);
}

uint64_t sub_19CE2A9DC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CE2AA10(char *a1)
{
  uint64_t v1;

  return sub_19CF77EF0(*a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CE2AA24(void *a1)
{
  sub_19CF786FC(a1);
}

uint64_t sub_19CE2AA2C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CE2AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t result;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a4) = *a4;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  sub_19CD50F74(a3, a6 + 16);
  *(_BYTE *)(a6 + 193) = (_BYTE)a4;
  *(_BYTE *)(a6 + 224) = a5;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 200) = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  sub_19CD50F74(a3, (uint64_t)&v38);
  v17 = swift_allocObject();
  v18 = v47;
  *(_OWORD *)(v17 + 144) = v46;
  *(_OWORD *)(v17 + 160) = v18;
  *(_OWORD *)(v17 + 176) = v48;
  *(_BYTE *)(v17 + 192) = v49;
  v19 = v43;
  *(_OWORD *)(v17 + 80) = v42;
  *(_OWORD *)(v17 + 96) = v19;
  v20 = v45;
  *(_OWORD *)(v17 + 112) = v44;
  *(_OWORD *)(v17 + 128) = v20;
  v21 = v39;
  *(_OWORD *)(v17 + 16) = v38;
  *(_OWORD *)(v17 + 32) = v21;
  v22 = v41;
  *(_OWORD *)(v17 + 48) = v40;
  *(_OWORD *)(v17 + 64) = v22;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB03B0);
  v23 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v23 + 16) = v24;
  *(_QWORD *)(v23 + 24) = v16;
  v25 = sub_19CFDFA10();
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)(v23 + 57) = 0u;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v15, 1, 1, v25);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = &unk_1EE43F6F8;
  v27[5] = v17;
  v27[6] = v23;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v15, (uint64_t)&unk_1EE43F708, (uint64_t)v27);
  swift_release();
  *(_QWORD *)(a6 + 208) = v23;
  sub_19CD50F74(a3, (uint64_t)&v38);
  v28 = swift_allocObject();
  v29 = v47;
  *(_OWORD *)(v28 + 144) = v46;
  *(_OWORD *)(v28 + 160) = v29;
  *(_OWORD *)(v28 + 176) = v48;
  *(_BYTE *)(v28 + 192) = v49;
  v30 = v43;
  *(_OWORD *)(v28 + 80) = v42;
  *(_OWORD *)(v28 + 96) = v30;
  v31 = v45;
  *(_OWORD *)(v28 + 112) = v44;
  *(_OWORD *)(v28 + 128) = v31;
  v32 = v39;
  *(_OWORD *)(v28 + 16) = v38;
  *(_OWORD *)(v28 + 32) = v32;
  v33 = v41;
  *(_OWORD *)(v28 + 48) = v40;
  *(_OWORD *)(v28 + 64) = v33;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43BBC0);
  v34 = swift_allocObject();
  v35 = swift_allocObject();
  *(_DWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v34 + 16) = v35;
  *(_QWORD *)(v34 + 24) = v16;
  *(_BYTE *)(v34 + 32) = 0;
  v26(v15, 1, 1, v25);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = &unk_1EE43F718;
  v36[5] = v28;
  v36[6] = v34;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v15, (uint64_t)&unk_1EE43F728, (uint64_t)v36);
  swift_release();
  result = sub_19CD510B0(a3);
  *(_QWORD *)(a6 + 216) = v34;
  return result;
}

uint64_t sub_19CE2AD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE2AD80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE *v7;
  os_unfair_lock_s *v8;
  int v9;
  int has_internal_content;
  void *v11;
  double v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t (*v18)(_QWORD *);
  uint64_t (*v19)(_QWORD *);
  _BYTE v20[9];

  v1 = *(void **)(*(_QWORD *)(v0 + 48) + 168);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = qword_1ECEB0410;
    swift_unknownObjectRetain();
    if (v2 != -1)
      swift_once();
    v3 = objc_msgSend(v1, sel_doubleForKey_, qword_1ECEB51F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
    v4 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 64) = v4;
    v4[2] = v3;
    v4[3] = sub_19CD04754;
    v4[4] = 0;
    swift_unknownObjectRelease();
    v18 = (uint64_t (*)(_QWORD *))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v5;
    *v5 = v0;
    v5[1] = sub_19CE2B07C;
    return v18(v4);
  }
  else
  {
    if (qword_1ECEB1958 != -1)
      swift_once();
    v7 = (char *)off_1ECEB1948 + 16;
    v8 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_19CD3EA18(v7, v20);
    os_unfair_lock_unlock(v8);
    v9 = v20[0];
    swift_release();
    if (v9 == 2)
      has_internal_content = os_variant_has_internal_content();
    else
      has_internal_content = v9 & 1;
    v11 = *(void **)(v0 + 56);
    v12 = 0.01;
    if (has_internal_content)
      v12 = 1.0;
    if (v11)
    {
      *(double *)(v0 + 80) = v12;
      v13 = qword_1ECEB0418;
      swift_unknownObjectRetain();
      if (v13 != -1)
        swift_once();
      v14 = objc_msgSend(v11, sel_doubleForKey_, qword_1ECEB51F8);
      v15 = swift_allocObject();
      *(_BYTE *)(v15 + 16) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
      v16 = (_QWORD *)swift_allocObject();
      *(_QWORD *)(v0 + 88) = v16;
      v16[2] = v14;
      v16[3] = sub_19CD04780;
      v16[4] = v15;
      swift_unknownObjectRelease();
      v19 = (uint64_t (*)(_QWORD *))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 96) = v17;
      *v17 = v0;
      v17[1] = sub_19CE2B318;
      return v19(v16);
    }
    else
    {
      sub_19CCF5918(0x6E65725F65676170, 0xEB00000000726564, *(_QWORD *)(v0 + 40), v12, 60.0);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_19CE2B07C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_BYTE *)(v3 + 112) = a2;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CE2B0E0()
{
  uint64_t v0;
  double v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _BYTE *v9;
  os_unfair_lock_s *v10;
  int v11;
  int has_internal_content;
  uint64_t (*v13)(uint64_t);
  _BYTE v14[9];

  if ((*(_BYTE *)(v0 + 112) & 1) != 0)
  {
    if (qword_1ECEB1958 != -1)
      swift_once();
    v9 = (char *)off_1ECEB1948 + 16;
    v10 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
    swift_retain();
    os_unfair_lock_lock(v10);
    sub_19CD3EA18(v9, v14);
    os_unfair_lock_unlock(v10);
    v11 = v14[0];
    swift_release();
    if (v11 == 2)
      has_internal_content = os_variant_has_internal_content();
    else
      has_internal_content = v11 & 1;
    v2 = *(void **)(v0 + 56);
    v1 = 0.01;
    if (has_internal_content)
      v1 = 1.0;
    if (!v2)
    {
      sub_19CCF5918(0x6E65725F65676170, 0xEB00000000726564, *(_QWORD *)(v0 + 40), v1, 60.0);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v1 = *(double *)(v0 + 24);
    v2 = *(void **)(v0 + 56);
  }
  *(double *)(v0 + 80) = v1;
  v3 = qword_1ECEB0418;
  swift_unknownObjectRetain();
  if (v3 != -1)
    swift_once();
  v4 = objc_msgSend(v2, sel_doubleForKey_, qword_1ECEB51F8);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0960);
  v6 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 88) = v6;
  v6[2] = v4;
  v6[3] = sub_19CD04780;
  v6[4] = v5;
  swift_unknownObjectRelease();
  v13 = (uint64_t (*)(uint64_t))((char *)&dword_1EE4407B8 + dword_1EE4407B8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_19CE2B318;
  return v13((uint64_t)v6);
}

uint64_t sub_19CE2B318(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_BYTE *)(v3 + 113) = a2;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CE2B380()
{
  uint64_t v0;
  double v1;

  v1 = 60.0;
  if ((*(_BYTE *)(v0 + 113) & 1) == 0)
    v1 = *(double *)(v0 + 104);
  sub_19CCF5918(0x6E65725F65676170, 0xEB00000000726564, *(_QWORD *)(v0 + 40), *(double *)(v0 + 80), v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2B3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE2B404()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 168);
  if (v1)
  {
    v2 = qword_1EE43BC50;
    swift_unknownObjectRetain();
    if (v2 != -1)
      swift_once();
    v3 = objc_msgSend(v1, sel_BOOLForKey_, qword_1EE465C68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1160);
    v4 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 32) = v4;
    v4[2] = v3;
    v4[3] = sub_19CD04288;
    v4[4] = 0;
    swift_unknownObjectRelease();
    v7 = (uint64_t (*)(uint64_t))((char *)&dword_1EE4407B0 + dword_1EE4407B0);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v5;
    *v5 = v0;
    v5[1] = sub_19CE2B520;
    return v7((uint64_t)v4);
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CE2B520(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CE2B584()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 48) & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2B5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v58[3];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  ValueMetadata *v73;
  uint64_t (*v74)();
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;

  v68 = a2;
  v70 = a1;
  v64 = sub_19CFDF2D8();
  v67 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64, v3);
  v63 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDF308();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v59 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageRenderEvent();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  v69 = (uint64_t)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDF2E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB03C0);
  v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v17 + 24) = v19;
  v58[2] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = 0u;
  *(_OWORD *)(v17 + 64) = 0u;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_OWORD *)(v17 + 105) = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DEF548], v12);
  v58[0] = sub_19CFDFDE8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_19CD330D8(v2, (uint64_t)&v76);
  v20 = v69;
  sub_19CCFECEC(v70, v69, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = (v21 + 241) & ~v21;
  v60 = v21;
  v61 = v21 | 7;
  v62 = v10 + 7;
  v23 = swift_allocObject();
  v24 = v87;
  v25 = v89;
  *(_OWORD *)(v23 + 208) = v88;
  *(_OWORD *)(v23 + 224) = v25;
  v26 = v83;
  v27 = v85;
  v28 = v86;
  *(_OWORD *)(v23 + 144) = v84;
  *(_OWORD *)(v23 + 160) = v27;
  *(_OWORD *)(v23 + 176) = v28;
  *(_OWORD *)(v23 + 192) = v24;
  v29 = v81;
  v30 = v82;
  *(_OWORD *)(v23 + 80) = v80;
  *(_OWORD *)(v23 + 96) = v29;
  *(_BYTE *)(v23 + 240) = v90;
  *(_OWORD *)(v23 + 112) = v30;
  *(_OWORD *)(v23 + 128) = v26;
  v31 = v77;
  *(_OWORD *)(v23 + 16) = v76;
  *(_OWORD *)(v23 + 32) = v31;
  v32 = v79;
  *(_OWORD *)(v23 + 48) = v78;
  *(_OWORD *)(v23 + 64) = v32;
  sub_19CD33260(v20, v23 + v22);
  *(_QWORD *)(v23 + ((v10 + 7 + v22) & 0xFFFFFFFFFFFFFFF8)) = v17;
  v74 = sub_19CE31048;
  v75 = v23;
  v72[0] = MEMORY[0x1E0C809B0];
  v72[1] = 1107296256;
  v72[2] = sub_19CD0C78C;
  v73 = (ValueMetadata *)&block_descriptor_14;
  v33 = _Block_copy(v72);
  swift_retain();
  v34 = v59;
  sub_19CFDF2F0();
  v71 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  v36 = v63;
  v35 = v64;
  sub_19CFE0070();
  v37 = (void *)v58[0];
  MEMORY[0x1A1AD9FF4](0, v34, v36, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v66);
  swift_release();
  v38 = (void *)sub_19CFDFDB8();
  sub_19CD330D8(v58[1], (uint64_t)&v76);
  v39 = swift_allocObject();
  v40 = v87;
  v41 = v89;
  *(_OWORD *)(v39 + 208) = v88;
  *(_OWORD *)(v39 + 224) = v41;
  v42 = v83;
  v43 = v85;
  v44 = v86;
  *(_OWORD *)(v39 + 144) = v84;
  *(_OWORD *)(v39 + 160) = v43;
  *(_OWORD *)(v39 + 176) = v44;
  *(_OWORD *)(v39 + 192) = v40;
  v45 = v81;
  v46 = v82;
  *(_OWORD *)(v39 + 80) = v80;
  *(_OWORD *)(v39 + 96) = v45;
  *(_BYTE *)(v39 + 240) = v90;
  *(_OWORD *)(v39 + 112) = v46;
  *(_OWORD *)(v39 + 128) = v42;
  v47 = v77;
  *(_OWORD *)(v39 + 16) = v76;
  *(_OWORD *)(v39 + 32) = v47;
  v48 = v79;
  *(_OWORD *)(v39 + 48) = v78;
  *(_OWORD *)(v39 + 64) = v48;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = sub_19CE31108;
  *(_QWORD *)(v49 + 24) = v39;
  v67 = sub_19CE30C40(v38, (uint64_t)sub_19CE31134, v49);

  swift_release();
  v50 = v69;
  v51 = v70;
  sub_19CCFECEC(v70, v69, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  v52 = (v60 + 16) & ~v60;
  v53 = (v62 + v52) & 0xFFFFFFFFFFFFFFF8;
  v54 = swift_allocObject();
  sub_19CD33260(v50, v54 + v52);
  v55 = v68;
  *(_QWORD *)(v54 + v53) = v68;
  sub_19CCFECEC(v51, v50, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  v56 = swift_allocObject();
  sub_19CD33260(v50, v56 + v52);
  *(_QWORD *)(v56 + v53) = v55;
  v73 = &type metadata for SyncTaskScheduler;
  v74 = (uint64_t (*)())&protocol witness table for SyncTaskScheduler;
  *(_QWORD *)&v76 = sub_19CE3115C;
  *((_QWORD *)&v76 + 1) = v54;
  *(_QWORD *)&v77 = sub_19CE3125C;
  *((_QWORD *)&v77 + 1) = v56;
  sub_19CCD5B84((uint64_t)v72, (uint64_t)&v78);
  BYTE8(v80) = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CD1929C();
  sub_19CCECFE4((uint64_t)&v76, &qword_1ECEB0B50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
}

uint64_t sub_19CE2BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  _OWORD v26[14];
  char v27;

  v6 = type metadata accessor for PageRenderEvent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_19CD330D8(a1, (uint64_t)v26);
  sub_19CCFECEC(a2, (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 257) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  v17 = v26[13];
  *(_OWORD *)(v16 + 224) = v26[12];
  *(_OWORD *)(v16 + 240) = v17;
  *(_BYTE *)(v16 + 256) = v27;
  v18 = v26[9];
  *(_OWORD *)(v16 + 160) = v26[8];
  *(_OWORD *)(v16 + 176) = v18;
  v19 = v26[11];
  *(_OWORD *)(v16 + 192) = v26[10];
  *(_OWORD *)(v16 + 208) = v19;
  v20 = v26[5];
  *(_OWORD *)(v16 + 96) = v26[4];
  *(_OWORD *)(v16 + 112) = v20;
  v21 = v26[7];
  *(_OWORD *)(v16 + 128) = v26[6];
  *(_OWORD *)(v16 + 144) = v21;
  v22 = v26[1];
  *(_OWORD *)(v16 + 32) = v26[0];
  *(_OWORD *)(v16 + 48) = v22;
  v23 = v26[3];
  *(_OWORD *)(v16 + 64) = v26[2];
  *(_OWORD *)(v16 + 80) = v23;
  sub_19CD33260((uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(_QWORD *)(v16 + ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  swift_retain();
  sub_19CE72184((uint64_t)v13, (uint64_t)&unk_1EE43F6D0, v16);
  return swift_release();
}

uint64_t sub_19CE2BD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[39] = a5;
  v6[40] = a6;
  v6[38] = a4;
  return swift_task_switch();
}

uint64_t sub_19CE2BD44()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = *(_QWORD *)(*(_QWORD *)(v0 + 304) + 208);
  return swift_task_switch();
}

uint64_t sub_19CE2BD64()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 28;
  v0[2] = v0;
  v0[3] = sub_19CE2BDE0;
  v0[18] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 18);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBFD0C();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB0180);
  return swift_continuation_await();
}

uint64_t sub_19CE2BDE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 336) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 344) = *(_QWORD *)(v1 + 224);
    *(_OWORD *)(v1 + 352) = *(_OWORD *)(v1 + 232);
    *(_QWORD *)(v1 + 368) = *(_QWORD *)(v1 + 248);
    *(_OWORD *)(v1 + 376) = *(_OWORD *)(v1 + 256);
  }
  return swift_task_switch();
}

uint64_t sub_19CE2BE70()
{
  uint64_t v0;
  __int128 *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  Swift::String v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  char v19;
  _QWORD *v20;

  if ((sub_19CDD6458() & 1) != 0)
  {
    *(_QWORD *)(v0 + 392) = *(_QWORD *)(*(_QWORD *)(v0 + 304) + 216);
    return swift_task_switch();
  }
  else
  {
    v2 = (__int128 *)(v0 + 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 312);
    v4 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
    v6 = v4;
    v20 = sub_19CD40918(0, 41, 0, MEMORY[0x1E0DEE9D8]);
    v7._object = (void *)0x800000019D070980;
    v7._countAndFlagsBits = 0xD000000000000028;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    v8 = (uint64_t *)(v3 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    v9 = *v8;
    v10 = v8[1];
    *(_QWORD *)(v0 + 296) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 272) = v9;
    *(_QWORD *)(v0 + 280) = v10;
    sub_19CCF8C5C(v0 + 272, v0 + 224, &qword_1ECEB3370);
    *v2 = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658(v0 + 224, v0 + 144);
    *(_BYTE *)(v0 + 176) = 2;
    v17 = *v2;
    v18 = *(_OWORD *)(v0 + 160);
    v19 = *(_BYTE *)(v0 + 176);
    v11 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_19CD40918(0, v20[2] + 1, 1, v20);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[5 * v13];
    *((_BYTE *)v14 + 64) = v19;
    *((_OWORD *)v14 + 2) = v17;
    *((_OWORD *)v14 + 3) = v18;
    v20 = v11;
    sub_19CCECFE4(v0 + 272, &qword_1ECEB3370);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(_QWORD *)(v5 + 32) = v20;
    LOBYTE(v20) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();

    sub_19CE314D4();
    v16 = (void *)swift_allocError();
    sub_19CEBBD6C(v16);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CE2C144()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 336);
  sub_19CEBBD6C(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2C184()
{
  _QWORD *v0;
  uint64_t v1;

  v0[15] = v0 + 28;
  v0[10] = v0;
  v0[11] = sub_19CE2C200;
  v0[18] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 18);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBFB74();
  sub_19CCECFE4(v1, &qword_1EE43BB60);
  return swift_continuation_await();
}

uint64_t sub_19CE2C200()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 400) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_BYTE *)(v1 + 217) = *(_BYTE *)(v1 + 224);
  return swift_task_switch();
}

uint64_t sub_19CE2C274()
{
  uint64_t v0;
  char v1;
  __int128 *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *tv_sec;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  timespec v32;
  timespec v33;
  uint64_t v34[4];
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if ((*(_BYTE *)(v0 + 217) & 1) != 0)
    goto LABEL_12;
  v1 = sub_19CF16E08();
  if (v1 != 2)
  {
    if ((v1 & 1) == 0)
      goto LABEL_4;
LABEL_12:
    v20 = *(_QWORD *)(v0 + 304);
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v31 = *(_BYTE *)(v20 + 193);
    static MonotonicTime.now.getter(&v32);
    v33 = v32;
    sub_19CEE4244(v21, v22, &v31, (unint64_t *)&v33, &v27);
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 368);
    v25 = *(_QWORD *)(v0 + 352);
    v34[0] = *(_QWORD *)(v0 + 344);
    v34[1] = v25;
    v34[2] = v23;
    v34[3] = v24;
    v35 = *(_OWORD *)(v0 + 376);
    v36 = v27;
    v37 = v28;
    v38 = *((_QWORD *)&v28 + 1);
    v39 = v29;
    v40 = v30;
    sub_19CFBCC74(v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (objc_msgSend((id)objc_opt_self(), sel_diagnosticsSubmissionAllowed))
    goto LABEL_12;
LABEL_4:
  v2 = (__int128 *)(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 312);
  v4 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  v6 = v4;
  v33.tv_sec = (__darwin_time_t)sub_19CD40918(0, 43, 0, MEMORY[0x1E0DEE9D8]);
  v7._object = (void *)0x800000019D0709B0;
  v7._countAndFlagsBits = 0xD00000000000002ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  v8 = (uint64_t *)(v3 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
  v9 = *v8;
  v10 = v8[1];
  *(_QWORD *)(v0 + 248) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 224) = v9;
  *(_QWORD *)(v0 + 232) = v10;
  sub_19CCF8C5C(v0 + 224, v0 + 272, &qword_1ECEB3370);
  *v2 = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658(v0 + 272, v0 + 144);
  *(_BYTE *)(v0 + 176) = 2;
  v11 = *(_OWORD *)(v0 + 160);
  v27 = *v2;
  v28 = v11;
  LOBYTE(v29) = *(_BYTE *)(v0 + 176);
  tv_sec = (_QWORD *)v33.tv_sec;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    tv_sec = sub_19CD40918(0, *(_QWORD *)(v33.tv_sec + 16) + 1, 1, v33.tv_sec);
  v14 = tv_sec[2];
  v13 = tv_sec[3];
  if (v14 >= v13 >> 1)
    tv_sec = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, tv_sec);
  tv_sec[2] = v14 + 1;
  v15 = &tv_sec[5 * v14];
  v16 = v27;
  v17 = v28;
  *((_BYTE *)v15 + 64) = v29;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  v33.tv_sec = (__darwin_time_t)tv_sec;
  sub_19CCECFE4(v0 + 224, &qword_1ECEB3370);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(_QWORD *)(v5 + 32) = tv_sec;
  *(_QWORD *)&v27 = v6;
  LOBYTE(v33.tv_sec) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v33);
  swift_bridgeObjectRelease();

  sub_19CE314D4();
  v19 = (void *)swift_allocError();
  sub_19CEBBD6C(v19);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2C60C()
{
  uint64_t v0;
  void *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 400);
  sub_19CEBBD6C(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE2C660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];

  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = *a2;
  v11 = a2[1];
  v12 = *((_BYTE *)a2 + 16);
  v21 = *(_OWORD *)(a2 + 3);
  v13 = a2[5];
  v14 = *(_QWORD *)(a3 + 200);
  *(_QWORD *)&v24 = &type metadata for MetricsSamplingLottery;
  v15 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v22 = v15;
  v15[2] = v5;
  v15[3] = v4;
  v15[4] = v7;
  v15[5] = v6;
  v15[6] = v8;
  v15[7] = v9;
  sub_19CD433C0(&v22, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = v14;
  sub_19CD13D40(v27, 0xD00000000000002ALL, 0x800000019D070920, isUniquelyReferenced_nonNull_native);
  v17 = v26;
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a3 + 224) == 1)
  {
    *(_QWORD *)&v24 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v22) = 1;
    sub_19CD433C0(&v22, v27);
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v26 = v17;
    sub_19CD13D40(v27, 0xD00000000000002BLL, 0x800000019D070950, v18);
    v17 = v26;
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v22 = v10;
  *((_QWORD *)&v22 + 1) = v11;
  v23 = v12;
  v24 = v21;
  v25 = v13;
  *(_QWORD *)&v27[0] = v17;
  v19 = MetricsPipeline.process(_:using:)((uint64_t)&v22, (uint64_t *)v27);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_19CE2C80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[4];
  _QWORD *v43;

  v35 = a3;
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390);
  MEMORY[0x1E0C80A78](v33, v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDF278();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(int *)(type metadata accessor for PageRenderEvent() + 24);
  v34 = a2;
  v13 = (uint64_t *)(a2 + v12);
  v14 = *v13;
  v15 = v13[1];
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0CCE198], v7);
  if (qword_1EE43BB80 != -1)
    swift_once();
  v16 = qword_1EE465C60 + 16;
  v17 = (os_unfair_lock_s *)(qword_1EE465C60 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE465C60 + 40));
  sub_19CE39900(v16, v14, v15, (uint64_t)v11);
  os_unfair_lock_unlock(v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v18 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
  v20 = v18;
  v43 = sub_19CD40918(0, 26, 0, MEMORY[0x1E0DEE9D8]);
  v21._object = (void *)0x800000019D070900;
  v21._countAndFlagsBits = 0xD000000000000019;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  v22 = *v13;
  v23 = v13[1];
  v42[3] = MEMORY[0x1E0DEA968];
  v42[0] = v22;
  v42[1] = v23;
  sub_19CCF8C5C((uint64_t)v42, (uint64_t)v38, &qword_1ECEB3370);
  v36 = 0u;
  v37 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v38, (uint64_t)&v36);
  v41 = 2;
  v39 = v36;
  v40 = v37;
  v24 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_19CD40918(0, v24[2] + 1, 1, v24);
  v26 = v24[2];
  v25 = v24[3];
  if (v26 >= v25 >> 1)
    v24 = sub_19CD40918((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v27 = &v24[5 * v26];
  v28 = v39;
  v29 = v40;
  *((_BYTE *)v27 + 64) = v41;
  *((_OWORD *)v27 + 2) = v28;
  *((_OWORD *)v27 + 3) = v29;
  v43 = v24;
  sub_19CCECFE4((uint64_t)v42, &qword_1ECEB3370);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *(_QWORD *)(v19 + 32) = v43;
  *(_QWORD *)&v39 = v20;
  LOBYTE(v36) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v36);

  swift_bridgeObjectRelease();
  sub_19CCFECEC(v34, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  swift_storeEnumTagMultiPayload();
  sub_19CE26A94((uint64_t)v6);
  return sub_19CCECFE4((uint64_t)v6, (uint64_t *)&unk_1ECEB0390);
}

uint64_t sub_19CE2CB8C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  void *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  Swift::String v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_unfair_lock_s *v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[32];
  __int128 v68;
  __int128 v69;
  char v70;
  uint64_t v71[3];
  uint64_t v72;
  _QWORD *v73;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0390);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_19CFDF278();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v58 - v17;
  *(_QWORD *)&v68 = a1;
  v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v20 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    v21 = *v20;
    v22 = v20[1];
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0CCE1A0], v10);
    if (qword_1EE43BB80 != -1)
      swift_once();
    v23 = qword_1EE465C60 + 16;
    v24 = (os_unfair_lock_s *)(qword_1EE465C60 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE465C60 + 40));
    sub_19CE39900(v23, v21, v22, (uint64_t)v14);
    os_unfair_lock_unlock(v24);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v62 = a3;
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v26 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_19D052350;
    v59 = v26;
    v73 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
    v28._object = (void *)0x800000019D0708D0;
    v28._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    v29 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PageRenderEvent() + 24));
    v30 = *v29;
    v31 = v29[1];
    v72 = MEMORY[0x1E0DEA968];
    v71[0] = v30;
    v71[1] = v31;
    sub_19CCF8C5C((uint64_t)v71, (uint64_t)v67, &qword_1ECEB3370);
    v65 = 0u;
    v66 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v67, (uint64_t)&v65);
    v70 = 2;
    v68 = v65;
    v69 = v66;
    v32 = v73;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v32 = sub_19CD40918(0, v32[2] + 1, 1, v32);
    v35 = v32[2];
    v34 = v32[3];
    v60 = v10;
    if (v35 >= v34 >> 1)
      v32 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v32);
    v32[2] = v35 + 1;
    v36 = &v32[5 * v35];
    v37 = v68;
    v38 = v69;
    *((_BYTE *)v36 + 64) = v70;
    *((_OWORD *)v36 + 2) = v37;
    *((_OWORD *)v36 + 3) = v38;
    v73 = v32;
    sub_19CCECFE4((uint64_t)v71, &qword_1ECEB3370);
    v39._countAndFlagsBits = 44;
    v39._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    *(_QWORD *)(v27 + 32) = v73;
    v73 = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
    v40._countAndFlagsBits = 0x203A6E6F73616572;
    v40._object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    swift_getErrorValue();
    v41 = v63;
    v42 = v64;
    v72 = v64;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v71);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(boxed_opaque_existential_2Tm, v41, v42);
    sub_19CCF8C5C((uint64_t)v71, (uint64_t)v67, &qword_1ECEB3370);
    v65 = 0u;
    v66 = 0u;
    sub_19CD40658((uint64_t)v67, (uint64_t)&v65);
    v70 = 0;
    v68 = v65;
    v69 = v66;
    v44 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v44 = sub_19CD40918(0, v44[2] + 1, 1, v44);
    v46 = v44[2];
    v45 = v44[3];
    if (v46 >= v45 >> 1)
      v44 = sub_19CD40918((_QWORD *)(v45 > 1), v46 + 1, 1, v44);
    v44[2] = v46 + 1;
    v47 = &v44[5 * v46];
    v48 = v68;
    v49 = v69;
    *((_BYTE *)v47 + 64) = v70;
    *((_OWORD *)v47 + 2) = v48;
    *((_OWORD *)v47 + 3) = v49;
    v73 = v44;
    sub_19CCECFE4((uint64_t)v71, &qword_1ECEB3370);
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    *(_QWORD *)(v27 + 40) = v73;
    v51 = v59;
    *(_QWORD *)&v68 = v59;
    LOBYTE(v65) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v27, (JetEngine::LogMessageLevel)&v65);

    swift_bridgeObjectRelease();
    v52 = *v29;
    v53 = v29[1];
    v54 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v18, *MEMORY[0x1E0CCE190], v60);
    if (qword_1EE43BB80 != -1)
      swift_once();
    v55 = qword_1EE465C60 + 16;
    v56 = (os_unfair_lock_s *)(qword_1EE465C60 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE465C60 + 40));
    sub_19CE39900(v55, v52, v53, (uint64_t)v18);
    os_unfair_lock_unlock(v56);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v54);
    *v9 = a1;
    swift_storeEnumTagMultiPayload();
    v57 = a1;
    sub_19CE26A94((uint64_t)v9);
    return sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1ECEB0390);
  }
}

uint64_t PageRenderMetricsPresenter.Configuration.withClientIdOmitted()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_19CD5C1FC(v1, a1);
  *(_BYTE *)(a1 + 210) = 1;
  return result;
}

uint64_t PageRenderMetricsPresenter.Configuration.withActivityContext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_19CD5C1FC(v4, a4);
  *(_QWORD *)(a4 + 216) = a1;
  *(_QWORD *)(a4 + 224) = a2;
  *(_BYTE *)(a4 + 232) = a3 & 1;
  return result;
}

double sub_19CE2D204()
{
  NSString *v0;
  Class v1;
  uint64_t ObjCClassMetadata;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  double result;

  v0 = (NSString *)sub_19CFDF554();
  v1 = NSClassFromString(v0);

  if (!v1)
    goto LABEL_9;
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v3 = swift_conformsToProtocol2();
  v4 = v3 ? v3 : 0;
  if (!v3)
    ObjCClassMetadata = 0;
  if (ObjCClassMetadata)
  {
    v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    qword_1EE439AA0 = ObjCClassMetadata;
    qword_1EE439AA8 = v4;
    __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&xmmword_1EE439A88);
    v5(ObjCClassMetadata, v4);
  }
  else
  {
LABEL_9:
    qword_1EE439AA8 = 0;
    result = 0.0;
    xmmword_1EE439A88 = 0u;
    *(_OWORD *)algn_1EE439A98 = 0u;
  }
  return result;
}

uint64_t sub_19CE2D2B8()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE43C1A0 = result;
  return result;
}

id static PageRenderMetricsPresenter.pageEndNotification.getter()
{
  if (qword_1EE43C2A8 != -1)
    swift_once();
  return (id)qword_1EE43C1A0;
}

uint64_t PageRenderMetricsPresenter.__allocating_init(eventID:topic:pipeline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  PageRenderMetricsPresenter.init(eventID:topic:pipeline:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_19CE2D398(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19CE2DAD4(v4, v1, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t PageRenderMetricsPresenter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PageRenderMetricsPresenter.init(configuration:)(a1);
  return v2;
}

uint64_t sub_19CE2D474()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_19CE2D398(0);
    return swift_release();
  }
  return result;
}

uint64_t PageRenderMetricsPresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v1 = v0;
  if (qword_1EE43C258 != -1)
    swift_once();
  if (qword_1EE465C70)
  {
    v2 = qword_1EE465C78;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 24))(v0, &protocol witness table for PageRenderMetricsPresenter, ObjectType, v2);
  }
  v4 = *(_QWORD *)(v0 + 32);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_19CD5BF80(v5);
  os_unfair_lock_unlock(v6);
  swift_release();

  swift_release();
  swift_release();
  return v1;
}

uint64_t PageRenderMetricsPresenter.isAccessibilityEnabled.getter()
{
  uint64_t v0;

  return -[_JEAtomicFlag currentValue](*(_QWORD *)(v0 + 24));
}

uint64_t PageRenderMetricsPresenter.isAccessibilityEnabled.setter(char a1)
{
  uint64_t v1;

  return -[_JEAtomicFlag setCurrentValue:](*(_QWORD *)(v1 + 24), a1 & 1);
}

uint64_t (*PageRenderMetricsPresenter.isAccessibilityEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = -[_JEAtomicFlag currentValue](v3);
  return sub_19CE2D63C;
}

uint64_t sub_19CE2D63C(uint64_t a1)
{
  return -[_JEAtomicFlag setCurrentValue:](*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t PageRenderMetricsPresenter.event.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19CCBE7E4(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t PageRenderMetricsPresenter.isCollecting.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  unsigned __int8 v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19CE2D774(v2, (char *)&v6);
  os_unfair_lock_unlock(v3);
  v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_19CE2D774@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = type metadata accessor for PageRenderMetricsPresenter.State();
  v5 = type metadata accessor for PageRenderMetricsPresenter.State;
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCFECEC(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = 0;
  }
  else
  {
    v10 = (uint64_t)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260) + 48)];
    swift_unknownObjectRelease();
    sub_19CD33034(v10);
    v9 = 1;
    v5 = type metadata accessor for PageRenderEvent;
  }
  result = sub_19CCEACE4((uint64_t)v8, (uint64_t (*)(_QWORD))v5);
  *a2 = v9;
  return result;
}

Swift::Void __swiftcall PageRenderMetricsPresenter.setPageRequestTime(_:)(JetEngine::MonotonicTime a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = v2 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v2 + 16);
  v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19CE2D8E4(v3);
  os_unfair_lock_unlock(v4);
  swift_release();
}

id sub_19CE2D8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  __int128 v12;
  __int128 v13;

  v2 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCFECEC(a1, (uint64_t)v5, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
    return (id)sub_19CCEACE4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
  v9 = (uint64_t)&v5[*(int *)(v8 + 48)];
  v10 = v5[*(int *)(v8 + 64)];
  swift_unknownObjectRelease();
  sub_19CD33034(v9);
  sub_19CCEACE4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  if (v10 == 1)
    sub_19CFAA708((unint64_t)"JetEngine/PageRenderMetricsPresenter.swift", 0x2AuLL, 2, 0x241uLL);
  static MonotonicTime.now.getter((timespec *)&v13);
  v12 = v13;
  if (qword_1ECEB0250 != -1)
    swift_once();
  v11 = (void *)qword_1ECEB0240;
  objc_msgSend((id)qword_1ECEB0240, sel_lock, v12);
  if (qword_1ECEB0238 != -1)
    swift_once();
  xmmword_1ECEB0148 = v12;
  return objc_msgSend(v11, sel_unlock);
}

uint64_t sub_19CE2DA84()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439AF8);
  result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(_BYTE *)(result + 16) = 0;
  qword_1EE439A70 = result;
  return result;
}

void static PageRenderMetricsPresenter.enableExtendedLaunchSupport()()
{
  byte_1EE4373E8 = 1;
}

uint64_t PageRenderMetricsPresenter.onPost.getter()
{
  return swift_retain();
}

uint64_t sub_19CE2DAD4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)();
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double tv_sec;
  double tv_nsec;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  timespec v45[3];
  char v46;
  uint64_t v47;
  char v48;
  _OWORD v49[14];
  char v50;
  uint64_t v51;

  LODWORD(v44) = a3;
  v6 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v43 = v3;
    v16 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
    v17 = &v9[v16[12]];
    v18 = *(_QWORD *)&v9[v16[16] + 8];
    v19 = *(_QWORD *)&v9[v16[20]];
    sub_19CD33260((uint64_t)v9, (uint64_t)v13);
    v20 = *((_OWORD *)v17 + 13);
    v49[12] = *((_OWORD *)v17 + 12);
    v49[13] = v20;
    v50 = v17[224];
    v21 = *((_OWORD *)v17 + 9);
    v49[8] = *((_OWORD *)v17 + 8);
    v49[9] = v21;
    v22 = *((_OWORD *)v17 + 11);
    v49[10] = *((_OWORD *)v17 + 10);
    v49[11] = v22;
    v23 = *((_OWORD *)v17 + 5);
    v49[4] = *((_OWORD *)v17 + 4);
    v49[5] = v23;
    v24 = *((_OWORD *)v17 + 7);
    v49[6] = *((_OWORD *)v17 + 6);
    v49[7] = v24;
    v25 = *((_OWORD *)v17 + 1);
    v49[0] = *(_OWORD *)v17;
    v49[1] = v25;
    v26 = *((_OWORD *)v17 + 3);
    v49[2] = *((_OWORD *)v17 + 2);
    v49[3] = v26;
    if (v18)
    {
      if ((v44 & 1) == 0)
        goto LABEL_17;
      v27 = a2;
      v28 = v51;
      sub_19CCEACE4(v51, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
      swift_getObjectType();
      sub_19CFDFE48();
      sub_19CFDFE54();
    }
    else
    {
      v44 = v19;
      sub_19CCEACE4(v51, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
      v27 = a2;
      if (qword_1ECEB0160 != -1)
        swift_once();
      v45[2] = (timespec)xmmword_1ECEB51A0;
      v46 = byte_1ECEB51B0;
      v47 = qword_1ECEB51B8;
      v48 = byte_1ECEB51C0;
      v29 = (uint64_t *)&v13[*(int *)(v10 + 24)];
      v31 = *v29;
      v30 = v29[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(v45);
      v32 = *(double *)(a2 + 16);
      tv_sec = (double)v45[0].tv_sec;
      tv_nsec = (double)v45[0].tv_nsec;
      if (qword_1ECEB2F88 != -1)
      {
        v41 = (double)v45[0].tv_nsec;
        v42 = v32;
        v40 = (double)v45[0].tv_sec;
        swift_once();
        tv_sec = v40;
        tv_nsec = v41;
        v32 = v42;
      }
      MonotonicTime.init(timeInterval:)(tv_nsec / *(double *)&qword_1ECEB2D50 + tv_sec - v32);
      v45[0] = v45[1];
      PageRenderField<>.callAsFunction(for:at:)(v31, v30, &v45[0].tv_sec);
      swift_bridgeObjectRelease();
      v35 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v28 = v51;
      if (qword_1EE43C2A8 != -1)
        swift_once();
      objc_msgSend(v35, sel_postNotificationName_object_, qword_1EE43C1A0, v27);

    }
    sub_19CE2B5A0((uint64_t)v13, *(_QWORD *)(v27 + 40));
    sub_19CCFECEC((uint64_t)v13, v28, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
    swift_storeEnumTagMultiPayload();
    if (!-[_JEAtomicFlag currentValue](*(_QWORD *)(v27 + 24)))
    {
      swift_unknownObjectRelease();
      sub_19CD33034((uint64_t)v49);
      v14 = type metadata accessor for PageRenderEvent;
      v15 = (uint64_t)v13;
      return sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))v14);
    }
    if (qword_1ECEB0358 != -1)
      swift_once();
    v36 = qword_1ECEB01A8;
    v37 = unk_1ECEB01B0;
    __swift_project_boxed_opaque_existential_1(qword_1ECEB0190, qword_1ECEB01A8);
    (*(void (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
LABEL_17:
    swift_unknownObjectRelease();
    sub_19CD33034((uint64_t)v49);
    return sub_19CCEACE4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  }
  v14 = type metadata accessor for PageRenderMetricsPresenter.State;
  v15 = (uint64_t)v9;
  return sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))v14);
}

Swift::Void __swiftcall PageRenderMetricsPresenter.setPagePreloadStatus(_:)(JetEngine::PagePreloadStatus a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v2 = *(_QWORD *)a1.rawValue._countAndFlagsBits;
  v3 = *(_QWORD *)(a1.rawValue._countAndFlagsBits + 8);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_19CE2DF8C(v5, v2, v3);
  os_unfair_lock_unlock(v6);
  swift_release();
}

uint64_t sub_19CE2DF8C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  timespec v22;
  const char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;

  v6 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = type metadata accessor for PageRenderMetricsPresenter.State;
    v15 = (uint64_t)v9;
  }
  else
  {
    v16 = (uint64_t)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260) + 48)];
    swift_unknownObjectRelease();
    sub_19CD33260((uint64_t)v9, (uint64_t)v13);
    sub_19CD33034(v16);
    v23 = "preloadStatus";
    v24 = 13;
    v25 = 2;
    v26 = 0;
    v27 = 1;
    v17 = (uint64_t *)&v13[*(int *)(v10 + 24)];
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    static MonotonicTime.now.getter(&v22);
    sub_19CE2E134(a2, a3, v18, v19, v22.tv_sec, v22.tv_nsec);
    swift_bridgeObjectRelease();
    v14 = type metadata accessor for PageRenderEvent;
    v15 = (uint64_t)v13;
  }
  return sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))v14);
}

uint64_t sub_19CE2E134(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  NSObject *v35;
  char *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  os_signpost_id_t v43;
  os_log_t v44;
  void (*v45)(char *, uint64_t);
  os_log_t v46[2];
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  double v62;
  uint64_t v63[3];
  _BYTE v64[400];
  _QWORD v65[6];
  char v66;
  uint64_t v67;
  unint64_t v68;

  v56 = a6;
  v61 = a2;
  v52 = sub_19CFDF1AC();
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52, v11);
  v51 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v60 = (char *)v46 - v15;
  v59 = sub_19CFDF1DC();
  v16 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59, v17);
  v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECEB0220 != -1)
    swift_once();
  v57 = v19;
  v58 = v16;
  v20 = qword_1ECEB50B8;
  v21 = *(const char **)v6;
  v22 = *(_QWORD *)(v6 + 8);
  v23 = *(unsigned __int8 *)(v6 + 16);
  v65[0] = a3;
  v65[1] = a4;
  v65[2] = a5;
  v53 = a5;
  v24 = v56;
  v65[3] = v56;
  v65[4] = v21;
  v65[5] = v22;
  v66 = v23;
  v49 = a1;
  v67 = a1;
  v68 = v61;
  sub_19CE31518((uint64_t)v65);
  sub_19CD376A0(v65, v64);
  v25 = *(void **)(v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(v25, sel_lock);
  sub_19CD372F8(v20, v64);
  v46[1] = 0;
  objc_msgSend(v25, sel_unlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = (char *)v21;
  v50 = v23;
  v26 = sub_19CFE013C();
  v27 = v53;
  v63[0] = v53;
  v63[1] = v24;
  sub_19CD37A18(v26, v28, a3, a4, v63);
  swift_bridgeObjectRelease();
  if (qword_1ECEB0228 != -1)
    swift_once();
  v29 = v59;
  v30 = __swift_project_value_buffer(v59, (uint64_t)qword_1ECEB50C0);
  v32 = v57;
  v31 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v30, v29);
  v48 = a3;
  sub_19CFDF734();
  v33 = v60;
  sub_19CFDF1B8();
  swift_bridgeObjectRetain_n();
  v34 = v61;
  swift_bridgeObjectRetain_n();
  v35 = sub_19CFDF1C4();
  v47 = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v29);
  }
  v46[0] = v35;
  if ((v50 & 1) != 0)
  {
    v36 = v51;
    if ((unint64_t)v54 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v54 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v54 >> 16 <= 0x10)
      {
        v37 = v27;
        v54 = sub_19CF16260();
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  v36 = v51;
  if (!v54)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v37 = v27;
LABEL_14:
  v39 = v52;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v36, v60, v52);
  v40 = swift_slowAlloc();
  v41 = swift_slowAlloc();
  v63[0] = v41;
  *(_DWORD *)v40 = 136315650;
  swift_bridgeObjectRetain();
  v62 = COERCE_DOUBLE(sub_19CD37070(v48, a4, v63));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v40 + 12) = 2048;
  v42 = (double)v56;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v62 = v42 / *(double *)&qword_1ECEB2D50 + (double)v37;
  sub_19CFDFFC8();
  *(_WORD *)(v40 + 22) = 2080;
  swift_bridgeObjectRetain();
  v62 = COERCE_DOUBLE(sub_19CD37070(v49, v34, v63));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  v43 = sub_19CFDF194();
  v44 = v46[0];
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v46[0], (os_signpost_type_t)v47, v43, v54, "id=%s, instant=%f, value=%s", (uint8_t *)v40, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v41, -1, -1);
  MEMORY[0x1A1ADBE9C](v40, -1, -1);

  v45 = *(void (**)(char *, uint64_t))(v55 + 8);
  v45(v60, v39);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
  return ((uint64_t (*)(char *, uint64_t))v45)(v36, v39);
}

uint64_t sub_19CE2E6A4(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  NSObject *v37;
  os_signpost_type_t v38;
  char *v39;
  uint64_t v40;
  os_signpost_type_t v41;
  NSObject *v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  os_signpost_id_t v52;
  uint64_t v53;
  void (*v54)(_BYTE *, uint64_t);
  _BYTE v55[12];
  int v56;
  _BYTE *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  double v68;
  uint64_t v69[3];
  _QWORD v70[6];
  char v71;
  uint64_t v72;
  unint64_t v73;
  _BYTE v74[408];

  v63 = a4;
  v64 = a5;
  v9 = sub_19CFDF1AC();
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v57 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12, v13);
  v67 = &v55[-v14];
  v15 = sub_19CFDF1DC();
  v59 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ECEB0220 != -1)
    swift_once();
  v19 = qword_1ECEB50B8;
  v65 = v18;
  v66 = v15;
  v62 = a2;
  v56 = a1;
  if ((_BYTE)a1)
  {
    v20 = 0x756F72676B636162;
    v21 = 0xEA0000000000646ELL;
    if (a1 != 1)
    {
      v20 = 0x6669636570736E75;
      v21 = 0xEB00000000646569;
    }
  }
  else
  {
    v20 = 0x657373696D736964;
    v21 = 0xE900000000000064;
  }
  v58 = v21;
  v23 = *(_QWORD *)v5;
  v22 = *(_QWORD *)(v5 + 8);
  v24 = *(_BYTE *)(v5 + 16);
  v26 = v62;
  v25 = v63;
  v70[0] = v62;
  v70[1] = a3;
  v27 = v64;
  v70[2] = v63;
  v70[3] = v64;
  v70[4] = v23;
  v70[5] = v22;
  v71 = v24;
  v72 = v20;
  v73 = v21;
  sub_19CE31518((uint64_t)v70);
  sub_19CD376A0(v70, v74);
  v28 = *(void **)(v19 + 32);
  swift_bridgeObjectRetain();
  objc_msgSend(v28, sel_lock);
  sub_19CD372F8(v19, v74);
  objc_msgSend(v28, sel_unlock, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = v23;
  v29 = v24;
  v30 = sub_19CFE013C();
  v69[0] = v25;
  v69[1] = v27;
  sub_19CD37A18(v30, v31, v26, a3, v69);
  swift_bridgeObjectRelease();
  if (qword_1ECEB0228 != -1)
    swift_once();
  v32 = v66;
  v33 = __swift_project_value_buffer(v66, (uint64_t)qword_1ECEB50C0);
  v34 = v59;
  v35 = v65;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v59 + 16))(v65, v33, v32);
  sub_19CFDF734();
  v36 = v67;
  sub_19CFDF1B8();
  swift_bridgeObjectRetain_n();
  v37 = sub_19CFDF1C4();
  v38 = sub_19CFDFE90();
  if ((sub_19CFDFF2C() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v36, v61);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v34 + 8))(v35, v32);
  }
  if ((v29 & 1) != 0)
  {
    if (HIDWORD(v58))
    {
      __break(1u);
    }
    else
    {
      if (v58 >> 11 == 27)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if (WORD1(v58) <= 0x10u)
      {
        v40 = v34;
        v41 = v38;
        v42 = v37;
        v39 = sub_19CF16260();
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  v39 = (char *)v58;
  if (!v58)
  {
LABEL_33:
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v40 = v34;
  v41 = v38;
  v42 = v37;
LABEL_18:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 16))(v57, v67, v61);
  v44 = swift_slowAlloc();
  v45 = swift_slowAlloc();
  v69[0] = v45;
  *(_DWORD *)v44 = 136315650;
  swift_bridgeObjectRetain();
  v68 = COERCE_DOUBLE(sub_19CD37070(v62, a3, v69));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v44 + 12) = 2048;
  v46 = (double)v63;
  v47 = (double)v64;
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v68 = v47 / *(double *)&qword_1ECEB2D50 + v46;
  sub_19CFDFFC8();
  *(_WORD *)(v44 + 22) = 2080;
  v48 = 0xE900000000000064;
  if ((_BYTE)v56)
  {
    if (v56 == 1)
      v49 = 0x756F72676B636162;
    else
      v49 = 0x6669636570736E75;
    if (v56 == 1)
      v48 = 0xEA0000000000646ELL;
    else
      v48 = 0xEB00000000646569;
    v50 = v66;
  }
  else
  {
    v50 = v66;
    v49 = 0x657373696D736964;
  }
  v68 = COERCE_DOUBLE(sub_19CD37070(v49, v48, v69));
  sub_19CFDFFC8();
  swift_bridgeObjectRelease();
  v51 = v57;
  v52 = sub_19CFDF194();
  _os_signpost_emit_with_name_impl(&dword_19CCBB000, v42, v41, v52, v39, "id=%s, instant=%f, value=%s", (uint8_t *)v44, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1A1ADBE9C](v45, -1, -1);
  MEMORY[0x1A1ADBE9C](v44, -1, -1);

  v53 = v61;
  v54 = *(void (**)(_BYTE *, uint64_t))(v60 + 8);
  v54(v67, v61);
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v65, v50);
  return ((uint64_t (*)(_BYTE *, uint64_t))v54)(v51, v53);
}

_BYTE *sub_19CE2EC88(_BYTE *result)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  if ((*result & 1) == 0)
  {
    v1 = result;
    if (qword_1EE439AB0 != -1)
      swift_once();
    sub_19CCF8C5C((uint64_t)&xmmword_1EE439A88, (uint64_t)&v19, &qword_1EE439AC0);
    if (*((_QWORD *)&v20 + 1))
    {
      sub_19CCD14C4(&v19, (uint64_t)&v21);
      v2 = *((_QWORD *)&v22 + 1);
      v3 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
      (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
      *v1 = 1;
      if (qword_1ECEB31D8 != -1)
        swift_once();
      v4 = (void *)qword_1ECEB30F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v6 = swift_allocObject();
      v7 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
      v18[3] = v7;
      v18[0] = 0xD000000000000034;
      v18[1] = 0x800000019D070AD0;
      v19 = 0u;
      v20 = 0u;
      v8 = v4;
      sub_19CD40658((uint64_t)v18, (uint64_t)&v19);
      *(_BYTE *)(v6 + 64) = 0;
      v9 = v20;
      *(_OWORD *)(v6 + 32) = v19;
      *(_OWORD *)(v6 + 48) = v9;
      *(_QWORD *)(v5 + 32) = v6;
      *(_QWORD *)&v19 = v8;
      LOBYTE(v18[0]) = 3;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)v18);

      swift_bridgeObjectRelease();
      return (_BYTE *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v19, &qword_1EE439AC0);
      if (qword_1ECEB31D8 != -1)
        swift_once();
      v10 = (void *)qword_1ECEB30F0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_19D052350;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v12 = swift_allocObject();
      v13 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
      *((_QWORD *)&v20 + 1) = v13;
      *(_QWORD *)&v19 = 0xD000000000000044;
      *((_QWORD *)&v19 + 1) = 0x800000019D070A40;
      v21 = 0u;
      v22 = 0u;
      v14 = v10;
      sub_19CD40658((uint64_t)&v19, (uint64_t)&v21);
      *(_BYTE *)(v12 + 64) = 0;
      v15 = v22;
      *(_OWORD *)(v12 + 32) = v21;
      *(_OWORD *)(v12 + 48) = v15;
      *(_QWORD *)(v11 + 32) = v12;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
      *((_QWORD *)&v20 + 1) = v13;
      *(_QWORD *)&v19 = 0xD000000000000031;
      *((_QWORD *)&v19 + 1) = 0x800000019D070A90;
      v21 = 0u;
      v22 = 0u;
      sub_19CD40658((uint64_t)&v19, (uint64_t)&v21);
      *(_BYTE *)(v16 + 64) = 0;
      v17 = v22;
      *(_OWORD *)(v16 + 32) = v21;
      *(_OWORD *)(v16 + 48) = v17;
      *(_QWORD *)(v11 + 40) = v16;
      *(_QWORD *)&v21 = v14;
      LOBYTE(v19) = 3;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v19);

      return (_BYTE *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall PageRenderMetricsPresenter.viewWillDisappear(forReason:)(JetEngine::ViewWillDisappearReason forReason)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v2 = *(_QWORD *)forReason.rawValue._countAndFlagsBits;
  v3 = *(_QWORD *)(forReason.rawValue._countAndFlagsBits + 8);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)MEMORY[0x1E0DEC528];
  v6 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_19CE2F188(v6, v2, v3);
  os_unfair_lock_unlock(v7);
  swift_release();
  if (v2 == 0xD000000000000019 && v3 == 0x800000019D070760
    || (sub_19CFE06A0() & 1) != 0
    || v2 == 0x7369447465656873 && v3 == 0xEE0064657373696DLL
    || (sub_19CFE06A0() & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + 32);
    v9 = v8 + *(_QWORD *)(*v5 + *(_QWORD *)v8 + 16);
    v10 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(_QWORD *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v10);
    sub_19CE2DAD4(v9, v1, 1);
    os_unfair_lock_unlock(v10);
    swift_release();
  }
}

uint64_t sub_19CE2F188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  __darwin_time_t tv_sec;
  uint64_t tv_nsec;
  int v24;
  timespec v26;
  timespec v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  char v31;

  v6 = type metadata accessor for PageRenderMetricsPresenter.State();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCFECEC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = type metadata accessor for PageRenderMetricsPresenter.State;
    v15 = (uint64_t)v9;
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
    v17 = (uint64_t)&v9[*(int *)(v16 + 48)];
    v18 = v9[*(int *)(v16 + 64)];
    swift_unknownObjectRelease();
    sub_19CD33260((uint64_t)v9, (uint64_t)v13);
    sub_19CD33034(v17);
    if (v18 == 1)
    {
      if (qword_1ECEB0298 != -1)
        swift_once();
      v28 = xmmword_1ECEB5128;
      v29 = byte_1ECEB5138;
      v30 = qword_1ECEB5140;
      v31 = byte_1ECEB5148;
      v19 = (uint64_t *)&v13[*(int *)(v10 + 24)];
      v21 = *v19;
      v20 = v19[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(&v27);
      v26 = v27;
      PageRenderField<>.callAsFunction(for:at:)(v21, v20, &v26.tv_sec);
      swift_bridgeObjectRelease();
      if (a2 == 0xD000000000000019 && a3 == 0x800000019D070760
        || (sub_19CFE06A0() & 1) != 0
        || a2 == 0x7369447465656873 && a3 == 0xEE0064657373696DLL
        || (sub_19CFE06A0() & 1) != 0)
      {
        *(_QWORD *)&v28 = "pageInterruptReason";
        *((_QWORD *)&v28 + 1) = 19;
        v29 = 2;
        v30 = 0;
        v31 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v27);
        tv_nsec = v27.tv_nsec;
        tv_sec = v27.tv_sec;
        v24 = 0;
      }
      else if (a2 == 0x756F72676B636162 && a3 == 0xEA0000000000646ELL || (sub_19CFE06A0() & 1) != 0)
      {
        *(_QWORD *)&v28 = "pageInterruptReason";
        *((_QWORD *)&v28 + 1) = 19;
        v29 = 2;
        v30 = 0;
        v31 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v27);
        tv_nsec = v27.tv_nsec;
        tv_sec = v27.tv_sec;
        v24 = 1;
      }
      else
      {
        *(_QWORD *)&v28 = "pageInterruptReason";
        *((_QWORD *)&v28 + 1) = 19;
        v29 = 2;
        v30 = 0;
        v31 = 1;
        swift_bridgeObjectRetain();
        static MonotonicTime.now.getter(&v27);
        tv_nsec = v27.tv_nsec;
        tv_sec = v27.tv_sec;
        v24 = 2;
      }
      sub_19CE2E6A4(v24, v21, v20, tv_sec, tv_nsec);
      swift_bridgeObjectRelease();
    }
    v14 = type metadata accessor for PageRenderEvent;
    v15 = (uint64_t)v13;
  }
  return sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))v14);
}

uint64_t sub_19CE2F540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19CE30BD8(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

Swift::Void __swiftcall PageRenderMetricsPresenter.didEnterBackground()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD v2[2];

  v2[0] = 0x756F72676B636162;
  v2[1] = 0xEA0000000000646ELL;
  v1 = v2;
  PageRenderMetricsPresenter.viewWillDisappear(forReason:)(*(JetEngine::ViewWillDisappearReason *)(&v0 - 1));
}

void sub_19CE2F60C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[2];

  v3[0] = 0x756F72676B636162;
  v3[1] = 0xEA0000000000646ELL;
  v2 = v3;
  PageRenderMetricsPresenter.viewWillDisappear(forReason:)(*(JetEngine::ViewWillDisappearReason *)(&a2 - 1));
}

uint64_t PageRenderMetricsPresenter.eventID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = v5 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v5 + 16);
  v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_19CCBE7E4(v6, (uint64_t)v4);
  os_unfair_lock_unlock(v7);
  swift_release();
  v8 = *(_QWORD *)&v4[*(int *)(v1 + 24)];
  swift_bridgeObjectRetain();
  sub_19CCEACE4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
  return v8;
}

uint64_t sub_19CE2F750()
{
  uint64_t result;

  result = sub_19CFDF554();
  qword_1EE465C68 = result;
  return result;
}

uint64_t sub_19CE2F784()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CE2F7A8()
{
  return sub_19CE2D474();
}

uint64_t sub_19CE2F7C0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_19CE2F7D8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = -[_JEAtomicFlag currentValue](*(_QWORD *)(*(_QWORD *)a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_19CE2F804(unsigned __int8 *a1, uint64_t a2)
{
  return -[_JEAtomicFlag setCurrentValue:](*(_QWORD *)(*(_QWORD *)a2 + 24), *a1);
}

uint64_t method lookup function for PageRenderMetricsPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PageRenderMetricsPresenter.__allocating_init(eventID:topic:pipeline:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PageRenderMetricsPresenter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityStart(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityStart(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_19CE2F91C + 4 * byte_19D057D39[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_19CE2F950 + 4 * byte_19D057D34[v4]))();
}

uint64_t sub_19CE2F950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE2F958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE2F960);
  return result;
}

uint64_t sub_19CE2F978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE2F980);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_19CE2F984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE2F98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE2F998(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_19CE2F9A4(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

id sub_19CE2F9B4(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 1)
    return result;
  if (!a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t initializeWithCopy for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_19CE2F9B4(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_19CE2F9B4(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_19CCC18C4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_19CCC18C4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityEnd(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityEnd(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CE2FBE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  v4 = *(_QWORD *)(a2 + 128);
  if (!*(_QWORD *)(a1 + 128))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 128) = v4;
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 104, a2 + 104);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 104);
    v6 = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v5;
    *(_OWORD *)(a1 + 120) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 104);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 144), (uint64_t *)(a2 + 144));
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_BYTE *)(a1 + 209) = *(_BYTE *)(a2 + 209);
  *(_BYTE *)(a1 + 210) = *(_BYTE *)(a2 + 210);
  v7 = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v7;
  return a1;
}

__n128 __swift_memcpy233_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(__int128 *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 128))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 104);
  v7 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v7;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 144);
  v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_BYTE *)(a1 + 209) = *(_BYTE *)(a2 + 209);
  *(_BYTE *)(a1 + 210) = *(_BYTE *)(a2 + 210);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 233))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 233) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 233) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility.init(_pageRenderAccessibility:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility._startPageLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _PageRenderMetricsPresenterAccessibility._endPageLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityCounter(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[32])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.ActivityCounter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

uint64_t assignWithCopy for PageRenderMetricsPresenter.Poster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  v4 = *(_QWORD *)(a2 + 112);
  if (!*(_QWORD *)(a1 + 112))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 112) = v4;
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 88, a2 + 88);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 88);
    v6 = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v5;
    *(_OWORD *)(a1 + 104) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  return a1;
}

__n128 __swift_memcpy225_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for PageRenderMetricsPresenter.Poster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 112))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 128);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_release();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderMetricsPresenter.Poster(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 225))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.Poster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 224) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 225) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 225) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t *sub_19CE30420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_19CFDEF84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = type metadata accessor for PageRenderEvent();
    v10 = *(int *)(v9 + 20);
    v11 = *(void **)((char *)a2 + v10);
    v12 = v11;
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
    v13 = *(int *)(v9 + 24);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
      v19 = *(int *)(v18 + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_QWORD *)v20 = *(uint64_t *)((char *)a2 + v19);
      *(_OWORD *)(v20 + 8) = *(_OWORD *)((char *)a2 + v19 + 8);
      v22 = *(uint64_t *)((char *)a2 + v19 + 32);
      *((_QWORD *)v20 + 3) = *(uint64_t *)((char *)a2 + v19 + 24);
      *((_QWORD *)v20 + 4) = v22;
      *((_QWORD *)v20 + 5) = *(uint64_t *)((char *)a2 + v19 + 40);
      v40 = (uint64_t)a1 + v19 + 48;
      v41 = v18;
      v23 = (uint64_t)a2 + v19 + 48;
      v24 = *(_OWORD *)((char *)a2 + v19 + 72);
      *(_OWORD *)(v20 + 72) = v24;
      v25 = v24;
      v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v40, v23, v25);
      v27 = v20 + 88;
      v28 = v21 + 88;
      v29 = *((_QWORD *)v21 + 14);
      if (v29)
      {
        v30 = *((_QWORD *)v21 + 15);
        *((_QWORD *)v20 + 14) = v29;
        *((_QWORD *)v20 + 15) = v30;
        (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
      }
      else
      {
        v31 = *(_OWORD *)(v21 + 104);
        *v27 = *v28;
        *(_OWORD *)(v20 + 104) = v31;
        *((_QWORD *)v20 + 15) = *((_QWORD *)v21 + 15);
      }
      v32 = *(_OWORD *)(v21 + 152);
      *(_OWORD *)(v20 + 152) = v32;
      (**(void (***)(uint64_t, uint64_t))(v32 - 8))((uint64_t)(v20 + 128), (uint64_t)(v21 + 128));
      v20[168] = v21[168];
      v33 = *((_QWORD *)v21 + 23);
      *((_QWORD *)v20 + 22) = *((_QWORD *)v21 + 22);
      *((_QWORD *)v20 + 23) = v33;
      v20[192] = v21[192];
      v20[193] = v21[193];
      v34 = *((_QWORD *)v21 + 26);
      *((_QWORD *)v20 + 25) = *((_QWORD *)v21 + 25);
      *((_QWORD *)v20 + 26) = v34;
      *((_QWORD *)v20 + 27) = *((_QWORD *)v21 + 27);
      v20[224] = v21[224];
      v35 = *(int *)(v41 + 64);
      v36 = (_OWORD *)((char *)a1 + v35);
      v37 = (_OWORD *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      *(uint64_t *)((char *)a1 + *(int *)(v41 + 80)) = *(uint64_t *)((char *)a2 + *(int *)(v41 + 80));
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19CE306A0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _OWORD *v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  int *v32;

  if (a1 != a2)
  {
    sub_19CCEACE4(a1, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_19CFDEF84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    v7 = type metadata accessor for PageRenderEvent();
    v8 = *(int *)(v7 + 20);
    v9 = *(void **)(a2 + v8);
    v10 = v9;
    *(_QWORD *)(a1 + v8) = v9;
    v11 = *(int *)(v7 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      v32 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
      v14 = v32[12];
      v15 = a1 + v14;
      v16 = a2 + v14;
      *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
      *(_OWORD *)(v15 + 16) = *(_OWORD *)(a2 + v14 + 16);
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(a2 + v14 + 32);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(a2 + v14 + 40);
      v17 = a1 + v14 + 48;
      v18 = a2 + v14 + 48;
      v19 = *(_QWORD *)(a2 + v14 + 72);
      *(_QWORD *)(v15 + 72) = v19;
      *(_QWORD *)(v15 + 80) = *(_QWORD *)(a2 + v14 + 80);
      v20 = **(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      v21 = (_OWORD *)(v15 + 88);
      v22 = (__int128 *)(v16 + 88);
      v23 = *(_QWORD *)(v16 + 112);
      if (v23)
      {
        *(_QWORD *)(v15 + 112) = v23;
        *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
        (**(void (***)(_OWORD *, __int128 *))(v23 - 8))(v21, v22);
      }
      else
      {
        v24 = *v22;
        v25 = *(_OWORD *)(v16 + 104);
        *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
        *v21 = v24;
        *(_OWORD *)(v15 + 104) = v25;
      }
      v26 = *(_QWORD *)(v16 + 152);
      *(_QWORD *)(v15 + 152) = v26;
      *(_QWORD *)(v15 + 160) = *(_QWORD *)(v16 + 160);
      (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v15 + 128, v16 + 128);
      *(_BYTE *)(v15 + 168) = *(_BYTE *)(v16 + 168);
      *(_QWORD *)(v15 + 176) = *(_QWORD *)(v16 + 176);
      *(_QWORD *)(v15 + 184) = *(_QWORD *)(v16 + 184);
      *(_BYTE *)(v15 + 192) = *(_BYTE *)(v16 + 192);
      *(_BYTE *)(v15 + 193) = *(_BYTE *)(v16 + 193);
      *(_QWORD *)(v15 + 200) = *(_QWORD *)(v16 + 200);
      *(_QWORD *)(v15 + 208) = *(_QWORD *)(v16 + 208);
      *(_QWORD *)(v15 + 216) = *(_QWORD *)(v16 + 216);
      *(_BYTE *)(v15 + 224) = *(_BYTE *)(v16 + 224);
      v27 = v32[16];
      v28 = (_OWORD *)(a1 + v27);
      v29 = (_OWORD *)(a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      *(_QWORD *)(a1 + v32[20]) = *(_QWORD *)(a2 + v32[20]);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19CE3093C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = type metadata accessor for MonotonicTimeReference();
  *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  v7 = type metadata accessor for PageRenderEvent();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
  if (EnumCaseMultiPayload != 1)
  {
    v8 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
    v9 = v8[12];
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_BYTE *)(v10 + 224) = *(_BYTE *)(v11 + 224);
    v12 = *(_OWORD *)(v11 + 208);
    *(_OWORD *)(v10 + 192) = *(_OWORD *)(v11 + 192);
    *(_OWORD *)(v10 + 208) = v12;
    v13 = *(_OWORD *)(v11 + 144);
    *(_OWORD *)(v10 + 128) = *(_OWORD *)(v11 + 128);
    *(_OWORD *)(v10 + 144) = v13;
    v14 = *(_OWORD *)(v11 + 176);
    *(_OWORD *)(v10 + 160) = *(_OWORD *)(v11 + 160);
    *(_OWORD *)(v10 + 176) = v14;
    v15 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
    *(_OWORD *)(v10 + 80) = v15;
    v16 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
    *(_OWORD *)(v10 + 112) = v16;
    v17 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v17;
    v18 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v18;
    v19 = v8[16];
    v20 = (_OWORD *)(a1 + v19);
    v21 = (_OWORD *)(a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *(_QWORD *)(a1 + v8[20]) = *(_QWORD *)(a2 + v8[20]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_19CE30A68(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;

  if (a1 != a2)
  {
    sub_19CCEACE4(a1, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderMetricsPresenter.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_19CFDEF84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    v7 = type metadata accessor for PageRenderEvent();
    *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
    *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
    if (EnumCaseMultiPayload != 1)
    {
      v8 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0260);
      v9 = v8[12];
      v10 = a1 + v9;
      v11 = a2 + v9;
      *(_BYTE *)(v10 + 224) = *(_BYTE *)(v11 + 224);
      v12 = *(_OWORD *)(v11 + 208);
      *(_OWORD *)(v10 + 192) = *(_OWORD *)(v11 + 192);
      *(_OWORD *)(v10 + 208) = v12;
      v13 = *(_OWORD *)(v11 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v11 + 128);
      *(_OWORD *)(v10 + 144) = v13;
      v14 = *(_OWORD *)(v11 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v11 + 160);
      *(_OWORD *)(v10 + 176) = v14;
      v15 = *(_OWORD *)(v11 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
      *(_OWORD *)(v10 + 80) = v15;
      v16 = *(_OWORD *)(v11 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
      *(_OWORD *)(v10 + 112) = v16;
      v17 = *(_OWORD *)(v11 + 16);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      v18 = *(_OWORD *)(v11 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
      *(_OWORD *)(v10 + 48) = v18;
      v19 = v8[16];
      v20 = (_OWORD *)(a1 + v19);
      v21 = (_OWORD *)(a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      *(_QWORD *)(a1 + v8[20]) = *(_QWORD *)(a2 + v8[20]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PageIntentInstrumentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PageIntentInstrumentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_19CE30BC8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19CE30BD8(uint64_t a1)
{
  uint64_t v1;

  return sub_19CCDD288(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CE30BF0(uint64_t a1, void (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 88);
  v11 = *(_OWORD *)a1;
  v12 = v5;
  v13 = v6;
  v9 = *(_OWORD *)(a1 + 48);
  v14 = *(_OWORD *)(a1 + 32);
  v15 = v9;
  v16 = v7;
  v17 = *(_OWORD *)(a1 + 72);
  v18 = v8;
  return sub_19CF77F9C(&v11, a2, a3, a4, a5);
}

uint64_t sub_19CE30C40(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  __int128 v14[2];
  _QWORD v15[5];

  v15[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
  v15[4] = &protocol witness table for OS_dispatch_queue;
  v15[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 24) = v8;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  sub_19CCD5B84((uint64_t)v15, (uint64_t)v14);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v6;
  sub_19CCD14C4(v14, (uint64_t)(v9 + 5));
  v12[0] = sub_19CE312E0;
  v12[1] = v9;
  v12[2] = sub_19CE312F0;
  v12[3] = v6;
  sub_19CCD5B84((uint64_t)v15, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  v10 = a1;
  swift_retain();
  swift_retain();
  sub_19CDBF8C0();
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1ECEB03A0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v6;
}

uint64_t sub_19CE30DAC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (qword_1ECEB31D8 != -1)
    swift_once();
  v0 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19D052350;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v3 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA968];
  v11 = 0xD000000000000049;
  v12 = 0x800000019D070840;
  v9 = 0u;
  v10 = 0u;
  v4 = v0;
  sub_19CD40658((uint64_t)&v11, (uint64_t)&v9);
  *(_BYTE *)(v2 + 64) = 0;
  v5 = v10;
  *(_OWORD *)(v2 + 32) = v9;
  *(_OWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  v13 = v3;
  v11 = 0xD00000000000003ALL;
  v12 = 0x800000019D070890;
  v9 = 0u;
  v10 = 0u;
  sub_19CD40658((uint64_t)&v11, (uint64_t)&v9);
  *(_BYTE *)(v6 + 64) = 0;
  v7 = v10;
  *(_OWORD *)(v6 + 32) = v9;
  *(_OWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v1 + 40) = v6;
  *(_QWORD *)&v9 = v4;
  LOBYTE(v11) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v1, (JetEngine::LogMessageLevel)&v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE30F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PageRenderEvent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 144);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 241) & ~v2);
  v4 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE31048()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for PageRenderEvent() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 241) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_19CE2BB58(v0 + 16, v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_19CE3108C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 144);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE31108(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_19CE2C660(a1, a2, v2 + 16);
}

uint64_t sub_19CE31110()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE31134(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, a1 + 48);
}

uint64_t sub_19CE3115C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for PageRenderEvent() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_19CE2C80C(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PageRenderEvent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE3125C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for PageRenderEvent() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_19CE2CB8C(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_19CE312AC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CE312E0(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE30BF0(a1, *(void (**)(__int128 *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_19CE312F0(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF4F334(a1, v1);
}

uint64_t sub_19CE312F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE31324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PageRenderEvent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  if (*(_QWORD *)(v0 + 144))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 257) & ~v2);
  v4 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE31438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(type metadata accessor for PageRenderEvent() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 257) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + 32;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_19CCBE344;
  v7[39] = v5;
  v7[40] = v6;
  v7[38] = v4;
  return swift_task_switch();
}

unint64_t sub_19CE314D4()
{
  unint64_t result;

  result = qword_1EE43F6E0;
  if (!qword_1EE43F6E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D057F94, &type metadata for PageRenderMetricsPresenter.Poster.PostError);
    atomic_store(result, (unint64_t *)&qword_1EE43F6E0);
  }
  return result;
}

uint64_t sub_19CE31518(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(result + 96) & 1;
  v2 = *(_QWORD *)(result + 112) & 1;
  v3 = *(_QWORD *)(result + 128) & 0xFF01;
  v4 = *(_QWORD *)(result + 144) & 1;
  v5 = *(_QWORD *)(result + 160) & 1;
  v6 = *(_QWORD *)(result + 176) & 1;
  v7 = *(_QWORD *)(result + 192) & 1;
  v8 = *(_QWORD *)(result + 208) & 1;
  v9 = *(_QWORD *)(result + 224) & 1;
  v10 = *(_QWORD *)(result + 240) & 1;
  v11 = *(_QWORD *)(result + 256) & 1;
  v12 = *(_QWORD *)(result + 272) & 1;
  v13 = *(_QWORD *)(result + 288) & 0xFF01;
  v14 = *(_QWORD *)(result + 304) & 1;
  v15 = *(_QWORD *)(result + 320) & 1;
  v16 = *(unsigned __int8 *)(result + 376) | 0xA000000000000000;
  *(_QWORD *)(result + 48) &= 0x1FFuLL;
  *(_QWORD *)(result + 96) = v1;
  *(_QWORD *)(result + 112) = v2;
  *(_QWORD *)(result + 128) = v3;
  *(_QWORD *)(result + 144) = v4;
  *(_QWORD *)(result + 160) = v5;
  *(_QWORD *)(result + 176) = v6;
  *(_QWORD *)(result + 192) = v7;
  *(_QWORD *)(result + 208) = v8;
  *(_QWORD *)(result + 224) = v9;
  *(_QWORD *)(result + 240) = v10;
  *(_QWORD *)(result + 256) = v11;
  *(_QWORD *)(result + 272) = v12;
  *(_QWORD *)(result + 288) = v13;
  *(_QWORD *)(result + 304) = v14;
  *(_QWORD *)(result + 320) = v15;
  *(_QWORD *)(result + 376) = v16;
  return result;
}

uint64_t sub_19CE315F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_19CE31634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  v4[5] = a1;
  v4[6] = v1 + 16;
  return swift_task_switch();
}

uint64_t sub_19CE3169C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C28
                                                                                     + dword_1EE442C28))(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_41Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  if (*(_QWORD *)(v0 + 112))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE31790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[2] = a1;
  v4[3] = v1 + 16;
  return swift_task_switch();
}

uint64_t sub_19CE317F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C20
                                                                                     + dword_1EE442C20))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CE3188C()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for PageRenderMetricsPresenter.Poster.PostError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE318DC + 4 * byte_19D057D3E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE318FC + 4 * byte_19D057D43[v4]))();
}

_BYTE *sub_19CE318DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE318FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE31904(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE3190C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE31914(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE3191C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PageRenderMetricsPresenter.Poster.PostError()
{
  return &type metadata for PageRenderMetricsPresenter.Poster.PostError;
}

ValueMetadata *type metadata accessor for _PageRenderMetricsPresenterNoAccessibility()
{
  return &type metadata for _PageRenderMetricsPresenterNoAccessibility;
}

unint64_t sub_19CE3194C()
{
  unint64_t result;

  result = qword_1EE43F730;
  if (!qword_1EE43F730)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D057F6C, &type metadata for PageRenderMetricsPresenter.Poster.PostError);
    atomic_store(result, (unint64_t *)&qword_1EE43F730);
  }
  return result;
}

void sub_19CE3199C(void (*a1)(id *__return_ptr, void *))
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = v1;
  a1(&v9, v1);
  if (!v2)
  {
    v4 = objc_msgSend(v1, sel_exception);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v3, sel_setException_, 0);
      sub_19CDC98D8();
      swift_allocError();
      v7 = v6;
      v8 = v5;
      JSError.init(_:)(v8, v7);
      swift_willThrow();

    }
  }
}

uint64_t JSBytecodeSource.supportsBytecodeCaching.getter()
{
  return 1;
}

id JSBytecodeSource.isUsingBytecodeCache.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSBytecodeSource.cacheBytecode()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20));
  v4[0] = 0;
  if (objc_msgSend(v1, sel_cacheBytecodeWithError_, v4))
  {
    v2 = v4[0];
  }
  else
  {
    v3 = v4[0];
    sub_19CFDEC9C();

    swift_willThrow();
  }
}

id sub_19CE31B48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(a1, sel_evaluateJSScript_, *(_QWORD *)(a2 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)));
  if (result)
    *a3 = result;
  else
    __break(1u);
  return result;
}

id sub_19CE31BB0(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 20)), sel_isUsingBytecodeCache);
}

void sub_19CE31BD4()
{
  JSBytecodeSource.cacheBytecode()();
}

unsigned __int8 *sub_19CE31BE8()
{
  uint64_t v0;

  return sub_19CF83B0C(v0);
}

uint64_t Unstable.JSBytecodeSource.init(fileURL:sourceURL:cacheURL:virtualMachine:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  void (*v41)(char *, uint64_t);
  id v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;

  v52 = a4;
  v56 = a3;
  v57 = a2;
  v49 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v6, v7);
  v50 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v47 - v11;
  v13 = sub_19CFDEDE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v47 - v20;
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v47 - v24;
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&v47 - v28;
  v48 = type metadata accessor for JSBytecodeSource(0);
  v31 = MEMORY[0x1E0C80A78](v48, v30);
  v33 = (char *)&v47 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v14;
  v34 = *(void (**)(char *, char *, uint64_t, double))(v14 + 16);
  v55 = a1;
  v34(v29, a1, v13, v31);
  ((void (*)(char *, char *, uint64_t))v34)(v25, v57, v13);
  sub_19CD3BB88(v56, (uint64_t)v12);
  v51 = v33;
  ((void (*)(char *, char *, uint64_t))v34)(v33, v29, v13);
  sub_19CCE5204(0, (unint64_t *)&qword_1ECEB0928);
  ((void (*)(char *, char *, uint64_t))v34)(v21, v29, v13);
  ((void (*)(char *, char *, uint64_t))v34)(v17, v25, v13);
  v35 = (uint64_t)v12;
  v36 = (uint64_t)v12;
  v37 = v50;
  sub_19CD3BB88(v36, v50);
  v38 = v52;
  v39 = v54;
  v40 = sub_19CE32024(0, (uint64_t)v21, (uint64_t)v17, v37, (uint64_t)v38);
  if (v39)
  {

    sub_19CD3BBD0(v35);
    v41 = *(void (**)(char *, uint64_t))(v53 + 8);
    v41(v25, v13);
    v41(v29, v13);
    v41(v51, v13);
    sub_19CD3BBD0(v56);
    v41(v57, v13);
    return ((uint64_t (*)(char *, uint64_t))v41)(v55, v13);
  }
  else
  {
    v43 = v40;

    sub_19CD3BBD0(v35);
    v44 = *(void (**)(char *, uint64_t))(v53 + 8);
    v44(v25, v13);
    v44(v29, v13);
    v45 = v48;
    v46 = (uint64_t)v51;
    *(_QWORD *)&v51[*(int *)(v48 + 20)] = v43;
    *(_QWORD *)(v46 + *(int *)(v45 + 24)) = v38;
    sub_19CD3BBD0(v56);
    v44(v57, v13);
    v44(v55, v13);
    return sub_19CE321E4(v46, v49);
  }
}

id Unstable.JSBytecodeSource.isUsingBytecodeCache.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unstable.JSBytecodeSource.cacheBytecode()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20));
  v4[0] = 0;
  if (objc_msgSend(v1, sel_cacheBytecodeWithError_, v4))
  {
    v2 = v4[0];
  }
  else
  {
    v3 = v4[0];
    sub_19CFDEC9C();

    swift_willThrow();
  }
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unstable.JSBytecodeSource.evaluate(against:in:)(JSValue_optional against, JSContext in)
{
  return JSBytecodeSource.evaluate(against:in:)(against, in);
}

id sub_19CE31FF8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for JSBytecodeSource(0) + 20)), sel_isUsingBytecodeCache);
}

id sub_19CE32024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  id v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v20;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = (void *)sub_19CFDED2C();
  v20 = a3;
  v9 = (void *)sub_19CFDED2C();
  v10 = sub_19CFDEDE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a4, 1, v10) != 1)
  {
    v12 = (void *)sub_19CFDED2C();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  }
  v22[0] = 0;
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_scriptOfType_memoryMappedFromASCIIFile_withSourceURL_andBytecodeCache_inVirtualMachine_error_, a1, v8, v9, v12, a5, v22);

  if (v13)
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15 = v22[0];
    v14(v20, v10);
    v14(a2, v10);
  }
  else
  {
    v16 = v22[0];
    sub_19CFDEC9C();

    swift_willThrow();
    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v17(v20, v10);
    v17(a2, v10);
  }
  return v13;
}

id sub_19CE321CC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_19CE31B48(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19CE321E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSBytecodeSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t assignWithCopy for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  return a1;
}

uint64_t initializeWithTake for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for JSBytecodeSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for JSBytecodeSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE32390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JSBytecodeSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE32418(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDEDE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_19CE32490()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s16JSBytecodeSourceVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v4 = type metadata accessor for JSBytecodeSource(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_19CFDEDE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = *(int *)(v6 + 24);
    v11 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
    v12 = v9;
    v13 = v11;
  }
  return a1;
}

void _s16JSBytecodeSourceVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for JSBytecodeSource(0);

}

uint64_t _s16JSBytecodeSourceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for JSBytecodeSource(0);
  v6 = *(int *)(v5 + 20);
  v7 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  v8 = *(int *)(v5 + 24);
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v10 = v7;
  v11 = v9;
  return a1;
}

uint64_t _s16JSBytecodeSourceVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for JSBytecodeSource(0);
  v6 = *(int *)(v5 + 20);
  v7 = *(void **)(a2 + v6);
  v8 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  v9 = v7;

  v10 = *(int *)(v5 + 24);
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  return a1;
}

uint64_t _s16JSBytecodeSourceVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for JSBytecodeSource(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t _s16JSBytecodeSourceVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for JSBytecodeSource(0);
  v6 = *(int *)(v5 + 20);
  v7 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);

  v8 = *(int *)(v5 + 24);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  return a1;
}

uint64_t _s16JSBytecodeSourceVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE327E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSBytecodeSource(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s16JSBytecodeSourceVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE32830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JSBytecodeSource(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Unstable.JSBytecodeSource(uint64_t a1)
{
  return sub_19CCFE99C(a1, (uint64_t *)&unk_1EE43F740);
}

uint64_t sub_19CE32884()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for JSBytecodeSource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Device.osVersion.getter()
{
  id v0;
  uint64_t v1;

  v0 = JEGestaltGetSystemVersion();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.buildVersion.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetBuildVersion();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.systemName.getter()
{
  return 5459817;
}

uint64_t Device.model.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetDeviceModel();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.localizedModel.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetLocalizedDeviceModel();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.physicalModel.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetProductType();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.modelFamily.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetDeviceClass();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.marketingFamilyName.getter()
{
  __CFString *v0;
  uint64_t v1;

  v0 = JEGestaltGetMarketingDeviceFamilyName();
  v1 = sub_19CFDF578();

  return v1;
}

uint64_t Device.hasHEVCDecoding.getter()
{
  return JEGestaltHasHEVCDecoding();
}

uint64_t Device._hasWAPICapability.getter()
{
  return JEGestaltHasWAPICapability();
}

id Device.totalSystemCapacity.getter()
{
  id v0;
  id v1;

  v0 = JEGestaltGetTotalSystemCapacity();
  v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalSystemAvailable.getter()
{
  id v0;
  id v1;

  v0 = JEGestaltGetTotalSystemAvailable();
  v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDataCapacity.getter()
{
  id v0;
  id v1;

  v0 = JEGestaltGetTotalDataCapacity();
  v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDataAvailable.getter()
{
  id v0;
  id v1;

  v0 = JEGestaltGetTotalDataAvailable();
  v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

id Device.totalDiskCapacity.getter()
{
  id v0;
  id v1;

  v0 = JEGestaltGetTotalDiskCapacity();
  v1 = objc_msgSend(v0, sel_integerValue);

  return v1;
}

uint64_t Device.isAppleSiliconMac.getter()
{
  return JEGestaltIsAppleSiliconMac();
}

uint64_t Device.isStandaloneWatch.getter()
{
  return JEGestaltIsAppleSiliconMac();
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

uint64_t sub_19CE32CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v0 = sub_19CFDF278();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0, v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v1 + 104))(v5, *MEMORY[0x1E0CCE190], v0, v3);
  sub_19CFDF2A8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t MetricsData._isEqual(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  if (!v6)
  {
    v11 = 0;
    if (v2)
      return v11 & 1;
LABEL_10:
    if (((v3 ^ v7) & 1) != 0)
      return v11 & 1;
    goto LABEL_11;
  }
  if (!v2)
  {
LABEL_15:
    v11 = 0;
    return v11 & 1;
  }
  if (*(_QWORD *)v1 != *(_QWORD *)a1 || v6 != v2)
  {
    v12 = sub_19CFE06A0();
    v11 = 0;
    if ((v12 & 1) == 0)
      return v11 & 1;
    goto LABEL_10;
  }
  if (v3 != v7)
    goto LABEL_15;
LABEL_11:
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_19CE07520(v13, v8);
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    goto LABEL_15;
  MEMORY[0x1E0C80A78](v15, v16);
  if ((sub_19CE07D3C(v8, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_19CE07F54) & 1) == 0
    || (sub_19CE071FC(v9, v4) & 1) == 0)
  {
    goto LABEL_15;
  }
  v11 = sub_19CE071FC(v10, v5);
  return v11 & 1;
}

uint64_t MetricsData.topic.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsData.shouldFlush.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MetricsData.fields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MetricsData.fields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.includingFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*MetricsData.includingFields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.excludingFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*MetricsData.excludingFields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsData.Configuration.init(defaultTopic:defaultIncludingFields:defaultExcludingFields:shouldFlush:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_19CE32F80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = *a2;
  v6 = a2[1];
  v8 = *a3;
  v26 = a3[2];
  v9 = (uint64_t (*)(uint64_t))a3[4];
  v28 = a3[3];
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_19CE33280(v10, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 0x707954746E657665;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  v13 = v7;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v6;
  swift_bridgeObjectRetain();
  v14 = sub_19CD30650(inited);
  v27 = sub_19CE33280(v14, v11);
  result = sub_19CE35DDC(a1, v8);
  v16 = result;
  v18 = v17;
  if (v9)
  {
    result = v9(a1);
    v19 = result;
  }
  else
  {
    v19 = 0;
  }
  if (*(_QWORD *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    v20 = sub_19CCED700(v13, v6);
    if ((v21 & 1) != 0)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9E8];
    }
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v28 + 16))
      goto LABEL_11;
LABEL_8:
    v23 = MEMORY[0x1E0DEE9E8];
    goto LABEL_15;
  }
  v22 = MEMORY[0x1E0DEE9E8];
  if (!*(_QWORD *)(v28 + 16))
    goto LABEL_8;
LABEL_11:
  swift_bridgeObjectRetain();
  v24 = sub_19CCED700(v13, v6);
  if ((v25 & 1) != 0)
  {
    v23 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = MEMORY[0x1E0DEE9E8];
  }
  result = swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)a4 = v16;
  *(_QWORD *)(a4 + 8) = v18;
  *(_BYTE *)(a4 + 16) = v19 & 1;
  *(_QWORD *)(a4 + 24) = v27;
  *(_QWORD *)(a4 + 32) = v22;
  *(_QWORD *)(a4 + 40) = v23;
  return result;
}

uint64_t static MetricsData.makeMetricsBackClickData(fields:configuration:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[4];
  v7 = a2[5];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = 0x79546E6F69746361;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 48) = 1801675106;
  *(_QWORD *)(inited + 56) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  v10 = sub_19CD30650(inited);
  v11 = sub_19CE33280(v10, a1);
  v13[0] = v4;
  v13[1] = v5;
  v14 = *((_OWORD *)a2 + 1);
  v15 = v6;
  v16 = v7;
  static MetricsData.makeMetricsMediaClickData(targetID:targetType:fields:configuration:)(1801675106, 0xE400000000000000, 0x6E6F74747562, 0xE600000000000000, v11, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE33280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_19CE3502C(a1, (uint64_t)sub_19CEC6470, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t static MetricsData.makeMetricsPageData(fields:timingMetrics:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  char v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v24;
  __int128 v25;
  _OWORD v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v5 = *a2;
  v4 = a2[1];
  v6 = a2[4];
  v7 = *((_BYTE *)a2 + 40);
  v8 = a2[6];
  v9 = *((_BYTE *)a2 + 56);
  v10 = a2[8];
  v11 = *((_BYTE *)a2 + 72);
  v12 = *a3;
  v13 = a3[1];
  v25 = *((_OWORD *)a3 + 1);
  v14 = a3[4];
  v24 = a3[5];
  v15 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v33 = v15;
  if (v4)
  {
    v16 = v15;
    *((_QWORD *)&v30 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v29 = v5;
    *((_QWORD *)&v29 + 1) = v4;
    sub_19CD433C0(&v29, v28);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(v28, 0xD000000000000014, 0x800000019D06CE20, isUniquelyReferenced_nonNull_native);
    v33 = v16;
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    sub_19CD143A0(0xD000000000000014, 0x800000019D06CE20, &v29);
    sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
    if ((v7 & 1) != 0)
    {
LABEL_3:
      sub_19CD143A0(0xD000000000000010, 0x800000019D06D0E0, &v29);
      sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
      if ((v9 & 1) == 0)
        goto LABEL_4;
LABEL_8:
      sub_19CD143A0(0xD000000000000011, 0x800000019D06D140, &v29);
      sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
      if ((v11 & 1) == 0)
        goto LABEL_5;
LABEL_9:
      sub_19CD143A0(0x65736E6F70736572, 0xEF656D6954646E45, &v29);
      sub_19CCECFE4((uint64_t)&v29, &qword_1ECEB3370);
      goto LABEL_10;
    }
  }
  *((_QWORD *)&v30 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v29 = v6;
  sub_19CD433C0(&v29, v28);
  v21 = v33;
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v28, 0xD000000000000010, 0x800000019D06D0E0, v22);
  v33 = v21;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_8;
LABEL_4:
  *((_QWORD *)&v30 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v29 = v8;
  sub_19CD433C0(&v29, v28);
  v18 = v33;
  v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v28, 0xD000000000000011, 0x800000019D06D140, v19);
  v33 = v18;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_9;
LABEL_5:
  *((_QWORD *)&v30 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v29 = v10;
  sub_19CD433C0(&v29, v28);
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v28, 0x65736E6F70736572, 0xEF656D6954646E45, v20);
  swift_bridgeObjectRelease();
LABEL_10:
  *(_QWORD *)&v28[0] = 1701273968;
  *((_QWORD *)&v28[0] + 1) = 0xE400000000000000;
  *(_QWORD *)&v29 = v12;
  *((_QWORD *)&v29 + 1) = v13;
  v30 = v25;
  v31 = v14;
  v32 = v24;
  sub_19CE32F80(a1, (uint64_t *)v28, (uint64_t *)&v29, a4);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsSearchData(term:targetType:actionType:actionURL:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t *a11)
{
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD v40[2];

  v31 = a11[1];
  v32 = *a11;
  v33 = *((_OWORD *)a11 + 1);
  v29 = a11[5];
  v30 = a11[4];
  v19 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v20 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v36 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v35 = a1;
  *((_QWORD *)&v35 + 1) = a2;
  sub_19CD433C0(&v35, v40);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = v19;
  sub_19CD13D40(v40, 1836213620, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  v22 = v39;
  swift_bridgeObjectRelease();
  *((_QWORD *)&v36 + 1) = v20;
  *(_QWORD *)&v35 = a3;
  *((_QWORD *)&v35 + 1) = a4;
  sub_19CD433C0(&v35, v40);
  swift_bridgeObjectRetain();
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v39 = v22;
  sub_19CD13D40(v40, 0x7954746567726174, 0xEA00000000006570, v23);
  v24 = v39;
  swift_bridgeObjectRelease();
  *((_QWORD *)&v36 + 1) = v20;
  *(_QWORD *)&v35 = a5;
  *((_QWORD *)&v35 + 1) = a6;
  sub_19CD433C0(&v35, v40);
  swift_bridgeObjectRetain();
  v25 = swift_isUniquelyReferenced_nonNull_native();
  v39 = v24;
  sub_19CD13D40(v40, 0x79546E6F69746361, 0xEA00000000006570, v25);
  v26 = v39;
  swift_bridgeObjectRelease();
  if (a8)
  {
    *((_QWORD *)&v36 + 1) = v20;
    *(_QWORD *)&v35 = a7;
    *((_QWORD *)&v35 + 1) = a8;
    sub_19CD433C0(&v35, v40);
    swift_bridgeObjectRetain();
    v27 = swift_isUniquelyReferenced_nonNull_native();
    v39 = v26;
    sub_19CD13D40(v40, 0x72556E6F69746361, 0xE90000000000006CLL, v27);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v40[0] = 0x686372616573;
  *((_QWORD *)&v40[0] + 1) = 0xE600000000000000;
  *(_QWORD *)&v35 = v32;
  *((_QWORD *)&v35 + 1) = v31;
  v36 = v33;
  v37 = v30;
  v38 = v29;
  sub_19CE32F80(a10, (uint64_t *)v40, (uint64_t *)&v35, a9);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsImpressionsData(fields:configuration:impressionsEventVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v15[2];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[2];

  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  *(_QWORD *)(inited + 32) = 0x6973736572706D69;
  *(_QWORD *)(inited + 40) = 0xEF65756575516E6FLL;
  v13 = MEMORY[0x1E0DEA968];
  strcpy((char *)(inited + 48), "data-metrics");
  *(_BYTE *)(inited + 61) = 0;
  *(_WORD *)(inited + 62) = -5120;
  *(_QWORD *)(inited + 72) = v13;
  strcpy((char *)(inited + 80), "eventVersion");
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB418];
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(_QWORD *)(inited + 96) = a3;
  sub_19CD30650(inited);
  v19[0] = 0x6973736572706D69;
  v19[1] = 0xEB00000000736E6FLL;
  v15[0] = v8;
  v15[1] = v9;
  v16 = *(_OWORD *)(a2 + 16);
  v17 = v10;
  v18 = v11;
  sub_19CE32F80(a1, v19, v15, a4);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsMediaData(fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[2];

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v15[0] = 0x616964656DLL;
  v15[1] = 0xE500000000000000;
  v11[0] = v6;
  v11[1] = v7;
  v12 = *(_OWORD *)(a2 + 16);
  v13 = v8;
  v14 = v9;
  sub_19CE32F80(a1, v15, v11, a3);
  return swift_bridgeObjectRelease();
}

uint64_t _s9JetEngine11MetricsDataV04makec5ClickD08targetID0G4Type6fields13configurationACSS_SSSDySSypGAC13ConfigurationVtFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v12 = *(_QWORD *)a6;
  v13 = *(_QWORD *)(a6 + 8);
  v14 = *(_QWORD *)(a6 + 32);
  v15 = *(_QWORD *)(a6 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  *(_QWORD *)(inited + 32) = 0x6449746567726174;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = 0x7954746567726174;
  *(_QWORD *)(inited + 120) = v17;
  *(_QWORD *)(inited + 88) = 0xEA00000000006570;
  *(_QWORD *)(inited + 96) = a3;
  *(_QWORD *)(inited + 104) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CD30650(inited);
  v25[0] = 0x6B63696C63;
  v25[1] = 0xE500000000000000;
  v21[0] = v12;
  v21[1] = v13;
  v22 = *(_OWORD *)(a6 + 16);
  v23 = v14;
  v24 = v15;
  sub_19CE32F80(a5, v25, v21, a7);
  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.makeMetricsPageRenderFields(timingMetrics:fields:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v36;
  char v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v8 = *((_BYTE *)a1 + 40);
  v9 = a1[6];
  v10 = *((_BYTE *)a1 + 56);
  v11 = a1[8];
  v12 = *((_BYTE *)a1 + 72);
  v13 = *((unsigned __int8 *)a1 + 73);
  v14 = a1[10];
  v36 = *((_BYTE *)a1 + 88);
  v15 = a1[12];
  v16 = MEMORY[0x1E0DEA968];
  v37 = *((_BYTE *)a1 + 104);
  *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v39 = 0x646E655265676170;
  *((_QWORD *)&v39 + 1) = 0xEA00000000007265;
  sub_19CD433C0(&v39, v38);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v38, 0x707954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  v41 = a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a2 + 16) && (v18 = sub_19CD3FD1C(0x6C725565676170, 0xE700000000000000), (v19 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a2 + 56) + 32 * v18, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    if (v5)
    {
      *((_QWORD *)&v40 + 1) = v16;
      *(_QWORD *)&v39 = v6;
      *((_QWORD *)&v39 + 1) = v5;
      sub_19CD433C0(&v39, v38);
      swift_bridgeObjectRetain();
      v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_19CD13D40(v38, 0x6C725565676170, 0xE700000000000000, v20);
      v41 = a2;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_19CD143A0(0x6C725565676170, 0xE700000000000000, &v39);
  }
  sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
LABEL_8:
  if (v3)
  {
    *((_QWORD *)&v40 + 1) = v16;
    *(_QWORD *)&v39 = v4;
    *((_QWORD *)&v39 + 1) = v3;
    sub_19CD433C0(&v39, v38);
    swift_bridgeObjectRetain();
    v21 = v41;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(v38, 0xD000000000000014, 0x800000019D06CE20, v22);
    v41 = v21;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    sub_19CD143A0(0xD000000000000014, 0x800000019D06CE20, &v39);
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    if ((v8 & 1) != 0)
    {
LABEL_10:
      sub_19CD143A0(0xD000000000000018, 0x800000019D070CD0, &v39);
      sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
      if ((v10 & 1) == 0)
        goto LABEL_11;
      goto LABEL_18;
    }
  }
  *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v39 = v7;
  sub_19CD433C0(&v39, v38);
  v33 = v41;
  v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v38, 0xD000000000000018, 0x800000019D070CD0, v34);
  v41 = v33;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_11:
    *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v39 = v9;
    sub_19CD433C0(&v39, v38);
    v23 = v41;
    v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(v38, 0xD000000000000019, 0x800000019D070CF0, v24);
    v41 = v23;
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_12;
    goto LABEL_19;
  }
LABEL_18:
  sub_19CD143A0(0xD000000000000019, 0x800000019D070CF0, &v39);
  sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
  if ((v12 & 1) == 0)
  {
LABEL_12:
    *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v39 = v11;
    sub_19CD433C0(&v39, v38);
    v25 = v41;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(v38, 0xD000000000000017, 0x800000019D070D10, v26);
    v41 = v25;
    swift_bridgeObjectRelease();
    if (v13 != 2)
      goto LABEL_13;
    goto LABEL_20;
  }
LABEL_19:
  sub_19CD143A0(0xD000000000000017, 0x800000019D070D10, &v39);
  sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
  if (v13 != 2)
  {
LABEL_13:
    *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEAFA0];
    LOBYTE(v39) = v13 & 1;
    sub_19CD433C0(&v39, v38);
    v27 = v41;
    v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD13D40(v38, 0xD000000000000019, 0x800000019D070D30, v28);
    v41 = v27;
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
      goto LABEL_14;
LABEL_21:
    sub_19CD143A0(0xD00000000000001ALL, 0x800000019D070D50, &v39);
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    if ((v37 & 1) == 0)
      goto LABEL_15;
LABEL_22:
    sub_19CD143A0(0xD000000000000018, 0x800000019D070D70, &v39);
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    return v41;
  }
LABEL_20:
  sub_19CD143A0(0xD000000000000019, 0x800000019D070D30, &v39);
  sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
  if ((v36 & 1) != 0)
    goto LABEL_21;
LABEL_14:
  *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v39 = v14;
  sub_19CD433C0(&v39, v38);
  v29 = v41;
  v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v38, 0xD00000000000001ALL, 0x800000019D070D50, v30);
  v41 = v29;
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    goto LABEL_22;
LABEL_15:
  *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v39 = v15;
  sub_19CD433C0(&v39, v38);
  v31 = v41;
  v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_19CD13D40(v38, 0xD000000000000018, 0x800000019D070D70, v32);
  swift_bridgeObjectRelease();
  return v31;
}

void sub_19CE34220(char *a1)
{
  sub_19CE82074(*a1);
}

void sub_19CE3422C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE34274()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE3430C()
{
  __asm { BR              X10 }
}

uint64_t sub_19CE34344()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE343C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE3440C()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE344A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE35D50();
  *a1 = result;
  return result;
}

uint64_t sub_19CE344D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CE344FC + 4 * byte_19D05807F[*v0]))();
}

void sub_19CE344FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C46646C756F6873;
  a1[1] = 0xEB00000000687375;
}

void sub_19CE34520(_QWORD *a1@<X8>)
{
  *a1 = 0x73646C656966;
  a1[1] = 0xE600000000000000;
}

void sub_19CE34538(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6964756C636E69;
  a1[1] = 0xEF73646C65694667;
}

uint64_t sub_19CE34578()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CE345A4 + 4 * byte_19D058084[*v0]))(0x6369706F74, 0xE500000000000000);
}

uint64_t sub_19CE345A4()
{
  return 0x6C46646C756F6873;
}

uint64_t sub_19CE345C4()
{
  return 0x73646C656966;
}

uint64_t sub_19CE345D8()
{
  return 0x6E6964756C636E69;
}

uint64_t sub_19CE34614@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE35D50();
  *a1 = result;
  return result;
}

void sub_19CE34638(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_19CE34644()
{
  sub_19CE35548();
  return sub_19CFE0A48();
}

uint64_t sub_19CE3466C()
{
  sub_19CE35548();
  return sub_19CFE0A54();
}

uint64_t MetricsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F750);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE35548();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  LOBYTE(v29[0]) = 0;
  if ((sub_19CFE04CC() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
    LOBYTE(v26[0]) = 0;
    sub_19CE3565C(&qword_1EE43BE88, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
    sub_19CFE04B4();
    v11 = v29[0];
    v25 = v29[1];
  }
  else
  {
    v25 = 0;
    v11 = 0;
  }
  LOBYTE(v29[0]) = 1;
  if ((sub_19CFE04CC() & 1) != 0)
  {
    LOBYTE(v29[0]) = 1;
    v12 = sub_19CFE049C();
  }
  else
  {
    v12 = 0;
  }
  LOBYTE(v26[0]) = 2;
  sub_19CE080B8();
  sub_19CFE04B4();
  v24 = v11;
  JSONObject.dictionary.getter((uint64_t)v26);
  v13 = v27;
  if (!v27)
  {
    sub_19CCECFE4((uint64_t)v26, &qword_1EE43C1C8);
    goto LABEL_14;
  }
  LODWORD(v23) = v12;
  v14 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v15 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v13, v14);
  sub_19CDC6248((uint64_t)v26);
  if (!v15)
  {
LABEL_14:
    v24 = sub_19CFE01B4();
    swift_allocError();
    v17 = v16;
    v23 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43A530) + 48);
    *v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v18 = (_QWORD *)sub_19CFE09B8();
    sub_19CE35478(2, v18, (uint64_t)&type metadata for MetricsData.CodingKeys, (uint64_t (*)(void))sub_19CE35548);
    swift_bridgeObjectRelease();
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFE019C();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v24 - 8) + 104))(v17, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_19CD3E3F8((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v26[0]) = 3;
  swift_bridgeObjectRetain();
  if ((sub_19CFE04CC() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F788);
    v30 = 3;
    sub_19CD09560(&qword_1EE43F790, &qword_1EE43F788, sub_19CE355F4, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    v22 = sub_19CD42B88(v26[0]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9E8];
  }
  LOBYTE(v26[0]) = 4;
  if ((sub_19CFE04CC() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F760);
    v30 = 4;
    sub_19CD09560(&qword_1EE43F768, &qword_1EE43F760, sub_19CE3558C, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    sub_19CFE04B4();
    v19 = sub_19CD42BA4(v26[0]);
    swift_bridgeObjectRelease();
    sub_19CD3E3F8((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    sub_19CD3E3F8((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v19 = MEMORY[0x1E0DEE9E8];
  }
  v20 = v25;
  swift_bridgeObjectRetain();
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v20;
  *(_BYTE *)(a2 + 16) = v23 & 1;
  v21 = v22;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  int v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F7B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v24 = *((unsigned __int8 *)v1 + 16);
  v10 = v1[3];
  v20[2] = v1[4];
  v21 = v10;
  v20[1] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE35548();
  sub_19CFE0A24();
  v23[0] = v9;
  v23[1] = v8;
  v25 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2550);
  sub_19CE3565C((unint64_t *)&qword_1EE43F7B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
  v11 = v22;
  sub_19CFE0568();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v13 = v21;
  v14 = v4;
  LOBYTE(v23[0]) = 1;
  sub_19CFE0544();
  v23[3] = &type metadata for FoundationValue;
  v23[4] = &off_1E3DCC5B0;
  v15 = swift_allocObject();
  v23[0] = v15;
  *(_QWORD *)(v15 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  *(_QWORD *)(v15 + 16) = v13;
  v25 = 2;
  sub_19CE081CC();
  swift_bridgeObjectRetain();
  sub_19CFE0568();
  sub_19CD3E3F8((uint64_t)v23);
  v16 = swift_bridgeObjectRetain();
  v17 = sub_19CDFE1E8(v16);
  swift_bridgeObjectRelease();
  v23[0] = v17;
  v25 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F788);
  sub_19CD09560(&qword_1EE43F7C0, &qword_1EE43F788, sub_19CE356E0, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0568();
  swift_release();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_19CDFE1DC(v18);
  swift_bridgeObjectRelease();
  v23[0] = v19;
  v25 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F760);
  sub_19CD09560(&qword_1EE43F7D8, &qword_1EE43F760, sub_19CE35748, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
  sub_19CFE0568();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v3);
}

uint64_t sub_19CE35004@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MetricsData.init(from:)(a1, a2);
}

uint64_t sub_19CE35018(_QWORD *a1)
{
  return MetricsData.encode(to:)(a1);
}

uint64_t sub_19CE3502C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CE2412C(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_19CD433C0(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_19CD3FD1C(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_19CD141BC();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_19CD433C0(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_19CE2412C(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_19CD433C0(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_19CD3FD1C(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_19CD13ED8(v37, 1);
        v39 = sub_19CD3FD1C(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_19CD436B0((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
        sub_19CD433C0(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_19CD433C0(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_19CE2412C(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CD13ED8(v19, a4 & 1);
  v21 = sub_19CD3FD1C(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_19CD436B0((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_19CD433C0(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

_QWORD *sub_19CE35380(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  char v12;
  ValueMetadata *v13;
  unint64_t v14;

  sub_19CE35D40(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a4 = sub_19CCEF4F8(0, a4[2] + 1, 1, a4);
  v9 = a4[2];
  v8 = a4[3];
  if (v9 >= v8 >> 1)
    a4 = sub_19CCEF4F8((_QWORD *)(v8 > 1), v9 + 1, 1, a4);
  v13 = &type metadata for OpenCodingKey;
  v14 = sub_19CDD5ED8();
  *(_QWORD *)&v11 = a1;
  *((_QWORD *)&v11 + 1) = a2;
  v12 = a3 & 1;
  a4[2] = v9 + 1;
  sub_19CCD14C4(&v11, (uint64_t)&a4[5 * v9 + 4]);
  return a4;
}

_QWORD *sub_19CE35464(char a1, _QWORD *a2)
{
  return sub_19CE35478(a1, a2, (uint64_t)&type metadata for ImpressionMetrics.CodingKeys, (uint64_t (*)(void))sub_19CE35D98);
}

_QWORD *sub_19CE35478(char a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a2 = sub_19CCEF4F8(0, a2[2] + 1, 1, a2);
  v9 = a2[2];
  v8 = a2[3];
  if (v9 >= v8 >> 1)
    a2 = sub_19CCEF4F8((_QWORD *)(v8 > 1), v9 + 1, 1, a2);
  v12 = a3;
  v13 = a4();
  LOBYTE(v11) = a1;
  a2[2] = v9 + 1;
  sub_19CCD14C4(&v11, (uint64_t)&a2[5 * v9 + 4]);
  return a2;
}

unint64_t sub_19CE35548()
{
  unint64_t result;

  result = qword_1EE43F758;
  if (!qword_1EE43F758)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D058230, &type metadata for MetricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F758);
  }
  return result;
}

uint64_t sub_19CE3558C()
{
  return sub_19CD09560(&qword_1EE43F770, &qword_1EE43F778, (uint64_t (*)(void))sub_19CE355B0, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE355B0()
{
  unint64_t result;

  result = qword_1EE43F780;
  if (!qword_1EE43F780)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsFieldExclusionRequest, &type metadata for MetricsFieldExclusionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE43F780);
  }
  return result;
}

uint64_t sub_19CE355F4()
{
  return sub_19CD09560(&qword_1EE43F798, &qword_1EE43F7A0, (uint64_t (*)(void))sub_19CE35618, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE35618()
{
  unint64_t result;

  result = qword_1EE43F7A8;
  if (!qword_1EE43F7A8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsFieldInclusionRequest, &type metadata for MetricsFieldInclusionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE43F7A8);
  }
  return result;
}

uint64_t sub_19CE3565C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB2550);
    v8 = a2;
    result = MEMORY[0x1A1ADBD7C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19CE356BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CE356E0()
{
  return sub_19CD09560(&qword_1EE43F7C8, &qword_1EE43F7A0, (uint64_t (*)(void))sub_19CE35704, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE35704()
{
  unint64_t result;

  result = qword_1EE43F7D0;
  if (!qword_1EE43F7D0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsFieldInclusionRequest, &type metadata for MetricsFieldInclusionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE43F7D0);
  }
  return result;
}

uint64_t sub_19CE35748()
{
  return sub_19CD09560(&qword_1EE43F7E0, &qword_1EE43F778, (uint64_t (*)(void))sub_19CE3576C, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_19CE3576C()
{
  unint64_t result;

  result = qword_1EE43F7E8;
  if (!qword_1EE43F7E8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsFieldExclusionRequest, &type metadata for MetricsFieldExclusionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE43F7E8);
  }
  return result;
}

uint64_t assignWithCopy for MetricsData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for MetricsData.Configuration(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for MetricsData.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  return a1;
}

_QWORD *assignWithCopy for MetricsData.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      v6 = a2[5];
      a1[4] = v4;
      a1[5] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[5];
  a1[4] = v4;
  a1[5] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MetricsData.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsData.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsData.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsData.Configuration()
{
  return &type metadata for MetricsData.Configuration;
}

uint64_t storeEnumTagSinglePayload for MetricsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CE35BE8 + 4 * byte_19D05808E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CE35C1C + 4 * byte_19D058089[v4]))();
}

uint64_t sub_19CE35C1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE35C24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE35C2CLL);
  return result;
}

uint64_t sub_19CE35C38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE35C40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CE35C44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE35C4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsData.CodingKeys()
{
  return &type metadata for MetricsData.CodingKeys;
}

unint64_t sub_19CE35C6C()
{
  unint64_t result;

  result = qword_1EE43F7F0;
  if (!qword_1EE43F7F0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D058208, &type metadata for MetricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F7F0);
  }
  return result;
}

unint64_t sub_19CE35CB4()
{
  unint64_t result;

  result = qword_1EE43F7F8;
  if (!qword_1EE43F7F8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D058140, &type metadata for MetricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F7F8);
  }
  return result;
}

unint64_t sub_19CE35CFC()
{
  unint64_t result;

  result = qword_1EE43F800;
  if (!qword_1EE43F800)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D058168, &type metadata for MetricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F800);
  }
  return result;
}

uint64_t sub_19CE35D40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_19CE35D50()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_19CE35D98()
{
  unint64_t result;

  result = qword_1EE43F808;
  if (!qword_1EE43F808)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D068450, &type metadata for ImpressionMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43F808);
  }
  return result;
}

uint64_t sub_19CE35DDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  _BYTE v8[32];

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_19CD3FD1C(0x6369706F74, 0xE500000000000000);
    if ((v5 & 1) != 0)
    {
      sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v8);
      if ((swift_dynamicCast() & 1) != 0)
        return v7;
    }
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t Bag.Profile.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Bag.Profile.name.modify())()
{
  return nullsub_1;
}

uint64_t Bag.Profile.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Bag.Profile.version.modify())()
{
  return nullsub_1;
}

id sub_19CE35F08()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 6775106, 0xE300000000000000);
  qword_1ECEB5298 = (uint64_t)result;
  return result;
}

id Bag.isExpired.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isExpired);
}

void static Bag.Profile.iosAppStore.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7453707041;
  a1[1] = 0xE800000000000000;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

void static Bag.Profile.macAppStore.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x745370704163614DLL;
  a1[1] = 0xEB0000000065726FLL;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

void static Bag.Profile.podcasts.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7374736163646F50;
  a1[1] = 0xE800000000000000;
  a1[2] = 49;
  a1[3] = 0xE100000000000000;
}

uint64_t sub_19CE36098()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for _BagForAMSBagProtocolRule()
{
  return &type metadata for _BagForAMSBagProtocolRule;
}

ValueMetadata *type metadata accessor for _AMSBagProtocolForBagRule()
{
  return &type metadata for _AMSBagProtocolForBagRule;
}

uint64_t JSStrongReference.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id JSStrongReference.referent.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void **assignWithCopy for JSStrongReference(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for JSStrongReference(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for JSStrongReference()
{
  return &type metadata for JSStrongReference;
}

uint64_t sub_19CE3616C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_url;
  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CF50);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_db) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CF58);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_transactionCount) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D070);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_DWORD *)(v8 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9JetEngine40JetPackAssetDiskCacheSQLiteMetadataStore_keepAlive) = v8;
  return v1;
}

uint64_t sub_19CE36270@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t inited;
  sqlite3_stmt *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  _QWORD v27[5];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];
  _QWORD v33[5];
  unsigned int v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v33[1] = 0xE000000000000000;
  MEMORY[0x1A1AD9850](64);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_19CFDF698();
  v33[3] = MEMORY[0x1E0DEDBC8];
  v33[4] = &off_1E3DDBCD8;
  v33[0] = a2;
  sub_19CCDC63C((uint64_t)v33, (uint64_t)v32);
  v7 = sub_19CD58CC8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_19CD58CC8((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  sub_19CCC290C((uint64_t)v32, (uint64_t)&v7[5 * v9 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)v33);
  v10 = sub_19CFDF698();
  v33[0] = 0;
  MEMORY[0x1E0C80A78](v10, v11);
  v27[2] = a1;
  v27[3] = v33;
  result = (uint64_t)sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE37A68, (uint64_t)v27, v12, v31);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v33[0];
    if (v33[0])
    {
      type metadata accessor for SQLiteStatement();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v14;
      *(_QWORD *)(inited + 24) = 0;
      sub_19CCDC39C((uint64_t)v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = *(sqlite3_stmt **)(inited + 16);
      v17 = sqlite3_step(v16);
      if (qword_1ECEB12A8 != -1)
        swift_once();
      if (sub_19CCE4984(v17, qword_1ECEB52B8))
      {
        if (v17 == 100)
        {
          sub_19CCE1A00(inited, (uint64_t)&v34);
          v29 = v34;
          v28 = v35;
          v18 = v36;
          v19 = v37;
          v20 = v38;
          v21 = v39;
          v22 = v40;
          v23 = v41;
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          result = swift_bridgeObjectRelease();
          v24 = 0x100000000;
          if (!v28)
            v24 = 0;
          v25 = v24 | v29;
        }
        else
        {
          swift_setDeallocating();
          sqlite3_finalize(v16);
          result = swift_bridgeObjectRelease();
          v25 = 0;
          v18 = 0;
          v20 = 0;
          v21 = 0;
          v22 = 0;
          v23 = 0;
          v19 = 1;
        }
        *a3 = v25;
        a3[1] = v18;
        a3[2] = v19;
        a3[3] = v20;
        a3[4] = v21;
        a3[5] = v22;
        a3[6] = v23;
      }
      else
      {
        sub_19CE379F8();
        swift_allocError();
        *v26 = v17;
        swift_willThrow();
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19CE36634@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  sqlite3_stmt *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int *v16;
  _QWORD v17[5];
  uint64_t v18;
  _OWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v18 = 0;
  v17[2] = a1;
  v17[3] = &v18;
  result = (uint64_t)sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE379E0, (uint64_t)v17, 0xD000000000000034, 0x800000019D070F90);
  if (!v2)
  {
    v5 = v18;
    if (v18)
    {
      type metadata accessor for SQLiteStatement();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v5;
      *(_QWORD *)(inited + 24) = 0;
      sub_19CCDC39C(MEMORY[0x1E0DEE9D8]);
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v8 = *(sqlite3_stmt **)(inited + 16);
        v9 = sqlite3_step(v8);
        if (qword_1ECEB12A8 != -1)
          swift_once();
        if (!sub_19CCE4984(v9, qword_1ECEB52B8))
        {
          sub_19CE379F8();
          swift_allocError();
          *v16 = v9;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          return swift_bridgeObjectRelease();
        }
        if (v9 != 100)
          break;
        sub_19CCE1A00(inited, (uint64_t)v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_19CED641C(0, v7[2] + 1, 1, v7);
        v11 = v7[2];
        v10 = v7[3];
        if (v11 >= v10 >> 1)
          v7 = sub_19CED641C((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
        v7[2] = v11 + 1;
        v12 = &v7[7 * v11];
        v13 = v19[0];
        v14 = v19[1];
        v15 = v19[2];
        v12[10] = v20;
        *((_OWORD *)v12 + 3) = v14;
        *((_OWORD *)v12 + 4) = v15;
        *((_OWORD *)v12 + 2) = v13;
      }
      swift_setDeallocating();
      sqlite3_finalize(v8);
      result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19CE36878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  sqlite3_stmt *v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int *v27;
  _QWORD v28[6];
  uint64_t v29;
  _BYTE v30[40];
  _QWORD v31[5];
  _OWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  MEMORY[0x1A1AD9850](71);
  v28[5] = 0;
  v29 = 0xE000000000000000;
  sub_19CFDF698();
  v31[3] = MEMORY[0x1E0DEA968];
  v31[4] = &off_1E3DDAF00;
  v31[0] = a2;
  v31[1] = a3;
  sub_19CCDC63C((uint64_t)v31, (uint64_t)v30);
  swift_bridgeObjectRetain();
  v9 = sub_19CD58CC8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD58CC8((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  sub_19CCC290C((uint64_t)v30, (uint64_t)&v9[5 * v11 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)v31);
  v12 = sub_19CFDF698();
  v31[0] = 0;
  MEMORY[0x1E0C80A78](v12, v13);
  v28[2] = a1;
  v28[3] = v31;
  result = (uint64_t)sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE37A68, (uint64_t)v28, v14, v29);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v31[0];
    if (v31[0])
    {
      type metadata accessor for SQLiteStatement();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v16;
      *(_QWORD *)(inited + 24) = 0;
      sub_19CCDC39C((uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v19 = *(sqlite3_stmt **)(inited + 16);
        v20 = sqlite3_step(v19);
        if (qword_1ECEB12A8 != -1)
          swift_once();
        if (!sub_19CCE4984(v20, qword_1ECEB52B8))
        {
          sub_19CE379F8();
          swift_allocError();
          *v27 = v20;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
          return swift_bridgeObjectRelease();
        }
        if (v20 != 100)
          break;
        sub_19CCE1A00(inited, (uint64_t)v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_19CED641C(0, v18[2] + 1, 1, v18);
        v22 = v18[2];
        v21 = v18[3];
        if (v22 >= v21 >> 1)
          v18 = sub_19CED641C((_QWORD *)(v21 > 1), v22 + 1, 1, v18);
        v18[2] = v22 + 1;
        v23 = &v18[7 * v22];
        v24 = v32[0];
        v25 = v32[1];
        v26 = v32[2];
        v23[10] = v33;
        *((_OWORD *)v23 + 3) = v25;
        *((_OWORD *)v23 + 4) = v26;
        *((_OWORD *)v23 + 2) = v24;
      }
      swift_setDeallocating();
      sqlite3_finalize(v19);
      result = swift_bridgeObjectRelease();
      *a4 = v18;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19CE36C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t inited;
  int v21;
  uint64_t v22;
  __int128 v23;
  _OWORD *v24;
  int *v25;
  int *v26;
  _QWORD v27[4];
  _OWORD *v28;
  __int128 v29;
  _BYTE v30[40];
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  _OWORD v34[3];
  uint64_t v35;
  _BYTE v36[16];
  _BYTE v37[16];
  _BYTE v38[16];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v31 = 0;
  *((_QWORD *)&v31 + 1) = 0xE000000000000000;
  MEMORY[0x1A1AD9850](84);
  v29 = v31;
  sub_19CFDF698();
  sub_19CCC290C(a2 + 8, (uint64_t)v38, &qword_1ECEB2550);
  sub_19CCC290C((uint64_t)v38, (uint64_t)&v39, &qword_1ECEB2550);
  v7 = MEMORY[0x1E0DEA968];
  v28 = a3;
  if (*((_QWORD *)&v39 + 1))
  {
    v31 = v39;
    *((_QWORD *)&v32 + 1) = MEMORY[0x1E0DEA968];
    v33 = &off_1E3DDAF00;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  sub_19CCDC63C((uint64_t)&v31, (uint64_t)v30);
  sub_19CD0F7F4((uint64_t)v38);
  v8 = sub_19CD58CC8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_19CD58CC8((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v10 + 1;
  sub_19CCC290C((uint64_t)v30, (uint64_t)&v8[5 * v10 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)&v31);
  sub_19CFDF698();
  sub_19CCC290C(a2 + 24, (uint64_t)v37, &qword_1ECEB2550);
  sub_19CCC290C((uint64_t)v37, (uint64_t)&v40, &qword_1ECEB2550);
  if (*((_QWORD *)&v40 + 1))
  {
    v31 = v40;
    *((_QWORD *)&v32 + 1) = v7;
    v33 = &off_1E3DDAF00;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  sub_19CCDC63C((uint64_t)&v31, (uint64_t)v30);
  sub_19CD0F7F4((uint64_t)v37);
  v12 = v8[2];
  v11 = v8[3];
  if (v12 >= v11 >> 1)
    v8 = sub_19CD58CC8((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
  v8[2] = v12 + 1;
  sub_19CCC290C((uint64_t)v30, (uint64_t)&v8[5 * v12 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)&v31);
  sub_19CFDF698();
  sub_19CCC290C(a2 + 40, (uint64_t)v36, &qword_1ECEB05B8);
  sub_19CCC290C((uint64_t)v36, (uint64_t)&v41, &qword_1ECEB05B8);
  if (*((_QWORD *)&v41 + 1) >> 60 == 15)
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  else
  {
    v31 = v41;
    *((_QWORD *)&v32 + 1) = MEMORY[0x1E0CB0338];
    v33 = &off_1E3DC6A50;
  }
  sub_19CCDC63C((uint64_t)&v31, (uint64_t)v30);
  sub_19CE37A3C((uint64_t)v36);
  v14 = v8[2];
  v13 = v8[3];
  if (v14 >= v13 >> 1)
    v8 = sub_19CD58CC8((_QWORD *)(v13 > 1), v14 + 1, 1, v8);
  v8[2] = v14 + 1;
  sub_19CCC290C((uint64_t)v30, (uint64_t)&v8[5 * v14 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)&v31);
  v15 = sub_19CFDF698();
  *(_QWORD *)&v31 = 0;
  MEMORY[0x1E0C80A78](v15, v16);
  v27[2] = a1;
  v27[3] = &v31;
  result = (uint64_t)sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE37A68, (uint64_t)v27, v17, *((uint64_t *)&v29 + 1));
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v19 = v31;
  if ((_QWORD)v31)
  {
    type metadata accessor for SQLiteStatement();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v19;
    *(_QWORD *)(inited + 24) = 0;
    sub_19CCDC39C((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
    if (qword_1ECEB12A8 != -1)
      swift_once();
    if (sub_19CCE4984(v21, qword_1ECEB52B8))
    {
      v22 = sub_19CCD7360((uint64_t)&unk_1E3DC8270);
      if (sub_19CCE4984(v21, v22))
      {
        swift_bridgeObjectRelease();
        sub_19CCE1A00(inited, (uint64_t)v34);
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        result = swift_bridgeObjectRelease();
        v23 = v34[1];
        v24 = v28;
        *v28 = v34[0];
        v24[1] = v23;
        v24[2] = v34[2];
        *((_QWORD *)v24 + 6) = v35;
        return result;
      }
      sub_19CE379F8();
      swift_allocError();
      *v26 = v21;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CE379F8();
      swift_allocError();
      *v25 = v21;
      swift_willThrow();
    }
    swift_setDeallocating();
    sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_19CE3720C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t inited;
  int v14;
  uint64_t v15;
  int *v16;
  int *v17;
  _QWORD v18[6];
  uint64_t v19;
  _BYTE v20[40];
  _QWORD v21[6];

  v21[5] = *MEMORY[0x1E0C80C00];
  v21[1] = 0xE000000000000000;
  MEMORY[0x1A1AD9850](37);
  v18[5] = 0;
  v19 = 0xE000000000000000;
  sub_19CFDF698();
  v21[3] = MEMORY[0x1E0DEDBC8];
  v21[4] = &off_1E3DDBCD8;
  v21[0] = a2;
  sub_19CCDC63C((uint64_t)v21, (uint64_t)v20);
  v5 = sub_19CD58CC8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_19CD58CC8((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  sub_19CCC290C((uint64_t)v20, (uint64_t)&v5[5 * v7 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  v8 = sub_19CCC2950((uint64_t)v21);
  v21[0] = 0;
  MEMORY[0x1E0C80A78](v8, v9);
  v18[2] = a1;
  v18[3] = v21;
  result = sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE37A68, (uint64_t)v18, v10, v19);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v21[0];
    if (v21[0])
    {
      type metadata accessor for SQLiteStatement();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v12;
      *(_QWORD *)(inited + 24) = 0;
      sub_19CCDC39C((uint64_t)v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
      if (qword_1ECEB12A8 != -1)
        swift_once();
      if (sub_19CCE4984(v14, qword_1ECEB52B8))
      {
        v15 = sub_19CCD7360((uint64_t)&unk_1E3DC8298);
        if (!sub_19CCE4984(v14, v15))
        {
          sub_19CE379F8();
          swift_allocError();
          *v16 = v14;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_19CE379F8();
        swift_allocError();
        *v17 = v14;
        swift_willThrow();
      }
      swift_setDeallocating();
      sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_19CE37518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t inited;
  int v22;
  uint64_t v23;
  __int128 v24;
  int *v25;
  int *v26;
  _QWORD v27[5];
  __int128 v28;
  _BYTE v29[40];
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;
  _OWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v30 = 0;
  *((_QWORD *)&v30 + 1) = 0xE000000000000000;
  MEMORY[0x1A1AD9850](60);
  v28 = v30;
  sub_19CFDF698();
  if (a3 >> 60 == 15)
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  else
  {
    *((_QWORD *)&v31 + 1) = MEMORY[0x1E0CB0338];
    v32 = &off_1E3DC6A50;
    *(_QWORD *)&v30 = a2;
    *((_QWORD *)&v30 + 1) = a3;
  }
  sub_19CCDC63C((uint64_t)&v30, (uint64_t)v29);
  sub_19CD61F18(a2, a3);
  v11 = sub_19CD58CC8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD58CC8((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  sub_19CCC290C((uint64_t)v29, (uint64_t)&v11[5 * v13 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)&v30);
  sub_19CFDF698();
  *((_QWORD *)&v31 + 1) = MEMORY[0x1E0DEDBC8];
  v32 = &off_1E3DDBCD8;
  LODWORD(v30) = a4;
  sub_19CCDC63C((uint64_t)&v30, (uint64_t)v29);
  v15 = v11[2];
  v14 = v11[3];
  if (v15 >= v14 >> 1)
    v11 = sub_19CD58CC8((_QWORD *)(v14 > 1), v15 + 1, 1, v11);
  v11[2] = v15 + 1;
  sub_19CCC290C((uint64_t)v29, (uint64_t)&v11[5 * v15 + 4], &qword_1ECEB0B00);
  sub_19CFDF698();
  sub_19CCC2950((uint64_t)&v30);
  v16 = sub_19CFDF698();
  *(_QWORD *)&v30 = 0;
  MEMORY[0x1E0C80A78](v16, v17);
  v27[2] = a1;
  v27[3] = &v30;
  result = (uint64_t)sub_19CFCA650((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_19CE37A68, (uint64_t)v27, v18, *((uint64_t *)&v28 + 1));
  if (v5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v20 = v30;
  if ((_QWORD)v30)
  {
    type metadata accessor for SQLiteStatement();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v20;
    *(_QWORD *)(inited + 24) = 0;
    sub_19CCDC39C((uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = sqlite3_step(*(sqlite3_stmt **)(inited + 16));
    if (qword_1ECEB12A8 != -1)
      swift_once();
    if (sub_19CCE4984(v22, qword_1ECEB52B8))
    {
      v23 = sub_19CCD7360((uint64_t)&unk_1E3DC8248);
      if (sub_19CCE4984(v22, v23))
      {
        swift_bridgeObjectRelease();
        sub_19CCE1A00(inited, (uint64_t)v33);
        swift_setDeallocating();
        sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
        result = swift_bridgeObjectRelease();
        v24 = v33[1];
        *(_OWORD *)a5 = v33[0];
        *(_OWORD *)(a5 + 16) = v24;
        *(_OWORD *)(a5 + 32) = v33[2];
        *(_QWORD *)(a5 + 48) = v34;
        return result;
      }
      sub_19CE379F8();
      swift_allocError();
      *v26 = v22;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CE379F8();
      swift_allocError();
      *v25 = v22;
      swift_willThrow();
    }
    swift_setDeallocating();
    sqlite3_finalize(*(sqlite3_stmt **)(inited + 16));
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_19CE37988(_QWORD *a1@<X8>)
{
  ProcessAssertion.init(explanation:domain:name:)(a1);
}

uint64_t sub_19CE379D8()
{
  return type metadata accessor for JetPackAssetDiskCacheSQLiteMetadataStore();
}

uint64_t sub_19CE379E0@<X0>(const char *a1@<X0>, int *a2@<X8>)
{
  uint64_t v2;

  return sub_19CE8B560(a1, *(_QWORD *)(v2 + 16), *(sqlite3_stmt ***)(v2 + 24), a2);
}

unint64_t sub_19CE379F8()
{
  unint64_t result;

  result = qword_1EE43F810;
  if (!qword_1EE43F810)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D063774, &type metadata for SQLiteError);
    atomic_store(result, (unint64_t *)&qword_1EE43F810);
  }
  return result;
}

uint64_t sub_19CE37A3C(uint64_t a1)
{
  sub_19CD61F18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_19CE37A68@<X0>(const char *a1@<X0>, int *a2@<X8>)
{
  return sub_19CE379E0(a1, a2);
}

id LocalizerFactory.jsExport.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return sub_19CDF59A4((uint64_t)v7, v8, a1, a2);
}

uint64_t dispatch thunk of LocalizerFactory.jsExport.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizerFactory.localizer(forLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CCBE344;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t static ComponentID.forItems(in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v6;
  v7[5] = v5;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = sub_19CE37D5C;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE37C20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v12 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFE0598();
  sub_19CFDF698();
  result = swift_bridgeObjectRelease();
  *a6 = a2;
  a6[1] = a3;
  a6[2] = a4;
  a6[3] = a5;
  a6[4] = 35;
  a6[5] = 0xE100000000000000;
  v14 = v12 + 1;
  if (v12 == -1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CFB3A74((uint64_t)"JetEngine/ComponentID.swift", 27, 2, 49, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v14 = 0;
  }
  *a1 = v14;
  return result;
}

uint64_t sub_19CE37D30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE37D5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_19CE37C20(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void __swiftcall ComponentID.init(at:in:)(JetEngine::ComponentID *__return_ptr retstr, Swift::UInt64 at, JetEngine::ShelfID in)
{
  uint64_t v4;
  void *v5;
  JetEngine::PageID v6;

  v6 = *(JetEngine::PageID *)in.parent.value._countAndFlagsBits;
  v4 = *(_QWORD *)(in.parent.value._countAndFlagsBits + 16);
  v5 = *(void **)(in.parent.value._countAndFlagsBits + 24);
  sub_19CFE0598();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  retstr->parent.parent = v6;
  retstr->parent.value._countAndFlagsBits = v4;
  retstr->parent.value._object = v5;
  retstr->value._countAndFlagsBits = 35;
  retstr->value._object = (void *)0xE100000000000000;
}

void __swiftcall ComponentID.init(randomIn:)(JetEngine::ComponentID *__return_ptr retstr, JetEngine::ShelfID randomIn)
{
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  JetEngine::PageID v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  countAndFlagsBits = randomIn.parent.value._countAndFlagsBits;
  v4 = sub_19CFDEFA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(JetEngine::PageID *)countAndFlagsBits;
  v9 = *(_QWORD *)(countAndFlagsBits + 16);
  v10 = *(void **)(countAndFlagsBits + 24);
  sub_19CFDEF9C();
  v11 = sub_19CFDEF90();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v22 = v11;
  v23 = v13;
  v20 = 45;
  v21 = 0xE100000000000000;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_19CD41144();
  v14 = sub_19CFE0004();
  v16 = v15;
  swift_bridgeObjectRelease();
  retstr->parent.parent = v17;
  retstr->parent.value._countAndFlagsBits = v9;
  retstr->parent.value._object = v10;
  retstr->value._countAndFlagsBits = v14;
  retstr->value._object = v16;
}

__n128 ComponentID.init<A>(id:kind:in:)@<Q0>(uint64_t a1@<X2>, __n128 *a2@<X3>, uint64_t a3@<X4>, __n128 *a4@<X8>)
{
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  __n128 v10;
  unint64_t v11;
  unint64_t v12;

  v10 = *a2;
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u64[1];
  sub_19CFDF7F4();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  result = v10;
  *a4 = v10;
  a4[1].n128_u64[0] = v7;
  a4[1].n128_u64[1] = v8;
  a4[2].n128_u64[0] = v11;
  a4[2].n128_u64[1] = v12;
  return result;
}

void sub_19CE37FD0(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[4];
  uint64_t v31;

  v7 = sub_19CFE01A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CE35380(0x746E65726170, 0xE600000000000000, 1, a2);
  sub_19CFCD2F0(a1, v12, v30);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = v30[3];
    v14 = *a1;
    v15 = a1[1];
    v16 = *(_QWORD *)(*a1 + 16);
    if (v15 == v16)
    {
      sub_19CE35380(0x65756C6176, 0xE500000000000000, 1, a2);
      swift_bridgeObjectRelease();
      sub_19CFE019C();
      v17 = sub_19CFE01B4();
      swift_allocError();
      v19 = v18;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v18, v11, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC458], v17);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v15 >= v16)
    {
      __break(1u);
    }
    else
    {
      v31 = v30[2];
      v20 = (_QWORD *)(v14 + 32 * v15);
      v21 = v20[4];
      v22 = v20[5];
      v23 = v20[7];
      v28 = v20[6];
      v29 = v30[0];
      v24 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = v15 + 1;
      v25 = MEMORY[0x1A1AD9838](v21, v22, v28, v23);
      v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a3 = v29;
      a3[1] = v24;
      a3[2] = v31;
      a3[3] = v13;
      a3[4] = v25;
      a3[5] = v27;
    }
  }
}

uint64_t sub_19CE38234()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ComponentID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v38[4];
  uint64_t *v39;

  v5 = sub_19CFE01A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  v10 = sub_19CFE06AC();
  v12 = v11;
  v39 = a2;
  v30 = 45;
  v31 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v10, v11);
  *(&v25 - 2) = (uint64_t)&v30;
  swift_bridgeObjectRetain();
  v13 = sub_19CD3C1F0(0x7FFFFFFFFFFFFFFFLL, 1, sub_19CD3C68C, (uint64_t)(&v25 - 4), v10, v12);
  swift_bridgeObjectRelease();
  v36 = v13;
  v37 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = (_QWORD *)sub_19CFE09B8();
  sub_19CE37FD0(&v36, v14, &v30);
  v27 = v30;
  v28 = v31;
  v16 = v33;
  v25 = v34;
  v26 = v32;
  v29 = v35;
  v17 = v37;
  v18 = *(_QWORD *)(v13 + 16);
  result = swift_bridgeObjectRelease();
  if (v17 == v18)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    v19 = v39;
    v20 = v28;
    *v39 = v27;
    v19[1] = v20;
    v19[2] = v26;
    v19[3] = v16;
    v21 = v29;
    v19[4] = v25;
    v19[5] = v21;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v17 >= v18)
  {
    __break(1u);
  }
  else
  {
    v37 = v17 + 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19CFE09B8();
    sub_19CFE019C();
    v22 = sub_19CFE01B4();
    swift_allocError();
    v24 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v23, v9, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC458], v22);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ComponentID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_19CFDF698();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t ComponentID.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall ComponentID.isChild(of:)(JetEngine::ShelfID of)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  Swift::Bool result;

  v2 = *(_QWORD *)(of.parent.value._countAndFlagsBits + 16);
  v3 = *(_QWORD *)(of.parent.value._countAndFlagsBits + 24);
  v4 = v1[2];
  v5 = v1[3];
  v6 = *v1 == *(_QWORD *)of.parent.value._countAndFlagsBits
    && v1[1] == *(_QWORD *)(of.parent.value._countAndFlagsBits + 8);
  if (v6 || (v7 = sub_19CFE06A0(), result = 0, (v7 & 1) != 0))
  {
    if (v4 == v2 && v5 == v3)
      return 1;
    else
      return sub_19CFE06A0();
  }
  return result;
}

Swift::Bool __swiftcall ComponentID.isChild(of:)(JetEngine::PageID of)
{
  _QWORD *v1;

  if (*v1 == *(_QWORD *)of.value._countAndFlagsBits && v1[1] == *(_QWORD *)(of.value._countAndFlagsBits + 8))
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t ComponentID.hash(into:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t ComponentID.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFDF650();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CE38960()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFDF650();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CE389E0()
{
  sub_19CFDF650();
  sub_19CFDF650();
  return sub_19CFDF650();
}

uint64_t sub_19CE38A38()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  sub_19CFDF650();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CE38AB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ComponentID.init(from:)(a1, a2);
}

uint64_t sub_19CE38AC8(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  sub_19CE38234();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE070C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CE38B98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s9JetEngine11ComponentIDV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_19CFE06A0(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_19CFE06A0(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_19CFE06A0();
    }
  }
  return result;
}

unint64_t sub_19CE38CB8()
{
  unint64_t result;

  result = qword_1EE43F820;
  if (!qword_1EE43F820)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ComponentID, &type metadata for ComponentID);
    atomic_store(result, (unint64_t *)&qword_1EE43F820);
  }
  return result;
}

uint64_t destroy for ComponentID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ComponentID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ComponentID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ComponentID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ComponentID()
{
  return &type metadata for ComponentID;
}

unint64_t sub_19CE38E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE43F828;
  if (!qword_1EE43F828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43F830);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC5E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43F828);
  }
  return result;
}

NSPropertyListFormat __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSPropertyListFormat.init(_:)(JSValue a1)
{
  NSPropertyListFormat result;

  sub_19CE396C8(a1.super.isa);
  return result;
}

void sub_19CE38ED4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_19CE396C8(a1);
  if (!v2)
    *a2 = v4;
}

void sub_19CE38EFC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  _QWORD v26[5];

  v26[4] = *MEMORY[0x1E0C80C00];
  v4 = sub_19CFDF5CC();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a2, sel_isString, v7)
    || (v10 = objc_msgSend(a2, sel_toString)) == 0)
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a2, v16);
    goto LABEL_6;
  }
  v11 = v10;
  sub_19CFDF578();

  sub_19CFDF5B4();
  v12 = sub_19CFDF584();
  v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  if (v14 >> 60 == 15)
  {
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v15 = 0xD00000000000002BLL;
    *(_QWORD *)(v15 + 8) = 0x800000019D0711C0;
    *(_QWORD *)(v15 + 16) = 0;
    *(_BYTE *)(v15 + 24) = 1;
    *(_QWORD *)(v15 + 32) = 0;
    *(_BYTE *)(v15 + 40) = 1;
    *(_OWORD *)(v15 + 48) = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
    *(_OWORD *)(v15 + 80) = 0u;
    *(_QWORD *)(v15 + 96) = 0;
LABEL_6:
    swift_willThrow();
    return;
  }
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_19CFDEE58();
  v25 = 0;
  v19 = objc_msgSend(v17, sel_propertyListWithData_options_format_error_, v18, 0, 0, &v25);

  v20 = v25;
  if (v19)
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    v21 = a1;
    v22 = sub_19CFE0688();
    v23 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v22, v21);
    swift_unknownObjectRelease();

    if (v23)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      sub_19CCF4A54(v12, v14);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v24 = v20;
    sub_19CFDEC9C();

    swift_willThrow();
    sub_19CCF4A54(v12, v14);
  }
}

void sub_19CE392F0(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v7 = sub_19CFDF5CC();
  if ((objc_msgSend(a2, sel_isUndefined, MEMORY[0x1E0C80A78](v7, v8)) & 1) != 0
    || (objc_msgSend(a2, sel_isNull) & 1) != 0)
  {
    v9 = 100;
  }
  else
  {
    sub_19CE396C8(a2);
    if (v3)
      return;
    v9 = v22;
  }
  if (objc_msgSend(a3, sel_toObject))
  {
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CD433C0(v26, &v27);
    v10 = (void *)objc_opt_self();
    __swift_project_boxed_opaque_existential_1(&v27, v28);
    v11 = sub_19CFE0688();
    *(_QWORD *)&v26[0] = 0;
    v12 = objc_msgSend(v10, sel_dataWithPropertyList_format_options_error_, v11, v9, 0, v26);
    swift_unknownObjectRelease();
    v13 = *(id *)&v26[0];
    if (v12)
    {
      v14 = sub_19CFDEE70();
      v16 = v15;

      sub_19CFDF5B4();
      v17 = sub_19CFDF590();
      if (v18)
      {
        *(_QWORD *)&v26[0] = v17;
        *((_QWORD *)&v26[0] + 1) = v18;
        v19 = a1;
        v20 = sub_19CFE0688();
        sub_19CE398CC((uint64_t)v26);
      }
      else
      {
        v24 = a1;
        v20 = 0;
      }
      v25 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v20, a1);
      swift_unknownObjectRelease();

      if (v25)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
        sub_19CD3BE18(v14, v16);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v23 = v13;
      sub_19CFDEC9C();

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
    }
  }
  else
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a3, v21);
    swift_willThrow();
  }
}

void sub_19CE396C8(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (!objc_msgSend(a1, sel_isString))
    goto LABEL_20;
  v2 = objc_msgSend(a1, sel_toString);
  if (!v2)
    goto LABEL_20;
  v3 = v2;
  v4 = sub_19CFDF578();
  v6 = v5;

  v7 = v4 == 0x6574732D6E65706FLL && v6 == 0xE900000000000070;
  if (v7
    || (sub_19CFE06A0() & 1) != 0
    || (v4 == 7105912 ? (v8 = v6 == 0xE300000000000000) : (v8 = 0), v8 || (sub_19CFE06A0() & 1) != 0))
  {
    swift_bridgeObjectRelease();

    return;
  }
  if (v4 == 0x7972616E6962 && v6 == 0xE600000000000000)
  {

    swift_bridgeObjectRelease();
    return;
  }
  v9 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {

  }
  else
  {
LABEL_20:
    sub_19CDC98D8();
    swift_allocError();
    v11 = v10;
    v12 = a1;
    JSError.init(badValue:expected:)(v12, v11);
    swift_willThrow();

  }
}

uint64_t sub_19CE398CC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

id sub_19CE39900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  id result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39[6];
  _QWORD v40[6];
  uint64_t v41[6];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  ValueMetadata *v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  _OWORD v49[2];
  __int128 v50;
  _OWORD v51[2];
  char v52[8];
  uint64_t v53;
  char v54[8];
  uint64_t v55;
  __int128 v56;
  uint64_t v57[3];
  ValueMetadata *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v38 = a4;
  v7 = type metadata accessor for PageRenderEventActivityChange();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_19CD100CC(a2, a3, (uint64_t)v39);
  swift_bridgeObjectRelease();
  sub_19CD0EC7C(v39);
  sub_19CCC290C((uint64_t)v39, (uint64_t)v52, &qword_1EE43BD90);
  if (v53)
  {
    v36 = v7;
    v37 = v10;
    swift_bridgeObjectRetain();
    sub_19CD100CC(a2, a3, (uint64_t)v40);
    swift_bridgeObjectRelease();
    sub_19CCC290C((uint64_t)v40, (uint64_t)&v42, &qword_1EE43BD90);
    sub_19CCC290C((uint64_t)v40, (uint64_t)&v48, &qword_1EE43BD90);
    if (!*((_QWORD *)&v48 + 1))
      goto LABEL_12;
    v35 = a1;
    v50 = v48;
    v51[0] = v49[0];
    *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)v49 + 9);
    sub_19CCC290C((uint64_t)&v50, (uint64_t)v54, &qword_1EE43CA58);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CD0F454((uint64_t)v54);
    swift_release();
    v55 = *(_QWORD *)&v51[0];
    sub_19CD0F404((uint64_t)&v55);
    v56 = *(_OWORD *)((char *)v51 + 8);
    sub_19CD0F42C((uint64_t)&v56);
    sub_19CE04854();
    v11 = v43;
    if (v43)
    {
      v12 = v42;
      v34 = a2;
      v57[0] = v42;
      v57[1] = v43;
      v57[2] = v44;
      v58 = v45;
      v59 = v46;
      v60 = v47 & 1;
      swift_bridgeObjectRetain();
      sub_19CD10950(v12, v11);
      sub_19CD0F47C((uint64_t)v57, v34, a3, (uint64_t)v41);
      swift_bridgeObjectRelease();
      a2 = v34;
      sub_19CD0ECB0(v12, v11);
      sub_19CD0EC7C(v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRetain();
      sub_19CE39EC0(a2, a3, (uint64_t)v57);
      swift_bridgeObjectRelease();
      sub_19CD0EC7C(v57);
    }
    sub_19CE39EC0(a2, a3, (uint64_t)&v42);
    result = sub_19CD0EC7C(&v42);
    if (qword_1EE43D750 != -1)
      result = (id)swift_once();
    if (byte_1EE465D91 == 1)
    {
      if (qword_1EE43D6B8 != -1)
        swift_once();
      v26 = qword_1EE465D00;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F838);
      v28 = (uint64_t)v37;
      v29 = (char *)v37 + *(int *)(v27 + 48);
      *v37 = a2;
      *(_QWORD *)(v28 + 8) = a3;
      v30 = sub_19CFDF278();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v29, v38, v30);
      swift_storeEnumTagMultiPayload();
      v31 = *(void **)(v26 + 16);
      swift_bridgeObjectRetain();
      objc_msgSend(v31, sel_lock);
      v32 = v61;
      sub_19CFB82BC(v26, v28);
      v61 = v32;
      if (v32)
      {
        result = objc_msgSend(v31, sel_unlock);
        __break(1u);
      }
      else
      {
        objc_msgSend(v31, sel_unlock);
        return (id)sub_19CE3A188(v28);
      }
    }
  }
  else
  {
    v13 = a2;
    if (qword_1EE43D060 != -1)
      swift_once();
    sub_19CFE0A6C();
    v14 = (uint64_t)v58;
    v15 = v59;
    __swift_project_boxed_opaque_existential_1(v57, (uint64_t)v58);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
    v40[0] = sub_19CD40918(0, 62, 0, MEMORY[0x1E0DEE9D8]);
    v17._object = (void *)0x800000019D071330;
    v17._countAndFlagsBits = 0xD000000000000033;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    v45 = &type metadata for OperationID;
    v42 = v13;
    v43 = a3;
    sub_19CD40794((uint64_t)&v42, (uint64_t)v41);
    v48 = 0u;
    v49[0] = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v41, (uint64_t)&v48);
    LOBYTE(v51[1]) = 0;
    v50 = v48;
    v51[0] = v49[0];
    v18 = (_QWORD *)v40[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[5 * v20];
    v22 = v50;
    v23 = v51[0];
    *((_BYTE *)v21 + 64) = v51[1];
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    v40[0] = v18;
    sub_19CCECFE4((uint64_t)&v42, &qword_1ECEB3370);
    v24._countAndFlagsBits = 0x756F6620746F6E20;
    v24._object = (void *)0xEA0000000000646ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v16 + 32) = v40[0];
    Logger.error(_:)(v16, v14, v15);
    swift_bridgeObjectRelease();
    return (id)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
  }
  return result;
}

uint64_t sub_19CE39EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  swift_bridgeObjectRetain();
  v24 = a2;
  v8 = sub_19CCED700(a1, a2);
  v10 = v9;
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    goto LABEL_7;
  }
  v23 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v3 + 8);
  v25 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v4 + 8) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19CE1A1AC();
    v13 = v25;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 56) + 48 * v8;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = *(_QWORD *)(v14 + 24);
  v19 = *(_QWORD *)(v14 + 32);
  v20 = *(_BYTE *)(v14 + 40);
  sub_19CDD41C0(v8, v13);
  *(_QWORD *)(v4 + 8) = v13;
  swift_bridgeObjectRelease();
  v21 = sub_19CD10340(v23, v24, *(_QWORD **)(v4 + 16));
  if ((v22 & 1) == 0)
  {
    sub_19CD10424(v21);
    result = swift_bridgeObjectRelease();
LABEL_7:
    *(_QWORD *)a3 = v15;
    *(_QWORD *)(a3 + 8) = v16;
    *(_QWORD *)(a3 + 16) = v17;
    *(_QWORD *)(a3 + 24) = v18;
    *(_QWORD *)(a3 + 32) = v19;
    *(_BYTE *)(a3 + 40) = v20;
    return result;
  }
  swift_bridgeObjectRetain();
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE02E0();
  sub_19CFDF698();
  result = sub_19CFE0340();
  __break(1u);
  return result;
}

uint64_t sub_19CE3A0D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  uint64_t v14;
  char v15;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3[2])
  {
    v5 = v3[4];
    v4 = v3[5];
    swift_bridgeObjectRetain();
    sub_19CF7D488(0, 1);
    sub_19CDD2C9C(v5, v4, (uint64_t)v13);
    v11 = v13[1];
    v12 = v13[0];
    v6 = v14;
    v7 = v15;
    result = swift_bridgeObjectRelease();
    v10 = v11;
    v9 = v12;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v9 = 0uLL;
    v10 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  return result;
}

uint64_t sub_19CE3A188(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageRenderEventActivityChange();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_19CE3A1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[6];

  v4 = sub_19CFDF278();
  v33[3] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v33[0] = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v33[2] = (char *)v33 - v9;
  MEMORY[0x1E0C80A78](v10, v11);
  v33[1] = (char *)v33 - v12;
  MEMORY[0x1E0C80A78](v13, v14);
  v33[5] = (char *)v33 - v15;
  MEMORY[0x1E0C80A78](v16, v17);
  v33[4] = (char *)v33 - v18;
  v19 = type metadata accessor for PageRenderEventActivityChange();
  MEMORY[0x1E0C80A78](v19, v20);
  MEMORY[0x1E0C80A78](v21, v22);
  MEMORY[0x1E0C80A78](v23, v24);
  MEMORY[0x1E0C80A78](v25, v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F840);
  MEMORY[0x1E0C80A78](v27, v28);
  v31 = (char *)v33 + *(int *)(v30 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CE3ABC0(a1, (uint64_t)v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19CE3ABC0(a2, (uint64_t)v31);
  v32 = (char *)sub_19CE3A3B8 + 4 * byte_19D058510[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_19CE3A3B8()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  sub_19CE3ABC0(v0, (uint64_t)v1);
  v3 = *v1;
  v4 = v1[1];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4(v0, &qword_1EE43F840);
    v6 = 0;
  }
  else
  {
    if (v3 == *v2 && v4 == v2[1])
      v6 = 1;
    else
      v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19CE3A188(v0);
  }
  return v6 & 1;
}

uint64_t sub_19CE3A698(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_19CE3A6E8 + 4 * byte_19D058514[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_19CE3A7D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F838) + 48);
      v4 = sub_19CFDF278();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

void sub_19CE3A870()
{
  char *v0;

  v0 = (char *)sub_19CE3A8BC + 4 * byte_19D05851C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_19CE3A8BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_19CE3A950(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_19CE3A188(result);
    v2 = (char *)&loc_19CE3A9AC + 4 * byte_19D058520[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_19CE3AA58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F838) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_19CFDF278();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_19CE3AB04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_19CE3A188((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F838) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_19CFDF278();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_19CE3ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageRenderEventActivityChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[32];
  __int128 v51;
  __int128 v52;
  char v53;
  _QWORD v54[4];
  _QWORD *v55;
  _OWORD v56[2];

  v47 = a4;
  v7 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v44 - v10;
  v12 = sub_19CFE0310();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[1];
  v46 = *a1;
  *(_QWORD *)&v51 = v46;
  *((_QWORD *)&v51 + 1) = v17;
  v45 = type metadata accessor for JSONContext.Property(0, a3, v18, v19);
  JSONContext.Property.codingUserInfoKey.getter((uint64_t)v16);
  if (*(_QWORD *)(a2 + 16) && (v20 = sub_19CD2258C((uint64_t)v16), (v21 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a2 + 56) + 32 * v20, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  if (*((_QWORD *)&v52 + 1))
  {
    sub_19CD433C0(&v51, v56);
    sub_19CD436B0((uint64_t)v56, (uint64_t)&v51);
    v22 = swift_dynamicCast();
    v23 = *(_QWORD *)(a3 - 8);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    if (v22)
    {
      v24(v11, 0, 1, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
      v25 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
      v26 = v47;
      v25(v47, v11, a3);
      v27 = v26;
      v28 = 0;
    }
    else
    {
      v24(v11, 1, 1, a3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if (qword_1EE43BE78 != -1)
        swift_once();
      v30 = (void *)qword_1EE43BE68;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_19D052350;
      v32 = v30;
      v55 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
      v33._object = (void *)0x800000019D070120;
      v33._countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      v54[3] = v45;
      v54[0] = v46;
      v54[1] = v17;
      sub_19CD40794((uint64_t)v54, (uint64_t)v50);
      v49 = 0u;
      v48 = 0u;
      swift_bridgeObjectRetain();
      sub_19CD40658((uint64_t)v50, (uint64_t)&v48);
      v53 = 0;
      v51 = v48;
      v52 = v49;
      v34 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v34[2] = v36 + 1;
      v37 = &v34[5 * v36];
      v38 = v51;
      v39 = v52;
      *((_BYTE *)v37 + 64) = v53;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      v55 = v34;
      sub_19CCECFE4((uint64_t)v54, &qword_1ECEB3370);
      v40._countAndFlagsBits = 96;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      *(_QWORD *)(v31 + 32) = v55;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v41 = swift_allocObject();
      v42 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v41 + 16) = xmmword_19D0522A0;
      *((_QWORD *)&v49 + 1) = v42;
      *(_QWORD *)&v48 = 0xD000000000000027;
      *((_QWORD *)&v48 + 1) = 0x800000019D06F490;
      v51 = 0u;
      v52 = 0u;
      sub_19CD40658((uint64_t)&v48, (uint64_t)&v51);
      *(_BYTE *)(v41 + 64) = 0;
      v43 = v52;
      *(_OWORD *)(v41 + 32) = v51;
      *(_OWORD *)(v41 + 48) = v43;
      *(_QWORD *)(v31 + 40) = v41;
      *(_QWORD *)&v51 = v32;
      LOBYTE(v48) = 1;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v48);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
      v27 = v47;
      v28 = 1;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v27, v28, 1, a3);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v51, &qword_1ECEB3370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v47, 1, 1, a3);
  }
}

uint64_t sub_19CE3B0A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];

  v5 = *(uint64_t *)((char *)a2 + a3 - 8);
  v6 = *a1;
  v7 = a2[1];
  v9[0] = *a2;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  Dictionary<>.subscript.getter(v9, v6, v5, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE3B100(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[2];

  v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  v7 = sub_19CFDFF5C();
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)v16 - v10;
  v13 = *a3;
  v12 = a3[1];
  (*(void (**)(char *, uint64_t, double))(v14 + 16))((char *)v16 - v10, a1, v9);
  v16[0] = v13;
  v16[1] = v12;
  swift_bridgeObjectRetain();
  return Dictionary<>.subscript.setter((uint64_t)v11, v16, v6);
}

uint64_t Dictionary<>.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void *v46;
  uint64_t v47;
  id v48;
  Swift::String v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t DynamicType;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  __int128 v65;
  __int128 v66;
  Swift::String v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  _BYTE v80[32];
  __int128 v81;
  __int128 v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t MetatypeMetadata;
  _QWORD *v87;
  __int128 v88;
  uint64_t v89;

  v77 = sub_19CFE0310();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77, v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v70 - v12;
  MEMORY[0x1E0C80A78](v14, v15);
  v74 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v70 - v20;
  v23 = *a2;
  v22 = a2[1];
  v25 = v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, a3) == 1)
  {
    v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    *(_QWORD *)&v81 = v23;
    *((_QWORD *)&v81 + 1) = v22;
    type metadata accessor for JSONContext.Property(0, a3, v27, v28);
    JSONContext.Property.codingUserInfoKey.getter((uint64_t)v8);
    swift_bridgeObjectRelease();
    v29 = sub_19CDD297C((uint64_t)v8, &v81);
    ((void (*)(uint64_t, uint64_t, double))v26)(a1, v9, v29);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v8, v77);
    return sub_19CCECFE4((uint64_t)&v81, &qword_1ECEB3370);
  }
  v73 = v10;
  v72 = v9;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v21, v13, a3);
  *((_QWORD *)&v79 + 1) = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v78);
  (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(boxed_opaque_existential_2Tm, v21, a3);
  v71 = v23;
  v84 = v23;
  v85 = v22;
  v33 = type metadata accessor for JSONContext.Property(0, a3, v31, v32);
  v34 = v25;
  JSONContext.Property.codingUserInfoKey.getter((uint64_t)v8);
  v35 = v75;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v84 = *v35;
  *v35 = 0x8000000000000000;
  sub_19CE8AD94(&v78, (uint64_t)v8, isUniquelyReferenced_nonNull_native, &v81);
  *v35 = v84;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v8, v77);
  v37 = a3;
  v38 = v22;
  if (!*((_QWORD *)&v82 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(a1, v72);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, a3);
    return sub_19CCECFE4((uint64_t)&v81, &qword_1ECEB3370);
  }
  v39 = v21;
  sub_19CD433C0(&v81, &v88);
  sub_19CD436B0((uint64_t)&v88, (uint64_t)&v81);
  v40 = v74;
  v41 = swift_dynamicCast();
  v42 = a1;
  v43 = v73;
  if ((v41 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v44 = *(void (**)(char *, uint64_t))(v25 + 8);
    v44(v40, v37);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v72);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v88);
    return ((uint64_t (*)(char *, uint64_t))v44)(v39, v37);
  }
  else
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v46 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_19D050760;
    v48 = v46;
    v87 = sub_19CD40918(0, 33, 0, MEMORY[0x1E0DEE9D8]);
    v49._countAndFlagsBits = 0xD00000000000001FLL;
    v49._object = (void *)0x800000019D0713D0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    MetatypeMetadata = v33;
    v84 = v71;
    v85 = v38;
    sub_19CD40794((uint64_t)&v84, (uint64_t)v80);
    v79 = 0u;
    v78 = 0u;
    sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
    v83 = 0;
    v81 = v78;
    v82 = v79;
    v50 = v87;
    v51 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v50 = sub_19CD40918(0, v50[2] + 1, 1, v50);
    v52 = v72;
    v54 = v50[2];
    v53 = v50[3];
    if (v54 >= v53 >> 1)
      v50 = sub_19CD40918((_QWORD *)(v53 > 1), v54 + 1, 1, v50);
    v50[2] = v54 + 1;
    v55 = &v50[5 * v54];
    v56 = v81;
    v57 = v82;
    *((_BYTE *)v55 + 64) = v83;
    *((_OWORD *)v55 + 2) = v56;
    *((_OWORD *)v55 + 3) = v57;
    v87 = v50;
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
    v58._countAndFlagsBits = 96;
    v58._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    *(_QWORD *)(v47 + 32) = v87;
    v87 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
    v59._countAndFlagsBits = 0xD000000000000019;
    v59._object = (void *)0x800000019D0713F0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    __swift_project_boxed_opaque_existential_1(&v88, v89);
    DynamicType = swift_getDynamicType();
    MetatypeMetadata = swift_getMetatypeMetadata();
    v84 = DynamicType;
    sub_19CD40794((uint64_t)&v84, (uint64_t)v80);
    v79 = 0u;
    v78 = 0u;
    sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
    v83 = 0;
    v81 = v78;
    v82 = v79;
    v61 = v87;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v61 = sub_19CD40918(0, v61[2] + 1, 1, v61);
    v63 = v61[2];
    v62 = v61[3];
    if (v63 >= v62 >> 1)
      v61 = sub_19CD40918((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
    v61[2] = v63 + 1;
    v64 = &v61[5 * v63];
    v65 = v81;
    v66 = v82;
    *((_BYTE *)v64 + 64) = v83;
    *((_OWORD *)v64 + 2) = v65;
    *((_OWORD *)v64 + 3) = v66;
    v87 = v61;
    sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
    v67._countAndFlagsBits = 11838;
    v67._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v67);
    *(_QWORD *)(v47 + 40) = v87;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v79 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v78 = 0xD000000000000018;
    *((_QWORD *)&v78 + 1) = 0x800000019D071410;
    v81 = 0u;
    v82 = 0u;
    sub_19CD40658((uint64_t)&v78, (uint64_t)&v81);
    *(_BYTE *)(v68 + 64) = 0;
    v69 = v82;
    *(_OWORD *)(v68 + 32) = v81;
    *(_OWORD *)(v68 + 48) = v69;
    *(_QWORD *)(v47 + 48) = v68;
    *(_QWORD *)&v81 = v48;
    LOBYTE(v78) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v47, (JetEngine::LogMessageLevel)&v78);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v42, v52);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v88);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v51, v37);
  }
}

void (*Dictionary<>.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = malloc(0x50uLL);
  *a1 = v7;
  v7[2] = a3;
  v7[3] = v3;
  v8 = sub_19CFDFF5C();
  v7[4] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[5] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[6] = malloc(v10);
  v11 = malloc(v10);
  v13 = *a2;
  v12 = a2[1];
  v7[7] = v11;
  v7[8] = v13;
  v7[9] = v12;
  *v7 = v13;
  v7[1] = v12;
  v14 = *v3;
  swift_bridgeObjectRetain();
  Dictionary<>.subscript.getter(a2, v14, a3, (uint64_t)v11);
  return sub_19CE3B9C4;
}

void sub_19CE3B9C4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[2];

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[8];
    v3 = v2[9];
    v6 = (void *)v2[6];
    v5 = (void *)v2[7];
    v7 = v2[4];
    v8 = v2[5];
    v9 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v6, v5, v7);
    v10[0] = v4;
    v10[1] = v3;
    Dictionary<>.subscript.setter((uint64_t)v6, v10, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    v6 = (void *)v2[6];
    v5 = (void *)v2[7];
    Dictionary<>.subscript.setter((uint64_t)v5, v2, v2[2]);
  }
  free(v5);
  free(v6);
  free(v2);
}

uint64_t sub_19CE3BA88()
{
  return 8;
}

_QWORD *sub_19CE3BA94(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_19CE3BAA0()
{
  return swift_deallocObject();
}

uint64_t Dictionary<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  v5 = *a2;
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = v5;
  v6 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19CE3BCAC, (uint64_t)v8, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
  sub_19CDC6248(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Dictionary<>.init(tryDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  v5 = *a2;
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = v5;
  v6 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19CE3BE9C, (uint64_t)v8, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
  sub_19CDC6248(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19CE3BBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t TupleTypeMetadata2;
  void (*v15)(_BYTE *, uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v18[40];
  uint64_t v19;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a7 = a1;
  a7[1] = a2;
  sub_19CD3E448(a3, (uint64_t)v18);
  v19 = a4;
  v15 = *(void (**)(_BYTE *, uint64_t *, uint64_t, uint64_t))(a6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v18, &v19, a5, a6);
  if (v17)
    return swift_bridgeObjectRelease();
  else
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a7, 0, 1, TupleTypeMetadata2);
}

uint64_t sub_19CE3BCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;

  return sub_19CE3BBAC(a1, a2, a3, v4[4], v4[2], v4[3], a4);
}

uint64_t sub_19CE3BCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(_BYTE *, uint64_t *, uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _BYTE v33[40];
  uint64_t v34;

  v32 = a7;
  v30 = a1;
  v31 = a2;
  v11 = sub_19CFDFF5C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD3E448(a3, (uint64_t)v33);
  v34 = a4;
  v21 = *(void (**)(_BYTE *, uint64_t *, uint64_t, uint64_t))(a6 + 16);
  swift_bridgeObjectRetain();
  v21(v33, &v34, a5, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v32, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v20, v15, a5);
    v25 = swift_getTupleTypeMetadata2();
    v27 = v31;
    v26 = v32;
    v28 = (char *)v32 + *(int *)(v25 + 48);
    *v32 = v30;
    v26[1] = v27;
    v24(v28, v20, a5);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v26, 0, 1, v25);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_19CE3BE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;

  return sub_19CE3BCC8(a1, a2, a3, v4[4], v4[2], v4[3], a4);
}

uint64_t Dictionary<>.init(deserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[8];

  v8 = *a2;
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  v11[6] = a7;
  v11[7] = v8;
  v9 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19CE3C158, (uint64_t)v11, a3, a4, a5);
  sub_19CDC6248(a1);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19CE3BF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  void (*v26)(_QWORD *, uint64_t *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  uint64_t v37;

  v33 = a6;
  v31 = a3;
  v32 = a4;
  v35 = a7;
  v11 = sub_19CFDFF5C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  v36[0] = a1;
  v36[1] = a2;
  swift_bridgeObjectRetain();
  sub_19CFDF800();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_19CDC5494();
    swift_allocError();
    *v21 = v30;
    v21[1] = a2;
    v21[2] = a5 | 0x6000000000000000;
    v21[3] = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v15, a5);
    v23 = v33;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v25 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v35, v20, a5);
    sub_19CD3E448(v31, (uint64_t)v36);
    v37 = v32;
    v26 = *(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t))(a8 + 8);
    swift_bridgeObjectRetain();
    v27 = v34;
    v26(v36, &v37, v23, a8);
    v28 = *(void (**)(char *, uint64_t))(v16 + 8);
    v28(v20, a5);
    if (v27)
      return ((uint64_t (*)(uint64_t, uint64_t))v28)(v25, a5);
    else
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v25, 0, 1, TupleTypeMetadata2);
  }
}

uint64_t sub_19CE3C158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE3C5AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE3BF24);
}

uint64_t Dictionary<>.init(tryDeserializing:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[10];

  v8 = *a2;
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  v11[6] = a7;
  v11[7] = v8;
  v9 = JSONDictionary.compactMap<A, B>(_:)((uint64_t)sub_19CE3C590, (uint64_t)v11, a3, a4, a5);
  sub_19CDC6248(a1);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_19CE3C1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(uint64_t, void *, uint64_t, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t TupleTypeMetadata2;
  char *v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[6];
  uint64_t v60;

  v55 = a7;
  v60 = a4;
  v51 = a3;
  v54 = a8;
  v48 = sub_19CFDFF5C();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48, v13);
  v53 = (char *)&v46 - v14;
  v52 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v47 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_19CFDFF5C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v46 - v21;
  v23 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a1;
  v50 = a2;
  v59[0] = a1;
  v59[1] = a2;
  swift_bridgeObjectRetain();
  sub_19CFDF800();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    v28 = v60;
    swift_bridgeObjectRetain();
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, v28, (uint64_t)v59);
    swift_bridgeObjectRelease();
    sub_19CE3C5DC((uint64_t)v59, (uint64_t)v56);
    v29 = v57;
    if (v57)
    {
      v30 = v58;
      __swift_project_boxed_opaque_existential_1(v56, v57);
      sub_19CDC5494();
      v31 = (void *)swift_allocError();
      v32 = v50;
      *v33 = v49;
      v33[1] = v32;
      v33[2] = a5 | 0x6000000000000000;
      v33[3] = 0;
      v34 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v30 + 8);
      swift_bridgeObjectRetain();
      v34(a5, v31, v29, v30);
      sub_19CE3C624((uint64_t)v59);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
    }
    else
    {
      sub_19CE3C624((uint64_t)v59);
      sub_19CE3C624((uint64_t)v56);
    }
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v35(v27, v22, a5);
    sub_19CD3E448(v51, (uint64_t)v59);
    v56[0] = v60;
    v36 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(a9 + 16);
    swift_bridgeObjectRetain();
    v37 = v53;
    v36(v59, v56, a6, a9);
    v38 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v37, 1, a6) != 1)
    {
      v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v40 = v47;
      v39(v47, v37, a6);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v42 = v54;
      v43 = &v54[*(int *)(TupleTypeMetadata2 + 48)];
      v35(v54, v27, a5);
      v39(v43, v40, a6);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v42, 0, 1, TupleTypeMetadata2);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, a5);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v48);
  }
  v45 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v54, 1, 1, v45);
}

uint64_t sub_19CE3C590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE3C5AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE3C1DC);
}

uint64_t sub_19CE3C5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a2, a3, v4[7], v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_19CE3C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE3C624(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43A238);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id Bag.KeySet.init()@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDBA0]), sel_init);
  *a1 = result;
  return result;
}

uint64_t Bag.KeySet.isEmpty.getter()
{
  return 0;
}

id Bag.KeySet.addBagKey(_:valueType:)(uint64_t a1, uint64_t a2)
{
  id *v2;
  id v5;
  void *v7;

  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(*v2, sel_mutableCopyWithZone_, 0);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CE3C758();
    swift_dynamicCast();
    v5 = *v2;
    *v2 = v7;

  }
  return objc_msgSend(*v2, sel_addBagKey_valueType_, a1, a2);
}

unint64_t sub_19CE3C758()
{
  unint64_t result;

  result = qword_1EE43CD90;
  if (!qword_1EE43CD90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE43CD90);
  }
  return result;
}

id Bag.KeySet.addingBagKey(_:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X8>)
{
  void **v3;
  void *v7;
  id v8;
  void *v9;
  void *v11;

  v7 = *v3;
  *a3 = *v3;
  v8 = v7;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(v8, sel_mutableCopyWithZone_, 0);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CE3C758();
    swift_dynamicCast();
    v8 = v11;
    v9 = *a3;
    *a3 = v11;

  }
  return objc_msgSend(v8, sel_addBagKey_valueType_, a1, a2);
}

id Bag.KeySet.formUnion(_:)(uint64_t *a1)
{
  id *v1;
  uint64_t v2;
  id v3;
  void *v5;

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(*v1, sel_mutableCopyWithZone_, 0);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CE3C758();
    swift_dynamicCast();
    v3 = *v1;
    *v1 = v5;

  }
  return objc_msgSend(*v1, sel_unionBagKeySet_, v2);
}

id Bag.KeySet.union(_:)@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  void **v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v9;

  v4 = *a1;
  v5 = *v2;
  *a2 = *v2;
  v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_msgSend(v6, sel_mutableCopyWithZone_, 0);
    sub_19CFE004C();
    swift_unknownObjectRelease();
    sub_19CE3C758();
    swift_dynamicCast();
    v6 = v9;
    v7 = *a2;
    *a2 = v9;

  }
  return objc_msgSend(v6, sel_unionBagKeySet_, v4);
}

void static Bag.register(_:forProfile:)(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = *a1;
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = (void *)sub_19CFDF554();
  v5 = (id)sub_19CFDF554();
  objc_msgSend(v2, sel_registerBagKeySet_forProfile_profileVersion_, v3, v4, v5);

}

ValueMetadata *type metadata accessor for Bag.KeySet()
{
  return &type metadata for Bag.KeySet;
}

uint64_t JetPackageSpec.algorithm.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JetPackageSpec.version.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

BOOL static JetPackageSpec.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_19CFDF548() & 1) == 0)
    return 0;
  v9 = type metadata accessor for JetPackageSpec(0, a3, a4, v8);
  return *(unsigned __int8 *)(a1 + *(int *)(v9 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v9 + 36));
}

uint64_t type metadata accessor for JetPackageSpec(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JetPackageSpec);
}

BOOL sub_19CE3CB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static JetPackageSpec.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void JetpackSignature.algorithm.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t JetpackSignature.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CD3BE5C(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t JetPackageCompressionAlgorithm.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3CDF4(a1);
}

uint64_t JetPackageCompressionAlgorithm.rawValue.getter()
{
  return 0x696C746F7262;
}

uint64_t sub_19CE3CB70()
{
  return sub_19CE3CFA4();
}

uint64_t sub_19CE3CB84()
{
  return sub_19CFDF650();
}

uint64_t sub_19CE3CB98()
{
  return sub_19CE3D030();
}

uint64_t sub_19CE3CBAC@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3D084(a1);
}

void sub_19CE3CBB8(_QWORD *a1@<X8>)
{
  *a1 = 0x696C746F7262;
  a1[1] = 0xE600000000000000;
}

void static JetPackageEncryptionAlgorithm.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t JetPackageEncryptionAlgorithm.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  BOOL v4;
  uint64_t result;
  char v8;
  char v9;

  v4 = a1 == 7562593 && a2 == 0xE300000000000000;
  if (v4 || (sub_19CFE06A0() & 1) != 0 || a1 == 0x6367383231736561 && a2 == 0xE90000000000006DLL)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v9 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v8 = v9 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t JetPackageEncryptionAlgorithm.rawValue.getter()
{
  return 0x6367383231736561;
}

uint64_t sub_19CE3CCE8()
{
  return sub_19CE3CFA4();
}

uint64_t sub_19CE3CD04()
{
  return sub_19CFDF650();
}

uint64_t sub_19CE3CD20()
{
  return sub_19CE3D030();
}

uint64_t sub_19CE3CD3C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return JetPackageEncryptionAlgorithm.init(rawValue:)(*a1, a1[1], a2);
}

void sub_19CE3CD48(_QWORD *a1@<X8>)
{
  *a1 = 0x6367383231736561;
  a1[1] = 0xE90000000000006DLL;
}

uint64_t JetPackageSerializationFormat.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3CDF4(a1);
}

uint64_t JetPackageSerializationFormat.rawValue.getter()
{
  return 7496052;
}

uint64_t sub_19CE3CD88()
{
  return sub_19CE3CFA4();
}

uint64_t sub_19CE3CD98()
{
  return sub_19CFDF650();
}

uint64_t sub_19CE3CDA8()
{
  return sub_19CE3D030();
}

uint64_t sub_19CE3CDB8@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3D084(a1);
}

void sub_19CE3CDC4(_QWORD *a1@<X8>)
{
  *a1 = 7496052;
  a1[1] = 0xE300000000000000;
}

uint64_t JetPackageSignatureAlgorithm.init(intValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t JetPackageSignatureAlgorithm.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3CDF4(a1);
}

uint64_t sub_19CE3CDF4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t JetPackageSignatureAlgorithm.rawValue.getter()
{
  return 0x4148536173646365;
}

unint64_t sub_19CE3CE68()
{
  unint64_t result;

  result = qword_1EE43F848;
  if (!qword_1EE43F848)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageCompressionAlgorithm, &type metadata for JetPackageCompressionAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EE43F848);
  }
  return result;
}

unint64_t sub_19CE3CEB0()
{
  unint64_t result;

  result = qword_1EE43F850;
  if (!qword_1EE43F850)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageEncryptionAlgorithm, &type metadata for JetPackageEncryptionAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EE43F850);
  }
  return result;
}

unint64_t sub_19CE3CEF8()
{
  unint64_t result;

  result = qword_1EE43F858;
  if (!qword_1EE43F858)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageSerializationFormat, &type metadata for JetPackageSerializationFormat);
    atomic_store(result, (unint64_t *)&qword_1EE43F858);
  }
  return result;
}

unint64_t sub_19CE3CF40()
{
  unint64_t result;

  result = qword_1EE43F860[0];
  if (!qword_1EE43F860[0])
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JetPackageSignatureAlgorithm, &type metadata for JetPackageSignatureAlgorithm);
    atomic_store(result, qword_1EE43F860);
  }
  return result;
}

uint64_t sub_19CE3CF84()
{
  return sub_19CE3CFA4();
}

uint64_t sub_19CE3CFA4()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CE3CFF0()
{
  return sub_19CFDF650();
}

uint64_t sub_19CE3D010()
{
  return sub_19CE3D030();
}

uint64_t sub_19CE3D030()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  return sub_19CFE0910();
}

uint64_t sub_19CE3D078@<X0>(BOOL *a1@<X8>)
{
  return sub_19CE3D084(a1);
}

uint64_t sub_19CE3D084@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_19CE3D0D0(_QWORD *a1@<X8>)
{
  *a1 = 0x4148536173646365;
  a1[1] = 0xEB00000000363532;
}

uint64_t sub_19CE3D0F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_19CE3D16C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_19CE3D1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_19CE3D240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_19CE3D288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_19CE3D2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_19CE3D318(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64) + 1;
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CE3D3CC + 4 * byte_19D0585C0[(v7 - 1)]))();
}

void sub_19CE3D41C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if (*(_DWORD *)(v6 + 64) != -1)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64) + 1);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t destroy for JetpackSignature(uint64_t a1)
{
  return sub_19CD3BE18(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s9JetEngine16JetpackSignatureVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_19CD3BE5C(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for JetpackSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_19CD3BE5C(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_19CD3BE18(v5, v6);
  return a1;
}

uint64_t assignWithTake for JetpackSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_19CD3BE18(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetpackSignature(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JetpackSignature(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackSignature()
{
  return &type metadata for JetpackSignature;
}

ValueMetadata *type metadata accessor for JetPackageCompressionAlgorithm()
{
  return &type metadata for JetPackageCompressionAlgorithm;
}

ValueMetadata *type metadata accessor for JetPackageEncryptionAlgorithm()
{
  return &type metadata for JetPackageEncryptionAlgorithm;
}

ValueMetadata *type metadata accessor for JetPackageSerializationFormat()
{
  return &type metadata for JetPackageSerializationFormat;
}

uint64_t _s9JetEngine30JetPackageCompressionAlgorithmOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE3D7DC + 4 * byte_19D0585CE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE3D7FC + 4 * byte_19D0585D3[v4]))();
}

_BYTE *sub_19CE3D7DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE3D7FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE3D804(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE3D80C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE3D814(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE3D81C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageSignatureAlgorithm()
{
  return &type metadata for JetPackageSignatureAlgorithm;
}

uint64_t static Pipeline.start<A>(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  PipelineEntryTask.init(_:)(a1, a2);
  return swift_retain();
}

uint64_t sub_19CE3D86C()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Pipeline()
{
  return &type metadata for Pipeline;
}

_QWORD *assignWithCopy for JSCalculatedValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for JSCalculatedValue(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_19CE3D908()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Dictionary<>._partiallyEncode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _BYTE v60[48];

  v50 = a4;
  v56 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v55 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_19CFDFF5C();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (uint64_t *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (uint64_t *)((char *)&v43 - v15);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4372B8);
  v45 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52, v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CDD5ED8();
  v51 = v19;
  sub_19CFE0A24();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v20 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v20, (uint64_t)v60);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 64);
  v46 = a2 + 64;
  v22 = 1 << *(_BYTE *)(a2 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v47 = (unint64_t)(v22 + 63) >> 6;
  v44 = v47 - 1;
  v48 = a2;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v49 = v12;
  while (1)
  {
    if (v24)
    {
      v27 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v28 = v27 | (v26 << 6);
      goto LABEL_6;
    }
    v33 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 < v47)
    {
      v34 = *(_QWORD *)(v46 + 8 * v33);
      if (v34)
        goto LABEL_10;
      v26 += 2;
      if (v33 + 1 >= v47)
      {
        v26 = v33;
        goto LABEL_15;
      }
      v34 = *(_QWORD *)(v46 + 8 * v26);
      if (v34)
      {
        ++v33;
        goto LABEL_10;
      }
      v42 = v33 + 2;
      if (v33 + 2 < v47)
        break;
    }
LABEL_15:
    v32 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v12, 1, 1, TupleTypeMetadata2);
    v24 = 0;
LABEL_16:
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v53 + 32))(v16, v12, v54);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v32 + 48))(v16, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      sub_19CE3C624((uint64_t)v60);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v51, v52);
    }
    v35 = v26;
    v36 = *v16;
    v37 = v16[1];
    v38 = TupleTypeMetadata2;
    v39 = (char *)v16 + *(int *)(TupleTypeMetadata2 + 48);
    v40 = v55;
    v41 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v39, a3);
    v57 = v36;
    v58 = v37;
    v59 = 1;
    sub_19CFE0568();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, a3);
    v26 = v35;
    v12 = v49;
    TupleTypeMetadata2 = v38;
  }
  v34 = *(_QWORD *)(v46 + 8 * v42);
  if (v34)
  {
    v33 += 2;
LABEL_10:
    v24 = (v34 - 1) & v34;
    v28 = __clz(__rbit64(v34)) + (v33 << 6);
    v26 = v33;
LABEL_6:
    v29 = *(_QWORD *)(v48 + 56);
    v30 = (_QWORD *)(*(_QWORD *)(v48 + 48) + 16 * v28);
    v31 = v30[1];
    *v12 = *v30;
    v12[1] = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))((char *)v12 + *(int *)(TupleTypeMetadata2 + 48), v29 + *(_QWORD *)(v56 + 72) * v28, a3);
    v32 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v12, 0, 1, TupleTypeMetadata2);
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  while (1)
  {
    v33 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v33 >= v47)
    {
      v26 = v44;
      goto LABEL_15;
    }
    v34 = *(_QWORD *)(v46 + 8 * v33);
    ++v42;
    if (v34)
      goto LABEL_10;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t Optional<A>._partiallyEncode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t);
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD v30[2];
  void *v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  _BYTE v36[24];
  uint64_t v37;

  v30[0] = a3;
  v31 = 0;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v11, v9);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_19CFE0A0C();
  v15 = a1[3];
  v16 = a1;
  v17 = a2;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  v18 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v18, (uint64_t)v35);
  swift_bridgeObjectRelease();
  v19 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 16);
  v20 = v6;
  v19(v13, v30[1], a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    v21 = v31;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v13, v5);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
    v22 = v31;
    sub_19CFE073C();
    if (!v22)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
LABEL_11:
      v28 = v35;
LABEL_13:
      sub_19CE3C624((uint64_t)v28);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    }
    v23 = v22;
    v21 = 0;
    sub_19CE3C5DC((uint64_t)v35, (uint64_t)v32);
    v24 = v33;
    if (v33)
    {
      v25 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v25 + 16))(v5, v23, v24, v25);

      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);

      sub_19CE3C624((uint64_t)v32);
    }
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  sub_19CFE0748();
  if (!v21)
    goto LABEL_11;
  sub_19CE3C5DC((uint64_t)v35, (uint64_t)v32);
  v26 = v33;
  if (!v33)
  {
    sub_19CE3C624((uint64_t)v35);

    v28 = v32;
    goto LABEL_13;
  }
  v27 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v27 + 16))(v17, v21, v26, v27);

  sub_19CE3C624((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
}

uint64_t sub_19CE3E118(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>._partiallyEncode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t Bool._partiallyEncode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE0718();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CE3E274(_QWORD *a1)
{
  return Bool._partiallyEncode(to:)(a1);
}

uint64_t Array<A>._partiallyEncode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  _BYTE v27[40];
  _BYTE v28[24];
  uint64_t v29;

  v25 = a4;
  v5 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v22 = v8;
  v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v21 - v11;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_19CFE0A00();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_19CFE09DC();
  sub_19CF06068(0xD000000000000027, 0x800000019D06E560, v14, (uint64_t)v27);
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1A1AD9B44](v15, a3))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_19CE3C624((uint64_t)v27);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  v16 = 0;
  v17 = v23;
  v24 = v5;
  while (1)
  {
    v18 = sub_19CFDF8D8();
    sub_19CFDF890();
    if ((v18 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, v5+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, a3);
      v19 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_10;
      goto LABEL_6;
    }
    result = sub_19CFE0160();
    if (v22 != 8)
      break;
    v26[0] = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v12, v26, a3);
    swift_unknownObjectRelease();
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v12, a3);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    sub_19CFE0658();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, a3);
    v5 = v24;
    ++v16;
    if (v19 == MEMORY[0x1A1AD9B44](v24, a3))
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE3E588(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return Array<A>._partiallyEncode(to:)(a1, *v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t sub_19CE3E59C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return Dictionary<>._partiallyEncode(to:)(a1, *v3, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
}

uint64_t dispatch thunk of _DiscardOnErrorEncodable._partiallyEncode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for XpPostFrequencyFieldProvider()
{
  return &type metadata for XpPostFrequencyFieldProvider;
}

uint64_t sub_19CE3E5C8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v3[24] = a1;
  v3[25] = v4;
  v5 = v2[1];
  v3[26] = *v2;
  v3[27] = v5;
  return swift_task_switch();
}

uint64_t sub_19CE3E5EC()
{
  sub_19CFE010C();
  sub_19CFDF698();
  if (qword_1ECEB2F88 != -1)
    swift_once();
  sub_19CFDFB84();
  sub_19CFDF698();
  sub_19CFDF698();
  return swift_bridgeObjectRelease();
}

uint64_t CoarselyTimed.init(contained:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for CoarselyTimed(0, a3, v7, v8) + 28);
  v10 = sub_19CFDEA44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
}

uint64_t CoarselyTimed.init(byTiming:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t tv_nsec;
  __darwin_time_t tv_sec;
  __darwin_time_t *v32;
  uint64_t (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  __darwin_time_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[2];
  timespec v60;
  uint64_t v61;

  v57 = a2;
  v58 = a1;
  v56 = a4;
  v5 = sub_19CFDEA44();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a3;
  v48 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDEF84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v51 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v50 = (char *)&v47 - v18;
  MEMORY[0x1E0C80A78](v19, v20);
  v49 = (char *)&v47 - v21;
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v47 - v24;
  v26 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF78();
  static MonotonicTime.now.getter(&v60);
  tv_sec = v60.tv_sec;
  tv_nsec = v60.tv_nsec;
  v32 = (__darwin_time_t *)&v29[*(int *)(v26 + 20)];
  *v32 = v60.tv_sec;
  v32[1] = tv_nsec;
  v33 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 16);
  v34 = v33(v25, v29, v12);
  v35 = v61;
  ((void (*)(uint64_t))v58)(v34);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
    return sub_19CD17A60((uint64_t)v29);
  }
  else
  {
    v47 = (void (*)(char *, char *, uint64_t))v33;
    v57 = 0;
    v58 = v25;
    v61 = v13;
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v56, v11, v55);
    static MonotonicTime.now.getter(&v60);
    v38 = v60.tv_sec;
    v37 = v60.tv_nsec;
    v60.tv_sec = tv_sec;
    v60.tv_nsec = tv_nsec;
    v59[0] = v38;
    v59[1] = v37;
    sub_19CD17DE8(&v60, v59);
    if (qword_1ECEB2F88 != -1)
      swift_once();
    v39 = v49;
    sub_19CFDEF24();
    v40 = v58;
    v41 = v47;
    v47(v50, v58, v12);
    v41(v51, v39, v12);
    v42 = v52;
    sub_19CFDEA2C();
    v43 = *(void (**)(char *, uint64_t))(v61 + 8);
    v43(v39, v12);
    v43(v40, v12);
    sub_19CD17A60((uint64_t)v29);
    v46 = type metadata accessor for CoarselyTimed(0, v55, v44, v45);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v56 + *(int *)(v46 + 28), v42, v54);
  }
}

uint64_t CoarselyTimed.init(byTiming:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v6 = sub_19CFDEA44();
  v4[6] = v6;
  v4[7] = *(_QWORD *)(v6 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = *(_QWORD *)(a4 - 8);
  v4[10] = swift_task_alloc();
  v7 = sub_19CFDEF84();
  v4[11] = v7;
  v4[12] = *(_QWORD *)(v7 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for MonotonicTimeReference();
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE3EB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t (*v11)(_QWORD);
  timespec v12;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(int **)(v0 + 24);
  sub_19CFDEF78();
  static MonotonicTime.now.getter(&v12);
  v7 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 176) = v7;
  *(timespec *)(v1 + v7) = v12;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 152) = v8;
  v8(v3, v1, v4);
  v11 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v9;
  *v9 = v0;
  v9[1] = sub_19CE3EC4C;
  return v11(*(_QWORD *)(v0 + 80));
}

uint64_t sub_19CE3EC4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE3ECB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  timespec v23;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 144) + *(int *)(v0 + 176));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 40));
  static MonotonicTime.now.getter(&v23);
  v3 = *v1;
  v2 = v1[1];
  v22[0] = v3;
  v22[1] = v2;
  sub_19CD17DE8(v22, &v23);
  if (qword_1ECEB2F88 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 16);
  sub_19CFDEF24();
  v4(v15, v7, v8);
  v4(v16, v6, v8);
  sub_19CFDEA2C();
  v10 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v10(v6, v8);
  v10(v7, v8);
  sub_19CD17A60(v5);
  v13 = type metadata accessor for CoarselyTimed(0, v19, v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v9 + *(int *)(v13 + 28), v17, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE3EEA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88));
  sub_19CD17A60(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CoarselyTimed.contained.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CoarselyTimed.contained.modify())()
{
  return nullsub_1;
}

uint64_t CoarselyTimed.duration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_19CFDEA44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*CoarselyTimed.duration.modify())()
{
  return nullsub_1;
}

uint64_t static CoarselyTimed<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = type metadata accessor for CoarselyTimed(0, a3, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v20 - v13;
  v15 = sub_19CFDF548();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v14, a1, v6);
  v16(v10, a2, v6);
  if ((v15 & 1) != 0)
    v17 = sub_19CFDEA20();
  else
    v17 = 0;
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  v18(v14, v6);
  return v17 & 1;
}

uint64_t sub_19CE3F0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static CoarselyTimed<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t *sub_19CE3F0EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_19CFDEA44();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v16 = v8;
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_19CE3F1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_19CFDEA44();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CE3F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_19CFDEA44();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CE3F2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_19CFDEA44();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_19CE3F31C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_19CFDEA44();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_19CE3F4B4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_19CFDEA44() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0u;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *assignWithCopy for JSManagedSourceProvider(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_0(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for JSManagedSourceProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19CE3F758()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

uint64_t sub_19CE3F7A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  if ((result & 1) != 0)
  {
    v4 = v0[3];
    v5 = v0[4];
    __swift_project_boxed_opaque_existential_1(v0, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  }
  return result;
}

uint64_t sub_19CE3F828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5[2];
  uint64_t v6;
  _BYTE v7[40];
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_19CCD5B84(v0, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2390);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CF40);
  if (swift_dynamicCast())
  {
    sub_19CCD14C4(v5, (uint64_t)v8);
    v1 = v9;
    v2 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_19CE3F900((uint64_t)v5);
    return 0;
  }
  return v3;
}

uint64_t sub_19CE3F900(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE43F900);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t JSIntentRequestTimeOutError.init(intent:timeoutInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  result = type metadata accessor for JSIntentRequestTimeOutError(0, a2, a3, v9);
  *(double *)(a4 + *(int *)(result + 36)) = a5;
  return result;
}

uint64_t type metadata accessor for JSIntentRequestTimeOutError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSIntentRequestTimeOutError);
}

uint64_t JSIntentRequestTimeOutError.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

double JSIntentRequestTimeOutError.timeoutInterval.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

uint64_t JSIntentRequestTimeOutError.errorDescription.getter()
{
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFE0670();
  sub_19CFDF698();
  sub_19CFDFB84();
  sub_19CFDF698();
  return 0;
}

void sub_19CE3FAB0()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CE3FAC4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CE3FB3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_19CE3FBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CE3FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CE3FCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CE3FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CE3FD5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_19CE3FDCC + 4 * byte_19D058BE0[v8]))();
}

void sub_19CE3FE24(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_19CE3FF0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19CE3FF14(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19CE3FF1CLL);
}

void sub_19CE3FF38()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_19CE3FF40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_19CE3FF48(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x19CE3FF50);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t sub_19CE3FF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_19CE45CE0(a1, (uint64_t)sub_19CE45FE8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

double AppleServicesLocalizer.Configuration.init(dataSource:languageSource:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;

  *(_OWORD *)(a3 + 184) = 0u;
  v6 = a3 + 184;
  *(_QWORD *)(a3 + 216) = 0;
  *(_OWORD *)(a3 + 200) = 0u;
  sub_19CCD5B84(a1, a3);
  sub_19CCD5B84(a2, a3 + 40);
  *(_QWORD *)(a3 + 104) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(_QWORD *)(a3 + 112) = &off_1E3DD85F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v7 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_19CFDF878();
  *(_QWORD *)(a3 + 144) = &type metadata for LocalizedStringsTableCollection;
  *(_QWORD *)(a3 + 152) = &protocol witness table for LocalizedStringsTableCollection;
  *(_QWORD *)(a3 + 120) = v7;
  if (qword_1ECEAFF98 != -1)
    swift_once();
  v9 = xmmword_1ECEAFF80;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *(_OWORD *)(a3 + 160) = v9;
  *(_BYTE *)(a3 + 176) = 3;
  sub_19CCECFE4(v6, &qword_1ECEAFF78);
  result = 0.0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_QWORD *)(v6 + 32) = 0;
  return result;
}

uint64_t *AppleServicesLocalizer.Configuration.withFormattingStringsDataSource(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CCD5C40(v2, a2);
  return __swift_assign_boxed_opaque_existential_1((uint64_t *)(a2 + 80), a1);
}

uint64_t AppleServicesLocalizer.Configuration.withDefaultLookupStrategy(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t result;

  v4 = *a1;
  result = sub_19CCD5C40(v2, a2);
  *(_BYTE *)(a2 + 176) = v4;
  return result;
}

id sub_19CE401C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9)
{
  return sub_19CD16D80(a1, a2, a3, a4, a5, a6, a7, a8, a9, 3, 0);
}

id sub_19CE401EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v9;

  v0 = sub_19CFDF08C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v5, sel_setDoesRelativeDateFormatting_, 1);
  objc_msgSend(v5, sel_setDateStyle_, 2);
  objc_msgSend(v5, sel_setTimeStyle_, 0);
  sub_19CFDF020();
  v6 = (void *)sub_19CFDF068();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v5, sel_setCalendar_, v6);

  v7 = (void *)sub_19CFDEFF0();
  objc_msgSend(v5, sel_setLocale_, v7);

  return v5;
}

uint64_t static AppleServicesLocalizer.fetch(contentsOf:for:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[41] = a2;
  v3[42] = v2;
  v3[40] = a1;
  return swift_task_switch();
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  __int128 v16[2];
  char v17;
  __int128 v18[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCD5B84(a1, (uint64_t)v16);
  sub_19CCD5B84(a2, (uint64_t)v18);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v2;
  sub_19CCD14C4(v16, v9 + 24);
  sub_19CCD14C4(v18, v9 + 64);
  *(_QWORD *)&v16[0] = MEMORY[0x1E0DEE9D8];
  v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F160);
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v10 + 16) = v11;
  sub_19CCC290C((uint64_t)v16, v10 + 24, (uint64_t *)&unk_1EE440CB0);
  v12 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = &unk_1EE43F9B8;
  v13[5] = v9;
  v13[6] = v10;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v8, (uint64_t)&unk_1EE43F9C0, (uint64_t)v13);
  swift_release();
  return v10;
}

uint64_t sub_19CE4032C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 328);
  sub_19CCD5B84(*(_QWORD *)(v0 + 320), v0 + 240);
  sub_19CCD5B84(v1, v0 + 280);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_QWORD *)(v0 + 232) = 0;
  sub_19CCD5B84(v0 + 240, v0 + 16);
  sub_19CCD5B84(v0 + 280, v0 + 56);
  *(_QWORD *)(v0 + 120) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(_QWORD *)(v0 + 128) = &off_1E3DD85F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_19CFDF878();
  *(_QWORD *)(v0 + 160) = &type metadata for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 168) = &protocol witness table for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 136) = v2;
  if (qword_1ECEAFF98 != -1)
    swift_once();
  v5 = xmmword_1ECEAFF80;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 280);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 240);
  *(_OWORD *)(v0 + 176) = v5;
  *(_BYTE *)(v0 + 192) = 3;
  sub_19CCECFE4(v0 + 200, &qword_1ECEAFF78);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_QWORD *)(v0 + 232) = 0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v3;
  *v3 = v0;
  v3[1] = sub_19CE404DC;
  return static AppleServicesLocalizer.load(using:)(v0 + 16);
}

uint64_t sub_19CE404DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + 16;
  v5 = *v2;
  *(_QWORD *)(v5 + 352) = v1;
  swift_task_dealloc();
  sub_19CE414B0(v4);
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_19CE40568()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE40574()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1648) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(_OWORD *)(v2 + 72);
    *(_OWORD *)(v2 + 1656) = *(_OWORD *)(v2 + 56);
    *(_OWORD *)(v2 + 1672) = v3;
    *(_QWORD *)(v2 + 1688) = *(_QWORD *)(v2 + 88);
  }
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE40600()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  sub_19CCC290C(v0 + 56, v0 + 16, &qword_1EE43AF18);
  if (*(_QWORD *)(v0 + 16))
  {
    v1 = (_OWORD *)(v0 + 696);
    if (qword_1ECEAFFA0 != -1)
      swift_once();
    sub_19CCD5B84((uint64_t)&unk_1EE43B408, v0 + 296);
    v2 = *(_QWORD *)(v0 + 320);
    v3 = *(_QWORD *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 296), v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v5 = swift_allocObject();
    v6 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 1184) = v6;
    *(_QWORD *)(v0 + 1160) = 0xD000000000000021;
    *(_QWORD *)(v0 + 1168) = 0x800000019D071640;
    *v1 = 0u;
    *(_OWORD *)(v0 + 712) = 0u;
    sub_19CD40658(v0 + 1160, v0 + 696);
    *(_BYTE *)(v0 + 728) = 0;
    v7 = *(_OWORD *)(v0 + 712);
    *(_OWORD *)(v5 + 32) = *v1;
    *(_OWORD *)(v5 + 48) = v7;
    *(_BYTE *)(v5 + 64) = *(_BYTE *)(v0 + 728);
    *(_QWORD *)(v4 + 32) = v5;
    Logger.debug(_:)(v4, v2, v3);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
  }
  *(_QWORD *)(v0 + 1728) = *(_QWORD *)(v0 + 1688);
  v8 = *(_OWORD *)(v0 + 1656);
  *(_OWORD *)(v0 + 1712) = *(_OWORD *)(v0 + 1672);
  *(_OWORD *)(v0 + 1696) = v8;
  v9 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v9);
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 8) + *(_QWORD *)(v10 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1736) = v11;
  *v11 = v0;
  v11[1] = sub_19CCC9240;
  return v13(v9, v10);
}

uint64_t sub_19CE407E8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE40874()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 1728);
  v2 = *(_QWORD *)(v0 + 1720);
  v3 = *(void **)(v0 + 1712);
  v4 = *(_QWORD *)(v0 + 1704);
  v5 = *(_QWORD *)(v0 + 1696);
  swift_unknownObjectRelease();
  sub_19CCF74F8(v5, v4, v3, v2, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE40940()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 1728);
  v2 = *(_QWORD *)(v0 + 1720);
  v3 = *(void **)(v0 + 1712);
  v4 = *(_QWORD *)(v0 + 1704);
  v5 = *(_QWORD *)(v0 + 1696);
  swift_unknownObjectRelease();
  sub_19CCF74F8(v5, v4, v3, v2, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE40A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  __int128 v5;
  _QWORD *v6;
  __int128 *v7;
  __int128 *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v19;
  _QWORD *v20;
  __int128 *v21;
  __int128 *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  __int128 v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  _QWORD *v95;
  uint64_t *v96;
  _QWORD *v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v99;
  __int128 v100;
  __int128 v101;
  char v102;

  v97 = (_QWORD *)(v0 + 96);
  v81 = v0 + 1096;
  v94 = (uint64_t *)(v0 + 1128);
  v1 = *(_QWORD *)(v0 + 1832);
  v2 = *(_QWORD *)(v0 + 1824);
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, v0 + 576);
  v89 = *(_QWORD *)(v0 + 608);
  v91 = *(_QWORD *)(v0 + 600);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 576), v91);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D050760;
  *(_QWORD *)(v0 + 1544) = sub_19CD40918(0, 39, 0, MEMORY[0x1E0DEE9D8]);
  v4._countAndFlagsBits = 0xD000000000000025;
  v4._object = (void *)0x800000019D0715B0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  *(_QWORD *)(v0 + 1504) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 1480) = v2;
  *(_QWORD *)(v0 + 1488) = v1;
  sub_19CCF8C5C(v0 + 1480, v0 + 1352, &qword_1ECEB3370);
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 952) = 0u;
  sub_19CD40658(v0 + 1352, v0 + 936);
  *(_BYTE *)(v0 + 968) = 0;
  *(_BYTE *)(v0 + 888) = 0;
  v5 = *(_OWORD *)(v0 + 952);
  *(_OWORD *)(v0 + 856) = *(_OWORD *)(v0 + 936);
  *(_OWORD *)(v0 + 872) = v5;
  v6 = *(_QWORD **)(v0 + 1544);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_19CD40918(0, v6[2] + 1, 1, v6);
  v7 = (__int128 *)(v0 + 1016);
  v8 = (__int128 *)(v0 + 1056);
  v10 = v6[2];
  v9 = v6[3];
  if (v10 >= v9 >> 1)
    v6 = sub_19CD40918((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
  v84 = v0 + 1320;
  v96 = (uint64_t *)(v0 + 1192);
  v6[2] = v10 + 1;
  v11 = &v6[5 * v10];
  v12 = *(_OWORD *)(v0 + 856);
  v13 = *(_OWORD *)(v0 + 872);
  *((_BYTE *)v11 + 64) = *(_BYTE *)(v0 + 888);
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  *(_QWORD *)(v0 + 1544) = v6;
  sub_19CCECFE4(v0 + 1480, &qword_1ECEB3370);
  v14._countAndFlagsBits = 44;
  v14._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(v0 + 1544);
  *(_QWORD *)(v0 + 1552) = sub_19CD40918(0, 20, 0, MEMORY[0x1E0DEE9D8]);
  v15._object = (void *)0x800000019D0715E0;
  v15._countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v16 = *(_QWORD *)(v0 + 120);
  v17 = __swift_project_boxed_opaque_existential_1(v97, v16);
  *(_QWORD *)(v0 + 1152) = v16;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v94);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
  sub_19CCF8C5C((uint64_t)v94, v81, &qword_1ECEB3370);
  *v7 = 0u;
  *(_OWORD *)(v0 + 1032) = 0u;
  sub_19CD40658(v81, v0 + 1016);
  *(_BYTE *)(v0 + 1048) = 0;
  v19 = *(_OWORD *)(v0 + 1032);
  *v8 = *v7;
  *(_OWORD *)(v0 + 1072) = v19;
  *(_BYTE *)(v0 + 1088) = *(_BYTE *)(v0 + 1048);
  v20 = *(_QWORD **)(v0 + 1552);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v21 = (__int128 *)(v0 + 896);
  v22 = (__int128 *)(v0 + 976);
  v24 = v20[2];
  v23 = v20[3];
  if (v24 >= v23 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v20);
  v20[2] = v24 + 1;
  v25 = &v20[5 * v24];
  v26 = *v8;
  v27 = *(_OWORD *)(v0 + 1072);
  *((_BYTE *)v25 + 64) = *(_BYTE *)(v0 + 1088);
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  *(_QWORD *)(v0 + 1552) = v20;
  sub_19CCECFE4((uint64_t)v94, &qword_1ECEB3370);
  v28._countAndFlagsBits = 44;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v0 + 1552);
  *(_QWORD *)(v0 + 1560) = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
  v29._countAndFlagsBits = 0x203A6E6F73616572;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  swift_getErrorValue();
  v30 = *(_QWORD *)(v0 + 1512);
  v31 = *(_QWORD *)(v0 + 1520);
  *(_QWORD *)(v0 + 1216) = v31;
  v32 = __swift_allocate_boxed_opaque_existential_2Tm(v96);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v32, v30, v31);
  sub_19CCF8C5C((uint64_t)v96, v84, &qword_1ECEB3370);
  *v21 = 0u;
  *(_OWORD *)(v0 + 912) = 0u;
  sub_19CD40658(v84, v0 + 896);
  *(_BYTE *)(v0 + 928) = 0;
  v33 = *(_OWORD *)(v0 + 912);
  *v22 = *v21;
  *(_OWORD *)(v0 + 992) = v33;
  *(_BYTE *)(v0 + 1008) = *(_BYTE *)(v0 + 928);
  v34 = *(_QWORD **)(v0 + 1560);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
  v95 = (_QWORD *)(v0 + 136);
  v36 = v34[2];
  v35 = v34[3];
  if (v36 >= v35 >> 1)
    v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
  v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1856);
  v38 = *(void **)(v0 + 1848);
  v39 = *(_QWORD *)(v0 + 1616);
  v40 = *(_QWORD *)(v0 + 1592);
  v85 = *(_QWORD *)(v0 + 1816) + 1;
  v87 = *(_QWORD *)(v0 + 1808);
  v34[2] = v36 + 1;
  v41 = &v34[5 * v36];
  v42 = *v22;
  v43 = *(_OWORD *)(v0 + 992);
  *((_BYTE *)v41 + 64) = *(_BYTE *)(v0 + 1008);
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  *(_QWORD *)(v0 + 1560) = v34;
  sub_19CCECFE4((uint64_t)v96, &qword_1ECEB3370);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v44);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 1560);
  Logger.warning(_:)(v3, v91, v89);
  swift_bridgeObjectRelease();

  v37(v39, v40);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 576);
  if (v85 == v87)
  {
    swift_bridgeObjectRelease();
    v45 = *(_QWORD *)(v0 + 1792);
    v46 = *(_QWORD *)(v0 + 1768);
    sub_19CCD5B84((uint64_t)&unk_1EE43B408, v0 + 536);
    v92 = *(_QWORD *)(v0 + 568);
    v93 = *(_QWORD *)(v0 + 560);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 536), v93);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_19D0522A0;
    v99 = sub_19CD40918(0, 50, 0, MEMORY[0x1E0DEE9D8]);
    v48._countAndFlagsBits = 0xD000000000000031;
    v48._object = (void *)0x800000019D071600;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    *(_QWORD *)(v0 + 1440) = v45;
    *(_QWORD *)(v0 + 1416) = v46;
    sub_19CCF8C5C(v0 + 1416, v0 + 1448, &qword_1ECEB3370);
    *(_OWORD *)(v0 + 816) = 0u;
    *(_OWORD *)(v0 + 832) = 0u;
    sub_19CD40658(v0 + 1448, v0 + 816);
    *(_BYTE *)(v0 + 848) = 0;
    v100 = *(_OWORD *)(v0 + 816);
    v101 = *(_OWORD *)(v0 + 832);
    v102 = *(_BYTE *)(v0 + 848);
    v49 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_19CD40918(0, v99[2] + 1, 1, v99);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_19CD40918((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v82 = *(void **)(v0 + 1728);
    v52 = *(_QWORD *)(v0 + 1720);
    v53 = *(void **)(v0 + 1712);
    v54 = *(_QWORD *)(v0 + 1704);
    v55 = *(_QWORD *)(v0 + 1696);
    v49[2] = v51 + 1;
    v56 = &v49[5 * v51];
    *((_BYTE *)v56 + 64) = v102;
    *((_OWORD *)v56 + 2) = v100;
    *((_OWORD *)v56 + 3) = v101;
    sub_19CCECFE4(v0 + 1416, &qword_1ECEB3370);
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    *(_QWORD *)(v47 + 32) = v49;
    Logger.error(_:)(v47, v93, v92);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 536);
    sub_19CDD67F4();
    swift_allocError();
    *(_QWORD *)v58 = 0;
    *(_QWORD *)(v58 + 8) = 0;
    *(_BYTE *)(v58 + 16) = 4;
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_19CCF74F8(v55, v54, v53, v52, v82);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 416);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v95);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v60 = *(_QWORD *)(v0 + 1816) + 1;
    *(_QWORD *)(v0 + 1816) = v60;
    v61 = *(_QWORD *)(v0 + 1768) + 16 * v60;
    v62 = *(_QWORD *)(v61 + 32);
    *(_QWORD *)(v0 + 1824) = v62;
    v63 = *(_QWORD *)(v61 + 40);
    *(_QWORD *)(v0 + 1832) = v63;
    sub_19CCD5B84((uint64_t)&unk_1EE43B408, v0 + 456);
    v88 = *(_QWORD *)(v0 + 488);
    v90 = *(_QWORD *)(v0 + 480);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 456), v90);
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_19D0522A0;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 1536) = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
    v65._countAndFlagsBits = 0xD00000000000001ELL;
    v65._object = (void *)0x800000019D071590;
    LogMessage.StringInterpolation.appendLiteral(_:)(v65);
    *(_QWORD *)(v0 + 1408) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 1384) = v62;
    *(_QWORD *)(v0 + 1392) = v63;
    sub_19CCF8C5C(v0 + 1384, v0 + 1224, &qword_1ECEB3370);
    *(_OWORD *)(v0 + 656) = 0u;
    *(_OWORD *)(v0 + 672) = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658(v0 + 1224, v0 + 656);
    *(_BYTE *)(v0 + 688) = 0;
    v66 = *(_OWORD *)(v0 + 672);
    *(_OWORD *)(v0 + 736) = *(_OWORD *)(v0 + 656);
    *(_OWORD *)(v0 + 752) = v66;
    *(_BYTE *)(v0 + 768) = *(_BYTE *)(v0 + 688);
    v67 = *(_QWORD **)(v0 + 1536);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v67 = sub_19CD40918(0, v67[2] + 1, 1, v67);
    v69 = v67[2];
    v68 = v67[3];
    if (v69 >= v68 >> 1)
      v67 = sub_19CD40918((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
    v70 = *(_QWORD *)(v0 + 1616);
    v71 = *(_QWORD *)(v0 + 1600);
    v83 = *(_QWORD *)(v0 + 1592);
    v86 = *(_QWORD *)(v0 + 1608);
    v67[2] = v69 + 1;
    v72 = &v67[5 * v69];
    v73 = *(_OWORD *)(v0 + 736);
    v74 = *(_OWORD *)(v0 + 752);
    *((_BYTE *)v72 + 64) = *(_BYTE *)(v0 + 768);
    *((_OWORD *)v72 + 2) = v73;
    *((_OWORD *)v72 + 3) = v74;
    *(_QWORD *)(v0 + 1536) = v67;
    sub_19CCECFE4(v0 + 1384, &qword_1ECEB3370);
    v75._countAndFlagsBits = 0;
    v75._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    *(_QWORD *)(v64 + 32) = *(_QWORD *)(v0 + 1536);
    Logger.debug(_:)(v64, v90, v88);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 456);
    v76 = *(_QWORD *)(v0 + 160);
    v77 = *(_QWORD *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1(v95, v76);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 16))(v62, v63, v76, v77);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v86, v70, v83);
    v78 = *(_QWORD *)(v0 + 120);
    v79 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1(v97, v78);
    v98 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v79 + 16)
                                                                              + *(_QWORD *)(v79 + 16));
    v80 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1840) = v80;
    *v80 = v0;
    v80[1] = sub_19CCBFDD4;
    return v98(v0 + 616, v62, v63, v78, v79);
  }
}

uint64_t sub_19CE414B0(uint64_t a1)
{
  destroy for AppleServicesLocalizer.Configuration(a1);
  return a1;
}

uint64_t static AppleServicesLocalizer.fetch(contentsOf:for:nativeLookupIn:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[99] = v3;
  v4[98] = a3;
  v4[97] = a2;
  v4[96] = a1;
  return swift_task_switch();
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v17[2];
  char v18;
  __int128 v19[2];
  __int128 v20[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCD5B84(a1, (uint64_t)v17);
  sub_19CCD5B84(a2, (uint64_t)v20);
  sub_19CCD5B84(a3, (uint64_t)v19);
  v11 = swift_allocObject();
  sub_19CCD14C4(v17, v11 + 16);
  sub_19CCD14C4(v20, v11 + 56);
  sub_19CCD14C4(v19, v11 + 96);
  *(_QWORD *)(v11 + 136) = v3;
  *(_QWORD *)&v17[0] = MEMORY[0x1E0DEE9D8];
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F160);
  v12 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v12 + 16) = v13;
  sub_19CCC290C((uint64_t)v17, v12 + 24, (uint64_t *)&unk_1EE440CB0);
  v14 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = &unk_1EE43F9D0;
  v15[5] = v11;
  v15[6] = v12;
  swift_retain();
  sub_19CF5B8E4((uint64_t)v10, (uint64_t)&unk_1EE43F9D8, (uint64_t)v15);
  swift_release();
  return v12;
}

uint64_t sub_19CE41500()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  __int128 v14;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 776);
  sub_19CCD5B84(*(_QWORD *)(v0 + 768), v0 + 688);
  sub_19CCD5B84(v2, v0 + 728);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_QWORD *)(v0 + 456) = 0;
  sub_19CCD5B84(v0 + 688, v0 + 240);
  sub_19CCD5B84(v0 + 728, v0 + 280);
  *(_QWORD *)(v0 + 344) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(_QWORD *)(v0 + 352) = &off_1E3DD85F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v3 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_19CFDF878();
  *(_QWORD *)(v0 + 384) = &type metadata for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 392) = &protocol witness table for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 360) = v3;
  if (qword_1ECEAFF98 != -1)
    swift_once();
  v4 = *(uint64_t **)(v0 + 784);
  v14 = xmmword_1ECEAFF80;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 728);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 688);
  *(_OWORD *)(v0 + 400) = v14;
  *(_BYTE *)(v0 + 416) = 3;
  sub_19CCECFE4(v0 + 424, &qword_1ECEAFF78);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_QWORD *)(v0 + 456) = 0;
  sub_19CCD5C40(v0 + 240, v0 + 464);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v0 + 584), v4);
  v5 = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 192) = v5;
  v6 = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 224) = v6;
  v7 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 128) = v7;
  v8 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 160) = v8;
  v9 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 64) = v9;
  v10 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 96) = v10;
  v11 = *(_OWORD *)(v0 + 480);
  *v1 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = v11;
  sub_19CE414B0(v0 + 240);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v12;
  *v12 = v0;
  v12[1] = sub_19CE4171C;
  return static AppleServicesLocalizer.load(using:)((uint64_t)v1);
}

uint64_t sub_19CE4171C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 808) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 816) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE41790()
{
  uint64_t v0;

  sub_19CE414B0(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 816));
}

uint64_t sub_19CE417C8()
{
  uint64_t v0;

  sub_19CE414B0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE41984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[42] = a3;
  v4[43] = a4;
  v4[40] = a1;
  v4[41] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE419A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 344);
  sub_19CCD5B84(*(_QWORD *)(v0 + 336), v0 + 240);
  sub_19CCD5B84(v1, v0 + 280);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_QWORD *)(v0 + 232) = 0;
  sub_19CCD5B84(v0 + 240, v0 + 16);
  sub_19CCD5B84(v0 + 280, v0 + 56);
  *(_QWORD *)(v0 + 120) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(_QWORD *)(v0 + 128) = &off_1E3DD85F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_19CFDF878();
  *(_QWORD *)(v0 + 160) = &type metadata for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 168) = &protocol witness table for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 136) = v2;
  if (qword_1ECEAFF98 != -1)
    swift_once();
  v5 = xmmword_1ECEAFF80;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 280);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 240);
  *(_OWORD *)(v0 + 176) = v5;
  *(_BYTE *)(v0 + 192) = 3;
  sub_19CCECFE4(v0 + 200, &qword_1ECEAFF78);
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_QWORD *)(v0 + 232) = 0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v3;
  *v3 = v0;
  v3[1] = sub_19CE41B50;
  return static AppleServicesLocalizer.load(using:)(v0 + 16);
}

uint64_t sub_19CE41B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 368) = a1;
  sub_19CE414B0(v4 + 16);
  return swift_task_switch();
}

uint64_t sub_19CE41BD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD **)(v0 + 320);
  v2[3] = type metadata accessor for AppleServicesLocalizer();
  v2[4] = &protocol witness table for AppleServicesLocalizer;
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE41C24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE41DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[100] = a5;
  v5[99] = a4;
  v5[98] = a3;
  v5[97] = a2;
  v5[96] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE41E04()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  __int128 v14;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 784);
  sub_19CCD5B84(*(_QWORD *)(v0 + 776), v0 + 688);
  sub_19CCD5B84(v2, v0 + 728);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_QWORD *)(v0 + 456) = 0;
  sub_19CCD5B84(v0 + 688, v0 + 240);
  sub_19CCD5B84(v0 + 728, v0 + 280);
  *(_QWORD *)(v0 + 344) = &type metadata for DefaultLocalizerFormattingStringsDataSource;
  *(_QWORD *)(v0 + 352) = &off_1E3DD85F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D058CC0;
  *(_QWORD *)(v3 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_19CFDF878();
  *(_QWORD *)(v0 + 384) = &type metadata for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 392) = &protocol witness table for LocalizedStringsTableCollection;
  *(_QWORD *)(v0 + 360) = v3;
  if (qword_1ECEAFF98 != -1)
    swift_once();
  v4 = *(uint64_t **)(v0 + 792);
  v14 = xmmword_1ECEAFF80;
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 728);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 688);
  *(_OWORD *)(v0 + 400) = v14;
  *(_BYTE *)(v0 + 416) = 3;
  sub_19CCECFE4(v0 + 424, &qword_1ECEAFF78);
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_QWORD *)(v0 + 456) = 0;
  sub_19CCD5C40(v0 + 240, v0 + 464);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v0 + 584), v4);
  v5 = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 192) = v5;
  v6 = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 224) = v6;
  v7 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 128) = v7;
  v8 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 160) = v8;
  v9 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 64) = v9;
  v10 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 96) = v10;
  v11 = *(_OWORD *)(v0 + 480);
  *v1 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = v11;
  sub_19CE414B0(v0 + 240);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 808) = v12;
  *v12 = v0;
  v12[1] = sub_19CE42020;
  return static AppleServicesLocalizer.load(using:)((uint64_t)v1);
}

uint64_t sub_19CE42020(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 816) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 824) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE42094()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD **)(v0 + 768);
  v2[3] = *(_QWORD *)(v0 + 800);
  v2[4] = &protocol witness table for AppleServicesLocalizer;
  *v2 = v1;
  sub_19CE414B0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE420E4()
{
  uint64_t v0;

  sub_19CE414B0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE42118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[153] = a3;
  v3[152] = a2;
  v3[151] = a1;
  return swift_task_switch();
}

uint64_t AppleServicesLocalizer.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  v4 = sub_19CFDF038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id AppleServicesLocalizer.jsExport.getter()
{
  uint64_t *v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  id v4;
  objc_super v6;
  _QWORD v7[6];

  v1 = *v0;
  v7[4] = &off_1E3DD1CE0;
  v7[5] = &protocol witness table for AppleServicesLocalizer;
  v7[3] = v1;
  v2 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v3 = objc_allocWithZone(v2);
  sub_19CD3839C((uint64_t)v7, (uint64_t)v3 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v6.receiver = v3;
  v6.super_class = v2;
  swift_retain();
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return v4;
}

uint64_t AppleServicesLocalizer.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t result;
  objc_super v7;
  _QWORD v8[5];

  v8[3] = *v1;
  v8[4] = &off_1E3DD1CE0;
  v3 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v4 = objc_allocWithZone(v3);
  sub_19CD3839C((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v7.receiver = v4;
  v7.super_class = v3;
  swift_retain();
  v5 = objc_msgSendSuper2(&v7, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  a1[3] = v3;
  a1[4] = &off_1E3DCE7D8;
  *a1 = v5;
  return result;
}

Swift::Bool __swiftcall AppleServicesLocalizer.hasString(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;
  char v9;
  _QWORD v11[2];

  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  LOBYTE(v11[0]) = *(_BYTE *)using;
  v4 = sub_19CD3E568(forKey._countAndFlagsBits, (uint64_t)forKey._object, (unsigned __int8 *)v11);
  if (!v5)
    goto LABEL_7;
  v6 = v4;
  v7 = v5;
  v11[0] = countAndFlagsBits;
  v11[1] = object;
  sub_19CD41144();
  if ((sub_19CFE0034() & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v8 = 1;
    return v8 & 1;
  }
  if ((v6 != countAndFlagsBits || v7 != object) && (sub_19CFE06A0() & 1) == 0)
  {
    if ((sub_19CFDF71C() & 1) != 0)
    {
      v9 = sub_19CFDF728();
      swift_bridgeObjectRelease();
      v8 = v9 ^ 1;
      return v8 & 1;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  v8 = 0;
  return v8 & 1;
}

uint64_t sub_19CE423F0(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD v12[2];

  LOBYTE(v12[0]) = *a3;
  v5 = sub_19CD3E568(a1, a2, (unsigned __int8 *)v12);
  if (!v6)
    goto LABEL_7;
  v7 = v5;
  v8 = v6;
  v12[0] = a1;
  v12[1] = a2;
  sub_19CD41144();
  if ((sub_19CFE0034() & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v9 = 1;
    return v9 & 1;
  }
  if ((v7 != a1 || v8 != a2) && (sub_19CFE06A0() & 1) == 0)
  {
    if ((sub_19CFDF71C() & 1) != 0)
    {
      v10 = sub_19CFDF728();
      swift_bridgeObjectRelease();
      v9 = v10 ^ 1;
      return v9 & 1;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  v9 = 0;
  return v9 & 1;
}

Swift::Bool __swiftcall AppleServicesLocalizer.isLocalizedString(_:)(Swift::String a1)
{
  char v1;

  if ((sub_19CFDF71C() & 1) != 0)
    v1 = sub_19CFDF728() ^ 1;
  else
    v1 = 1;
  return v1 & 1;
}

uint64_t AppleServicesLocalizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  Swift::String v34;
  Swift::String v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  Swift::String v42;
  Swift::String v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  Swift::String v50;
  Swift::String v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  Swift::String v58;
  Swift::String v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  __int128 v64;
  __int128 v65;
  Swift::String v66;
  char v68;
  unsigned int v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  _BYTE v76[32];
  __int128 v77;
  __int128 v78;
  char v79;
  __int128 v80;
  __int128 v81;
  _QWORD *v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v8 = *(_QWORD *)a4;
  v9 = *(_QWORD *)(a4 + 8);
  v10 = *(unsigned __int8 *)(a4 + 16);
  v11 = *a5;
  v68 = *(_BYTE *)(a4 + 17);
  swift_bridgeObjectRetain();
  if ((v68 & 1) != 0)
  {
    v12 = sub_19CFE013C();
    v14 = v13;
    sub_19CE46C58(v8, v9, v10, 1);
  }
  else
  {
    sub_19CE46C68(v8, v9, v10, 0);
    v12 = v8;
    v14 = v9;
  }
  v70 = v11;
  LOBYTE(v83[0]) = v11;
  v15 = sub_19CD40C68(a1, a2, a3, v12, v14, v83);
  v73 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ECEAFFA0 != -1)
    swift_once();
  v69 = v10;
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)v83);
  v71 = v85;
  v72 = v84;
  __swift_project_boxed_opaque_existential_1(v83, v84);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_19D050750;
  v82 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *((_QWORD *)&v81 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v80 = 0xD000000000000027;
  *((_QWORD *)&v80 + 1) = 0x800000019D0716B0;
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 0;
  v77 = v74;
  v78 = v75;
  v19 = v82;
  v20 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
  v22 = v19[2];
  v21 = v19[3];
  if (v22 >= v21 >> 1)
    v19 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
  v19[2] = v22 + 1;
  v23 = &v19[5 * v22];
  v24 = v77;
  v25 = v78;
  *((_BYTE *)v23 + 64) = v79;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  v82 = v19;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v26._countAndFlagsBits = 44;
  v26._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(_QWORD *)(v17 + 32) = v82;
  v82 = sub_19CD40918(0, 7, 0, MEMORY[0x1E0DEE9D8]);
  v27._countAndFlagsBits = 0x203A79656BLL;
  v27._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  *((_QWORD *)&v81 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v80 = a1;
  *((_QWORD *)&v80 + 1) = a2;
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 0;
  v77 = v74;
  v78 = v75;
  v28 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_19CD40918(0, v28[2] + 1, 1, v28);
  v30 = v28[2];
  v29 = v28[3];
  if (v30 >= v29 >> 1)
    v28 = sub_19CD40918((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
  v28[2] = v30 + 1;
  v31 = &v28[5 * v30];
  v32 = v77;
  v33 = v78;
  *((_BYTE *)v31 + 64) = v79;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  v82 = v28;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v34._countAndFlagsBits = 44;
  v34._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(_QWORD *)(v17 + 40) = v82;
  v82 = sub_19CD40918(0, 16, 0, MEMORY[0x1E0DEE9D8]);
  v35._countAndFlagsBits = 0x6D6563616C706572;
  v35._object = (void *)0xEE00203A73746E65;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  if (a3)
  {
    *((_QWORD *)&v81 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
    *(_QWORD *)&v80 = a3;
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 2;
  v77 = v74;
  v78 = v75;
  v36 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v36 = sub_19CD40918(0, v36[2] + 1, 1, v36);
  v38 = v36[2];
  v37 = v36[3];
  if (v38 >= v37 >> 1)
    v36 = sub_19CD40918((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
  v36[2] = v38 + 1;
  v39 = &v36[5 * v38];
  v40 = v77;
  v41 = v78;
  *((_BYTE *)v39 + 64) = v79;
  *((_OWORD *)v39 + 2) = v40;
  *((_OWORD *)v39 + 3) = v41;
  v82 = v36;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v42._countAndFlagsBits = 44;
  v42._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v42);
  *(_QWORD *)(v17 + 48) = v82;
  v82 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v43._countAndFlagsBits = 0x56746C7561666564;
  v43._object = (void *)0xEF22203A65756C61;
  LogMessage.StringInterpolation.appendLiteral(_:)(v43);
  *((_QWORD *)&v81 + 1) = &type metadata for LocalizerDefaultValue;
  *(_QWORD *)&v80 = v8;
  *((_QWORD *)&v80 + 1) = v9;
  LOBYTE(v81) = v69;
  BYTE1(v81) = v68;
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  sub_19CE46C68(v8, v9, v69, v68);
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 2;
  v77 = v74;
  v78 = v75;
  v44 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v44 = sub_19CD40918(0, v44[2] + 1, 1, v44);
  v46 = v44[2];
  v45 = v44[3];
  if (v46 >= v45 >> 1)
    v44 = sub_19CD40918((_QWORD *)(v45 > 1), v46 + 1, 1, v44);
  v44[2] = v46 + 1;
  v47 = &v44[5 * v46];
  v48 = v77;
  v49 = v78;
  *((_BYTE *)v47 + 64) = v79;
  *((_OWORD *)v47 + 2) = v48;
  *((_OWORD *)v47 + 3) = v49;
  v82 = v44;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v50._countAndFlagsBits = 11298;
  v50._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v50);
  *(_QWORD *)(v17 + 56) = v82;
  v82 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v51._object = (void *)0x800000019D071690;
  v51._countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v51);
  *((_QWORD *)&v81 + 1) = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v80) = v70;
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 0;
  v77 = v74;
  v78 = v75;
  v52 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v52 = sub_19CD40918(0, v52[2] + 1, 1, v52);
  v54 = v52[2];
  v53 = v52[3];
  if (v54 >= v53 >> 1)
    v52 = sub_19CD40918((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
  v52[2] = v54 + 1;
  v55 = &v52[5 * v54];
  v56 = v77;
  v57 = v78;
  *((_BYTE *)v55 + 64) = v79;
  *((_OWORD *)v55 + 2) = v56;
  *((_OWORD *)v55 + 3) = v57;
  v82 = v52;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v58._countAndFlagsBits = 44;
  v58._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  *(_QWORD *)(v17 + 64) = v82;
  v82 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v59._countAndFlagsBits = 0x203A746C75736572;
  v59._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v59);
  *((_QWORD *)&v81 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v80 = v20;
  *((_QWORD *)&v80 + 1) = v73;
  sub_19CCF8C5C((uint64_t)&v80, (uint64_t)v76, &qword_1ECEB3370);
  v74 = 0u;
  v75 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v76, (uint64_t)&v74);
  v79 = 2;
  v77 = v74;
  v78 = v75;
  v60 = v82;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v60 = sub_19CD40918(0, v60[2] + 1, 1, v60);
  v62 = v60[2];
  v61 = v60[3];
  if (v62 >= v61 >> 1)
    v60 = sub_19CD40918((_QWORD *)(v61 > 1), v62 + 1, 1, v60);
  v60[2] = v62 + 1;
  v63 = &v60[5 * v62];
  v64 = v77;
  v65 = v78;
  *((_BYTE *)v63 + 64) = v79;
  *((_OWORD *)v63 + 2) = v64;
  *((_OWORD *)v63 + 3) = v65;
  v82 = v60;
  sub_19CCECFE4((uint64_t)&v80, &qword_1ECEB3370);
  v66._countAndFlagsBits = 34;
  v66._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v66);
  *(_QWORD *)(v17 + 72) = v82;
  Logger.debug(_:)(v17, v72, v71);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v83);
  return v20;
}

uint64_t sub_19CE42E58@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  Swift::String v38;
  ValueMetadata *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  Swift::String v46;
  Swift::String v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  Swift::String v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  Swift::String v62;
  Swift::String v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  __int128 v68;
  __int128 v69;
  Swift::String v70;
  uint64_t result;
  int v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v78;
  __int128 v79;
  _BYTE v80[32];
  __int128 v81;
  __int128 v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  ValueMetadata *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;

  v11 = a4 & 1;
  v12 = a6 & 1;
  v13 = a2;
  v14 = a1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  swift_beginAccess();
  v72 = v12;
  v15 = sub_19CD16964(0, 0, v13, 0, a3, v11, a5, v12, v14);
  swift_endAccess();
  v16 = objc_msgSend(v15, sel_stringFromNumber_, a7);

  if (v16)
  {
    v76 = sub_19CFDF578();
    v18 = v17;

  }
  else
  {
    objc_msgSend(a7, sel_decimalValue);
    v76 = sub_19CFDFF20();
    v18 = v19;
  }
  if (qword_1ECEAFFA0 != -1)
    swift_once();
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)&v88);
  v74 = v90;
  v75 = v89;
  __swift_project_boxed_opaque_existential_1(&v88, v89);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D050750;
  v91 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  v87 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v84 = 0xD000000000000042;
  v85 = 0x800000019D071AD0;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v22 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
    v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
  v22[2] = v24 + 1;
  v25 = &v22[5 * v24];
  v26 = v81;
  v27 = v82;
  *((_BYTE *)v25 + 64) = v83;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v91 = v22;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v28._countAndFlagsBits = 44;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(_QWORD *)(v20 + 32) = v91;
  v91 = sub_19CD40918(0, 10, 0, MEMORY[0x1E0DEE9D8]);
  v29._countAndFlagsBits = 0x203A7265626D756ELL;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  v87 = (ValueMetadata *)sub_19CD16BB8();
  v84 = (unint64_t)a7;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  v30 = a7;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v31 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  v34 = &v31[5 * v33];
  v35 = v81;
  v36 = v82;
  *((_BYTE *)v34 + 64) = v83;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  v91 = v31;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v37._countAndFlagsBits = 44;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(_QWORD *)(v20 + 40) = v91;
  v91 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v38._object = (void *)0x800000019D071A90;
  v38._countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  v39 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  if (v11)
  {
    a3 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
  }
  else
  {
    v87 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  }
  v84 = a3;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v40 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v40 = sub_19CD40918(0, v40[2] + 1, 1, v40);
  v42 = v40[2];
  v41 = v40[3];
  if (v42 >= v41 >> 1)
    v40 = sub_19CD40918((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
  v40[2] = v42 + 1;
  v43 = &v40[5 * v42];
  v44 = v81;
  v45 = v82;
  *((_BYTE *)v43 + 64) = v83;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  v91 = v40;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v46._countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(_QWORD *)(v20 + 48) = v91;
  v91 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v47._object = (void *)0x800000019D071AB0;
  v47._countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  if (v72)
  {
    a5 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
  }
  else
  {
    v87 = v39;
  }
  v84 = a5;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v48 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v48 = sub_19CD40918(0, v48[2] + 1, 1, v48);
  v50 = v48[2];
  v49 = v48[3];
  if (v50 >= v49 >> 1)
    v48 = sub_19CD40918((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
  v48[2] = v50 + 1;
  v51 = &v48[5 * v50];
  v52 = v81;
  v53 = v82;
  *((_BYTE *)v51 + 64) = v83;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  v91 = v48;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v54._countAndFlagsBits = 44;
  v54._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(_QWORD *)(v20 + 56) = v91;
  v91 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v55._countAndFlagsBits = 0x3A747865746E6F63;
  v55._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  v87 = &type metadata for LocalizerContext;
  LOBYTE(v84) = a2;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v56 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v56 = sub_19CD40918(0, v56[2] + 1, 1, v56);
  v58 = v56[2];
  v57 = v56[3];
  if (v58 >= v57 >> 1)
    v56 = sub_19CD40918((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
  v56[2] = v58 + 1;
  v59 = &v56[5 * v58];
  v60 = v81;
  v61 = v82;
  *((_BYTE *)v59 + 64) = v83;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  v91 = v56;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v62._countAndFlagsBits = 44;
  v62._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  *(_QWORD *)(v20 + 64) = v91;
  v91 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v63._object = (void *)0xE900000000000022;
  v63._countAndFlagsBits = 0x203A746C75736572;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  v87 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v84 = v76;
  v85 = v18;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 2;
  v81 = v78;
  v82 = v79;
  v64 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v64 = sub_19CD40918(0, v64[2] + 1, 1, v64);
  v66 = v64[2];
  v65 = v64[3];
  if (v66 >= v65 >> 1)
    v64 = sub_19CD40918((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
  v64[2] = v66 + 1;
  v67 = &v64[5 * v66];
  v68 = v81;
  v69 = v82;
  *((_BYTE *)v67 + 64) = v83;
  *((_OWORD *)v67 + 2) = v68;
  *((_OWORD *)v67 + 3) = v69;
  v91 = v64;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v70._countAndFlagsBits = 34;
  v70._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  *(_QWORD *)(v20 + 72) = v91;
  Logger.debug(_:)(v20, v75, v74);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v88);
  *a8 = v76;
  a8[1] = v18;
  return result;
}

Swift::String __swiftcall AppleServicesLocalizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(NSNumber forNumber, Swift::Int_optional minimumFractionDigits, Swift::Int_optional maximumFractionDigits, JetEngine::LocalizerContext in)
{
  uint64_t v4;
  void *v5;
  Swift::String result;

  v4 = sub_19CD168C4((uint64_t)forNumber.super.super.isa, minimumFractionDigits.value, *(uint64_t *)&minimumFractionDigits.is_nil, maximumFractionDigits.value, *(uint64_t *)&maximumFractionDigits.is_nil, in, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE43748);
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_19CE43748@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  Swift::String v38;
  ValueMetadata *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  Swift::String v46;
  Swift::String v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  Swift::String v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  Swift::String v62;
  Swift::String v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  __int128 v68;
  __int128 v69;
  Swift::String v70;
  uint64_t result;
  int v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v78;
  __int128 v79;
  _BYTE v80[32];
  __int128 v81;
  __int128 v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  ValueMetadata *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;

  v11 = a4 & 1;
  v12 = a6 & 1;
  v13 = a2;
  v14 = a1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  swift_beginAccess();
  v72 = v12;
  v15 = sub_19CD16964(0, 0, v13, 0, a3, v11, a5, v12, v14);
  swift_endAccess();
  v16 = objc_msgSend(v15, sel_stringFromNumber_, a7);

  if (v16)
  {
    v76 = sub_19CFDF578();
    v18 = v17;

  }
  else
  {
    objc_msgSend(a7, sel_decimalValue);
    v76 = sub_19CFDFF20();
    v18 = v19;
  }
  if (qword_1ECEAFFA0 != -1)
    swift_once();
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)&v88);
  v74 = v90;
  v75 = v89;
  __swift_project_boxed_opaque_existential_1(&v88, v89);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D050750;
  v91 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  v87 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v84 = 0xD000000000000045;
  v85 = 0x800000019D071A40;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v22 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
    v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
  v22[2] = v24 + 1;
  v25 = &v22[5 * v24];
  v26 = v81;
  v27 = v82;
  *((_BYTE *)v25 + 64) = v83;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v91 = v22;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v28._countAndFlagsBits = 44;
  v28._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(_QWORD *)(v20 + 32) = v91;
  v91 = sub_19CD40918(0, 10, 0, MEMORY[0x1E0DEE9D8]);
  v29._countAndFlagsBits = 0x203A7265626D756ELL;
  v29._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  v87 = (ValueMetadata *)sub_19CD16BB8();
  v84 = (unint64_t)a7;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  v30 = a7;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v31 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  v34 = &v31[5 * v33];
  v35 = v81;
  v36 = v82;
  *((_BYTE *)v34 + 64) = v83;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  v91 = v31;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v37._countAndFlagsBits = 44;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(_QWORD *)(v20 + 40) = v91;
  v91 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v38._object = (void *)0x800000019D071A90;
  v38._countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  v39 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  if (v11)
  {
    a3 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
  }
  else
  {
    v87 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  }
  v84 = a3;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v40 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v40 = sub_19CD40918(0, v40[2] + 1, 1, v40);
  v42 = v40[2];
  v41 = v40[3];
  if (v42 >= v41 >> 1)
    v40 = sub_19CD40918((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
  v40[2] = v42 + 1;
  v43 = &v40[5 * v42];
  v44 = v81;
  v45 = v82;
  *((_BYTE *)v43 + 64) = v83;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  v91 = v40;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v46._countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(_QWORD *)(v20 + 48) = v91;
  v91 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v47._object = (void *)0x800000019D071AB0;
  v47._countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  if (v72)
  {
    a5 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
  }
  else
  {
    v87 = v39;
  }
  v84 = a5;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v48 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v48 = sub_19CD40918(0, v48[2] + 1, 1, v48);
  v50 = v48[2];
  v49 = v48[3];
  if (v50 >= v49 >> 1)
    v48 = sub_19CD40918((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
  v48[2] = v50 + 1;
  v51 = &v48[5 * v50];
  v52 = v81;
  v53 = v82;
  *((_BYTE *)v51 + 64) = v83;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  v91 = v48;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v54._countAndFlagsBits = 44;
  v54._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(_QWORD *)(v20 + 56) = v91;
  v91 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v55._countAndFlagsBits = 0x3A747865746E6F63;
  v55._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  v87 = &type metadata for LocalizerContext;
  LOBYTE(v84) = a2;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 0;
  v81 = v78;
  v82 = v79;
  v56 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v56 = sub_19CD40918(0, v56[2] + 1, 1, v56);
  v58 = v56[2];
  v57 = v56[3];
  if (v58 >= v57 >> 1)
    v56 = sub_19CD40918((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
  v56[2] = v58 + 1;
  v59 = &v56[5 * v58];
  v60 = v81;
  v61 = v82;
  *((_BYTE *)v59 + 64) = v83;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  v91 = v56;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v62._countAndFlagsBits = 44;
  v62._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  *(_QWORD *)(v20 + 64) = v91;
  v91 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v63._object = (void *)0xE900000000000022;
  v63._countAndFlagsBits = 0x203A746C75736572;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  v87 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v84 = v76;
  v85 = v18;
  sub_19CCF8C5C((uint64_t)&v84, (uint64_t)v80, &qword_1ECEB3370);
  v78 = 0u;
  v79 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v80, (uint64_t)&v78);
  v83 = 2;
  v81 = v78;
  v82 = v79;
  v64 = v91;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v64 = sub_19CD40918(0, v64[2] + 1, 1, v64);
  v66 = v64[2];
  v65 = v64[3];
  if (v66 >= v65 >> 1)
    v64 = sub_19CD40918((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
  v64[2] = v66 + 1;
  v67 = &v64[5 * v66];
  v68 = v81;
  v69 = v82;
  *((_BYTE *)v67 + 64) = v83;
  *((_OWORD *)v67 + 2) = v68;
  *((_OWORD *)v67 + 3) = v69;
  v91 = v64;
  sub_19CCECFE4((uint64_t)&v84, &qword_1ECEB3370);
  v70._countAndFlagsBits = 34;
  v70._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  *(_QWORD *)(v20 + 72) = v91;
  Logger.debug(_:)(v20, v75, v74);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v88);
  *a8 = v76;
  a8[1] = v18;
  return result;
}

uint64_t AppleServicesLocalizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  Swift::String v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  Swift::String v46;
  Swift::String v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  Swift::String v54;
  Swift::String v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  Swift::String v62;
  Swift::String v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  __int128 v68;
  __int128 v69;
  Swift::String v70;
  Swift::String v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  __int128 v76;
  __int128 v77;
  Swift::String v78;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _BYTE v88[32];
  __int128 v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  _QWORD *v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;

  v10 = *(_QWORD *)a5;
  v11 = *(_QWORD *)(a5 + 8);
  v12 = *(unsigned __int8 *)(a5 + 16);
  v13 = *a6;
  v80 = *(_BYTE *)(a5 + 17);
  v81 = *(unsigned __int8 *)(a5 + 16);
  swift_bridgeObjectRetain();
  if ((v80 & 1) != 0)
  {
    v14 = sub_19CFE013C();
    v15 = v12;
    v17 = v16;
    sub_19CE46C58(v10, v11, v15, 1);
  }
  else
  {
    sub_19CE46C68(v10, v11, v12, 0);
    v14 = v10;
    v17 = v11;
  }
  v82 = v11;
  LOBYTE(v95[0]) = v13;
  *(_QWORD *)&v85 = sub_19CD266DC(a1, a2, a3, a4, v14, v17, (char *)v95);
  *((_QWORD *)&v85 + 1) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ECEAFFA0 != -1)
    swift_once();
  v19 = v10;
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)v95);
  v83 = v97;
  v84 = v96;
  __swift_project_boxed_opaque_existential_1(v95, v96);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D058CD0;
  v94 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *((_QWORD *)&v93 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v92 = 0xD000000000000031;
  *((_QWORD *)&v92 + 1) = 0x800000019D071710;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 0;
  v89 = v86;
  v90 = v87;
  v22 = v94;
  v23 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
  v25 = v22[2];
  v24 = v22[3];
  if (v25 >= v24 >> 1)
    v22 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
  v22[2] = v25 + 1;
  v26 = &v22[5 * v25];
  v27 = v89;
  v28 = v90;
  *((_BYTE *)v26 + 64) = v91;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  v94 = v22;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v29._countAndFlagsBits = 44;
  v29._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  *(_QWORD *)(v20 + 32) = v94;
  v94 = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
  v30._countAndFlagsBits = 0x203A746E756F63;
  v30._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *((_QWORD *)&v93 + 1) = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v92 = a1;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 0;
  v89 = v86;
  v90 = v87;
  v31 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  v34 = &v31[5 * v33];
  v35 = v89;
  v36 = v90;
  *((_BYTE *)v34 + 64) = v91;
  *((_OWORD *)v34 + 2) = v35;
  *((_OWORD *)v34 + 3) = v36;
  v94 = v31;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v37._countAndFlagsBits = 44;
  v37._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  *(_QWORD *)(v20 + 40) = v94;
  v94 = sub_19CD40918(0, 7, 0, MEMORY[0x1E0DEE9D8]);
  v38._countAndFlagsBits = 0x203A79656BLL;
  v38._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  v39 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v93 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v92 = a2;
  *((_QWORD *)&v92 + 1) = a3;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 0;
  v89 = v86;
  v90 = v87;
  v40 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v40 = sub_19CD40918(0, v40[2] + 1, 1, v40);
  v42 = v40[2];
  v41 = v40[3];
  if (v42 >= v41 >> 1)
    v40 = sub_19CD40918((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
  v40[2] = v42 + 1;
  v43 = &v40[5 * v42];
  v44 = v89;
  v45 = v90;
  *((_BYTE *)v43 + 64) = v91;
  *((_OWORD *)v43 + 2) = v44;
  *((_OWORD *)v43 + 3) = v45;
  v94 = v40;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v46._countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  *(_QWORD *)(v20 + 48) = v94;
  v94 = sub_19CD40918(0, 16, 0, MEMORY[0x1E0DEE9D8]);
  v47._countAndFlagsBits = 0x6D6563616C706572;
  v47._object = (void *)0xEE00203A73746E65;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  if (a4)
  {
    *((_QWORD *)&v93 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
    *(_QWORD *)&v92 = a4;
  }
  else
  {
    v92 = 0u;
    v93 = 0u;
  }
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 0;
  v89 = v86;
  v90 = v87;
  v48 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v48 = sub_19CD40918(0, v48[2] + 1, 1, v48);
  v50 = v48[2];
  v49 = v48[3];
  if (v50 >= v49 >> 1)
    v48 = sub_19CD40918((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
  v48[2] = v50 + 1;
  v51 = &v48[5 * v50];
  v52 = v89;
  v53 = v90;
  *((_BYTE *)v51 + 64) = v91;
  *((_OWORD *)v51 + 2) = v52;
  *((_OWORD *)v51 + 3) = v53;
  v94 = v48;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v54._countAndFlagsBits = 44;
  v54._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  *(_QWORD *)(v20 + 56) = v94;
  v94 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v55._countAndFlagsBits = 0x56746C7561666564;
  v55._object = (void *)0xEF22203A65756C61;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *((_QWORD *)&v93 + 1) = &type metadata for LocalizerDefaultValue;
  *(_QWORD *)&v92 = v19;
  *((_QWORD *)&v92 + 1) = v82;
  LOBYTE(v93) = v81;
  BYTE1(v93) = v80;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  sub_19CE46C68(v19, v82, v81, v80);
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 2;
  v89 = v86;
  v90 = v87;
  v56 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v56 = sub_19CD40918(0, v56[2] + 1, 1, v56);
  v58 = v56[2];
  v57 = v56[3];
  if (v58 >= v57 >> 1)
    v56 = sub_19CD40918((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
  v56[2] = v58 + 1;
  v59 = &v56[5 * v58];
  v60 = v89;
  v61 = v90;
  *((_BYTE *)v59 + 64) = v91;
  *((_OWORD *)v59 + 2) = v60;
  *((_OWORD *)v59 + 3) = v61;
  v94 = v56;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v62._countAndFlagsBits = 11298;
  v62._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v62);
  *(_QWORD *)(v20 + 64) = v94;
  v94 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v63._object = (void *)0x800000019D071690;
  v63._countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  *((_QWORD *)&v93 + 1) = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v92) = v23;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 0;
  v89 = v86;
  v90 = v87;
  v64 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v64 = sub_19CD40918(0, v64[2] + 1, 1, v64);
  v66 = v64[2];
  v65 = v64[3];
  if (v66 >= v65 >> 1)
    v64 = sub_19CD40918((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
  v64[2] = v66 + 1;
  v67 = &v64[5 * v66];
  v68 = v89;
  v69 = v90;
  *((_BYTE *)v67 + 64) = v91;
  *((_OWORD *)v67 + 2) = v68;
  *((_OWORD *)v67 + 3) = v69;
  v94 = v64;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v70._countAndFlagsBits = 44;
  v70._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  *(_QWORD *)(v20 + 72) = v94;
  v94 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v71._countAndFlagsBits = 0x203A746C75736572;
  v71._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v71);
  *((_QWORD *)&v93 + 1) = v39;
  v92 = v85;
  sub_19CCF8C5C((uint64_t)&v92, (uint64_t)v88, &qword_1ECEB3370);
  v86 = 0u;
  v87 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v88, (uint64_t)&v86);
  v91 = 2;
  v89 = v86;
  v90 = v87;
  v72 = v94;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v72 = sub_19CD40918(0, v72[2] + 1, 1, v72);
  v74 = v72[2];
  v73 = v72[3];
  if (v74 >= v73 >> 1)
    v72 = sub_19CD40918((_QWORD *)(v73 > 1), v74 + 1, 1, v72);
  v72[2] = v74 + 1;
  v75 = &v72[5 * v74];
  v76 = v89;
  v77 = v90;
  *((_BYTE *)v75 + 64) = v91;
  *((_OWORD *)v75 + 2) = v76;
  *((_OWORD *)v75 + 3) = v77;
  v94 = v72;
  sub_19CCECFE4((uint64_t)&v92, &qword_1ECEB3370);
  v78._countAndFlagsBits = 34;
  v78._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v78);
  *(_QWORD *)(v20 + 80) = v94;
  Logger.debug(_:)(v20, v84, v83);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v95);
  return v85;
}

uint64_t AppleServicesLocalizer.relativeDate(_:using:)(uint64_t a1, unsigned __int8 *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  _BYTE *v30;
  uint64_t v31;
  char v32;
  ValueMetadata **v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  ValueMetadata *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  Swift::String v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t *v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  __int128 v71;
  __int128 v72;
  Swift::String v73;
  Swift::String v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  __int128 v79;
  __int128 v80;
  Swift::String v81;
  Swift::String v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  __int128 v87;
  __int128 v88;
  Swift::String v89;
  uint64_t v91;
  char v92;
  _BYTE v93[12];
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  _BYTE v113[32];
  __int128 v114;
  __int128 v115;
  char v116;
  uint64_t v117;
  unint64_t v118;
  ValueMetadata *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;

  v107 = a1;
  v4 = type metadata accessor for LocalizerFormattingKey();
  MEMORY[0x1E0C80A78](v4, v5);
  v106 = &v93[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = sub_19CFDF08C();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101, v7);
  v9 = &v93[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = sub_19CFDEC24();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105, v10);
  v12 = &v93[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v110 = sub_19CFDEF84();
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110, v13);
  v15 = &v93[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = *a2;
  sub_19CFDEF78();
  v102 = v2;
  sub_19CFDF020();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F9E0);
  v16 = sub_19CFDF080();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D058CD0;
  v21 = v20 + v19;
  v22 = *MEMORY[0x1E0CB1158];
  v99 = v17;
  v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 104);
  v23(v21, v22, v16);
  v98 = *MEMORY[0x1E0CB1160];
  ((void (*)(unint64_t))v23)(v21 + v18);
  v97 = *MEMORY[0x1E0CB10F8];
  ((void (*)(unint64_t))v23)(v21 + 2 * v18);
  v96 = *MEMORY[0x1E0CB1130];
  ((void (*)(unint64_t))v23)(v21 + 3 * v18);
  v95 = *MEMORY[0x1E0CB1140];
  ((void (*)(unint64_t))v23)(v21 + 4 * v18);
  v94 = *MEMORY[0x1E0CB1178];
  ((void (*)(unint64_t))v23)(v21 + 5 * v18);
  v23(v21 + 6 * v18, *MEMORY[0x1E0CB1188], v16);
  sub_19CE46540(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v103 = v15;
  sub_19CFDF05C();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v100 + 8))(v9, v101);
  v24 = v12;
  v25 = sub_19CFDEC00();
  if ((v26 & 1) == 0)
  {
    v27 = v25;
    if (v25 > 0)
    {
      v28 = v106;
      v29 = v102;
LABEL_17:
      v40 = v99;
LABEL_18:
      v23((unint64_t)v28, v22, v16);
      v41 = 0;
      v30 = v24;
      goto LABEL_19;
    }
  }
  v30 = v12;
  v31 = sub_19CFDEC0C();
  v28 = v106;
  v29 = v102;
  if ((v32 & 1) == 0)
  {
    v27 = v31;
    if (v31 > 0)
    {
      v33 = (ValueMetadata **)((char *)&v120 + 4);
LABEL_16:
      v22 = *((unsigned int *)v33 - 64);
      goto LABEL_17;
    }
  }
  v34 = sub_19CFDEBDC();
  if ((v35 & 1) == 0)
  {
    v27 = v34;
    if (v34 > 0)
    {
      v33 = (ValueMetadata **)&v120;
      goto LABEL_16;
    }
  }
  v36 = sub_19CFDEBE8();
  if ((v37 & 1) == 0)
  {
    v27 = v36;
    if (v36 > 0)
    {
      v33 = (ValueMetadata **)((char *)&v119 + 4);
      goto LABEL_16;
    }
  }
  v38 = sub_19CFDEBF4();
  if ((v39 & 1) == 0)
  {
    v27 = v38;
    if (v38 > 0)
    {
      v33 = &v119;
      goto LABEL_16;
    }
  }
  v91 = sub_19CFDEC18();
  v27 = 0;
  v41 = 1;
  if ((v92 & 1) != 0)
  {
    v40 = v99;
  }
  else
  {
    v40 = v99;
    if (v91 >= 1)
    {
      v22 = v94;
      v27 = v91;
      goto LABEL_18;
    }
  }
LABEL_19:
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v28, v41, 1, v16);
  v42 = v29[12];
  v43 = v29[13];
  __swift_project_boxed_opaque_existential_1(v29 + 9, v42);
  v44 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v43 + 8))(v28, v42, v43);
  v46 = v45;
  v121 = 10794;
  v122 = 0xE200000000000000;
  sub_19CFDF698();
  sub_19CFDF698();
  if ((v41 & 1) != 0)
  {
    v47 = v121;
    LOBYTE(v121) = v108;
    v48 = sub_19CD40C68(v44, v46, 0, v47, v122, &v121);
  }
  else
  {
    v50 = v121;
    LOBYTE(v121) = v108;
    v48 = sub_19CD266DC(v27, v44, v46, 0, v50, v122, (char *)&v121);
  }
  v51 = v48;
  v52 = v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ECEAFFA0 != -1)
    swift_once();
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)&v121);
  v53 = v123;
  v106 = v124;
  v102 = __swift_project_boxed_opaque_existential_1(&v121, v123);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_19D055650;
  v120 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  v56 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v119 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v117 = 0xD000000000000016;
  v118 = 0x800000019D0717D0;
  sub_19CCF8C5C((uint64_t)&v117, (uint64_t)v113, &qword_1ECEB3370);
  v112 = 0u;
  v111 = 0u;
  sub_19CD40658((uint64_t)v113, (uint64_t)&v111);
  v116 = 0;
  v114 = v111;
  v115 = v112;
  v57 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v57 = sub_19CD40918(0, v57[2] + 1, 1, v57);
  v59 = v57[2];
  v58 = v57[3];
  if (v59 >= v58 >> 1)
    v57 = sub_19CD40918((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
  v57[2] = v59 + 1;
  v60 = &v57[5 * v59];
  v61 = v114;
  v62 = v115;
  *((_BYTE *)v60 + 64) = v116;
  *((_OWORD *)v60 + 2) = v61;
  *((_OWORD *)v60 + 3) = v62;
  v120 = v57;
  sub_19CCECFE4((uint64_t)&v117, &qword_1ECEB3370);
  v63._countAndFlagsBits = 44;
  v63._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  *(_QWORD *)(v54 + 32) = v120;
  v120 = sub_19CD40918(0, 10, 0, MEMORY[0x1E0DEE9D8]);
  v64._countAndFlagsBits = 0x22203A65746164;
  v64._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v64);
  v65 = v110;
  v119 = (ValueMetadata *)v110;
  v66 = __swift_allocate_boxed_opaque_existential_2Tm(&v117);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v109 + 16))(v66, v107, v65);
  sub_19CCF8C5C((uint64_t)&v117, (uint64_t)v113, &qword_1ECEB3370);
  v112 = 0u;
  v111 = 0u;
  sub_19CD40658((uint64_t)v113, (uint64_t)&v111);
  v116 = 0;
  v114 = v111;
  v115 = v112;
  v67 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v67 = sub_19CD40918(0, v67[2] + 1, 1, v67);
  v69 = v67[2];
  v68 = v67[3];
  if (v69 >= v68 >> 1)
    v67 = sub_19CD40918((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
  v67[2] = v69 + 1;
  v70 = &v67[5 * v69];
  v71 = v114;
  v72 = v115;
  *((_BYTE *)v70 + 64) = v116;
  *((_OWORD *)v70 + 2) = v71;
  *((_OWORD *)v70 + 3) = v72;
  v120 = v67;
  sub_19CCECFE4((uint64_t)&v117, &qword_1ECEB3370);
  v73._countAndFlagsBits = 11298;
  v73._object = (void *)0xE200000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v73);
  *(_QWORD *)(v54 + 40) = v120;
  v120 = sub_19CD40918(0, 18, 0, MEMORY[0x1E0DEE9D8]);
  v74._object = (void *)0x800000019D071690;
  v74._countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v74);
  v119 = &type metadata for LocalizerLookupStrategy;
  LOBYTE(v117) = v108;
  sub_19CCF8C5C((uint64_t)&v117, (uint64_t)v113, &qword_1ECEB3370);
  v112 = 0u;
  v111 = 0u;
  sub_19CD40658((uint64_t)v113, (uint64_t)&v111);
  v116 = 0;
  v114 = v111;
  v115 = v112;
  v75 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v75 = sub_19CD40918(0, v75[2] + 1, 1, v75);
  v77 = v75[2];
  v76 = v75[3];
  if (v77 >= v76 >> 1)
    v75 = sub_19CD40918((_QWORD *)(v76 > 1), v77 + 1, 1, v75);
  v75[2] = v77 + 1;
  v78 = &v75[5 * v77];
  v79 = v114;
  v80 = v115;
  *((_BYTE *)v78 + 64) = v116;
  *((_OWORD *)v78 + 2) = v79;
  *((_OWORD *)v78 + 3) = v80;
  v120 = v75;
  sub_19CCECFE4((uint64_t)&v117, &qword_1ECEB3370);
  v81._countAndFlagsBits = 44;
  v81._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v81);
  *(_QWORD *)(v54 + 48) = v120;
  v120 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v82._countAndFlagsBits = 0x203A746C75736572;
  v82._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v82);
  v119 = v56;
  v117 = v51;
  v118 = v52;
  sub_19CCF8C5C((uint64_t)&v117, (uint64_t)v113, &qword_1ECEB3370);
  v112 = 0u;
  v111 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v113, (uint64_t)&v111);
  v116 = 2;
  v114 = v111;
  v115 = v112;
  v83 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v83 = sub_19CD40918(0, v83[2] + 1, 1, v83);
  v85 = v83[2];
  v84 = v83[3];
  if (v85 >= v84 >> 1)
    v83 = sub_19CD40918((_QWORD *)(v84 > 1), v85 + 1, 1, v83);
  v83[2] = v85 + 1;
  v86 = &v83[5 * v85];
  v87 = v114;
  v88 = v115;
  *((_BYTE *)v86 + 64) = v116;
  *((_OWORD *)v86 + 2) = v87;
  *((_OWORD *)v86 + 3) = v88;
  v120 = v83;
  sub_19CCECFE4((uint64_t)&v117, &qword_1ECEB3370);
  v89._countAndFlagsBits = 34;
  v89._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v89);
  *(_QWORD *)(v54 + 56) = v120;
  Logger.debug(_:)(v54, v53, (uint64_t)v106);
  swift_bridgeObjectRelease();
  sub_19CE46CAC((uint64_t)v28);
  (*(void (**)(_BYTE *, uint64_t))(v104 + 8))(v30, v105);
  (*(void (**)(_BYTE *, uint64_t))(v109 + 8))(v103, v110);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v121);
  return v51;
}

_QWORD *AppleServicesLocalizer.deinit()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  char *v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 4));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 9));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 14));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 19));
  swift_release();
  swift_unknownObjectRelease();
  sub_19CCECFE4((uint64_t)(v0 + 28), &qword_1ECEAFF78);
  sub_19CCECFE4((uint64_t)(v0 + 33), (uint64_t *)&unk_1ECEAFFC0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 38));
  v1 = (void *)v0[43];
  swift_release();

  v2 = (void *)v0[46];
  swift_release();

  v3 = (void *)v0[49];
  swift_release();

  v4 = (void *)v0[52];
  swift_release();

  v5 = (char *)v0 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  v6 = sub_19CFDF038();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t AppleServicesLocalizer.__deallocating_deinit()
{
  AppleServicesLocalizer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19CE456E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[42] = a3;
  v4[43] = v3;
  v4[40] = a1;
  v4[41] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE45704()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[42];
  sub_19CCD5B84(v0[41], (uint64_t)(v0 + 30));
  sub_19CCD5B84(v1, (uint64_t)(v0 + 35));
  AppleServicesLocalizer.Configuration.init(dataSource:languageSource:)((uint64_t)(v0 + 30), (uint64_t)(v0 + 35), (uint64_t)(v0 + 2));
  v2 = (_QWORD *)swift_task_alloc();
  v0[44] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_19CE45794;
  return static AppleServicesLocalizer.load(using:)((uint64_t)(v0 + 2));
}

uint64_t sub_19CE45794(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;

  v4 = *v2;
  *(_QWORD *)(v4 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_19CE414B0(v4 + 16);
    return swift_task_switch();
  }
  else
  {
    v6 = *(_QWORD **)(v4 + 320);
    sub_19CE414B0(v4 + 16);
    *v6 = a1;
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_19CE45830@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9JetEngine22AppleServicesLocalizer_locale;
  v4 = sub_19CFDF038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

BOOL sub_19CE45878(uint64_t a1, uint64_t a2, JetEngine::LocalizerLookupStrategy a3)
{
  return AppleServicesLocalizer.hasString(forKey:using:)(*(Swift::String *)&a1, a3);
}

uint64_t sub_19CE4589C()
{
  char v0;

  if ((sub_19CFDF71C() & 1) != 0)
    v0 = sub_19CFDF728() ^ 1;
  else
    v0 = 1;
  return v0 & 1;
}

uint64_t sub_19CE458F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char *a5)
{
  return AppleServicesLocalizer.string(forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19CE45918(NSNumber a1, Swift::Int_optional a2, Swift::Int_optional a3, JetEngine::LocalizerContext a4)
{
  a2.is_nil &= 1u;
  a3.is_nil &= 1u;
  return AppleServicesLocalizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(a1, a2, a3, a4)._countAndFlagsBits;
}

uint64_t sub_19CE45940(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char *a6)
{
  return AppleServicesLocalizer.string(withCount:forKey:with:defaultValue:using:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19CE45964(uint64_t a1, unsigned __int8 *a2)
{
  return AppleServicesLocalizer.relativeDate(_:using:)(a1, a2);
}

uint64_t sub_19CE45984@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  objc_class *v5;
  id v6;
  id v7;
  uint64_t result;
  objc_super v9;
  _QWORD v10[5];

  v4 = *v2;
  v10[3] = a1;
  v10[4] = &off_1E3DD1CE0;
  v10[0] = v4;
  v5 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v6 = objc_allocWithZone(v5);
  sub_19CD3839C((uint64_t)v10, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_retain();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a2[3] = v5;
  a2[4] = &off_1E3DCE7D8;
  *a2 = v7;
  return result;
}

unint64_t sub_19CE45A40()
{
  unint64_t result;

  result = sub_19CD2758C((uint64_t)&unk_1E3DDAF40);
  qword_1EE465CE8 = result;
  return result;
}

uint64_t sub_19CE45A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v13 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v13)
      goto LABEL_23;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v13)
        goto LABEL_23;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v13)
          goto LABEL_23;
        v10 = *(_QWORD *)(v12 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v13)
            goto LABEL_23;
          v10 = *(_QWORD *)(v12 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CD41144();
    a1 = sub_19CFE0004();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v11 = v9 + 4;
  if (v11 >= v13)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v13)
      goto LABEL_23;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_19CE45CE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_19CE24F50();
  if (!v8)
    goto LABEL_24;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_19CD3FD1C(v7, v8);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_19CE1A3B4();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v26 = (uint64_t *)(v24[6] + 16 * v17);
    *v26 = v11;
    v26[1] = v12;
    v27 = (_QWORD *)(v24[7] + 16 * v17);
    *v27 = v13;
    v27[1] = v14;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    v31 = sub_19CE24F50();
    if (v32)
    {
      v35 = v31;
      v36 = v32;
      v37 = v33;
      v38 = v34;
      do
      {
        v43 = (_QWORD *)*a5;
        v45 = sub_19CD3FD1C(v35, v36);
        v46 = v43[2];
        v47 = (v44 & 1) == 0;
        v48 = v46 + v47;
        if (__OFADD__(v46, v47))
          goto LABEL_25;
        v49 = v44;
        if (v43[3] < v48)
        {
          sub_19CD26CB4(v48, 1);
          v50 = sub_19CD3FD1C(v35, v36);
          if ((v49 & 1) != (v51 & 1))
            goto LABEL_27;
          v45 = v50;
        }
        v52 = (_QWORD *)*a5;
        if ((v49 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v39 = (_QWORD *)(v52[7] + 16 * v45);
          swift_bridgeObjectRelease();
          *v39 = v37;
          v39[1] = v38;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          v53 = (uint64_t *)(v52[6] + 16 * v45);
          *v53 = v35;
          v53[1] = v36;
          v54 = (_QWORD *)(v52[7] + 16 * v45);
          *v54 = v37;
          v54[1] = v38;
          v55 = v52[2];
          v29 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v29)
            goto LABEL_26;
          v52[2] = v56;
        }
        v35 = sub_19CE24F50();
        v36 = v40;
        v37 = v41;
        v38 = v42;
      }
      while (v40);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19CDB88CC();
    return swift_release();
  }
  sub_19CD26CB4(v20, a4 & 1);
  v22 = sub_19CD3FD1C(v11, v12);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v25 = (_QWORD *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *v25 = v13;
    v25[1] = v14;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE45FE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *sub_19CE4601C@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  _QWORD v6[2];

  result = a1(v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t _s9JetEngine22AppleServicesLocalizerC8fileSize8forBytesSSSd_tF_0(double a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  Swift::String v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  Swift::String v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  Swift::String v34;
  __int128 v36;
  __int128 v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  char v41;
  double v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;

  v4 = (void *)objc_opt_self();
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a1 < 9.22337204e18)
  {
    v5 = objc_msgSend(v4, sel_stringFromByteCount_countStyle_, (uint64_t)a1, 0);
    v1 = sub_19CFDF578();
    v2 = v6;

    if (qword_1ECEAFFA0 == -1)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_5:
  sub_19CCD5B84((uint64_t)&unk_1EE43B408, (uint64_t)v46);
  v7 = v47;
  v8 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D050760;
  v45 = sub_19CD40918(0, 2, 0, MEMORY[0x1E0DEE9D8]);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v10);
  v11 = MEMORY[0x1E0DEA968];
  v44 = MEMORY[0x1E0DEA968];
  v42 = -2.31584178e77;
  v43 = 0x800000019D071950;
  sub_19CCF8C5C((uint64_t)&v42, (uint64_t)v38, &qword_1ECEB3370);
  v36 = 0u;
  v37 = 0u;
  sub_19CD40658((uint64_t)v38, (uint64_t)&v36);
  v41 = 0;
  v39 = v36;
  v40 = v37;
  v12 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_19CD40918(0, v12[2] + 1, 1, v12);
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
    v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
  v12[2] = v14 + 1;
  v15 = &v12[5 * v14];
  v16 = v39;
  v17 = v40;
  *((_BYTE *)v15 + 64) = v41;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  v45 = v12;
  sub_19CCECFE4((uint64_t)&v42, &qword_1ECEB3370);
  v18._countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(_QWORD *)(v9 + 32) = v45;
  v45 = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
  v19._countAndFlagsBits = 0x203A7365747962;
  v19._object = (void *)0xE700000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v44 = MEMORY[0x1E0DEB070];
  v42 = a1;
  sub_19CCF8C5C((uint64_t)&v42, (uint64_t)v38, &qword_1ECEB3370);
  v36 = 0u;
  v37 = 0u;
  sub_19CD40658((uint64_t)v38, (uint64_t)&v36);
  v41 = 0;
  v39 = v36;
  v40 = v37;
  v20 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v20[2] = v22 + 1;
  v23 = &v20[5 * v22];
  v24 = v39;
  v25 = v40;
  *((_BYTE *)v23 + 64) = v41;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  v45 = v20;
  sub_19CCECFE4((uint64_t)&v42, &qword_1ECEB3370);
  v26._countAndFlagsBits = 44;
  v26._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(_QWORD *)(v9 + 40) = v45;
  v45 = sub_19CD40918(0, 11, 0, MEMORY[0x1E0DEE9D8]);
  v27._countAndFlagsBits = 0x203A746C75736572;
  v27._object = (void *)0xE900000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v27);
  v44 = v11;
  v42 = *(double *)&v1;
  v43 = v2;
  sub_19CCF8C5C((uint64_t)&v42, (uint64_t)v38, &qword_1ECEB3370);
  v36 = 0u;
  v37 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v38, (uint64_t)&v36);
  v41 = 2;
  v39 = v36;
  v40 = v37;
  v28 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_19CD40918(0, v28[2] + 1, 1, v28);
  v30 = v28[2];
  v29 = v28[3];
  if (v30 >= v29 >> 1)
    v28 = sub_19CD40918((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
  v28[2] = v30 + 1;
  v31 = &v28[5 * v30];
  v32 = v39;
  v33 = v40;
  *((_BYTE *)v31 + 64) = v41;
  *((_OWORD *)v31 + 2) = v32;
  *((_OWORD *)v31 + 3) = v33;
  v45 = v28;
  sub_19CCECFE4((uint64_t)&v42, &qword_1ECEB3370);
  v34._countAndFlagsBits = 34;
  v34._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  *(_QWORD *)(v9 + 48) = v45;
  Logger.debug(_:)(v9, v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
  return v1;
}

uint64_t sub_19CE46540(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = sub_19CFDF080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FA70);
    v12 = sub_19CFE00F4();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      sub_19CE47400(&qword_1EE43FA78, MEMORY[0x1E0CB11D0]);
      v16 = sub_19CFDF4C4();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v6, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          sub_19CE47400(&qword_1EE43FA80, MEMORY[0x1E0CB11D8]);
          v22 = sub_19CFDF548();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v6, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_19CE46798(uint64_t a1)
{
  return sub_19CE467B0(a1, &qword_1ECEB1D20);
}

uint64_t sub_19CE467A4(uint64_t a1)
{
  return sub_19CE467B0(a1, &qword_1ECEB04B8);
}

uint64_t sub_19CE467B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_19CFE00F4();
    v5 = 0;
    v6 = v4 + 56;
    v26 = a1 + 32;
    while (1)
    {
      v7 = (uint64_t *)(v26 + 16 * v5);
      v9 = *v7;
      v8 = v7[1];
      sub_19CFE08C8();
      swift_bridgeObjectRetain_n();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
      result = sub_19CFE0910();
      v11 = -1 << *(_BYTE *)(v4 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        v16 = *(_QWORD *)(v4 + 48);
        v17 = (_QWORD *)(v16 + 16 * v12);
        v18 = *v17 == v9 && v17[1] == v8;
        if (v18 || (result = sub_19CFE06A0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v19 = ~v11;
        while (1)
        {
          v12 = (v12 + 1) & v19;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
          v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
            break;
          v20 = (_QWORD *)(v16 + 16 * v12);
          if (*v20 != v9 || v20[1] != v8)
          {
            result = sub_19CFE06A0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v13) = v15 | v14;
      v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v22 = v9;
      v22[1] = v8;
      v23 = *(_QWORD *)(v4 + 16);
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v25;
LABEL_4:
      if (++v5 == v2)
        return v4;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_19CE46958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[81] = a4;
  v4[80] = a3;
  v4[79] = a2;
  v4[78] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4697C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE469B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return swift_deallocObject();
}

uint64_t sub_19CE469E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43F9B0 + dword_1EE43F9B0))(a1, v4, v1 + 24, v1 + 64);
}

uint64_t sub_19CE46A6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C18
                                                                                     + dword_1EE442C18))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CE46B00()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return swift_deallocObject();
}

uint64_t sub_19CE46B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1 + 16;
  v5 = v1 + 56;
  v6 = v1 + 96;
  v7 = *(_QWORD *)(v1 + 136);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43F9C8
                                                                              + dword_1EE43F9C8))(a1, v4, v5, v6, v7);
}

uint64_t sub_19CE46BC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EE442C18
                                                                                     + dword_1EE442C18))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_19CE46C58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_19CE46C68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_19CE46C78(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_19CE46CAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocalizerFormattingKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CE46CE8()
{
  return type metadata accessor for AppleServicesLocalizer();
}

uint64_t method lookup function for AppleServicesLocalizer()
{
  return swift_lookUpClassMethod();
}

uint64_t assignWithCopy for AppleServicesLocalizer.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  v4 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 168) = v4;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v5 = *(_QWORD *)(a2 + 208);
  if (!*(_QWORD *)(a1 + 208))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 208) = v5;
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 184, a2 + 184);
      return a1;
    }
LABEL_7:
    v6 = *(_OWORD *)(a2 + 184);
    v7 = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v6;
    *(_OWORD *)(a1 + 200) = v7;
    return a1;
  }
  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 184);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 184), (uint64_t *)(a2 + 184));
  return a1;
}

__n128 __swift_memcpy224_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for AppleServicesLocalizer.Configuration(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v6 = *(_QWORD *)(a2 + 160);
  v7 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v6;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 168) = v7;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  if (*(_QWORD *)(a1 + 208))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 184);
  v8 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v8;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleServicesLocalizer.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 224))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleServicesLocalizer.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_19CE46FB0(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t sub_19CE46FF0(id *a1)
{

  return swift_release();
}

uint64_t sub_19CE47018(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CE47070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FormatterCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatterCache);
}

uint64_t sub_19CE470C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0710);
    v3 = sub_19CFE00F4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_19CFE08C8();
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      result = sub_19CFE0910();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_19CFE06A0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_19CFE06A0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_19CE47260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C770);
    v3 = sub_19CFE00F4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_19CFE08C8();
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      result = sub_19CFE0910();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_19CFE06A0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_19CFE06A0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_19CE47400(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_19CFDF080();
    result = MEMORY[0x1A1ADBD7C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IntentOutcome.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t static IntentOutcome<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v28[1] = a4;
  v30 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v28[0] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IntentOutcome(0, v8, v8, v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v28 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v29 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v17 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v16);
  v19 = (char *)v28 - v18;
  v21 = (char *)v28 + *(int *)(v20 + 48) - v18;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v22((char *)v28 - v18, a1, v10, v17);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, v30, v10);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v23(v19, 1, a3) == 1)
  {
    v24 = 1;
    if (v23(v21, 1, a3) == 1)
      goto LABEL_8;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v22)(v14, v19, v10);
    if (v23(v21, 1, a3) != 1)
    {
      v25 = (char *)v28[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v6 + 32))(v28[0], v21, a3);
      v24 = sub_19CFDF548();
      v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      v26(v25, a3);
      v26(v14, a3);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, a3);
  }
  v24 = 0;
  v11 = v29;
  v10 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
  return v24 & 1;
}

uint64_t type metadata accessor for IntentOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentOutcome);
}

uint64_t sub_19CE4772C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static IntentOutcome<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_19CE47738()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_19CE47790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_19CE47868(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_19CE478C4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_19CE4795C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_19CE47A3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_19CE47AD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_19CE47BB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_19CE47CF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_19CE47E9C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19CE47EA4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_19CE47EC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_19CE47EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t PreferenceKey.lookupName.getter()
{
  uint64_t v0;

  v0 = sub_19CD3F3F8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PreferenceKey.lookupName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PreferenceKey.lookupName.modify())()
{
  return nullsub_1;
}

uint64_t static PreferenceKey.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t dispatch thunk of MappedPreferenceKey.encode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MappedPreferenceKey.decode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_19CE47FAC()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t sub_19CE48004()
{
  sub_19CFE08D4();
  return sub_19CFE08D4();
}

uint64_t sub_19CE4803C()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

BOOL sub_19CE48090(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_19CE480A8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43B518);
  swift_allocObject();
  result = sub_19CFE0A60();
  qword_1EE43AEB8 = result;
  return result;
}

uint64_t sub_19CE48100()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE4810C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v7;
  _QWORD *v8;

  v7 = *a3;
  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v3 = v8;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_19CCDB5D8(0, v8[2] + 1, 1, v8);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_19CCDB5D8((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  *(_OWORD *)&v3[2 * v5 + 4] = v7;
  sub_19CFE0A78();
  return swift_bridgeObjectRelease();
}

unint64_t sub_19CE4825C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CD3C8F8(0, v1, 0);
    v2 = 0;
    do
    {
      sub_19CFE0A90();
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      sub_19CFDF698();
      v4 = *(_QWORD *)(v7 + 16);
      v3 = *(_QWORD *)(v7 + 24);
      if (v4 >= v3 >> 1)
        sub_19CD3C8F8(v3 > 1, v4 + 1, 1);
      ++v2;
      *(_QWORD *)(v7 + 16) = v4 + 1;
      v5 = v7 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 60;
      *(_QWORD *)(v5 + 40) = 0xE100000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
  sub_19CD1632C();
  sub_19CFDF4F4();
  swift_bridgeObjectRelease();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

unint64_t sub_19CE48404()
{
  uint64_t *v0;

  return sub_19CE4825C(*v0);
}

ValueMetadata *type metadata accessor for DependencyCycleError()
{
  return &type metadata for DependencyCycleError;
}

unint64_t sub_19CE48424()
{
  unint64_t result;

  result = qword_1EE43FA90[0];
  if (!qword_1EE43FA90[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059020, &type metadata for DependencyCycleError.Creator);
    atomic_store(result, qword_1EE43FA90);
  }
  return result;
}

JetEngine::PreferenceMigrator __swiftcall PreferenceMigrator.init()()
{
  _QWORD *v0;
  JetEngine::PreferenceMigrator result;

  *v0 = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t PreferenceMigrator.renaming<A>(_:to:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v7 = a1[1];
  v8 = *a2;
  v9 = a2[1];
  v10 = *v4;
  *(_QWORD *)&v18 = *a1;
  *((_QWORD *)&v18 + 1) = v7;
  v21[0] = v8;
  v21[1] = v9;
  sub_19CF768FC(&v18, v21, &v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_19CED6558(0, v10[2] + 1, 1, v10);
    *a4 = (uint64_t)v10;
  }
  v15 = v10[2];
  v14 = v10[3];
  if (v15 >= v14 >> 1)
  {
    v10 = sub_19CED6558((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
    *a4 = (uint64_t)v10;
  }
  v18 = v22;
  v19 = v23;
  v20 = v24;
  v16 = type metadata accessor for RenamePreferenceMigrationRule(0, a3, v12, v13);
  result = sub_19CCEF50C(v15, (uint64_t)&v18, a4, v16, (uint64_t)&off_1E3DD6EC0);
  *a4 = (uint64_t)v10;
  return result;
}

uint64_t PreferenceMigrator.mapping<A, B>(_:to:with:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  _QWORD **v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25[2];
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v11 = a1[1];
  v12 = *a2;
  v13 = a2[1];
  v14 = *v7;
  *(_QWORD *)&v21 = *a1;
  *((_QWORD *)&v21 + 1) = v11;
  v25[0] = v12;
  v25[1] = v13;
  sub_19CDDF6C4(&v21, v25, a3, a4, &v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a7 = (uint64_t)v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_19CED6558(0, v14[2] + 1, 1, v14);
    *a7 = (uint64_t)v14;
  }
  v18 = v14[2];
  v17 = v14[3];
  if (v18 >= v17 >> 1)
  {
    v14 = sub_19CED6558((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
    *a7 = (uint64_t)v14;
  }
  v21 = v26;
  v22 = v27;
  v23 = v28;
  v24 = v29;
  v19 = type metadata accessor for MapPreferenceMigrationRule(0, a5, a6, v16);
  result = sub_19CCEF50C(v18, (uint64_t)&v21, a7, v19, (uint64_t)&off_1E3DD4F50);
  *a7 = (uint64_t)v14;
  return result;
}

uint64_t PreferenceMigrator.removing(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  _UNKNOWN **v10;
  _BYTE v11[40];

  v4 = *v2;
  sub_19CCD5B84(a1, (uint64_t)v11);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_19CED6558(0, v4[2] + 1, 1, v4);
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_19CED6558((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v9 = &type metadata for RemovePreferenceMigrationRule;
  v10 = &off_1E3DD6DD8;
  *(_QWORD *)&v8 = swift_allocObject();
  sub_19CE48C38((uint64_t)v11, v8 + 16);
  v4[2] = v6 + 1;
  sub_19CCD14C4(&v8, (uint64_t)&v4[5 * v6 + 4]);
  *a2 = v4;
  return sub_19CE48C74((uint64_t)v11);
}

uint64_t PreferenceMigrator.setting<A>(_:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];

  v31 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SetPreferenceMigrationRule(0, v11, v11, v12);
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (uint64_t *)((char *)&v31 - v20);
  v22 = *a2;
  v23 = a2[1];
  v24 = *v4;
  v33[0] = v22;
  v33[1] = v23;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, v31, a3, v19);
  sub_19CDE0F98(v33, (uint64_t)v10, a3, v25, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_19CED6558(0, v24[2] + 1, 1, v24);
    *a4 = (uint64_t)v24;
  }
  v28 = v24[2];
  v27 = v24[3];
  if (v28 >= v27 >> 1)
  {
    v24 = sub_19CED6558((_QWORD *)(v27 > 1), v28 + 1, 1, v24);
    *a4 = (uint64_t)v24;
  }
  v29 = v32;
  (*(void (**)(char *, _QWORD *, uint64_t))(v32 + 16))(v16, v21, v13);
  sub_19CCEF50C(v28, (uint64_t)v16, a4, v13, (uint64_t)&off_1E3DD5508);
  *a4 = (uint64_t)v24;
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v29 + 8))(v21, v13);
}

uint64_t PreferenceMigrator.run(from:to:toleratingErrors:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v7 = v6;
  v9 = result;
  v10 = *v5;
  v11 = *(_QWORD *)(*v5 + 16);
  if ((a5 & 1) != 0)
  {
    if (v11)
    {
      v12 = v10 + 32;
      swift_bridgeObjectRetain();
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        sub_19CCD5B84(v12, (uint64_t)v25);
        v14 = v26;
        v15 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v9, a2, a3, v28, v14, v15);
        if (v7)
        {
          v16 = v7;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_19CED656C(0, v13[2] + 1, 1, v13);
          v18 = v13[2];
          v17 = v13[3];
          if (v18 >= v17 >> 1)
            v13 = sub_19CED656C((_QWORD *)(v17 > 1), v18 + 1, 1, v13);
          v13[2] = v18 + 1;
          v13[v18 + 4] = v7;

          v7 = 0;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      if (v13[2])
        goto LABEL_17;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      {
LABEL_17:
        sub_19CE04734();
        swift_allocError();
        v23 = v22;
        if (!v13[2])
          sub_19CFA8E78((unint64_t)"JetEngine/CompoundError.swift", 0x1DuLL, 2, 0x15uLL);
        *v23 = v13;
        return swift_willThrow();
      }
    }
    return swift_bridgeObjectRelease();
  }
  if (v11)
  {
    v19 = v10 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_19CCD5B84(v19, (uint64_t)v25);
      v20 = v26;
      v21 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v9, a2, a3, v28, v20, v21);
      if (v6)
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      v19 += 40;
      if (!--v11)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  return result;
}

uint64_t PreferenceMigrator.run(on:toleratingErrors:)(uint64_t a1, uint64_t a2, char a3)
{
  return PreferenceMigrator.run(from:to:toleratingErrors:)(a1, a2, a1, a2, a3);
}

uint64_t sub_19CE48C14()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CE48C38(uint64_t a1, uint64_t a2)
{
  _s19DeepLinkDestinationVwcp(a2, a1);
  return a2;
}

uint64_t sub_19CE48C74(uint64_t a1)
{
  _s19DeepLinkDestinationVwxx();
  return a1;
}

ValueMetadata *type metadata accessor for PreferenceMigrator()
{
  return &type metadata for PreferenceMigrator;
}

uint64_t sub_19CE48CB8(uint64_t a1)
{
  sub_19CFDF938();
  return a1;
}

uint64_t static StaticIntent.kind.getter()
{
  return 0x63697461747324;
}

uint64_t StaticIntent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

BOOL sub_19CE48D10()
{
  uint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_19CE48D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0592A8, a3);
  return sub_19CFE0760();
}

uint64_t sub_19CE48DA8(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D0592A8, a1);
  return sub_19CFDF818();
}

uint64_t sub_19CE48DF4()
{
  MEMORY[0x1A1ADBD7C](&unk_19D0592A8);
  return sub_19CFDF830();
}

uint64_t sub_19CE48E44()
{
  MEMORY[0x1A1ADBD7C](&unk_19D0592A8);
  return sub_19CFDF824();
}

BOOL sub_19CE48E94@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_19CE48D10();
  *a1 = result;
  return result;
}

void sub_19CE48ECC(_QWORD *a1@<X8>)
{
  *a1 = 0x6174616424;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_19CE48EE4()
{
  return 0x6174616424;
}

BOOL sub_19CE48EF8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_19CE48D10();
  *a1 = result;
  return result;
}

uint64_t sub_19CE48F24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CDBA69C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19CE48F50(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D059348, a1);
  return sub_19CFE0A48();
}

uint64_t sub_19CE48F84(uint64_t a1)
{
  MEMORY[0x1A1ADBD7C](&unk_19D059348, a1);
  return sub_19CFE0A54();
}

uint64_t static StaticIntent._unwrapData<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  int v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[5];

  v41 = a5;
  v42 = a2;
  v40 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_19CFDFF5C();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v39 = (uint64_t)&v37 - v10;
  v13 = type metadata accessor for StaticIntent(255, a1, v11, v12);
  v14 = sub_19CFDFF5C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v37 - v17;
  v19 = *(_QWORD *)(v13 - 8);
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v24 = (char *)&v37 - v23;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, double))(a4 + 40))(v44, v42, a4, v22);
  v43 = a1;
  swift_getExtendedExistentialTypeMetadata();
  v25 = swift_dynamicCast();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  if (v25)
  {
    v28 = v37;
    v27 = v38;
    v26(v18, 0, 1, v13);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v18, v13);
    v29 = v39;
    static Continuous._unwrapOnlyElement<A>(of:)((uint64_t)v24, AssociatedTypeWitness, a1, v40, v39);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v13);
    v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v29, 1, AssociatedTypeWitness);
    v32 = v41;
    if (v31 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v41, v29, AssociatedTypeWitness);
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
      v34 = v32;
      v35 = 0;
      return v33(v34, v35, 1, AssociatedTypeWitness);
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    v34 = v32;
  }
  else
  {
    v26(v18, 1, 1, v13);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
    v34 = v41;
  }
  v35 = 1;
  return v33(v34, v35, 1, AssociatedTypeWitness);
}

void sub_19CE49220(_QWORD *a1@<X8>)
{
  *a1 = 0x63697461747324;
  a1[1] = 0xE700000000000000;
}

uint64_t StaticIntent<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  int EnumCaseMultiPayload;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD v74[4];
  uint64_t v75;

  v75 = a3;
  v5 = a1;
  v60 = a4;
  v62 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v63 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v8);
  v64 = (char *)&v57 - v9;
  v13 = type metadata accessor for StaticIntent.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1A1ADBD7C](&unk_19D059348, v13);
  v14 = sub_19CFE04D8();
  v66 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v57 - v16;
  v20 = type metadata accessor for Result(0, v14, v18, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v57 - v27;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (char *)&v57 - v31;
  v59 = type metadata accessor for StaticIntent(0, a2, v33, v34);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59, v35);
  v61 = (char *)&v57 - v36;
  v65 = a2;
  v71 = a2;
  v72 = v75;
  v73 = v5;
  Result.init(trying:)((void (*)(double))sub_19CE4971C, v14, v37, (uint64_t)v32);
  v67 = v21;
  v38 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v39 = v20;
  v38(v28, v32, v20);
  v69 = v28;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v68 = v5;
  if (EnumCaseMultiPayload == 1)
    goto LABEL_6;
  v41 = v64;
  v42 = v69;
  v43 = v70;
  v38(v24, v69, v39);
  v44 = v66;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v17, v24, v14);
  if ((sub_19CFE04CC() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v14);
    v5 = v68;
LABEL_6:
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v49 = v70;
    sub_19CFE09D0();
    if (v49)
    {
      v47 = *(void (**)(char *, uint64_t))(v67 + 8);
      v47(v32, v39);
      v48 = (uint64_t)v68;
      v42 = v69;
      goto LABEL_9;
    }
    __swift_project_boxed_opaque_existential_1(v74, v74[3]);
    v50 = v63;
    v51 = v65;
    sub_19CFE06DC();
    v54 = *(void (**)(char *, uint64_t))(v67 + 8);
    v54(v32, v39);
    v55 = v61;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v50, v51);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
    v42 = v69;
LABEL_12:
    v54(v42, v39);
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v60, v55, v59);
    v52 = (uint64_t)v68;
    return __swift_destroy_boxed_opaque_existential_1Tm(v52);
  }
  v45 = v41;
  v46 = v65;
  sub_19CFE04B4();
  if (!v43)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v14);
    v56 = v45;
    v54 = *(void (**)(char *, uint64_t))(v67 + 8);
    v54(v32, v39);
    v55 = v61;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v56, v46);
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v14);
  v47 = *(void (**)(char *, uint64_t))(v67 + 8);
  v47(v32, v39);
  v48 = (uint64_t)v68;
LABEL_9:
  v47(v42, v39);
  v52 = v48;
  return __swift_destroy_boxed_opaque_existential_1Tm(v52);
}

uint64_t type metadata accessor for StaticIntent.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticIntent.CodingKeys);
}

uint64_t sub_19CE49694(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = type metadata accessor for StaticIntent.CodingKeys(0, a2, v3, v4);
  MEMORY[0x1A1ADBD7C](&unk_19D059348, v5);
  return sub_19CFE09E8();
}

uint64_t sub_19CE4971C()
{
  uint64_t v0;

  return sub_19CE49694(*(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 16));
}

uint64_t sub_19CE49738@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return StaticIntent<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t StaticIntent<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v12[1] = a3;
  v5 = type metadata accessor for StaticIntent.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x1A1ADBD7C](&unk_19D059348, v5);
  v6 = sub_19CFE0574();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A24();
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_19CE49864(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return StaticIntent<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

uint64_t StaticIntent<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  void (*v29)(_QWORD *, uint64_t *, uint64_t, uint64_t);
  uint64_t result;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = v5;
  v8 = a3;
  v9 = a1;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v31 - v16;
  v33 = *v18;
  sub_19CDE0324(v19, (uint64_t)v34);
  v20 = v35;
  if (v35)
  {
    v31 = v17;
    v32 = v9;
    v21 = v8;
    v22 = a4;
    v23 = v11;
    v24 = a5;
    v25 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v26 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v25 + 16);
    v27 = v25;
    a5 = v24;
    v11 = v23;
    a4 = v22;
    v8 = v21;
    v6 = v5;
    v9 = v32;
    v28 = v26(0x6174616424, 0xE500000000000000, v20, v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    if ((v28 & 1) != 0)
    {
      JSONObject.subscript.getter(0x6174616424, 0xE500000000000000, (uint64_t)v34);
      v37 = v33;
      v29 = *(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t))(a4 + 8);
      v13 = v31;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CDE036C((uint64_t)v34);
  }
  sub_19CD3E448(v9, (uint64_t)v34);
  v37 = v33;
  v29 = *(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t))(a4 + 8);
LABEL_6:
  v29(v34, &v37, v8, a4);
  result = sub_19CD3E3F8(v9);
  if (!v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, v8);
  return result;
}

uint64_t sub_19CE49A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return StaticIntent<>.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t StaticIntent<>.jsRepresentation(in:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_19CFE05B0();
  swift_allocObject();
  sub_19CFDF884();
  v10 = (char *)v9 + *(int *)(TupleTypeMetadata2 + 48);
  *v9 = 0x6174616424;
  v9[1] = 0xE500000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v4, v7);
  sub_19CFDF938();
  v11 = sub_19CFDF41C();
  v12 = sub_19CFDF464();
  a3[3] = v12;
  v14 = a2;
  result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> [A : B], v12, &v14);
  a3[4] = result;
  *a3 = v11;
  return result;
}

id StaticIntent<>.makeValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;
  void *v7;
  void *v8;
  void *v9;

  result = objc_msgSend((id)objc_opt_self(), sel_valueWithNewObjectInContext_, a1);
  if (result)
  {
    v7 = result;
    v8 = (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a3 + 24))(a1, *(_QWORD *)(a2 + 16), a3);
    v9 = (void *)sub_19CFDF554();
    objc_msgSend(v7, sel_setValue_forProperty_, v8, v9);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19CE49C60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return StaticIntent<>.jsRepresentation(in:)(a1, *(_QWORD *)(a2 - 8), a3);
}

id sub_19CE49C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return StaticIntent<>.makeValue(in:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_19CE49C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 16);
}

uint64_t sub_19CE49C88(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v6;

  v6 = *a3;
  *(_QWORD *)(a1 + 8) = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <> StaticIntent<A>, a2, &v6);
  result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for StaticIntent<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_19CE49CE0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE49D20 + 4 * byte_19D0590F6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE49D40 + 4 * byte_19D0590FB[v4]))();
}

_BYTE *sub_19CE49D20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE49D40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE49D48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE49D50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE49D58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE49D60(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_19CE49D6C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CE49D7C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CE49D8C()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t JetPackPath.string.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
    return 46;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
  sub_19CD1632C();
  v1 = sub_19CFDF4F4();
  swift_bridgeObjectRelease();
  return v1;
}

JetEngine::JetPackPath __swiftcall JetPackPath.init(components:)(JetEngine::JetPackPath components)
{
  JetEngine::JetPackPath *v1;

  v1->components._rawValue = components.components._rawValue;
  return components;
}

uint64_t JetPackPath.components.getter()
{
  return swift_bridgeObjectRetain();
}

JetEngine::JetPackPath __swiftcall JetPackPath.appending(_:)(JetEngine::JetPackPath a1)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  JetEngine::JetPackPath result;
  uint64_t v6;

  v3 = v1;
  v6 = *v2;
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  result.components._rawValue = (void *)sub_19CDC7324(v4);
  *v3 = v6;
  return result;
}

uint64_t JetPackPath.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  result = sub_19CFE08D4();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static JetPackPath.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  return sub_19CDCC618(*a1, *a2);
}

uint64_t JetPackPath.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_19CFE08C8();
  sub_19CFE08D4();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  return sub_19CFE0910();
}

uint64_t sub_19CE49FC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  result = sub_19CFE08D4();
  if (v2)
  {
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      result = swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_19CE4A038()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_19CFE08C8();
  v2 = *(_QWORD *)(v1 + 16);
  sub_19CFE08D4();
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  return sub_19CFE0910();
}

uint64_t sub_19CE4A0BC(_QWORD **a1, _QWORD **a2)
{
  return sub_19CDCC618(*a1, *a2);
}

uint64_t sub_19CE4A0C8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_19CFDF764();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_19CD3C6FC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_19CD3C6FC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_19CFE0334();
  __break(1u);
  return result;
}

uint64_t sub_19CE4A220(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19CE4A3D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19CE4A23C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4AB50(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ECEB0130, (uint64_t *)&unk_1ECEB2B70);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A268(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4A540(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A284(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4A6C8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A2A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4A86C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A2BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19CE4A9F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19CE4A2D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4AB50(a1, a2, a3, (_QWORD *)*v3, &qword_1EE43FB30, &qword_1ECEB32D0);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A304(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4ACDC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A320(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19CE4AEC4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19CE4A33C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19CE4B048(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19CE4A358(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4B1D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A374(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19CE4B374(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19CE4A390(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CE4B4D8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A3AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19CCFAB38(a1, a2, a3, (_QWORD *)*v3, &qword_1EE4412A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
  *v3 = result;
  return result;
}

uint64_t sub_19CE4A3D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE439F80);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4A540(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BC60);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43BAB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4A6C8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437198);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE437148);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4A86C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB18);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB20);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4A9F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43F178);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4AB50(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4ACDC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB28);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC18) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC18) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4AEC4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4B048(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0470);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 400);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[400 * v8])
      memmove(v12, v13, 400 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[400 * v8] || v12 >= &v13[400 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4B1D0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2B80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4B374(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 6;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4B4D8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437340);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t sub_19CE4B678(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19CCFAB38(a1, a2, a3, a4, &qword_1EE43FB40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_19CE4B68C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE4B6B0()
{
  return swift_deallocObject();
}

uint64_t static PipelinePhase<>.fetchJetpack(artifactStoreURL:urlSession:urlEncoder:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v8 = sub_19CFDEDE0();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v13, a1, v8, v11);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v14 = a2;
  v15 = a3;
  v16 = sub_19CD51798();
  type metadata accessor for RemoteJetpackFetcher();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v15;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 4;
  *(_BYTE *)(v17 + 56) = 1;
  *(_QWORD *)(v17 + 64) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL, v13, v8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_19CE4BEAC;
  *(_QWORD *)(result + 24) = v17;
  *a4 = sub_19CE4C0C4;
  a4[1] = result;
  return result;
}

_QWORD *sub_19CE4B804(uint64_t a1)
{
  return sub_19CE4B824(a1);
}

_QWORD *sub_19CE4B824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[32];
  uint64_t v51[4];
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v2 = v1;
  v43 = sub_19CFDEFA8();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43, v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CFDEDE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v47 = (char *)&v42 - v13;
  if (qword_1ECEB2C88 != -1)
    swift_once();
  v14 = (void *)qword_1ECEB29D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
  v16 = v14;
  v52 = sub_19CD40918(0, 28, 0, MEMORY[0x1E0DEE9D8]);
  v17._object = (void *)0x800000019D071EA0;
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  v51[3] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v51);
  v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v44(boxed_opaque_existential_2Tm, a1, v7);
  sub_19CD40794((uint64_t)v51, (uint64_t)v50);
  v48 = 0u;
  v49 = 0u;
  sub_19CD40658((uint64_t)v50, (uint64_t)&v48);
  LOBYTE(v55) = 0;
  v53 = v48;
  v54 = v49;
  v19 = v52;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45 = a1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v19 = sub_19CD40918(0, v19[2] + 1, 1, v19);
  v22 = v19[2];
  v21 = v19[3];
  if (v22 >= v21 >> 1)
    v19 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
  v19[2] = v22 + 1;
  v23 = &v19[5 * v22];
  v24 = v53;
  v25 = v54;
  *((_BYTE *)v23 + 64) = v55;
  *((_OWORD *)v23 + 2) = v24;
  *((_OWORD *)v23 + 3) = v25;
  v52 = v19;
  sub_19CCECFE4((uint64_t)v51, &qword_1ECEB3370);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  *(_QWORD *)(v15 + 32) = v52;
  *(_QWORD *)&v53 = v16;
  LOBYTE(v48) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v48);

  swift_bridgeObjectRelease();
  sub_19CFDEF9C();
  sub_19CFDEF90();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v43);
  v27 = v47;
  sub_19CFDED38();
  swift_bridgeObjectRelease();
  v28 = *(_OWORD *)(v2 + 48);
  v29 = *(_OWORD *)(v2 + 16);
  v54 = *(_OWORD *)(v2 + 32);
  v55 = v28;
  v53 = v29;
  v56 = *(_QWORD *)(v2 + 64);
  v30 = (void *)*((_QWORD *)&v29 + 1);
  sub_19CEB6448(v45, *((void **)&v29 + 1), *((uint64_t *)&v54 + 1), v28, SBYTE8(v28));
  sub_19CE4BEB0((uint64_t)sub_19CE4BCBC, 0);
  v31 = swift_allocObject();
  v32 = v54;
  v33 = v55;
  *(_OWORD *)(v31 + 16) = v53;
  *(_OWORD *)(v31 + 32) = v32;
  *(_OWORD *)(v31 + 48) = v33;
  *(_QWORD *)(v31 + 64) = v56;
  v34 = (void *)v53;
  sub_19CCC290C((uint64_t)&v54, (uint64_t)&v48, &qword_1EE43CA58);
  v35 = v34;
  v36 = v30;
  sub_19CD0F81C((uint64_t)&v48);
  swift_retain();
  sub_19CF7739C((uint64_t)sub_19CDE81AC, v31);
  swift_release();
  swift_release();
  v37 = v46;
  v44((uint64_t *)v46, (uint64_t)v27, v7);
  v38 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v39 + v38, v37, v7);
  v40 = sub_19CE4C464((uint64_t)sub_19CE4C698, v39);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
  return v40;
}

uint64_t sub_19CE4BCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_19CFDE90C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return sub_19CFDE900();
}

uint64_t sub_19CE4BD48@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = objc_msgSend(*a1, sel_data);
  v7 = sub_19CFDEE70();
  v9 = v8;

  sub_19CFDEE7C();
  result = sub_19CD3BE18(v7, v9);
  if (!v3)
  {
    v11 = sub_19CFDEDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a3, a2, v11);
  }
  return result;
}

uint64_t sub_19CE4BDF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  swift_release();

  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9JetEngine20RemoteJetpackFetcher_artifactStoreURL;
  v4 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteJetpackFetcher()
{
  uint64_t result;

  result = qword_1EE43CC80;
  if (!qword_1EE43CC80)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_19CE4BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v12[4];
  _BYTE v13[48];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB15E0);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96), &qword_1ECEB15E0);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  v12[0] = sub_19CE4C70C;
  v12[1] = v9;
  v12[2] = sub_19CE4C718;
  v12[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE460((uint64_t)v12);
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1EE43CF60);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

_QWORD *sub_19CE4C044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v5 = sub_19CE4C19C(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19CE4C0A0()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_19CE4C0C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  (*(void (**)(void))(**(_QWORD **)a1 + 88))();
  v4 = sub_19CE4C19C(v2, v3);
  swift_release();
  return v4;
}

uint64_t sub_19CE4C11C()
{
  return type metadata accessor for RemoteJetpackFetcher();
}

uint64_t sub_19CE4C124()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_19CE4C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[48];
  __int128 v13[2];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96), &qword_1ECEB2418);
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19CCD14C4(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19CE4C37C;
  v11[1] = v9;
  v11[2] = sub_19CE4C38C;
  v11[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE6E0((uint64_t)v11);
  sub_19CCECFE4((uint64_t)v11, &qword_1EE43D310);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CE4C348()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_19CE4C37C(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF78070(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40);
}

void sub_19CE4C38C(void *a1)
{
  sub_19CF4C990(a1);
}

uint64_t sub_19CE4C394(uint64_t *a1, void (*a2)(uint64_t *, double))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_19CFDEDE0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  a2(&v12, v7);
  sub_19CFBD058((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

_QWORD *sub_19CE4C464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v12[4];
  _BYTE v13[48];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96), &qword_1ECEB2418);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  v12[0] = sub_19CE4C6F4;
  v12[1] = v9;
  v12[2] = sub_19CE4C700;
  v12[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CCE8808();
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1ECEB1280);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CE4C5FC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE4C638()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19CFDEDE0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_19CE4C698@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_19CFDEDE0() - 8) + 80);
  return sub_19CE4BD48(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_19CE4C6F4(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CE4C394(a1, *(void (**)(uint64_t *, double))(v1 + 16));
}

uint64_t sub_19CE4C700(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF4F33C(a1, v1);
}

uint64_t sub_19CE4C70C(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF0757C(a1, *(void (**)(uint64_t, double))(v1 + 16));
}

void sub_19CE4C718(void *a1)
{
  sub_19CF4C950(a1);
}

void static AutomationSemantics.dismissButton()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCFA58;
  a1[1] = v1;
}

void static AutomationSemantics.searchField()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCF618;
  a1[1] = v1;
}

void static AutomationSemantics.backButton()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCF498;
  a1[1] = v1;
}

void static AutomationSemantics.editButton()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCF4C8;
  a1[1] = v1;
}

double static AutomationSemantics.actionButton(id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t inited;
  double result;
  double v8[5];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D052350;
  sub_19CD40794(a1, (uint64_t)v8);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v8, (_QWORD *)(inited + 32));
  sub_19CD40794(a2, (uint64_t)v8);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v8, (_QWORD *)(inited + 64));
  *(_QWORD *)&v8[0] = &unk_1E3DCF968;
  *(_QWORD *)&v8[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD4C984(inited);
  result = v8[0];
  *a3 = *(_OWORD *)v8;
  return result;
}

void static AutomationSemantics.primaryActionButton()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DD0050;
  a1[1] = v1;
}

void static AutomationSemantics.filterButton()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = &unk_1E3DCF9C8;
  a1[1] = v1;
}

uint64_t sub_19CE4C8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4C8DC()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4CA24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE4CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4CAB8()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE4CC1C()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  sub_19CCE5204(0, &qword_1ECEB24A8);
  *v5 = v0;
  v5[1] = sub_19CE4CD80;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4CD80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE4CDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE4CE08()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  type metadata accessor for StartUpPerformanceEvent();
  *v5 = v0;
  v5[1] = sub_19CE4CD80;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4CF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4CF7C()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2B0);
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4D0EC()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4D254()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  type metadata accessor for PageIntentInstrumentation();
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4D3C0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4D530()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4D698()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE78);
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE4D804()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  sub_19CCE5204(0, (unint64_t *)&qword_1EE43A718);
  *v5 = v0;
  v5[1] = sub_19CE4CD80;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4D968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE4D984()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  type metadata accessor for JetPackAssetSession();
  *v5 = v0;
  v5[1] = sub_19CE4DAD8;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4DAD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE4DB44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19CE4DB50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE4DB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4DB7C()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  type metadata accessor for JetPackAsset(0);
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4DCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4DCE8()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4DE30;
  return sub_19CFE0A84();
}

uint64_t sub_19CE4DE30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE4DEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE4DEC4()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  __int128 v4;
  _QWORD *v5;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  sub_19CFE0A6C();
  v1 = *(_QWORD **)(v0 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_19CCDB5D8(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_19CCDB5D8((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  *(_QWORD *)(v0 + 72) = v1;
  v4 = *(_OWORD *)(v0 + 56);
  v1[2] = v3 + 1;
  *(_OWORD *)&v1[2 * v3 + 4] = v4;
  *(_QWORD *)(v0 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_19CE4CA24;
  return sub_19CFE0A84();
}

BOOL static JSStack.CallingConvention.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSStack.CallingConvention.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t JSStack.CallingConvention.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t JSStack.Configuration.addingDependency(_:withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v9[40];

  sub_19CD5AD0C(v4, a4);
  sub_19CCD5B84(a1, (uint64_t)v9);
  swift_bridgeObjectRetain();
  return sub_19CE11030((uint64_t)v9, a2, a3);
}

void JSStack.Configuration.withVirtualMachine(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CD5AD0C(v2, a2);
  objc_storeStrong((id *)(a2 + 48), a1);
}

uint64_t JSStack.Configuration.withConvention(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t result;

  v4 = *a1;
  result = sub_19CD5AD0C(v2, a2);
  *(_BYTE *)(a2 + 56) = v4;
  return result;
}

uint64_t JSStack.Configuration.withSentryConfiguration(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_19CD5AD0C(v2, a2);
  return sub_19CE4E1B4(a1, a2 + 64);
}

uint64_t sub_19CE4E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t JSStack.Configuration.withContextName(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  sub_19CD5AD0C(v3, a3);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 192) = a1;
  *(_QWORD *)(a3 + 200) = a2;
  return result;
}

uint64_t JSStack.Configuration.withQualityOfService(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CD5AD0C(v2, a2);
  *(_QWORD *)(a2 + 176) = a1;
  *(_BYTE *)(a2 + 184) = 0;
  return result;
}

uint64_t JSStack.StandardGlobalConfiguration.isProtocolHandlingEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.isProtocolHandlingEnabled.modify())()
{
  return nullsub_1;
}

uint64_t JSStack.StandardGlobalConfiguration.isAnonymous.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t JSStack.StandardGlobalConfiguration.isAnonymous.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.isAnonymous.modify())()
{
  return nullsub_1;
}

uint64_t JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CCEA360(v1);
  return v1;
}

uint64_t sub_19CE4E2F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *);

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_19CDB38C4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_19CCEA360(v3);
}

uint64_t sub_19CE4E354(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_19CDB3D70;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 8);
  sub_19CCEA360(v3);
  result = sub_19CCE9F48(v7);
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19CCE9F48(*(_QWORD *)(v2 + 8));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*JSStack.StandardGlobalConfiguration.unstable_requestFixUpBlock.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  *a1 = v3;
  a1[1] = v4;
  sub_19CCEA360(v3);
  return sub_19CE4E44C;
}

uint64_t sub_19CE4E44C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  v5 = *(_QWORD *)(v3 + 8);
  if ((a2 & 1) != 0)
  {
    sub_19CCEA360(*a1);
    sub_19CCE9F48(v5);
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    return sub_19CCE9F48(v4);
  }
  else
  {
    result = sub_19CCE9F48(*(_QWORD *)(v3 + 8));
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
  }
  return result;
}

unint64_t sub_19CE4E4CC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  id v6;
  unint64_t result;

  swift_bridgeObjectRetain();
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v5 = sub_19CFE0808();
  v6 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v6;
  return result;
}

void sub_19CE4E588(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_19CD2FE9C(a1, a2);
}

id sub_19CE4E59C()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0x6B63617453534ALL, 0xE700000000000000);
  qword_1EE465C20 = (uint64_t)result;
  return result;
}

uint64_t JSStack.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_allocObject();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_19CCC1F98;
  v4[28] = a1;
  v4[29] = v3;
  v4[30] = *v3;
  return swift_task_switch();
}

uint64_t JSStack.init(with:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[28] = a1;
  v2[29] = v1;
  v2[30] = *v1;
  return swift_task_switch();
}

void sub_19CE4E6C8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  os_unfair_lock_s *v17;
  uint32_t os_unfair_lock_opaque;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  int v26;
  NSObject *queue;
  __int128 aBlock;
  __int128 v29;
  void (*v30)(uint64_t);
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[32];
  _QWORD v35[4];
  _QWORD *v36;

  v3 = v2;
  if (qword_1EE43D1D8 != -1)
    swift_once();
  v6 = (void *)qword_1EE43D2E0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v8 = v6;
  v36 = sub_19CD40918(0, 41, 0, MEMORY[0x1E0DEE9D8]);
  v9._object = (void *)0x800000019D072430;
  v9._countAndFlagsBits = 0xD000000000000028;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  v35[3] = MEMORY[0x1E0DEA968];
  v35[0] = 0xD000000000000031;
  v35[1] = 0x800000019D072460;
  sub_19CCF8C5C((uint64_t)v35, (uint64_t)v34, &qword_1ECEB3370);
  v32 = 0u;
  v33 = 0u;
  sub_19CD40658((uint64_t)v34, (uint64_t)&v32);
  LOBYTE(v30) = 0;
  aBlock = v32;
  v29 = v33;
  v10 = v36;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[5 * v12];
  v14 = aBlock;
  v15 = v29;
  *((_BYTE *)v13 + 64) = (_BYTE)v30;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v36 = v10;
  sub_19CCECFE4((uint64_t)v35, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v7 + 32) = v36;
  *(_QWORD *)&aBlock = v8;
  LOBYTE(v32) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v32);

  swift_bridgeObjectRelease();
  v17 = *(os_unfair_lock_s **)(v3 + 16);
  os_unfair_lock_lock(v17 + 5);
  os_unfair_lock_opaque = v17[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v17 + 5);
  if (!os_unfair_lock_opaque)
  {
    v19 = swift_allocObject();
    *(_DWORD *)(v19 + 16) = 0;
    sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    queue = sub_19CFDFDB8();
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = swift_allocObject();
    swift_weakInit();
    sub_19CCF8C5C(a2, (uint64_t)&v32, &qword_1EE43D1E8);
    v22 = a1;
    v23 = a2;
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v20;
    v24[3] = v21;
    sub_19CCC290C((uint64_t)&v32, (uint64_t)(v24 + 4), &qword_1EE43D1E8);
    v24[9] = v19;
    v30 = sub_19CE688DC;
    v31 = v24;
    a2 = v23;
    a1 = v22;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v29 = sub_19CE5344C;
    *((_QWORD *)&v29 + 1) = &block_descriptor_478;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    swift_beginAccess();
    notify_register_dispatch("com.apple.JetTracingSupport.JSTracer.notification", (int *)(v19 + 16), queue, v25);
    swift_endAccess();
    _Block_release(v25);

    LODWORD(v25) = *(_DWORD *)(v19 + 16);
    os_unfair_lock_lock(v17 + 5);
    v17[4]._os_unfair_lock_opaque = v25;
    os_unfair_lock_unlock(v17 + 5);
    swift_release();
  }
  os_unfair_lock_lock(v17 + 5);
  v26 = v17[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v17 + 5);
  sub_19CE65324(a1, a2, v26);
}

uint64_t JSStack.__allocating_init(prerequisites:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  JSStack.init(prerequisites:sentryConfiguration:virtualMachine:)(a1, a2, a3);
  return v6;
}

void JSStack.init(prerequisites:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  os_unfair_lock_s *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];

  v5 = v3;
  v3[20] = 0;
  v3[21] = 0;
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_19CFDF554();
  LODWORD(v9) = objc_msgSend(v9, sel_BOOLForEntitlement_, v10);

  if ((_DWORD)v9)
  {
    sub_19CFDFD40();
    if (qword_1ECEB2C88 != -1)
      swift_once();
    sub_19CFDF164();
  }
  v11 = MEMORY[0x1E0DEE9D8];
  v5[4] = MEMORY[0x1E0DEE9D8];
  sub_19CCF8C5C(a2, (uint64_t)(v5 + 5), &qword_1ECEB1F70);
  type metadata accessor for RunLoopWorkerThread();
  v12 = (_QWORD *)swift_allocObject();
  v12[5] = 0;
  v12[6] = 0;
  v12[2] = 0xD00000000000001BLL;
  v12[3] = 0x800000019D071EE0;
  v12[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v12[7] = v11;
  v5[2] = v12;
  swift_retain();
  sub_19CD08E38(25, 0);
  swift_release();
  v13 = v5[2];
  swift_retain();
  v14 = sub_19CD09060(a3, 0x747865746E6F63, 0xE700000000000000, v13);
  swift_release();
  v5[3] = v14;
  if (qword_1ECEB1958 != -1)
    swift_once();
  v15 = (char *)off_1ECEB1948 + 16;
  v16 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_19CD3EA18(v15, v23);
  if (!v4)
  {
    os_unfair_lock_unlock(v16);
    v17 = v23[0];
    swift_release();
    if (v17 == 2)
    {
      if ((os_variant_has_internal_content() & 1) == 0)
      {
LABEL_10:
        v5[19] = 0;
LABEL_13:
        v21 = swift_allocObject();
        *(_QWORD *)(v21 + 16) = v5;
        *(_QWORD *)(v21 + 24) = a1;
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = sub_19CD5ACC8;
        *(_QWORD *)(v22 + 24) = v21;
        swift_retain();
        swift_retain();
        sub_19CD08B9C((void (*)(_QWORD *__return_ptr, _QWORD))sub_19CE68FF4, v22);
        swift_release();
        swift_release();

        sub_19CCECFE4(a2, &qword_1ECEB1F70);
        return;
      }
    }
    else if ((v17 & 1) == 0)
    {
      goto LABEL_10;
    }
    type metadata accessor for TracingSupport();
    v18 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D338);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v18 + 16) = v19;
    v5[19] = v18;
    v20 = (void *)v5[3];
    sub_19CE4EF04(a1, (uint64_t)v23);
    sub_19CE4E6C8(v20, (uint64_t)v23);
    sub_19CCECFE4((uint64_t)v23, &qword_1EE43D1E8);
    goto LABEL_13;
  }
  os_unfair_lock_unlock(v16);
  __break(1u);
}

uint64_t sub_19CE4EF04@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  _QWORD v12[4];
  __int128 v13;
  __int128 v14;
  char v15;
  __int128 v16[2];

  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return result;
  v4 = result + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19CD39BF8(v4, (uint64_t)&v13);
    if (!v15)
      break;
    sub_19CD39D10((uint64_t)&v13);
LABEL_4:
    v4 += 48;
    if (!--v2)
      return swift_bridgeObjectRelease();
  }
  sub_19CCD14C4(&v13, (uint64_t)v16);
  sub_19CCF8C5C(a2, (uint64_t)&v13, &qword_1EE43D1E8);
  v5 = *((_QWORD *)&v14 + 1);
  sub_19CCECFE4((uint64_t)&v13, &qword_1EE43D1E8);
  if (!v5)
  {
    sub_19CCECFE4(a2, &qword_1EE43D1E8);
    sub_19CCD14C4(v16, a2);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  if (qword_1EE43AFF0 != -1)
    swift_once();
  v6 = (void *)qword_1EE465C20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
  v12[3] = v9;
  v12[0] = 0xD000000000000068;
  v12[1] = 0x800000019D072360;
  v13 = 0u;
  v14 = 0u;
  v10 = v6;
  sub_19CD40658((uint64_t)v12, (uint64_t)&v13);
  *(_BYTE *)(v8 + 64) = 0;
  v11 = v14;
  *(_OWORD *)(v8 + 32) = v13;
  *(_OWORD *)(v8 + 48) = v11;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)&v13 = v10;
  LOBYTE(v12[0]) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)v12);
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

uint64_t JSStack.__allocating_init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  JSStack.init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(a1, a2, a3, a4);
  return v8;
}

uint64_t *JSStack.init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  os_unfair_lock_s *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[40];
  uint64_t v27;

  v6 = v4;
  v27 = *v6;
  v6[20] = 0;
  v6[21] = 0;
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_19CFDF554();
  LODWORD(v11) = objc_msgSend(v11, sel_BOOLForEntitlement_, v12);

  if ((_DWORD)v11)
  {
    sub_19CFDFD40();
    if (qword_1ECEB2C88 != -1)
      swift_once();
    sub_19CFDF164();
  }
  v13 = MEMORY[0x1E0DEE9D8];
  v6[4] = MEMORY[0x1E0DEE9D8];
  sub_19CCF8C5C(a3, (uint64_t)(v6 + 5), &qword_1ECEB1F70);
  type metadata accessor for RunLoopWorkerThread();
  v14 = (_QWORD *)swift_allocObject();
  v14[5] = 0;
  v14[6] = 0;
  v14[2] = 0xD00000000000001BLL;
  v14[3] = 0x800000019D071EE0;
  v14[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v14[7] = v13;
  v6[2] = (uint64_t)v14;
  swift_retain();
  sub_19CD08E38(a2, 0);
  swift_release();
  v15 = v6[2];
  swift_retain();
  v16 = sub_19CD09060(a4, 0x747865746E6F63, 0xE700000000000000, v15);
  swift_release();
  v6[3] = v16;
  if (qword_1ECEB1958 != -1)
    swift_once();
  v17 = (char *)off_1ECEB1948 + 16;
  v18 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v18);
  sub_19CD3EA18(v17, v26);
  if (v5)
  {
    os_unfair_lock_unlock(v18);
    __break(1u);
    JUMPOUT(0x19CE4F548);
  }
  os_unfair_lock_unlock(v18);
  v19 = v26[0];
  swift_release();
  if (v19 != 2)
  {
    if ((v19 & 1) == 0)
      goto LABEL_10;
LABEL_12:
    type metadata accessor for TracingSupport();
    v20 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D338);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v20 + 16) = v21;
    v6[19] = v20;
    v22 = (void *)v6[3];
    sub_19CE4EF04(a1, (uint64_t)v26);
    sub_19CE4E6C8(v22, (uint64_t)v26);
    sub_19CCECFE4((uint64_t)v26, &qword_1EE43D1E8);
    goto LABEL_13;
  }
  if ((os_variant_has_internal_content() & 1) != 0)
    goto LABEL_12;
LABEL_10:
  v6[19] = 0;
LABEL_13:
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v6;
  *(_QWORD *)(v23 + 24) = a1;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_19CD34ABC;
  *(_QWORD *)(v24 + 24) = v23;
  swift_retain();
  swift_retain();
  sub_19CD08B9C((void (*)(_QWORD *__return_ptr, _QWORD))sub_19CE68FF4, v24);
  swift_release();
  swift_release();

  sub_19CCECFE4(a3, &qword_1ECEB1F70);
  return v6;
}

uint64_t JSStack.__allocating_init(asPartOf:virtualMachine:configuration:customPrerequisites:qualityOfService:)(void (*a1)(uint64_t), void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = sub_19CE65CC4(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

uint64_t JSStack.deinit()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  os_unfair_lock_s *v3;
  int v4;
  void *v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v9;

  v1 = v0;
  if (qword_1ECEB1958 != -1)
    swift_once();
  v2 = (char *)off_1ECEB1948 + 16;
  v3 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_19CD3EA18(v2, &v9);
  os_unfair_lock_unlock(v3);
  v4 = v9;
  swift_release();
  if (v4 == 2)
  {
    if ((os_variant_has_internal_content() & 1) == 0)
      goto LABEL_9;
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_9;
  }
  if (*(_QWORD *)(v1 + 152))
    sub_19CE4F6EC(*(void **)(v1 + 24));
LABEL_9:
  v5 = *(void **)(v1 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = v5;
  sub_19CD47F88((uint64_t)nullsub_1, v6);
  swift_release();
  sub_19CFC9DDC();
  swift_release();

  swift_bridgeObjectRelease();
  sub_19CCECFE4(v1 + 40, &qword_1ECEB1F70);
  swift_release();
  sub_19CCE9F48(*(_QWORD *)(v1 + 160));
  return v1;
}

char *sub_19CE4F6EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  os_unfair_lock_s *v20;
  uint32_t os_unfair_lock_opaque;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  uint32_t v29;
  int v30;
  __int128 v32;
  __int128 v33;
  _BYTE v34[32];
  __int128 v35;
  __int128 v36;
  char v37;
  __int128 v38;
  __int128 v39;
  _QWORD *v40;

  v2 = v1;
  if (qword_1EE43D1D8 != -1)
    swift_once();
  v4 = (void *)qword_1EE43D2E0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
  v6 = v4;
  v40 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
  v7._countAndFlagsBits = 0xD000000000000025;
  v7._object = (void *)0x800000019D072220;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  v8 = objc_msgSend(a1, sel_name);
  if (v8)
  {
    v9 = v8;
    v10 = sub_19CFDF578();
    v12 = v11;

    *((_QWORD *)&v39 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v38 = v10;
    *((_QWORD *)&v38 + 1) = v12;
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  sub_19CCF8C5C((uint64_t)&v38, (uint64_t)v34, &qword_1ECEB3370);
  v32 = 0u;
  v33 = 0u;
  sub_19CD40658((uint64_t)v34, (uint64_t)&v32);
  v37 = 0;
  v35 = v32;
  v36 = v33;
  v13 = v40;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v35;
  v18 = v36;
  *((_BYTE *)v16 + 64) = v37;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v40 = v13;
  sub_19CCECFE4((uint64_t)&v38, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0xD00000000000002BLL;
  v19._object = (void *)0x800000019D072250;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  v20 = *(os_unfair_lock_s **)(v2 + 16);
  os_unfair_lock_lock(v20 + 5);
  os_unfair_lock_opaque = v20[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v20 + 5);
  *((_QWORD *)&v39 + 1) = MEMORY[0x1E0DEDBC8];
  LODWORD(v38) = os_unfair_lock_opaque;
  sub_19CCF8C5C((uint64_t)&v38, (uint64_t)v34, &qword_1ECEB3370);
  v32 = 0u;
  v33 = 0u;
  sub_19CD40658((uint64_t)v34, (uint64_t)&v32);
  v37 = 0;
  v35 = v32;
  v36 = v33;
  v22 = v40;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_19CD40918(0, v22[2] + 1, 1, v22);
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
    v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
  v22[2] = v24 + 1;
  v25 = &v22[5 * v24];
  v26 = v35;
  v27 = v36;
  *((_BYTE *)v25 + 64) = v37;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v40 = v22;
  sub_19CCECFE4((uint64_t)&v38, &qword_1ECEB3370);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  *(_QWORD *)(v5 + 32) = v40;
  *(_QWORD *)&v35 = v6;
  LOBYTE(v32) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v32);

  swift_bridgeObjectRelease();
  os_unfair_lock_lock(v20 + 5);
  v29 = v20[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v20 + 5);
  if (v29)
  {
    os_unfair_lock_lock(v20 + 5);
    v30 = v20[4]._os_unfair_lock_opaque;
    os_unfair_lock_unlock(v20 + 5);
    notify_cancel(v30);
    os_unfair_lock_lock(v20 + 5);
    v20[4]._os_unfair_lock_opaque = 0;
    os_unfair_lock_unlock(v20 + 5);
  }
  return sub_19CE64F28(0xD000000000000014, 0x800000019D072280, (uint64_t)a1);
}

uint64_t JSStack.__deallocating_deinit()
{
  JSStack.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19CE4FAC0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 160);
  v5 = *(_QWORD *)(v3 + 168);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_19CDB38C4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_19CCEA360(v4);
}

uint64_t sub_19CE4FB48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_19CDB3D70;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 160);
  *(_QWORD *)(v7 + 160) = v6;
  *(_QWORD *)(v7 + 168) = v5;
  sub_19CCEA360(v3);
  return sub_19CCE9F48(v8);
}

uint64_t JSStack.exceptionObserver.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 160);
  sub_19CCEA360(v1);
  return v1;
}

uint64_t (*JSStack.exceptionObserver.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_19CE4FC80(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  _QWORD aBlock[6];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v32 = a2;
  v5 = sub_19CFDF2D8();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDF308();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    JSError.init(_:)(a1, (uint64_t)&v34);
    sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    v14 = (void *)sub_19CFDFDB8();
    v15 = swift_allocObject();
    v16 = v36;
    *(_OWORD *)(v15 + 72) = v37;
    v17 = v39;
    *(_OWORD *)(v15 + 88) = v38;
    *(_OWORD *)(v15 + 104) = v17;
    v18 = v35;
    *(_OWORD *)(v15 + 24) = v34;
    *(_OWORD *)(v15 + 40) = v18;
    *(_QWORD *)(v15 + 16) = v3;
    *(_QWORD *)(v15 + 120) = v40;
    *(_OWORD *)(v15 + 56) = v16;
    aBlock[4] = sub_19CE68724;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19CD0C78C;
    aBlock[3] = &block_descriptor_413;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_19CE68730((uint64_t)&v34);
    swift_release();
    sub_19CFDF2F0();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
    sub_19CD3DE28();
    sub_19CFE0070();
    MEMORY[0x1A1AD9FF4](0, v13, v8, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    if ((v32 & 1) != 0)
    {
      sub_19CDC98D8();
      v20 = (void *)swift_allocError();
      v22 = v35;
      v21 = v36;
      *(_OWORD *)v23 = v34;
      *(_OWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 32) = v21;
      v25 = v38;
      v24 = v39;
      v26 = v37;
      *(_QWORD *)(v23 + 96) = v40;
      *(_OWORD *)(v23 + 64) = v25;
      *(_OWORD *)(v23 + 80) = v24;
      *(_OWORD *)(v23 + 48) = v26;
      sub_19CE68730((uint64_t)&v34);
      if (qword_1EE436DC8 != -1)
        swift_once();
      sub_19CE5008C(v20, qword_1EE465AB0, *(uint64_t *)algn_1EE465AB8, qword_1EE465AC0);
      sub_19CE687FC((uint64_t)&v34);

    }
    else
    {
      v27 = swift_allocObject();
      v28 = v36;
      *(_OWORD *)(v27 + 72) = v37;
      v29 = v39;
      *(_OWORD *)(v27 + 88) = v38;
      *(_OWORD *)(v27 + 104) = v29;
      v30 = v35;
      *(_OWORD *)(v27 + 24) = v34;
      *(_OWORD *)(v27 + 40) = v30;
      *(_QWORD *)(v27 + 16) = v3;
      *(_QWORD *)(v27 + 120) = v40;
      *(_OWORD *)(v27 + 56) = v28;
      swift_retain();
      sub_19CE68730((uint64_t)&v34);
      sub_19CD47F88((uint64_t)sub_19CE687F0, v27);
      sub_19CE687FC((uint64_t)&v34);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19CE4FFF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void (*v5)(uint64_t, _OWORD *);
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[6];
  uint64_t v10;

  result = swift_beginAccess();
  v5 = *(void (**)(uint64_t, _OWORD *))(a1 + 160);
  if (v5)
  {
    v6 = *(_OWORD *)(a2 + 80);
    v9[4] = *(_OWORD *)(a2 + 64);
    v9[5] = v6;
    v10 = *(_QWORD *)(a2 + 96);
    v7 = *(_OWORD *)(a2 + 16);
    v9[0] = *(_OWORD *)a2;
    v9[1] = v7;
    v8 = *(_OWORD *)(a2 + 48);
    v9[2] = *(_OWORD *)(a2 + 32);
    v9[3] = v8;
    swift_retain();
    v5(a1, v9);
    return sub_19CCE9F48((uint64_t)v5);
  }
  return result;
}

void sub_19CE5008C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  unsigned int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;

  sub_19CCF8C5C(v4 + 40, (uint64_t)&v52, &qword_1ECEB1F70);
  v9 = v54;
  sub_19CCECFE4((uint64_t)&v52, &qword_1ECEB1F70);
  if (v9)
  {
    v42[0] = (uint64_t)a1;
    v10 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
    if (!swift_dynamicCast())
    {
      v25 = a1;
      sub_19CE77C34(a1, (uint64_t)&v52);
      sub_19CE52384(&v52, a2, a3, a4);
      sub_19CE67E70((uint64_t)&v52);
      return;
    }
    v12 = *((_QWORD *)&v52 + 1);
    v11 = v52;
    v13 = v53;
    v14 = v54;
    v15 = v55;
    v16 = v56;
    v17 = v57;
    v18 = v58;
    v41 = v59;
    v40 = v60;
    v19 = v61;
    v20 = (void *)v61;
    v21 = v62;
    if ((_QWORD)v61)
    {
      v32 = v57;
      v33 = v56;
      v34 = v55;
      v35 = v53;
      v36 = v52;
      v37 = v61;
      v38 = v62;
      v22 = (void *)sub_19CFDF554();
      v23 = objc_msgSend(v20, sel_valueForProperty_, v22);

      if (!v23)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
      if ((objc_msgSend(v23, sel_isBoolean) & 1) != 0)
      {
        v24 = objc_msgSend(v23, sel_toBool);

        v21 = v38;
        v19 = v37;
        v13 = v35;
        v11 = v36;
        v15 = v34;
        v16 = v33;
        v17 = v32;
        if (v24)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_16:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {

        v21 = v38;
        v19 = v37;
        v13 = v35;
        v11 = v36;
        v15 = v34;
        v16 = v33;
        v17 = v32;
      }
    }
    v42[0] = v11;
    v42[1] = v12;
    v42[2] = v13;
    v43 = v14;
    v44 = v15;
    v45 = v16;
    v46 = v17;
    v47 = v18;
    v48 = v41;
    v49 = v40;
    v50 = v19;
    v51 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v20;
    v26 = v20;
    sub_19CE77970(v42, (uint64_t)&v52);
    sub_19CE52384(&v52, a2, a3, a4);
    sub_19CE67E70((uint64_t)&v52);
    if (!v39)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v27 = v26;
    v28 = objc_msgSend(v27, sel_context);
    v29 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, 1, v28);

    if (v29)
    {
      v30 = v29;
      v31 = (void *)sub_19CFDF554();
      objc_msgSend(v27, sel_setValue_forProperty_, v30, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_18;
  }
}

void sub_19CE5065C(uint64_t a1, uint64_t a2)
{
  void *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  sub_19CDC98D8();
  v3 = (void *)swift_allocError();
  v5 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 32) = v4;
  v8 = *(_OWORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 80) = v7;
  *(_OWORD *)(v6 + 48) = v9;
  sub_19CE68730(a2);
  if (qword_1EE436DC8 != -1)
    swift_once();
  sub_19CE5008C(v3, qword_1EE465AB0, *(uint64_t *)algn_1EE465AB8, qword_1EE465AC0);

}

uint64_t *JSStack.withUnsafeContext<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v6 = type metadata accessor for Promise(0, a3, a3, a4);
  v10 = Promise.__allocating_init()(v6, v7, v8, v9);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a1;
  v11[4] = a2;
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = sub_19CE66024;
  v13[4] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CD47F88((uint64_t)sub_19CE6900C, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

void sub_19CE50820(uint64_t a1, uint64_t a2, void (*a3)(void **__return_ptr))
{
  id v3;
  void *v4;

  a3(&v4);
  v3 = v4;
  sub_19CD159DC(v4);

}

void sub_19CE50898(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_19CFBA2F4();
}

uint64_t sub_19CE50900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void (*v7)(double);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7(v4);
  Promise.resolve(_:)((uint64_t)v6, v8, v9, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

Swift::Void __swiftcall JSStack.makeRemoteInspectable()()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_allocObject();
  swift_weakInit();
  v1 = (_QWORD *)swift_allocObject();
  v1[2] = v0;
  v1[3] = sub_19CE50A48;
  v1[4] = 0;
  swift_retain();
  sub_19CD47F88((uint64_t)sub_19CE6900C, (uint64_t)v1);
  swift_release();
  swift_release();
}

void sub_19CE50A48(void *a1)
{
  __CFRunLoop *v2;

  JSRemoteInspectorSetLogToSystemConsole();
  objc_msgSend(a1, sel_setInspectable_, 1);
  v2 = CFRunLoopGetCurrent();
  objc_msgSend(a1, sel__setDebuggerRunLoop_, v2);

}

uint64_t JSStack.evaluate(script:against:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v4 = type metadata accessor for JSSource();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  sub_19CCFECEC(a1, (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_19CCFE8AC((uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for JSSource);
  *(_QWORD *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2450);
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 16) = v11;
  *(_QWORD *)(v10 + 24) = v12;
  *(_BYTE *)(v10 + 32) = 0;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v13[3] = sub_19CE66124;
  v13[4] = v9;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = sub_19CE661A8;
  v15[4] = v13;
  v16 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CD47F88((uint64_t)sub_19CE6900C, (uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

uint64_t JSStack.notify(withName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = v7;
  *(_BYTE *)(v5 + 32) = 0;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = sub_19CE661E8;
  v8[4] = v4;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v10[3] = sub_19CE66210;
  v10[4] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CD47F88((uint64_t)sub_19CE6900C, (uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

{
  uint64_t v2;
  _QWORD *v3;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  return swift_task_switch();
}

void sub_19CE50E0C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _OWORD v16[2];
  _QWORD v17[6];

  v6 = objc_msgSend(a1, sel_globalObject);
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_19CFDF554();
    v9 = objc_msgSend(v7, sel_valueForProperty_, v8);

    if (v9)
    {

      v10 = objc_msgSend(v9, sel_toObject);
      if (v10)
      {
        sub_19CFE004C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v16, 0, sizeof(v16));
      }
      sub_19CCC290C((uint64_t)v16, (uint64_t)v17, &qword_1ECEB3370);
      if (v17[3])
      {
        type metadata accessor for JSNotifyObject();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v11 = (void *)v17[5];
          v17[0] = a2;
          v17[1] = a3;
          swift_bridgeObjectRetain();
          v12 = a1;
          v13 = sub_19CFE0808();
          v14 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v13, v12);
          swift_unknownObjectRelease();

          if (v14)
          {
            sub_19CF7F278(v14);

            return;
          }
          goto LABEL_14;
        }
      }
      else
      {
        sub_19CCECFE4((uint64_t)v17, &qword_1ECEB3370);
      }
      sub_19CDC98D8();
      swift_allocError();
      *(_QWORD *)v15 = 0xD000000000000025;
      *(_QWORD *)(v15 + 8) = 0x800000019D0721F0;
      *(_QWORD *)(v15 + 16) = 0;
      *(_BYTE *)(v15 + 24) = 1;
      *(_QWORD *)(v15 + 32) = 0;
      *(_BYTE *)(v15 + 40) = 1;
      *(_OWORD *)(v15 + 48) = 0u;
      *(_OWORD *)(v15 + 64) = 0u;
      *(_OWORD *)(v15 + 80) = 0u;
      *(_QWORD *)(v15 + 96) = 0;
      swift_willThrow();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_19CE51044(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char tv_sec;
  uint64_t v14;
  id v15;
  id v16;
  char v17;
  char v18;
  void *v19;
  timespec v20;
  timespec v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  JESignpostEmitTrace();
  if (a2)
  {
    if (qword_1EE43A5F0 != -1)
      swift_once();
    v23 = xmmword_1EE465B00;
    v24 = byte_1EE465B10;
    v25 = qword_1EE465B18;
    LOBYTE(v26) = byte_1EE465B20;
    static MonotonicTime.now.getter(&v21);
    v20 = v21;
    PageRenderField<>.startTime(for:at:)(a1, a2, &v20.tv_sec);
  }
  sub_19CCF8C5C(a3, (uint64_t)&v23, &qword_1EE43D330);
  v11 = v25;
  if (!v25)
  {
    sub_19CCECFE4((uint64_t)&v23, &qword_1EE43D330);
LABEL_10:
    sub_19CE23FF0();
    if (v5)
      return;
    goto LABEL_13;
  }
  v12 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  (*(void (**)(timespec *__return_ptr, void *, uint64_t, uint64_t))(v12 + 8))(&v21, a4, v11, v12);
  tv_sec = v21.tv_sec;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  if ((tv_sec & 1) == 0)
    goto LABEL_10;
  if (sub_19CF2C480() == 6)
  {
    sub_19CDC98D8();
    swift_allocError();
    JSError.init(badValue:expected:)(a4, v14);
    swift_willThrow();
    return;
  }
  v15 = a4;
  v16 = sub_19CE1FCDC(v15);
  v18 = v17;

  *(_QWORD *)(a5 + 24) = &type metadata for DirectValue;
  *(_QWORD *)(a5 + 32) = &off_1E3DC91E0;
  *(_QWORD *)a5 = v16;
  *(_BYTE *)(a5 + 8) = v18;
LABEL_13:
  v22 = 0;
  *(_QWORD *)&v23 = 0;
  v21.tv_sec = 0;
  v20.tv_sec = 0;
  v19 = (void *)sub_19CFDF554();
  JESignpostArgumentsFromString(v19, &v23, &v21, &v20, &v22);

  JESignpostEmitTrace();
}

void sub_19CE512D4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  os_unfair_lock_s *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16) + 16);
  os_unfair_lock_lock(v7);
  sub_19CDD9124((_QWORD *(*)(uint64_t *__return_ptr))sub_19CE67E10, &v11);
  os_unfair_lock_unlock(v7);
  if ((v11 & 1) == 0)
  {
    sub_19CE202DC();
    v8 = (void *)swift_allocError();
    v10 = v9;
    swift_bridgeObjectRetain();
    *(_BYTE *)v10 = sub_19CE2020C() & 1;
    *(_QWORD *)(v10 + 8) = a2;
    *(_QWORD *)(v10 + 16) = a3;
    *(double *)(v10 + 24) = a4;
    sub_19CEBC060(v8);

  }
}

void sub_19CE513BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  os_unfair_lock_s *v31;
  unint64_t v32;
  __CFRunLoopTimer *v33;
  __CFRunLoopTimer *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  void *v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  timespec v52;
  timespec v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;

  v49 = a7;
  v50 = a8;
  v46 = a4;
  v47 = a6;
  v45 = a5;
  v48 = a1;
  v59 = *MEMORY[0x1E0C80C00];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2208);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for JSResponse();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_19CFDEA44();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24);
  v26 = (char *)v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (char *)v44 - v29;
  v31 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  os_unfair_lock_lock(v31);
  v51 = a2;
  sub_19CDD9124((_QWORD *(*)(uint64_t *__return_ptr))sub_19CE67E10, &v55);
  os_unfair_lock_unlock(v31);
  if ((v55 & 1) == 0)
  {
    v44[2] = a12;
    v44[1] = a11;
    sub_19CCF8C5C(a3, (uint64_t)&v55, &qword_1ECEB0AF8);
    if (BYTE8(v55) == 1)
    {
      sub_19CCECFE4((uint64_t)&v55, &qword_1ECEB0AF8);
      v32 = v47;
    }
    else
    {
      v33 = (__CFRunLoopTimer *)MEMORY[0x1A1ADBF98](&v55);
      v32 = v47;
      if (v33)
      {
        v34 = v33;
        CFRunLoopTimerInvalidate(v33);

      }
      sub_19CD31754((uint64_t)&v55);
    }
    v47 = a9;
    sub_19CD30244(v46, (uint64_t)v30);
    if (v32)
    {
      if (qword_1EE43A618 != -1)
        swift_once();
      v55 = xmmword_1EE465B28;
      v56 = byte_1EE465B38;
      v57 = qword_1EE465B40;
      v58 = byte_1EE465B48;
      static MonotonicTime.now.getter(&v53);
      v52 = v53;
      PageRenderField<>.endTime(for:at:)(v45, v32, &v52.tv_sec);
    }
    v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v35(v26, v30, v22);
    v36 = v48;
    v48 = v23;
    sub_19CCF8C5C(v36, (uint64_t)v17, &qword_1ECEB2208);
    v37 = v50;
    *(_QWORD *)v21 = v49;
    *((_QWORD *)v21 + 1) = v37;
    *((_QWORD *)v21 + 2) = v47;
    *((_QWORD *)v21 + 3) = a10;
    v35(&v21[v18[5]], v26, v22);
    sub_19CCF8C5C((uint64_t)v17, (uint64_t)&v21[v18[6]], &qword_1ECEB2208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v55 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    v39 = sub_19CF61748((uint64_t)v17, (uint64_t *)&v55);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v21[v18[7]] = v39;
    JSONObject.subscript.getter(0xD000000000000013, 0x800000019D072120, (uint64_t)&v55);
    v40 = sub_19CD30650(v38);
    v41 = sub_19CD30784((uint64_t)&v55, v40);
    sub_19CCECFE4((uint64_t)v17, &qword_1ECEB2208);
    v42 = *(void (**)(char *, uint64_t))(v48 + 8);
    v42(v26, v22);
    *(_QWORD *)&v21[v18[8]] = v41;
    sub_19CD463EC((uint64_t)v21);
    sub_19CCEACE4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
    *(_QWORD *)&v55 = 0;
    v53.tv_sec = 0;
    v52.tv_sec = 0;
    v54 = 0;
    v43 = (void *)sub_19CFDF554();
    JESignpostArgumentsFromString(v43, &v55, &v53, &v52, &v54);

    JESignpostEmitTrace();
    v42(v30, v22);
  }
}

void sub_19CE517D0(void *a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  __CFRunLoopTimer *v6;
  __CFRunLoopTimer *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  os_unfair_lock_lock(v5);
  sub_19CDD9124((_QWORD *(*)(uint64_t *__return_ptr))sub_19CE67E10, &v12);
  os_unfair_lock_unlock(v5);
  if ((v12 & 1) == 0)
  {
    sub_19CCF8C5C(a3, (uint64_t)&v12, &qword_1ECEB0AF8);
    if (v13 == 1)
    {
      sub_19CCECFE4((uint64_t)&v12, &qword_1ECEB0AF8);
    }
    else
    {
      v6 = (__CFRunLoopTimer *)MEMORY[0x1A1ADBF98](&v12);
      if (v6)
      {
        v7 = v6;
        CFRunLoopTimerInvalidate(v6);

      }
      sub_19CD31754((uint64_t)&v12);
    }
    sub_19CEBC060(a1);
    v12 = 0;
    v10 = 0;
    v11 = 0;
    v9 = 0;
    v8 = (void *)sub_19CFDF554();
    JESignpostArgumentsFromString(v8, &v12, &v11, &v10, &v9);

    JESignpostEmitTrace();
  }
}

uint64_t JSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_19CE51948()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[3];
  v2 = (_QWORD *)v0[2];
  v2[3] = v0[4];
  v2[4] = &protocol witness table for JSStack;
  *v2 = v1;
  v4 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v4();
}

uint64_t sub_19CE51998()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE51A90()
{
  uint64_t v0;

  sub_19CCEACE4(*(_QWORD *)(v0 + 568), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  sub_19CD33A94(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE51BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v0 + 304) = 0;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_QWORD *)(v0 + 664) = 0;
  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 200);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  *(_QWORD *)(v0 + 672) = sub_19CE64140(0x656D69746E757224, 0xE800000000000000, 0x6863746170736964, 0xE800000000000000, v7, v8, *(_QWORD *)(v0 + 208), *(unsigned __int8 *)(v0 + 216), v3, v2, v1, (_QWORD *)(v0 + 272), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE51CB0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[54];
  v0[2] = v0;
  v0[3] = sub_19CE51D2C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD3810C();
  sub_19CCECFE4(v1, &qword_1ECEB1270);
  return swift_continuation_await();
}

uint64_t sub_19CE51D2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 680) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CCFE8AC(*(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440), (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
  return swift_task_switch();
}

uint64_t sub_19CE51DA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  timespec v22;
  timespec v23;

  v21 = (uint64_t)(v0 + 20);
  v1 = v0[83];
  v2 = v0[55];
  v3 = v0[52];
  v4 = (void (*)(uint64_t))v0[46];
  swift_release();
  v5 = swift_bridgeObjectRetain();
  sub_19CD33764(v5);
  swift_bridgeObjectRelease();
  sub_19CD33AC8(v2, v4, v3);
  v6 = v0[71];
  if (v1)
  {
    v7 = v0[61];
    sub_19CCEACE4(v0[55], (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
    sub_19CCECFE4((uint64_t)(v0 + 34), &qword_1EE43D330);
    sub_19CCEACE4(v7, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
    sub_19CCEACE4(v6, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    sub_19CD33A94(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_19CCFECEC(v0[71], v0[68], (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    if (swift_getEnumCaseMultiPayload())
    {
      v9 = v0[71];
      v10 = v0[68];
      v11 = v0[61];
      sub_19CCEACE4(v0[55], (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
      sub_19CCECFE4((uint64_t)(v0 + 34), &qword_1EE43D330);
      sub_19CCEACE4(v11, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
      sub_19CCEACE4(v9, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
      v12 = v10;
    }
    else
    {
      sub_19CCFE8AC(v0[68], v0[57], (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
      if (qword_1EE43A5F0 != -1)
        swift_once();
      v13 = v0[71];
      v14 = v0[61];
      v15 = v0[57];
      v16 = v0[55];
      v17 = (uint64_t *)(v15 + *(int *)(v0[56] + 24));
      v18 = *v17;
      v19 = v17[1];
      swift_bridgeObjectRetain();
      static MonotonicTime.now.getter(&v22);
      v23 = v22;
      PageRenderField<>.endTime(for:at:)(v18, v19, &v23.tv_sec);
      swift_bridgeObjectRelease();
      sub_19CCEACE4(v15, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderEvent);
      sub_19CCEACE4(v16, (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
      sub_19CCECFE4((uint64_t)(v0 + 34), &qword_1EE43D330);
      sub_19CCEACE4(v14, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
      v12 = v13;
    }
    sub_19CCEACE4(v12, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[51] + 32))(v0[44], v0[52], v0[50]);
    sub_19CD33A94(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_19CE521B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 488);
  swift_release();
  sub_19CCECFE4(v0 + 272, &qword_1EE43D330);
  sub_19CCEACE4(v2, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
  sub_19CCEACE4(v1, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  sub_19CD33A94(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE522FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_19CE5008C(a1, a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_19CE52384(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD v74[8];
  uint64_t v75;

  v75 = a3;
  v62 = a2;
  v8 = sub_19CFDEFA8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v61 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SentryEvent();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19CCF8C5C(v4 + 40, (uint64_t)&v67, &qword_1ECEB1F70);
  if (!*((_QWORD *)&v68 + 1))
    return sub_19CCECFE4((uint64_t)&v67, &qword_1ECEB1F70);
  v59 = v4;
  v60 = v5;
  v74[5] = v72;
  v74[6] = v73;
  v74[3] = v70;
  v74[4] = v71;
  v74[0] = v67;
  v74[1] = v68;
  v74[2] = v69;
  v51 = v8;
  v52 = *((_QWORD *)&v69 + 1);
  v50 = v9;
  v16 = v70;
  v17 = v72;
  v54 = *((_QWORD *)&v71 + 1);
  v18 = v73;
  v56 = *((_QWORD *)&v72 + 1);
  v19 = *((_QWORD *)&v73 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436ED8);
  v20 = a4;
  v21 = (_OWORD *)swift_allocObject();
  v22 = a1[4];
  v23 = a1[6];
  v24 = a1[7];
  v21[7] = a1[5];
  v21[8] = v23;
  v21[9] = v24;
  v25 = *a1;
  v26 = a1[1];
  v21[1] = xmmword_19D0522A0;
  v21[2] = v25;
  v27 = a1[2];
  v28 = a1[3];
  v21[3] = v26;
  v21[4] = v27;
  v21[5] = v28;
  v21[6] = v22;
  v57 = v19;
  swift_bridgeObjectRetain();
  v53 = v16;
  swift_bridgeObjectRetain();
  v55 = v17;
  v29 = v20;
  swift_bridgeObjectRetain();
  v58 = v18;
  swift_bridgeObjectRetain();
  sub_19CE67F60((uint64_t)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v61;
  sub_19CFDEF9C();
  v31 = sub_19CFDEF90();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v51);
  *(_QWORD *)&v67 = v31;
  *((_QWORD *)&v67 + 1) = v33;
  v65 = 45;
  v66 = 0xE100000000000000;
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_19CD41144();
  sub_19CFE0004();
  swift_bridgeObjectRelease();
  v34 = sub_19CFDF5F0();
  v36 = v35;
  swift_bridgeObjectRelease();
  sub_19CFDEF78();
  if (qword_1EE436E78 != -1)
    swift_once();
  *(uint64_t *)((char *)v15 + v12[15]) = 1;
  v38 = qword_1EE465AC8;
  v37 = unk_1EE465AD0;
  *v15 = v34;
  v15[1] = v36;
  v39 = v53;
  v15[2] = v52;
  v15[3] = v39;
  v40 = (uint64_t *)((char *)v15 + v12[7]);
  *v40 = 0x697263736176616ALL;
  v40[1] = 0xEA00000000007470;
  v41 = (uint64_t *)((char *)v15 + v12[8]);
  *v41 = v54;
  v41[1] = v55;
  v42 = (uint64_t *)((char *)v15 + v12[9]);
  *v42 = 0;
  v42[1] = 0;
  v43 = (uint64_t *)((char *)v15 + v12[10]);
  *v43 = v56;
  v43[1] = v58;
  *(uint64_t *)((char *)v15 + v12[11]) = v57;
  *(uint64_t *)((char *)v15 + v12[12]) = (uint64_t)v21;
  v44 = qword_1EE465AD8;
  v45 = unk_1EE465AE0;
  v46 = (uint64_t *)((char *)v15 + v12[13]);
  *v46 = v62;
  v46[1] = v75;
  v46[2] = v29;
  v47 = (uint64_t *)((char *)v15 + v12[14]);
  *v47 = v38;
  v47[1] = v37;
  v47[2] = v44;
  v47[3] = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CE52740();
  sub_19CCEACE4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SentryEvent);
  return sub_19CD4E2C8((uint64_t)v74);
}

uint64_t sub_19CE52740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v2 = sub_19CFDE96C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCF8C5C(v0 + 40, (uint64_t)&v27, &qword_1ECEB1F70);
  if (!*((_QWORD *)&v28 + 1))
    return sub_19CCECFE4((uint64_t)&v27, &qword_1ECEB1F70);
  v37 = v30;
  v38 = v31;
  v39 = v32;
  v40 = v33;
  v34 = v27;
  v35 = v28;
  v36 = v29;
  if (objc_msgSend((id)objc_opt_self(), sel_onDeviceDiagnosticsAllowed))
  {
    sub_19CFDE9C0();
    swift_allocObject();
    sub_19CFDE9B4();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CAE138], v2);
    sub_19CFDE984();
    v7 = type metadata accessor for SentryEvent();
    sub_19CCC5C88(&qword_1EE436DA8, (uint64_t (*)(uint64_t))type metadata accessor for SentryEvent, (uint64_t)&unk_19D0685E0);
    v8 = sub_19CFDE9A8();
    if (!v1)
    {
      v10 = v8;
      v11 = v9;
      v12 = (void *)objc_opt_self();
      v13 = (void *)sub_19CFDEE58();
      *(_QWORD *)&v27 = 0;
      v14 = objc_msgSend(v12, sel_JSONObjectWithData_options_error_, v13, 0, &v27);

      if (v14)
      {
        v15 = (id)v27;
        sub_19CFE004C();
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_19CD3BE18(v10, v11);
          swift_release();
          v16 = v26[1];
          v17 = *((_QWORD *)&v35 + 1);
          v18 = v36;
          __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
          *(_QWORD *)&v27 = v16;
          *((_QWORD *)&v27 + 1) = MEMORY[0x1E0DEE9D8];
          v19 = *((_QWORD *)&v37 + 1);
          v20 = v38;
          v21 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
          swift_bridgeObjectRetain();
          v21(&v27, v19, v20, v17, v18);
          swift_bridgeObjectRelease();
          sub_19CD4E2C8((uint64_t)&v34);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        sub_19CDC5494();
        swift_allocError();
        v24 = MEMORY[0x1E0DEE9D8];
        *v25 = v7;
        v25[1] = v24;
        v25[2] = 0;
        v25[3] = 0;
      }
      else
      {
        v23 = (id)v27;
        sub_19CFDEC9C();

      }
      swift_willThrow();
      sub_19CD3BE18(v10, v11);
    }
    swift_release();
  }
  return sub_19CD4E2C8((uint64_t)&v34);
}

uint64_t sub_19CE52AB8(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = *v4;
  return swift_task_switch();
}

uint64_t sub_19CE52B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_19CD579FC;
  return JSStack.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

_QWORD *sub_19CE52BA8(uint64_t a1)
{
  return JSStack.performRequest(_:)(a1);
}

uint64_t sub_19CE52BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return JSStack.performRequest(_:)(a1, a2);
}

uint64_t JSStack.performRequest(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  type metadata accessor for JSResponse();
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE52C88()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = JSStack.performRequest(_:)(*(_QWORD *)(v0 + 168));
  return swift_task_switch();
}

uint64_t sub_19CE52CC8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[23];
  v0[2] = v0;
  v0[3] = sub_19CE52D40;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD3810C();
  sub_19CCECFE4(v1, &qword_1ECEB1270);
  return swift_continuation_await();
}

uint64_t sub_19CE52D40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 200) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_19CCFE8AC(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 160), (uint64_t (*)(_QWORD))type metadata accessor for JSResponse);
  return swift_task_switch();
}

uint64_t sub_19CE52DC0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE52DFC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JSStack.withUnsafeContext<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE52E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = v4[5];
  v4[7] = (uint64_t)JSStack.withUnsafeContext<A>(_:)(v4[3], v4[4], v5, a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[8] = (uint64_t)v6;
  v9 = type metadata accessor for Promise(0, v5, v7, v8);
  v10 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v9);
  *v6 = v4;
  v6[1] = sub_19CE52EF0;
  return Future.result.getter(v4[2], v9, v10);
}

uint64_t sub_19CE52EF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE52F54()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE52F88()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JSStack.evaluate(script:against:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE52FD8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = JSStack.evaluate(script:against:)(*(_QWORD *)(v0 + 168), *(void **)(v0 + 176));
  return swift_task_switch();
}

uint64_t sub_19CE5301C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CDE8CE4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD30C8C();
  sub_19CCECFE4(v1, &qword_1ECEB12A0);
  return swift_continuation_await();
}

uint64_t sub_19CE530B4()
{
  uint64_t *v0;

  v0[23] = JSStack.notify(withName:)(v0[20], v0[21]);
  return swift_task_switch();
}

uint64_t sub_19CE530F8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = v0;
  v0[3] = sub_19CE5316C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBDCE8();
  sub_19CCECFE4(v1, &qword_1EE43D300);
  return swift_continuation_await();
}

uint64_t sub_19CE5316C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 192) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_19CE531D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5320C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE53240()
{
  return 3;
}

uint64_t sub_19CE53248(void *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t result;

  objc_msgSend(a1, sel_setException_, a2);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_19CE4FC80(a2, a4 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_19CE532C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_19CE532E8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint32_t os_unfair_lock_opaque;
  int v3;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1 + 5);
  os_unfair_lock_opaque = v1[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v1 + 5);
  if (os_unfair_lock_opaque)
  {
    os_unfair_lock_lock(v1 + 5);
    v3 = v1[4]._os_unfair_lock_opaque;
    os_unfair_lock_unlock(v1 + 5);
    notify_cancel(v3);
    os_unfair_lock_lock(v1 + 5);
    v1[4]._os_unfair_lock_opaque = 0;
    os_unfair_lock_unlock(v1 + 5);
  }
  swift_release();
  return v0;
}

uint64_t sub_19CE53378()
{
  sub_19CE532E8();
  return swift_deallocClassInstance();
}

void sub_19CE53394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1A1ADBF98](v7);
  if (v8)
  {
    v9 = (void *)v8;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_beginAccess();
      sub_19CE65324(v9, a4, *(_DWORD *)(a5 + 16));
      swift_release();
    }

  }
}

uint64_t sub_19CE5344C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_19CE53488(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[2];

  v5 = a4[3];
  v6 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  if (v8)
  {
    v13[0] = v7;
    v13[1] = v8;
    v9 = a1;
    v10 = sub_19CFE0688();
    sub_19CE398CC((uint64_t)v13);
  }
  else
  {
    v11 = a1;
    v10 = 0;
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v10, a1);
  swift_unknownObjectRelease();

  if (!v12)
    __break(1u);
}

uint64_t sub_19CE53560()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE535A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5360C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE53658()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE536A4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE536EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE53750()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5379C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE537E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v2 + 128));
}

uint64_t sub_19CE5384C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 208) = a1;
    *(_QWORD *)(v4 + 128) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_19CE538C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_19CE53920()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5396C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  *(_QWORD *)(v1 + 168) = type metadata accessor for StartUpPerformanceEvent();
  return swift_task_switch();
}

uint64_t sub_19CE539B0()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (__cdecl *v9)();

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 160) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 168)), (v2 & 1) == 0))
  {
    v3 = sub_19CDA6DAC();
    if (v3)
    {
      v5 = v4;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v6;
      *v6 = v0;
      v6[1] = sub_19CE68E74;
      return sub_19CCC8138(v0 + 128, v3, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), v3, v5);
    }
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 160) + 56) + 32 * v1, v0 + 48);
  sub_19CD433C0((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
  sub_19CD436B0(v0 + 16, v0 + 80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v3 = *(_QWORD *)(v0 + 152);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DCF8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = sub_19CDA9B84();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43DD00);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 144);
    v9 = (uint64_t (__cdecl *)())((char *)&dword_1EE43FEC8 + dword_1EE43FEC8);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v8;
    *v8 = v0;
    v8[1] = sub_19CE53CC4;
    return v9();
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 112) = 0;
    *(_QWORD *)(v0 + 120) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE53CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 208) = a1;
    *(_QWORD *)(v4 + 128) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_19CE53D3C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[23] = a1;
  v2[24] = a2;
  v2[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2B0);
  return swift_task_switch();
}

uint64_t sub_19CE53D84()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 192) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 200)), (v2 & 1) == 0))
  {
    v4 = sub_19CDA6DDC();
    if (v4)
    {
      v6 = v4;
      v7 = v5;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_19CE68EF8;
      return sub_19CCC8138(*(_QWORD *)(v0 + 184), v6, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v6, v7);
    }
    v10 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v10 + 32) = 0;
    *(_OWORD *)v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 192) + 56) + 32 * v1, v0 + 56);
  sub_19CD433C0((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 120));
  sub_19CD436B0(v0 + 120, v0 + 88);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 184);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    sub_19CCD14C4((__int128 *)(v0 + 16), v3);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FE28);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAA7E0(*(_QWORD *)(v0 + 184));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FE30);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 176);
    v12 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FE38 + dword_1EE43FE38);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v11;
    *v11 = v0;
    v11[1] = sub_19CE540B4;
    return v12(*(_QWORD *)(v0 + 184));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 160) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE540B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE54118()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE54160()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE541C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  *(_BYTE *)(v1 + 9) = 0;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE54220()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE54284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[23] = a1;
  v2[24] = a2;
  v2[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
  return swift_task_switch();
}

uint64_t sub_19CE542CC()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 192) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 200)), (v2 & 1) == 0))
  {
    v4 = sub_19CDA6DF4();
    if (v4)
    {
      v6 = v4;
      v7 = v5;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_19CE68EF8;
      return sub_19CCC8138(*(_QWORD *)(v0 + 184), v6, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v6, v7);
    }
    v10 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v10 + 32) = 0;
    *(_OWORD *)v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 192) + 56) + 32 * v1, v0 + 56);
  sub_19CD433C0((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 120));
  sub_19CD436B0(v0 + 120, v0 + 88);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 184);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    sub_19CCD14C4((__int128 *)(v0 + 16), v3);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDB0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAB4A8(*(_QWORD *)(v0 + 184));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDB8);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 176);
    v12 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FDE8 + dword_1EE43FDE8);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v11;
    *v11 = v0;
    v11[1] = sub_19CE540B4;
    return v12(*(_QWORD *)(v0 + 184));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 160) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE545FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE54614()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _OWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 232) + 16)
    || (v1 = sub_19CD4B638((uint64_t)&type metadata for JetPackAssetSession.Configuration), (v2 & 1) == 0))
  {
    v7 = sub_19CDA6E00();
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v11;
      *v11 = v0;
      v11[1] = sub_19CE54950;
      return sub_19CCC8138(*(_QWORD *)(v0 + 224), v9, *(_QWORD *)(v0 + 232), (uint64_t)&type metadata for JetPackAssetSession.Configuration, v9, v10);
    }
    v13 = *(_OWORD **)(v0 + 224);
    v13[3] = 0u;
    v13[4] = 0u;
    v13[1] = 0u;
    v13[2] = 0u;
    *v13 = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 232) + 56) + 32 * v1, v0 + 96);
  sub_19CD433C0((_OWORD *)(v0 + 96), (_OWORD *)(v0 + 160));
  sub_19CD436B0(v0 + 160, v0 + 128);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_OWORD **)(v0 + 224);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
    *v3 = *(_OWORD *)(v0 + 16);
    v4 = *(_OWORD *)(v0 + 32);
    v5 = *(_OWORD *)(v0 + 48);
    v6 = *(_OWORD *)(v0 + 80);
    v3[3] = *(_OWORD *)(v0 + 64);
    v3[4] = v6;
    v3[1] = v4;
    v3[2] = v5;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FD58);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAB750(*(_QWORD *)(v0 + 224));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FD60);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 216);
    v15 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FD68 + dword_1EE43FD68);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v14;
    *v14 = v0;
    v14[1] = sub_19CE54998;
    return v15(*(_QWORD *)(v0 + 224));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 192) = 0;
    *(_QWORD *)(v0 + 200) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE54950()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE54998()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE549FC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE54A48()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE54A94(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[23] = a1;
  v2[24] = a2;
  v2[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE78);
  return swift_task_switch();
}

uint64_t sub_19CE54ADC()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 192) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 200)), (v2 & 1) == 0))
  {
    v4 = sub_19CDA6E0C();
    if (v4)
    {
      v6 = v4;
      v7 = v5;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_19CE54E0C;
      return sub_19CCC8138(*(_QWORD *)(v0 + 184), v6, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v6, v7);
    }
    v10 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v10 + 32) = 0;
    *(_OWORD *)v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 192) + 56) + 32 * v1, v0 + 56);
  sub_19CD433C0((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 120));
  sub_19CD436B0(v0 + 120, v0 + 88);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 184);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    sub_19CCD14C4((__int128 *)(v0 + 16), v3);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FDA0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAB9BC(*(_QWORD *)(v0 + 184));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FDA8);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 176);
    v12 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FDB0 + dword_1EE43FDB0);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v11;
    *v11 = v0;
    v11[1] = sub_19CE54E54;
    return v12(*(_QWORD *)(v0 + 184));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 160) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE54E0C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE54E54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE54EB8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE54F04()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE54F50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  *(_QWORD *)(v1 + 168) = sub_19CCE5204(0, (unint64_t *)&qword_1EE43A718);
  return swift_task_switch();
}

uint64_t sub_19CE54FA4()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (__cdecl *v9)();

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 160) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 168)), (v2 & 1) == 0))
  {
    v3 = sub_19CDA6E18();
    if (v3)
    {
      v5 = v4;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v6;
      *v6 = v0;
      v6[1] = sub_19CE68E74;
      return sub_19CCC8138(v0 + 128, v3, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), v3, v5);
    }
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 160) + 56) + 32 * v1, v0 + 48);
  sub_19CD433C0((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
  sub_19CD436B0(v0 + 16, v0 + 80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v3 = *(_QWORD *)(v0 + 152);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FCB0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = sub_19CDABC64();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FCB8);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 144);
    v9 = (uint64_t (__cdecl *)())((char *)&dword_1EE43FCC0 + dword_1EE43FCC0);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v8;
    *v8 = v0;
    v8[1] = sub_19CE53CC4;
    return v9();
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 112) = 0;
    *(_QWORD *)(v0 + 120) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFE0A90();
    sub_19CFDF698();
    swift_bridgeObjectRelease();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE552B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  *(_QWORD *)(v1 + 168) = type metadata accessor for JetPackAssetSession();
  return swift_task_switch();
}

uint64_t sub_19CE552FC()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (__cdecl *v9)();

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 160) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 168)), (v2 & 1) == 0))
  {
    v3 = sub_19CDA6E24();
    if (v3)
    {
      v5 = v4;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v6;
      *v6 = v0;
      v6[1] = sub_19CE537E8;
      return sub_19CCC8138(v0 + 128, v3, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), v3, v5);
    }
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 160) + 56) + 32 * v1, v0 + 48);
  sub_19CD433C0((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
  sub_19CD436B0(v0 + 16, v0 + 80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v3 = *(_QWORD *)(v0 + 152);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE50);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = sub_19CDABF2C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE58);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 144);
    v9 = (uint64_t (__cdecl *)())((char *)&dword_1EE43FD20 + dword_1EE43FD20);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v8;
    *v8 = v0;
    v8[1] = sub_19CE5384C;
    return v9();
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 112) = 0;
    *(_QWORD *)(v0 + 120) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE55610(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[18] = a1;
  v2[19] = a2;
  v3 = type metadata accessor for JetPackAsset(0);
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE55670()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 152) + 16) || (v1 = sub_19CD4B638(*(_QWORD *)(v0 + 160)), (v2 & 1) == 0))
  {
    v7 = sub_19CDA6E30();
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v11;
      *v11 = v0;
      v11[1] = sub_19CE559E0;
      return sub_19CCC8138(*(_QWORD *)(v0 + 144), v9, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), v9, v10);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 160));
    goto LABEL_11;
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 152) + 56) + 32 * v1, v0 + 48);
  sub_19CD433C0((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
  sub_19CD436B0(v0 + 16, v0 + 80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 144);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    sub_19CCFE8AC(v3, v6, type metadata accessor for JetPackAsset);
LABEL_10:
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
LABEL_11:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDF8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 144);
    sub_19CDAC20C(v6);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE00);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 136);
    v14 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FBF0 + dword_1EE43FBF0);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v13;
    *v13 = v0;
    v13[1] = sub_19CCCA8BC;
    return v14(*(_QWORD *)(v0 + 144));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 112) = 0;
    *(_QWORD *)(v0 + 120) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE559E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE55A2C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE55A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE55A98()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 208) + 16)
    || (v1 = sub_19CD4B638((uint64_t)&type metadata for DiskJetPackLoader), (v2 & 1) == 0))
  {
    v7 = sub_19CDA6E3C();
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v11;
      *v11 = v0;
      v11[1] = sub_19CE55DD8;
      return sub_19CCC8138(*(_QWORD *)(v0 + 200), v9, *(_QWORD *)(v0 + 208), (uint64_t)&type metadata for DiskJetPackLoader, v9, v10);
    }
    v13 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v13 + 32) = 0;
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_OWORD *)(v13 + 40) = xmmword_19D04BBA0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 208) + 56) + 32 * v1, v0 + 72);
  sub_19CD433C0((_OWORD *)(v0 + 72), (_OWORD *)(v0 + 136));
  sub_19CD436B0(v0 + 136, v0 + 104);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 200);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
    v4 = *(_OWORD *)(v0 + 16);
    v5 = *(_OWORD *)(v0 + 32);
    v6 = *(_OWORD *)(v0 + 48);
    *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 64);
    *(_OWORD *)(v3 + 16) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_OWORD *)v3 = v4;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC70);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAC500(*(_QWORD *)(v0 + 200));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC78);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 192);
    v15 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FC80 + dword_1EE43FC80);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v14;
    *v14 = v0;
    v14[1] = sub_19CE55E20;
    return v15(*(_QWORD *)(v0 + 200));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 168) = 0;
    *(_QWORD *)(v0 + 176) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE55DD8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE55E20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE55E84()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE55ED0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE55F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE55F34()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 208) + 16)
    || (v1 = sub_19CD4B638((uint64_t)&type metadata for InMemoryJetPackLoader), (v2 & 1) == 0))
  {
    v7 = sub_19CDA6E48();
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v11;
      *v11 = v0;
      v11[1] = sub_19CE68E6C;
      return sub_19CCC8138(*(_QWORD *)(v0 + 200), v9, *(_QWORD *)(v0 + 208), (uint64_t)&type metadata for InMemoryJetPackLoader, v9, v10);
    }
    v13 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v13 + 32) = 0;
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_OWORD *)(v13 + 40) = xmmword_19D04BBA0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_19CD436B0(*(_QWORD *)(*(_QWORD *)(v0 + 208) + 56) + 32 * v1, v0 + 72);
  sub_19CD433C0((_OWORD *)(v0 + 72), (_OWORD *)(v0 + 136));
  sub_19CD436B0(v0 + 136, v0 + 104);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 200);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
    v4 = *(_OWORD *)(v0 + 16);
    v5 = *(_OWORD *)(v0 + 32);
    v6 = *(_OWORD *)(v0 + 48);
    *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 64);
    *(_OWORD *)(v3 + 16) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_OWORD *)v3 = v4;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC28);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_19CDAC76C(*(_QWORD *)(v0 + 200));
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC30);
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 192);
    v15 = (uint64_t (*)(uint64_t))((char *)&dword_1EE43FC38 + dword_1EE43FC38);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v14;
    *v14 = v0;
    v14[1] = sub_19CE56274;
    return v15(*(_QWORD *)(v0 + 200));
  }
  else
  {
    sub_19CFE010C();
    *(_QWORD *)(v0 + 168) = 0;
    *(_QWORD *)(v0 + 176) = 0xE000000000000000;
    sub_19CFDF698();
    sub_19CFE02E0();
    sub_19CFDF698();
    sub_19CFDF698();
    sub_19CFDF698();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CE56274()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE562D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDF1AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5, v8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v42 - v11;
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v13);
  v14 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v13);
    return v14;
  }
  else
  {
    v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v51 = v4;
    v52 = v12;
    v16 = v0;
    v17 = *(_QWORD *)(v0 + 32);
    type metadata accessor for BaseObjectGraph();
    v48 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v53 = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    v49 = v14;
    v47 = v20;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v43 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v43 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF08);
    v15 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v26 = swift_allocObject();
    *(_DWORD *)(v26 + 16) = 0;
    v27 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v15 + 16) = v26;
    *(_QWORD *)(v15 + 24) = v27;
    *(_QWORD *)(v15 + 40) = 0;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 32) = 0;
    *(_BYTE *)(v15 + 56) = 0;
    *(_QWORD *)(v16 + 24) = v15;
    *(_QWORD *)(v16 + 32) = 0;
    *(_BYTE *)(v16 + 40) = 1;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v13);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v28 = sub_19CFDF1DC();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v29 = v52;
    sub_19CFDF17C();
    v30 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v51, 1, 1, v30);
    v46 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v50, v29, v5);
    v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v32 = (v7 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
    v45 = v16;
    v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v36 + v31, v50, v5);
    v37 = (_QWORD *)(v36 + v32);
    v38 = v48;
    *v37 = v49;
    v37[1] = v38;
    v39 = (_QWORD *)(v36 + v33);
    *v39 = v45;
    v39[1] = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    v40 = v44;
    *(_QWORD *)(v36 + v34) = v43;
    *(_QWORD *)(v36 + v40) = v47;
    *(_QWORD *)(v36 + v35) = v15;
    *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v51, (uint64_t)&unk_1EE43FF18, v36);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v52, v5);
  }
  return v15;
}

uint64_t sub_19CE56770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v44 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v52 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = v5;
    v56 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    v53 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v57 = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for Bag;
    v54 = v15;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v45 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v45 = 0;
    }
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0EE8);
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v27 = swift_allocObject();
    *(_DWORD *)(v27 + 16) = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 16) = v27;
    *(_QWORD *)(v26 + 24) = v28;
    *(_BYTE *)(v26 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v26;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v50 = v26;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v29 = sub_19CFDF1DC();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v30 = v56;
    sub_19CFDF17C();
    v31 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v55, 1, 1, v31);
    v48 = swift_allocObject();
    swift_weakInit();
    v32 = v52;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v52, v30, v6);
    v33 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = v1;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    v49 = v6;
    v37 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = 0;
    *(_QWORD *)(v38 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v38 + v33, v32, v6);
    v39 = (_QWORD *)(v38 + v34);
    v40 = v53;
    *v39 = v54;
    v39[1] = v40;
    v41 = (_QWORD *)(v38 + v35);
    *v41 = v47;
    v41[1] = &type metadata for Bag;
    v42 = v46;
    *(_QWORD *)(v38 + v36) = v45;
    v43 = v50;
    *(_QWORD *)(v38 + v42) = v51;
    *(_QWORD *)(v38 + v37) = v43;
    *(_QWORD *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v55, (uint64_t)&unk_1EE43FD08, v38);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v56, v49);
    return v43;
  }
}

uint64_t sub_19CE56C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v54 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v57 = v5;
    v58 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    v18 = sub_19CCE5204(0, &qword_1ECEB24A8);
    type metadata accessor for BaseObjectGraph();
    v55 = v17;
    swift_retain();
    v19 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v59 = v19;
    swift_retain();
    swift_task_localValuePush();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_19CD49828(v20);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v56 = v15;
    v53 = v18;
    if (v21
      && ((v22 = swift_conformsToProtocol2()) != 0 ? (v23 = v22) : (v23 = 0), v22 ? (v24 = v18) : (v24 = 0), v24))
    {
      v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      v25(v24, v23);
      v26 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v46 = v26;
      swift_release();
    }
    else
    {
      v46 = 0;
    }
    v52 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43AFE0);
    v27 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v28 = swift_allocObject();
    *(_DWORD *)(v28 + 16) = 0;
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 24) = v29;
    *(_BYTE *)(v27 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v27;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v51 = v27;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v30 = sub_19CFDF1DC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v31 = v58;
    sub_19CFDF17C();
    v32 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v57, 1, 1, v32);
    v49 = swift_allocObject();
    swift_weakInit();
    v33 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v54, v31, v6);
    v34 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v35 = (v8 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v48 = v1;
    v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    v50 = v6;
    v47 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v39 + v34, v33, v6);
    v40 = (_QWORD *)(v39 + v35);
    v41 = v55;
    *v40 = v56;
    v40[1] = v41;
    v42 = (_QWORD *)(v39 + v36);
    v43 = v53;
    *v42 = v48;
    v42[1] = v43;
    v44 = v47;
    *(_QWORD *)(v39 + v37) = v46;
    v45 = v51;
    *(_QWORD *)(v39 + v44) = v52;
    *(_QWORD *)(v39 + v38) = v45;
    *(_QWORD *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v57, (uint64_t)&unk_1EE43FF40, v39);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v58, v50);
    return v45;
  }
}

uint64_t sub_19CE570B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t started;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v44 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19CFDF1AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5, v8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v35 - v11;
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v13);
  v14 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v13);
    return v14;
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    started = type metadata accessor for StartUpPerformanceEvent();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FED0);
    v17 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v18 = swift_allocObject();
    *(_DWORD *)(v18 + 16) = 0;
    v19 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v17 + 16) = v18;
    *(_QWORD *)(v17 + 24) = v19;
    *(_BYTE *)(v17 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v17;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    sub_19CCFC0A8();
    v42 = v17;
    swift_retain();
    v43 = v16;
    sub_19CCFC05C();
    os_unfair_lock_unlock(v13);
    v40 = v14;
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v20 = sub_19CFDF1DC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v21 = sub_19CFDFA10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v44, 1, 1, v21);
    v38 = swift_allocObject();
    swift_weakInit();
    v22 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v22(v36, v12, v5);
    v23 = v5;
    v24 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v25 = (v7 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    v37 = v6;
    v27 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = v12;
    v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = 0;
    *(_QWORD *)(v29 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v29 + v24, v36, v23);
    v30 = (_QWORD *)(v29 + v25);
    v31 = started;
    v33 = v42;
    v32 = v43;
    *v30 = v40;
    v30[1] = v32;
    v34 = (_QWORD *)(v29 + v26);
    *v34 = v1;
    v34[1] = v31;
    *(_QWORD *)(v29 + v35) = 0;
    *(_QWORD *)(v29 + v27) = 0;
    *(_QWORD *)(v29 + v28) = v33;
    *(_QWORD *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
    sub_19CCFC0A8();
    swift_retain();
    sub_19CE72184(v44, (uint64_t)&unk_1EE43FEE0, v29);
    swift_release();
    sub_19CCFC05C();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v23);
    return v33;
  }
}

uint64_t sub_19CE57428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t started;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53[5];
  char v54;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v41 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 24);
    v51 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2B0);
    started = type metadata accessor for StartUpPerformanceEvent();
    v48 = v18;
    v49 = v17;
    v52 = v13;
    if (v18 == started)
    {
      swift_retain();
      v42 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      v20 = static BaseObjectGraph.current.getter();
      if (qword_1ECEB1330 != -1)
        swift_once();
      v53[0] = v20;
      swift_retain();
      swift_task_localValuePush();
      v21 = swift_bridgeObjectRetain();
      v42 = sub_19CD49828(v21);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
    }
    v53[0] = MEMORY[0x1E0DEE9D8];
    v54 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FE40);
    v22 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v23 = swift_allocObject();
    *(_DWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v22 + 16) = v23;
    sub_19CCC290C((uint64_t)v53, v22 + 24, &qword_1EE43E480);
    *(_QWORD *)(v1 + 24) = v22;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v47 = v22;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v24 = sub_19CFDF1DC();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v25 = v52;
    sub_19CFDF17C();
    v26 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
    v46 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v25, v6);
    v27 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = v5;
    v45 = v6;
    v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = v1;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33 + v27, v51, v6);
    v34 = (_QWORD *)(v33 + v28);
    v35 = v49;
    *v34 = v50;
    v34[1] = v35;
    v36 = (_QWORD *)(v33 + v29);
    v37 = v42;
    v38 = v48;
    *v36 = v43;
    v36[1] = v38;
    *(_QWORD *)(v33 + v30) = 0;
    *(_QWORD *)(v33 + v31) = v37;
    v39 = v46;
    v40 = v47;
    *(_QWORD *)(v33 + v32) = v47;
    *(_QWORD *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v44, (uint64_t)&unk_1EE43FE50, v33);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v45);
    return v40;
  }
}

uint64_t sub_19CE57864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v44 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v52 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = v5;
    v56 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    v53 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v57 = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for IntentDispatchTimeout;
    v54 = v15;
    v51 = v20;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v45 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v45 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FE70);
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v27 = swift_allocObject();
    *(_DWORD *)(v27 + 16) = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 16) = v27;
    *(_QWORD *)(v26 + 24) = v28;
    *(_WORD *)(v26 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v26;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v50 = v26;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v29 = sub_19CFDF1DC();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v30 = v56;
    sub_19CFDF17C();
    v31 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v55, 1, 1, v31);
    v48 = swift_allocObject();
    swift_weakInit();
    v32 = v52;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v52, v30, v6);
    v33 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = v1;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    v49 = v6;
    v37 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = 0;
    *(_QWORD *)(v38 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v38 + v33, v32, v6);
    v39 = (_QWORD *)(v38 + v34);
    v40 = v53;
    *v39 = v54;
    v39[1] = v40;
    v41 = (_QWORD *)(v38 + v35);
    *v41 = v47;
    v41[1] = &type metadata for IntentDispatchTimeout;
    v42 = v46;
    *(_QWORD *)(v38 + v36) = v45;
    v43 = v50;
    *(_QWORD *)(v38 + v42) = v51;
    *(_QWORD *)(v38 + v37) = v43;
    *(_QWORD *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v55, (uint64_t)&unk_1EE43FE80, v38);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v56, v49);
    return v43;
  }
}

_QWORD *sub_19CE57D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = MEMORY[0x1E0C80A78](v6, v9);
  v65 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v53 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E498);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (uint64_t *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v18);
    return (_QWORD *)v19;
  }
  else
  {
    v61 = *(_QWORD *)(v1 + 24);
    v62 = v13;
    v63 = v5;
    v64 = v7;
    v21 = *(_QWORD *)(v1 + 32);
    v22 = type metadata accessor for PageIntentInstrumentation();
    type metadata accessor for BaseObjectGraph();
    v60 = v21;
    swift_retain();
    v23 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v66 = v23;
    swift_retain();
    swift_task_localValuePush();
    v24 = swift_bridgeObjectRetain();
    v25 = sub_19CD49828(v24);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v58 = v25;
    v59 = v22;
    if (v25
      && ((v26 = swift_conformsToProtocol2()) != 0 ? (v27 = v26) : (v27 = 0), v26 ? (v28 = v22) : (v28 = 0), v28))
    {
      v29 = v6;
      v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      swift_retain();
      v30(v28, v27);
      v6 = v29;
      v31 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v53 = v31;
      swift_release();
    }
    else
    {
      v53 = 0;
    }
    v32 = v62;
    *v17 = MEMORY[0x1E0DEE9D8];
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FEA0);
    v33 = (_QWORD *)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v34 = swift_allocObject();
    *(_DWORD *)(v34 + 16) = 0;
    v33[2] = v34;
    sub_19CCC290C((uint64_t)v17, (uint64_t)v33 + *(_QWORD *)(*v33 + 96), &qword_1EE43E498);
    *(_QWORD *)(v1 + 24) = v33;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v57 = v33;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v18);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v35 = sub_19CFDF1DC();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v36 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v63, 1, 1, v36);
    v55 = swift_allocObject();
    swift_weakInit();
    v37 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v32, v6);
    v38 = *(unsigned __int8 *)(v37 + 80);
    v54 = v1;
    v39 = (v38 + 32) & ~v38;
    v40 = (v8 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
    v56 = v6;
    v42 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = 0;
    *(_QWORD *)(v45 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v45 + v39, v65, v6);
    v46 = (_QWORD *)(v45 + v40);
    v47 = v60;
    *v46 = v61;
    v46[1] = v47;
    v48 = (_QWORD *)(v45 + v41);
    v49 = v53;
    v51 = v58;
    v50 = v59;
    *v48 = v54;
    v48[1] = v50;
    *(_QWORD *)(v45 + v42) = v49;
    *(_QWORD *)(v45 + v43) = v51;
    v52 = v57;
    *(_QWORD *)(v45 + v44) = v57;
    *(_QWORD *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = v55;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v63, (uint64_t)&unk_1EE43FEB0, v45);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v56);
    return v52;
  }
}

uint64_t sub_19CE58204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t started;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53[5];
  char v54;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v41 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 24);
    v51 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
    started = type metadata accessor for StartUpPerformanceEvent();
    v48 = v18;
    v49 = v17;
    v52 = v13;
    if (v18 == started)
    {
      swift_retain();
      v42 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      v20 = static BaseObjectGraph.current.getter();
      if (qword_1ECEB1330 != -1)
        swift_once();
      v53[0] = v20;
      swift_retain();
      swift_task_localValuePush();
      v21 = swift_bridgeObjectRetain();
      v42 = sub_19CD49828(v21);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
    }
    v53[0] = MEMORY[0x1E0DEE9D8];
    v54 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FDF0);
    v22 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v23 = swift_allocObject();
    *(_DWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v22 + 16) = v23;
    sub_19CCC290C((uint64_t)v53, v22 + 24, (uint64_t *)&unk_1EE43E470);
    *(_QWORD *)(v1 + 24) = v22;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v47 = v22;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v24 = sub_19CFDF1DC();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v25 = v52;
    sub_19CFDF17C();
    v26 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
    v46 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v25, v6);
    v27 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = v5;
    v45 = v6;
    v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = v1;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33 + v27, v51, v6);
    v34 = (_QWORD *)(v33 + v28);
    v35 = v49;
    *v34 = v50;
    v34[1] = v35;
    v36 = (_QWORD *)(v33 + v29);
    v37 = v42;
    v38 = v48;
    *v36 = v43;
    v36[1] = v38;
    *(_QWORD *)(v33 + v30) = 0;
    *(_QWORD *)(v33 + v31) = v37;
    v39 = v46;
    v40 = v47;
    *(_QWORD *)(v33 + v32) = v47;
    *(_QWORD *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v44, (uint64_t)&unk_1EE43FE00, v33);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v45);
    return v40;
  }
}

uint64_t sub_19CE58640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54[10];
  char v55;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v42 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v52 = v5;
    v53 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    v50 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v54[0] = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for JetPackAssetSession.Configuration;
    v51 = v15;
    v48 = v20;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v42 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v42 = 0;
    }
    v54[0] = MEMORY[0x1E0DEE9D8];
    v55 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FD70);
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v27 = swift_allocObject();
    *(_DWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v26 + 16) = v27;
    sub_19CCC290C((uint64_t)v54, v26 + 24, (uint64_t *)&unk_1EE43E450);
    *(_QWORD *)(v1 + 24) = v26;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v47 = v26;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v28 = sub_19CFDF1DC();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v29 = v53;
    sub_19CFDF17C();
    v30 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v52, 1, 1, v30);
    v45 = swift_allocObject();
    swift_weakInit();
    v31 = v49;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v29, v6);
    v32 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v33 = (v8 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = v1;
    v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v46 = v6;
    v36 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v37 + v32, v31, v6);
    v38 = (_QWORD *)(v37 + v33);
    v39 = v50;
    *v38 = v51;
    v38[1] = v39;
    v40 = (_QWORD *)(v37 + v34);
    *v40 = v44;
    v40[1] = &type metadata for JetPackAssetSession.Configuration;
    *(_QWORD *)(v37 + v35) = v42;
    v41 = v47;
    *(_QWORD *)(v37 + v43) = v48;
    *(_QWORD *)(v37 + v36) = v41;
    *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v52, (uint64_t)&unk_1EE43FD80, v37);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v53, v46);
    return v41;
  }
}

uint64_t sub_19CE58B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t started;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53[5];
  char v54;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v41 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 24);
    v51 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE78);
    started = type metadata accessor for StartUpPerformanceEvent();
    v48 = v18;
    v49 = v17;
    v52 = v13;
    if (v18 == started)
    {
      swift_retain();
      v42 = 0;
    }
    else
    {
      type metadata accessor for BaseObjectGraph();
      swift_retain();
      v20 = static BaseObjectGraph.current.getter();
      if (qword_1ECEB1330 != -1)
        swift_once();
      v53[0] = v20;
      swift_retain();
      swift_task_localValuePush();
      v21 = swift_bridgeObjectRetain();
      v42 = sub_19CD49828(v21);
      swift_bridgeObjectRelease();
      swift_task_localValuePop();
      swift_release();
    }
    v53[0] = MEMORY[0x1E0DEE9D8];
    v54 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FDB8);
    v22 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v23 = swift_allocObject();
    *(_DWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v22 + 16) = v23;
    sub_19CCC290C((uint64_t)v53, v22 + 24, (uint64_t *)&unk_1EE43E460);
    *(_QWORD *)(v1 + 24) = v22;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v47 = v22;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v24 = sub_19CFDF1DC();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v25 = v52;
    sub_19CFDF17C();
    v26 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
    v46 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v25, v6);
    v27 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = v5;
    v45 = v6;
    v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = v1;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33 + v27, v51, v6);
    v34 = (_QWORD *)(v33 + v28);
    v35 = v49;
    *v34 = v50;
    v34[1] = v35;
    v36 = (_QWORD *)(v33 + v29);
    v37 = v42;
    v38 = v48;
    *v36 = v43;
    v36[1] = v38;
    *(_QWORD *)(v33 + v30) = 0;
    *(_QWORD *)(v33 + v31) = v37;
    v39 = v46;
    v40 = v47;
    *(_QWORD *)(v33 + v32) = v47;
    *(_QWORD *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v44, (uint64_t)&unk_1EE43FDC8, v33);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v45);
    return v40;
  }
}

uint64_t sub_19CE58F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v54 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v57 = v5;
    v58 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    v18 = sub_19CCE5204(0, (unint64_t *)&qword_1EE43A718);
    type metadata accessor for BaseObjectGraph();
    v55 = v17;
    swift_retain();
    v19 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v59 = v19;
    swift_retain();
    swift_task_localValuePush();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_19CD49828(v20);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v56 = v15;
    v52 = v21;
    v53 = v18;
    if (v21
      && ((v22 = swift_conformsToProtocol2()) != 0 ? (v23 = v22) : (v23 = 0), v22 ? (v24 = v18) : (v24 = 0), v24))
    {
      v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      v25(v24, v23);
      v26 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v46 = v26;
      swift_release();
    }
    else
    {
      v46 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FCC8);
    v27 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v28 = swift_allocObject();
    *(_DWORD *)(v28 + 16) = 0;
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 24) = v29;
    *(_BYTE *)(v27 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v27;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v51 = v27;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v30 = sub_19CFDF1DC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v31 = v58;
    sub_19CFDF17C();
    v32 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v57, 1, 1, v32);
    v49 = swift_allocObject();
    swift_weakInit();
    v33 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v54, v31, v6);
    v34 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v35 = (v8 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v48 = v1;
    v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    v50 = v6;
    v47 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v39 + v34, v33, v6);
    v40 = (_QWORD *)(v39 + v35);
    v41 = v55;
    *v40 = v56;
    v40[1] = v41;
    v42 = (_QWORD *)(v39 + v36);
    v43 = v53;
    *v42 = v48;
    v42[1] = v43;
    v44 = v47;
    *(_QWORD *)(v39 + v37) = v46;
    v45 = v51;
    *(_QWORD *)(v39 + v44) = v52;
    *(_QWORD *)(v39 + v38) = v45;
    *(_QWORD *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v57, (uint64_t)&unk_1EE43FCD8, v39);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v58, v50);
    return v45;
  }
}

uint64_t sub_19CE593F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v54 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v57 = v5;
    v58 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    v18 = type metadata accessor for JetPackAssetSession();
    type metadata accessor for BaseObjectGraph();
    v55 = v17;
    swift_retain();
    v19 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v59 = v19;
    swift_retain();
    swift_task_localValuePush();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_19CD49828(v20);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v56 = v15;
    v52 = v21;
    v53 = v18;
    if (v21
      && ((v22 = swift_conformsToProtocol2()) != 0 ? (v23 = v22) : (v23 = 0), v22 ? (v24 = v18) : (v24 = 0), v24))
    {
      v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      v25(v24, v23);
      v26 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v46 = v26;
      swift_release();
    }
    else
    {
      v46 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FD28);
    v27 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v28 = swift_allocObject();
    *(_DWORD *)(v28 + 16) = 0;
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 24) = v29;
    *(_BYTE *)(v27 + 32) = 0;
    *(_QWORD *)(v1 + 24) = v27;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v51 = v27;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v30 = sub_19CFDF1DC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v31 = v58;
    sub_19CFDF17C();
    v32 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v57, 1, 1, v32);
    v49 = swift_allocObject();
    swift_weakInit();
    v33 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v54, v31, v6);
    v34 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v35 = (v8 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v48 = v1;
    v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    v50 = v6;
    v47 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v39 + v34, v33, v6);
    v40 = (_QWORD *)(v39 + v35);
    v41 = v55;
    *v40 = v56;
    v40[1] = v41;
    v42 = (_QWORD *)(v39 + v36);
    v43 = v53;
    *v42 = v48;
    v42[1] = v43;
    v44 = v47;
    *(_QWORD *)(v39 + v37) = v46;
    v45 = v51;
    *(_QWORD *)(v39 + v44) = v52;
    *(_QWORD *)(v39 + v38) = v45;
    *(_QWORD *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v57, (uint64_t)&unk_1EE43FD38, v39);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v58, v50);
    return v45;
  }
}

_QWORD *sub_19CE59888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v65 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v53 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E410);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (uint64_t *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v18);
    return (_QWORD *)v19;
  }
  else
  {
    v61 = *(_QWORD *)(v1 + 24);
    v62 = v13;
    v63 = v5;
    v64 = v7;
    v21 = *(_QWORD *)(v1 + 32);
    v22 = type metadata accessor for JetPackAsset(0);
    type metadata accessor for BaseObjectGraph();
    v60 = v21;
    swift_retain();
    v23 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v66 = v23;
    swift_retain();
    swift_task_localValuePush();
    v24 = swift_bridgeObjectRetain();
    v25 = sub_19CD49828(v24);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v58 = v25;
    v59 = v22;
    if (v25
      && ((v26 = swift_conformsToProtocol2()) != 0 ? (v27 = v26) : (v27 = 0), v26 ? (v28 = v22) : (v28 = 0), v28))
    {
      v29 = v6;
      v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      swift_retain();
      v30(v28, v27);
      v6 = v29;
      v31 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v53 = v31;
      swift_release();
    }
    else
    {
      v53 = 0;
    }
    v32 = v62;
    *v17 = MEMORY[0x1E0DEE9D8];
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FBF8);
    v33 = (_QWORD *)swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v34 = swift_allocObject();
    *(_DWORD *)(v34 + 16) = 0;
    v33[2] = v34;
    sub_19CCC290C((uint64_t)v17, (uint64_t)v33 + *(_QWORD *)(*v33 + 96), (uint64_t *)&unk_1EE43E410);
    *(_QWORD *)(v1 + 24) = v33;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v57 = v33;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v18);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v35 = sub_19CFDF1DC();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    sub_19CFDF17C();
    v36 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v63, 1, 1, v36);
    v55 = swift_allocObject();
    swift_weakInit();
    v37 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v32, v6);
    v38 = *(unsigned __int8 *)(v37 + 80);
    v54 = v1;
    v39 = (v38 + 32) & ~v38;
    v40 = (v8 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
    v56 = v6;
    v42 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = 0;
    *(_QWORD *)(v45 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v45 + v39, v65, v6);
    v46 = (_QWORD *)(v45 + v40);
    v47 = v60;
    *v46 = v61;
    v46[1] = v47;
    v48 = (_QWORD *)(v45 + v41);
    v49 = v53;
    v51 = v58;
    v50 = v59;
    *v48 = v54;
    v48[1] = v50;
    *(_QWORD *)(v45 + v42) = v49;
    *(_QWORD *)(v45 + v43) = v51;
    v52 = v57;
    *(_QWORD *)(v45 + v44) = v57;
    *(_QWORD *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = v55;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v63, (uint64_t)&unk_1EE43FC08, v45);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v56);
    return v52;
  }
}

uint64_t sub_19CE59D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56[7];
  char v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v43 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v54 = v5;
    v55 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    v52 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v56[0] = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for DiskJetPackLoader;
    v53 = v15;
    v50 = v20;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v44 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v44 = 0;
    }
    v56[0] = MEMORY[0x1E0DEE9D8];
    v57 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC88);
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v27 = swift_allocObject();
    *(_DWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v26 + 16) = v27;
    sub_19CCC290C((uint64_t)v56, v26 + 24, (uint64_t *)&unk_1EE43E430);
    *(_QWORD *)(v1 + 24) = v26;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v49 = v26;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v28 = sub_19CFDF1DC();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v29 = v55;
    sub_19CFDF17C();
    v30 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v54, 1, 1, v30);
    v47 = swift_allocObject();
    swift_weakInit();
    v31 = v51;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v29, v6);
    v32 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v33 = (v8 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = v1;
    v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    v45 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = v6;
    v36 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v37 + v32, v31, v6);
    v38 = (_QWORD *)(v37 + v33);
    v39 = v52;
    *v38 = v53;
    v38[1] = v39;
    v40 = (_QWORD *)(v37 + v34);
    *v40 = v46;
    v40[1] = &type metadata for DiskJetPackLoader;
    v41 = v45;
    *(_QWORD *)(v37 + v35) = v44;
    v42 = v49;
    *(_QWORD *)(v37 + v41) = v50;
    *(_QWORD *)(v37 + v36) = v42;
    *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v47;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v54, (uint64_t)&unk_1EE43FC98, v37);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v48);
    return v42;
  }
}

uint64_t sub_19CE5A240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56[7];
  char v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_19CFDF1AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v43 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    swift_retain();
    os_unfair_lock_unlock(v14);
    return v15;
  }
  else
  {
    v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v54 = v5;
    v55 = v13;
    v17 = *(_QWORD *)(v1 + 32);
    type metadata accessor for BaseObjectGraph();
    v52 = v17;
    swift_retain();
    v18 = static BaseObjectGraph.current.getter();
    if (qword_1ECEB1330 != -1)
      swift_once();
    v56[0] = v18;
    swift_retain();
    swift_task_localValuePush();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_19CD49828(v19);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    v21 = &type metadata for InMemoryJetPackLoader;
    v53 = v15;
    v50 = v20;
    if (!v20)
      goto LABEL_13;
    v22 = swift_conformsToProtocol2();
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (!v22)
      v21 = 0;
    if (v21)
    {
      v24 = *(void (**)(ValueMetadata *, uint64_t))(v23 + 8);
      swift_retain();
      v24(v21, v23);
      v25 = sub_19CCCCA74();
      swift_release();
      swift_retain();
      sub_19CFDF29C();
      v44 = v25;
      swift_release();
    }
    else
    {
LABEL_13:
      v44 = 0;
    }
    v56[0] = MEMORY[0x1E0DEE9D8];
    v57 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FC40);
    v26 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
    v27 = swift_allocObject();
    *(_DWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v26 + 16) = v27;
    sub_19CCC290C((uint64_t)v56, v26 + 24, (uint64_t *)&unk_1EE43E420);
    *(_QWORD *)(v1 + 24) = v26;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    v49 = v26;
    swift_retain();
    sub_19CCFC05C();
    os_unfair_lock_unlock(v14);
    if (qword_1EE43B4E8 != -1)
      swift_once();
    v28 = sub_19CFDF1DC();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE465C48);
    sub_19CFDF1C4();
    swift_unknownObjectRetain();
    v29 = v55;
    sub_19CFDF17C();
    v30 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v54, 1, 1, v30);
    v47 = swift_allocObject();
    swift_weakInit();
    v31 = v51;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v29, v6);
    v32 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v33 = (v8 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = v1;
    v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    v45 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = v6;
    v36 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v37 + v32, v31, v6);
    v38 = (_QWORD *)(v37 + v33);
    v39 = v52;
    *v38 = v53;
    v38[1] = v39;
    v40 = (_QWORD *)(v37 + v34);
    *v40 = v46;
    v40[1] = &type metadata for InMemoryJetPackLoader;
    v41 = v45;
    *(_QWORD *)(v37 + v35) = v44;
    v42 = v49;
    *(_QWORD *)(v37 + v41) = v50;
    *(_QWORD *)(v37 + v36) = v42;
    *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v47;
    sub_19CCFC0A8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_19CE72184((uint64_t)v54, (uint64_t)&unk_1EE43FC50, v37);
    swift_release();
    sub_19CCFC05C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v48);
    return v42;
  }
}

uint64_t sub_19CE5A6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 136) = v14;
  *(_QWORD *)(v8 + 144) = v15;
  *(_OWORD *)(v8 + 120) = v13;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 152) = v9;
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 176) = v10;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 200) = v11;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5A7CC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[28];
    v13 = v0[26];
    v12 = v0[25];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[10]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[9] = sub_19CD37070(0xD000000000000012, 0x800000019D0725B0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[26];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[30] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[28], v0[10], v0[25]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[31] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FF20 + dword_1EE43FF20);
  v10 = (_QWORD *)swift_task_alloc();
  v0[32] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5AA28;
  return v14((uint64_t)(v0 + 2), v0[11], v0[12], v0[13], v0[14]);
}

uint64_t sub_19CE5AA28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5AA8C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 176);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 200);
    v13 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 120))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 120))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 128))
  {
    v21 = &type metadata for JetEngineBootstrap.URLProtocolHandler;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CFBA00C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_release();
  sub_19CD60178(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5ACDC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 88);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 120))
  {
    v9 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 264);
  sub_19CEB9B7C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5AE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 112) = v14;
  *(_QWORD *)(v8 + 120) = v15;
  *(_OWORD *)(v8 + 96) = v13;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 56) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 128) = v9;
  *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 144) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 152) = v10;
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 176) = v11;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5AF50()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[25];
    v13 = v0[23];
    v12 = v0[22];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[7]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[6] = sub_19CD37070(6775106, 0xE300000000000000, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[23];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[27] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[25], v0[7], v0[22]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[28] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FD10 + dword_1EE43FD10);
  v10 = (_QWORD *)swift_task_alloc();
  v0[29] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5B1A0;
  return v14((uint64_t)(v0 + 5), v0[8], v0[9], v0[10], v0[11]);
}

uint64_t sub_19CE5B1A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5B204()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 152);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 96))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 96))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 104))
  {
    v21 = &type metadata for Bag;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CCE882C(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5B44C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 64);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 96))
  {
    v9 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 240);
  sub_19CEB96A0(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5B5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5B6C0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  os_signpost_id_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[24];
    v14 = v0[21];
    v15 = v0[22];
    v5 = *(void (**)(uint64_t, _QWORD))(v15 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v17 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_19CCE5204(0, &qword_1ECEB24A8);
    v8 = sub_19CFE0A90();
    v0[5] = sub_19CD37070(v8, v9, &v17);
    sub_19CFDFFC8();
    swift_bridgeObjectRelease();
    v10 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v10, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v14);
  }
  else
  {
    v11 = v0[22];

    v5 = *(void (**)(uint64_t, _QWORD))(v11 + 16);
  }
  v0[26] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[24], v0[6], v0[21]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[27] = sub_19CFDF200();
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FF48 + dword_1EE43FF48);
  v12 = (_QWORD *)swift_task_alloc();
  v0[28] = v12;
  *v12 = v0;
  v12[1] = sub_19CE5B930;
  return v16(v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE5B930(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5B99C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t ObjectType;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    ObjectType = swift_getObjectType();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
  }
  v20 = *(void **)(v0 + 232);
  sub_19CFBA2D8(v20);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5BBE4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 240);
  sub_19CEB9E14(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5BD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5BE58()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[24];
    v13 = v0[22];
    v12 = v0[21];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[5] = sub_19CD37070(0xD000000000000017, 0x800000019D06D720, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[22];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[26] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[24], v0[6], v0[21]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[27] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FEE8 + dword_1EE43FEE8);
  v10 = (_QWORD *)swift_task_alloc();
  v0[28] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5C0AC;
  return v14(v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE5C0AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5C118()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    v21 = **(_QWORD **)(v0 + 232);
    StartUpPerformanceEvent.record(checkpoint:)(&v21);
  }
  sub_19CFBBCC8(*(_QWORD *)(v0 + 232));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5C364()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 240);
  sub_19CEBB0C4(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5C500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 144) = v14;
  *(_QWORD *)(v8 + 152) = v15;
  *(_OWORD *)(v8 + 128) = v13;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 120) = a8;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 88) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 160) = v9;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 208) = v11;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5C5D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[29];
    v13 = v0[27];
    v12 = v0[26];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[11]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[10] = sub_19CD37070(0xD000000000000021, 0x800000019D06D960, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[27];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[31] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[29], v0[11], v0[26]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[32] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FE58 + dword_1EE43FE58);
  v10 = (_QWORD *)swift_task_alloc();
  v0[33] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5C834;
  return v14((uint64_t)(v0 + 2), v0[12], v0[13], v0[14], v0[15]);
}

uint64_t sub_19CE5C834()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5C898()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 128))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 128))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 136))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2B0);
    StartUpPerformanceEvent.record(checkpoint:)(&v21);
  }
  sub_19CFBBF6C(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5CAE8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 128))
  {
    v9 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 272);
  sub_19CEBB5BC(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5CC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 120) = v14;
  *(_QWORD *)(v8 + 128) = v15;
  *(_OWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 96) = a8;
  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a6;
  *(_QWORD *)(v8 + 64) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 160) = v10;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 184) = v11;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5CD5C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[26];
    v13 = v0[24];
    v12 = v0[23];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[8]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[7] = sub_19CD37070(0xD000000000000015, 0x800000019D06D7C0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[24];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[28] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[26], v0[8], v0[23]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[29] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FE88 + dword_1EE43FE88);
  v10 = (_QWORD *)swift_task_alloc();
  v0[30] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5CFB8;
  return v14((uint64_t)(v0 + 5), v0[9], v0[10], v0[11], v0[12]);
}

uint64_t sub_19CE5CFB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5D01C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 104))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 104))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 112))
  {
    v21 = &type metadata for IntentDispatchTimeout;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CFBC1F0(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5D260()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 72);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 104))
  {
    v9 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 248);
  sub_19CEBB5E0(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5D3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  *(_QWORD *)(v8 + 168) = type metadata accessor for PageIntentInstrumentation();
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 184) = v11;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5D4F8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[26];
    v13 = v0[24];
    v12 = v0[23];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[5] = sub_19CD37070(0xD000000000000019, 0x800000019D06D7A0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[24];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[28] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[26], v0[6], v0[23]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[29] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FEB8 + dword_1EE43FEB8);
  v10 = (_QWORD *)swift_task_alloc();
  v0[30] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5D750;
  return v14(v0[22], v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE5D750()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5D7B4()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    v22 = *(_QWORD *)(v0 + 168);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  v20 = *(_QWORD *)(v0 + 176);
  sub_19CFBC448(v20);
  swift_release();
  sub_19CCEACE4(v20, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5DA10()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 248);
  sub_19CEBB83C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5DBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 144) = v14;
  *(_QWORD *)(v8 + 152) = v15;
  *(_OWORD *)(v8 + 128) = v13;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 120) = a8;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 88) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 160) = v9;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 208) = v11;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5DC90()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[29];
    v13 = v0[27];
    v12 = v0[26];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[11]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[10] = sub_19CD37070(0xD000000000000010, 0x800000019D06D7E0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[27];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[31] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[29], v0[11], v0[26]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[32] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FE08 + dword_1EE43FE08);
  v10 = (_QWORD *)swift_task_alloc();
  v0[33] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5DEEC;
  return v14((uint64_t)(v0 + 2), v0[12], v0[13], v0[14], v0[15]);
}

uint64_t sub_19CE5DEEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5DF50()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 128))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 128))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 136))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
    StartUpPerformanceEvent.record(checkpoint:)(&v21);
  }
  sub_19CFBD754(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5E1A0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 128))
  {
    v9 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 272);
  sub_19CEBC0C4(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5E33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 184) = v14;
  *(_QWORD *)(v8 + 192) = v15;
  *(_OWORD *)(v8 + 168) = v13;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 128) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 200) = v9;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 224) = v10;
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 248) = v11;
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5E414()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[34];
    v13 = v0[32];
    v12 = v0[31];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[16]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[15] = sub_19CD37070(0x72756769666E6F43, 0xED00006E6F697461, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[32];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[36] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[34], v0[16], v0[31]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[37] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FD88 + dword_1EE43FD88);
  v10 = (_QWORD *)swift_task_alloc();
  v0[38] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5E678;
  return v14((uint64_t)(v0 + 2), v0[17], v0[18], v0[19], v0[20]);
}

uint64_t sub_19CE5E678()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5E6DC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 232);
    v3 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 224);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 168))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 248);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 168))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 176))
  {
    v21 = &type metadata for JetPackAssetSession.Configuration;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CFBDC58(v0 + 16);
  swift_release();
  sub_19CCC2888(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5E928()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 136);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 168))
  {
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 312);
  sub_19CEBC388(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5EAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 144) = v14;
  *(_QWORD *)(v8 + 152) = v15;
  *(_OWORD *)(v8 + 128) = v13;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 120) = a8;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 88) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 160) = v9;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 208) = v11;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5EB9C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[30] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[29];
    v13 = v0[27];
    v12 = v0[26];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[11]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[10] = sub_19CD37070(0xD000000000000011, 0x800000019D06D940, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[27];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[31] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[29], v0[11], v0[26]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[32] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FDD0 + dword_1EE43FDD0);
  v10 = (_QWORD *)swift_task_alloc();
  v0[33] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5EDF8;
  return v14((uint64_t)(v0 + 2), v0[12], v0[13], v0[14], v0[15]);
}

uint64_t sub_19CE5EDF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5EE5C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 128))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 128))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 136))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE78);
    StartUpPerformanceEvent.record(checkpoint:)(&v21);
  }
  sub_19CFBDF04(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5F0AC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 128))
  {
    v9 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 272);
  sub_19CEBC610(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5F248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5F320()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  os_signpost_id_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[24];
    v14 = v0[21];
    v15 = v0[22];
    v5 = *(void (**)(uint64_t, _QWORD))(v15 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v17 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_19CCE5204(0, (unint64_t *)&qword_1EE43A718);
    v8 = sub_19CFE0A90();
    v0[5] = sub_19CD37070(v8, v9, &v17);
    sub_19CFDFFC8();
    swift_bridgeObjectRelease();
    v10 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v10, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v14);
  }
  else
  {
    v11 = v0[22];

    v5 = *(void (**)(uint64_t, _QWORD))(v11 + 16);
  }
  v0[26] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[24], v0[6], v0[21]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[27] = sub_19CFDF200();
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FCE0 + dword_1EE43FCE0);
  v12 = (_QWORD *)swift_task_alloc();
  v0[28] = v12;
  *v12 = v0;
  v12[1] = sub_19CE5F590;
  return v16(v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE5F590(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5F5FC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t ObjectType;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    ObjectType = swift_getObjectType();
    StartUpPerformanceEvent.record(checkpoint:)(&ObjectType);
  }
  v20 = *(void **)(v0 + 232);
  sub_19CFBE188(v20);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5F844()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 240);
  sub_19CEBC634(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5F9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE5FAB8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[24];
    v13 = v0[22];
    v12 = v0[21];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[5] = sub_19CD37070(0xD000000000000013, 0x800000019D06D920, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[22];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[26] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[24], v0[6], v0[21]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[27] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FD40 + dword_1EE43FD40);
  v10 = (_QWORD *)swift_task_alloc();
  v0[28] = v10;
  *v10 = v0;
  v10[1] = sub_19CE5FD0C;
  return v14(v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE5FD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE5FD78()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    v21 = **(_QWORD **)(v0 + 232);
    StartUpPerformanceEvent.record(checkpoint:)(&v21);
  }
  sub_19CFBE1A4(*(_QWORD *)(v0 + 232));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE5FFC4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 240);
  sub_19CEBC650(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE60160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 48) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  *(_QWORD *)(v8 + 168) = type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 184) = v11;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE6025C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[26];
    v13 = v0[24];
    v12 = v0[23];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[6]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[5] = sub_19CD37070(0x416B63615074654ALL, 0xEC00000074657373, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[24];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[28] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[26], v0[6], v0[23]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[29] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FC10 + dword_1EE43FC10);
  v10 = (_QWORD *)swift_task_alloc();
  v0[30] = v10;
  *v10 = v0;
  v10[1] = sub_19CE604B8;
  return v14(v0[22], v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_19CE604B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE6051C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 88))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 88))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 96))
  {
    v22 = *(_QWORD *)(v0 + 168);
    StartUpPerformanceEvent.record(checkpoint:)(&v22);
  }
  v20 = *(_QWORD *)(v0 + 176);
  sub_19CFBE3F8(v20);
  swift_release();
  sub_19CCEACE4(v20, type metadata accessor for JetPackAsset);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE60778()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 88))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 248);
  sub_19CEBC66C(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE60920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 160) = v14;
  *(_QWORD *)(v8 + 168) = v15;
  *(_OWORD *)(v8 + 144) = v13;
  *(_QWORD *)(v8 + 128) = a7;
  *(_QWORD *)(v8 + 136) = a8;
  *(_QWORD *)(v8 + 112) = a5;
  *(_QWORD *)(v8 + 120) = a6;
  *(_QWORD *)(v8 + 104) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 176) = v9;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 200) = v10;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 224) = v11;
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE609F8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[31];
    v13 = v0[29];
    v12 = v0[28];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[13]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[12] = sub_19CD37070(0xD000000000000011, 0x800000019D06D8C0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[29];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[33] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[31], v0[13], v0[28]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[34] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&asc_1EE43FCA0[*(int *)asc_1EE43FCA0];
  v10 = (_QWORD *)swift_task_alloc();
  v0[35] = v10;
  *v10 = v0;
  v10[1] = sub_19CE60C54;
  return v14((uint64_t)(v0 + 2), v0[14], v0[15], v0[16], v0[17]);
}

uint64_t sub_19CE60C54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE60CB8()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 208);
    v3 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 200);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 144))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 144))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 152))
  {
    v21 = &type metadata for DiskJetPackLoader;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CFBE7D0(v0 + 16);
  swift_release();
  sub_19CDC2DFC((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE60F04()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 112);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE67710;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 144))
  {
    v9 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 288);
  sub_19CEBC690(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE610A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 160) = v14;
  *(_QWORD *)(v8 + 168) = v15;
  *(_OWORD *)(v8 + 144) = v13;
  *(_QWORD *)(v8 + 128) = a7;
  *(_QWORD *)(v8 + 136) = a8;
  *(_QWORD *)(v8 + 112) = a5;
  *(_QWORD *)(v8 + 120) = a6;
  *(_QWORD *)(v8 + 104) = a4;
  v9 = sub_19CFDF278();
  *(_QWORD *)(v8 + 176) = v9;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  v10 = sub_19CFDF1E8();
  *(_QWORD *)(v8 + 200) = v10;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  v11 = sub_19CFDF1AC();
  *(_QWORD *)(v8 + 224) = v11;
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE61178()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint8_t *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  if (qword_1EE43B4E8 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1EE465C48);
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[31];
    v13 = v0[29];
    v12 = v0[28];
    v5 = *(void (**)(uint64_t, _QWORD))(v13 + 16);
    v5(v4, v0[13]);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[12] = sub_19CD37070(0xD000000000000015, 0x800000019D06D8A0, &v15);
    sub_19CFDFFC8();
    v8 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v8, "MakeAsyncDependency", "object=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A1ADBE9C](v7, -1, -1);
    MEMORY[0x1A1ADBE9C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v12);
  }
  else
  {
    v9 = v0[29];

    v5 = *(void (**)(uint64_t, _QWORD))(v9 + 16);
  }
  v0[33] = v5;
  ((void (*)(_QWORD, _QWORD, _QWORD))v5)(v0[31], v0[13], v0[28]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[34] = sub_19CFDF200();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE43FC58 + dword_1EE43FC58);
  v10 = (_QWORD *)swift_task_alloc();
  v0[35] = v10;
  *v10 = v0;
  v10[1] = sub_19CE613D4;
  return v14((uint64_t)(v0 + 2), v0[14], v0[15], v0[16], v0[17]);
}

uint64_t sub_19CE613D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE61438()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v21;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 208);
    v3 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 200);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
      v6 = "";
    }
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v10, v11, v12);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v15, "MakeAsyncDependency", v6, v14, 2u);
    MEMORY[0x1A1ADBE9C](v14, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (!*(_QWORD *)(v0 + 144))
      goto LABEL_9;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (*(_QWORD *)(v0 + 144))
  {
LABEL_8:
    v18 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E0CCE198], v19);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
LABEL_9:
  if (*(_QWORD *)(v0 + 152))
  {
    v21 = &type metadata for InMemoryJetPackLoader;
    StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v21);
  }
  sub_19CFBEA78(v0 + 16);
  swift_release();
  sub_19CDC2DC8((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE61684()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(os_unfair_lock_s **)(Strong + 16);
    v4 = swift_task_alloc();
    v5 = *(_OWORD *)(v0 + 112);
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v5;
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = sub_19CE674C4;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    os_unfair_lock_lock(v3 + 4);
    sub_19CEC7490(v7, *(uint64_t (**)(void))(v6 + 16));
    os_unfair_lock_unlock(v3 + 4);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  if (*(_QWORD *)(v0 + 144))
  {
    v9 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x1E0CCE190], v10);
    sub_19CFDF2A8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = *(void **)(v0 + 288);
  sub_19CEBC6B4(v11);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE61820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE61838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 208);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for JetEngineBootstrap.URLProtocolHandler, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 216) = sub_19CE562D8();
    return swift_task_switch();
  }
}

uint64_t sub_19CE61968()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE619E4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBD914();
  sub_19CCECFE4(v1, &qword_1EE43E4D0);
  return swift_continuation_await();
}

uint64_t sub_19CE619E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 200);
    v7 = *(_OWORD *)(v1 + 160);
    v5 = *(_QWORD *)(v1 + 176);
    v6 = *(_QWORD *)(v1 + 184);
    swift_release();
    *(_OWORD *)v4 = v7;
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = v6;
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE61A84()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE61AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE61AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 184);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for Bag, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 192) = sub_19CE56770();
    return swift_task_switch();
  }
}

uint64_t sub_19CE61C00()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE61C7C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD5A9A4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB06E0);
  return swift_continuation_await();
}

uint64_t sub_19CE61C7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 200) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD **)(v1 + 176);
    v5 = *(_QWORD *)(v1 + 160);
    swift_release();
    *v4 = v5;
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE61D0C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE61D40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE61D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = sub_19CCE5204(0, &qword_1ECEB24A8);
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 176);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 184) = sub_19CE56C0C();
    return swift_task_switch();
  }
}

uint64_t sub_19CE61EA0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE61F1C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBDB14();
  sub_19CCECFE4(v1, &qword_1EE440D60);
  return swift_continuation_await();
}

uint64_t sub_19CE61F1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 192) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 160);
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_19CE61FA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE61FC0()
{
  uint64_t v0;
  uint64_t started;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  started = type metadata accessor for StartUpPerformanceEvent();
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 176);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, started, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 184) = sub_19CE570B8();
    return swift_task_switch();
  }
}

uint64_t sub_19CE620F8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE61F1C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF124();
  sub_19CCECFE4(v1, &qword_1EE43E4B0);
  return swift_continuation_await();
}

uint64_t sub_19CE62174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE6218C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2B0);
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 216);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 224) = sub_19CE57428();
    return swift_task_switch();
  }
}

uint64_t sub_19CE622C8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE62344;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF148();
  sub_19CCECFE4(v1, &qword_1EE43E488);
  return swift_continuation_await();
}

uint64_t sub_19CE62344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_19CCD14C4((__int128 *)(v1 + 160), *(_QWORD *)(v1 + 208));
    swift_release();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE623D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = a1;
  *(_QWORD *)(v2 + 192) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE623F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 192);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for IntentDispatchTimeout, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 200) = sub_19CE57864();
    return swift_task_switch();
  }
}

uint64_t sub_19CE62520()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE6259C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF2F8();
  sub_19CCECFE4(v1, &qword_1EE43E490);
  return swift_continuation_await();
}

uint64_t sub_19CE6259C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 184);
    v5 = *(_QWORD *)(v1 + 160);
    v6 = *(unsigned __int8 *)(v1 + 168);
    swift_release();
    *(_QWORD *)v4 = v5;
    *(_BYTE *)(v4 + 8) = v6;
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE62634()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE62668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[23] = a1;
  v2[24] = v1;
  v2[25] = type metadata accessor for PageIntentInstrumentation();
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE626C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v3 = sub_19CDA6790(*(_QWORD *)(v0 + 168));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v4 = v3;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 216) = sub_19CE57D00();
    return swift_task_switch();
  }
}

uint64_t sub_19CE627F8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[26];
  v0[2] = v0;
  v0[3] = sub_19CE62870;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF31C();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43E4A0);
  return swift_continuation_await();
}

uint64_t sub_19CE62870()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_19CCFE8AC(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 184), (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE62914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE6292C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 216);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 224) = sub_19CE58204();
    return swift_task_switch();
  }
}

uint64_t sub_19CE62A68()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE62344;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBFF54();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D50);
  return swift_continuation_await();
}

uint64_t sub_19CE62AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 248) = a1;
  *(_QWORD *)(v2 + 256) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE62AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 256);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for JetPackAssetSession.Configuration, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 264) = sub_19CE58640();
    return swift_task_switch();
  }
}

uint64_t sub_19CE62C2C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_19CE62CA8;
  v0[20] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 20);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC0128();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D30);
  return swift_continuation_await();
}

uint64_t sub_19CE62CA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_OWORD **)(v1 + 248);
    v5 = *(_OWORD *)(v1 + 144);
    v7 = *(_OWORD *)(v1 + 96);
    v6 = *(_OWORD *)(v1 + 112);
    v4[3] = *(_OWORD *)(v1 + 128);
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
    *v4 = *(_OWORD *)(v1 + 80);
    swift_release();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE62D4C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE62D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE62D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE78);
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 216);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 224) = sub_19CE58B0C();
    return swift_task_switch();
  }
}

uint64_t sub_19CE62ED4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE62F50;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC02F0();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D40);
  return swift_continuation_await();
}

uint64_t sub_19CE62F50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_19CCD14C4((__int128 *)(v1 + 160), *(_QWORD *)(v1 + 208));
    swift_release();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE62FE4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE63018()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE63030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = sub_19CCE5204(0, (unint64_t *)&qword_1EE43A718);
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 176);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 184) = sub_19CE58F48();
    return swift_task_switch();
  }
}

uint64_t sub_19CE63178()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE61F1C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC04A0();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43E440);
  return swift_continuation_await();
}

uint64_t sub_19CE631F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE6320C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = type metadata accessor for JetPackAssetSession();
  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 176);
  sub_19CFE0A6C();
  v3 = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_19CFE0A6C();
    v4 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 184) = sub_19CE593F0();
    return swift_task_switch();
  }
}

uint64_t sub_19CE63344()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE633C0;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC04C4();
  sub_19CCECFE4(v1, qword_1EE443B00);
  return swift_continuation_await();
}

uint64_t sub_19CE633C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 192) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 160);
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_19CE6344C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE63480(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[23] = a1;
  v2[24] = v1;
  v2[25] = type metadata accessor for JetPackAsset(0);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE634DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v2, v1, *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v3 = sub_19CDA6790(*(_QWORD *)(v0 + 168));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v4 = v3;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 216) = sub_19CE59888();
    return swift_task_switch();
  }
}

uint64_t sub_19CE63610()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0[26];
  v0[2] = v0;
  v0[3] = sub_19CE63688;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC04E8();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D00);
  return swift_continuation_await();
}

uint64_t sub_19CE63688()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_19CCFE8AC(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 184), type metadata accessor for JetPackAsset);
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE6372C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE63768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE63780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 232);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for DiskJetPackLoader, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 240) = sub_19CE59D8C();
    return swift_task_switch();
  }
}

uint64_t sub_19CE638B0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE6392C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC0764();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D20);
  return swift_continuation_await();
}

uint64_t sub_19CE6392C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 248) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 224);
    v5 = *(_OWORD *)(v1 + 160);
    v6 = *(_OWORD *)(v1 + 176);
    v7 = *(_OWORD *)(v1 + 192);
    *(_QWORD *)(v4 + 48) = *(_QWORD *)(v1 + 208);
    *(_OWORD *)(v4 + 16) = v6;
    *(_OWORD *)(v4 + 32) = v7;
    *(_OWORD *)v4 = v5;
    swift_release();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE639D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE63A04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE63A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  if (qword_1EE43AEB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 232);
  sub_19CFE0A6C();
  LOBYTE(v1) = sub_19CCFBBB4(v1, (uint64_t)&type metadata for InMemoryJetPackLoader, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_19CFE0A6C();
    v2 = sub_19CDA6790(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease();
    sub_19CDB5370();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 240) = sub_19CE5A240();
    return swift_task_switch();
  }
}

uint64_t sub_19CE63B4C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE63BC8;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDC092C();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE440D10);
  return swift_continuation_await();
}

uint64_t sub_19CE63BC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 248) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 224);
    v5 = *(_OWORD *)(v1 + 160);
    v6 = *(_OWORD *)(v1 + 176);
    v7 = *(_OWORD *)(v1 + 192);
    *(_QWORD *)(v4 + 48) = *(_QWORD *)(v1 + 208);
    *(_OWORD *)(v4 + 16) = v6;
    *(_OWORD *)(v4 + 32) = v7;
    *(_OWORD *)v4 = v5;
    swift_release();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_19CE63C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63C84()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FE20 + dword_1EE43FE20;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE63D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63D4C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FDE0 + dword_1EE43FDE0;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE63DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63DE4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FD50 + dword_1EE43FD50;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE63E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63E7C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FD98 + dword_1EE43FD98;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE63EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63F14()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FBE8 + dword_1EE43FBE8;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE63F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE63FAC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FC68 + dword_1EE43FC68;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CCDF218;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE6402C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_19CE64044()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[4] = v1;
  v4 = (char *)&dword_1EE43FC20 + dword_1EE43FC20;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_19CD5F6B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(v0[2], v1);
}

uint64_t sub_19CE640C4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 112))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_19CE64140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  double v34;
  double v35;
  double *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __darwin_time_t v52;
  uint64_t v54;
  double v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  timespec v70;
  timespec v71;
  void (*v72)(void *);
  uint64_t v73;
  _BYTE v74[48];
  timespec v75;
  uint64_t v76;
  _UNKNOWN **v77;
  char v78[8];

  v58 = a8;
  v55 = *(double *)&a7;
  v69 = a6;
  v68 = a4;
  v65 = a3;
  v67 = a2;
  v64 = a1;
  v62 = a13;
  v57 = a12;
  v14 = type metadata accessor for MonotonicTimeReference();
  v59 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v59 + 64);
  MEMORY[0x1E0C80A78](v14, v16);
  v60 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v54 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2420);
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (uint64_t *)((char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for JSStack.DecoratedIntent();
  MEMORY[0x1E0C80A78](v25, v26);
  v66 = (uint64_t)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CCFECEC(a9, v66, v28);
  *v24 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2440);
  v29 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  v29[2] = v30;
  sub_19CCC290C((uint64_t)v24, (uint64_t)v29 + *(_QWORD *)(*v29 + 96), (uint64_t *)&unk_1ECEB2420);
  sub_19CFDEF78();
  static MonotonicTime.now.getter(&v71);
  v31 = *(int *)(v14 + 20);
  v63 = v20;
  *(timespec *)&v20[v31] = v71;
  JESignpostEmitTrace();
  if (a11)
  {
    if (qword_1EE43A618 != -1)
      swift_once();
    v71 = (timespec)xmmword_1EE465B28;
    LOBYTE(v72) = byte_1EE465B38;
    v73 = qword_1EE465B40;
    v74[0] = byte_1EE465B48;
    static MonotonicTime.now.getter(&v75);
    v70 = v75;
    PageRenderField<>.startTime(for:at:)(a10, a11, &v70.tv_sec);
  }
  v32 = v69;
  sub_19CD33484(v64, v67, v65, v68, a5, v69, v66);
  sub_19CCF8C5C((uint64_t)v57, (uint64_t)&v71, &qword_1EE43D330);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = a10;
  v33[3] = a11;
  sub_19CCC290C((uint64_t)&v71, (uint64_t)(v33 + 4), &qword_1EE43D330);
  v33[9] = a5;
  v33[10] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_19CD30AF4((uint64_t)sub_19CE67DC0, (uint64_t)v33);
  swift_release();
  swift_release();
  v61 = a10;
  v56 = a5;
  if ((v58 & 1) != 0)
  {
    v70.tv_sec = 0;
    LOBYTE(v70.tv_nsec) = 1;
  }
  else
  {
    v34 = v55;
    v35 = v55;
    v36 = (double *)swift_allocObject();
    *((_QWORD *)v36 + 2) = v29;
    *((_QWORD *)v36 + 3) = a5;
    *((_QWORD *)v36 + 4) = v69;
    v36[5] = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19CD3160C((uint64_t)sub_19CE67E00, (uint64_t)v36, v35);
    swift_release();
    LOBYTE(v71.tv_nsec) = 0;
    sub_19CCC290C((uint64_t)&v71, (uint64_t)&v70, &qword_1ECEB0AF8);
  }
  sub_19CCF8C5C((uint64_t)&v70, (uint64_t)&v71, &qword_1ECEB0AF8);
  v37 = v60;
  sub_19CCFECEC((uint64_t)v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  v38 = (*(unsigned __int8 *)(v59 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v39 = (v15 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 39) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v29;
  sub_19CCC290C((uint64_t)&v71, v42 + 24, &qword_1ECEB0AF8);
  sub_19CCFE8AC(v37, v42 + v38, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  v43 = (uint64_t *)(v42 + v39);
  *v43 = v61;
  v43[1] = a11;
  v44 = (uint64_t *)(v42 + v40);
  v45 = v64;
  v64 = a11;
  v46 = v67;
  *v44 = v45;
  v44[1] = v46;
  v47 = v68;
  v44[2] = v65;
  v44[3] = v47;
  v48 = (uint64_t *)(v42 + v41);
  v49 = v56;
  v50 = v69;
  *v48 = v56;
  v48[1] = v50;
  sub_19CCF8C5C((uint64_t)&v70, (uint64_t)v78, &qword_1ECEB0AF8);
  v51 = (_QWORD *)swift_allocObject();
  v51[2] = v29;
  sub_19CCC290C((uint64_t)v78, (uint64_t)(v51 + 3), &qword_1ECEB0AF8);
  v51[5] = v49;
  v51[6] = v50;
  v52 = *(_QWORD *)(v62 + 16);
  v76 = type metadata accessor for RunLoopWorkerThread();
  v77 = &protocol witness table for RunLoopWorkerThread;
  v75.tv_sec = v52;
  v71.tv_sec = (__darwin_time_t)sub_19CE67DD8;
  v71.tv_nsec = v42;
  v72 = sub_19CE67DE0;
  v73 = (uint64_t)v51;
  sub_19CCD5B84((uint64_t)&v75, (uint64_t)v74);
  v74[40] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CD49D50();
  sub_19CCECFE4((uint64_t)&v71, &qword_1ECEB1278);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v75);
  sub_19CD30CB0((uint64_t)v29, v49, v50);
  swift_release();
  sub_19CCECFE4((uint64_t)&v70, &qword_1ECEB0AF8);
  sub_19CCEACE4((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  sub_19CCEACE4(v66, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent);
  return v29;
}

_QWORD *sub_19CE647F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  double v29;
  double v30;
  double *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  __darwin_time_t v46;
  double v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  timespec v64;
  timespec v65;
  void (*v66)(void *);
  uint64_t v67;
  _BYTE v68[48];
  timespec v69;
  uint64_t v70;
  _UNKNOWN **v71;
  char v72[8];

  v52 = a8;
  v48 = *(double *)&a7;
  v58 = a5;
  v62 = a4;
  v60 = a3;
  v61 = a2;
  v59 = a1;
  v56 = a12;
  v14 = type metadata accessor for MonotonicTimeReference();
  v54 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v55 = (uint64_t)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v16;
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v48 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2420);
  MEMORY[0x1E0C80A78](v21, v21);
  v23 = (_QWORD *)((char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v23 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2440);
  v24 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  v24[2] = v25;
  sub_19CCC290C((uint64_t)v23, (uint64_t)v24 + *(_QWORD *)(*v24 + 96), (uint64_t *)&unk_1ECEB2420);
  swift_bridgeObjectRetain();
  sub_19CFDEF78();
  static MonotonicTime.now.getter(&v65);
  v26 = *(int *)(v14 + 20);
  v63 = v20;
  *(timespec *)&v20[v26] = v65;
  JESignpostEmitTrace();
  if (a11)
  {
    if (qword_1EE43A618 != -1)
      swift_once();
    v65 = (timespec)xmmword_1EE465B28;
    LOBYTE(v66) = byte_1EE465B38;
    v67 = qword_1EE465B40;
    v68[0] = byte_1EE465B48;
    static MonotonicTime.now.getter(&v69);
    v64 = v69;
    PageRenderField<>.startTime(for:at:)(a10, a11, &v64.tv_sec);
  }
  v27 = v58;
  sub_19CD31320(v59, v61, v60, v62, v58, a6, a9);
  sub_19CCF8C5C(v56, (uint64_t)&v65, &qword_1EE43D330);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a10;
  v28[3] = a11;
  sub_19CCC290C((uint64_t)&v65, (uint64_t)(v28 + 4), &qword_1EE43D330);
  v28[9] = v27;
  v28[10] = a6;
  swift_bridgeObjectRetain();
  v56 = a11;
  swift_bridgeObjectRetain();
  v51 = sub_19CD30AF4((uint64_t)sub_19CE67DC0, (uint64_t)v28);
  swift_release();
  swift_release();
  v57 = a9;
  v50 = a13;
  v49 = a10;
  if ((v52 & 1) != 0)
  {
    v64.tv_sec = 0;
    LOBYTE(v64.tv_nsec) = 1;
  }
  else
  {
    v29 = v48;
    v30 = v48;
    v31 = (double *)swift_allocObject();
    *((_QWORD *)v31 + 2) = v24;
    *((_QWORD *)v31 + 3) = v27;
    *((_QWORD *)v31 + 4) = a6;
    v31[5] = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19CD3160C((uint64_t)sub_19CE68E70, (uint64_t)v31, v30);
    swift_release();
    LOBYTE(v65.tv_nsec) = 0;
    sub_19CCC290C((uint64_t)&v65, (uint64_t)&v64, &qword_1ECEB0AF8);
  }
  v32 = a6;
  sub_19CCF8C5C((uint64_t)&v64, (uint64_t)&v65, &qword_1ECEB0AF8);
  v33 = v55;
  sub_19CCFECEC((uint64_t)v63, v55, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  v34 = (*(unsigned __int8 *)(v54 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v35 = (v53 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v24;
  sub_19CCC290C((uint64_t)&v65, v37 + 24, &qword_1ECEB0AF8);
  sub_19CCFE8AC(v33, v37 + v34, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  v38 = (uint64_t *)(v37 + v35);
  v39 = v56;
  *v38 = v49;
  v38[1] = v39;
  v40 = (_QWORD *)(v37 + v36);
  v41 = v61;
  *v40 = v59;
  v40[1] = v41;
  v42 = v62;
  v40[2] = v60;
  v40[3] = v42;
  v43 = (_QWORD *)(v37 + ((v36 + 39) & 0xFFFFFFFFFFFFFFF8));
  v44 = v58;
  *v43 = v58;
  v43[1] = v32;
  sub_19CCF8C5C((uint64_t)&v64, (uint64_t)v72, &qword_1ECEB0AF8);
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v24;
  sub_19CCC290C((uint64_t)v72, (uint64_t)(v45 + 3), &qword_1ECEB0AF8);
  v45[5] = v44;
  v45[6] = v32;
  v46 = *(_QWORD *)(v50 + 16);
  v70 = type metadata accessor for RunLoopWorkerThread();
  v71 = &protocol witness table for RunLoopWorkerThread;
  v69.tv_sec = v46;
  v65.tv_sec = (__darwin_time_t)sub_19CE67DD8;
  v65.tv_nsec = v37;
  v66 = sub_19CE6901C;
  v67 = (uint64_t)v45;
  sub_19CCD5B84((uint64_t)&v69, (uint64_t)v68);
  v68[40] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_19CD49D50();
  sub_19CCECFE4((uint64_t)&v65, &qword_1ECEB1278);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
  sub_19CD30CB0((uint64_t)v24, v44, v32);
  swift_release();
  sub_19CCECFE4((uint64_t)&v64, &qword_1ECEB0AF8);
  sub_19CCEACE4((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for MonotonicTimeReference);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_19CE64E54@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2420);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess();
  sub_19CCF8C5C(v8, (uint64_t)v7, (uint64_t *)&unk_1ECEB2420);
  LOBYTE(v8) = swift_getEnumCaseMultiPayload() != 0;
  result = sub_19CCECFE4((uint64_t)v7, (uint64_t *)&unk_1ECEB2420);
  *a2 = v8;
  return result;
}

char *sub_19CE64F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  char *result;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  Swift::String v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t (*v32)(uint64_t);
  __int128 v33;
  __int128 v34;
  _BYTE v35[32];
  __int128 v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v6 = dlopen("/AppleInternal/Library/Frameworks/JetTracingSupport.framework/JetTracingSupport", 4);
  if (v6)
  {
    v7 = v6;
    v8 = sub_19CFDF608();
    v32 = (uint64_t (*)(uint64_t))dlsym(v7, (const char *)(v8 + 32));
    swift_release();
    if (v32)
      return (char *)v32(a3);
    if (qword_1EE43D1D8 != -1)
      swift_once();
    v24 = (void *)qword_1EE43D2E0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v24;
    v42 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
    v25._countAndFlagsBits = 0x74636E7566206F4ELL;
    v25._object = (void *)0xEC000000206E6F69;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    v41 = MEMORY[0x1E0DEA968];
    v39 = a1;
    v40 = a2;
    sub_19CCF8C5C((uint64_t)&v39, (uint64_t)v35, &qword_1ECEB3370);
    v33 = 0u;
    v34 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v35, (uint64_t)&v33);
    v38 = 0;
    v36 = v33;
    v37 = v34;
    v26 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_19CD40918(0, v26[2] + 1, 1, v26);
    v28 = v26[2];
    v27 = v26[3];
    if (v28 >= v27 >> 1)
      v26 = sub_19CD40918((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
    v26[2] = v28 + 1;
    v29 = &v26[5 * v28];
    v30 = v36;
    v31 = v37;
    *((_BYTE *)v29 + 64) = v38;
    *((_OWORD *)v29 + 2) = v30;
    *((_OWORD *)v29 + 3) = v31;
    v42 = v26;
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    v23 = 0x800000019D072320;
    v22 = 0xD000000000000016;
    goto LABEL_19;
  }
  if (qword_1EE43D1D8 != -1)
    swift_once();
  v10 = (void *)qword_1EE43D2E0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
  v12 = v10;
  v42 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v13._countAndFlagsBits = 0xD00000000000002CLL;
  v13._object = (void *)0x800000019D0722F0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  result = dlerror();
  if (result)
  {
    v14 = sub_19CFDF6B0();
    v41 = MEMORY[0x1E0DEA968];
    v39 = v14;
    v40 = v15;
    sub_19CCF8C5C((uint64_t)&v39, (uint64_t)v35, &qword_1ECEB3370);
    v33 = 0u;
    v34 = 0u;
    sub_19CD40658((uint64_t)v35, (uint64_t)&v33);
    v38 = 0;
    v36 = v33;
    v37 = v34;
    v16 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v36;
    v21 = v37;
    *((_BYTE *)v19 + 64) = v38;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v42 = v16;
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    v22 = 0;
    v23 = 0xE000000000000000;
LABEL_19:
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
    *(_QWORD *)(v11 + 32) = v42;
    *(_QWORD *)&v36 = v12;
    LOBYTE(v33) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v33);

    return (char *)swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_19CE65324(void *a1, uint64_t a2, int token)
{
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  unsigned int v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  Swift::String v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  Swift::String v52;
  void *v53;
  uint64_t v54;
  id v55;
  Swift::String v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  __int128 v66;
  __int128 v67;
  Swift::String v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t state64;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  char v80;
  _BYTE v81[32];
  uint64_t v82;

  v82 = *MEMORY[0x1E0C80C00];
  state64 = 0;
  notify_get_state(token, &state64);
  if (qword_1EE43D1D8 != -1)
    swift_once();
  v6 = (void *)qword_1EE43D2E0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v8 = v6;
  v69 = sub_19CD40918(0, 62, 0, MEMORY[0x1E0DEE9D8]);
  v9._countAndFlagsBits = 0xD000000000000026;
  v9._object = (void *)0x800000019D0724A0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  *((_QWORD *)&v74 + 1) = MEMORY[0x1E0DEDBC8];
  LODWORD(v73) = token;
  sub_19CCF8C5C((uint64_t)&v73, (uint64_t)v81, &qword_1ECEB3370);
  v75 = 0u;
  v76 = 0u;
  sub_19CD40658((uint64_t)v81, (uint64_t)&v75);
  v80 = 0;
  v78 = v75;
  v79 = v76;
  v10 = v69;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v69[2] + 1, 1, v69);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[5 * v12];
  v14 = v78;
  v15 = v79;
  *((_BYTE *)v13 + 64) = v80;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  sub_19CCECFE4((uint64_t)&v73, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0xD000000000000016;
  v16._object = (void *)0x800000019D0724D0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *((_QWORD *)&v74 + 1) = MEMORY[0x1E0DEE190];
  *(_QWORD *)&v73 = state64;
  sub_19CCF8C5C((uint64_t)&v73, (uint64_t)v81, &qword_1ECEB3370);
  v75 = 0u;
  v76 = 0u;
  sub_19CD40658((uint64_t)v81, (uint64_t)&v75);
  v80 = 0;
  v78 = v75;
  v79 = v76;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
  v18 = v10[2];
  v17 = v10[3];
  if (v18 >= v17 >> 1)
    v10 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v10);
  v10[2] = v18 + 1;
  v19 = &v10[5 * v18];
  v20 = v78;
  v21 = v79;
  *((_BYTE *)v19 + 64) = v80;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  sub_19CCECFE4((uint64_t)&v73, &qword_1ECEB3370);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)&v78 = v8;
  LOBYTE(v75) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v75);

  swift_bridgeObjectRelease();
  if (state64 == 1)
  {
    v23 = objc_msgSend(a1, sel_globalObject);
    if (v23)
    {
      v24 = v23;
      v25 = (void *)sub_19CFDF554();
      v26 = objc_msgSend(v24, sel_valueForProperty_, v25);

      if (v26)
      {
        v27 = objc_msgSend(v26, sel_isUndefined);

        if (!v27)
        {
LABEL_28:
          v53 = (void *)qword_1EE43D2E0;
          v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = xmmword_19D0522A0;
          v55 = v53;
          v71 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
          v56._countAndFlagsBits = 0xD000000000000021;
          v56._object = (void *)0x800000019D072540;
          LogMessage.StringInterpolation.appendLiteral(_:)(v56);
          v57 = objc_msgSend(a1, sel_name);
          if (v57)
          {
            v58 = v57;
            v59 = sub_19CFDF578();
            v61 = v60;

            *((_QWORD *)&v74 + 1) = MEMORY[0x1E0DEA968];
            *(_QWORD *)&v73 = v59;
            *((_QWORD *)&v73 + 1) = v61;
          }
          else
          {
            v73 = 0u;
            v74 = 0u;
          }
          sub_19CCF8C5C((uint64_t)&v73, (uint64_t)v81, &qword_1ECEB3370);
          v75 = 0u;
          v76 = 0u;
          sub_19CD40658((uint64_t)v81, (uint64_t)&v75);
          v80 = 0;
          v78 = v75;
          v79 = v76;
          v62 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v62 = sub_19CD40918(0, v71[2] + 1, 1, v71);
          v64 = v62[2];
          v63 = v62[3];
          if (v64 >= v63 >> 1)
            v62 = sub_19CD40918((_QWORD *)(v63 > 1), v64 + 1, 1, v62);
          v62[2] = v64 + 1;
          v65 = &v62[5 * v64];
          v66 = v78;
          v67 = v79;
          *((_BYTE *)v65 + 64) = v80;
          *((_OWORD *)v65 + 2) = v66;
          *((_OWORD *)v65 + 3) = v67;
          sub_19CCECFE4((uint64_t)&v73, &qword_1ECEB3370);
          v68._countAndFlagsBits = 0;
          v68._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v68);
          *(_QWORD *)(v54 + 32) = v62;
          *(_QWORD *)&v78 = v55;
          LOBYTE(v75) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v54, (JetEngine::LogMessageLevel)&v75);

          swift_bridgeObjectRelease();
          sub_19CE64F28(0xD000000000000012, 0x800000019D072570, (uint64_t)a1);
          return;
        }
        sub_19CCF8C5C(a2, (uint64_t)&v73, &qword_1EE43D1E8);
        if (*((_QWORD *)&v74 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2390);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CF40);
          if ((swift_dynamicCast() & 1) != 0)
          {
            if (*((_QWORD *)&v76 + 1))
            {
              sub_19CCD14C4(&v75, (uint64_t)&v78);
              sub_19CCD5B84((uint64_t)&v78, (uint64_t)&v75);
              v28 = swift_allocObject();
              sub_19CCD14C4(&v75, v28 + 16);
              v29 = _sSo7JSValueC9JetEngineE12makeFunction2in5whereABSo9JSContextC_AbH_ABSayABGtKctFZ_0((uint64_t)a1, (uint64_t)sub_19CE68910, v28);
              swift_release();
              v30 = objc_msgSend(a1, sel_globalObject);
              if (v30)
              {
                v31 = v30;
                v32 = (void *)sub_19CFDF554();
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
                inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_19D055650;
                *(_QWORD *)(inited + 32) = sub_19CFDF578();
                *(_QWORD *)(inited + 40) = v34;
                *(_QWORD *)(inited + 72) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
                *(_QWORD *)(inited + 48) = v29;
                v35 = sub_19CFDF578();
                v36 = MEMORY[0x1E0DEAFA0];
                *(_QWORD *)(inited + 80) = v35;
                *(_QWORD *)(inited + 88) = v37;
                *(_QWORD *)(inited + 120) = v36;
                *(_BYTE *)(inited + 96) = 0;
                *(_QWORD *)(inited + 128) = sub_19CFDF578();
                *(_QWORD *)(inited + 136) = v38;
                *(_QWORD *)(inited + 168) = v36;
                *(_BYTE *)(inited + 144) = 0;
                *(_QWORD *)(inited + 176) = sub_19CFDF578();
                *(_QWORD *)(inited + 184) = v39;
                *(_QWORD *)(inited + 216) = v36;
                *(_BYTE *)(inited + 192) = 0;
                v40 = v29;
                sub_19CD30650(inited);
                v41 = (void *)sub_19CFDF3B0();
                swift_bridgeObjectRelease();
                objc_msgSend(v31, sel_defineProperty_descriptor_, v32, v41);

                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
                goto LABEL_28;
              }
LABEL_38:
              __break(1u);
              return;
            }
          }
          else
          {
            v77 = 0;
            v75 = 0u;
            v76 = 0u;
          }
        }
        else
        {
          sub_19CCECFE4((uint64_t)&v73, &qword_1EE43D1E8);
          v75 = 0u;
          v76 = 0u;
          v77 = 0;
        }
        sub_19CCECFE4((uint64_t)&v75, qword_1EE43F900);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
  v42 = (void *)qword_1EE43D2E0;
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_19D0522A0;
  v44 = v42;
  v70 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v45._countAndFlagsBits = 0xD00000000000002CLL;
  v45._object = (void *)0x800000019D0724F0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  *((_QWORD *)&v74 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v73 = 1701602409;
  *((_QWORD *)&v73 + 1) = 0xE400000000000000;
  sub_19CCF8C5C((uint64_t)&v73, (uint64_t)v81, &qword_1ECEB3370);
  v75 = 0u;
  v76 = 0u;
  sub_19CD40658((uint64_t)v81, (uint64_t)&v75);
  v80 = 0;
  v78 = v75;
  v79 = v76;
  v46 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v46 = sub_19CD40918(0, v70[2] + 1, 1, v70);
  v48 = v46[2];
  v47 = v46[3];
  if (v48 >= v47 >> 1)
    v46 = sub_19CD40918((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
  v46[2] = v48 + 1;
  v49 = &v46[5 * v48];
  v50 = v78;
  v51 = v79;
  *((_BYTE *)v49 + 64) = v80;
  *((_OWORD *)v49 + 2) = v50;
  *((_OWORD *)v49 + 3) = v51;
  sub_19CCECFE4((uint64_t)&v73, &qword_1ECEB3370);
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v52);
  *(_QWORD *)(v43 + 32) = v46;
  *(_QWORD *)&v78 = v44;
  LOBYTE(v75) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v43, (JetEngine::LogMessageLevel)&v75);

  swift_bridgeObjectRelease();
}

uint64_t sub_19CE65C9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE65CC4(void (*a1)(uint64_t), void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  void (*v30)(uint64_t);
  void (*v31)(uint64_t);
  __int128 v32;
  __int128 v33;
  _UNKNOWN **v34;
  uint64_t v35;

  v6 = *a3;
  v7 = a3[1];
  v9 = *((_QWORD *)a3 + 1);
  v8 = *((_QWORD *)a3 + 2);
  v35 = MEMORY[0x1E0DEE9D8];
  if (qword_1ECEB1330 != -1)
    swift_once();
  *(_QWORD *)&v26 = a1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  v10 = swift_bridgeObjectRetain();
  sub_19CD0883C(v10, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (v28)
  {
    sub_19CCD14C4(&v26, (uint64_t)&v32);
  }
  else
  {
    *(_QWORD *)&v32 = a1;
    swift_retain();
    swift_task_localValuePush();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_19CD06B2C(v11);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    if (v12)
    {
      *((_QWORD *)&v33 + 1) = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2F80);
      v34 = &protocol witness table for ACAccountStore;
      *(_QWORD *)&v32 = v12;
    }
    else
    {
      v34 = 0;
      v32 = 0u;
      v33 = 0u;
    }
    sub_19CCECFE4((uint64_t)&v26, &qword_1ECEB1B80);
  }
  LOBYTE(v26) = v6;
  BYTE1(v26) = v7;
  *((_QWORD *)&v26 + 1) = v9;
  v27 = v8;
  v31 = a1;
  swift_retain();
  swift_task_localValuePush();
  v13 = swift_bridgeObjectRetain();
  sub_19CD082CC(v13, &v31);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  v29 = a1;
  v30 = v31;
  swift_retain();
  swift_task_localValuePush();
  v14 = swift_bridgeObjectRetain();
  v15 = (void *)sub_19CD08010(v14);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  v29 = a1;
  swift_retain();
  swift_task_localValuePush();
  v16 = swift_bridgeObjectRetain();
  v17 = (void *)sub_19CD07D54(v16);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  v18 = _s9JetEngine7JSStackC25makeStandardPrerequisites5using3bag10urlSession7process15accountProviderSayAC12PrerequisiteOGAC0E19GlobalConfigurationV_AA3BagVSgSo13AMSURLSessionCSgSo14AMSProcessInfoCSgAA07AccountM0_pSgtFZ_0((uint64_t)&v26, (uint64_t *)&v30, v15, v17, (uint64_t)&v32);

  swift_unknownObjectRelease();
  sub_19CCE9F48(v9);
  sub_19CD06E70(v18);
  sub_19CD06E70(a4);
  v19 = v35;
  *(_QWORD *)&v26 = a1;
  swift_retain();
  swift_task_localValuePush();
  v20 = swift_bridgeObjectRetain();
  sub_19CD08560(v20, &v26);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  type metadata accessor for JSStack();
  v21 = swift_allocObject();
  JSStack.init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)(v19, a5, (uint64_t)&v26, a2);
  sub_19CCECFE4((uint64_t)&v32, &qword_1ECEB1B80);
  return v21;
}

uint64_t sub_19CE65FE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_19CE66004()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE66014()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE66024(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE50900(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CE66030()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE66040()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE66050()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE66060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for JSSource();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);

  return swift_deallocObject();
}

JSValue sub_19CE66124@<X0>(Swift::Bool a1@<W0>, JSValue *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  JSContext v6;
  JSValue result;
  uint64_t v8;
  JSValue_optional v9;

  v5 = type metadata accessor for JSSource();
  v9.value.super.isa = *(Class *)(v2
                                + ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)
                                  + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))
                                  + 7) & 0xFFFFFFFFFFFFF8));
  v9.is_nil = a1;
  result.super.isa = JSSource.evaluate(against:in:)(v9, v6).super.isa;
  if (!v8)
    a2->super.isa = result.super.isa;
  return result;
}

uint64_t sub_19CE66198()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_19CE661A8(uint64_t a1)
{
  uint64_t v1;

  sub_19CE50820(a1, *(_QWORD *)(v1 + 16), *(void (**)(void **__return_ptr))(v1 + 24));
}

uint64_t sub_19CE661B4()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE661C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CE661E8(void *a1)
{
  uint64_t v1;

  sub_19CE50E0C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19CE66200()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_19CE66210(uint64_t a1)
{
  uint64_t v1;

  sub_19CE50898(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_19CE6621C()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE6622C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

unint64_t sub_19CE66290()
{
  unint64_t result;

  result = qword_1EE43FBB8;
  if (!qword_1EE43FBB8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for JSStack.CallingConvention, &type metadata for JSStack.CallingConvention);
    atomic_store(result, (unint64_t *)&qword_1EE43FBB8);
  }
  return result;
}

uint64_t method lookup function for JSStack()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSStack.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 128) + *(_QWORD *)(v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CE66350;
  return v6(a1);
}

uint64_t sub_19CE66350(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of JSStack.__allocating_init(prerequisites:sentryConfiguration:virtualMachine:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of JSStack.__allocating_init(prerequisites:qualityOfService:sentryConfiguration:virtualMachine:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for JSStack.CallingConvention(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE6641C + 4 * byte_19D059495[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE66450 + 4 * byte_19D059490[v4]))();
}

uint64_t sub_19CE66450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE66458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE66460);
  return result;
}

uint64_t sub_19CE6646C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE66474);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE66478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE66480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSStack.CallingConvention()
{
  return &type metadata for JSStack.CallingConvention;
}

uint64_t assignWithCopy for JSStack.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = (_OWORD *)(a1 + 64);
  v8 = (_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19CD4E2C8(a1 + 64);
      v11 = *(_OWORD *)(a2 + 80);
      v10 = *(_OWORD *)(a2 + 96);
      *v7 = *v8;
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = v10;
      v12 = *(_OWORD *)(a2 + 160);
      v14 = *(_OWORD *)(a2 + 112);
      v13 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v12;
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 128) = v13;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *v8;
    v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v16;
    *v7 = v15;
    v17 = *(_OWORD *)(a2 + 112);
    v18 = *(_OWORD *)(a2 + 128);
    v19 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 128) = v18;
  }
  v20 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v20;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for JSStack.Configuration(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = (_OWORD *)(a1 + 64);
  v8 = (_OWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  if (!*(_QWORD *)(a2 + 88))
  {
    sub_19CD4E2C8(a1 + 64);
LABEL_5:
    v14 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v15 = *(_OWORD *)(a2 + 80);
    *v7 = *v8;
    *(_OWORD *)(a1 + 80) = v15;
    v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v16;
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  *v7 = *v8;
  *(_OWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v17 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSStack.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for JSStack.Prerequisite(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    while (2)
    {
      switch(v4)
      {
        case 0:
          __swift_destroy_boxed_opaque_existential_1Tm(a1);
          break;
        case 1:
        case 3:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          break;
        case 2:
          swift_bridgeObjectRelease();
          swift_release();
          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 24) = v6;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
          *(_BYTE *)(a1 + 40) = 0;
          return a1;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v7 = 1;
          goto LABEL_15;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v8 = *(_QWORD *)(a2 + 16);
          v9 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 16) = v8;
          *(_QWORD *)(a1 + 24) = v9;
          *(_BYTE *)(a1 + 40) = 2;
          swift_bridgeObjectRetain();
          swift_retain();
          return a1;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v7 = 3;
LABEL_15:
          *(_BYTE *)(a1 + 40) = v7;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t assignWithTake for JSStack.Prerequisite(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    while (2)
    {
      switch(v4)
      {
        case 0:
          __swift_destroy_boxed_opaque_existential_1Tm(a1);
          break;
        case 1:
        case 3:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          break;
        case 2:
          swift_bridgeObjectRelease();
          swift_release();
          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          v7 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          break;
        case 1:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 1;
          break;
        case 2:
          v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v8;
          v6 = 2;
          break;
        case 3:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 3;
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.Prerequisite(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSStack.Prerequisite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CE66BFC(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 4)
    return (*(_DWORD *)a1 + 4);
  return result;
}

uint64_t assignWithCopy for JSStack.StandardGlobalConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSStack.StandardGlobalConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSStack.StandardGlobalConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSStack.StandardGlobalConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t *sub_19CE66DDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_19CCEACE4((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    v9 = type metadata accessor for PageIntentInstrumentation();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_19CFDEF84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
      v12 = type metadata accessor for PageRenderEvent();
      v13 = *(int *)(v12 + 20);
      v14 = *(void **)&v8[v13];
      v15 = v14;
      *(_QWORD *)&v7[v13] = v14;
      v16 = *(int *)(v12 + 24);
      v17 = &v7[v16];
      v18 = &v8[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19CE66FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 24);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for PageIntentInstrumentation();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_19CFDEF84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    v10 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)&v6[*(int *)(v10 + 20)] = *(_OWORD *)&v7[*(int *)(v10 + 20)];
    v11 = type metadata accessor for PageRenderEvent();
    *(_QWORD *)&v6[*(int *)(v11 + 20)] = *(_QWORD *)&v7[*(int *)(v11 + 20)];
    *(_OWORD *)&v6[*(int *)(v11 + 24)] = *(_OWORD *)&v7[*(int *)(v11 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_19CE67100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_19CCEACE4(a1 + v7, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    v10 = type metadata accessor for PageIntentInstrumentation();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = sub_19CFDEF84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      v12 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
      v13 = type metadata accessor for PageRenderEvent();
      *(_QWORD *)&v8[*(int *)(v13 + 20)] = *(_QWORD *)&v9[*(int *)(v13 + 20)];
      *(_OWORD *)&v8[*(int *)(v13 + 24)] = *(_OWORD *)&v9[*(int *)(v13 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19CE67280()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE6728C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PageIntentInstrumentation();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_19CE67308()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE67314(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for PageIntentInstrumentation();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CE67388()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CE673B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE60160(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE674C4()
{
  return sub_19CE68DFC((void (*)(uint64_t, uint64_t, uint64_t))sub_19CDB7B28);
}

uint64_t sub_19CE674E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE610A0(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE675FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CCBE344;
  return sub_19CE60920(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67710()
{
  return sub_19CE68DFC((void (*)(uint64_t, uint64_t, uint64_t))sub_19CCFC05C);
}

uint64_t sub_19CE67730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5F248(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5AE78(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5F9E0(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5E33C(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5EAC4(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5DBB8(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE67DC0@<X0>(timespec *a1@<X8>)
{
  return sub_19CE68440(a1);
}

void sub_19CE67DE0(void *a1)
{
  uint64_t v1;

  sub_19CE517D0(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_19CE67DF0()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_19CE67E00()
{
  uint64_t v0;

  sub_19CE512D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_19CE67E10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_19CE64E54(v1, a1);
}

uint64_t objectdestroy_266Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE67E64(void *a1)
{
  uint64_t *v1;

  return sub_19CE522FC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_19CE67E70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CE67F24(v4, v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CE67F24(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19CE67F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CE68014(v4, v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CE68014(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19CE68050()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CE6807C(void *a1)
{
  sub_19CF4C970(a1);
}

void sub_19CE68084(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_19CE51044(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_19CE680A8()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_19CE680BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5C500(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE681D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5CC84(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE682EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5D3FC(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t objectdestroy_253Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE68440@<X0>(timespec *a1@<X8>)
{
  return sub_19CEAE1C4((void (*)(timespec *__return_ptr, uint64_t))sub_19CE68084, a1);
}

uint64_t objectdestroy_256Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MonotonicTimeReference() - 8) + 80);
  swift_release();
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    swift_unknownObjectWeakDestroy();
  v2 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + ((v1 + 33) & ~v1), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CE68568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for MonotonicTimeReference() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_19CE513BC(a1, *(_QWORD *)(v1 + 16), v1 + 24, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + v6 + 16), *(_QWORD *)(v1 + v6 + 24), *(_QWORD *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_259Tm()
{
  uint64_t v0;

  swift_release();
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE6863C()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_281Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE6869C()
{
  return objectdestroy_28Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_28Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_19CE686F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE68714(void *a1, void *a2)
{
  uint64_t v2;

  return sub_19CE53248(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_19CE68724()
{
  uint64_t v0;

  return sub_19CE4FFF8(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_19CE68730(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t objectdestroy_409Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19CE687F0()
{
  uint64_t v0;

  sub_19CE5065C(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_19CE687FC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CE68864()
{
  return swift_deallocObject();
}

uint64_t sub_19CE68874()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_19CE68898()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

void sub_19CE688DC(uint64_t a1)
{
  uint64_t *v1;

  sub_19CE53394(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[9]);
}

uint64_t sub_19CE688EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

void sub_19CE68910(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_19CE53488(a1, a2, a3, (_QWORD *)(v3 + 16));
}

uint64_t sub_19CE68928()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255)
    sub_19CD4EAF4(*(id *)(v0 + 16), v1 & 1);
  return swift_deallocObject();
}

uint64_t sub_19CE68960()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroy_490Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CE689C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5BD80(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE68AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5A6F4(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t objectdestroy_114Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_19CFDF1AC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE68CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(sub_19CFDF1AC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v4;
  v8 = (uint64_t *)(v1 + v5);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v6 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_19CD579FC;
  return sub_19CE5B5E8(a1, v16, v15, v7, v9, v10, v11, v12);
}

uint64_t sub_19CE68DFC(void (*a1)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  v8 = *(unsigned __int8 *)(v3 + 40);
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 32) = v5;
  *(_BYTE *)(v3 + 40) = 0;
  a1(v6, v7, v8);
  return swift_retain();
}

ValueMetadata *type metadata accessor for JSStack.Options()
{
  return &type metadata for JSStack.Options;
}

uint64_t sub_19CE68FF4()
{
  return sub_19CD34A84();
}

uint64_t initializeWithCopy for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SentryExceptionMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryExceptionMechanism(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryExceptionMechanism(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryExceptionMechanism()
{
  return &type metadata for SentryExceptionMechanism;
}

uint64_t sub_19CE69238(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE69D4C();
  sub_19CFE0A24();
  v9[15] = 0;
  sub_19CFE0538();
  if (!v1)
  {
    v9[14] = 1;
    sub_19CFE04FC();
    v9[13] = 2;
    sub_19CFE04FC();
    v9[12] = 3;
    sub_19CFE0508();
    v9[11] = 4;
    sub_19CFE0508();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_19CE693C4(char *a1)
{
  sub_19CE80DDC(*a1);
}

void sub_19CE693D0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE69414()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE694B0()
{
  __asm { BR              X10 }
}

uint64_t sub_19CE694E4()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE6956C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE695AC()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE69648@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE69F34();
  *a1 = result;
  return result;
}

uint64_t sub_19CE69674()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CE6969C + 4 * byte_19D0596AF[*v0]))();
}

void sub_19CE6969C(_QWORD *a1@<X8>)
{
  *a1 = 0x7470697263736564;
  a1[1] = 0xEB000000006E6F69;
}

void sub_19CE696C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E696C5F706C6568;
  a1[1] = 0xE90000000000006BLL;
}

void sub_19CE696E4(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C646E6168;
  a1[1] = 0xE700000000000000;
}

void sub_19CE69700(_QWORD *a1@<X8>)
{
  *a1 = 0x69746568746E7973;
  a1[1] = 0xE900000000000063;
}

uint64_t sub_19CE69720()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CE69748 + 4 * byte_19D0596B4[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_19CE69748()
{
  return 0x7470697263736564;
}

uint64_t sub_19CE69768()
{
  return 0x6E696C5F706C6568;
}

uint64_t sub_19CE69788()
{
  return 0x64656C646E6168;
}

uint64_t sub_19CE697A0()
{
  return 0x69746568746E7973;
}

uint64_t sub_19CE697BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE69F34();
  *a1 = result;
  return result;
}

uint64_t sub_19CE697E0()
{
  sub_19CE69D4C();
  return sub_19CFE0A48();
}

uint64_t sub_19CE69808()
{
  sub_19CE69D4C();
  return sub_19CFE0A54();
}

double sub_19CE69830@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  __int16 v8;

  sub_19CE69A30(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_WORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_19CE6987C(_QWORD *a1)
{
  return sub_19CE69238(a1);
}

uint64_t sub_19CE69890(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  __int16 v6;
  _OWORD v7[3];
  __int16 v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_WORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_WORD *)(a2 + 48);
  return sub_19CE698E8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_19CE698E8(uint64_t a1, uint64_t a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  int v15;
  _BOOL4 v16;
  int v17;
  int v18;
  _BOOL4 v19;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v5 = sub_19CFE06A0();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = sub_19CFE06A0(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    v11 = *(_QWORD *)(a1 + 40);
    v12 = *(_QWORD *)(a2 + 40);
    if (v11)
    {
      if (v12)
      {
        if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v11 != v12)
        {
          v13 = sub_19CFE06A0();
          result = 0;
          if ((v13 & 1) == 0)
            return result;
        }
LABEL_22:
        v14 = *(unsigned __int8 *)(a1 + 48);
        v15 = *(unsigned __int8 *)(a2 + 48);
        if (v14 == 2)
        {
          if (v15 != 2)
            return 0;
        }
        else
        {
          result = 0;
          v16 = (v14 & 1) == 0;
          if (v15 == 2 || ((v16 ^ v15) & 1) == 0)
            return result;
        }
        v17 = *(unsigned __int8 *)(a1 + 49);
        v18 = *(unsigned __int8 *)(a2 + 49);
        if (v17 == 2)
        {
          if (v18 != 2)
            return 0;
        }
        else
        {
          v19 = (v17 & 1) == 0;
          if (v18 == 2 || ((v19 ^ v18) & 1) == 0)
            return 0;
        }
        return 1;
      }
    }
    else if (!v12)
    {
      goto LABEL_22;
    }
    return 0;
  }
  return result;
}

uint64_t sub_19CE69A30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE69D4C();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v34 = 0;
  v10 = sub_19CFE0490();
  v12 = v11;
  v28 = v10;
  v33 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_19CFE0454();
  v29 = v14;
  v25 = v13;
  v32 = 2;
  swift_bridgeObjectRetain();
  v27 = 0;
  v24 = sub_19CFE0454();
  v31 = 3;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_19CFE0460();
  v26 = v16;
  v23 = v17;
  v30 = 4;
  v18 = sub_19CFE0460();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v19 = v26;
  swift_bridgeObjectRelease();
  v20 = v29;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v24;
  *(_QWORD *)(a2 + 40) = v19;
  *(_BYTE *)(a2 + 48) = v23;
  *(_BYTE *)(a2 + 49) = v18;
  return result;
}

unint64_t sub_19CE69D4C()
{
  unint64_t result;

  result = qword_1EE436E38;
  if (!qword_1EE436E38)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059860, &type metadata for SentryExceptionMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SentryExceptionMechanism.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CE69DDC + 4 * byte_19D0596BE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CE69E10 + 4 * byte_19D0596B9[v4]))();
}

uint64_t sub_19CE69E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE69E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE69E20);
  return result;
}

uint64_t sub_19CE69E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE69E34);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CE69E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE69E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SentryExceptionMechanism.CodingKeys()
{
  return &type metadata for SentryExceptionMechanism.CodingKeys;
}

unint64_t sub_19CE69E60()
{
  unint64_t result;

  result = qword_1EE43FF58;
  if (!qword_1EE43FF58)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059838, &type metadata for SentryExceptionMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43FF58);
  }
  return result;
}

unint64_t sub_19CE69EA8()
{
  unint64_t result;

  result = qword_1EE436E48;
  if (!qword_1EE436E48)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059770, &type metadata for SentryExceptionMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E48);
  }
  return result;
}

unint64_t sub_19CE69EF0()
{
  unint64_t result;

  result = qword_1EE436E40;
  if (!qword_1EE436E40)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059798, &type metadata for SentryExceptionMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E40);
  }
  return result;
}

uint64_t sub_19CE69F34()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_19CE69F7C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(void *);
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB0F00);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  v13 = sub_19CE6A48C;
  v14 = v2;
  v5 = MEMORY[0x1E0C809B0];
  v9 = MEMORY[0x1E0C809B0];
  v10 = 1107296256;
  v11 = sub_19CCFA024;
  v12 = &block_descriptor_21;
  v6 = _Block_copy(&v9);
  swift_retain_n();
  swift_release();
  objc_msgSend(a1, sel_addSuccessBlock_, v6);
  _Block_release(v6);
  v13 = sub_19CE6A494;
  v14 = v2;
  v9 = v5;
  v10 = 1107296256;
  v11 = sub_19CCDB9F8;
  v12 = &block_descriptor_24_0;
  v7 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(a1, sel_addErrorBlock_, v7);

  _Block_release(v7);
  return v2;
}

uint64_t sub_19CE6A0D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(void *);
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373A8);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  v13 = sub_19CE6A49C;
  v14 = v2;
  v5 = MEMORY[0x1E0C809B0];
  v9 = MEMORY[0x1E0C809B0];
  v10 = 1107296256;
  v11 = sub_19CCFA024;
  v12 = &block_descriptor_27;
  v6 = _Block_copy(&v9);
  swift_retain_n();
  swift_release();
  objc_msgSend(a1, sel_addSuccessBlock_, v6);
  _Block_release(v6);
  v13 = sub_19CE6A4A4;
  v14 = v2;
  v9 = v5;
  v10 = 1107296256;
  v11 = sub_19CCDB9F8;
  v12 = &block_descriptor_30_0;
  v7 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(a1, sel_addErrorBlock_, v7);

  _Block_release(v7);
  return v2;
}

uint64_t AppleServicesFetcher.fetch(contentsOf:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_19CE6A250()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 176), sel_dataTaskPromiseWithRequest_, *(_QWORD *)(v0 + 168));
  *(_QWORD *)(v0 + 184) = v1;
  *(_QWORD *)(v0 + 192) = sub_19CCE866C(v1);
  return swift_task_switch();
}

uint64_t sub_19CE6A2AC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE6A320;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CCE8808();
  sub_19CCE87C8(v1);
  return swift_continuation_await();
}

uint64_t sub_19CE6A320()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 200) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 208) = *(_QWORD *)(v1 + 160);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_19CE6A39C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_19CE6A3D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 184);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE6A40C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = a1;
  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_19CCBE594;
  v6 = *v2;
  v5[21] = v4;
  v5[22] = v6;
  return swift_task_switch();
}

void sub_19CE6A474(void *a1)
{
  sub_19CF4B83C(a1);
}

void sub_19CE6A47C(void *a1)
{
  sub_19CF4B8DC(a1);
}

void sub_19CE6A484(void *a1)
{
  sub_19CF4B89C(a1);
}

void sub_19CE6A48C(void *a1)
{
  sub_19CF4B7FC(a1);
}

void sub_19CE6A494(void *a1)
{
  sub_19CF4B85C(a1);
}

void sub_19CE6A49C(void *a1)
{
  sub_19CF4B81C(a1);
}

void sub_19CE6A4A4(void *a1)
{
  sub_19CF4B8BC(a1);
}

void sub_19CE6A4AC(void *a1)
{
  sub_19CF4B87C(a1);
}

void sub_19CE6A4CC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_valueWithNewObjectInContext_, a1);
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  swift_bridgeObjectRetain();
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v9 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19CFE0808(), v8);
  swift_unknownObjectRelease();

  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = v9;
  v11 = (void *)sub_19CFDF554();
  objc_msgSend(v7, sel_setValue_forProperty_, v10, v11);

  v12 = swift_bridgeObjectRetain();
  sub_19CDFDE6C(v12);
  swift_bridgeObjectRelease();
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB32D0);
  v14 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19CFE0808(), v13);
  swift_unknownObjectRelease();

  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = v14;
  v16 = (void *)sub_19CFDF554();
  objc_msgSend(v7, sel_setValue_forProperty_, v15, v16);

  v17 = v13;
  v18 = swift_bridgeObjectRetain();
  sub_19CE6B8EC(v18, v17);
  swift_bridgeObjectRelease();
  if (v2)
  {

    return;
  }

  v19 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CD80);
  v20 = objc_msgSend(v5, sel_valueWithObject_inContext_, sub_19CFE0808(), v19);
  swift_unknownObjectRelease();

  if (v20)
  {
    v21 = v20;
    v22 = (void *)sub_19CFDF554();
    objc_msgSend(v7, (SEL)0x1E3DFBEF4, v21, v22);

    a2[3] = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
    a2[4] = &protocol witness table for JSValue;
    *a2 = v7;
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_19CE6A7D8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_19CE6A4CC(a1, a2);
}

unint64_t sub_19CE6A7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t isStackAllocationSafe;
  uint64_t v18;
  char v19;
  unint64_t v20;
  size_t v21;
  unint64_t v22;
  void *v23;
  _QWORD v25[2];
  char v26[72];
  _QWORD v27[3];

  v2 = a2;
  v27[2] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v27[0] = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = *(_QWORD *)(v25[0] + 8 * v5++);
      sub_19CFE08C8();
      swift_bridgeObjectRetain();
      sub_19CDC54D8((uint64_t)v26, v6);
      v7 = sub_19CFE0910();
      v8 = -1 << *(_BYTE *)(v2 + 32);
      v9 = v7 & ~v8;
      if (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
      {
        v10 = swift_bridgeObjectRetain();
        sub_19CDD11AC(v10, v6);
        v12 = v11;
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
        {
LABEL_10:
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27[1] = v5;
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe, v18);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_19CE6AF4C((unint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v9, v27);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_19CE6AF4C((unint64_t)v23, v20, v2, v9, v27);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1A1ADBE9C](v23, -1, -1);
          }
          return v22;
        }
        v13 = ~v8;
        while (1)
        {
          v9 = (v9 + 1) & v13;
          if (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
            break;
          v14 = swift_bridgeObjectRetain();
          sub_19CDD11AC(v14, v6);
          v16 = v15;
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
            goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_19CE6AAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 64);
    v38 = a1 + 64;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37)
          goto LABEL_47;
        v13 = *(_QWORD *)(v38 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_47;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_47;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_47;
              v13 = *(_QWORD *)(v38 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_19CDB88CC();
                  return v2;
                }
                v13 = *(_QWORD *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v37)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v38 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_19CFE08C8();
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      v19 = sub_19CFE0910();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_19CFE06A0() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_19CFE06A0() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_19CE6B164((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_19CDB88CC();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_19CE6B164((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_19CDB88CC();
      MEMORY[0x1A1ADBE9C](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

unint64_t sub_19CE6AF4C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t i;
  unint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t *v29;
  uint64_t v30;
  char v31[72];
  _QWORD *v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v29 = (unint64_t *)result;
  v30 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_19CE6B458(v29, a2, v30, a3);
  }
  v10 = a3 + 56;
  v32 = a5;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_21;
    v11 = *(_QWORD *)(v8 + 8 * v7 + 32);
    a5[1] = v7 + 1;
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CDC54D8((uint64_t)v31, v11);
    v12 = sub_19CFE0910();
    v13 = -1 << *(_BYTE *)(a3 + 32);
    v14 = v12 & ~v13;
    v15 = v14 >> 6;
    v16 = 1 << v14;
    if (((1 << v14) & *(_QWORD *)(v10 + 8 * (v14 >> 6))) == 0)
      goto LABEL_4;
    v17 = swift_bridgeObjectRetain();
    sub_19CDD11AC(v17, v11);
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v20 = ~v13;
      for (i = v14 + 1; ; i = v22 + 1)
      {
        v22 = i & v20;
        if (((*(_QWORD *)(v10 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0)
          break;
        v23 = swift_bridgeObjectRetain();
        sub_19CDD11AC(v23, v11);
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v15 = v22 >> 6;
          v16 = 1 << v22;
          goto LABEL_16;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      a5 = v32;
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_16:
    v26 = v29[v15];
    v29[v15] = v26 & ~v16;
    a5 = v32;
    if ((v16 & v26) != 0)
    {
      v27 = v30 - 1;
      if (__OFSUB__(v30, 1))
        goto LABEL_22;
      --v30;
      if (!v27)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19CE6B164(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_19CE6B658(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_19CFE08C8();
        swift_bridgeObjectRetain();
        sub_19CFDF650();
        v22 = sub_19CFE0910();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_19CFE06A0() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_19CFE06A0() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

unint64_t sub_19CE6B458(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[72];

  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF78);
  result = sub_19CFE00F4();
  v6 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_30;
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          goto LABEL_27;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            goto LABEL_27;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              goto LABEL_27;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_31;
                if (v11 >= a2)
                  goto LABEL_27;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v14);
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CDC54D8((uint64_t)v20, v18);
    sub_19CFE0910();
    result = sub_19CFE0088();
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * result) = v18;
    ++*(_QWORD *)(v6 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_19CE6B658(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0710);
  result = sub_19CFE00F4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_19CE6B8EC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  _UNKNOWN **v12;
  id v13;
  void (*v14)(id, uint64_t, _UNKNOWN **);
  id v15;
  void *i;
  _QWORD v18[43];
  _BYTE __dst[352];
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_19CFE0238();
    v6 = (char *)(a1 + 32);
    v7 = (void *)objc_opt_self();
    v8 = v4 - 1;
    for (i = v7; ; v7 = i)
    {
      memcpy(__dst, v6, 0x158uLL);
      memcpy(v18, v6, sizeof(v18));
      sub_19CE6BB1C((uint64_t)__dst);
      v18[0] = sub_19CD12F58();
      v9 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
      v10 = objc_msgSend(v7, sel_valueWithObject_inContext_, sub_19CFE0808(), v9);
      swift_unknownObjectRelease();

      if (v10)
      {
        v11 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB2900);
        v18[3] = v11;
        v12 = &protocol witness table for JSValue;
        v13 = v10;
      }
      else
      {
        v13 = objc_msgSend(v7, sel_valueWithUndefinedInContext_, v9);
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
        v18[3] = v11;
        v12 = (_UNKNOWN **)sub_19CCE2634();
      }
      v18[4] = v12;
      v18[0] = v13;
      __swift_project_boxed_opaque_existential_1(v18, v11);
      v14 = (void (*)(id, uint64_t, _UNKNOWN **))v12[2];
      v15 = v10;
      v14(v9, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);

      sub_19CE6BB90((uint64_t)__dst);
      if (v2)
        return swift_release();
      sub_19CFE0214();
      sub_19CFE0244();
      sub_19CFE0250();
      sub_19CFE0220();
      if (!v8)
        break;
      v6 += 344;
      --v8;
    }
    return v20;
  }
  return result;
}

uint64_t sub_19CE6BB1C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19CE6BB90(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CE6BC04(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  id v6;
  BOOL v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _OWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  _OWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  _OWORD v91[2];
  __int128 v92;
  uint64_t v93;

  v2 = a1;
  v72 = a2;
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    if (a1 >> 62)
      goto LABEL_80;
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_4:
      v4 = 0;
      v80 = v2 & 0xC000000000000001;
      v76 = v2 & 0xFFFFFFFFFFFFFF8;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v74 = v2 + 32;
      v78 = v3;
      while (1)
      {
        if (v80)
        {
          v6 = (id)MEMORY[0x1A1ADA390](v4, v2);
          v7 = __OFADD__(v4, 1);
          v8 = v4 + 1;
          if (v7)
            goto LABEL_76;
        }
        else
        {
          if (v4 >= *(_QWORD *)(v76 + 16))
            goto LABEL_78;
          v6 = *(id *)(v74 + 8 * v4);
          v7 = __OFADD__(v4, 1);
          v8 = v4 + 1;
          if (v7)
            goto LABEL_76;
        }
        v83 = v6;
        v85 = v8;
        v9 = objc_msgSend(v6, sel_allItems, v72);
        sub_19CCE5204(0, &qword_1EE43FF70);
        v10 = sub_19CFDF86C();

        if (v10 >> 62)
          break;
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11)
          goto LABEL_14;
LABEL_5:

        swift_bridgeObjectRelease();
        v4 = v85;
        v2 = a1;
        if (v85 == v78)
          goto LABEL_69;
      }
      swift_bridgeObjectRetain();
      v11 = sub_19CFE0394();
      swift_bridgeObjectRelease();
      if (!v11)
        goto LABEL_5;
LABEL_14:
      v87 = v10;
      v89 = v10 & 0xC000000000000001;
      v12 = 4;
      while (1)
      {
        if (v89)
          v13 = (id)MEMORY[0x1A1ADA390](v12 - 4, v10);
        else
          v13 = *(id *)(v10 + 8 * v12);
        v14 = v13;
        v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
        {
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_bridgeObjectRetain();
          v3 = sub_19CFE0394();
          swift_bridgeObjectRelease();
          v2 = a1;
          if (!v3)
            goto LABEL_83;
          goto LABEL_4;
        }
        v16 = objc_msgSend(v13, sel_bundleIdentifier);
        if (v16)
          break;

LABEL_16:
        ++v12;
        if (v15 == v11)
          goto LABEL_5;
      }
      v17 = v16;
      v18 = v11;
      v19 = sub_19CFDF578();
      v21 = v20;

      v22 = objc_msgSend(v14, sel_itemDictionary);
      v23 = sub_19CFDF3C8();

      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
      *(_QWORD *)&v92 = v23;
      sub_19CD433C0(&v92, v91);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = sub_19CD3FD1C(v19, v21);
      v27 = v5[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_72;
      v30 = v25;
      if (v5[3] < v29)
      {
        sub_19CD13ED8(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_19CD3FD1C(v19, v21);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_85;
        v26 = v31;
        if ((v30 & 1) == 0)
          goto LABEL_31;
LABEL_29:
        v33 = (_OWORD *)(v5[7] + 32 * v26);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
        sub_19CD433C0(v91, v33);
LABEL_33:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v18;
        v10 = v87;
        goto LABEL_16;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v25 & 1) != 0)
          goto LABEL_29;
      }
      else
      {
        sub_19CD141BC();
        if ((v30 & 1) != 0)
          goto LABEL_29;
      }
LABEL_31:
      v5[(v26 >> 6) + 8] |= 1 << v26;
      v34 = (uint64_t *)(v5[6] + 16 * v26);
      *v34 = v19;
      v34[1] = v21;
      sub_19CD433C0(v91, (_OWORD *)(v5[7] + 32 * v26));
      v35 = v5[2];
      v7 = __OFADD__(v35, 1);
      v36 = v35 + 1;
      if (v7)
        goto LABEL_74;
      v5[2] = v36;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
LABEL_83:
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_84:
    swift_bridgeObjectRetain();
    v69 = swift_bridgeObjectRetain();
    v70 = sub_19CE088B4(v69);
    swift_bridgeObjectRelease();
    sub_19CE6C41C(v72);
    sub_19CE6AAE4((uint64_t)v5, v70);
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    v2 = a1;
    if (!v37)
      goto LABEL_83;
  }
  else
  {
    v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v37)
      goto LABEL_83;
  }
  v38 = 0;
  v79 = v2 & 0xC000000000000001;
  v73 = v2 + 32;
  v75 = v2 & 0xFFFFFFFFFFFFFF8;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v77 = v37;
  while (1)
  {
    if (v79)
    {
      v39 = (id)MEMORY[0x1A1ADA390](v38, v2);
    }
    else
    {
      if (v38 >= *(_QWORD *)(v75 + 16))
        goto LABEL_79;
      v39 = *(id *)(v73 + 8 * v38);
    }
    v84 = v39;
    v7 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v7)
      goto LABEL_77;
    v81 = v40;
    v41 = objc_msgSend(v39, sel_allItems);
    sub_19CCE5204(0, &qword_1EE43FF70);
    v42 = sub_19CFDF86C();

    if (!(v42 >> 62))
    {
      v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v43)
        break;
      goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    v43 = sub_19CFE0394();
    swift_bridgeObjectRelease();
    if (v43)
      break;
LABEL_39:

    swift_bridgeObjectRelease();
    v38 = v81;
    v2 = a1;
    if (v81 == v77)
    {
LABEL_69:
      swift_bridgeObjectRelease();
      goto LABEL_84;
    }
  }
  v88 = v42;
  v90 = v42 & 0xC000000000000001;
  v44 = 4;
  v86 = v43;
  while (1)
  {
    if (v90)
      v45 = (id)MEMORY[0x1A1ADA390](v44 - 4, v42);
    else
      v45 = *(id *)(v42 + 8 * v44);
    v46 = v45;
    v47 = v44 - 3;
    if (__OFADD__(v44 - 4, 1))
      goto LABEL_71;
    v48 = objc_msgSend(v45, sel_iTunesStoreIdentifier);
    if (v48)
      break;

LABEL_49:
    ++v44;
    if (v47 == v43)
      goto LABEL_39;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, sel_stringValue);
  v51 = sub_19CFDF578();
  v53 = v52;

  v54 = objc_msgSend(v46, sel_itemDictionary);
  v55 = sub_19CFDF3C8();

  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0578);
  *(_QWORD *)&v92 = v55;
  sub_19CD433C0(&v92, v91);
  v56 = swift_isUniquelyReferenced_nonNull_native();
  v58 = sub_19CD3FD1C(v51, v53);
  v59 = v5[2];
  v60 = (v57 & 1) == 0;
  v61 = v59 + v60;
  if (__OFADD__(v59, v60))
    goto LABEL_73;
  v62 = v57;
  if (v5[3] >= v61)
  {
    if ((v56 & 1) != 0)
    {
      if ((v57 & 1) != 0)
        goto LABEL_62;
    }
    else
    {
      sub_19CD141BC();
      if ((v62 & 1) != 0)
        goto LABEL_62;
    }
LABEL_64:
    v5[(v58 >> 6) + 8] |= 1 << v58;
    v66 = (uint64_t *)(v5[6] + 16 * v58);
    *v66 = v51;
    v66[1] = v53;
    sub_19CD433C0(v91, (_OWORD *)(v5[7] + 32 * v58));
    v67 = v5[2];
    v7 = __OFADD__(v67, 1);
    v68 = v67 + 1;
    if (v7)
      goto LABEL_75;
    v5[2] = v68;
    swift_bridgeObjectRetain();
    goto LABEL_66;
  }
  sub_19CD13ED8(v61, v56);
  v63 = sub_19CD3FD1C(v51, v53);
  if ((v62 & 1) == (v64 & 1))
  {
    v58 = v63;
    if ((v62 & 1) == 0)
      goto LABEL_64;
LABEL_62:
    v65 = (_OWORD *)(v5[7] + 32 * v58);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
    sub_19CD433C0(v91, v65);
LABEL_66:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = v86;
    v42 = v88;
    goto LABEL_49;
  }
LABEL_85:
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE6C41C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for LookupResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9JetEngine14LookupResponseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LookupResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LookupResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LookupResponse()
{
  return &type metadata for LookupResponse;
}

_QWORD *static ObjectGraphBuilder.buildBlock()()
{
  _QWORD *result;
  uint64_t v1;

  sub_19CD249F0();
  v1 = sub_19CFDF3F8();
  sub_19CD23D8C(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for BaseObjectGraph();
  result = (_QWORD *)swift_allocObject();
  result[3] = 0;
  result[4] = 0xE000000000000000;
  result[2] = v1;
  return result;
}

_QWORD *static ObjectGraphBuilder.buildPartialBlock(first:)(_QWORD *a1)
{
  uint64_t inited;
  _QWORD *result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2F20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  sub_19CD41714(a1, (_QWORD *)(inited + 32));
  sub_19CD249F0();
  v4 = sub_19CFDF3F8();
  sub_19CD23D8C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for BaseObjectGraph();
  result = (_QWORD *)swift_allocObject();
  result[3] = 0;
  result[4] = 0xE000000000000000;
  result[2] = v4;
  return result;
}

uint64_t static ObjectGraphBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t *a2)
{
  return sub_19CD0CDB8(a2);
}

uint64_t static ObjectGraphBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t a2)
{
  return sub_19CD05BE0(a2);
}

_QWORD *static ObjectGraphBuilder.buildOptional(_:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  if (a1)
  {
    v1 = a1;
  }
  else
  {
    sub_19CD249F0();
    v3 = sub_19CFDF3F8();
    sub_19CD23D8C(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for BaseObjectGraph();
    v1 = (_QWORD *)swift_allocObject();
    v1[3] = 0;
    v1[4] = 0xE000000000000000;
    v1[2] = v3;
  }
  swift_retain();
  return v1;
}

ValueMetadata *type metadata accessor for ObjectGraphBuilder()
{
  return &type metadata for ObjectGraphBuilder;
}

__n128 ImpressionsTracking.AppearanceJournal.__allocating_init(elementID:metricsFields:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_QWORD *)(v4 + 136) = 0;
  *(_BYTE *)(v4 + 144) = 1;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 48) = result;
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 80) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t ImpressionsTracking.AppearanceJournal.isAppeared.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
    v3 = *(_BYTE *)(v1 + 32 * v2) ^ 1;
  else
    v3 = 1;
  return v3 & 1;
}

BOOL static ImpressionsTracking.AppearanceJournal.Time.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.EventType.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.EventType.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

uint64_t ImpressionsTracking.AppearanceJournal.Time.init(eventType:on:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  uint64_t v16;
  char v17;

  v6 = sub_19CFDEF84();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v11, a2, v6, v9);
  v17 = (char)a1;
  sub_19CFDEF48();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v11, v6);
  LOBYTE(v11) = v17;
  result = ((uint64_t (*)(uint64_t, uint64_t))v14)(a2, v6);
  *(_BYTE *)a3 = (_BYTE)v11;
  *(_QWORD *)(a3 + 8) = v13;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0xE000000000000000;
  return result;
}

void ImpressionsTracking.AppearanceJournal.Time.eventType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double ImpressionsTracking.AppearanceJournal.Time.timeStamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t ImpressionsTracking.AppearanceJournal.init(elementID:metricsFields:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_QWORD *)(v2 + 136) = 0;
  *(_BYTE *)(v2 + 144) = 1;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 64) = v5;
  *(_QWORD *)(v2 + 72) = a2;
  *(_QWORD *)(v2 + 80) = MEMORY[0x1E0DEE9D8];
  return v2;
}

uint64_t ImpressionsTracking.AppearanceJournal.elementID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.metricsFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.times.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.AppearanceJournal.trackAppearance(on:)(uint64_t a1)
{
  return sub_19CE6CB78(a1, sub_19CD2AFC4);
}

uint64_t ImpressionsTracking.AppearanceJournal.trackDisappearance(on:)(uint64_t a1)
{
  return sub_19CE6CB78(a1, sub_19CCF3258);
}

uint64_t sub_19CE6CB78(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD *))
{
  _QWORD v3[3];
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  v3[2] = 0;
  v4 = 1;
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  return a2(a1, v3);
}

uint64_t ImpressionsTracking.AppearanceJournal.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImpressionsTracking.AppearanceJournal.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_19CE6CCA0()
{
  unint64_t result;

  result = qword_1EE43FF80;
  if (!qword_1EE43FF80)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ImpressionsTracking.AppearanceJournal.Time.EventType, &type metadata for ImpressionsTracking.AppearanceJournal.Time.EventType);
    atomic_store(result, (unint64_t *)&qword_1EE43FF80);
  }
  return result;
}

uint64_t method lookup function for ImpressionsTracking.AppearanceJournal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImpressionsTracking.AppearanceJournal.__allocating_init(elementID:metricsFields:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t _s17AppearanceJournalC4TimeVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17AppearanceJournalC4TimeVwcp(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17AppearanceJournalC4TimeV9EventTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE6CE18 + 4 * byte_19D059925[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE6CE4C + 4 * asc_19D059920[v4]))();
}

uint64_t sub_19CE6CE4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6CE54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE6CE5CLL);
  return result;
}

uint64_t sub_19CE6CE68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE6CE70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE6CE74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6CE7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.AppearanceJournal.Time.EventType()
{
  return &type metadata for ImpressionsTracking.AppearanceJournal.Time.EventType;
}

uint64_t sub_19CE6CE98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

__n128 ClosureAction.init(actionMetrics:body:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t ClosureAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ClosureAction.actionMetrics.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  return result;
}

uint64_t (*ClosureAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CE6CF50(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = sub_19CD34A84;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t ClosureAction.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t ClosureAction.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClosureAction.body.modify())()
{
  return nullsub_1;
}

uint64_t sub_19CE6D024@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19CE6D04C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_19CD34AA4;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

uint64_t destroy for ClosureAction()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ClosureAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClosureAction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ClosureAction(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ClosureAction()
{
  return &type metadata for ClosureAction;
}

uint64_t sub_19CE6D1FC()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for JetPackCompoundKeyProvider()
{
  return &type metadata for JetPackCompoundKeyProvider;
}

uint64_t dispatch thunk of NetFetcher.fetch(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return v11(a1, a2, a3, a4);
}

unint64_t NetworkReachabilityError.errorDescription.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000003ELL;
  if (*v0 != 1)
    v1 = 0xD00000000000003BLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000035;
}

BOOL static NetworkReachabilityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkReachabilityError.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t NetworkReachabilityError.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE6D3A0()
{
  unint64_t result;

  result = qword_1EE43FF90;
  if (!qword_1EE43FF90)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for NetworkReachabilityError, &type metadata for NetworkReachabilityError);
    atomic_store(result, (unint64_t *)&qword_1EE43FF90);
  }
  return result;
}

unint64_t sub_19CE6D3E8()
{
  unint64_t result;

  result = qword_1EE43FF98;
  if (!qword_1EE43FF98)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for NetworkReachabilityError, &type metadata for NetworkReachabilityError);
    atomic_store(result, (unint64_t *)&qword_1EE43FF98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkReachabilityError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CE6D47C + 4 * byte_19D059AD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CE6D4B0 + 4 * asc_19D059AD0[v4]))();
}

uint64_t sub_19CE6D4B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6D4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE6D4C0);
  return result;
}

uint64_t sub_19CE6D4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE6D4D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CE6D4D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6D4E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkReachabilityError()
{
  return &type metadata for NetworkReachabilityError;
}

uint64_t static JESignpostComponent.jet.getter()
{
  return 172;
}

double static IntervalSignpost.jsStackCall.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 172;
  *(_QWORD *)a1 = 172;
  *(_DWORD *)(a1 + 8) = 1;
  return result;
}

double static IntervalSignpost.jsStackDeserialization.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x2000000ACLL;
  *(_QWORD *)a1 = 0x2000000ACLL;
  *(_DWORD *)(a1 + 8) = 3;
  return result;
}

double static ImpulseSignpost.metricsEventPosted.getter@<D0>(_QWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x64000000ACLL;
  *a1 = 0x64000000ACLL;
  return result;
}

void DeepLinkRoute.init(scheme:host:path:query:handler:)(uint64_t a1@<X6>, uint64_t a2@<X7>, _QWORD *a3@<X8>, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v30;

  v11 = sub_19CFE013C();
  v13 = sub_19CF16880(v11, v12);
  if (v9)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v13;
    v16 = v14;
    swift_bridgeObjectRelease();
    v17 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v18 = sub_19CDE3E3C(v15, v16, 0);
    v19 = sub_19CFE013C();
    v21 = sub_19CF16880(v19, v20);
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v25 = sub_19CDE3E3C(v21, v23, 0);
    PathExpression.init(pattern:)(a1, a2, a4, &v30);
    v26 = v30;
    QueryExpression.init(pattern:)(a5, a6, a7, &v30);
    v27 = v30;
    *a3 = v18;
    a3[1] = v25;
    a3[2] = v26;
    a3[3] = v27;
    a3[4] = a8;
    a3[5] = a9;
  }
}

uint64_t destroy for DeepLinkRoute(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DeepLinkRoute(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkRoute(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkRoute(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeepLinkRoute()
{
  return &type metadata for DeepLinkRoute;
}

JetEngine::DeResolutionNumberRule __swiftcall DeResolutionNumberRule.init(fieldName:magnitude:significantDigits:)(Swift::String fieldName, Swift::Double magnitude, Swift::Double significantDigits)
{
  uint64_t v3;
  JetEngine::DeResolutionNumberRule result;

  *(Swift::String *)v3 = fieldName;
  *(Swift::Double *)(v3 + 16) = magnitude;
  *(Swift::Double *)(v3 + 24) = significantDigits;
  result.fieldName = fieldName;
  result.significantDigits = significantDigits;
  result.magnitude = magnitude;
  return result;
}

Swift::Double __swiftcall DeResolutionNumberRule.apply(to:)(Swift::Double to)
{
  uint64_t v1;
  double v3;
  Swift::Double result;
  double v5;

  v3 = *(double *)(v1 + 16);
  result = NAN;
  if (v3 > 0.0 && *(double *)(v1 + 24) >= 0.0)
  {
    v5 = __exp10(*(double *)(v1 + 24));
    return v5 * trunc(to / v3 / v5);
  }
  return result;
}

BOOL _s9JetEngine22DeResolutionNumberRuleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  char v7;
  _BOOL8 result;

  v3 = *(double *)(a1 + 16);
  v2 = *(double *)(a1 + 24);
  v5 = *(double *)(a2 + 16);
  v4 = *(double *)(a2 + 24);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v3 != v5)
      return 0;
    return v2 == v4;
  }
  v7 = sub_19CFE06A0();
  result = 0;
  if ((v7 & 1) != 0 && v3 == v5)
    return v2 == v4;
  return result;
}

uint64_t initializeWithCopy for DeResolutionNumberRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeResolutionNumberRule(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for DeResolutionNumberRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for DeResolutionNumberRule()
{
  return &type metadata for DeResolutionNumberRule;
}

void sub_19CE6DA98()
{
  sub_19CE6E140();
}

void sub_19CE6DAB8()
{
  sub_19CE6E140();
}

void sub_19CE6DAD8()
{
  sub_19CE6E140();
}

void sub_19CE6DAF8()
{
  sub_19CE6E140();
}

void sub_19CE6DB18()
{
  sub_19CE6E140();
}

void sub_19CE6DB38()
{
  sub_19CE6E140();
}

void sub_19CE6DB58()
{
  sub_19CE6E140();
}

void sub_19CE6DB78()
{
  sub_19CE6E140();
}

uint64_t sub_19CE6DB98()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))();
}

uint64_t sub_19CE6DBC0(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 168) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 184), a1);
  return v2;
}

uint64_t sub_19CE6DC14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 176) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 168)) & 1;
}

uint64_t sub_19CE6DC48()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 176) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 168));
}

uint64_t sub_19CE6DC78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 176);
  v7 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD))(v5 + 32))(&v7, a2, a3, *(_QWORD *)(v4 + 168));
}

uint64_t sub_19CE6DCBC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 176);
  v6 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, _QWORD))(v4 + 40))(&v6, a2, *(_QWORD *)(v3 + 168));
}

uint64_t sub_19CE6DD00(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 176);
  v6 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, _QWORD))(v4 + 48))(&v6, a2, *(_QWORD *)(v3 + 168));
}

uint64_t sub_19CE6DD44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 176) + 56))(*(_QWORD *)(*(_QWORD *)v0 + 168));
}

uint64_t sub_19CE6DD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v4 + 176)
                                                                               + 64))(a1, a2, a3, a4, *(_QWORD *)(*(_QWORD *)v4 + 168));
}

uint64_t sub_19CE6DDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(_QWORD *)(v6 + 184), v3, v4);
  return sub_19CFDF5E4();
}

uint64_t sub_19CE6DE20()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 168) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
}

uint64_t sub_19CE6DE3C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 168) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
  return swift_deallocClassInstance();
}

uint64_t AnyStateStore.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t result;

  type metadata accessor for ConcreteStateStoreBox(0, a2, a3, a3);
  v6 = swift_allocObject();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 168) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 184), a1);
  *a4 = v6;
  return result;
}

uint64_t type metadata accessor for ConcreteStateStoreBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConcreteStateStoreBox);
}

uint64_t AnyStateStore.isConcurrent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))() & 1;
}

uint64_t AnyStateStore.onChange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

uint64_t AnyStateStore.currentState<A>(at:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v5 = *v4;
  v7 = *a1;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v5 + 112))(&v7, a3, a4);
}

uint64_t AnyStateStore.updateState(at:to:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)v2 + 120))(&v4);
}

uint64_t AnyStateStore.removeState(at:recursively:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)v2 + 128))(&v4);
}

Swift::Void __swiftcall AnyStateStore.removeAllState()()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t AnyStateStore.performTransaction<A>(postingChanges:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)v5 + 144))(a1, a2, a3, a5);
}

uint64_t AnyStateStore.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))();
}

uint64_t sub_19CE6E084(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return AnyStateStore.currentState<A>(at:)(a1, a2, a2, a3);
}

uint64_t sub_19CE6E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return AnyStateStore.performTransaction<A>(postingChanges:_:)(a1, a2, a3, a4, a4);
}

uint64_t type metadata accessor for AnyStateStoreBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyStateStoreBox);
}

uint64_t sub_19CE6E0C4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AnyStateStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyStateStore);
}

void sub_19CE6E140()
{
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFE013C();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFE0340();
  __break(1u);
}

uint64_t OpenCodingKey.stringValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return sub_19CFE0598();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t OpenCodingKey.intValue.getter(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];

  if ((a3 & 1) != 0)
  {
    v4 = HIBYTE(a2) & 0xF;
    v5 = result & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0)
      v6 = v4;
    else
      v6 = result & 0xFFFFFFFFFFFFLL;
    if (!v6)
      return 0;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v22 = result;
      sub_19CE35D40(result, a2, 1);
      v8 = (uint64_t)sub_19CE6EAD4(v22, a2, 10);
      v10 = v23;
      sub_19CDD5F1C(v22, a2, 1);
LABEL_37:
      if ((v10 & 1) != 0)
        return 0;
      else
        return v8;
    }
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)sub_19CFE01FC();
      v8 = (uint64_t)sub_19CDE6D78(v7, v5, 10);
      v10 = v9 & 1;
      goto LABEL_37;
    }
    v24[0] = result;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v4)
      {
        v15 = v4 - 1;
        if (v4 != 1)
        {
          v8 = 0;
          v16 = (unsigned __int8 *)v24 + 1;
          while (1)
          {
            v17 = *v16 - 48;
            if (v17 > 9)
              break;
            v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
              break;
            v8 = v18 + v17;
            if (__OFADD__(v18, v17))
              break;
            v10 = 0;
            ++v16;
            if (!--v15)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v4)
        {
          v8 = 0;
          v19 = (unsigned __int8 *)v24;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              break;
            v21 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
              break;
            v8 = v21 + v20;
            if (__OFADD__(v21, v20))
              break;
            v10 = 0;
            ++v19;
            if (!--v4)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
      if (v4)
      {
        v11 = v4 - 1;
        if (v4 != 1)
        {
          v8 = 0;
          v12 = (unsigned __int8 *)v24 + 1;
          while (1)
          {
            v13 = *v12 - 48;
            if (v13 > 9)
              break;
            v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
              break;
            v8 = v14 - v13;
            if (__OFSUB__(v14, v13))
              break;
            v10 = 0;
            ++v12;
            if (!--v11)
              goto LABEL_37;
          }
        }
LABEL_36:
        v8 = 0;
        v10 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t OpenCodingKey.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_19CE6EBB8();
    return sub_19CFE0040();
  }
  return a1;
}

uint64_t sub_19CE6E4DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 16) != 1)
    return sub_19CFE0598();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19CE6E548@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_19CE6E558()
{
  uint64_t v0;

  return OpenCodingKey.intValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_19CE6E578@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_19CE6E584()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_19CE6EBB8();
    return sub_19CFE0040();
  }
  return v1;
}

uint64_t sub_19CE6E5F0()
{
  sub_19CDD5ED8();
  return sub_19CFE0A54();
}

uint64_t sub_19CE6E618()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_19CFDF764();
  v4 = sub_19CE6E694(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_19CE6E694(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_19CE6E7D8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_19CD37DF8(v9, 0);
      v12 = sub_19CE6E8C4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1A1AD9868](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A1AD9868);
LABEL_9:
      sub_19CFE01FC();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A1AD9868]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_19CE6E7D8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_19CE07CC4(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_19CE07CC4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_19CFDF6F8();
  }
  __break(1u);
  return result;
}

unint64_t sub_19CE6E8C4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_19CE07CC4(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_19CFDF704();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_19CFE01FC();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_19CE07CC4(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_19CFDF6E0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_19CE6EAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_19CFDF758();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_19CE6E618();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_19CFE01FC();
  }
LABEL_7:
  v11 = sub_19CE6ED90(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_19CE6EBB8()
{
  unint64_t result;

  result = qword_1ECEB16E8;
  if (!qword_1ECEB16E8)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ECEB16E8);
  }
  return result;
}

unint64_t sub_19CE6EC00()
{
  unint64_t result;

  result = qword_1EE437048;
  if (!qword_1EE437048)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for OpenCodingKey, &type metadata for OpenCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE437048);
  }
  return result;
}

unint64_t sub_19CE6EC48()
{
  unint64_t result;

  result = qword_1EE4371E8;
  if (!qword_1EE4371E8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for OpenCodingKey, &type metadata for OpenCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE4371E8);
  }
  return result;
}

uint64_t destroy for OpenCodingKey(uint64_t a1)
{
  return sub_19CDD5F1C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9JetEngine13OpenCodingKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CE35D40(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for OpenCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19CE35D40(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_19CDD5F1C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for OpenCodingKey(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_19CDD5F1C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for OpenCodingKey()
{
  return &type metadata for OpenCodingKey;
}

unsigned __int8 *sub_19CE6ED90(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_19CE6F00C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x647574696E67616DLL;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x6D614E646C656966;
}

uint64_t sub_19CE6F06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CE6FAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CE6F090()
{
  sub_19CE6F7BC();
  return sub_19CFE0A48();
}

uint64_t sub_19CE6F0B8()
{
  sub_19CE6F7BC();
  return sub_19CFE0A54();
}

uint64_t sub_19CE6F0E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  double v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE6F7BC();
  sub_19CFE09E8();
  if (!v2)
  {
    LOBYTE(v21) = 0;
    v10 = sub_19CFE0490();
    v12 = v11;
    v18 = v10;
    v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFB0);
    v20 = 1;
    sub_19CE6F800();
    sub_19CFE0484();
    if ((v23 & 1) != 0)
    {
      v13 = 1048576.0;
    }
    else if ((v22 & 1) != 0)
    {
      v13 = 1048576.0;
    }
    else
    {
      v13 = v21;
    }
    v20 = 2;
    sub_19CFE0484();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v15 = (double *)v19;
    if ((v23 & 1) != 0)
    {
      v16 = 2.0;
    }
    else
    {
      v16 = v21;
      if ((v22 & 1) != 0)
        v16 = 2.0;
    }
    *v19 = v18;
    *((_QWORD *)v15 + 1) = v12;
    v15[2] = v13;
    v15[3] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_19CE6F304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  double v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];

  swift_bridgeObjectRelease();
  JSONObject.subscript.getter(0x6D614E646C656966, 0xE900000000000065, (uint64_t)v26);
  sub_19CDE0324((uint64_t)v26, (uint64_t)v23);
  v4 = v24;
  if (!v24)
  {
    sub_19CCECFE4((uint64_t)v23, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v26);
    goto LABEL_8;
  }
  v5 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  sub_19CD3E3F8((uint64_t)v26);
  if (!v8)
  {
LABEL_8:
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v15 = xmmword_19D059E50;
    *(_QWORD *)(v15 + 16) = 0x20000001E3DD7C58uLL;
    *(_QWORD *)(v15 + 24) = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  JSONObject.subscript.getter(0x647574696E67616DLL, 0xE900000000000065, (uint64_t)v26);
  sub_19CDE0324((uint64_t)v26, (uint64_t)v23);
  v9 = v24;
  if (v24)
  {
    v10 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 80))(v9, v10));
    v13 = v12;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_19CD3E3F8((uint64_t)v26);
    if ((v13 & 1) != 0)
      v14 = 1048576.0;
    else
      v14 = v11;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v23, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v26);
    v14 = 1048576.0;
  }
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019D0728C0, (uint64_t)v26);
  sub_19CDE0324((uint64_t)v26, (uint64_t)v23);
  v17 = v24;
  if (v24)
  {
    v18 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_19CD3E3F8(a1);
    result = sub_19CD3E3F8((uint64_t)v26);
    v22 = *(double *)&v19;
    if ((v21 & 1) != 0)
      v22 = 2.0;
  }
  else
  {
    sub_19CCECFE4((uint64_t)v23, &qword_1ECEB1328);
    sub_19CD3E3F8(a1);
    result = sub_19CD3E3F8((uint64_t)v26);
    v22 = 2.0;
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(double *)(a2 + 16) = v14;
  *(double *)(a2 + 24) = v22;
  return result;
}

uint64_t sub_19CE6F5A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  id v22;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v6 = *(double *)(v1 + 16);
  v5 = *(double *)(v1 + 24);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (!*(_QWORD *)(v9 + 16))
  {
    v20 = 0u;
    v21 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    return sub_19CCECFE4((uint64_t)&v20, &qword_1ECEB3370);
  }
  swift_bridgeObjectRetain();
  v10 = sub_19CD3FD1C(v4, v3);
  if ((v11 & 1) == 0)
  {
    v20 = 0u;
    v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_19CD436B0(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v21 + 1))
    return sub_19CCECFE4((uint64_t)&v20, &qword_1ECEB3370);
  sub_19CD16BB8();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v13 = v22;
    objc_msgSend(v22, sel_doubleValue);
    v15 = v14;
    v16 = NAN;
    if (v6 > 0.0 && v5 >= 0.0)
    {
      v17 = __exp10(v5);
      v16 = v17 * trunc(v15 / v6 / v17);
    }
    *((_QWORD *)&v21 + 1) = MEMORY[0x1E0DEB070];
    *(double *)&v20 = v16;
    v18 = a1[3];
    v19 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v18);
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(&v20, v4, v3, v18, v19);

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
  }
  return result;
}

uint64_t sub_19CE6F76C(_QWORD *a1)
{
  return sub_19CE6F5A4(a1);
}

uint64_t sub_19CE6F780@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19CE6F0E0(a1, a2);
}

uint64_t sub_19CE6F794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CE6F304(a1, a2);
}

ValueMetadata *type metadata accessor for MetricsEventLinterDeResolutionRule()
{
  return &type metadata for MetricsEventLinterDeResolutionRule;
}

unint64_t sub_19CE6F7BC()
{
  unint64_t result;

  result = qword_1EE43FFA8;
  if (!qword_1EE43FFA8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059FC8, &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43FFA8);
  }
  return result;
}

unint64_t sub_19CE6F800()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE43FFB8;
  if (!qword_1EE43FFB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43FFB0);
    v2 = sub_19CE6F864();
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> DiscardOnError<A>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43FFB8);
  }
  return result;
}

unint64_t sub_19CE6F864()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE43FFC0;
  if (!qword_1EE43FFC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB0BA0);
    v2 = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> A?, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE43FFC0);
  }
  return result;
}

BOOL sub_19CE6F8C0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  BOOL v6;
  _BOOL8 result;

  v3 = *(double *)(a1 + 16);
  v2 = *(double *)(a1 + 24);
  v5 = *(double *)(a2 + 16);
  v4 = *(double *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  result = 0;
  if ((v6 || (sub_19CFE06A0() & 1) != 0) && v3 == v5 && v2 == v4)
    return 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for MetricsEventLinterDeResolutionRule.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CE6F978 + 4 * byte_19D059E65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CE6F9AC + 4 * byte_19D059E60[v4]))();
}

uint64_t sub_19CE6F9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6F9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE6F9BCLL);
  return result;
}

uint64_t sub_19CE6F9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE6F9D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CE6F9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE6F9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventLinterDeResolutionRule.CodingKeys()
{
  return &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys;
}

unint64_t sub_19CE6F9FC()
{
  unint64_t result;

  result = qword_1EE43FFC8;
  if (!qword_1EE43FFC8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059FA0, &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43FFC8);
  }
  return result;
}

unint64_t sub_19CE6FA44()
{
  unint64_t result;

  result = qword_1EE43FFD0;
  if (!qword_1EE43FFD0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059F10, &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43FFD0);
  }
  return result;
}

unint64_t sub_19CE6FA8C()
{
  unint64_t result;

  result = qword_1EE43FFD8;
  if (!qword_1EE43FFD8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059F38, &type metadata for MetricsEventLinterDeResolutionRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE43FFD8);
  }
  return result;
}

uint64_t sub_19CE6FAD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647574696E67616DLL && a2 == 0xE900000000000065 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000019D0728C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

ValueMetadata *type metadata accessor for SentryStackTrace()
{
  return &type metadata for SentryStackTrace;
}

uint64_t getEnumTagSinglePayload for SentryStackTrace.StackFrame(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryStackTrace.StackFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.StackFrame()
{
  return &type metadata for SentryStackTrace.StackFrame;
}

uint64_t sub_19CE6FCF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE70A84();
  sub_19CFE0A24();
  v9[15] = 0;
  sub_19CFE0538();
  if (!v1)
  {
    v9[14] = 1;
    sub_19CFE0538();
    v9[13] = 2;
    sub_19CFE0520();
    v9[12] = 3;
    sub_19CFE0520();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_19CE6FE5C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE70950();
  sub_19CFE0A24();
  v10[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436E90);
  sub_19CE709D8(&qword_1EE436E98, (uint64_t (*)(void))sub_19CE70A40, MEMORY[0x1E0DEAF10]);
  sub_19CFE0568();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_19CE6FF78(char *a1)
{
  sub_19CE81828(*a1);
}

void sub_19CE6FF84()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE6FFD0()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

void sub_19CE70034()
{
  __asm { BR              X10 }
}

uint64_t sub_19CE70070()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CE700C0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CFE08C8();
  __asm { BR              X9 }
}

uint64_t sub_19CE70108()
{
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE7016C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE70DE0();
  *a1 = result;
  return result;
}

uint64_t sub_19CE70198()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CE701C8 + 4 * byte_19D05A02C[*v0]))();
}

void sub_19CE701C8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E6F6974636E7566;
  a1[1] = v1;
}

void sub_19CE701E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6F6E656E696CLL;
  a1[1] = 0xE600000000000000;
}

void sub_19CE701F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6F6E6C6F63;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_19CE70210()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CE70240 + 4 * byte_19D05A030[*v0]))(0x656D616E656C6966, 0xE800000000000000);
}

uint64_t sub_19CE70240()
{
  return 0x6E6F6974636E7566;
}

uint64_t sub_19CE70254()
{
  return 0x6F6E656E696CLL;
}

uint64_t sub_19CE70268()
{
  return 0x6F6E6C6F63;
}

uint64_t sub_19CE7027C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CE70DE0();
  *a1 = result;
  return result;
}

uint64_t sub_19CE702A0()
{
  sub_19CE70A84();
  return sub_19CFE0A48();
}

uint64_t sub_19CE702C8()
{
  sub_19CE70A84();
  return sub_19CFE0A54();
}

double sub_19CE702F0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_19CE705AC(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_19CE70338(_QWORD *a1)
{
  return sub_19CE6FCF0(a1);
}

uint64_t sub_19CE7034C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];
  _OWORD v7[2];
  _OWORD v8[2];

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return sub_19CE704E0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_19CE703A4()
{
  return 0x73656D617266;
}

uint64_t sub_19CE703B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73656D617266 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_19CFE06A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19CE70444()
{
  sub_19CE70950();
  return sub_19CFE0A48();
}

uint64_t sub_19CE7046C()
{
  sub_19CE70950();
  return sub_19CFE0A54();
}

_QWORD *sub_19CE70494@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_19CE7080C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_19CE704BC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CE6FE5C(a1, *v1);
}

uint64_t sub_19CE704D4(uint64_t *a1, uint64_t *a2)
{
  return sub_19CDCC844(*a1, *a2);
}

uint64_t sub_19CE704E0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  char v9;
  char v10;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_19CFE06A0(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_19CFE06A0(), result = 0, (v8 & 1) != 0))
    {
      v9 = *(_BYTE *)(a2 + 40);
      if ((*(_BYTE *)(a1 + 40) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 40))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
          v9 = 1;
        if ((v9 & 1) != 0)
          return 0;
      }
      v10 = *(_BYTE *)(a2 + 56);
      if ((*(_BYTE *)(a1 + 56) & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 56) & 1) == 0)
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
          v10 = 1;
        if ((v10 & 1) != 0)
          return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_19CE705AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE70A84();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v30 = 0;
  v10 = sub_19CFE0490();
  v12 = v11;
  v29 = 1;
  swift_bridgeObjectRetain();
  v24 = sub_19CFE0490();
  v25 = v13;
  v28 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_19CFE0478();
  v26 = v15;
  v23 = v14;
  v27 = 3;
  v16 = sub_19CFE0478();
  v17 = v9;
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = v25;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v23;
  *(_BYTE *)(a2 + 40) = v26 & 1;
  *(_QWORD *)(a2 + 48) = v16;
  *(_BYTE *)(a2 + 56) = v19 & 1;
  return result;
}

_QWORD *sub_19CE7080C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FFE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE70950();
  sub_19CFE09E8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436E90);
    sub_19CE709D8(&qword_1EE43FFE8, (uint64_t (*)(void))sub_19CE70994, MEMORY[0x1E0DEAF40]);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v8 = (_QWORD *)v10[1];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_19CE70950()
{
  unint64_t result;

  result = qword_1EE436E10;
  if (!qword_1EE436E10)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A360, &type metadata for SentryStackTrace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E10);
  }
  return result;
}

unint64_t sub_19CE70994()
{
  unint64_t result;

  result = qword_1EE43FFF0;
  if (!qword_1EE43FFF0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A0BC, &type metadata for SentryStackTrace.StackFrame);
    atomic_store(result, (unint64_t *)&qword_1EE43FFF0);
  }
  return result;
}

uint64_t sub_19CE709D8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE436E90);
    v8 = a2();
    result = MEMORY[0x1A1ADBD7C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19CE70A40()
{
  unint64_t result;

  result = qword_1EE436E08;
  if (!qword_1EE436E08)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A094, &type metadata for SentryStackTrace.StackFrame);
    atomic_store(result, (unint64_t *)&qword_1EE436E08);
  }
  return result;
}

unint64_t sub_19CE70A84()
{
  unint64_t result;

  result = qword_1EE436DF0;
  if (!qword_1EE436DF0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A310, &type metadata for SentryStackTrace.StackFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436DF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SentryStackTrace.StackFrame.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19CE70B14 + 4 * byte_19D05A039[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19CE70B48 + 4 * byte_19D05A034[v4]))();
}

uint64_t sub_19CE70B48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE70B50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE70B58);
  return result;
}

uint64_t sub_19CE70B64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE70B6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19CE70B70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE70B78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.StackFrame.CodingKeys()
{
  return &type metadata for SentryStackTrace.StackFrame.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SentryStackTrace.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE70BD4 + 4 * byte_19D05A03E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE70BF4 + 4 * byte_19D05A043[v4]))();
}

_BYTE *sub_19CE70BD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE70BF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE70BFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE70C04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE70C0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE70C14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SentryStackTrace.CodingKeys()
{
  return &type metadata for SentryStackTrace.CodingKeys;
}

unint64_t sub_19CE70C34()
{
  unint64_t result;

  result = qword_1EE440000;
  if (!qword_1EE440000)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A1F8, &type metadata for SentryStackTrace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440000);
  }
  return result;
}

unint64_t sub_19CE70C7C()
{
  unint64_t result;

  result = qword_1EE440008;
  if (!qword_1EE440008)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A2E8, &type metadata for SentryStackTrace.StackFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440008);
  }
  return result;
}

unint64_t sub_19CE70CC4()
{
  unint64_t result;

  result = qword_1EE436E00;
  if (!qword_1EE436E00)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A220, &type metadata for SentryStackTrace.StackFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E00);
  }
  return result;
}

unint64_t sub_19CE70D0C()
{
  unint64_t result;

  result = qword_1EE436DF8;
  if (!qword_1EE436DF8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A248, &type metadata for SentryStackTrace.StackFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436DF8);
  }
  return result;
}

unint64_t sub_19CE70D54()
{
  unint64_t result;

  result = qword_1EE436E20;
  if (!qword_1EE436E20)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A168, &type metadata for SentryStackTrace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E20);
  }
  return result;
}

unint64_t sub_19CE70D9C()
{
  unint64_t result;

  result = qword_1EE436E18;
  if (!qword_1EE436E18)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A190, &type metadata for SentryStackTrace.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436E18);
  }
  return result;
}

uint64_t sub_19CE70DE0()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

ValueMetadata *type metadata accessor for Unstable()
{
  return &type metadata for Unstable;
}

void sub_19CE70E38(uint64_t a1)
{
  AccountProvider.onActiveAccountChange.getter(a1);
}

void sub_19CE70E44()
{
  swift_retain();
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

void AccountProvider.onActiveAccountChange.getter(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v5 = 60;
  v6 = 0xE100000000000000;
  swift_getDynamicType();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t AccountProviderActiveAccountChange.hash(into:)()
{
  return sub_19CFE08D4();
}

BOOL static AccountProviderActiveAccountChange.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccountProviderActiveAccountChange.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE7108C()
{
  unint64_t result;

  result = qword_1EE440010;
  if (!qword_1EE440010)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AccountProviderActiveAccountChange, &type metadata for AccountProviderActiveAccountChange);
    atomic_store(result, (unint64_t *)&qword_1EE440010);
  }
  return result;
}

uint64_t dispatch thunk of AccountProvider.activeAccount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccountProvider.onActiveAccountChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for AccountProviderActiveAccountChange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE7112C + 4 * byte_19D05A3C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE71160 + 4 * asc_19D05A3C0[v4]))();
}

uint64_t sub_19CE71160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE71168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE71170);
  return result;
}

uint64_t sub_19CE7117C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE71184);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE71188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE71190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountProviderActiveAccountChange()
{
  return &type metadata for AccountProviderActiveAccountChange;
}

void sub_19CE711AC()
{
  sub_19CE70E44();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.addDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverProtocol.removeDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverDelegate.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _ScenePhaseChangeObserverDelegate.willEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_19CE711FC()
{
  NSString *v0;
  Class v1;
  uint64_t ObjCClassMetadata;
  uint64_t v3;
  uint64_t result;

  v0 = (NSString *)sub_19CFDF554();
  v1 = NSClassFromString(v0);

  if (v1)
  {
    ObjCClassMetadata = swift_getObjCClassMetadata();
    v3 = swift_conformsToProtocol2();
    if (v3)
      v1 = (Class)v3;
    else
      v1 = 0;
    if (v3)
      result = ObjCClassMetadata;
    else
      result = 0;
    if (result)
      result = (*((uint64_t (**)(void))v1 + 1))();
    else
      v1 = 0;
  }
  else
  {
    result = 0;
  }
  qword_1EE465C70 = result;
  qword_1EE465C78 = (uint64_t)v1;
  return result;
}

uint64_t dispatch thunk of NetRequestEncoder.encodeRequest(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19CE71320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  os_unfair_lock_s *v20;
  __int128 v22;
  __int128 v23;
  _BYTE v24[32];
  __int128 v25;
  __int128 v26;
  char v27;
  _QWORD v28[4];
  _QWORD *v29;

  v3 = v2;
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v6 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v8 = v6;
  v29 = sub_19CD40918(0, 25, 0, MEMORY[0x1E0DEE9D8]);
  v9._object = (void *)0x800000019D0729C0;
  v9._countAndFlagsBits = 0xD000000000000018;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  v10 = (uint64_t *)(a1 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  v11 = *v10;
  v12 = v10[1];
  v28[3] = MEMORY[0x1E0DEA968];
  v28[0] = v11;
  v28[1] = v12;
  sub_19CD40794((uint64_t)v28, (uint64_t)v24);
  v22 = 0u;
  v23 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v24, (uint64_t)&v22);
  v27 = 0;
  v25 = v22;
  v26 = v23;
  v13 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[5 * v15];
  v17 = v25;
  v18 = v26;
  *((_BYTE *)v16 + 64) = v27;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  v29 = v13;
  sub_19CCECFE4((uint64_t)v28, &qword_1ECEB3370);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v7 + 32) = v29;
  *(_QWORD *)&v25 = v8;
  LOBYTE(v22) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v22);

  swift_bridgeObjectRelease();
  v20 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v20 + 6);
  sub_19CE71580((uint64_t)&v20[4], a1);
  os_unfair_lock_unlock(v20 + 6);
  swift_release();
  return sub_19CDF3E10(a1, a2);
}

uint64_t sub_19CE71580(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JetPackAsset(0);
  v8 = (uint64_t *)(a2 + *(int *)(v7 + 28));
  v9 = *v8;
  v10 = v8[1];
  sub_19CDF3E10(a2, (uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  swift_bridgeObjectRetain();
  return sub_19CE11054((uint64_t)v6, v9, v10);
}

uint64_t sub_19CE71658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  __int128 v25;
  char v26;
  _QWORD v27[4];
  _QWORD *v28;

  v4 = v3;
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v8 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
  v10 = v8;
  v28 = sub_19CD40918(0, 36, 0, MEMORY[0x1E0DEE9D8]);
  v11._object = (void *)0x800000019D072990;
  v11._countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  v27[3] = MEMORY[0x1E0DEA968];
  v27[0] = a1;
  v27[1] = a2;
  sub_19CD40794((uint64_t)v27, (uint64_t)v23);
  v21 = 0u;
  v22 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v23, (uint64_t)&v21);
  v26 = 0;
  v24 = v21;
  v25 = v22;
  v12 = v28;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_19CD40918(0, v12[2] + 1, 1, v12);
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
    v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
  v12[2] = v14 + 1;
  v15 = &v12[5 * v14];
  v16 = v24;
  v17 = v25;
  *((_BYTE *)v15 + 64) = v26;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  v28 = v12;
  sub_19CCECFE4((uint64_t)v27, &qword_1ECEB3370);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  *(_QWORD *)(v9 + 32) = v28;
  *(_QWORD *)&v24 = v10;
  LOBYTE(v21) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  sub_19CE7189C((uint64_t *)(v19 + 16), a1, a2, a3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
  return swift_release();
}

uint64_t sub_19CE7189C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_19CD3FD1C(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      v12 = type metadata accessor for JetPackAsset(0);
      v13 = *(_QWORD *)(v12 - 8);
      sub_19CDF3E10(v11 + *(_QWORD *)(v13 + 72) * v10, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v12);
    }
    else
    {
      v16 = type metadata accessor for JetPackAsset(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for JetPackAsset(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a4, 1, 1, v14);
  }
}

uint64_t sub_19CE71998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for JetPackAsset(0) + 28));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  sub_19CDD2DC8(v8, v9, (uint64_t)v6);
  swift_bridgeObjectRelease();
  return sub_19CCECFE4((uint64_t)v6, (uint64_t *)&unk_1ECEB1140);
}

uint64_t sub_19CE71A54@<X0>(size_t *a1@<X8>)
{
  uint64_t v2;
  size_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_19CDFE1F4(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_19CE71AA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  char v11[24];
  uint64_t v12;

  v1 = v0;
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v2 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v12 = MEMORY[0x1E0DEA968];
  strcpy(v11, "Emptying cache");
  v11[15] = -18;
  v9 = 0u;
  v10 = 0u;
  v5 = v2;
  sub_19CD40658((uint64_t)v11, (uint64_t)&v9);
  *(_BYTE *)(v4 + 64) = 0;
  v6 = v10;
  *(_OWORD *)(v4 + 32) = v9;
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)&v9 = v5;
  v11[0] = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)v11);

  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 16) = MEMORY[0x1E0DEE9E0];
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  return swift_release();
}

uint64_t type metadata accessor for JetPackAssetInMemoryCache()
{
  return objc_opt_self();
}

uint64_t sub_19CE71C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19CE71320(a2, a1);
  return sub_19CE71E70(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_19CE71C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_19CE71658(a2, a3, a1);
  return sub_19CE71E70(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_19CE71CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = a1;
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_19CE71E58((uint64_t)&v3[4]);
  os_unfair_lock_unlock(v3 + 6);
  swift_release();
  swift_task_dealloc();
  return sub_19CE71E70(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_19CE71D64()
{
  uint64_t v0;

  sub_19CE71AA0();
  return sub_19CE71E70(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_19CE71D9C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_19CE71A54((size_t *)&v5);
  os_unfair_lock_unlock(v2 + 6);
  v3 = v5;
  swift_release();
  return sub_19CE71E44(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v3);
}

uint64_t sub_19CE71E44(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_19CE71E58(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE71998(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19CE71E70(uint64_t (*a1)(void))
{
  return a1();
}

id JSWeakReference.__allocating_init(_:)(void *a1)
{
  uint64_t v2;
  id result;
  id v4;

  v2 = swift_allocObject();
  if (!objc_msgSend(a1, sel_isObject))
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  result = objc_msgSend(a1, sel_context);
  if (result)
  {
    *(_QWORD *)(v2 + 16) = result;
    JSContextGetGroup((JSContextRef)objc_msgSend(result, sel_JSGlobalContextRef));
    objc_msgSend(a1, sel_JSValueRef);
    result = (id)JSWeakCreate();
    if (result)
    {
      v4 = result;

      *(_QWORD *)(v2 + 24) = v4;
      return (id)v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id JSWeakReference.init(_:)(void *a1)
{
  uint64_t v1;
  id result;
  id v4;

  if (!objc_msgSend(a1, sel_isObject))
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  result = objc_msgSend(a1, sel_context);
  if (result)
  {
    *(_QWORD *)(v1 + 16) = result;
    JSContextGetGroup((JSContextRef)objc_msgSend(result, sel_JSGlobalContextRef));
    objc_msgSend(a1, sel_JSValueRef);
    result = (id)JSWeakCreate();
    if (result)
    {
      v4 = result;

      *(_QWORD *)(v1 + 24) = v4;
      return (id)v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t JSWeakReference.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  JSContextGetGroup((JSContextRef)objc_msgSend(v1, sel_JSGlobalContextRef));
  JSWeakRelease();

  return v0;
}

uint64_t JSWeakReference.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  JSContextGetGroup((JSContextRef)objc_msgSend(v1, sel_JSGlobalContextRef));
  JSWeakRelease();

  return swift_deallocClassInstance();
}

id JSWeakReference.referent.getter()
{
  uint64_t v0;
  id result;

  result = (id)JSWeakGetObject();
  if (result)
    return objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, result, *(_QWORD *)(v0 + 16));
  return result;
}

id sub_19CE720F8()
{
  uint64_t *v0;
  uint64_t v1;
  id result;

  v1 = *v0;
  result = (id)JSWeakGetObject();
  if (result)
    return objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, result, *(_QWORD *)(v1 + 16));
  return result;
}

uint64_t type metadata accessor for JSWeakReference()
{
  return objc_opt_self();
}

uint64_t method lookup function for JSWeakReference()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSWeakReference.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19CE72184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_19CFDFA10();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19CFDFA04();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_19CCFC068(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDF998();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_19CE722C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_19CFDFA10();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19CFDFA04();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_19CCFC068(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CFDF998();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437310);
  return swift_task_create();
}

uint64_t sub_19CE72414(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

id LocalizedStringTable.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for LocalizedStringTable() + 20));
}

Swift::String_optional __swiftcall LocalizedStringTable.localizedString(forKey:in:)(Swift::String forKey, Swift::String_optional in)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_class *v9;
  char *v10;
  uint64_t *v11;
  uint64_t *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t *v22;
  id v23;
  uint64_t v24;
  void *v25;
  Swift::String_optional result;
  objc_super v27;
  objc_super v28;

  object = in.value._object;
  countAndFlagsBits = in.value._countAndFlagsBits;
  v5 = forKey._object;
  v6 = forKey._countAndFlagsBits;
  v7 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for LocalizedStringTable() + 28));
  v8 = *(void **)(v7 + 16);
  v9 = (objc_class *)type metadata accessor for LocalizedStringsCache.Key();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = (uint64_t *)&v10[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
  *v11 = v6;
  v11[1] = (uint64_t)v5;
  v12 = (uint64_t *)&v10[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
  *v12 = countAndFlagsBits;
  v12[1] = (uint64_t)object;
  v28.receiver = v10;
  v28.super_class = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = objc_msgSendSuper2(&v28, sel_init);
  v14 = objc_msgSend(v8, sel_objectForKey_, v13);

  if (v14)
  {
    v15 = v14[2];
    v16 = (void *)v14[3];
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v15 = sub_19CEEABE8(v6, (uint64_t)v5, countAndFlagsBits, object);
    v16 = v17;
    v18 = *(void **)(v7 + 16);
    type metadata accessor for LocalizedStringsCache.Value();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v15;
    *(_QWORD *)(v19 + 24) = v16;
    v20 = (char *)objc_allocWithZone(v9);
    v21 = (uint64_t *)&v20[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_key];
    *v21 = v6;
    v21[1] = (uint64_t)v5;
    v22 = (uint64_t *)&v20[OBJC_IVAR____TtCC9JetEngine21LocalizedStringsCacheP33_5B10CF4EC9E6563F43A45CEBFA8559793Key_domain];
    *v22 = countAndFlagsBits;
    v22[1] = (uint64_t)object;
    v27.receiver = v20;
    v27.super_class = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = objc_msgSendSuper2(&v27, sel_init);
    objc_msgSend(v18, sel_setObject_forKey_, v19, v23, v27.receiver, v27.super_class, v28.receiver, v28.super_class);
    swift_release();

  }
  v24 = v15;
  v25 = v16;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

uint64_t LocalizedStringTable.fetchLanguages()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE7268C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for LocalizedStringTable() + 24));
  v4 = v3[1];
  *(_QWORD *)(v2 + 32) = *v3;
  *(_QWORD *)(v2 + 40) = v4;
  v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v6(v2);
}

uint64_t LocalizedStringTable.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = type metadata accessor for LocalizedStringTable();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 + 64);
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE7279C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 64) + 24));
  if (*v4 == v3 && v4[1] == v2)
    goto LABEL_7;
  if ((sub_19CFE06A0() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v1 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 40);
LABEL_7:
    v7 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    v10 = sub_19CFDFA10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_19CD41644(v1, v7);
    v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    sub_19CCFAAC8(v7, v12 + v11);
    v13 = (_QWORD *)(v12 + ((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v13 = v3;
    v13[1] = v2;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 104) = sub_19CE722C8(v6, (uint64_t)&unk_1EE440060, v12);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437310);
    *v14 = v0;
    v14[1] = sub_19CE7298C;
    return sub_19CFDFAAC();
  }
  v17 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  sub_19CDD67F4();
  swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_BYTE *)(v18 + 16) = 1;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE7298C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CE729E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    return swift_willThrowTypedImpl();
  if (v1)
  {
    v3 = *(uint64_t **)(v0 + 32);
    v9[3] = &type metadata for FoundationValue;
    v9[4] = &off_1E3DCC5B0;
    v4 = swift_allocObject();
    v9[0] = v4;
    *(_QWORD *)(v4 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0750);
    *(_QWORD *)(v4 + 16) = v1;
    v3[3] = (uint64_t)&type metadata for LocalizedStringsJSONObject;
    v3[4] = (uint64_t)&off_1E3DD4C80;
    v5 = swift_allocObject();
    *v3 = v5;
    sub_19CEB7F4C((uint64_t)v9, v5 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_19CDD67F4();
    swift_allocError();
    *(_QWORD *)v8 = v7;
    *(_QWORD *)(v8 + 8) = v6;
    *(_BYTE *)(v8 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE72B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_19CE72B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = *(uint64_t **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(v1 + *(int *)(type metadata accessor for LocalizedStringTable() + 20));
  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(v3, sel_localizedStringsForTable_localization_, 0, v4);

  v6 = sub_19CFDF3C8();
  *v2 = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE72C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LocalizedStringTable();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_19CFDF038();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE72CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for LocalizedStringTable() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v8 = *v7;
  v9 = v7[1];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_19CCBE344;
  v10[4] = v8;
  v10[5] = v9;
  v10[2] = a1;
  v10[3] = v6;
  return swift_task_switch();
}

uint64_t sub_19CE72D7C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CE72DA0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CE72DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE72DDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);

  v2 = v0[2];
  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3320);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v4 = (_QWORD *)(v2 + *(int *)(v1 + 24));
  v5 = v4[1];
  *(_QWORD *)(v3 + 32) = *v4;
  *(_QWORD *)(v3 + 40) = v5;
  v7 = (uint64_t (*)(uint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v7(v3);
}

uint64_t sub_19CE72E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CCBE344;
  return LocalizedStringTable.fetchStrings(withLanguage:)(a1, a2, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalizedStringTable(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_19CFDF038();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = (uint64_t)v10;
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = v10;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_19CFDF038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_19CFDF038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for LocalizedStringTable(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_19CFDF038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedStringTable()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE73138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_19CFDF038();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedStringTable()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE731C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_19CFDF038();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_19CE73238(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CE7329C;
  return v6(a1);
}

uint64_t sub_19CE7329C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19CE732E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE7330C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CD579FC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE440078 + dword_1EE440078))(a1, v4);
}

uint64_t sub_19CE7337C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_19CE733E4;
  return v5(v2 + 16);
}

uint64_t sub_19CE733E4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19CE73434(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19CCBE344;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE440088 + dword_1EE440088))(a1, v4);
}

BOOL static NetworkInterface.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkInterface.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t NetworkInterface.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE7352C()
{
  unint64_t result;

  result = qword_1EE440098;
  if (!qword_1EE440098)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for NetworkInterface, &type metadata for NetworkInterface);
    atomic_store(result, (unint64_t *)&qword_1EE440098);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkInterface(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CE735BC + 4 * byte_19D05A615[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CE735F0 + 4 * byte_19D05A610[v4]))();
}

uint64_t sub_19CE735F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE735F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE73600);
  return result;
}

uint64_t sub_19CE7360C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE73614);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CE73618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE73620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface()
{
  return &type metadata for NetworkInterface;
}

uint64_t dispatch thunk of NetworkObservation.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkInquiry.isLikelyReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkInquiry.interface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetworkInquiry.isExpensive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NetworkInquiry.isConstrained.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NetworkInquiry.observe(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

void sub_19CE7366C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  id v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  unsigned int v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 aBlock;
  uint64_t (*v81)(uint64_t);
  void *v82;
  uint64_t (*v83)();
  _QWORD *v84;

  v4 = v3;
  v8 = sub_19CFDF2D8();
  v73 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDF308();
  v72 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v13);
  v71 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_19CFDF2E4();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v15);
  v68 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_19CFDEFA8();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67, v17);
  v65 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v4[3];
  v20 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v19);
  v78 = *a1;
  aBlock = v78;
  (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(&aBlock, a2, a3, v19, v20);
  sub_19CDB7B9C(v78);
  v21 = objc_allocWithZone(MEMORY[0x1E0CFDB68]);
  v22 = (void *)sub_19CFDF3B0();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithUnderlyingDictionary_, v22);

  v24 = sub_19CDDE100();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v63 = sub_19CCE5204(0, (unint64_t *)&qword_1ECEB31B0);
    v61 = v8;
    v60 = v11;
    v56 = v24;
    v26 = (uint64_t *)(v24 + 48);
    v59 = *MEMORY[0x1E0DEF548];
    v58 = xmmword_19D0522A0;
    v57 = v12;
    v64 = v23;
    v62 = v4;
    do
    {
      *(_QWORD *)&v78 = v25;
      v28 = *(v26 - 2);
      v27 = *(v26 - 1);
      v76 = *v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4400A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v58;
      v30 = v27;
      swift_bridgeObjectRetain();
      v31 = v65;
      sub_19CFDEF9C();
      v32 = sub_19CFDEF90();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v67);
      *(_QWORD *)(inited + 32) = v32;
      *(_QWORD *)(inited + 40) = v34;
      *(_QWORD *)(inited + 72) = sub_19CCE5204(0, (unint64_t *)&qword_1EE43C2B8);
      *(_QWORD *)(inited + 80) = sub_19CDB8910();
      *(_QWORD *)(inited + 48) = v23;
      v35 = v23;
      v36 = sub_19CE1047C(inited);
      v37 = (void *)v62[6];
      v38 = v69;
      v39 = v68;
      v40 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, v59, v70);
      v77 = sub_19CFDFDE8();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      v41 = (_QWORD *)swift_allocObject();
      v41[2] = v28;
      v41[3] = v30;
      v74 = v30;
      v41[4] = v76;
      v41[5] = v36;
      v75 = v36;
      v41[6] = v37;
      v42 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
      LOBYTE(v84) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4400A8);
      v43 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
      v44 = swift_allocObject();
      *(_DWORD *)(v44 + 16) = 0;
      *(_QWORD *)(v43 + 16) = v44;
      sub_19CE744EC((uint64_t)&aBlock, v43 + 24);
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = sub_19CE744C0;
      v45[3] = v41;
      v45[4] = v43;
      v83 = sub_19CE74560;
      v84 = v45;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v81 = sub_19CD0C78C;
      v82 = &block_descriptor_11;
      v46 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = v37;
      swift_retain();
      swift_retain();
      swift_retain();
      v48 = v71;
      sub_19CFDF2F0();
      v79 = v42;
      sub_19CD3DE74();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
      sub_19CD05BA0((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198, MEMORY[0x1E0DEAF38]);
      v49 = v60;
      v50 = v61;
      sub_19CFE0070();
      v51 = (void *)v77;
      MEMORY[0x1A1AD9FF4](0, v48, v49, v46);
      _Block_release(v46);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v50);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v57);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      swift_release();
      v23 = v64;
      swift_release();
      v52 = v78;
      swift_release();
      v26 += 3;
      v25 = v52 - 1;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  v53 = qword_1EE43D6F0;
  v54 = v23;
  if (v53 != -1)
    swift_once();
  if (-[_JEAtomicFlag currentValue](qword_1EE441CA8))
  {
    if (qword_1EE43D6F8 != -1)
      swift_once();
    v55 = qword_1EE465D18;
    swift_retain();
    sub_19CE74144(v54, v55);

    swift_release();
  }
  else
  {

  }
}

uint64_t sub_19CE73D5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

id MetricsEventRecorder.withRemoteInspection.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  void (*v24)(char *, uint64_t, uint64_t, double);
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t *v32;
  void *v33;
  void *v34;
  id v35;
  id result;
  uint64_t v37;
  uint64_t v38[7];

  v37 = a2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (uint64_t *)((char *)&v38[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v38[-1] - v11;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v38[-1] - v15;
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v38[-1] - v19;
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v24((char *)&v38[-1] - v25, v3, a1, v23);
  if (swift_dynamicCast())
  {
    sub_19CE74330((uint64_t)v38);
    v26 = v37;
    a3[3] = a1;
    a3[4] = v26;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
    v28 = v3;
    return (id)((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v24)(boxed_opaque_existential_2Tm, v28, a1);
  }
  v29 = a3;
  v30 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v20, v3, a1);
  ((void (*)(char *, char *, uint64_t))v24)(v16, v20, a1);
  type metadata accessor for AMSMetricsEventRecorder();
  if (!swift_dynamicCast())
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v31(v12, v20, a1);
    v31((char *)v8, v12, a1);
    type metadata accessor for AMSInMemoryMetricsEventRecorder();
    if (swift_dynamicCast())
    {
      swift_release();
      __break(1u);
    }
    else
    {
      if ((sub_19CCF910C() & 1) == 0)
      {
        v29[3] = a1;
        v29[4] = v30;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v29);
        v28 = v3;
        return (id)((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v24)(boxed_opaque_existential_2Tm, v28, a1);
      }
      v29[3] = (uint64_t)&type metadata for MetricsEventRecorderWithInspection;
      v29[4] = (uint64_t)&off_1E3DD7CC8;
      v8 = (uint64_t *)swift_allocObject();
      *v29 = (uint64_t)v8;
      v8[5] = a1;
      v8[6] = v30;
      v32 = __swift_allocate_boxed_opaque_existential_2Tm(v8 + 2);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v24)(v32, v3, a1);
      if (qword_1EE43D628 == -1)
      {
LABEL_7:
        v33 = (void *)qword_1EE465CE0;
        v34 = (void *)objc_opt_self();
        v35 = v33;
        result = objc_msgSend(v34, sel_sharedSession);
        v8[7] = (uint64_t)v35;
        v8[8] = (uint64_t)result;
        return result;
      }
    }
    swift_once();
    goto LABEL_7;
  }
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, a1);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, a1);
  __break(1u);
  return result;
}

uint64_t sub_19CE74088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int64_t v6;

  swift_bridgeObjectRetain();
  v4 = sub_19CE7456C(a1, a2);
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v6 >= v4)
    return sub_19CE747F4(v4, v6);
  __break(1u);
  return result;
}

uint64_t sub_19CE740F4(uint64_t a1)
{
  return sub_19CE4A3D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19CE74108(_QWORD *a1)
{
  return sub_19CE4A86C(0, a1[2], 0, a1);
}

uint64_t sub_19CE7411C(uint64_t a1)
{
  return sub_19CE4A9F4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19CE74130(_QWORD *a1)
{
  return sub_19CE4B678(0, a1[2], 0, a1);
}

uint64_t sub_19CE74144(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t i;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v17[3] = &type metadata for TraceMetricsEventEnqueue;
  v17[4] = &protocol witness table for TraceMetricsEventEnqueue;
  v17[0] = a1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = a1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v5 = *(_QWORD *)(v3 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  result = swift_release();
  v16 = MEMORY[0x1E0DEE9E8];
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if (i >= *(_QWORD *)(v5 + 16))
      {
        __break(1u);
        return result;
      }
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 88);
      v11 = swift_retain();
      if ((v10(v11) & 1) == 0
        || (v12 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v9 + 104))(v17), (v10(v12) & 1) == 0))
      {
        sub_19CE88AC8(&v15, v9);
      }
      result = swift_release();
    }
    swift_release();
    v13 = v16;
    if (!*(_QWORD *)(v16 + 16))
      goto LABEL_11;
  }
  else
  {
    swift_release();
    v13 = MEMORY[0x1E0DEE9E8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9E8] + 16))
      goto LABEL_11;
  }
  v14 = *(os_unfair_lock_s **)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14 + 6);
  sub_19CE74088((uint64_t)&v14[4], v13);
  os_unfair_lock_unlock(v14 + 6);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
}

uint64_t sub_19CE742FC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_19CE74330(uint64_t a1)
{
  destroy for MetricsEventRecorderWithInspection(a1);
  return a1;
}

void destroy for MetricsEventRecorderWithInspection(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

}

uint64_t initializeWithCopy for MetricsEventRecorderWithInspection(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  v7 = v5;
  v8 = v6;
  return a1;
}

uint64_t *assignWithCopy for MetricsEventRecorderWithInspection(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  v6 = v4;

  v7 = (void *)a2[6];
  v8 = (void *)a1[6];
  a1[6] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for MetricsEventRecorderWithInspection(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for MetricsEventRecorderWithInspection()
{
  return &type metadata for MetricsEventRecorderWithInspection;
}

uint64_t sub_19CE7448C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_19CE744C0(uint64_t a1, uint64_t a2, void (*a3)(void *), void (*a4)(void *))
{
  uint64_t v4;

  sub_19CFC6464(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(_QWORD *)(v4 + 40), *(void **)(v4 + 48));
}

uint64_t sub_19CE744EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE443AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE74534()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE74560()
{
  uint64_t v0;

  return sub_19CF22C04(*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_19CE7456C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD **)(*(_QWORD *)a1 + 16);
  if (v3)
  {
    v6 = 0;
    v7 = a2 + 56;
    while (1)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v8 = v2[v6 + 4];
        sub_19CFE08C8();
        sub_19CFE08D4();
        v9 = &v26;
        result = sub_19CFE0910();
        v11 = -1 << *(_BYTE *)(a2 + 32);
        v12 = result & ~v11;
        if (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          break;
      }
LABEL_3:
      if ((_QWORD *)++v6 == v3)
        return v2[2];
    }
    v13 = *(_QWORD *)(a2 + 48);
    if (*(_QWORD *)(v13 + 8 * v12) != v8)
    {
      v14 = ~v11;
      do
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_3;
      }
      while (*(_QWORD *)(v13 + 8 * v12) != v8);
    }
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    while (1)
    {
      v17 = v2[2];
      if (v15 == v17)
        return v6;
      if (v15 >= v17)
        goto LABEL_38;
      v18 = v2 + 4;
      if (*(_QWORD *)(a2 + 16))
      {
        v19 = v18[v15];
        sub_19CFE08C8();
        sub_19CFE08D4();
        result = sub_19CFE0910();
        v20 = -1 << *(_BYTE *)(a2 + 32);
        v21 = result & ~v20;
        if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        {
          v22 = *(_QWORD *)(a2 + 48);
          if (*(_QWORD *)(v22 + 8 * v21) == v19)
            goto LABEL_15;
          v23 = ~v20;
          while (1)
          {
            v21 = (v21 + 1) & v23;
            if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              break;
            if (*(_QWORD *)(v22 + 8 * v21) == v19)
              goto LABEL_15;
          }
        }
      }
      if (v6 != v15)
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_40;
        v24 = v2[2];
        if (v6 >= v24)
          goto LABEL_41;
        if (v15 >= v24)
          goto LABEL_42;
        v9 = (char *)v18[v6];
        v25 = v18[v15];
        swift_retain();
        swift_retain();
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_19CE74108(v2);
          v2 = (_QWORD *)result;
        }
        if (v6 >= v2[2])
          goto LABEL_43;
        v3 = v2 + 4;
        v2[v6 + 4] = v25;
        swift_release();
        if (v15 >= v2[2])
        {
          __break(1u);
          return 0;
        }
LABEL_13:
        v3[v15] = v9;
        result = swift_release();
        *(_QWORD *)a1 = v2;
      }
      v16 = __OFADD__(v6++, 1);
      if (v16)
        goto LABEL_39;
LABEL_15:
      v16 = __OFADD__(v15++, 1);
      if (v16)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_19CE747F4(uint64_t a1, int64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_19CE4A2A0(isUniquelyReferenced_nonNull_native, v11, 1);
    v4 = *v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB20);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = *(_QWORD *)(v4 + 16);
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (const void *)(v4 + 32 + 8 * a2);
    if (a1 != a2 || v4 + 32 + 8 * a1 >= (unint64_t)v16 + 8 * v15)
      result = (uint64_t)memmove((void *)(v4 + 32 + 8 * a1), v16, 8 * v15);
    v17 = *(_QWORD *)(v4 + 16);
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      *(_QWORD *)(v4 + 16) = v18;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_19CFE03C4();
  __break(1u);
  return result;
}

uint64_t destroy for EncryptedBlobHeader(uint64_t a1)
{
  sub_19CD3BE18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return sub_19CD3BE18(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t *initializeWithCopy for EncryptedBlobHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_19CD3BE5C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v7 = a2[2];
  v6 = a2[3];
  sub_19CD3BE5C(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for EncryptedBlobHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_19CD3BE5C(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_19CD3BE18(v6, v7);
  v9 = a2[2];
  v8 = a2[3];
  sub_19CD3BE5C(v9, v8);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_19CD3BE18(v10, v11);
  return a1;
}

uint64_t *assignWithTake for EncryptedBlobHeader(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19CD3BE18(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_19CD3BE18(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptedBlobHeader(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EncryptedBlobHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptedBlobHeader()
{
  return &type metadata for EncryptedBlobHeader;
}

uint64_t sub_19CE74B44(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v15 = a4;
  v16 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4400B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE74D7C();
  sub_19CFE0A24();
  v17 = a2;
  v18 = a3;
  v19 = 0;
  sub_19CE74DC0();
  sub_19CFE0568();
  if (!v5)
  {
    v17 = v15;
    v18 = v16;
    v19 = 1;
    sub_19CFE0568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_19CE74C98()
{
  _BYTE *v0;

  if (*v0)
    return 6775156;
  else
    return 30313;
}

uint64_t sub_19CE74CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CE751A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CE74CE4()
{
  sub_19CE74D7C();
  return sub_19CFE0A48();
}

uint64_t sub_19CE74D0C()
{
  sub_19CE74D7C();
  return sub_19CFE0A54();
}

uint64_t sub_19CE74D34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_19CE74E04(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_19CE74D60(_QWORD *a1)
{
  uint64_t *v1;

  return sub_19CE74B44(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_19CE74D7C()
{
  unint64_t result;

  result = qword_1ECEB1440;
  if (!qword_1ECEB1440)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A878, &type metadata for EncryptedBlobHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECEB1440);
  }
  return result;
}

unint64_t sub_19CE74DC0()
{
  unint64_t result;

  result = qword_1EE4400B8;
  if (!qword_1EE4400B8)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE4400B8);
  }
  return result;
}

uint64_t sub_19CE74E04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1728);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_19CE74D7C();
  sub_19CFE09E8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v15 = 0;
    sub_19CD61F2C();
    sub_19CFE04B4();
    v8 = v13;
    v10 = v14;
    v15 = 1;
    sub_19CD3BE5C(v13, v14);
    sub_19CFE04B4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v11 = v13;
    v12 = v14;
    sub_19CD3BE5C(v8, v10);
    sub_19CD3BE5C(v11, v12);
    sub_19CD3BE18(v8, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_19CD3BE18(v8, v10);
    sub_19CD3BE18(v11, v12);
  }
  return v8;
}

uint64_t storeEnumTagSinglePayload for EncryptedBlobHeader.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE75048 + 4 * byte_19D05A745[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE7507C + 4 * byte_19D05A740[v4]))();
}

uint64_t sub_19CE7507C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE75084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE7508CLL);
  return result;
}

uint64_t sub_19CE75098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE750A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE750A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE750AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EncryptedBlobHeader.CodingKeys()
{
  return &type metadata for EncryptedBlobHeader.CodingKeys;
}

unint64_t sub_19CE750CC()
{
  unint64_t result;

  result = qword_1EE4400C0;
  if (!qword_1EE4400C0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A850, &type metadata for EncryptedBlobHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE4400C0);
  }
  return result;
}

unint64_t sub_19CE75114()
{
  unint64_t result;

  result = qword_1ECEB1450;
  if (!qword_1ECEB1450)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A7C0, &type metadata for EncryptedBlobHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECEB1450);
  }
  return result;
}

unint64_t sub_19CE7515C()
{
  unint64_t result;

  result = qword_1ECEB1448;
  if (!qword_1ECEB1448)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A7E8, &type metadata for EncryptedBlobHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECEB1448);
  }
  return result;
}

uint64_t sub_19CE751A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 30313 && a2 == 0xE200000000000000;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_19CE75268()
{
  uint64_t *v0;

  sub_19CF94E20(*v0, v0[1]);
}

uint64_t sub_19CE75294(uint64_t a1, int a2)
{
  int *v2;
  int v3;
  uint64_t result;
  int *v5;

  v3 = sqlite3_bind_int(*(sqlite3_stmt **)(a1 + 16), a2, *v2);
  if (qword_1ECEB12A8 != -1)
    swift_once();
  result = sub_19CCE4984(v3, qword_1ECEB52B8);
  if ((result & 1) == 0)
  {
    sub_19CE379F8();
    swift_allocError();
    *v5 = v3;
    return swift_willThrow();
  }
  return result;
}

id sub_19CE7532C(unint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
LABEL_8:
    JUMPOUT(0x1A1ADA390);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  return *(id *)(a2 + 8 * a1 + 32);
}

uint64_t sub_19CE75360()
{
  void *v0;
  id v1;
  uint64_t v3;

  sub_19CE754B8();
  sub_19CFDF938();
  v1 = v0;
  if (swift_dynamicCast())
    return v3;
  else
    return 0;
}

id sub_19CE753D4()
{
  id *v0;

  return objc_msgSend(*v0, sel_count);
}

uint64_t sub_19CE753E4(uint64_t a1)
{
  id *v1;
  id v2;

  v2 = objc_msgSend(*v1, sel_objectAtIndexedSubscript_, a1);
  sub_19CFE004C();
  return swift_unknownObjectRelease();
}

uint64_t sub_19CE7542C()
{
  return sub_19CE75360();
}

unint64_t sub_19CE7544C(uint64_t a1)
{
  unint64_t result;

  result = sub_19CE75470();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19CE75470()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE43CC10;
  if (!qword_1EE43CC10)
  {
    v1 = sub_19CE754B8();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB2010], v1);
    atomic_store(result, (unint64_t *)&qword_1EE43CC10);
  }
  return result;
}

unint64_t sub_19CE754B8()
{
  unint64_t result;

  result = qword_1ECEB1710;
  if (!qword_1ECEB1710)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECEB1710);
  }
  return result;
}

uint64_t sub_19CE754F4(void *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];
  id v8[2];

  v8[1] = a1;
  v7[2] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CD80);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  v5 = sub_19CE75884(&qword_1EE4400D0, MEMORY[0x1E0DEAF50]);
  return sub_19CE974CC((void (*)(char *, char *))sub_19CE75868, (uint64_t)v7, v3, a2, v4, v5, MEMORY[0x1E0DEDB38], (uint64_t)v8);
}

void sub_19CE755A0(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  _BYTE v29[40];
  uint64_t v30;

  v6 = v4;
  v10 = sub_19CFDFF5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v25[-1] - v13;
  v15 = *a1;
  sub_19CE23FF0();
  if (!v4)
  {
    v30 = a4;
    v24 = a3;
    sub_19CDE0324((uint64_t)v29, (uint64_t)v25);
    v16 = v26;
    if (v26)
    {
      v17 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v17 + 96))(v28, v16, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    }
    else
    {
      sub_19CDE036C((uint64_t)v25);
      memset(v28, 0, sizeof(v28));
    }
    sub_19CD3E3F8((uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3370);
    v18 = swift_dynamicCast();
    v19 = *(_QWORD *)(a2 - 8);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v21 = v30;
    if ((v18 & 1) != 0)
    {
      v20(v14, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v21, v14, a2);
      return;
    }
    v20(v14, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v22 = v15;
    sub_19CFE0A90();
    sub_19CDC98D8();
    v6 = swift_allocError();
    JSError.init(badValue:expected:)(v22, v23);
    swift_willThrow();
    a3 = v24;
  }
  *a3 = v6;
}

uint64_t sub_19CE757A4()
{
  _QWORD *v0;
  uint64_t v2;

  if (!(*v0 >> 62))
    return *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_19CFE0394();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_19CE75800@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  id result;

  result = sub_19CE7532C(a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_19CE75828(char *a1)
{
  void **v1;

  return sub_19CE754F4(*v1, a1);
}

uint64_t sub_19CE75834(uint64_t a1)
{
  uint64_t result;

  result = sub_19CE75884(&qword_1EE4400C8, MEMORY[0x1E0DEAF38]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_19CE75868(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_19CE755A0(a1, *(_QWORD *)(v3 + 16), a2, a3);
}

uint64_t sub_19CE75884(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE43CD80);
    result = MEMORY[0x1A1ADBD7C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_19CE758C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16)) == 0;
}

uint64_t sub_19CE758EC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_19CE758F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *))(v2 + *(int *)(a2 + 36));
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v5 + 24))(a1, v6, v5, v10);
  v13(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, AssociatedTypeWitness);
}

_QWORD *sub_19CE759D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v35 = a1;
  v37 = *(char **)(v2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  v8 = (char *)&v34 - v7;
  v9 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v34 - v11;
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v34 - v20;
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v2 + 16))(v3, v2, v19);
  v23 = sub_19CED67A4(0, v22 & ~(v22 >> 63), 0, MEMORY[0x1E0DEE9D8]);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v36 = v1;
  v24(v16, v1, v3);
  sub_19CFDF770();
  swift_getAssociatedConformanceWitness();
  v37 = v21;
  v38 = v17;
  sub_19CFDFFBC();
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v25(v12, 1, AssociatedTypeWitness) != 1)
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      v28 = v5;
      v27(v8, v12, AssociatedTypeWitness);
      (*(void (**)(_OWORD *__return_ptr, char *))(v36 + *(int *)(v35 + 36)))(v39, v8);
      v30 = v23[2];
      v29 = v23[3];
      if (v30 >= v29 >> 1)
        v23 = sub_19CED67A4((_QWORD *)(v29 > 1), v30 + 1, 1, v23);
      v23[2] = v30 + 1;
      v31 = &v23[5 * v30];
      v32 = v39[0];
      v33 = v39[1];
      v31[8] = v40;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      v5 = v28;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, AssociatedTypeWitness);
      sub_19CFDFFBC();
    }
    while (v25(v12, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v38);
  return v23;
}

uint64_t sub_19CE75CB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a1 + 24) + 32))(a2, *(_QWORD *)(a1 + 16));
}

uint64_t sub_19CE75CC8(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[5];
  uint64_t v41;

  v28[1] = a2;
  v34 = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  v39 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  v35 = v4;
  v32 = *(_QWORD *)(v5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v8);
  v10 = (char *)v28 - v9;
  v11 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)v28 - v13;
  v36 = *(char **)(v6 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v29 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v18);
  v20 = (char *)v28 - v19;
  v41 = sub_19CFDF398();
  v21 = v30;
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  v33 = sub_19CFDF938();
  sub_19CFDF89C();
  (*((void (**)(char *, uint64_t, uint64_t))v36 + 2))(v29, v21, v6);
  sub_19CFDF770();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = v20;
  sub_19CFDFFBC();
  v23 = v37;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v24(v14, 1, AssociatedTypeWitness) == 1)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v38);
    return v41;
  }
  else
  {
    v32 = AssociatedConformanceWitness;
    v25 = v21;
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    while (1)
    {
      v26(v10, v14, AssociatedTypeWitness);
      (*(void (**)(_QWORD *__return_ptr, char *))(v25 + *(int *)(v35 + 36)))(v40, v10);
      v34(v40);
      if (v2)
        break;
      sub_19CFDF908();
      sub_19CD3E3F8((uint64_t)v40);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v10, AssociatedTypeWitness);
      sub_19CFDFFBC();
      if (v24(v14, 1, AssociatedTypeWitness) == 1)
        goto LABEL_5;
    }
    sub_19CD3E3F8((uint64_t)v40);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v38);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19CE76048(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  char *v36;
  char *v37;
  unsigned int (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unsigned int (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  void (*v63)(_QWORD *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[6];
  uint64_t v73;

  v63 = a1;
  v64 = a2;
  v7 = sub_19CFDFF5C();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v71 = (char *)&v52 - v9;
  v52 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v58 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v57 = (char *)&v52 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(a3 + 24);
  v65 = a3;
  v18 = v16;
  v62 = *(_QWORD *)(v16 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v68 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v20);
  v69 = (char *)&v52 - v21;
  v22 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v22, v23);
  v53 = (char *)&v52 - v24;
  v67 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (char *)&v52 - v31;
  v73 = sub_19CFDF398();
  v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  v33 = sub_19CFDF938();
  sub_19CFDF89C();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v66 = v4;
  v34(v28, v4, v17);
  sub_19CFDF770();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = v53;
  v67 = v29;
  v62 = AssociatedConformanceWitness;
  sub_19CFDFFBC();
  v37 = v36;
  v38 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v68 + 48);
  v39 = AssociatedTypeWitness;
  if (v38(v37, 1, AssociatedTypeWitness) == 1)
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v67);
    return v73;
  }
  else
  {
    v56 = v33;
    v61 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v41 = v52;
    v55 = v38;
    v42 = v57;
    while (1)
    {
      v43 = v69;
      v61(v69, v37, v39);
      (*(void (**)(_QWORD *__return_ptr, char *))(v66 + *(int *)(v65 + 36)))(v72, v43);
      v44 = v70;
      v63(v72);
      v70 = v44;
      if (v44)
        break;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v71, 1, a4) == 1)
      {
        sub_19CD3E3F8((uint64_t)v72);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v39);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v71, v60);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v42, v71, a4);
        v45 = v32;
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v58, v42, a4);
        v46 = v39;
        v48 = v68;
        v47 = v69;
        sub_19CFDF908();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, a4);
        sub_19CD3E3F8((uint64_t)v72);
        v49 = *(void (**)(char *, uint64_t))(v48 + 8);
        v32 = v45;
        v50 = v47;
        v39 = v46;
        v51 = v46;
        v38 = v55;
        v49(v50, v51);
      }
      sub_19CFDFFBC();
      if (v38(v37, 1, v39) == 1)
        goto LABEL_2;
    }
    sub_19CD3E3F8((uint64_t)v72);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v39);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v67);
    return swift_bridgeObjectRelease();
  }
}

_QWORD *sub_19CE76500(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  _QWORD *v27;
  char *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t (*v42)(_QWORD *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  _QWORD v48[5];
  uint64_t v49;

  v42 = a1;
  v43 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v44 = a3;
  v45 = *(_QWORD *)(v4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v7);
  v9 = (char *)&v36 - v8;
  v10 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v36 - v12;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)&v36 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v18, v49, v5, v21);
  sub_19CFDF770();
  v24 = v39;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v38 = v23;
  v45 = v19;
  v41 = AssociatedConformanceWitness;
  sub_19CFDFFBC();
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v26(v13, 1, AssociatedTypeWitness) == 1)
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v28 = v38;
LABEL_3:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v45);
  }
  else
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v28 = v38;
    v40(v9, v13, AssociatedTypeWitness);
    while (1)
    {
      (*(void (**)(_QWORD *__return_ptr, char *))(v49 + *(int *)(v44 + 36)))(v48, v9);
      v29 = v42(v48);
      if (v3)
        break;
      if ((v29 & 1) != 0)
      {
        sub_19CD3E448((uint64_t)v48, (uint64_t)v46);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_19CED67A4(0, v27[2] + 1, 1, v27);
        v31 = v27[2];
        v30 = v27[3];
        if (v31 >= v30 >> 1)
          v27 = sub_19CED67A4((_QWORD *)(v30 > 1), v31 + 1, 1, v27);
        v27[2] = v31 + 1;
        v32 = &v27[5 * v31];
        v33 = v46[0];
        v34 = v46[1];
        v32[8] = v47;
        *((_OWORD *)v32 + 2) = v33;
        *((_OWORD *)v32 + 3) = v34;
        sub_19CD3E3F8((uint64_t)v48);
        v24 = v39;
      }
      else
      {
        sub_19CD3E3F8((uint64_t)v48);
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, AssociatedTypeWitness);
      sub_19CFDFFBC();
      if (v26(v13, 1, AssociatedTypeWitness) == 1)
        goto LABEL_3;
      v40(v9, v13, AssociatedTypeWitness);
    }
    sub_19CD3E3F8((uint64_t)v48);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v45);
    swift_bridgeObjectRelease();
  }
  return v27;
}

uint64_t sub_19CE76884@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, _QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(uint64_t, _QWORD *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];
  uint64_t v54;

  v54 = a4;
  v45 = a2;
  v46 = a3;
  v49 = a1;
  v52 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v8 + 16);
  v9 = *(_QWORD *)(v8 + 24);
  v47 = v8;
  v44 = *(void (**)(char *, char *, uint64_t))(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v14 = (char *)&v40 - v13;
  v15 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v40 - v17;
  v48 = *(char **)(v10 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)&v40 - v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v52 + 16))(a5, v49, v54, v25);
  v28 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v48 + 2);
  v43 = v10;
  v28(v22, v51, v10);
  sub_19CFDF770();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v48 = v27;
  v49 = v23;
  sub_19CFDFFBC();
  v30 = v50;
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v31(v18, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v48, v49);
  v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v43 = AssociatedConformanceWitness;
  v44 = v32;
  v33 = v41;
  while (1)
  {
    v44(v14, v18, AssociatedTypeWitness);
    (*(void (**)(_QWORD *__return_ptr, char *))(v51 + *(int *)(v47 + 36)))(v53, v14);
    v45(a5, v53);
    if (v5)
      break;
    sub_19CD3E3F8((uint64_t)v53);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v14, AssociatedTypeWitness);
    v34 = v31;
    v35 = v33;
    v36 = v52;
    v37 = v54;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(a5, v54);
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
    v33 = v35;
    v31 = v34;
    v38(a5, v33, v37);
    sub_19CFDFFBC();
    if (v34(v18, 1, AssociatedTypeWitness) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v48, v49);
  }
  sub_19CD3E3F8((uint64_t)v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v49);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(a5, v54);
}

uint64_t sub_19CE76BF4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[5];
  uint64_t v38;

  v29[1] = a2;
  v33 = a1;
  v34 = a3;
  v4 = *(_QWORD *)(a3 + 16);
  v36 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  v8 = (char *)v29 - v7;
  v9 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v29 - v11;
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)v29 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v17, v31, v4, v20);
  sub_19CFDF770();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v35 = v22;
  v36 = v18;
  sub_19CFDFFBC();
  v24 = v38;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v25(v12, 1, AssociatedTypeWitness) != 1)
  {
    v32 = AssociatedConformanceWitness;
    v26 = v31;
    v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    while (1)
    {
      v27(v8, v12, AssociatedTypeWitness);
      (*(void (**)(_QWORD *__return_ptr, char *))(v26 + *(int *)(v34 + 36)))(v37, v8);
      v33(v37);
      if (v3)
        break;
      sub_19CD3E3F8((uint64_t)v37);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, AssociatedTypeWitness);
      sub_19CFDFFBC();
      if (v25(v12, 1, AssociatedTypeWitness) == 1)
        return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v35, v36);
    }
    sub_19CD3E3F8((uint64_t)v37);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, AssociatedTypeWitness);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v35, v36);
}

BOOL sub_19CE76EA0(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  int v23;
  char v24;
  char v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t (*v29)(_QWORD *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  char *v34;

  v31 = a3;
  v29 = a1;
  v30 = a2;
  v4 = *(_QWORD *)(a3 + 16);
  v27[1] = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v7);
  v9 = (char *)v27 - v8;
  v10 = sub_19CFDFF5C();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v27 - v12;
  v34 = *(char **)(v4 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)v27 - v21;
  (*((void (**)(char *, uint64_t, uint64_t, double))v34 + 2))(v17, v32, v4, v20);
  v34 = v22;
  sub_19CFDF770();
  swift_getAssociatedConformanceWitness();
  do
  {
    sub_19CFDFFBC();
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, AssociatedTypeWitness);
    if (v23 == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, AssociatedTypeWitness);
    (*(void (**)(_QWORD *__return_ptr, char *))(v32 + *(int *)(v31 + 36)))(v33, v9);
    v24 = v29(v33);
    if (v3)
    {
      sub_19CD3E3F8((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
      break;
    }
    v25 = v24;
    sub_19CD3E3F8((uint64_t)v33);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
  }
  while ((v25 & 1) == 0);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v18);
  return v23 != 1;
}

uint64_t sub_19CE77138(uint64_t a1, uint64_t a2)
{
  return sub_19CE75CB4(a2, a1);
}

uint64_t sub_19CE77148(void (*a1)(_QWORD *), uint64_t a2)
{
  return sub_19CE75CC8(a1, a2);
}

uint64_t sub_19CE77168(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19CE76048(a1, a2, a4, a3);
}

_QWORD *sub_19CE77188(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_19CE76500(a1, a2, a3);
}

uint64_t sub_19CE7719C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, _QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_19CE76884(a1, a2, a3, a4, a5);
}

uint64_t sub_19CE771BC(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_19CE76BF4(a1, a2, a3);
}

BOOL sub_19CE771D0(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_19CE76EA0(a1, a2, a3);
}

uint64_t sub_19CE771E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CE77260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_19CE77310(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_19CE77350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_19CE773B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CE7741C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19CE77478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_19CE774DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_19CE77558 + 4 * byte_19D05A918[v10]))();
  }
}

void sub_19CE775DC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_19CE776D0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x19CE77748);
}

void sub_19CE776D8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19CE776E0);
  JUMPOUT(0x19CE77748);
}

void sub_19CE77720()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x19CE77748);
}

void sub_19CE77728()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x19CE77748);
}

uint64_t sub_19CE77730(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x19CE77748);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x19CE77744);
    JUMPOUT(0x19CE7773CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for BaseArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseArray);
}

uint64_t sub_19CE7776C(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  v5 = v2 - 1;
  v6 = (v2 << 6) | 0x18;
  v7 = 11;
  v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5)
      goto LABEL_4;
    v8 = v1[2];
    if (v3 >= v8)
      break;
    if (v5 >= v8)
      goto LABEL_13;
    v9 = v1[v7 - 6];
    v10 = v1[v7 - 4];
    v21 = v1[v7 - 5];
    v22 = v1[v7 - 7];
    v20 = v1[v7 - 3];
    v19 = v1[v7 - 2];
    v18 = v1[v7 - 1];
    v17 = v1[v7];
    v11 = *(_QWORD *)((char *)v1 + v6 - 48);
    v27 = *(_QWORD *)((char *)v1 + v6 - 56);
    v12 = *(_QWORD *)((char *)v1 + v6 - 32);
    v26 = *(_QWORD *)((char *)v1 + v6 - 40);
    v13 = *(_QWORD *)((char *)v1 + v6 - 24);
    v25 = *((_BYTE *)v1 + v6 - 16);
    v24 = *(_QWORD *)((char *)v1 + v6 - 8);
    v23 = *((_BYTE *)v1 + v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_19CF81A50(v1);
    v14 = &v1[v7];
    *((_QWORD *)v14 - 7) = v27;
    *((_QWORD *)v14 - 6) = v11;
    *((_QWORD *)v14 - 5) = v26;
    *((_QWORD *)v14 - 4) = v12;
    *((_QWORD *)v14 - 3) = v13;
    *(v14 - 16) = v25;
    *((_QWORD *)v14 - 1) = v24;
    *v14 = v23;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v5 >= v1[2])
      goto LABEL_14;
    v15 = (char *)v1 + v6;
    *((_QWORD *)v15 - 7) = v22;
    *((_QWORD *)v15 - 6) = v9;
    *((_QWORD *)v15 - 5) = v21;
    *((_QWORD *)v15 - 4) = v10;
    *((_QWORD *)v15 - 3) = v20;
    *(v15 - 16) = v19;
    *((_QWORD *)v15 - 1) = v18;
    *v15 = v17;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v4 = v16;
LABEL_4:
    ++v3;
    v7 += 8;
    --v5;
    v6 -= 64;
    if (v4 == v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

double sub_19CE77970@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = a2;
  v29 = a1[9];
  v3 = (void *)a1[10];
  if (a1[12])
  {
    v4 = a1[11];
    v5 = a1[12];
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x726F727245;
  }
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[6];
  v30 = a1[7];
  if (v29)
  {
    v25 = a1[6];
    v26 = *a1;
    v27 = (void *)a1[10];
    v28 = a1[1];
    v9 = *(_QWORD *)(v29 + 16);
    if (v9)
    {
      v22 = v5;
      v23 = v4;
      v36 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19CE4A374(0, v9, 0);
      v10 = v36;
      v11 = v29 + 48;
      do
      {
        if (*(_QWORD *)(v11 - 8))
        {
          v34 = *(_QWORD *)(v11 - 8);
          v35 = *(_QWORD *)(v11 - 16);
        }
        else
        {
          v34 = 0xE800000000000000;
          v35 = 0x296C61626F6C6728;
        }
        v12 = *(_QWORD *)(v11 + 8);
        v32 = *(_QWORD *)(v11 + 16);
        v31 = *(_BYTE *)(v11 + 24);
        v13 = *(_QWORD *)(v11 + 32);
        v33 = *(_BYTE *)(v11 + 40);
        if (v12)
          v14 = *(_QWORD *)v11;
        else
          v14 = 0x296C61626F6C6728;
        if (v12)
          v15 = *(_QWORD *)(v11 + 8);
        else
          v15 = 0xE800000000000000;
        v16 = *(_QWORD *)(v36 + 16);
        v17 = *(_QWORD *)(v36 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 >= v17 >> 1)
          sub_19CE4A374(v17 > 1, v16 + 1, 1);
        *(_QWORD *)(v36 + 16) = v16 + 1;
        v18 = v36 + (v16 << 6);
        *(_QWORD *)(v18 + 32) = v35;
        *(_QWORD *)(v18 + 40) = v34;
        *(_QWORD *)(v18 + 48) = v14;
        *(_QWORD *)(v18 + 56) = v15;
        *(_QWORD *)(v18 + 64) = v32;
        *(_BYTE *)(v18 + 72) = v31;
        *(_QWORD *)(v18 + 80) = v13;
        v11 += 64;
        *(_BYTE *)(v18 + 88) = v33;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v4 = v23;
      v2 = a2;
      v5 = v22;
      v7 = v28;
      v19 = v30;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = v30;
      swift_bridgeObjectRetain();
      v10 = MEMORY[0x1E0DEE9D8];
    }
    v20 = sub_19CE7776C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v8 = v25;
    v6 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v20 = 0;
    v19 = v30;
  }
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v5;
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v7;
  *(_QWORD *)(v2 + 32) = v8;
  *(_QWORD *)(v2 + 40) = v19;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  result = 4.82410885e228;
  *(_OWORD *)(v2 + 64) = xmmword_19D05A9C0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_WORD *)(v2 + 112) = 514;
  *(_QWORD *)(v2 + 120) = v20;
  return result;
}

void sub_19CE77C34(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int16 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[3];
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t DynamicType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int16 v37;
  uint64_t v38;

  v19[0] = (uint64_t)a1;
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19[0] = DynamicType;
    v19[1] = v29;
    v19[2] = v30;
    v20 = v31;
    v21 = v32;
    v22 = BYTE8(v32);
    v23 = v33;
    v24 = v34;
    v25 = v35;
    v26 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = (id)v35;
    sub_19CE77970(v19, (uint64_t)&DynamicType);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v38;
    v7 = v34;
    v8 = v35;
    v9 = v36;
    v10 = v37;
    v11 = v32;
    v12 = v33;
    v13 = v30;
    v14 = v31;
    v15 = DynamicType;
    v16 = v29;
  }
  else
  {
    swift_getErrorValue();
    DynamicType = swift_getDynamicType();
    v29 = v27;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE436CD0);
    v15 = sub_19CFDF5E4();
    v16 = v17;
    swift_getErrorValue();
    v13 = sub_19CFE0868();
    v14 = v18;

    v6 = 0;
    v7 = xmmword_19D05A9D0;
    v11 = 0uLL;
    v10 = 514;
    v12 = 0uLL;
    v8 = 0uLL;
    v9 = 0uLL;
  }
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v16;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_OWORD *)(a2 + 32) = v11;
  *(_OWORD *)(a2 + 48) = v12;
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 96) = v9;
  *(_WORD *)(a2 + 112) = v10;
  *(_QWORD *)(a2 + 120) = v6;
}

double sub_19CE77E3C@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = a2;
  v3 = *a1;
  v4 = *((_QWORD *)a1 + 9);
  if (v4)
  {
    v22 = *a1;
    v5 = *(_QWORD *)(v4 + 16);
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v29 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_19CE4A374(0, v5, 0);
      v6 = v29;
      v7 = v4 + 48;
      do
      {
        if (*(_QWORD *)(v7 - 8))
        {
          v26 = *(_QWORD *)(v7 - 8);
          v27 = *(_QWORD *)(v7 - 16);
        }
        else
        {
          v26 = 0xE800000000000000;
          v27 = 0x296C61626F6C6728;
        }
        v8 = *(_QWORD *)(v7 + 8);
        v9 = *(_BYTE *)(v7 + 24);
        v23 = *(_QWORD *)(v7 + 32);
        v24 = *(_QWORD *)(v7 + 16);
        v25 = *(_BYTE *)(v7 + 40);
        if (v8)
          v10 = *(_QWORD *)v7;
        else
          v10 = 0x296C61626F6C6728;
        if (v8)
          v11 = *(_QWORD *)(v7 + 8);
        else
          v11 = 0xE800000000000000;
        v12 = *(_QWORD *)(v29 + 16);
        v13 = *(_QWORD *)(v29 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 >= v13 >> 1)
          sub_19CE4A374(v13 > 1, v12 + 1, 1);
        *(_QWORD *)(v29 + 16) = v12 + 1;
        v14 = v29 + (v12 << 6);
        *(_QWORD *)(v14 + 32) = v27;
        *(_QWORD *)(v14 + 40) = v26;
        *(_QWORD *)(v14 + 48) = v10;
        *(_QWORD *)(v14 + 56) = v11;
        *(_QWORD *)(v14 + 64) = v24;
        *(_BYTE *)(v14 + 72) = v9;
        *(_QWORD *)(v14 + 80) = v23;
        v7 += 64;
        *(_BYTE *)(v14 + 88) = v25;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v2 = a2;
    }
    v28 = sub_19CE7776C(v6);
    v3 = v22;
  }
  else
  {
    v28 = 0;
  }
  if (v3)
    v15 = 0x20676E697373696DLL;
  else
    v15 = 0x6570797420646162;
  if (v3)
    v16 = 0xED000065756C6176;
  else
    v16 = 0xE800000000000000;
  v17 = JSIncident.problemSummary.getter();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v2 = v15;
  *(_QWORD *)(v2 + 8) = v16;
  *(_QWORD *)(v2 + 16) = v17;
  *(_QWORD *)(v2 + 24) = v19;
  result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_QWORD *)(v2 + 64) = 0xD000000000000012;
  *(_QWORD *)(v2 + 72) = 0x800000019D072A40;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_WORD *)(v2 + 112) = 514;
  *(_QWORD *)(v2 + 120) = v28;
  return result;
}

uint64_t destroy for DelegatingStateStoreHandle()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DelegatingStateStoreHandle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DelegatingStateStoreHandle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DelegatingStateStoreHandle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DelegatingStateStoreHandle()
{
  return &type metadata for DelegatingStateStoreHandle;
}

uint64_t sub_19CE78218()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19CE78294(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_19CE78350(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_19CE78394(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  return a1;
}

_QWORD *sub_19CE78404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_19CE78474(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_19CE784C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_19CE7852C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CE78600 + 4 * byte_19D05A9E0[(v9 - 1)]))();
}

void sub_19CE78670(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for StateStoreHandle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateStoreHandle);
}

uint64_t sub_19CE78870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = *a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for StateStoreHandle(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t sub_19CE788CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a1 + 24) + 32))(&v5, a2, a3, *(_QWORD *)(a1 + 16));
}

uint64_t sub_19CE78910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1, a2);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(v11, v3 + *(int *)(v12 + 36), v7, v9);
  v15 = a1;
  v16 = a2;
  StateStore.performTransaction<A>(_:)((uint64_t)sub_19CD34AA4, (uint64_t)v14, v7, MEMORY[0x1E0DEE9C0] + 8, *(_QWORD *)(a3 + 24));
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_19CE789E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  return (*(uint64_t (**)(uint64_t *, uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 40))(&v4, a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_19CE78A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE788CC(a3, a1, a2);
}

uint64_t sub_19CE78A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE78910(a1, a2, a3);
}

uint64_t sub_19CE78A60@<X0>(void (*a1)(_QWORD *__return_ptr, double)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  uint64_t DynamicType;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  Swift::String v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[32];
  _QWORD v41[3];
  uint64_t MetatypeMetadata;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  char v46;
  _QWORD v47[5];

  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v38 - v12;
  a1(v47, v11);
  sub_19CCD5B84((uint64_t)v47, (uint64_t)&v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43C2E0);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(a2 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v14)
  {
    v16(v13, 0, 1, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v13, a2);
  }
  else
  {
    v16(v13, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    if (qword_1EE43BE78 != -1)
      swift_once();
    v18 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19D052350;
    v20 = v18;
    v43 = sub_19CD40918(0, 16, 0, MEMORY[0x1E0DEE9D8]);
    v21._countAndFlagsBits = 0x206574617453;
    v21._object = (void *)0xE600000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    __swift_project_boxed_opaque_existential_1(v47, v47[3]);
    DynamicType = swift_getDynamicType();
    MetatypeMetadata = swift_getMetatypeMetadata();
    v41[0] = DynamicType;
    sub_19CD40794((uint64_t)v41, (uint64_t)v40);
    v39 = 0u;
    v38 = 0u;
    sub_19CD40658((uint64_t)v40, (uint64_t)&v38);
    v46 = 0;
    v44 = v38;
    v45 = v39;
    v23 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
    v25 = v23[2];
    v24 = v23[3];
    if (v25 >= v24 >> 1)
      v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v23[2] = v25 + 1;
    v26 = &v23[5 * v25];
    v27 = v44;
    v28 = v45;
    *((_BYTE *)v26 + 64) = v46;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = v28;
    v43 = v23;
    sub_19CD3F190((uint64_t)v41);
    v29._countAndFlagsBits = 0x6F6E2073656F6420;
    v29._object = (void *)0xE900000000000074;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    *(_QWORD *)(v19 + 32) = v43;
    v43 = sub_19CD40918(0, 20, 0, MEMORY[0x1E0DEE9D8]);
    v30._object = (void *)0x800000019D072A60;
    v30._countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    MetatypeMetadata = swift_getMetatypeMetadata();
    v41[0] = a2;
    sub_19CD40794((uint64_t)v41, (uint64_t)v40);
    v39 = 0u;
    v38 = 0u;
    sub_19CD40658((uint64_t)v40, (uint64_t)&v38);
    v46 = 0;
    v44 = v38;
    v45 = v39;
    v31 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_19CD40918(0, v31[2] + 1, 1, v31);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_19CD40918((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v31[2] = v33 + 1;
    v34 = &v31[5 * v33];
    v35 = v44;
    v36 = v45;
    *((_BYTE *)v34 + 64) = v46;
    *((_OWORD *)v34 + 2) = v35;
    *((_OWORD *)v34 + 3) = v36;
    v43 = v31;
    sub_19CD3F190((uint64_t)v41);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *(_QWORD *)(v19 + 40) = v43;
    *(_QWORD *)&v44 = v20;
    LOBYTE(v38) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v38);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
  }
}

uint64_t sub_19CE78EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (**v3)(_QWORD *__return_ptr, double);

  return sub_19CE78A60(*v3, a1, a2, a3);
}

uint64_t sub_19CE78EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_19CFDEFA8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF9C();
  v5 = sub_19CFDEF90();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_1EE465C28 = v5;
  unk_1EE465C30 = v7;
  return result;
}

uint64_t sub_19CE78F48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  void *v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[32];
  __int128 v38;
  __int128 v39;
  char v40;
  _QWORD v41[6];

  v1 = v0;
  v41[4] = *MEMORY[0x1E0C80C00];
  v2 = &unk_1EE465000;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9JetEngine33JetPackResourceBundleDiskLocation_automaticallyCleanUp) == 1)
  {
    if (qword_1ECEB2C88 != -1)
      swift_once();
    v3 = (void *)qword_1ECEB29D0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
    v5 = v3;
    v34 = sub_19CD40918(0, 23, 0, MEMORY[0x1E0DEE9D8]);
    v6._object = (void *)0x800000019D072AE0;
    v6._countAndFlagsBits = 0xD000000000000016;
    LogMessage.StringInterpolation.appendLiteral(_:)(v6);
    v7 = sub_19CFDED8C();
    v41[3] = MEMORY[0x1E0DEA968];
    v41[0] = v7;
    v41[1] = v8;
    sub_19CD40794((uint64_t)v41, (uint64_t)v37);
    v35 = 0u;
    v36 = 0u;
    sub_19CD40658((uint64_t)v37, (uint64_t)&v35);
    v40 = 0;
    v38 = v35;
    v39 = v36;
    v9 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_19CD40918(0, v34[2] + 1, 1, v34);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    v12 = &v9[5 * v11];
    v13 = v38;
    v14 = v39;
    *((_BYTE *)v12 + 64) = v40;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    sub_19CD3F190((uint64_t)v41);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(_QWORD *)(v4 + 32) = v9;
    *(_QWORD *)&v38 = v5;
    LOBYTE(v35) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v35);

    swift_bridgeObjectRelease();
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_defaultManager);
    sub_19CFDED8C();
    v18 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if (v19)
    {
      v20 = objc_msgSend(v16, sel_defaultManager);
      sub_19CFDED8C();
      v21 = (void *)sub_19CFDF554();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v38 = 0;
      v22 = objc_msgSend(v20, sel_removeItemAtPath_error_, v21, &v38);

      v2 = &unk_1EE465000;
      if (v22)
      {
        v23 = (id)v38;
      }
      else
      {
        v29 = (id)v38;
        v30 = (void *)sub_19CFDEC9C();

        swift_willThrow();
      }
    }
    else
    {
      v24 = (void *)qword_1ECEB29D0;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19D0522A0;
      *((_QWORD *)&v36 + 1) = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v35 = 0xD000000000000025;
      *((_QWORD *)&v35 + 1) = 0x800000019D072B00;
      v38 = 0u;
      v39 = 0u;
      v27 = v24;
      sub_19CD40658((uint64_t)&v35, (uint64_t)&v38);
      *(_BYTE *)(v26 + 64) = 0;
      v28 = v39;
      *(_OWORD *)(v26 + 32) = v38;
      *(_OWORD *)(v26 + 48) = v28;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)&v38 = v27;
      LOBYTE(v35) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v35);

      swift_bridgeObjectRelease();
      v2 = (_QWORD *)&unk_1EE465000;
    }
  }
  v31 = v1 + v2[391];
  v32 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  return v1;
}

uint64_t sub_19CE79378()
{
  sub_19CE78F48();
  return swift_deallocClassInstance();
}

uint64_t sub_19CE7939C()
{
  return type metadata accessor for JetPackResourceBundleDiskLocation();
}

uint64_t sub_19CE793A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_19CE79418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unsigned int v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  __int128 v45;
  id v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[6];

  v59[4] = *MEMORY[0x1E0C80C00];
  v3 = sub_19CFDEDE0();
  v56 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v54 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v48 - v8;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v48 - v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  *(_QWORD *)&v55 = a1;
  sub_19CFDED38();
  sub_19CFDED8C();
  v15 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  LODWORD(a1) = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((_DWORD)a1)
  {
    sub_19CFDED8C();
    v16 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v57 = 0;
    v17 = objc_msgSend(v14, sel_contentsOfDirectoryAtPath_error_, v16, &v57);

    v18 = (void *)v57;
    if (!v17)
    {
      v46 = (id)v57;
      sub_19CFDEC9C();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v13, v3);
    }
    v50 = v13;
    v19 = sub_19CFDF86C();
    v20 = v18;

    v21 = v19;
    v22 = *(_QWORD *)(v19 + 16);
    if (v22)
    {
      v52 = v14;
      v53 = v3;
      v49 = v1;
      v48[1] = v21;
      v23 = (uint64_t *)(v21 + 40);
      v24 = &unk_1EE43A000;
      v51 = 0x800000019D072B30;
      do
      {
        v26 = *(v23 - 1);
        v25 = *v23;
        v27 = v24[511];
        swift_bridgeObjectRetain();
        if (v27 != -1)
          swift_once();
        v28 = v26 == qword_1EE465C28 && v25 == unk_1EE465C30;
        if (v28 || (sub_19CFE06A0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v29 = v54;
          sub_19CFDED38();
          sub_19CFDED38();
          v30 = *(void (**)(char *, uint64_t))(v56 + 8);
          v31 = v29;
          v32 = v24;
          v33 = v53;
          v30(v31, v53);
          swift_bridgeObjectRelease();
          sub_19CFDED8C();
          v34 = v33;
          v24 = v32;
          v30(v9, v34);
          v35 = (void *)sub_19CFDF554();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v57 = 0;
          v36 = objc_msgSend(v52, sel_removeItemAtPath_error_, v35, &v57);

          v37 = (id)v57;
          if (!v36)
          {
            v38 = v37;
            v39 = (void *)sub_19CFDEC9C();

            swift_willThrow();
            v49 = 0;
          }
        }
        v23 += 2;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();

      v3 = v53;
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    v50 = v13;
    if (qword_1ECEB2C88 != -1)
      swift_once();
    v40 = (void *)qword_1ECEB29D0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v41 = swift_allocObject();
    v55 = xmmword_19D0522A0;
    *(_OWORD *)(v41 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v42 = swift_allocObject();
    v43 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v42 + 16) = v55;
    v59[3] = v43;
    v59[0] = 0xD000000000000039;
    v59[1] = 0x800000019D072B50;
    v57 = 0u;
    v58 = 0u;
    v44 = v40;
    sub_19CD40658((uint64_t)v59, (uint64_t)&v57);
    *(_BYTE *)(v42 + 64) = 0;
    v45 = v58;
    *(_OWORD *)(v42 + 32) = v57;
    *(_OWORD *)(v42 + 48) = v45;
    *(_QWORD *)(v41 + 32) = v42;
    *(_QWORD *)&v57 = v44;
    LOBYTE(v59[0]) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v41, (JetEngine::LogMessageLevel)v59);

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v50, v3);
}

uint64_t sub_19CE79900(void (*a1)(_QWORD *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE __dst[344];
  id v16;
  _QWORD __src[44];
  uint64_t v18;

  v4 = v3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_19CFE0394();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_19CD3B2CC(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v7 = v18;
    while (1)
    {
      v10 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A1ADA390](v9, a3) : *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v16 = v10;
      a1(__src, &v16);
      if (v4)
        break;
      v4 = 0;

      memcpy(__dst, __src, sizeof(__dst));
      v18 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_19CD3B2CC(v12 > 1, v13 + 1, 1);
        v7 = v18;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v13 + 1;
      memcpy((void *)(v7 + 344 * v13 + 32), __dst, 0x158uLL);
      if (v6 == v9)
        return v7;
    }
    swift_release();

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t NetResponse.netResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CE79A9C(v1, a1);
}

uint64_t sub_19CE79A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE79AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CE79A9C(v1, a1);
}

unint64_t sub_19CE79AEC(uint64_t a1)
{
  return sub_19CD23644(a1, (uint64_t (*)())sub_19CD3FD1C);
}

uint64_t sub_19CE79AF8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN **v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  _QWORD v50[5];
  __int128 v51;
  __int128 v52;
  _QWORD v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v2 = sub_19CFDEFA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v50[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_19CCE5204(0, (unint64_t *)&unk_1EE43C838);
  v55 = &off_1E3DDB320;
  v53[0] = a1;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  v7 = a1;
  v8 = sub_19CF470A8();
  if (v8)
  {
    v9 = v8;
    v10 = v54;
    v11 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    v12 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v11[1])(v10, v11);
    if (v13)
    {
      v14 = v12;
      v15 = v13;
    }
    else
    {
      strcpy((char *)v50, "no-load-url::");
      HIWORD(v50[1]) = -4864;
      sub_19CFDEF9C();
      sub_19CFDEF90();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      sub_19CFDF698();
      swift_bridgeObjectRelease();
      v14 = v50[0];
      v15 = v50[1];
    }
    v17 = v54;
    v18 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    v19 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v18[2])(v17, v18);
    v49 = v14;
    if (v19)
    {
      v20 = v19;
      *(_QWORD *)&v51 = 0x65686361632D78;
      *((_QWORD *)&v51 + 1) = 0xE700000000000000;
      sub_19CFE00C4();
      if (*(_QWORD *)(v20 + 16) && (v21 = sub_19CD20240((uint64_t)v50), (v22 & 1) != 0))
      {
        sub_19CD436B0(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v51);
      }
      else
      {
        v51 = 0u;
        v52 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_19CD20334((uint64_t)v50);
      if (*((_QWORD *)&v52 + 1))
      {
        v23 = swift_dynamicCast();
        if (v23)
          v24 = v50[0];
        else
          v24 = 0;
        if (v23)
          v25 = v50[1];
        else
          v25 = 0;
LABEL_20:
        v26 = v54;
        v27 = v55;
        __swift_project_boxed_opaque_existential_1(v53, v54);
        v28 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v27[2])(v26, v27);
        if (v28)
        {
          v29 = v28;
          *(_QWORD *)&v51 = 0xD000000000000018;
          *((_QWORD *)&v51 + 1) = 0x800000019D072BB0;
          sub_19CFE00C4();
          if (*(_QWORD *)(v29 + 16) && (v30 = sub_19CD20240((uint64_t)v50), (v31 & 1) != 0))
          {
            sub_19CD436B0(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)&v51);
          }
          else
          {
            v51 = 0u;
            v52 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_19CD20334((uint64_t)v50);
          if (*((_QWORD *)&v52 + 1))
          {
            v32 = swift_dynamicCast();
            if (v32)
              v33 = v50[0];
            else
              v33 = 0;
            if (v32)
              v34 = v50[1];
            else
              v34 = 0;
LABEL_34:
            v35 = v54;
            v36 = v55;
            __swift_project_boxed_opaque_existential_1(v53, v54);
            v37 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v36[2])(v35, v36);
            if (v37)
            {
              v38 = v37;
              *(_QWORD *)&v51 = 0xD000000000000010;
              *((_QWORD *)&v51 + 1) = 0x800000019D072B90;
              sub_19CFE00C4();
              if (*(_QWORD *)(v38 + 16) && (v39 = sub_19CD20240((uint64_t)v50), (v40 & 1) != 0))
              {
                sub_19CD436B0(*(_QWORD *)(v38 + 56) + 32 * v39, (uint64_t)&v51);
              }
              else
              {
                v51 = 0u;
                v52 = 0u;
              }
              swift_bridgeObjectRelease();
              sub_19CD20334((uint64_t)v50);
              if (*((_QWORD *)&v52 + 1))
              {
                v41 = swift_dynamicCast();
                if (v41)
                  v42 = v50[0];
                else
                  v42 = 0;
                if (v41)
                  v43 = v50[1];
                else
                  v43 = 0;
                goto LABEL_48;
              }
            }
            else
            {
              v51 = 0u;
              v52 = 0u;
            }
            sub_19CCECFE4((uint64_t)&v51, &qword_1ECEB3370);
            v42 = 0;
            v43 = 0;
LABEL_48:
            v44 = objc_msgSend(v9, sel_transactionMetrics, v49);
            sub_19CCE5204(0, (unint64_t *)&unk_1ECEB24B0);
            v45 = sub_19CFDF86C();

            MEMORY[0x1E0C80A78](v46, v47);
            *(&v49 - 10) = v49;
            *(&v49 - 9) = v15;
            *(&v49 - 8) = (uint64_t)v53;
            *(&v49 - 7) = v24;
            *(&v49 - 6) = v25;
            *(&v49 - 5) = v33;
            *(&v49 - 4) = v34;
            *(&v49 - 3) = v42;
            *(&v49 - 2) = v43;
            v16 = sub_19CE79900((void (*)(_QWORD *__return_ptr, id *))sub_19CE7A060, (uint64_t)(&v49 - 12), v45);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_49;
          }
        }
        else
        {
          v51 = 0u;
          v52 = 0u;
        }
        sub_19CCECFE4((uint64_t)&v51, &qword_1ECEB3370);
        v33 = 0;
        v34 = 0;
        goto LABEL_34;
      }
    }
    else
    {
      v51 = 0u;
      v52 = 0u;
    }
    sub_19CCECFE4((uint64_t)&v51, &qword_1ECEB3370);
    v24 = 0;
    v25 = 0;
    goto LABEL_20;
  }
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_49:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
  return v16;
}

uint64_t dispatch thunk of CustomNetResponseConvertible.netResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

char *sub_19CE7A060@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19CF472C0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(void (***)(uint64_t, uint64_t))(v2 + 80));
}

uint64_t sub_19CE7A09C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_19CCDBC4C((uint64_t)&unk_1E3DC77E0);
  qword_1ECEB52F8 = result;
  unk_1ECEB5300 = v1;
  return result;
}

uint64_t sub_19CE7A0C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 v14;
  unsigned __int8 v15;
  uint64_t v16;
  __int16 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  __int128 v20;
  __int128 v21;
  char __src;
  unsigned __int8 v23[8];
  __int128 v24;
  __int16 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    sub_19CE7A5A8();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v4 = *(_BYTE *)a1;
    v5 = *(_BYTE *)(a1 + 1);
    v6 = *(_BYTE *)(a1 + 2);
    v18 = *(_BYTE *)(a1 + 4);
    v19 = *(_BYTE *)(a1 + 3);
    v17 = *(_WORD *)(a1 + 24);
    v20 = *(_OWORD *)(a1 + 32);
    v21 = *(_OWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 48);
    v7 = *(_QWORD *)(v1 + 40);
    v8 = *(_QWORD *)(v1 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v7);
    if (qword_1ECEB0F90 != -1)
      swift_once();
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 8))(qword_1ECEB52F8, unk_1ECEB5300, v7, v8);
    if (!v2)
    {
      v14 = v6;
      v15 = v5;
      __src = 0;
      v9 = *(_QWORD *)(v1 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
      v10 = sub_19CCC4FA0(&__src, 1);
      v12 = v11;
      (*(void (**)(void))(v9 + 8))();
      sub_19CD3BE18(v10, v12);
      v23[0] = v4;
      v23[1] = v15;
      v23[2] = v14;
      v23[3] = v19;
      v23[4] = v18;
      v24 = v21;
      v25 = v17;
      v26 = v20;
      v27 = v16;
      sub_19CE7B128(v23);
      __asm { BR              X11 }
    }
  }
  return result;
}

uint64_t type metadata accessor for JetPackageFormatWriter()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for JetPackageFormatWriter.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE7A4E0 + 4 * byte_19D05AB25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE7A514 + 4 * byte_19D05AB20[v4]))();
}

uint64_t sub_19CE7A514(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE7A51C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE7A524);
  return result;
}

uint64_t sub_19CE7A530(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE7A538);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE7A53C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE7A544(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatWriter.State()
{
  return &type metadata for JetPackageFormatWriter.State;
}

unint64_t sub_19CE7A564()
{
  unint64_t result;

  result = qword_1EE4400D8;
  if (!qword_1EE4400D8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05ABB0, &type metadata for JetPackageFormatWriter.State);
    atomic_store(result, (unint64_t *)&qword_1EE4400D8);
  }
  return result;
}

unint64_t sub_19CE7A5A8()
{
  unint64_t result;

  result = qword_1EE4400E0;
  if (!qword_1EE4400E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05AC64, &type metadata for JetPackageFormatWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE4400E0);
  }
  return result;
}

uint64_t sub_19CE7A5EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_19CFDEBA0();
  if (!result || (result = sub_19CFDEBC4(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_19CFDEBB8();
      return sub_19CFDEE40();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_19CE7A67C(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x1E0C80C00];
  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_19CE7A6E0
     + dword_19CE7A884[__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x1E0CB0338])[1] >> 62];
  __asm { BR              X10 }
}

uint64_t sub_19CE7A6F0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_19CD3BE5C(v1, v0);
  sub_19CFDEE40();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v3);
}

uint64_t sub_19CE7A894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_19CFDEBD0();
  swift_allocObject();
  result = sub_19CFDEB94();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_19CFDEE34();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_19CE7A90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_19CFDEBD0();
  swift_allocObject();
  result = sub_19CFDEB94();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_19CE7A98C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int16 __src;
  char __src_2;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = sub_19CFDF5CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_19CFDF5B4();
    sub_19CFDF584();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (v9 >> 60 != 15)
      __asm { BR              X10 }
    sub_19CF13494(0xD000000000000027, 0x800000019D072C30);
    sub_19CE7A5A8();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    __src = 0;
    return sub_19CCDBDA4(&__src, &__src_2);
  }
}

uint64_t sub_19CE7ACD8(__int16 a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD __src[3];

  __src[2] = *MEMORY[0x1E0C80C00];
  LOBYTE(__src[0]) = (a1 & 0x100) == 0;
  v3 = sub_19CCDBDA4(__src, (_BYTE *)__src + 1);
  if ((a1 & 0x100) != 0)
    goto LABEL_4;
  v4 = a1 + 1;
  if (((a1 + 1) & 0x100) != 0)
  {
    __break(1u);
LABEL_4:
    v4 = 0;
  }
  v5 = v2 & 0xFFFFFFFFFFFFFFLL;
  LOBYTE(__src[0]) = v4;
  v6 = sub_19CCDBDA4(__src, (_BYTE *)__src + 1);
  __src[0] = v3;
  __src[1] = v5;
  sub_19CE7A67C(v6, v7 & 0xFFFFFFFFFFFFFFLL);
  return __src[0];
}

void sub_19CE7AD94(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  if (a2 >> 60 == 15)
    v2 = 0xC000000000000000;
  else
    v2 = a2;
  __asm { BR              X10 }
}

uint64_t sub_19CE7ADF0(uint64_t a1, unint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10, int a11, __int16 a12, __int16 __src, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int16 v30;
  uint64_t v31;
  unint64_t v32;

  v30 = BYTE6(v25);
  sub_19CD61F18(a1, a2);
  v26 = sub_19CCC4FA0(&v30, 2);
  v28 = v27;
  v31 = v26;
  v32 = v27;
  sub_19CD3BE5C(v26, v27);
  sub_19CD3BE5C(v24, v25);
  sub_19CE7A67C(v24, v25);
  sub_19CD3BE18(v24, v25);
  sub_19CD3BE18(v24, v25);
  sub_19CD3BE18(v26, v28);
  return v31;
}

uint64_t sub_19CE7AFFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int16 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a1;
  if (v4 >> 60 == 15)
  {
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v6 = a1[1];
  }
  if (v4 >> 60 == 15)
    v7 = 0xF000000000000000;
  else
    v7 = a1[2];
  v8 = sub_19CE7ACD8(v5 | (unsigned __int16)((v4 >> 60 == 15) << 8));
  v10 = v9;
  sub_19CDCCEB4(v2, v3, v4);
  sub_19CE7AD94(v6, v7);
  if (v1)
  {
    sub_19CE7B434(v2, v3, v4);
    return sub_19CD3BE18(v8, v10);
  }
  else
  {
    v14 = v11;
    v15 = v12;
    sub_19CE7B434(v2, v3, v4);
    sub_19CD3BE5C(v8, v10);
    sub_19CD3BE5C(v14, v15);
    sub_19CE7A67C(v14, v15);
    sub_19CD3BE18(v14, v15);
    sub_19CD3BE18(v14, v15);
    sub_19CD3BE18(v8, v10);
    return v8;
  }
}

uint64_t sub_19CE7B128(unsigned __int8 *a1)
{
  __int16 v1;
  __int16 v2;
  __int16 v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int16 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  __int16 v39;
  uint64_t __src;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = *((_QWORD *)a1 + 1);
  v7 = *((_QWORD *)a1 + 2);
  v33 = *((_WORD *)a1 + 12);
  v35 = *((_QWORD *)a1 + 5);
  v36 = *((_QWORD *)a1 + 4);
  v34 = *((_QWORD *)a1 + 6);
  type metadata accessor for DataOutputStream();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D05ACB0;
  v8 = sub_19CE7ACD8(v1 | (unsigned __int16)(v2 << 8));
  v10 = v9;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v8, v10);
  v11 = sub_19CE7ACD8(v3 | (unsigned __int16)(v4 << 8));
  v13 = v12;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v11, v13);
  LOBYTE(__src) = 1;
  v14 = sub_19CCDBDA4(&__src, (_BYTE *)&__src + 1);
  if ((((v5 + 1) >> 8) & 1) != 0)
    __break(1u);
  v16 = v14;
  v17 = v15 & 0xFFFFFFFFFFFFFFLL;
  LOBYTE(__src) = v5 + 1;
  v18 = sub_19CCDBDA4(&__src, (_BYTE *)&__src + 1);
  __src = v16;
  v41 = v17;
  sub_19CE7A67C(v18, v19 & 0xFFFFFFFFFFFFFFLL);
  v20 = __src;
  v21 = v41;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v20, v21);
  v22 = sub_19CE7A98C(v6, v7);
  if (v37)
    return swift_release();
  v24 = v22;
  v25 = v23;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v24, v25);
  v39 = v33;
  v26 = sub_19CCC4FA0(&v39, 2);
  v28 = v27;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v26, v28);
  __src = v36;
  v41 = v35;
  v42 = v34;
  v30 = sub_19CE7AFFC(&__src);
  v32 = v31;
  swift_beginAccess();
  sub_19CFDEE88();
  swift_endAccess();
  sub_19CD3BE18(v30, v32);
  return *(_QWORD *)(inited + 16);
}

uint64_t sub_19CE7B434(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 15)
    return sub_19CD3BE18(a2, a3);
  return result;
}

uint64_t storeEnumTagSinglePayload for JetPackageFormatWriterError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE7B490 + 4 * byte_19D05AB2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE7B4B0 + 4 * byte_19D05AB2F[v4]))();
}

_BYTE *sub_19CE7B490(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE7B4B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE7B4B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE7B4C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE7B4C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE7B4D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JetPackageFormatWriterError()
{
  return &type metadata for JetPackageFormatWriterError;
}

unint64_t sub_19CE7B4F0()
{
  unint64_t result;

  result = qword_1EE4400E8;
  if (!qword_1EE4400E8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05AC3C, &type metadata for JetPackageFormatWriterError);
    atomic_store(result, (unint64_t *)&qword_1EE4400E8);
  }
  return result;
}

uint64_t AllowedFieldsTreatmentFilter.Definition.eventType.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AllowedFieldsTreatmentFilter.Definition.fieldNames.getter()
{
  return swift_bridgeObjectRetain();
}

JetEngine::AllowedFieldsTreatmentFilter::Definition __swiftcall AllowedFieldsTreatmentFilter.Definition.init(eventType:fieldNames:)(JetEngine::MetricsEventType eventType, Swift::OpaquePointer fieldNames)
{
  _QWORD *v2;
  uint64_t v3;
  JetEngine::AllowedFieldsTreatmentFilter::Definition result;

  v3 = *(_QWORD *)(eventType.rawValue._countAndFlagsBits + 8);
  *v2 = *(_QWORD *)eventType.rawValue._countAndFlagsBits;
  v2[1] = v3;
  v2[2] = eventType.rawValue._object;
  result.eventType = eventType;
  result.fieldNames = fieldNames;
  return result;
}

JetEngine::AllowedFieldsTreatmentFilter __swiftcall AllowedFieldsTreatmentFilter.init(_:)(JetEngine::AllowedFieldsTreatmentFilter result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *(_QWORD *)result.allowed.eventType.rawValue._countAndFlagsBits;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(result.allowed.eventType.rawValue._countAndFlagsBits + 8);
  return result;
}

ValueMetadata *type metadata accessor for AllowedFieldsTreatmentFilter()
{
  return &type metadata for AllowedFieldsTreatmentFilter;
}

_QWORD *assignWithCopy for SentryRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SentryRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AllowedFieldsTreatmentFilter.Definition()
{
  return &type metadata for AllowedFieldsTreatmentFilter.Definition;
}

uint64_t sub_19CE7B63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[24] = a4;
  v5 = sub_19CFDE948();
  v4[25] = v5;
  v4[26] = *(_QWORD *)(v5 - 8);
  v4[27] = swift_task_alloc();
  v6 = sub_19CFDECF0();
  v4[28] = v6;
  v4[29] = *(_QWORD *)(v6 - 8);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  v4[31] = swift_task_alloc();
  v7 = sub_19CFDEDE0();
  v4[32] = v7;
  v4[33] = *(_QWORD *)(v7 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v8 = sub_19CFE02B0();
  v4[36] = v8;
  v4[37] = *(_QWORD *)(v8 - 8);
  v4[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE7B74C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_19CFE02A4();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1EE440128 + dword_1EE440128);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v1;
  *v1 = v0;
  v1[1] = sub_19CE7B7D0;
  return v3(500000000000000, 0, 0, 0, 1);
}

uint64_t sub_19CE7B7D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[37] + 8))(v2[38], v2[36]);
  return swift_task_switch();
}

uint64_t sub_19CE7B848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  char v39;

  v34 = *(void **)(v0 + 320);
  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 224);
  v33 = *(_QWORD *)(v0 + 192);
  v7 = NSTemporaryDirectory();
  sub_19CFDF578();

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v4, 1, 1, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0CAFD78], v32);
  sub_19CFDEDB0();
  sub_19CFDED38();
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v1, v2);
  sub_19CFDE9C0();
  swift_allocObject();
  sub_19CFDE9B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440130);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
  sub_19CFDE93C();
  *(_QWORD *)(v0 + 176) = v9;
  sub_19CCF44B4(&qword_1EE440138, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], MEMORY[0x1E0CAE0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440140);
  sub_19CE7C7E8();
  sub_19CFE0070();
  sub_19CFDE954();
  swift_beginAccess();
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v33 + 128);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0B70);
  sub_19CE7C834();
  v10 = v34;
  v11 = sub_19CFDE9A8();
  v13 = *(_QWORD *)(v0 + 280);
  if (v34)
  {
    v14 = *(_QWORD *)(v0 + 256);
    swift_release();
    swift_bridgeObjectRelease();
    v8(v13, v14);
    v17 = (__int128 *)(v0 + 16);
    if (qword_1ECEB3330 != -1)
      swift_once();
    *(_QWORD *)&v37 = 0xD000000000000013;
    *((_QWORD *)&v37 + 1) = 0x800000019D06DE10;
    v35 = sub_19CD1462C((uint64_t *)&v37, 0x6552746E65746E49, 0xEC00000079616C70);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
    v36 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
    v19._countAndFlagsBits = 0xD000000000000015;
    v19._object = (void *)0x800000019D072CF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    swift_getErrorValue();
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 80) = v21;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_2Tm, v20, v21);
    sub_19CD40794(v0 + 56, v0 + 88);
    *v17 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19CD40658(v0 + 88, v0 + 16);
    *(_BYTE *)(v0 + 48) = 0;
    v23 = *(_OWORD *)(v0 + 32);
    v37 = *v17;
    v38 = v23;
    v39 = *(_BYTE *)(v0 + 48);
    v24 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = sub_19CD40918(0, v36[2] + 1, 1, v36);
    v26 = v24[2];
    v25 = v24[3];
    if (v26 >= v25 >> 1)
      v24 = sub_19CD40918((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
    v24[2] = v26 + 1;
    v27 = &v24[5 * v26];
    v28 = v37;
    v29 = v38;
    *((_BYTE *)v27 + 64) = v39;
    *((_OWORD *)v27 + 2) = v28;
    *((_OWORD *)v27 + 3) = v29;
    v36 = v24;
    sub_19CD3F190(v0 + 56);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    *(_QWORD *)(v18 + 32) = v24;
    *(_QWORD *)&v37 = v35;
    LOBYTE(v36) = 3;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v36);
    swift_bridgeObjectRelease();

  }
  else
  {
    v15 = v11;
    v16 = v12;
    swift_bridgeObjectRelease();
    sub_19CFDEE7C();
    v8(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
    sub_19CD3BE18(v15, v16);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE7BD60()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  id v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v1 = (__int128 *)(v0 + 16);
  v2 = *(void **)(v0 + 320);
  if (qword_1ECEB3330 != -1)
    swift_once();
  *(_QWORD *)&v19 = 0xD000000000000013;
  *((_QWORD *)&v19 + 1) = 0x800000019D06DE10;
  v17 = sub_19CD1462C((uint64_t *)&v19, 0x6552746E65746E49, 0xEC00000079616C70);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  v18 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v4._countAndFlagsBits = 0xD000000000000015;
  v4._object = (void *)0x800000019D072CF0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 80) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19CD40794(v0 + 56, v0 + 88);
  *v1 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CD40658(v0 + 88, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v8 = *(_OWORD *)(v0 + 32);
  v19 = *v1;
  v20 = v8;
  v21 = *(_BYTE *)(v0 + 48);
  v9 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[5 * v11];
  v13 = v19;
  v14 = v20;
  *((_BYTE *)v12 + 64) = v21;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  v18 = v9;
  sub_19CD3F190(v0 + 56);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(_QWORD *)(v3 + 32) = v9;
  *(_QWORD *)&v19 = v17;
  LOBYTE(v18) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE7C008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE7C06C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_19CD3BE5C(v3, v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(v2 + 128);
  *(_QWORD *)(v2 + 128) = 0x8000000000000000;
  sub_19CCE30AC(v3, v1, v5, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 128) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((*(_BYTE *)(v2 + 112) & 1) == 0)
  {
    v7 = *(_QWORD *)(v0 + 72);
    v8 = v7;
    if (*(_QWORD *)(v7 + 120))
    {
      swift_retain();
      sub_19CFDFAA0();
      swift_release();
      v8 = *(_QWORD *)(v0 + 72);
    }
    v9 = *(_QWORD *)(v0 + 80);
    v10 = sub_19CFDFA10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v12 = sub_19CCF44B4(&qword_1EE440118, v11, (uint64_t (*)(uint64_t))type metadata accessor for StandardIntentReplayStorage, (uint64_t)&unk_19D05AD4C);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v8;
    v13[3] = v12;
    v13[4] = v8;
    swift_retain_n();
    *(_QWORD *)(v7 + 120) = sub_19CE72184(v9, (uint64_t)&unk_1EE440120, (uint64_t)v13);
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE7C224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE7C240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 128);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    v5 = sub_19CD3FD1C(v4, v3);
    if ((v6 & 1) != 0)
    {
      v7 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v5);
      v8 = *v7;
      v9 = v7[1];
      sub_19CD3BE5C(*v7, v9);
    }
    else
    {
      v8 = 0;
      v9 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
    v9 = 0xF000000000000000;
  }
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v8, v9);
}

uint64_t sub_19CE7C2FC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for StandardIntentReplayStorage()
{
  return objc_opt_self();
}

uint64_t sub_19CE7C348()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_19CE7C354()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 112);
}

uint64_t sub_19CE7C360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CD579FC;
  return sub_19CE7C008(a1, a2, a3, a4);
}

uint64_t sub_19CE7C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_19CE7C44C;
  v7[6] = a2;
  v7[7] = v6;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE7C44C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_19CE7C4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_19CFE0298();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_19CE7C548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_19CFE02B0();
  sub_19CCF44B4(&qword_1EE440158, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  sub_19CFE0838();
  sub_19CCF44B4(&qword_1EE440160, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
  sub_19CFE02BC();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_19CE7C668;
  return sub_19CFE0844();
}

uint64_t sub_19CE7C668()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_19CE7C714()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE7C750()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE7C77C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_19CCBE344;
  return sub_19CE7B63C(a1, v4, v5, v6);
}

unint64_t sub_19CE7C7E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE440148;
  if (!qword_1EE440148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE440140);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE440148);
  }
  return result;
}

unint64_t sub_19CE7C834()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE440150;
  if (!qword_1EE440150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEB0B70);
    v2 = sub_19CE74DC0();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE440150);
  }
  return result;
}

void sub_19CE7C8A0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void MetricsFieldsProvider.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_19CE7C8B4(uint64_t a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v5 = *v2;
  v4 = v3;
  ImpressionsMetricsFieldsProvider.addMetricsFields(into:using:)(a1, &v4);
}

uint64_t sub_19CE7C8EC(uint64_t a1, uint64_t *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v4;
  *(_OWORD *)(v3 + 16) = *v2;
  return swift_task_switch();
}

_QWORD *sub_19CE7C910(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1, a2, a3, a4);
}

uint64_t sub_19CE7C924(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_19CCBE344;
  v10[4] = a4;
  v10[5] = v4;
  v10[2] = a1;
  v10[3] = a3;
  v10[6] = *a2;
  return swift_task_switch();
}

void sub_19CE7C9AC(_BYTE *a1@<X8>)
{
  MetricsFieldsProvider.category.getter(a1);
}

BOOL static MetricsFieldsProviderCategory.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsFieldsProviderCategory.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t MetricsFieldsProviderCategory.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE7CA44()
{
  unint64_t result;

  result = qword_1EE440170;
  if (!qword_1EE440170)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsFieldsProviderCategory, &type metadata for MetricsFieldsProviderCategory);
    atomic_store(result, (unint64_t *)&qword_1EE440170);
  }
  return result;
}

uint64_t dispatch thunk of MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MetricsFieldsProvider.addExpensiveMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_19CCBE344;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MetricsFieldsProvider.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MetricsFieldsProvider.addMetricsFields(into:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t storeEnumTagSinglePayload for MetricsFieldsProviderCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CE7CB90 + 4 * byte_19D05AD95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CE7CBC4 + 4 * byte_19D05AD90[v4]))();
}

uint64_t sub_19CE7CBC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE7CBCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE7CBD4);
  return result;
}

uint64_t sub_19CE7CBE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE7CBE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CE7CBEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE7CBF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE7CC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 48) = a1;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_19CE7CC30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = *v1;
  *(_QWORD *)(v2 + 24) = a1;
  return swift_task_switch();
}

id sub_19CE7CC54(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  __int128 v11;
  __int128 v12[2];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)&v11 = a1;
  v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D128);
  if (swift_dynamicCast())
  {
    sub_19CCD14C4(v12, (uint64_t)v14);
    v4 = v15;
    v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v6 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a2, v4, v5);
LABEL_5:
    v9 = (id)v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    return v9;
  }
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_19CCECFE4((uint64_t)v12, qword_1EE436C38);
  swift_getErrorValue();
  sub_19CFE0868();
  v7 = a2;
  v8 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_valueWithNewErrorFromMessage_inContext_, v8, v7);

  if (!v9)
  {
    __break(1u);
    goto LABEL_5;
  }
  return v9;
}

void sub_19CE7D128(void *a1@<X0>, char *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v12;

  v4 = objc_msgSend(a1, sel_toString);
  if (v4)
  {
    v5 = v4;
    v6 = sub_19CFDF578();
    v8 = v7;

    v9 = v6 == 0x363532616873 && v8 == 0xE600000000000000;
    if (v9 || (sub_19CFE06A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      v10 = 0;
      goto LABEL_11;
    }
    if (v6 == 0x323135616873 && v8 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();

      v10 = 1;
      goto LABEL_11;
    }
    v12 = sub_19CFE06A0();
    swift_bridgeObjectRelease();

    if ((v12 & 1) != 0)
    {
      v10 = 1;
      goto LABEL_11;
    }
  }
  else
  {

  }
  v10 = 2;
LABEL_11:
  *a2 = v10;
}

uint64_t sub_19CE7D258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  _QWORD v15[6];

  v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_unknownObjectRetain();
  v12(v15, a4, a5);
  EventEmitter.addObserver(on:singleUse:_:)((uint64_t)v15, 0, a2, a3, a4, a5);
  swift_unknownObjectRelease();
  swift_release();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  v14 = v15[5];
  *a6 = a1;
  a6[1] = v14;
  return result;
}

uint64_t sub_19CE7D304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t *, uint64_t, uint64_t);
  uint64_t v6;

  v6 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  v4(&v6, v3, v2);
  return swift_release();
}

uint64_t EventEmitter.asyncStream.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_getAssociatedTypeWitness();
  v5 = sub_19CFDFA34();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = &v12[-v7];
  v13 = a1;
  v14 = a2;
  v15 = v2;
  swift_checkMetadataState();
  v9 = *MEMORY[0x1E0DF07B8];
  v10 = sub_19CFDFA34();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  return sub_19CFDFA88();
}

uint64_t sub_19CE7D458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;

  swift_getAssociatedTypeWitness();
  v7 = sub_19CFDFA4C();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v18 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v18 - v11, a1, v7, v10);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v12, v7);
  v15 = swift_unknownObjectRetain();
  sub_19CE7D258(v15, (uint64_t)sub_19CE7D754, v14, a3, a4, &v19);
  v18 = v19;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  *(_OWORD *)(v16 + 32) = v18;
  return sub_19CFDFA28();
}

uint64_t sub_19CE7D5B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE7D458(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_19CE7D5BC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_19CFDFA1C();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, AssociatedTypeWitness, v10);
  sub_19CFDFA4C();
  sub_19CFDFA40();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
}

uint64_t dispatch thunk of EventEmitter.addObserver<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of EventEmitter.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EventEmitter.post(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_19CE7D6D4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v1 = sub_19CFDFA4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_19CE7D754(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_19CFDFA4C();
  return sub_19CE7D5BC(a1);
}

uint64_t sub_19CE7D7C8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE7D7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for StreamEventSubscription(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_19CE7D304(v5);
}

uint64_t type metadata accessor for StreamEventSubscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamEventSubscription);
}

uint64_t sub_19CE7D840()
{
  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *sub_19CE7D868(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_19CE7D89C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_19CE7D8F8(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

void ProxyingStateCenter.Transaction.changeState<A>(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v9[5];
  char v10;

  v7 = *(_QWORD *)(a5 + 8);
  v9[3] = a4;
  v9[4] = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a4);
  v10 = 0;
  swift_bridgeObjectRetain();
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
}

uint64_t sub_19CE7D9A8()
{
  sub_19CFDF938();
  return sub_19CFDF908();
}

void type metadata accessor for ProxyingStateCenter.Transaction.Change()
{
  JUMPOUT(0x1A1ADBCC8);
}

void ProxyingStateCenter.Transaction.removeState(at:recursively:)()
{
  swift_bridgeObjectRetain();
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
}

uint64_t sub_19CE7DA30()
{
  sub_19CFDF938();
  return sub_19CFDF908();
}

Swift::Void __swiftcall ProxyingStateCenter.Transaction.removeAllState()()
{
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
}

uint64_t sub_19CE7DA7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_19CFE05B0();
  swift_allocObject();
  v1 = sub_19CFDF884();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_BYTE *)(v2 + 48) = 3;
  v3 = sub_19CE48CB8(v1);
  result = swift_bridgeObjectRelease();
  *v0 = v3;
  return result;
}

void sub_19CE7DADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  ProxyingStateCenter.Transaction.changeState<A>(at:to:)(a1, a2, a5, a3, a4);
}

uint64_t ProxyingStateCenter.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  v6 = swift_allocObject();
  AnyStateStore.init<A>(_:)(a1, a2, a3, &v8);
  *(_QWORD *)(v6 + 16) = v8;
  return v6;
}

uint64_t ProxyingStateCenter.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  AnyStateStore.init<A>(_:)(a1, a2, a3, &v5);
  *(_QWORD *)(v3 + 16) = v5;
  return v3;
}

uint64_t ProxyingStateCenter.currentState<A>(at:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[2];

  v7 = *v4;
  v8 = v4[2];
  v11[0] = *a1;
  v11[1] = v8;
  v9 = type metadata accessor for AnyStateStore(0, *(_QWORD *)(v7 + 80), a3, a4);
  return AnyStateStore.currentState<A>(at:)(v11, v9, a2, a3);
}

void ProxyingStateCenter.beginTransaction()()
{
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
}

uint64_t sub_19CE7DC3C()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_19CFDF8B4();
  *v0 = result;
  return result;
}

uint64_t ProxyingStateCenter.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v5 = *v4;
  v9[5] = v4[2];
  v6 = type metadata accessor for AnyStateStore(0, *(_QWORD *)(v5 + 80), a3, a4);
  swift_retain();
  v7 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for AnyStateStore<A>, v6);
  StateStore.performTransaction<A>(_:)((uint64_t)sub_19CE7DF68, (uint64_t)v9, v6, MEMORY[0x1E0DEE9C0] + 8, v7);
  return swift_release();
}

void sub_19CE7DCF4()
{
  swift_bridgeObjectRetain();
  type metadata accessor for ProxyingStateCenter.Transaction.Change();
}

uint64_t sub_19CE7DD44(uint64_t a1)
{
  uint64_t v1;
  char v3;
  _BYTE v5[160];

  if (MEMORY[0x1A1AD9B44](v1, a1))
  {
    v3 = sub_19CFDF8D8();
    sub_19CFDF890();
    if ((v3 & 1) != 0)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v5, v1 + 32, a1);
      __asm { BR              X9 }
    }
    sub_19CFE0160();
    __break(1u);
    __break(1u);
    JUMPOUT(0x19CE7DF0CLL);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ProxyingStateCenter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ProxyingStateCenter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_19CE7DF68()
{
  sub_19CE7DCF4();
}

uint64_t sub_19CE7DF80(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_19CE7DF88(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

void sub_19CE7DF90()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CE7DFA0()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for ProxyingStateCenter()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t method lookup function for ProxyingStateCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProxyingStateCenter.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void type metadata accessor for ProxyingStateCenter.Transaction()
{
  JUMPOUT(0x1A1ADBCC8);
}

uint64_t sub_19CE7E010(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 3)
    v2 = *(_DWORD *)result + 3;
  if (v2 == 2 || v2 == 1)
    return swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 8);
  }
  return result;
}

void ShelfBasedPageModel<>.presentation.getter(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_19CFE010C();
  swift_bridgeObjectRelease();
  v5 = 60;
  v6 = 0xE100000000000000;
  swift_getDynamicType();
  sub_19CFE0A90();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  sub_19CFE0340();
  __break(1u);
}

uint64_t dispatch thunk of ShelfBasedPageModel.presentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ShelfBasedPageModel.shelves.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of NavigablePagePresentation.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t StateLens.init<A>(contentsOf:in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v11;

  v11 = *a1;
  a5[3] = type metadata accessor for StateStoreHandle(0, a3, a4, a3);
  a5[4] = (uint64_t)&off_1E3DCDFA8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a5);
  return sub_19CE78870(&v11, a2, a3, a4, boxed_opaque_existential_2Tm);
}

_QWORD *StateLens.init(get:set:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *result;

  a5[3] = &type metadata for DelegatingStateStoreHandle;
  a5[4] = &off_1E3DD4BB8;
  result = (_QWORD *)swift_allocObject();
  *a5 = result;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_19CE7E284()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t StateLens<A>.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[3];
  v10 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v5, a3, v9, v10);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StateLens<A>.currentValue.getter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(_QWORD *)(a1 + 16), a2, v5, v6);
}

uint64_t StateLens<A>.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v7 = *a1;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4[3];
  v13 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v8, a3, v12, v13);
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15[0] = v15[1];
  return ReadOnlyLens.init(_:)((uint64_t)v15, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v7 + 8), a4);
}

uint64_t StateLens.init(_:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CCD14C4(a1, a2);
}

uint64_t type metadata accessor for StateLens(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateLens);
}

void CompoundTreatmentFilter.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t CompoundTreatmentFilter.addFilter(_:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_19CE7E58C((uint64_t)v4, v1, v2, v3);
}

uint64_t CompoundTreatmentFilter.addingFilter(_:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *a2 = *v2;
  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  swift_bridgeObjectRetain();
  return sub_19CE7E58C((uint64_t)v6, a2, v4, v5);
}

uint64_t sub_19CE7E58C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, double);
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v21 - v13;
  v15 = *(void (**)(char *, double))(v7 + 16);
  v15((char *)&v21 - v13, v12);
  v16 = (_QWORD *)*a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_19CD1A86C(0, v16[2] + 1, 1, v16);
    *a2 = (uint64_t)v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_19CD1A86C((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *a2 = (uint64_t)v16;
  }
  ((void (*)(char *, char *, uint64_t))v15)(v9, v14, a3);
  sub_19CCEF50C(v19, (uint64_t)v9, a2, a3, a4);
  *a2 = (uint64_t)v16;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, a3);
}

ValueMetadata *type metadata accessor for CompoundTreatmentFilter()
{
  return &type metadata for CompoundTreatmentFilter;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_19CE7E6E0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
}

unint64_t LowMemoryMetricsEventLinter.Error.errorDescription.getter()
{
  return 0xD00000000000003CLL;
}

uint64_t static LowMemoryMetricsEventLinter.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t LowMemoryMetricsEventLinter.Error.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t LowMemoryMetricsEventLinter.Error.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

unint64_t sub_19CE7E7E8()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_19CE7E804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_19CE7E870(a1, a2, a3, a4, a5);
  return v10;
}

_QWORD *sub_19CE7E870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;

  v8 = *a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43B570);
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 56) = 0;
  sub_19CCF8C5C(a5, v9 + 16, &qword_1EE43B558);
  sub_19CCECFE4(a5, &qword_1EE43B558);
  v5[4] = v9;
  v5[6] = a3;
  return v5;
}

uint64_t LowMemoryMetricsEventLinter.__allocating_init(defaultTopic:configuration:rules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _BYTE v10[40];
  uint64_t v11;

  v11 = 0;
  sub_19CCD5B84(a3, (uint64_t)v10);
  v8 = swift_allocObject();
  sub_19CE7E870(a1, a2, a4, &v11, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v8;
}

uint64_t LowMemoryMetricsEventLinter.__allocating_init(defaultTopic:bag:rules:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v7 = *a3;
  v11 = 0;
  v12 = v7;
  memset(v10, 0, sizeof(v10));
  v8 = swift_allocObject();
  sub_19CE7E870(a1, a2, a4, &v12, (uint64_t)v10);
  return v8;
}

uint64_t *sub_19CE7E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD v10[5];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0F10);
  inited = swift_initStackObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  if (qword_1EE437100 != -1)
    swift_once();
  v4 = (void *)qword_1EE465AE8;
  v10[3] = sub_19CD48F8C();
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = v4;
  v5 = v4;
  swift_retain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373A0);
  v7 = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for Promise<A>, v6);
  v8 = Promise.flatMap<A>(on:_:)((uint64_t)v10, (uint64_t)sub_19CE8016C, v1, v6, v7);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v8;
}

uint64_t *sub_19CE7EB14(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  void *v10;
  id v11;
  _QWORD *inited;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  _UNKNOWN **v27;

  v3 = *a2;
  v4 = (os_unfair_lock_s *)a2[4];
  swift_retain();
  os_unfair_lock_lock(v4 + 14);
  sub_19CCF8C5C((uint64_t)&v4[4], (uint64_t)&v23, &qword_1EE43B558);
  os_unfair_lock_unlock(v4 + 14);
  swift_release();
  if (v24)
  {
    sub_19CCD14C4(&v23, (uint64_t)&v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373A0);
    sub_19CCD14C4(&v25, (uint64_t)&v23);
    return Promise.__allocating_init(value:)((uint64_t)&v23, v5, v6, v7);
  }
  sub_19CCECFE4((uint64_t)&v23, &qword_1EE43B558);
  if (!a2[5])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373A0);
    v18 = type metadata accessor for LowMemoryMetricsEventLinter.Error(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v17);
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LowMemoryMetricsEventLinter<A>.Error, v18);
    v19 = swift_allocError();
    return Promise.__allocating_init(error:)(v19, v20, v21, v22);
  }
  swift_unknownObjectRetain();
  v10 = (void *)sub_19CFDF554();
  v11 = objc_msgSend((id)swift_unknownObjectRetain(), sel_dictionaryForKey_, v10);
  swift_unknownObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437338);
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v11;
  inited[3] = sub_19CF94D04;
  inited[4] = 0;
  sub_19CF6D9E4();

  if (qword_1EE437100 != -1)
    swift_once();
  v13 = (void *)qword_1EE465AE8;
  v26 = sub_19CD48F8C();
  v27 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v25 = v13;
  v14 = v13;
  swift_retain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437348);
  v9 = Promise.map<A>(on:_:)((uint64_t)&v25, (uint64_t)sub_19CE80174, (uint64_t)a2, v15);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
  return v9;
}

void sub_19CE7ED58(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v6 = *a2;
  sub_19CCF8C5C(a1, (uint64_t)&v12, &qword_1EE43C2D8);
  if (*((_QWORD *)&v13 + 1) == 1)
  {
    sub_19CCECFE4((uint64_t)&v12, &qword_1EE43C2D8);
    v8 = type metadata accessor for LowMemoryMetricsEventLinter.Error(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v7);
    MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LowMemoryMetricsEventLinter<A>.Error, v8);
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    v15[0] = v12;
    v15[1] = v13;
    v16 = v14;
    sub_19CD3E448((uint64_t)v15, (uint64_t)&v12);
    v9 = a2[4];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 56));
    sub_19CE7EECC((uint64_t *)(v9 + 16), (uint64_t)&v12);
    os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 56));
    if (v3)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      a3[3] = (uint64_t)&type metadata for MetricsEventLinterBagConfiguration;
      a3[4] = (uint64_t)&off_1E3DD7AE8;
      v10 = swift_allocObject();
      *a3 = v10;
      v11 = v13;
      *(_OWORD *)(v10 + 16) = v12;
      *(_OWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 48) = v14;
      sub_19CD3E3F8((uint64_t)v15);
    }
  }
}

uint64_t sub_19CE7EECC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  sub_19CCECFE4((uint64_t)a1, &qword_1EE43B558);
  a1[3] = (uint64_t)&type metadata for MetricsEventLinterBagConfiguration;
  a1[4] = (uint64_t)&off_1E3DD7AE8;
  v4 = swift_allocObject();
  *a1 = v4;
  return sub_19CE801B8(a2, v4 + 16);
}

uint64_t LowMemoryMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;

  sub_19CE7E9F8();
  if (qword_1EE437100 != -1)
    swift_once();
  v3 = (void *)qword_1EE465AE8;
  v5 = v1[2];
  v4 = v1[3];
  v6 = v1[6];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = v5;
  v7[4] = v4;
  v7[5] = v1;
  v7[6] = v6;
  v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = sub_19CE7F7A0(v8, (uint64_t)sub_19CE7F780, (uint64_t)v7);

  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_19CE7F034@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[32];
  __int128 v53;
  __int128 v54;
  char v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58[3];
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v9 = *(_QWORD *)(*(_QWORD *)a4 + 88);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v59 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v8 = v59;
  v60 = v9;
  __swift_allocate_boxed_opaque_existential_2Tm(v58);
  v11 = swift_bridgeObjectRetain();
  v10(v11, v8, v9);
  v12 = v59;
  v13 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v14 = MetricsFieldsBuilder.subscript.getter(0x6369706F74, 0xE500000000000000, v12, v13);
  if (v15)
  {
    a2 = v14;
    v49 = v15;
  }
  else
  {
    v49 = a3;
    swift_bridgeObjectRetain();
  }
  v48 = a2;
  v16 = v59;
  v17 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  sub_19CCEDC24();
  MetricsFieldsBuilder.subscript.getter(0x707954746E657665, 0xE900000000000065, v16, (uint64_t)&type metadata for MetricsEventType, v17, (uint64_t)&v53);
  v18 = v53;
  if (qword_1ECEB31D8 != -1)
    swift_once();
  v19 = (void *)qword_1ECEB30F0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_19D0522A0;
  v21 = v19;
  v61 = sub_19CD40918(0, 27, 0, MEMORY[0x1E0DEE9D8]);
  v22._object = (void *)0x800000019D072E30;
  v22._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  if (*((_QWORD *)&v18 + 1))
  {
    *((_QWORD *)&v57 + 1) = &type metadata for MetricsEventType;
    v56 = v18;
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_19CCF8C5C((uint64_t)&v56, (uint64_t)v52, &qword_1ECEB3370);
  v50 = 0u;
  v51 = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658((uint64_t)v52, (uint64_t)&v50);
  v55 = 0;
  v53 = v50;
  v54 = v51;
  v23 = v61;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_19CD40918(0, v23[2] + 1, 1, v23);
  v25 = v23[2];
  v24 = v23[3];
  if (v25 >= v24 >> 1)
    v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
  v23[2] = v25 + 1;
  v26 = &v23[5 * v25];
  v27 = v53;
  v28 = v54;
  *((_BYTE *)v26 + 64) = v55;
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  v61 = v23;
  sub_19CCECFE4((uint64_t)&v56, &qword_1ECEB3370);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  *(_QWORD *)(v20 + 32) = v61;
  *(_QWORD *)&v53 = v21;
  LOBYTE(v50) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v20, (JetEngine::LogMessageLevel)&v50);

  swift_bridgeObjectRelease();
  sub_19CE7FA50(v58, v48, v49, a1);
  if (v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*((_QWORD *)&v18 + 1))
    {
      if (v18 == __PAIR128__(0xE500000000000000, 0x616964656DLL) || (sub_19CFE06A0() & 1) != 0)
        sub_19CE80094(v58);
      swift_bridgeObjectRelease();
    }
    v31 = *(_QWORD *)(a5 + 16);
    if (v31)
    {
      v32 = (_QWORD *)(a5 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v33 = v32[3];
        v34 = v32[4];
        __swift_project_boxed_opaque_existential_1(v32, v33);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 8))(v58, v33, v34);
        v32 += 5;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
    }
    v35 = a1[3];
    v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v35);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 32))(v48, v49, v35, v36);
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      v39 = (_QWORD *)(v37 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v40 = v39[3];
        v41 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v40);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v41 + 8))(v58, v40, v41);
        v39 += 5;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v42 = v59;
    v43 = v60;
    __swift_project_boxed_opaque_existential_1(v58, v59);
    *a6 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
    a6[1] = MEMORY[0x1E0DEE9D8];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
}

uint64_t LowMemoryMetricsEventLinter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LowMemoryMetricsEventLinter.__deallocating_deinit()
{
  LowMemoryMetricsEventLinter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19CE7F59C(uint64_t a1)
{
  return LowMemoryMetricsEventLinter.processEvent(_:)(a1);
}

uint64_t sub_19CE7F5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_19CFDFD88();
  MEMORY[0x1E0C80A78](v0, v1);
  v2 = sub_19CFDF308();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = sub_19CFDFDAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF8D8], v4);
  sub_19CFDF2F0();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_19CD51704();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD5174C();
  sub_19CFE0070();
  result = sub_19CFDFDDC();
  qword_1EE465AE8 = result;
  return result;
}

uint64_t sub_19CE7F744()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE7F780@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_19CE7F034(a1, v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_19CE7F7A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];

  v14[3] = sub_19CD48F8C();
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 24) = v8;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v6;
  v12[0] = sub_19CE7FA44;
  v12[1] = v9;
  v12[2] = sub_19CE312F0;
  v12[3] = v6;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v13[40] = 0;
  swift_retain_n();
  v10 = a1;
  swift_retain();
  swift_retain();
  sub_19CDBDB38();
  sub_19CCECFE4((uint64_t)v12, (uint64_t *)&unk_1EE437380);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v6;
}

void sub_19CE7F8E4()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

void sub_19CE7F8F4()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CE7F904()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LowMemoryMetricsEventLinter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LowMemoryMetricsEventLinter);
}

uint64_t method lookup function for LowMemoryMetricsEventLinter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_19CE7F980(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CE7F9C0 + 4 * asc_19D05B040[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CE7F9E0 + 4 * byte_19D05B045[v4]))();
}

_BYTE *sub_19CE7F9C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CE7F9E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE7F9E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE7F9F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CE7F9F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CE7FA00(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for LowMemoryMetricsEventLinter.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LowMemoryMetricsEventLinter.Error);
}

uint64_t sub_19CE7FA18()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE7FA44(uint64_t a1)
{
  uint64_t v1;

  return sub_19CF074F8(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 16));
}

uint64_t sub_19CE7FA50(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _OWORD v71[2];
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;

  v5 = v4;
  v9 = a4[3];
  v10 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v9);
  v64 = a2;
  v65 = a3;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, a3, v9, v10);
  if (!result)
  {
LABEL_42:
    v35 = MEMORY[0x1E0DEA968];
    v75 = MEMORY[0x1E0DEA968];
    v72 = 7628138;
    v73 = 0xE300000000000000;
    v36 = a1[3];
    v37 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v36);
    (*(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v37 + 16))(&v72, 0x654D646E65537078, 0xEC000000646F6874, v36, v37);
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
    if (!v5)
    {
      v38 = a1[3];
      v39 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v38);
      MetricsFieldsBuilder.subscript.getter(1701273968, 0xE400000000000000, v38, v39);
      v41 = v40;
      swift_bridgeObjectRelease();
      if (!v41)
      {
        v49 = a1[3];
        v50 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v49);
        v51 = MetricsFieldsBuilder.subscript.getter(0x6570795465676170, 0xE800000000000000, v49, v50);
        if (v52)
        {
          v53 = v51;
          v54 = a1[3];
          v55 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v54);
          MetricsFieldsBuilder.subscript.getter(0x644965676170, 0xE600000000000000, v54, v55);
          if (v56)
          {
            v57 = a4[3];
            v58 = a4[4];
            __swift_project_boxed_opaque_existential_1(a4, v57);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 16))(v64, v65, v57, v58);
            sub_19CE7E6E0();
            v60 = v59;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v75 = v35;
            v72 = v53;
            v73 = v60;
            v61 = a1[3];
            v62 = a1[4];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v61);
            (*(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v62 + 16))(&v72, 1701273968, 0xE400000000000000, v61, v62);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
      v42 = a4[3];
      v43 = a4[4];
      __swift_project_boxed_opaque_existential_1(a4, v42);
      v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 24))(v64, v65, v42, v43);
      v45 = *(_QWORD *)(v44 + 16);
      if (v45)
      {
        v46 = v44 + 32;
        do
        {
          sub_19CCD5B84(v46, (uint64_t)&v72);
          v47 = v75;
          v48 = v76;
          __swift_project_boxed_opaque_existential_1(&v72, v75);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v48 + 8))(a1, v47, v48);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
          v46 += 40;
          --v45;
        }
        while (v45);
      }
      return swift_bridgeObjectRelease();
    }
    return result;
  }
  v12 = result;
  v13 = 0;
  v14 = *(_QWORD *)(result + 64);
  v66 = result + 64;
  v15 = 1 << *(_BYTE *)(result + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v77 = &v74;
  v67 = (unint64_t)(v15 + 63) >> 6;
  if ((v16 & v14) == 0)
    goto LABEL_9;
LABEL_7:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v19 = v18 | (v13 << 6);
LABEL_8:
  v20 = *(_QWORD *)(v12 + 56);
  v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v19);
  v22 = v21[1];
  *(_QWORD *)&v70 = *v21;
  *((_QWORD *)&v70 + 1) = v22;
  sub_19CD436B0(v20 + 32 * v19, (uint64_t)v71);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_19CD22544((uint64_t)&v70, (uint64_t)&v72);
    v25 = v73;
    if (!v73)
    {
      swift_release();
      v5 = v4;
      goto LABEL_42;
    }
    v26 = v72;
    sub_19CD433C0(v77, &v70);
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    if (*(_QWORD *)(v29 + 16))
    {
      swift_bridgeObjectRetain();
      v30 = sub_19CD3FD1C(v26, v25);
      if ((v31 & 1) != 0)
      {
        sub_19CD436B0(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)&v68);
      }
      else
      {
        v68 = 0u;
        v69 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v68 = 0u;
      v69 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v69 + 1))
    {
      swift_bridgeObjectRelease();
      sub_19CCECFE4((uint64_t)&v68, &qword_1ECEB3370);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
      if (v17)
        goto LABEL_7;
    }
    else
    {
      sub_19CCECFE4((uint64_t)&v68, &qword_1ECEB3370);
      v32 = a1[3];
      v33 = a1[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v32);
      (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 16))(&v70, v26, v25, v32, v33);
      if (v4)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
        return swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v70);
      result = swift_bridgeObjectRelease();
      if (v17)
        goto LABEL_7;
    }
LABEL_9:
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v23 < v67)
    {
      v24 = *(_QWORD *)(v66 + 8 * v23);
      if (v24)
        goto LABEL_12;
      v13 += 2;
      if (v23 + 1 >= v67)
      {
        v13 = v23;
        goto LABEL_17;
      }
      v24 = *(_QWORD *)(v66 + 8 * v13);
      if (v24)
      {
        ++v23;
LABEL_12:
        v17 = (v24 - 1) & v24;
        v19 = __clz(__rbit64(v24)) + (v23 << 6);
        v13 = v23;
        goto LABEL_8;
      }
      if (v23 + 2 < v67)
        break;
    }
LABEL_17:
    v17 = 0;
    memset(v71, 0, sizeof(v71));
    v70 = 0u;
  }
  v24 = *(_QWORD *)(v66 + 8 * (v23 + 2));
  if (v24)
  {
    v23 += 2;
    goto LABEL_12;
  }
  v34 = v23 + 3;
  if (v23 + 3 >= v67)
  {
    v13 = v23 + 2;
    goto LABEL_17;
  }
  v24 = *(_QWORD *)(v66 + 8 * v34);
  if (v24)
  {
    v23 += 3;
    goto LABEL_12;
  }
  while (1)
  {
    v23 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v23 >= v67)
    {
      v13 = v67 - 1;
      goto LABEL_17;
    }
    v24 = *(_QWORD *)(v66 + 8 * v23);
    ++v34;
    if (v24)
      goto LABEL_12;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_19CE80094(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  result = MetricsFieldsBuilder.subscript.getter(0x6E6F697469736F70, 0xE800000000000000, v2, v3);
  if ((v5 & 1) == 0)
  {
    v8[3] = MEMORY[0x1E0DEB070];
    v8[0] = round(*(double *)&result);
    v6 = a1[3];
    v7 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v6);
    (*(void (**)(_QWORD *, uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(v8, 0x6E6F697469736F70, 0xE800000000000000, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return result;
}

uint64_t *sub_19CE8016C(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE7EB14(a1, v1);
}

void sub_19CE80174(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  sub_19CE7ED58(a1, v2, a2);
}

uint64_t sub_19CE8018C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_19CE801B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for JSONObject(a2, a1);
  return a2;
}

uint64_t SyncTaskScheduler.schedule(task:)(uint64_t (*a1)(void))
{
  return a1();
}

void NSOperationQueue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_19CD0C78C;
  v6[3] = &block_descriptor_3_0;
  v3 = _Block_copy(v6);
  v4 = (void *)objc_opt_self();
  swift_retain();
  v5 = objc_msgSend(v4, sel_blockOperationWithBlock_, v3);
  _Block_release(v3);
  swift_release();
  objc_msgSend(v2, sel_addOperation_, v5);

}

void sub_19CE802DC(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v3 = *v2;
  v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_19CD0C78C;
  v7[3] = &block_descriptor_6_3;
  v4 = _Block_copy(v7);
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_blockOperationWithBlock_, v4);
  _Block_release(v4);
  swift_release();
  objc_msgSend(v3, sel_addOperation_, v6);

}

uint64_t sub_19CE803A8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6469746E65696C63;
  else
    v3 = 0x646972657375;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6469746E65696C63;
  else
    v5 = 0x646972657375;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE80448(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7463757274736564;
  else
    v3 = 0x6C65636E6163;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000657669;
  if ((a2 & 1) != 0)
    v5 = 0x7463757274736564;
  else
    v5 = 0x6C65636E6163;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657669;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE804F0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 25705;
  else
    v3 = 0x646E696B24;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 25705;
  else
    v5 = 0x646E696B24;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_19CE80584(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE805BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE80618 + 4 * byte_19D05B28C[a2]))(0x656C746974);
}

uint64_t sub_19CE80618(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE806B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE80704(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE80754 + 4 * byte_19D05B294[a2]))(0x726564616568);
}

uint64_t sub_19CE80754(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726564616568 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE807F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE80830(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE8089C + 4 * byte_19D05B29C[a2]))(0x6C69616D65);
}

uint64_t sub_19CE8089C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C69616D65 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_19CE8094C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C61636974697263;
  else
    v3 = 0x74616D726F666E69;
  if (v2)
    v4 = 0xED00006C616E6F69;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C61636974697263;
  else
    v5 = 0x74616D726F666E69;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xED00006C616E6F69;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE809FC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x646E616D65446E6FLL;
    else
      v3 = 0x74726174536E6FLL;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x646E616D65446E6FLL;
      else
        v6 = 0x74726174536E6FLL;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_19CFE06A0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19CE80B04(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7261646E6F636573;
  else
    v3 = 0x447972616D697270;
  if (v2)
    v4 = 0xEB00000000617461;
  else
    v4 = 0xED00006174614479;
  if ((a2 & 1) != 0)
    v5 = 0x7261646E6F636573;
  else
    v5 = 0x447972616D697270;
  if ((a2 & 1) != 0)
    v6 = 0xED00006174614479;
  else
    v6 = 0xEB00000000617461;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_19CE80BBC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE80BFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE80CC0 + 4 * byte_19D05B2A7[a2]))(0x656D695474696177);
}

uint64_t sub_19CE80CC0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656D695474696177 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE80DDC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE80E1C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE80EAC + 4 * byte_19D05B2B3[a2]))(0x7470697263736564);
}

uint64_t sub_19CE80EAC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7470697263736564 && v1 == 0xEB000000006E6F69)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE80F84(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE80FE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE8106C + 4 * byte_19D05B2BE[a2]))(1701869940);
}

uint64_t sub_19CE8106C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701869940 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE8114C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE8118C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE811EC + 4 * byte_19D05B2C8[a2]))(0x746C7561666564);
}

uint64_t sub_19CE811EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746C7561666564 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_19CE81290(uint64_t a1, uint64_t a2)
{
  return sub_19CE814B8(a1, a2, AutomationSemantics.NowPlayingElement.rawValue.getter);
}

void sub_19CE8129C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE812EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE813A0 + 4 * byte_19D05B2D3[a2]))(0x6F65646976);
}

uint64_t sub_19CE813A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F65646976 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_19CE814AC(uint64_t a1, uint64_t a2)
{
  return sub_19CE814B8(a1, a2, AutomationSemantics.Subcomponent.rawValue.getter);
}

uint64_t sub_19CE814B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_19CE81550(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE815A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE81600 + 4 * byte_19D05B2DE[a2]))(25705);
}

uint64_t sub_19CE81600(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 25705 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE816A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE816DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE81760 + 4 * byte_19D05B2E7[a2]))(0x73646C656966);
}

uint64_t sub_19CE81760(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73646C656966 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE81828(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE81878(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE818D0 + 4 * byte_19D05B2F0[a2]))(0x6E6F6974636E7566);
}

uint64_t sub_19CE818D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6E6F6974636E7566 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_19CE8196C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE819BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE81A5C + 4 * byte_19D05B2FA[a2]))(0x63696D616E7964);
}

uint64_t sub_19CE81A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x63696D616E7964 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_19CE81B4C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE81B8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE81C2C + 4 * byte_19D05B306[a2]))(0x65756C6176);
}

uint64_t sub_19CE81C2C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65756C6176 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_19CE81D1C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001FLL;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x800000019D06C8A0;
  else
    v4 = 0x800000019D06C8C0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001FLL;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0x800000019D06C8C0;
  else
    v6 = 0x800000019D06C8A0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE81DC8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6F74737563;
  else
    v3 = 1635017060;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6F74737563;
  else
    v5 = 1635017060;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE81E60(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 1635017060;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0x800000019D06C820;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 1635017060;
  if ((a2 & 1) != 0)
    v6 = 0x800000019D06C820;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_19CE81F00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE81F64(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE81FC8 + 4 * byte_19D05B310[a2]))(0x6C65694665676170);
}

uint64_t sub_19CE81FC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C65694665676170 && v1 == 0xEA00000000007364)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_19CE82074(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19CE820BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_19CE82148 + 4 * byte_19D05B319[a2]))(0x6C46646C756F6873);
}

uint64_t sub_19CE82148(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C46646C756F6873 && v1 == 0xEB00000000687375)
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_19CE82208(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x756C61566C6C756ELL;
  else
    v3 = 0x65707954646162;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x756C61566C6C756ELL;
  else
    v5 = 0x65707954646162;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_19CFE06A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_19CE822B0(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aCoercedvdefaul[8 * a1] == *(_QWORD *)&aCoercedvdefaul[8 * a2])
    v2 = 1;
  else
    v2 = sub_19CFE06A0();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t QueryExpression.init(pattern:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void (*v31)(_QWORD);
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char isUniquelyReferenced_nonNull_native;
  void *v50;
  uint64_t result;
  uint64_t inited;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD v73[4];
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int v78;
  void (*v79)(_QWORD);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;

  v78 = a3;
  v77 = a4;
  v92 = *MEMORY[0x1E0C80C00];
  v6 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v6, v7);
  v73[3] = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDE864();
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v74 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CFDEAA4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v87 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)v73 - v18;
  v20 = sub_19CFDEB7C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[1] = a1;
  v73[2] = a2;
  sub_19CFE013C();
  sub_19CFDEB70();
  swift_bridgeObjectRetain();
  sub_19CFDEB4C();
  v25 = sub_19CFDEAD4();
  if (v25)
    v26 = v25;
  else
    v26 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
    result = swift_bridgeObjectRelease();
    *v77 = MEMORY[0x1E0DEE9E0];
    return result;
  }
  v28 = *(unsigned __int8 *)(v13 + 80);
  v73[0] = v26;
  v29 = v26 + ((v28 + 32) & ~v28);
  v30 = (id)MEMORY[0x1E0DEE9E0];
  v80 = *(_QWORD *)(v13 + 72);
  v81 = v12;
  v31 = *(void (**)(_QWORD))(v13 + 16);
  v32 = v86;
  v82 = v19;
  v79 = v31;
  while (1)
  {
    v85 = v27;
    v86 = v30;
    v84 = v29;
    v31(v19);
    v33 = sub_19CFDEA8C();
    v35 = v34;
    v90 = v33;
    v91 = v34;
    swift_bridgeObjectRetain();
    v36 = sub_19CFDF728();
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
    {
      if ((v35 & 0x2000000000000000) != 0)
      {
        if ((v35 & 0xF00000000000000) == 0)
          goto LABEL_27;
      }
      else if ((v33 & 0xFFFFFFFFFFFFLL) == 0)
      {
        __break(1u);
LABEL_27:
        __break(1u);
      }
      sub_19CFDF674();
      sub_19CFDF6A4();
      swift_bridgeObjectRelease();
    }
    v37 = v90 & 0xFFFFFFFFFFFFLL;
    if ((v91 & 0x2000000000000000) != 0)
      v37 = HIBYTE(v91) & 0xF;
    if (!v37)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19CFDE828();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19D052350;
      v53 = sub_19CFDF578();
      v54 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 32) = v53;
      *(_QWORD *)(inited + 40) = v55;
      *(_QWORD *)(inited + 72) = v54;
      *(_QWORD *)(inited + 48) = 0xD000000000000026;
      *(_QWORD *)(inited + 56) = 0x800000019D072EC0;
      *(_QWORD *)(inited + 80) = sub_19CFDF578();
      *(_QWORD *)(inited + 88) = v56;
      v57 = sub_19CFE013C();
      *(_QWORD *)(inited + 120) = v54;
      *(_QWORD *)(inited + 96) = v57;
      *(_QWORD *)(inited + 104) = v58;
      sub_19CD30650(inited);
      sub_19CCC5C88((unint64_t *)&qword_1EE440480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
      v59 = v74;
      v60 = v76;
      sub_19CFDEC84();
      sub_19CFDE81C();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v60);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
    ((void (*)(char *, char *, uint64_t))v31)(v87, v19, v12);
    v38 = sub_19CFDEA98();
    sub_19CF16880(v38, v39);
    if (v32)
    {
      v61 = *(void (**)(char *, uint64_t))(v13 + 8);
      v61(v87, v12);
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      v61(v19, v12);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v40 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v41 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    v88 = 0;
    v42 = objc_msgSend(v40, sel_initWithPattern_options_error_, v41, 0, &v88, v73[0]);

    if (!v42)
    {
      v62 = v88;
      sub_19CFDEC9C();

      swift_willThrow();
      v61 = *(void (**)(char *, uint64_t))(v13 + 8);
      v61(v87, v12);
      v19 = v82;
      goto LABEL_24;
    }
    v43 = v88;
    v44 = v87;
    sub_19CFDEA8C();
    v45 = sub_19CFDF728();
    swift_bridgeObjectRelease();
    v83 = *(void (**)(char *, uint64_t))(v13 + 8);
    v83(v44, v12);
    v46 = v90;
    v47 = v91;
    swift_bridgeObjectRetain();
    v48 = v86;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88 = v48;
    v50 = (void *)sub_19CE8AC58((uint64_t)v42, v45 & 1, v46, v47, isUniquelyReferenced_nonNull_native);
    v30 = v88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v50)
      break;
    swift_bridgeObjectRelease();
    v12 = v81;
    v19 = v82;
    v83(v82, v81);
    v31 = v79;
    v29 = v84 + v80;
    v27 = v85 - 1;
    if (v85 == 1)
    {
      result = swift_bridgeObjectRelease();
      *v77 = v30;
      return result;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CFDE828();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
  v63 = swift_initStackObject();
  *(_OWORD *)(v63 + 16) = xmmword_19D052350;
  *(_QWORD *)(v63 + 32) = sub_19CFDF578();
  *(_QWORD *)(v63 + 40) = v64;
  v88 = 0;
  v89 = 0xE000000000000000;
  sub_19CFE010C();
  sub_19CFDF698();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  v65 = v88;
  v66 = v89;
  v67 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v63 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v63 + 48) = v65;
  *(_QWORD *)(v63 + 56) = v66;
  *(_QWORD *)(v63 + 80) = sub_19CFDF578();
  *(_QWORD *)(v63 + 88) = v68;
  v69 = sub_19CFE013C();
  *(_QWORD *)(v63 + 120) = v67;
  *(_QWORD *)(v63 + 96) = v69;
  *(_QWORD *)(v63 + 104) = v70;
  sub_19CD30650(v63);
  sub_19CCC5C88((unint64_t *)&qword_1EE440480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
  v71 = v74;
  v72 = v76;
  sub_19CFDEC84();
  sub_19CFDE81C();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v72);
  swift_willThrow();
  return ((uint64_t (*)(char *, uint64_t))v83)(v82, v81);
}

uint64_t QueryExpression.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  int v56;
  char v57;
  uint64_t v58;
  int v59;
  int v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  int v78;
  void (*v79)(char *, uint64_t, uint64_t);
  unint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83[3];

  v69 = a3;
  v6 = sub_19CFDEAA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v77 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v66 - v12;
  v14 = sub_19CFDEB7C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v3;
  v20 = swift_allocObject();
  v70 = v20;
  *(_QWORD *)(v20 + 16) = MEMORY[0x1E0DEE9E8];
  v76 = v20 + 16;
  sub_19CFDEB70();
  swift_bridgeObjectRetain();
  v67 = a1;
  v68 = a2;
  sub_19CFDEB4C();
  v21 = sub_19CFDEAD4();
  if (v21)
    v22 = v21;
  else
    v22 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v24 = *(unsigned __int8 *)(v7 + 80);
    v66 = v22;
    v71 = (v24 + 32) & ~v24;
    v25 = v22 + v71;
    v26 = *(_QWORD *)(v7 + 72);
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v27 = v79;
    v80 = MEMORY[0x1E0DEE9D8];
    v72 = v19;
    v73 = v26;
    v74 = v7;
    v75 = v6;
    v79(v13, v22 + v71, v6);
    while (1)
    {
      v28 = sub_19CFDEA8C();
      if (*(_QWORD *)(v19 + 16) && (v30 = sub_19CD3FD1C(v28, v29), (v31 & 1) != 0))
      {
        v32 = *(_QWORD *)(v19 + 56) + 16 * v30;
        v33 = *(void **)v32;
        v78 = *(unsigned __int8 *)(v32 + 8);
        v34 = v33;
        swift_bridgeObjectRelease();
        v35 = sub_19CFDEA8C();
        sub_19CE8891C(v83, v35, v36);
        swift_bridgeObjectRelease();
        v37 = sub_19CFDEA98();
        if (v38)
          v39 = v37;
        else
          v39 = 0;
        if (v38)
          v40 = v38;
        else
          v40 = 0xE000000000000000;
        v41 = HIBYTE(v40) & 0xF;
        if ((v40 & 0x2000000000000000) == 0)
          v41 = v39;
        v42 = 7;
        if (((v40 >> 60) & ((v39 & 0x800000000000000) == 0)) != 0)
          v42 = 11;
        v43 = v42 | (v41 << 16);
        swift_bridgeObjectRetain();
        v44 = (void *)sub_19CFDF554();
        v82 = v43;
        v83[0] = v39;
        v83[1] = v40;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC80);
        sub_19CD05BA0((unint64_t *)&qword_1EE43EC88, &qword_1EE43EC80, MEMORY[0x1E0DEC940]);
        sub_19CD41144();
        v45 = sub_19CFDFF14();
        v81 = v34;
        objc_msgSend(v34, sel_rangeOfFirstMatchInString_options_range_, v44, 0, v45, v46, v66);

        sub_19CFDFCC8();
        LOBYTE(v43) = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
        {
          v26 = v73;
          v6 = v75;
          if ((v78 & 1) == 0)
          {

            (*(void (**)(char *, uint64_t))(v74 + 8))(v13, v6);
            swift_release();
            swift_bridgeObjectRelease();
LABEL_37:
            result = swift_bridgeObjectRelease();
            v65 = v69;
            *v69 = 0;
            v65[1] = 0;
            v65[2] = 0;
            return result;
          }
          v7 = v74;
          (*(void (**)(char *, uint64_t))(v74 + 8))(v13, v75);

          v19 = v72;
        }
        else
        {
          v6 = v75;
          v79(v77, (uint64_t)v13, v75);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v80 = sub_19CED5A80(0, *(_QWORD *)(v80 + 16) + 1, 1, v80);
          v19 = v72;
          v26 = v73;
          v7 = v74;
          v48 = v81;
          v50 = *(_QWORD *)(v80 + 16);
          v49 = *(_QWORD *)(v80 + 24);
          if (v50 >= v49 >> 1)
            v80 = sub_19CED5A80(v49 > 1, v50 + 1, 1, v80);
          v51 = v80;
          *(_QWORD *)(v80 + 16) = v50 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v51 + v71 + v50 * v26, v77, v6);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        }
        v27 = v79;
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      }
      v25 += v26;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v27(v13, v25, v6);
    }
  }
  swift_bridgeObjectRelease();
  v80 = MEMORY[0x1E0DEE9D8];
LABEL_32:
  v52 = swift_allocObject();
  v53 = v70;
  *(_QWORD *)(v52 + 16) = sub_19CE8B17C;
  *(_QWORD *)(v52 + 24) = v53;
  v54 = swift_bridgeObjectRetain();
  result = sub_19CE8AF28(v54, (uint64_t (*)(_QWORD *))sub_19CE8B1A8);
  if ((v57 & 1) != 0)
  {
LABEL_40:
    __break(1u);
    return result;
  }
  v58 = result;
  v59 = v56;
  v60 = *(_DWORD *)(v19 + 36);
  v61 = *(_BYTE *)(v19 + 32);
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (v60 != v59)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v58 != 1 << v61)
  {
    swift_release();
    goto LABEL_37;
  }
  v62 = v68;
  swift_bridgeObjectRetain();
  result = swift_release();
  v63 = v69;
  v64 = v67;
  *v69 = v80;
  v63[1] = v64;
  v63[2] = v62;
  return result;
}

BOOL static QueryExpression.MatchResult.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

uint64_t QueryExpression.MatchResult.Index.description.getter()
{
  sub_19CFE0598();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0x287865646E49;
}

BOOL static QueryExpression.MatchResult.Index.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_19CE830E0(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_19CE830F4(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_19CE83108(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_19CE8311C(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_19CE83130()
{
  sub_19CFE0598();
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return 0x287865646E49;
}

uint64_t QueryExpression.MatchResult.raw.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QueryExpression.MatchResult.startIndex.getter()
{
  return 0;
}

uint64_t QueryExpression.MatchResult.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

JetEngine::QueryExpression::MatchResult::Index __swiftcall QueryExpression.MatchResult.index(after:)(JetEngine::QueryExpression::MatchResult::Index after)
{
  BOOL v1;
  JetEngine::QueryExpression::MatchResult::Index result;

  v1 = __OFADD__(after.rawValue, 1);
  result.rawValue = after.rawValue + 1;
  if (v1)
    __break(1u);
  return result;
}

unint64_t QueryExpression.MatchResult.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v5 = *v2;
    if (*(_QWORD *)(v5 + 16) > result)
    {
      v6 = sub_19CFDEAA4();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v3, v6);
    }
  }
  __break(1u);
  return result;
}

uint64_t QueryExpression.MatchResult.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;

  v5 = sub_19CFDEAA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v34 - v11;
  MEMORY[0x1E0C80A78](v13, v14);
  v39 = (char *)&v34 - v15;
  v16 = *v2;
  v17 = *(_QWORD *)(*v2 + 16);
  swift_bridgeObjectRetain_n();
  result = swift_bridgeObjectRetain();
  if (v17)
  {
    v19 = 0;
    v38 = v17 - 1;
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v37 = v17;
    do
    {
      v20 = v19;
      while (1)
      {
        if (v20 >= *(_QWORD *)(v16 + 16))
        {
          __break(1u);
          return result;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v12, v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20, v5);
        if (sub_19CFDEA8C() == a1 && v21 == a2)
          break;
        v22 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_11;
        ++v20;
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        if (v17 == v20)
          goto LABEL_21;
      }
      swift_bridgeObjectRelease();
LABEL_11:
      v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v24 = v39;
      v23(v39, v12, v5);
      v25 = v40;
      v23(v40, v24, v5);
      v26 = sub_19CFDEA98();
      v28 = v27;
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v25, v5);
      if (v28)
      {
        v36 = v26;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_19CD4D730(0, v41[2] + 1, 1, v41);
          v41 = (_QWORD *)result;
        }
        v17 = v37;
        v30 = v41[2];
        v29 = v41[3];
        v31 = v30 + 1;
        if (v30 >= v29 >> 1)
        {
          v35 = v30 + 1;
          result = (uint64_t)sub_19CD4D730((_QWORD *)(v29 > 1), v30 + 1, 1, v41);
          v31 = v35;
          v41 = (_QWORD *)result;
        }
        v32 = v41;
        v41[2] = v31;
        v33 = &v32[2 * v30];
        v33[4] = v36;
        v33[5] = v28;
      }
      else
      {
        v17 = v37;
      }
      v19 = v20 + 1;
    }
    while (v38 != v20);
  }
  else
  {
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return (uint64_t)v41;
}

{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;

  v5 = sub_19CFDEAA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v42 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v13, v14);
  v40 = (char *)&v38 - v15;
  v16 = *v2;
  v17 = *(_QWORD *)(*v2 + 16);
  if (!v17)
    return 0;
  v38 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = v16 + v38;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v43 = *(_QWORD *)(v6 + 72);
  v44 = v19;
  v41 = v16;
  swift_bridgeObjectRetain();
  v45 = a2;
  swift_bridgeObjectRetain();
  v20 = 0;
  v39 = v18;
  while (1)
  {
    v44(v9, v18, v5);
    if (sub_19CFDEA8C() == a1 && v21 == v45)
      break;
    v22 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    v23 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    result = v23(v9, v5);
    if ((v22 & 1) != 0)
      goto LABEL_9;
    ++v20;
    v18 += v43;
    if (v17 == v20)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v23 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  result = v23(v9, v5);
LABEL_9:
  if (v17 == v20)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v26 = v41 + v38;
  v27 = v41;
  while (2)
  {
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= *(_QWORD *)(v27 + 16))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v28 = v40;
    v29 = v39 + v20 * v43;
    v44(v40, v29, v5);
    swift_bridgeObjectRetain();
    sub_19CFDEA98();
    v31 = v30;
    v23(v28, v5);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v31)
    {
      if (v20 != v17)
      {
        if (++v20 != v17)
        {
          v32 = v26 + v43 * v20;
          while (1)
          {
            if (v20 >= *(_QWORD *)(v41 + 16))
            {
              __break(1u);
              goto LABEL_34;
            }
            v44(v42, v32, v5);
            if (sub_19CFDEA8C() == a1 && v33 == v45)
              break;
            v34 = sub_19CFE06A0();
            swift_bridgeObjectRelease();
            result = v23(v42, v5);
            if ((v34 & 1) != 0)
              goto LABEL_27;
            ++v20;
            v32 += v43;
            if (v17 == v20)
              goto LABEL_10;
          }
          swift_bridgeObjectRelease();
          result = v23(v42, v5);
LABEL_27:
          if (v17 != v20)
            continue;
        }
        goto LABEL_10;
      }
      goto LABEL_36;
    }
    break;
  }
  if (v20 == v17)
    goto LABEL_10;
  if (v20 >= *(_QWORD *)(v41 + 16))
    goto LABEL_37;
  v35 = v40;
  v44(v40, v29, v5);
  v25 = sub_19CFDEA98();
  v37 = v36;
  result = v23(v35, v5);
  if (v37)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v25;
  }
LABEL_38:
  __break(1u);
  return result;
}

{
  unint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v5 = sub_19CFDE858();
  MEMORY[0x1E0C80A78](v5, v6);
  v24 = sub_19CFDE864();
  v30 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[1];
  v11 = v2[2];
  v27 = *v2;
  v28 = v10;
  v29 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = a1;
  v26 = a2;
  v12 = QueryExpression.MatchResult.subscript.getter(a1, a2);
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v14)
  {
    sub_19CFDE828();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19D052350;
    *(_QWORD *)(inited + 32) = sub_19CFDF578();
    *(_QWORD *)(inited + 40) = v16;
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CFE010C();
    swift_bridgeObjectRelease();
    v27 = 0xD000000000000019;
    v28 = 0x800000019D072EF0;
    sub_19CFDF698();
    sub_19CFDF698();
    v17 = v27;
    v18 = v28;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v17;
    *(_QWORD *)(inited + 56) = v18;
    *(_QWORD *)(inited + 80) = sub_19CFDF578();
    *(_QWORD *)(inited + 88) = v20;
    *(_QWORD *)(inited + 120) = v19;
    *(_QWORD *)(inited + 96) = v10;
    *(_QWORD *)(inited + 104) = v11;
    swift_bridgeObjectRetain();
    sub_19CD30650(inited);
    sub_19CCC5C88((unint64_t *)&qword_1EE440480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
    v21 = v24;
    sub_19CFDEC84();
    v12 = (uint64_t)v9;
    sub_19CFDE81C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v21);
    swift_willThrow();
  }
  return v12;
}

uint64_t QueryExpression.MatchResult.debugDescription.getter()
{
  _QWORD v1[2];

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440488);
  sub_19CE8B1DC();
  sub_19CFDF4F4();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MatchResult(");
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1[0];
}

uint64_t sub_19CE83BE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_19CFDEA8C();
  v5 = v2;
  sub_19CFDF698();
  sub_19CFDEA98();
  sub_19CFDF698();
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return result;
}

void sub_19CE83C64(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_19CE83C6C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

void (*sub_19CE83C7C(uint64_t *a1, _QWORD *a2))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void (*result)(_QWORD *);

  v5 = sub_19CFDEAA4();
  *a1 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  a1[1] = v6;
  result = (void (*)(_QWORD *))malloc(*(_QWORD *)(v6 + 64));
  a1[2] = (uint64_t)result;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*a2 < *(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    (*(void (**)(void))(v6 + 16))();
    return sub_19CE83D24;
  }
  __break(1u);
  return result;
}

void sub_19CE83D24(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t *sub_19CE83D54@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;

  v3 = *result;
  if (*result < 0 || (v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    v5 = v2[1];
    v6 = v2[2];
    a2[2] = result;
    a2[3] = v5;
    a2[4] = v6;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_19CE83DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = 0;
  a1[4] = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_19CE83DDC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

void sub_19CE83DF0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_19CE83E00@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19CE83E38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_19CFA5CF0(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_19CE83E6C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;

  v2 = *result;
  v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result)
    return 0;
  v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    result = 0;
    v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      result = (uint64_t *)((char *)result + 1);
      if (v4 == result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_19CE83EC4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_19CE83EE0(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_19CE83EFC(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_19CE83F18@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_19CE83F30(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

uint64_t sub_19CE83F48()
{
  _QWORD v1[2];

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440488);
  sub_19CE8B1DC();
  sub_19CFDF4F4();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "MatchResult(");
  sub_19CFDF698();
  swift_bridgeObjectRelease();
  sub_19CFDF698();
  return v1[0];
}

__n128 sub_19CE84014@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;
  unint64_t v3;

  result = *v1;
  v3 = v1[1].n128_u64[0];
  *a1 = *v1;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t sub_19CE84028()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

size_t sub_19CE84034()
{
  uint64_t *v0;
  size_t v1;

  v1 = sub_19CDFDB74(*v0, v0[1], v0[2]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19CE84080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_19CDFCC50(a1, a2, a3, *v3, v3[1], v3[2]);
}

uint64_t sub_19CE8408C()
{
  return sub_19CFDF7AC();
}

uint64_t sub_19CE840AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;

  if ((a4 & 1) != 0)
    return 0;
  swift_beginAccess();
  v9 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_19CD19780(a1, a2, v9);
  swift_bridgeObjectRelease();
  return (a2 ^ 1) & 1;
}

void *sub_19CE84130()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440520);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_28;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v13)
          goto LABEL_28;
        v24 = *(_QWORD *)(v6 + 8 * v9);
        if (!v24)
          break;
      }
    }
LABEL_27:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 24);
    v19 = *(_QWORD *)(v17 + 48);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_OWORD *)(v17 + 8);
    v22 = *(_OWORD *)(v17 + 32);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_OWORD *)(v20 + 8) = v21;
    *(_QWORD *)(v20 + 24) = v18;
    *(_OWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 48) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 3;
  if (v25 >= v13)
    goto LABEL_28;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE84320()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0710);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE844D0()
{
  return sub_19CD5347C(&qword_1ECEB04B8);
}

void *sub_19CE844DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F0);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE84684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF78);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE8482C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = sub_19CFDEDE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1720);
  v7 = *v0;
  v8 = sub_19CFE00DC();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v21, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v21, v6, v2);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_19CE84A50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F8);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_28;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
      {
        v9 = v26 + 2;
        if (v26 + 2 >= v13)
          goto LABEL_28;
        v27 = *(_QWORD *)(v6 + 8 * v9);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 72 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v20 = *(_QWORD *)(v17 + 32);
    v22 = *(_BYTE *)(v17 + 40);
    v23 = *(_QWORD *)(v17 + 64);
    v24 = *(_QWORD *)(v4 + 48) + v16;
    v25 = *(_OWORD *)(v17 + 48);
    *(_QWORD *)v24 = *(_QWORD *)v17;
    *(_QWORD *)(v24 + 8) = v18;
    *(_BYTE *)(v24 + 16) = v19;
    *(_QWORD *)(v24 + 24) = v21;
    *(_QWORD *)(v24 + 32) = v20;
    *(_BYTE *)(v24 + 40) = v22;
    *(_OWORD *)(v24 + 48) = v25;
    *(_QWORD *)(v24 + 64) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 3;
  if (v28 >= v13)
    goto LABEL_28;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE84C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440510);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE84DE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440508);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19CE84F78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440500);
  v2 = *v0;
  v3 = sub_19CFE00DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    result = (void *)sub_19CD23A14(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v17 = *(_QWORD *)(v4 + 48) + v16;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19CE85144()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440520);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v35 = v1;
  v36 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v37 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain_n();
  v10 = 0;
  v38 = v2;
  v39 = v4;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v40 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_21;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v37)
      goto LABEL_35;
    v16 = *(_QWORD *)(v36 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_35;
      v16 = *(_QWORD *)(v36 + 8 * v17);
      if (!v16)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v37)
        {
LABEL_35:
          result = swift_release_n();
          v1 = v35;
          goto LABEL_37;
        }
        v16 = *(_QWORD *)(v36 + 8 * v18);
        v17 = v10 + 3;
        if (!v16)
          break;
      }
    }
LABEL_20:
    v7 = (v16 - 1) & v16;
    v40 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 56 * v14);
    v21 = *v19;
    v20 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[4];
    v25 = v19[5];
    v26 = v19[6];
    sub_19CFE08C8();
    v41 = v24;
    if (v20)
    {
      sub_19CFE08E0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v27 = v21;
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = v21;
      sub_19CFE08E0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    sub_19CFE08E0();
    if (v26)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    result = sub_19CFE0910();
    v4 = v39;
    v28 = -1 << *(_BYTE *)(v39 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v39 + 48) + 56 * v11);
    *v12 = v27;
    v12[1] = v20;
    v12[2] = v22;
    v12[3] = v23;
    v10 = v40;
    v12[4] = v41;
    v12[5] = v25;
    v12[6] = v26;
    ++*(_QWORD *)(v39 + 16);
    v2 = v38;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v37)
      goto LABEL_35;
    v16 = *(_QWORD *)(v36 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_20;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19CE854C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0710);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain_n();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v0;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v11 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_19CE85750()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F0);
  result = sub_19CFE00E8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_19CFE08C8();
    sub_19CFE08D4();
    result = sub_19CFE0910();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19CE859D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF78);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    sub_19CDC54D8((uint64_t)v19, v15);
    sub_19CFE0910();
    result = sub_19CFE0088();
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_19CE85BE0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_19CFE00E8();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_24;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v31)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_24:
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    sub_19CFE08C8();
    swift_bridgeObjectRetain_n();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    result = sub_19CFE0910();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v2;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19CE85E94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = sub_19CFDEDE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1720);
  v8 = sub_19CFE00E8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v32 = v0;
  v33 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v34)
        goto LABEL_33;
      v21 = *(_QWORD *)(v33 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v34)
          goto LABEL_33;
        v21 = *(_QWORD *)(v33 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_23:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    v23 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v23 * v19, v2);
    sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    result = sub_19CFDF4C4();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v17 * v23, v6, v2);
    ++*(_QWORD *)(v9 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(v33 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_19CE861BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t i;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F8);
  v2 = sub_19CFE00E8();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_24:
    result = swift_release();
    *v25 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v26 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v27 = (unint64_t)(v4 + 63) >> 6;
  v28 = v2 + 56;
  v29 = v1;
  result = swift_retain();
  for (i = 0; ; i = v32)
  {
    if (v6)
    {
      v31 = (v6 - 1) & v6;
      v32 = i;
      v9 = __clz(__rbit64(v6)) | (i << 6);
      v10 = v29;
      goto LABEL_7;
    }
    v21 = i + 1;
    v10 = v29;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    v23 = i + 1;
    if (!v22)
    {
      v23 = i + 2;
      if (i + 2 >= v27)
        goto LABEL_23;
      v22 = *(_QWORD *)(v26 + 8 * v23);
      if (!v22)
      {
        v23 = i + 3;
        if (i + 3 >= v27)
          goto LABEL_23;
        v22 = *(_QWORD *)(v26 + 8 * v23);
        if (!v22)
          break;
      }
    }
LABEL_22:
    v31 = (v22 - 1) & v22;
    v32 = v23;
    v9 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_7:
    v11 = *(_QWORD *)(v10 + 48) + 72 * v9;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    v16 = *(_QWORD *)(v11 + 32);
    v17 = *(_BYTE *)(v11 + 40);
    v18 = *(_QWORD *)(v11 + 48);
    v30 = *(_QWORD *)(v11 + 56);
    v19 = *(_QWORD *)(v11 + 64);
    sub_19CFE08C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19CF71A7C();
    sub_19CFE0910();
    result = sub_19CFE0088();
    *(_QWORD *)(v28 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = *(_QWORD *)(v3 + 48) + 72 * result;
    *(_QWORD *)v20 = v12;
    *(_QWORD *)(v20 + 8) = v13;
    *(_BYTE *)(v20 + 16) = v14;
    *(_QWORD *)(v20 + 24) = v15;
    *(_QWORD *)(v20 + 32) = v16;
    *(_BYTE *)(v20 + 40) = v17;
    v6 = v31;
    *(_QWORD *)(v20 + 48) = v18;
    *(_QWORD *)(v20 + 56) = v30;
    *(_QWORD *)(v20 + 64) = v19;
    ++*(_QWORD *)(v3 + 16);
  }
  v24 = i + 4;
  if (i + 4 >= v27)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  v22 = *(_QWORD *)(v26 + 8 * v24);
  if (v22)
  {
    v23 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_19CE86490()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440510);
  result = sub_19CFE00E8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_19CFE08C8();
    sub_19CFE08D4();
    result = sub_19CFE0910();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19CE86708()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440508);
  result = sub_19CFE00E8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v10)
      goto LABEL_35;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_35;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_35;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_19CFE08C8();
    if (v18)
      sub_19CFE08D4();
    sub_19CFE08D4();
    result = sub_19CFE0910();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_35:
    result = swift_release();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_35;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_19CE86998()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440500);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9)
      goto LABEL_33;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v9)
        goto LABEL_33;
      v20 = *(_QWORD *)(v6 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v9)
          goto LABEL_33;
        v20 = *(_QWORD *)(v6 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v8 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_19CD23A14(*(_QWORD *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    result = sub_19CFE0094();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v4 + 48) + 40 * v13;
    v15 = v29[0];
    v16 = v29[1];
    *(_QWORD *)(v14 + 32) = v30;
    *(_OWORD *)v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(_QWORD *)(v4 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v20 = *(_QWORD *)(v6 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_19CE86C28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440520);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_41;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v36 = (_QWORD *)(v2 + 56);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = v1;
  v35 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v37 = v2;
  v38 = v4;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v15 >= v35)
      break;
    v16 = v36;
    v17 = v36[v15];
    ++v10;
    if (!v17)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v35)
        goto LABEL_35;
      v17 = v36[v10];
      if (!v17)
      {
        v18 = v15 + 2;
        if (v18 >= v35)
        {
LABEL_35:
          swift_release();
          v1 = v34;
          goto LABEL_37;
        }
        v17 = v36[v18];
        if (!v17)
        {
          while (1)
          {
            v10 = v18 + 1;
            if (__OFADD__(v18, 1))
              goto LABEL_43;
            if (v10 >= v35)
              goto LABEL_35;
            v17 = v36[v10];
            ++v18;
            if (v17)
              goto LABEL_21;
          }
        }
        v10 = v18;
      }
    }
LABEL_21:
    v7 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_22:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 56 * v14);
    v21 = *v19;
    v20 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[5];
    v39 = v19[4];
    v25 = v19[6];
    sub_19CFE08C8();
    sub_19CFE08E0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
    sub_19CFE08E0();
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_19CFDF650();
      swift_bridgeObjectRelease();
    }
    result = sub_19CFE0910();
    v4 = v38;
    v26 = -1 << *(_BYTE *)(v38 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v38 + 48) + 56 * v11);
    *v12 = v21;
    v12[1] = v20;
    v12[2] = v22;
    v12[3] = v23;
    v12[4] = v39;
    v12[5] = v24;
    v12[6] = v25;
    ++*(_QWORD *)(v38 + 16);
    v2 = v37;
  }
  swift_release();
  v1 = v34;
  v16 = v36;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v2 + 32);
  if (v33 > 63)
    bzero(v16, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v33;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE86FB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB0710);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v0;
  v32 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8)
      break;
    v17 = (_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_31;
      v18 = *(_QWORD *)(v32 + 8 * v11);
      if (!v18)
      {
        v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          v1 = v31;
          goto LABEL_33;
        }
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            v11 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_39;
            if (v11 >= v8)
              goto LABEL_31;
            v18 = *(_QWORD *)(v32 + 8 * v11);
            ++v19;
            if (v18)
              goto LABEL_21;
          }
        }
        v11 = v19;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v20;
    v22 = v20[1];
    sub_19CFE08C8();
    sub_19CFDF650();
    result = sub_19CFE0910();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  swift_release();
  v1 = v31;
  v17 = (_QWORD *)(v2 + 56);
LABEL_33:
  v30 = 1 << *(_BYTE *)(v2 + 32);
  if (v30 > 63)
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v30;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_37:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE87278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F0);
  result = sub_19CFE00E8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_19CFE08C8();
      sub_19CFE08D4();
      result = sub_19CFE0910();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_19CE87520()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  char v20[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FF78);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_23;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_23;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_23;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                v19 = 1 << *(_BYTE *)(v2 + 32);
                if (v19 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v19;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_29;
                  if (v12 >= v9)
                    goto LABEL_23;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_22;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_22:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_19CFE08C8();
      sub_19CDC54D8((uint64_t)v20, v15);
      sub_19CFE0910();
      result = sub_19CFE0088();
      *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE87764()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_19CFDEDE0();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1720);
  v7 = sub_19CFE00E8();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v36 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v34 = v0;
    v35 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_33;
        v20 = v36[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_33;
          v20 = v36[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v35)
              goto LABEL_33;
            v20 = v36[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v35)
              {
LABEL_33:
                swift_release();
                v1 = v34;
                v33 = 1 << *(_BYTE *)(v6 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v20 = v36[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v35)
                    goto LABEL_33;
                  v20 = v36[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = v6;
      v23 = *(_QWORD *)(v6 + 48);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
      v25(v5, v23 + v24 * v18, v2);
      sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      result = sub_19CFDF4C4();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(_QWORD *)(v8 + 48) + v16 * v24, v5, v2);
      ++*(_QWORD *)(v8 + 16);
      v6 = v22;
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

unint64_t sub_19CE87AD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t i;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4404F8);
  v2 = sub_19CFE00E8();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v27 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v28 = (unint64_t)(v4 + 63) >> 6;
    v29 = v2 + 56;
    v30 = v1;
    result = swift_retain();
    for (i = 0; ; i = v33)
    {
      if (v6)
      {
        v32 = (v6 - 1) & v6;
        v33 = i;
        v9 = __clz(__rbit64(v6)) | (i << 6);
        v10 = v30;
      }
      else
      {
        v21 = i + 1;
        v10 = v30;
        if (__OFADD__(i, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v21 >= v28)
          goto LABEL_23;
        v22 = v27[v21];
        v23 = i + 1;
        if (!v22)
        {
          v23 = i + 2;
          if (i + 2 >= v28)
            goto LABEL_23;
          v22 = v27[v23];
          if (!v22)
          {
            v23 = i + 3;
            if (i + 3 >= v28)
              goto LABEL_23;
            v22 = v27[v23];
            if (!v22)
            {
              v24 = i + 4;
              if (i + 4 >= v28)
              {
LABEL_23:
                swift_release();
                v25 = 1 << *(_BYTE *)(v30 + 32);
                if (v25 > 63)
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v25;
                *(_QWORD *)(v30 + 16) = 0;
                break;
              }
              v22 = v27[v24];
              if (!v22)
              {
                while (1)
                {
                  v23 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_29;
                  if (v23 >= v28)
                    goto LABEL_23;
                  v22 = v27[v23];
                  ++v24;
                  if (v22)
                    goto LABEL_22;
                }
              }
              v23 = i + 4;
            }
          }
        }
LABEL_22:
        v32 = (v22 - 1) & v22;
        v33 = v23;
        v9 = __clz(__rbit64(v22)) + (v23 << 6);
      }
      v11 = *(_QWORD *)(v10 + 48) + 72 * v9;
      v13 = *(_QWORD *)v11;
      v12 = *(_QWORD *)(v11 + 8);
      v14 = *(_BYTE *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      v16 = *(_QWORD *)(v11 + 32);
      v17 = *(_BYTE *)(v11 + 40);
      v18 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v11 + 48);
      v19 = *(_QWORD *)(v11 + 64);
      sub_19CFE08C8();
      sub_19CF71A7C();
      sub_19CFE0910();
      result = sub_19CFE0088();
      *(_QWORD *)(v29 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v20 = *(_QWORD *)(v3 + 48) + 72 * result;
      *(_QWORD *)v20 = v13;
      *(_QWORD *)(v20 + 8) = v12;
      *(_BYTE *)(v20 + 16) = v14;
      *(_QWORD *)(v20 + 24) = v15;
      *(_QWORD *)(v20 + 32) = v16;
      *(_BYTE *)(v20 + 40) = v17;
      v6 = v32;
      *(_QWORD *)(v20 + 48) = v31;
      *(_QWORD *)(v20 + 56) = v18;
      *(_QWORD *)(v20 + 64) = v19;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v26 = v3;
  return result;
}

uint64_t sub_19CE87DC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440510);
  result = sub_19CFE00E8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_19CFE08C8();
      sub_19CFE08D4();
      result = sub_19CFE0910();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE8806C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440508);
  result = sub_19CFE00E8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_35;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_35;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_35;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_35:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v5 >= v10)
                    goto LABEL_35;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_19CFE08C8();
      if (v18)
        sub_19CFE08D4();
      sub_19CFE08D4();
      result = sub_19CFE0910();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE8832C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440500);
  v3 = sub_19CFE00E8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9)
          goto LABEL_33;
        v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v9)
            goto LABEL_33;
          v18 = v6[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v9)
              goto LABEL_33;
            v18 = v6[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v18 = v6[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_23:
        v8 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = *(_QWORD *)(v2 + 48) + 40 * v16;
      v29 = *(_OWORD *)v20;
      v30 = *(_OWORD *)(v20 + 16);
      v31 = *(_QWORD *)(v20 + 32);
      result = sub_19CFE0094();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v4 + 48) + 40 * v13;
      *(_OWORD *)v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(_QWORD *)(v14 + 32) = v31;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_19CE885F4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  __int128 v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = *v2;
  sub_19CFE08C8();
  v5 = *a2;
  v40 = a2[1];
  sub_19CFE08E0();
  swift_bridgeObjectRetain();
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[5];
  v9 = a2[6];
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08E0();
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  v35 = (uint64_t)a2;
  v10 = sub_19CFE0910();
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  v13 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v38 = v5;
    v39 = v9;
    v37 = v8;
    v14 = ~v11;
    v15 = *(_QWORD *)(v4 + 48);
    v16 = v40;
    do
    {
      v17 = (uint64_t *)(v15 + 56 * v12);
      v18 = *v17;
      v19 = v17[1];
      v21 = v17[5];
      v20 = v17[6];
      if (v17[2] != v6 || v17[3] != v7)
      {
        v23 = sub_19CFE06A0();
        v16 = v40;
        if ((v23 & 1) == 0)
          goto LABEL_8;
      }
      if (v19)
      {
        if (!v16)
          goto LABEL_8;
        if (v18 != v38 || v19 != v16)
        {
          v25 = sub_19CFE06A0();
          v16 = v40;
          if ((v25 & 1) == 0)
            goto LABEL_8;
        }
      }
      else if (v16)
      {
        goto LABEL_8;
      }
      if (v20)
      {
        if (v39)
        {
          v26 = v21 == v37 && v20 == v39;
          if (v26 || (v27 = sub_19CFE06A0(), v16 = v40, (v27 & 1) != 0))
          {
LABEL_30:
            swift_bridgeObjectRelease();
            sub_19CD2AF5C(v35);
            v28 = *(_QWORD *)(*v34 + 48) + 56 * v12;
            v29 = *(_QWORD *)(v28 + 24);
            v30 = *(_QWORD *)(v28 + 48);
            *(_QWORD *)a1 = *(_QWORD *)v28;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(v28 + 8);
            *(_QWORD *)(a1 + 24) = v29;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(v28 + 32);
            *(_QWORD *)(a1 + 48) = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return 0;
          }
        }
      }
      else if (!v39)
      {
        goto LABEL_30;
      }
LABEL_8:
      v12 = (v12 + 1) & v14;
    }
    while (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = *v34;
  *v34 = 0x8000000000000000;
  sub_19CD2AF14(v35);
  sub_19CE89928(v35, v12, isUniquelyReferenced_nonNull_native);
  *v34 = v41;
  swift_bridgeObjectRelease();
  v33 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v35;
  *(_OWORD *)(a1 + 16) = v33;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v35 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v35 + 48);
  return 1;
}

uint64_t sub_19CE8891C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  v8 = sub_19CFE0910();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_19CFE06A0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_19CFE06A0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_19CE89BF8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_19CE88AC8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;

  v5 = *v2;
  sub_19CFE08C8();
  sub_19CFE08D4();
  v6 = sub_19CFE0910();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = *(_QWORD *)(v5 + 48);
    if (*(_QWORD *)(v9 + 8 * v8) == a2)
    {
LABEL_6:
      swift_release();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
      swift_retain();
      return 0;
    }
    v10 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      if (*(_QWORD *)(v9 + 8 * v8) == a2)
        goto LABEL_6;
    }
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v2;
  *v2 = 0x8000000000000000;
  v13 = swift_retain();
  sub_19CE89D90(v13, v8, isUniquelyReferenced_nonNull_native);
  *v2 = v14;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_19CE88BFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD427F4(a1, a2, a3, (uint64_t *)&unk_1EE4371C0);
}

uint64_t sub_19CE88C10(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  _QWORD v19[9];

  v5 = *v2;
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CDC54D8((uint64_t)v19, a2);
  v6 = sub_19CFE0910();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    sub_19CDD11AC(v9, a2);
    v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    v12 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v12;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v13 = swift_bridgeObjectRetain();
      sub_19CDD11AC(v13, a2);
      v15 = v14;
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19[0] = *v2;
  *v2 = 0x8000000000000000;
  v18 = swift_bridgeObjectRetain();
  sub_19CE89EE0(v18, v8, isUniquelyReferenced_nonNull_native);
  *v2 = v19[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_19CE88DA0(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, MEMORY[0x1E0CAFFF8]);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, v11, MEMORY[0x1E0CB0018]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_19CFDF4C4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_19CCC5C88((unint64_t *)&qword_1ECEB29E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v21 = sub_19CFDF548();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_19CE8A068((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_19CE88FFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  double v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  BOOL v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  __int128 v42;
  __int128 v43;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = *v2;
  sub_19CFE08C8();
  swift_bridgeObjectRetain();
  sub_19CF71A7C();
  v5 = sub_19CFE0910();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  v65 = v4 + 56;
  v55 = a2;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_93:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = *v54;
    *v54 = 0x8000000000000000;
    sub_19CE08A9C(v55);
    sub_19CE8A26C(v55, v7, isUniquelyReferenced_nonNull_native);
    *v54 = v67;
    swift_bridgeObjectRelease();
    v42 = *(_OWORD *)(v55 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(a1 + 48) = v42;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v55 + 64);
    v43 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v55;
    *(_OWORD *)(a1 + 16) = v43;
    return 1;
  }
  v64 = ~v6;
  v8 = *(_QWORD *)a2;
  v66 = *(_QWORD *)(a2 + 8);
  v62 = *(_QWORD **)(a2 + 24);
  v9 = *(double *)(a2 + 32);
  v58 = *(_BYTE *)(a2 + 40);
  v57 = *(_QWORD **)(a2 + 48);
  v52 = *(_QWORD *)(a2 + 56);
  v53 = *(_QWORD *)(a2 + 64);
  if (*(_BYTE *)(a2 + 16))
    v10 = 0x6469746E65696C63;
  else
    v10 = 0x646972657375;
  v11 = 0xE600000000000000;
  if (*(_BYTE *)(a2 + 16))
    v11 = 0xE800000000000000;
  v60 = v11;
  v61 = v10;
  v59 = *(_QWORD *)a2;
  while (1)
  {
    v12 = *(_QWORD *)(v4 + 48) + 72 * v7;
    v13 = *(unsigned __int8 *)(v12 + 16);
    v14 = *(_QWORD **)(v12 + 24);
    v15 = *(double *)(v12 + 32);
    v16 = *(_BYTE *)(v12 + 40);
    v17 = *(_QWORD **)(v12 + 48);
    v63 = *(_QWORD *)(v12 + 56);
    v18 = *(_QWORD *)(v12 + 64);
    v19 = *(_QWORD *)v12 == v8 && *(_QWORD *)(v12 + 8) == v66;
    if (!v19 && (sub_19CFE06A0() & 1) == 0)
      goto LABEL_10;
    v20 = v4;
    if (v13)
      v21 = 0x6469746E65696C63;
    else
      v21 = 0x646972657375;
    if (v13)
      v22 = 0xE800000000000000;
    else
      v22 = 0xE600000000000000;
    if (v21 == v61 && v22 == v60)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_19CFE06A0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_8;
    }
    v25 = v14[2];
    v26 = v62;
    if (v25 != v62[2])
      goto LABEL_8;
    if (v25)
      v27 = v14 == v62;
    else
      v27 = 1;
    if (!v27)
    {
      if (v14[4] != v62[4] || v14[5] != v62[5])
      {
        v4 = v20;
        v32 = sub_19CFE06A0();
        v26 = v62;
        if ((v32 & 1) == 0)
          goto LABEL_89;
      }
      if (v25 != 1)
      {
        if (v14[6] != v26[6] || v14[7] != v26[7])
        {
          v4 = v20;
          v34 = sub_19CFE06A0();
          v26 = v62;
          if ((v34 & 1) == 0)
            goto LABEL_89;
        }
        v35 = v25 - 2;
        if (v35)
        {
          v36 = 0;
          while (1)
          {
            if (v14[v36 + 8] != v26[v36 + 8] || v14[v36 + 9] != v26[v36 + 9])
            {
              v38 = sub_19CFE06A0();
              v26 = v62;
              if ((v38 & 1) == 0)
                break;
            }
            v36 += 2;
            if (!--v35)
              goto LABEL_35;
          }
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = v20;
LABEL_9:
          v8 = v59;
          goto LABEL_10;
        }
      }
    }
LABEL_35:
    v4 = v20;
    if ((v16 & 1) != 0)
    {
      if ((v58 & 1) == 0)
        goto LABEL_89;
    }
    else if ((v58 & 1) != 0 || v15 != v9)
    {
      goto LABEL_89;
    }
    if (v17)
    {
      if (!v57)
        goto LABEL_89;
      v28 = v17[2];
      if (v28 != v57[2])
        goto LABEL_89;
      if (v28 && v17 != v57)
      {
        if ((v17[4] != v57[4] || v17[5] != v57[5]) && (sub_19CFE06A0() & 1) == 0)
          goto LABEL_8;
        if (v28 != 1)
        {
          if ((v17[6] != v57[6] || v17[7] != v57[7]) && (sub_19CFE06A0() & 1) == 0)
            goto LABEL_8;
          v29 = v28 - 2;
          if (v29)
          {
            v30 = 0;
            do
            {
              v39 = v17[v30 + 8] == v57[v30 + 8] && v17[v30 + 9] == v57[v30 + 9];
              if (!v39 && (sub_19CFE06A0() & 1) == 0)
                goto LABEL_8;
              v30 += 2;
            }
            while (--v29);
          }
        }
      }
    }
    else if (v57)
    {
      goto LABEL_8;
    }
    v4 = v20;
    if (!v18)
    {
      if (!v53)
        break;
LABEL_89:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    if (!v53)
      goto LABEL_89;
    v8 = v59;
    if (v63 == v52 && v18 == v53)
      break;
    v40 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      goto LABEL_95;
LABEL_10:
    v7 = (v7 + 1) & v64;
    if (((*(_QWORD *)(v65 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_93;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_95:
  swift_bridgeObjectRelease();
  sub_19CE8B504(a2);
  v45 = *(_QWORD *)(*v54 + 48) + 72 * v7;
  v46 = *(_QWORD *)(v45 + 8);
  v47 = *(_BYTE *)(v45 + 16);
  v49 = *(_QWORD *)(v45 + 24);
  v48 = *(_QWORD *)(v45 + 32);
  v50 = *(_BYTE *)(v45 + 40);
  v51 = *(_QWORD *)(v45 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v45;
  *(_QWORD *)(a1 + 8) = v46;
  *(_BYTE *)(a1 + 16) = v47;
  *(_QWORD *)(a1 + 24) = v49;
  *(_QWORD *)(a1 + 32) = v48;
  *(_BYTE *)(a1 + 40) = v50;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v45 + 48);
  *(_QWORD *)(a1 + 64) = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_19CE89694(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_19CFE08C8();
  sub_19CFE08D4();
  v6 = sub_19CFE0910();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_19CE8A848(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_19CE897B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  __int128 v13;
  uint64_t v15;
  _BYTE v16[40];

  v3 = v2;
  v6 = *v2;
  swift_bridgeObjectRetain();
  v7 = sub_19CFE0094();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      sub_19CD23A14(*(_QWORD *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      v11 = MEMORY[0x1A1ADA2C4](v16, a2);
      sub_19CD20334((uint64_t)v16);
      if ((v11 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_19CD20334(a2);
    sub_19CD23A14(*(_QWORD *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19CD23A14(a2, (uint64_t)v16);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_19CE8A994((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_19CE89928(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = (uint64_t *)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v34 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_38;
  if ((a3 & 1) != 0)
  {
    sub_19CE86C28();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_19CE84130();
      goto LABEL_38;
    }
    sub_19CE85144();
  }
  v8 = *v3;
  sub_19CFE08C8();
  v9 = *v5;
  v38 = v5[1];
  sub_19CFE08E0();
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  v10 = v5[2];
  v11 = v5[3];
  v12 = v5[5];
  v13 = v5[6];
  swift_bridgeObjectRetain();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  sub_19CFE08E0();
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_19CFDF650();
    swift_bridgeObjectRelease();
  }
  result = sub_19CFE0910();
  v14 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v14;
  v15 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v36 = v9;
    v37 = v13;
    v35 = v12;
    v16 = ~v14;
    v17 = *(_QWORD *)(v8 + 48);
    v18 = v38;
    do
    {
      v19 = (uint64_t *)(v17 + 56 * a2);
      v21 = *v19;
      v20 = v19[1];
      result = v19[2];
      v23 = v19[5];
      v22 = v19[6];
      if (result != v10 || v19[3] != v11)
      {
        result = sub_19CFE06A0();
        v18 = v38;
        if ((result & 1) == 0)
          goto LABEL_15;
      }
      if (v20)
      {
        if (!v18)
          goto LABEL_15;
        if (v21 != v36 || v20 != v18)
        {
          result = sub_19CFE06A0();
          v18 = v38;
          if ((result & 1) == 0)
            goto LABEL_15;
        }
      }
      else if (v18)
      {
        goto LABEL_15;
      }
      if (v22)
      {
        if (v37)
        {
          v26 = v23 == v35 && v22 == v37;
          if (v26 || (result = sub_19CFE06A0(), v18 = v38, (result & 1) != 0))
          {
LABEL_37:
            result = sub_19CFE0820();
            __break(1u);
            break;
          }
        }
      }
      else if (!v37)
      {
        goto LABEL_37;
      }
LABEL_15:
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_38:
  v27 = *v33;
  *(_QWORD *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v28 = *(_QWORD *)(v27 + 48) + 56 * a2;
  v29 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v34;
  *(_OWORD *)(v28 + 16) = v29;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v34 + 32);
  *(_QWORD *)(v28 + 48) = *(_QWORD *)(v34 + 48);
  v30 = *(_QWORD *)(v27 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
    __break(1u);
  else
    *(_QWORD *)(v27 + 16) = v32;
  return result;
}

uint64_t sub_19CE89BF8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_19CE86FB4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_19CE84320();
      goto LABEL_22;
    }
    sub_19CE854C8();
  }
  v11 = *v4;
  sub_19CFE08C8();
  sub_19CFDF650();
  result = sub_19CFE0910();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_19CFE06A0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_19CFE0820();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_19CFE06A0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_19CE89D90(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_19CE87278();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_19CE844DC();
      goto LABEL_14;
    }
    sub_19CE85750();
  }
  v8 = *v3;
  sub_19CFE08C8();
  sub_19CFE08D4();
  result = sub_19CFE0910();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43FB20);
      result = sub_19CFE0820();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_19CE89EE0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_19CE87520();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_19CE84684();
      goto LABEL_14;
    }
    sub_19CE859D0();
  }
  v8 = *v3;
  sub_19CFE08C8();
  sub_19CDC54D8((uint64_t)v21, v5);
  result = sub_19CFE0910();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = swift_bridgeObjectRetain();
    sub_19CDD11AC(v10, v5);
    v12 = v11;
    result = swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
LABEL_13:
      result = sub_19CFE0820();
      __break(1u);
    }
    else
    {
      v13 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = swift_bridgeObjectRetain();
        sub_19CDD11AC(v14, v5);
        v16 = v15;
        result = swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = v5;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_19CE8A068(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v3 + 16);
  v13 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_19CE87764();
  }
  else
  {
    if (v13 > v12)
    {
      sub_19CE8482C();
      goto LABEL_12;
    }
    sub_19CE85E94();
  }
  v14 = *v3;
  sub_19CCC5C88((unint64_t *)&qword_1ECEB29D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v15 = sub_19CFDF4C4();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v11, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_19CCC5C88((unint64_t *)&qword_1ECEB29E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v20 = sub_19CFDF548();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v9);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_19CFE0820();
  __break(1u);
  return result;
}

uint64_t sub_19CE8A26C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  double v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  BOOL v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v53 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_19CE87AD0();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_19CE84A50();
        goto LABEL_99;
      }
      sub_19CE861BC();
    }
    v8 = *v3;
    sub_19CFE08C8();
    sub_19CF71A7C();
    result = sub_19CFE0910();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    v58 = v8 + 56;
    v59 = v8;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v57 = ~v9;
      v60 = *(_QWORD *)(v5 + 8);
      v61 = *(_QWORD *)v5;
      v56 = *(_QWORD **)(v5 + 24);
      v10 = *(double *)(v5 + 32);
      v54 = *(_BYTE *)(v5 + 40);
      v51 = *(_QWORD **)(v5 + 48);
      v49 = *(_QWORD *)(v5 + 56);
      v50 = *(_QWORD *)(v5 + 64);
      if (*(_BYTE *)(v5 + 16))
        v11 = 0x6469746E65696C63;
      else
        v11 = 0x646972657375;
      v55 = v11;
      if (*(_BYTE *)(v5 + 16))
        v12 = 0xE800000000000000;
      else
        v12 = 0xE600000000000000;
      while (1)
      {
        v13 = *(_QWORD *)(v59 + 48) + 72 * a2;
        v14 = *(unsigned __int8 *)(v13 + 16);
        v15 = *(_QWORD **)(v13 + 24);
        v16 = *(double *)(v13 + 32);
        v17 = *(_BYTE *)(v13 + 40);
        v19 = *(_QWORD **)(v13 + 48);
        v18 = *(_QWORD *)(v13 + 56);
        v20 = *(_QWORD *)(v13 + 64);
        if (*(_QWORD *)v13 != v61 || *(_QWORD *)(v13 + 8) != v60)
        {
          result = sub_19CFE06A0();
          if ((result & 1) == 0)
            goto LABEL_17;
        }
        if (v14)
          v22 = 0x6469746E65696C63;
        else
          v22 = 0x646972657375;
        if (v14)
          v23 = 0xE800000000000000;
        else
          v23 = 0xE600000000000000;
        if (v22 == v55 && v23 == v12)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v25 = sub_19CFE06A0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0)
            goto LABEL_15;
        }
        v26 = v15[2];
        v27 = v56;
        if (v26 != v56[2])
          goto LABEL_15;
        if (v26 && v15 != v56)
        {
          if (v15[4] != v56[4] || v15[5] != v56[5])
          {
            v33 = sub_19CFE06A0();
            v27 = v56;
            if ((v33 & 1) == 0)
              goto LABEL_15;
          }
          if (v26 != 1)
          {
            if (v15[6] != v27[6] || v15[7] != v27[7])
            {
              v35 = sub_19CFE06A0();
              v27 = v56;
              if ((v35 & 1) == 0)
                goto LABEL_15;
            }
            v36 = v26 - 2;
            if (v36)
              break;
          }
        }
LABEL_42:
        if ((v17 & 1) != 0)
        {
          if ((v54 & 1) == 0)
            goto LABEL_15;
        }
        else if ((v54 & 1) != 0 || v16 != v10)
        {
          goto LABEL_15;
        }
        if (v19)
        {
          if (!v51)
            goto LABEL_15;
          v29 = v19[2];
          if (v29 != v51[2])
            goto LABEL_15;
          if (v29 && v19 != v51)
          {
            if ((v19[4] != v51[4] || v19[5] != v51[5]) && (sub_19CFE06A0() & 1) == 0)
              goto LABEL_15;
            if (v29 != 1)
            {
              if ((v19[6] != v51[6] || v19[7] != v51[7]) && (sub_19CFE06A0() & 1) == 0)
                goto LABEL_15;
              v30 = v29 - 2;
              if (v30)
              {
                v31 = 0;
                do
                {
                  v40 = v19[v31 + 8] == v51[v31 + 8] && v19[v31 + 9] == v51[v31 + 9];
                  if (!v40 && (sub_19CFE06A0() & 1) == 0)
                    goto LABEL_15;
                  v31 += 2;
                }
                while (--v30);
              }
            }
          }
        }
        else if (v51)
        {
          goto LABEL_15;
        }
        if (!v20)
        {
          swift_bridgeObjectRelease();
          if (!v50)
            goto LABEL_103;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        if (!v50)
          goto LABEL_15;
        if (v18 == v49 && v20 == v50)
          goto LABEL_102;
        v41 = sub_19CFE06A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v41 & 1) != 0)
          goto LABEL_104;
LABEL_17:
        a2 = (a2 + 1) & v57;
        if (((*(_QWORD *)(v58 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_99;
      }
      v37 = 0;
      while (1)
      {
        if (v15[v37 + 8] != v27[v37 + 8] || v15[v37 + 9] != v27[v37 + 9])
        {
          v39 = sub_19CFE06A0();
          v27 = v56;
          if ((v39 & 1) == 0)
            break;
        }
        v37 += 2;
        if (!--v36)
          goto LABEL_42;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      result = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
LABEL_99:
  v42 = *v52;
  *(_QWORD *)(*v52 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v43 = *(_QWORD *)(v42 + 48) + 72 * a2;
  *(_QWORD *)(v43 + 64) = *(_QWORD *)(v53 + 64);
  v44 = *(_OWORD *)(v53 + 48);
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v43 + 48) = v44;
  v45 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v53;
  *(_OWORD *)(v43 + 16) = v45;
  v46 = *(_QWORD *)(v42 + 16);
  v47 = __OFADD__(v46, 1);
  v48 = v46 + 1;
  if (v47)
  {
    __break(1u);
    __break(1u);
LABEL_102:
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_104:
    result = sub_19CFE0820();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v42 + 16) = v48;
  }
  return result;
}

uint64_t sub_19CE8A848(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_19CE87DC4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_19CE84C50();
      goto LABEL_14;
    }
    sub_19CE86490();
  }
  v8 = *v3;
  sub_19CFE08C8();
  sub_19CFE08D4();
  result = sub_19CFE0910();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_19CFE0820();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_19CE8A994(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _BYTE v19[40];

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_19CE8832C();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_19CE84F78();
      goto LABEL_12;
    }
    sub_19CE86998();
  }
  v9 = *v3;
  result = sub_19CFE0094();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v10;
    do
    {
      sub_19CD23A14(*(_QWORD *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      v12 = MEMORY[0x1A1ADA2C4](v19, v6);
      result = sub_19CD20334((uint64_t)v19);
      if ((v12 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v13 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v14 = *(_QWORD *)(v13 + 48) + 40 * a2;
  v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v6 + 32);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_19CFE0820();
  __break(1u);
  return result;
}

uint64_t sub_19CE8AAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_19CD3FD1C(a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 32 * v17);
        result = *v24;
        *v24 = a1;
        v24[1] = a2;
        v24[2] = a3;
        v24[3] = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_19CE1932C();
      goto LABEL_7;
    }
    sub_19CE13D9C(v20, a7 & 1);
    v26 = sub_19CD3FD1C(a5, a6);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19CE18188(v17, a5, a6, a1, a2, a3, a4, v23);
      swift_bridgeObjectRetain();
      return 0;
    }
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE8AC58(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_19CD3FD1C(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = *(_QWORD *)v21;
        *(_QWORD *)v21 = a1;
        *(_BYTE *)(v21 + 8) = a2 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_19CE19708();
      goto LABEL_7;
    }
    sub_19CE14450(v17, a5 & 1);
    v23 = sub_19CD3FD1C(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19CE181D8(v14, a3, a4, a1, a2 & 1, v20);
      swift_bridgeObjectRetain();
      return 0;
    }
  }
  result = sub_19CFE082C();
  __break(1u);
  return result;
}

_OWORD *sub_19CE8AD94@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _OWORD *result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _OWORD *v27;

  v5 = (_QWORD **)v4;
  v27 = a1;
  v9 = sub_19CFE0310();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v4;
  v16 = sub_19CD2258C(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a3 & 1) != 0)
    {
LABEL_7:
      v22 = *v5;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        sub_19CD433C0((_OWORD *)(v22[7] + 32 * v16), a4);
        return sub_19CD433C0(v27, (_OWORD *)(v22[7] + 32 * v16));
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_19CE18D70();
      goto LABEL_7;
    }
    sub_19CE13A18(v19, a3 & 1);
    v24 = sub_19CD2258C(a2);
    if ((v20 & 1) == (v25 & 1))
    {
      v16 = v24;
      v22 = *v5;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
      result = sub_19CE180E8(v16, (uint64_t)v13, v27, v22);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
  }
  result = (_OWORD *)sub_19CFE082C();
  __break(1u);
  return result;
}

uint64_t sub_19CE8AF28(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t result;
  int v4;
  char v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  _QWORD v26[3];
  char v27;

  result = sub_19CDE2C18(a1);
  if ((v5 & 1) != 0)
    goto LABEL_32;
  v6 = v4;
  if (*(_DWORD *)(a1 + 36) != v4)
    goto LABEL_31;
  v7 = result;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (result == v8)
    return v7;
  v9 = a1 + 64;
  v24 = v4;
  v10 = v4;
  while ((v7 & 0x8000000000000000) == 0 && (uint64_t)v7 < v8)
  {
    if (v6 != v10)
      goto LABEL_27;
    v11 = v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_27;
    v12 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v13 = v12[1];
    v14 = *(_QWORD *)(a1 + 56) + 16 * v7;
    v15 = *(void **)v14;
    LOBYTE(v14) = *(_BYTE *)(v14 + 8);
    v26[0] = *v12;
    v26[1] = v13;
    v26[2] = v15;
    v27 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = v15;
    v17 = a2(v26);

    swift_bridgeObjectRelease();
    result = swift_release();
    if ((v17 & 1) != 0)
      return v7;
    v18 = *(_BYTE *)(a1 + 32);
    if ((uint64_t)v7 >= 1 << v18)
      goto LABEL_28;
    v19 = *(_QWORD *)(v9 + 8 * v11);
    if ((v19 & (1 << v7)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(a1 + 36) != v6)
      goto LABEL_30;
    v20 = v19 & (-2 << (v7 & 0x3F));
    if (v20)
    {
      v7 = __clz(__rbit64(v20)) | v7 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)((1 << v18) + 63) >> 6;
      if (v11 + 1 >= v22)
        goto LABEL_24;
      v23 = *(_QWORD *)(v9 + 8 * v21);
      if (!v23)
      {
        v21 = v11 + 2;
        if (v11 + 2 >= v22)
          goto LABEL_24;
        v23 = *(_QWORD *)(v9 + 8 * v21);
        if (!v23)
        {
          while (v22 - 3 != v11)
          {
            v23 = *(_QWORD *)(a1 + 88 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 2;
              goto LABEL_18;
            }
          }
LABEL_24:
          v7 = 1 << v18;
          goto LABEL_6;
        }
      }
LABEL_18:
      v7 = __clz(__rbit64(v23)) + (v21 << 6);
    }
LABEL_6:
    v8 = 1 << v18;
    v10 = v24;
    if (v7 == v8)
      return v7;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_19CE8B158()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE8B17C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return sub_19CE840AC(a1, a2, a3, a4, v4);
}

uint64_t sub_19CE8B184()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE8B1A8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24)) & 1;
}

unint64_t sub_19CE8B1DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE440490;
  if (!qword_1EE440490)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE440488);
    v2 = sub_19CD05BA0(&qword_1EE440498, &qword_1EE4404A0, MEMORY[0x1E0DEAF20]);
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEC850], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE440490);
  }
  return result;
}

unint64_t sub_19CE8B25C()
{
  unint64_t result;

  result = qword_1EE4404A8;
  if (!qword_1EE4404A8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for QueryExpression.MatchResult.Index, &type metadata for QueryExpression.MatchResult.Index);
    atomic_store(result, (unint64_t *)&qword_1EE4404A8);
  }
  return result;
}

unint64_t sub_19CE8B2A4()
{
  unint64_t result;

  result = qword_1EE4404B0;
  if (!qword_1EE4404B0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for QueryExpression.MatchResult, &type metadata for QueryExpression.MatchResult);
    atomic_store(result, (unint64_t *)&qword_1EE4404B0);
  }
  return result;
}

unint64_t sub_19CE8B2EC()
{
  unint64_t result;

  result = qword_1EE4404B8;
  if (!qword_1EE4404B8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for QueryExpression.MatchResult.Index, &type metadata for QueryExpression.MatchResult.Index);
    atomic_store(result, (unint64_t *)&qword_1EE4404B8);
  }
  return result;
}

uint64_t sub_19CE8B330()
{
  return sub_19CD05BA0(&qword_1EE4404C0, &qword_1EE4404C8, MEMORY[0x1E0DEA228]);
}

uint64_t sub_19CE8B35C()
{
  return sub_19CD05BA0(&qword_1EE4404D0, &qword_1EE4404D8, MEMORY[0x1E0DEDE48]);
}

uint64_t sub_19CE8B388()
{
  return sub_19CD05BA0(&qword_1EE4404E0, &qword_1EE4404E8, MEMORY[0x1E0DEC908]);
}

ValueMetadata *type metadata accessor for QueryExpression()
{
  return &type metadata for QueryExpression;
}

uint64_t destroy for QueryExpression.MatchResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9JetEngine15QueryExpressionV11MatchResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for QueryExpression.MatchResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for QueryExpression.MatchResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for QueryExpression.MatchResult()
{
  return &type metadata for QueryExpression.MatchResult;
}

ValueMetadata *type metadata accessor for QueryExpression.MatchResult.Index()
{
  return &type metadata for QueryExpression.MatchResult.Index;
}

ValueMetadata *type metadata accessor for QueryExpression.Rule()
{
  return &type metadata for QueryExpression.Rule;
}

uint64_t sub_19CE8B504(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CE8B560@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X2>, int *a4@<X8>)
{
  int v8;
  uint64_t result;
  int *v10;

  swift_beginAccess();
  v8 = sqlite3_prepare_v2(*(sqlite3 **)(a2 + 16), a1, -1, a3, 0);
  if (qword_1ECEB12A8 != -1)
    swift_once();
  result = sub_19CCE4984(v8, qword_1ECEB52B8);
  if ((result & 1) != 0)
  {
    *a4 = v8;
  }
  else
  {
    sub_19CE379F8();
    swift_allocError();
    *v10 = v8;
    return swift_willThrow();
  }
  return result;
}

ValueMetadata *type metadata accessor for TimezoneOffsetFieldProvider()
{
  return &type metadata for TimezoneOffsetFieldProvider;
}

uint64_t Models.ExternalURLAction.init(actionMetrics:url:isSensitive:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;

  *a4 = *a1;
  v7 = type metadata accessor for Models.ExternalURLAction();
  v8 = (char *)a4 + *(int *)(v7 + 20);
  v9 = sub_19CFDEDE0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *((_BYTE *)a4 + *(int *)(v7 + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for Models.ExternalURLAction()
{
  uint64_t result;

  result = qword_1EE439EF0;
  if (!qword_1EE439EF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Models.ExternalURLAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _OWORD *v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  char *v36;
  __int128 v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[40];
  void (*v42)(char *, char *, uint64_t);

  v35 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3030);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CFDEDE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v34 - v15;
  v17 = *a2;
  JSONObject.subscript.getter(7107189, 0xE300000000000000, (uint64_t)v41);
  sub_19CDE0324((uint64_t)v41, (uint64_t)v38);
  v18 = v39;
  if (v39)
  {
    v19 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    if (v21)
    {
      sub_19CFDEDA4();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v38, &qword_1ECEB1328);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
  sub_19CD3E3F8((uint64_t)v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_19CCECFE4((uint64_t)v8, (uint64_t *)&unk_1ECEB3030);
    v22 = type metadata accessor for Models.ExternalURLAction() | 0x2000000000000000;
    sub_19CDC5494();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_19D05B5E0;
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = 0;
    swift_willThrow();
    return sub_19CD3E3F8(a1);
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v16, v8, v9);
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v41);
  v38[0] = v17;
  v26 = v42;
  ActionMetrics.init(deserializing:using:)((uint64_t)v41, v38, (uint64_t *)&v37);
  if (v26)
  {
    sub_19CD3E3F8(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  v42 = v25;
  v34 = v37;
  v27 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v16, v9);
  JSONObject.subscript.getter(0x7469736E65537369, 0xEB00000000657669, (uint64_t)v41);
  sub_19CDE0324((uint64_t)v41, (uint64_t)v38);
  v28 = v39;
  if (!v39)
  {
    sub_19CCECFE4((uint64_t)v38, &qword_1ECEB1328);
    sub_19CD3E3F8(a1);
    sub_19CD3E3F8((uint64_t)v41);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_14;
  }
  v29 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v28, v29);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  sub_19CD3E3F8(a1);
  sub_19CD3E3F8((uint64_t)v41);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (v30 == 2)
  {
LABEL_14:
    v31 = 0;
    goto LABEL_15;
  }
  v31 = v30 & 1;
LABEL_15:
  v32 = v35;
  *v35 = v34;
  v33 = type metadata accessor for Models.ExternalURLAction();
  result = ((uint64_t (*)(char *, char *, uint64_t))v42)((char *)v32 + *(int *)(v33 + 20), v27, v9);
  *((_BYTE *)v32 + *(int *)(v33 + 24)) = v31;
  return result;
}

uint64_t Models.ExternalURLAction.actionMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Models.ExternalURLAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Models.ExternalURLAction() + 20);
  v4 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Models.ExternalURLAction.isSensitive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Models.ExternalURLAction() + 24));
}

uint64_t sub_19CE8BB64()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7107189;
  if (*v0 != 1)
    v1 = 0x7469736E65537369;
  if (*v0)
    return v1;
  else
    return 0x654D6E6F69746361;
}

uint64_t sub_19CE8BBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19CE8C904(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19CE8BBF0()
{
  sub_19CE8BDD4();
  return sub_19CFE0A48();
}

uint64_t sub_19CE8BC18()
{
  sub_19CE8BDD4();
  return sub_19CFE0A54();
}

uint64_t Models.ExternalURLAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440528);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CE8BDD4();
  sub_19CFE0A24();
  v12 = *v3;
  v11[15] = 0;
  sub_19CE8BE18();
  sub_19CFE0568();
  if (!v2)
  {
    type metadata accessor for Models.ExternalURLAction();
    LOBYTE(v12) = 1;
    sub_19CFDEDE0();
    sub_19CE8C180(&qword_1EE440540, MEMORY[0x1E0CB0010]);
    sub_19CFE0568();
    LOBYTE(v12) = 2;
    sub_19CFE0544();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_19CE8BDD4()
{
  unint64_t result;

  result = qword_1EE440530;
  if (!qword_1EE440530)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05B78C, &_s17ExternalURLActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE440530);
  }
  return result;
}

unint64_t sub_19CE8BE18()
{
  unint64_t result;

  result = qword_1EE440538;
  if (!qword_1EE440538)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ActionMetrics, &type metadata for ActionMetrics);
    atomic_store(result, (unint64_t *)&qword_1EE440538);
  }
  return result;
}

uint64_t Models.ExternalURLAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  char v30;

  v23 = a2;
  v24 = sub_19CFDEDE0();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440548);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Models.ExternalURLAction();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_19CE8BDD4();
  v25 = v10;
  v16 = v28;
  sub_19CFE09E8();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  v28 = v7;
  v17 = v14;
  v18 = v24;
  v30 = 0;
  sub_19CE8C13C();
  v19 = v25;
  v20 = v26;
  sub_19CFE04B4();
  *(_OWORD *)v17 = v29;
  LOBYTE(v29) = 1;
  sub_19CE8C180((unint64_t *)&qword_1EE440558, MEMORY[0x1E0CB0038]);
  sub_19CFE04B4();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v17[*(int *)(v11 + 20)], v6, v18);
  LOBYTE(v29) = 2;
  v21 = sub_19CFE049C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v20);
  v17[*(int *)(v11 + 24)] = v21 & 1;
  sub_19CE8C1C0((uint64_t)v17, v23);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  return sub_19CE8C204((uint64_t)v17);
}

unint64_t sub_19CE8C13C()
{
  unint64_t result;

  result = qword_1EE440550;
  if (!qword_1EE440550)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for ActionMetrics, &type metadata for ActionMetrics);
    atomic_store(result, (unint64_t *)&qword_1EE440550);
  }
  return result;
}

uint64_t sub_19CE8C180(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_19CFDEDE0();
    result = MEMORY[0x1A1ADBD7C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19CE8C1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Models.ExternalURLAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE8C204(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Models.ExternalURLAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CE8C240@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.ExternalURLAction.init(from:)(a1, a2);
}

uint64_t sub_19CE8C254(_QWORD *a1)
{
  return Models.ExternalURLAction.encode(to:)(a1);
}

uint64_t sub_19CE8C268@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return Models.ExternalURLAction.init(deserializing:using:)(a1, a2, a3);
}

_QWORD *_s17ExternalURLActionVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_19CFDEDE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t _s17ExternalURLActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_19CFDEDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s17ExternalURLActionVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_19CFDEDE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *_s17ExternalURLActionVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *_s17ExternalURLActionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *_s17ExternalURLActionVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_19CFDEDE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s17ExternalURLActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE8C5E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_19CFDEDE0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t _s17ExternalURLActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19CE8C670(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_19CFDEDE0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_19CE8C6E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s17ExternalURLActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19CE8C7AC + 4 * byte_19D05B5F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19CE8C7E0 + 4 * byte_19D05B5F0[v4]))();
}

uint64_t sub_19CE8C7E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE8C7E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE8C7F0);
  return result;
}

uint64_t sub_19CE8C7FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE8C804);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19CE8C808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE8C810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17ExternalURLActionV10CodingKeysOMa()
{
  return &_s17ExternalURLActionV10CodingKeysON;
}

unint64_t sub_19CE8C830()
{
  unint64_t result;

  result = qword_1EE440560;
  if (!qword_1EE440560)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05B764, &_s17ExternalURLActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE440560);
  }
  return result;
}

unint64_t sub_19CE8C878()
{
  unint64_t result;

  result = qword_1EE440568;
  if (!qword_1EE440568)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05B6D4, &_s17ExternalURLActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE440568);
  }
  return result;
}

unint64_t sub_19CE8C8C0()
{
  unint64_t result;

  result = qword_1EE440570;
  if (!qword_1EE440570)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05B6FC, &_s17ExternalURLActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE440570);
  }
  return result;
}

uint64_t sub_19CE8C904(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_19CFE06A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469736E65537369 && a2 == 0xEB00000000657669)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_19CFE06A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t _AsyncJust.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t _AsyncJust.AsyncIterator.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 - 8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9(a3, 1, 1, a2);
  v7 = sub_19CFDFF5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a3, a1, a2);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v9)(a3, 0, 1, a2);
}

uint64_t _AsyncJust.AsyncIterator.element.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _AsyncJust.AsyncIterator.element.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDFF5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*_AsyncJust.AsyncIterator.element.modify())()
{
  return nullsub_1;
}

uint64_t _AsyncJust.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE8CBE0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) - 8)
                                                           + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16));
  sub_19CFDFF5C();
  sub_19CFE0814();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE8CC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_19CE7329C;
  v6[3] = a2;
  v6[4] = v2;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE8CCC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_19CE8CD48;
  return sub_19CFDF9F8();
}

uint64_t sub_19CE8CD48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t _AsyncJust.element.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _AsyncJust.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0C80A78](a1, v3);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  return _AsyncJust.AsyncIterator.init(_:)((uint64_t)v8, v5, a2);
}

uint64_t _AsyncJust.description.getter()
{
  sub_19CFE0670();
  return 0;
}

uint64_t sub_19CE8CE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  _AsyncJust.makeAsyncIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t _AsyncJust<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  char *v28;

  v24 = a4;
  v25 = *(_QWORD *)(a2 - 8);
  v26 = a3;
  MEMORY[0x1E0C80A78](a1, a2);
  v28 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for _AsyncJust(0, v8, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v20 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE09D0();
  if (!v4)
  {
    v21 = v15;
    v22 = v12;
    v23 = v11;
    v16 = v25;
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    v17 = v28;
    sub_19CFE06DC();
    v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v17, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v18, v23);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for _AsyncJust(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncJust);
}

uint64_t sub_19CE8D02C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return _AsyncJust<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t _AsyncJust<A>.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CFE0A0C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19CFE073C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t sub_19CE8D0F0(_QWORD *a1)
{
  return _AsyncJust<A>.encode(to:)(a1);
}

uint64_t static _AsyncJust<A>.== infix(_:_:)()
{
  return sub_19CFDF548() & 1;
}

uint64_t sub_19CE8D12C()
{
  return MEMORY[0x1E0DEDD18];
}

void sub_19CE8D138()
{
  JUMPOUT(0x1A1ADBD7CLL);
}

uint64_t sub_19CE8D148()
{
  return static _AsyncJust<A>.== infix(_:_:)();
}

uint64_t sub_19CE8D154(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19CE8D204 + 4 * byte_19D05B7E0[(v7 - 1)]))();
}

void sub_19CE8D254(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_19CE8D404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDFF5C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19CE8D470(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_19CE8D5B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_19CE8D758()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19CE8D760()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for _AsyncJust.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncJust.AsyncIterator);
}

uint64_t IntentMetricsEventLinter.init(objectGraph:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  id v9;
  Swift::String v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[32];
  __int128 v36;
  __int128 v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v4 = swift_bridgeObjectRetain();
  v5 = sub_19CE8E03C(v4);
  result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_1ECEB31D8 != -1)
      swift_once();
    v7 = (void *)qword_1ECEB30F0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19D050760;
    v9 = v7;
    v31 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    v11 = MEMORY[0x1E0DEA968];
    v41 = MEMORY[0x1E0DEA968];
    v39 = 0xD000000000000012;
    v40 = 0x800000019D072F60;
    sub_19CD40794((uint64_t)&v39, (uint64_t)v35);
    v33 = 0u;
    v34 = 0u;
    sub_19CD40658((uint64_t)v35, (uint64_t)&v33);
    v38 = 0;
    v36 = v33;
    v37 = v34;
    v12 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_19CD40918(0, v31[2] + 1, 1, v31);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12[2] = v14 + 1;
    v15 = &v12[5 * v14];
    v16 = v36;
    v17 = v37;
    *((_BYTE *)v15 + 64) = v38;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    v18._countAndFlagsBits = 0xD00000000000002CLL;
    v18._object = (void *)0x800000019D072F80;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(_QWORD *)(v8 + 32) = v12;
    v32 = sub_19CD40918(0, 20, 0, MEMORY[0x1E0DEE9D8]);
    v19._countAndFlagsBits = 1612738153;
    v19._object = (void *)0xE400000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    swift_beginAccess();
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a1 + 32);
    v41 = v11;
    v39 = v20;
    v40 = v21;
    sub_19CD40794((uint64_t)&v39, (uint64_t)v35);
    v33 = 0u;
    v34 = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658((uint64_t)v35, (uint64_t)&v33);
    v38 = 2;
    v36 = v33;
    v37 = v34;
    v22 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_19CD40918(0, v32[2] + 1, 1, v32);
    v24 = v22[2];
    v23 = v22[3];
    if (v24 >= v23 >> 1)
      v22 = sub_19CD40918((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v22[2] = v24 + 1;
    v25 = &v22[5 * v24];
    v26 = v36;
    v27 = v37;
    *((_BYTE *)v25 + 64) = v38;
    *((_OWORD *)v25 + 2) = v26;
    *((_OWORD *)v25 + 3) = v27;
    sub_19CCECFE4((uint64_t)&v39, &qword_1ECEB3370);
    v28._countAndFlagsBits = 0x7463656A626F2060;
    v28._object = (void *)0xEF2E687061726720;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *(_QWORD *)(v8 + 40) = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v34 + 1) = v11;
    *(_QWORD *)&v33 = 0xD00000000000002BLL;
    *((_QWORD *)&v33 + 1) = 0x800000019D072FB0;
    v36 = 0u;
    v37 = 0u;
    sub_19CD40658((uint64_t)&v33, (uint64_t)&v36);
    *(_BYTE *)(v29 + 64) = 0;
    v30 = v37;
    *(_OWORD *)(v29 + 32) = v36;
    *(_OWORD *)(v29 + 48) = v30;
    *(_QWORD *)(v8 + 48) = v29;
    *(_QWORD *)&v36 = v9;
    LOBYTE(v33) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v8, (JetEngine::LogMessageLevel)&v33);

    result = swift_bridgeObjectRelease();
  }
  *a2 = a1;
  return result;
}

uint64_t IntentMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1600);
  v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = 0;
  *(_BYTE *)(v9 + 40) = 0;
  v12 = sub_19CFDFA10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = &unk_1EE440698;
  v13[5] = v8;
  v13[6] = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_19CF5B8E4((uint64_t)v6, (uint64_t)&unk_1EE43E4C8, (uint64_t)v13);
  swift_release();
  return v9;
}

uint64_t sub_19CE8DCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return swift_task_switch();
}

uint64_t sub_19CE8DCDC()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[12] = v0[15];
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE437050);
  *v1 = v0;
  v1[1] = sub_19CE8DDB8;
  return sub_19CFE0A84();
}

uint64_t sub_19CE8DDB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE8DE1C()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD, uint64_t, _QWORD, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (__int128 *)(v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    v2 = *(_QWORD *)(v0 + 128);
    sub_19CCD14C4(v1, v0 + 16);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
    *(_QWORD *)(v0 + 104) = v2;
    v8 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_19CE8DF58;
    return v8(*(_QWORD *)(v0 + 112), v0 + 104, *(_QWORD *)(v0 + 120), &type metadata for LintMetricsEventIntent, &protocol witness table for LintMetricsEventIntent, v3, v4);
  }
  else
  {
    sub_19CCECFE4((uint64_t)v1, qword_1EE437050);
    sub_19CE8E210();
    swift_allocError();
    *v7 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CE8DF4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE8DF58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_19CE8DFC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE8DFF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE8E03C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  _OWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DDA8);
  if (*(_QWORD *)(a1 + 16) && (v3 = sub_19CD4B638(v2), (v4 & 1) != 0))
  {
    sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)v7);
    sub_19CCECFE4((uint64_t)v7, &qword_1ECEB3370);
    LOBYTE(v5) = 1;
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    sub_19CCECFE4((uint64_t)v7, &qword_1ECEB3370);
    v5 = sub_19CDA6DF4();
    if (v5)
      LOBYTE(v5) = sub_19CD25AC4(v5, a1);
  }
  return v5 & 1;
}

uint64_t sub_19CE8E0E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE8E110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_19CD579FC;
  *(_OWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 112) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE8E178()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for IntentMetricsEventLinter()
{
  return &type metadata for IntentMetricsEventLinter;
}

uint64_t sub_19CE8E1BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  return sub_19CE63D34(a1, v1);
}

unint64_t sub_19CE8E210()
{
  unint64_t result;

  result = qword_1EE4406A8;
  if (!qword_1EE4406A8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for IntentDispatcherError, &type metadata for IntentDispatcherError);
    atomic_store(result, (unint64_t *)&qword_1EE4406A8);
  }
  return result;
}

uint64_t assignWithCopy for JSONObject(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for JSONObject(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONObject(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for MetricsEventLinterBagConfiguration()
{
  return &type metadata for MetricsEventLinterBagConfiguration;
}

uint64_t sub_19CE8E384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  JSONObject.subscript.getter(a1, a2, (uint64_t)v8);
  JSONObject.subscript.getter(0x427363697274656DLL, 0xEB00000000657361, (uint64_t)&v13);
  sub_19CD3E3F8((uint64_t)v8);
  sub_19CDE0324((uint64_t)&v13, (uint64_t)v8);
  v2 = v9;
  if (v9)
  {
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    if ((v4 & 1) == 0)
    {
      v11[0] = v13;
      v11[1] = v14;
      v12 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v8, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)&v13);
  JSONObject.subscript.getter(0x427363697274656DLL, 0xEB00000000657361, (uint64_t)v11);
LABEL_6:
  JSONObject.dictionary.getter((uint64_t)&v13);
  sub_19CD3E3F8((uint64_t)v11);
  v5 = *((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v6 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    v5 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 32))(MEMORY[0x1E0DEA968], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEA978], v5, v6);
    sub_19CDC6248((uint64_t)&v13);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v13, &qword_1EE43C1C8);
  }
  return v5;
}

uint64_t sub_19CE8E508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  JSONObject.subscript.getter(a1, a2, (uint64_t)&v11);
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019D06F660, (uint64_t)&v8);
  sub_19CD3E3F8((uint64_t)&v11);
  sub_19CDE0324((uint64_t)&v8, (uint64_t)&v11);
  v2 = *((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v3 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
    if ((v4 & 1) == 0)
    {
      v11 = v8;
      v12 = v9;
      v13 = v10;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v11, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)&v8);
  JSONObject.subscript.getter(0xD000000000000011, 0x800000019D06F660, (uint64_t)&v11);
LABEL_6:
  sub_19CDE0324((uint64_t)&v11, (uint64_t)&v8);
  v5 = *((_QWORD *)&v9 + 1);
  if (*((_QWORD *)&v9 + 1))
  {
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
  }
  else
  {
    sub_19CCECFE4((uint64_t)&v8, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)&v11);
  return v5;
}

uint64_t sub_19CE8E670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  JSONObject.subscript.getter(a1, a2, (uint64_t)&v11);
  JSONObject.subscript.getter(0x6569467365526564, 0xEB0000000073646CLL, (uint64_t)v9);
  sub_19CD3E3F8((uint64_t)&v11);
  sub_19CDE0324((uint64_t)v9, (uint64_t)&v11);
  v2 = *((_QWORD *)&v12 + 1);
  if (!*((_QWORD *)&v12 + 1))
  {
    sub_19CCECFE4((uint64_t)&v11, &qword_1ECEB1328);
    goto LABEL_5;
  }
  v3 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
  if ((v4 & 1) != 0)
  {
LABEL_5:
    sub_19CD3E3F8((uint64_t)v9);
    JSONObject.subscript.getter(0x6569467365526564, 0xEB0000000073646CLL, (uint64_t)&v11);
    goto LABEL_6;
  }
  v11 = v9[0];
  v12 = v9[1];
  v13 = v10;
LABEL_6:
  v5 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
  v6 = sub_19CF465AC((uint64_t)&v11, v5);
  v7 = sub_19CE03144(v6);
  swift_bridgeObjectRelease();
  return v7;
}

double sub_19CE8E7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double result;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  JSONObject.subscript.getter(a1, a2, (uint64_t)v10);
  JSONObject.subscript.getter(0xD00000000000001DLL, 0x800000019D072FE0, (uint64_t)&v13);
  sub_19CD3E3F8((uint64_t)v10);
  sub_19CDE0324((uint64_t)&v13, (uint64_t)v10);
  v2 = v11;
  if (v11)
  {
    v3 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v4 & 1) == 0)
    {
      v16[0] = v13;
      v16[1] = v14;
      v17 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_19CCECFE4((uint64_t)v10, &qword_1ECEB1328);
  }
  sub_19CD3E3F8((uint64_t)&v13);
  JSONObject.subscript.getter(0xD00000000000001DLL, 0x800000019D072FE0, (uint64_t)v16);
LABEL_6:
  sub_19CDE0324((uint64_t)v16, (uint64_t)&v13);
  v5 = *((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_19CCECFE4((uint64_t)&v13, &qword_1ECEB1328);
    sub_19CD3E3F8((uint64_t)v16);
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4373B0);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v9 + 56) = &type metadata for MetricsEventLinterEmptyImpressionsRule;
    *(_QWORD *)(v9 + 64) = &off_1E3DD7F48;
    return result;
  }
  v6 = v15;
  __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
  sub_19CD3E3F8((uint64_t)v16);
  if (v7 == 2 || (v7 & 1) == 0)
    goto LABEL_11;
  return result;
}

uint64_t JSCallable.reference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

id JSCallable.callAsFunction(this:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  JSValue v4;
  uint64_t v5;
  Class isa;
  id result;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v4.super.isa = JSReference.unwrap()().super.isa;
  if (v5)
    return (id)a2;
  isa = v4.super.isa;
  result = -[objc_class context](v4.super.isa, sel_context);
  if (result)
  {
    v9 = result;
    MEMORY[0x1E0C80A78](result, v8);
    sub_19CE3199C((void (*)(id *__return_ptr, void *))sub_19CE8EFD4);
    a2 = v10;

    return (id)a2;
  }
  __break(1u);
  return result;
}

void sub_19CE8EA50(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  sub_19CE8EFF0(a2, (uint64_t)&v26);
  if (v27)
  {
    sub_19CCD14C4(&v26, (uint64_t)v28);
    *(_QWORD *)&v26 = MEMORY[0x1E0DEE9D8];
    v10 = v29;
    v11 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 16))(a1, v10, v11);
    if (v5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      MEMORY[0x1A1AD9A6C]();
      if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_19CFDF8A8();
      sub_19CFDF8E4();
      sub_19CFDF878();
      v16 = *(_QWORD *)(a3 + 16);
      if (v16)
      {
        v31 = a5;
        v17 = (_QWORD *)(a3 + 32);
        swift_bridgeObjectRetain();
        do
        {
          v18 = v17[3];
          v19 = v17[4];
          __swift_project_boxed_opaque_existential_1(v17, v18);
          (*(void (**)(void *, uint64_t, uint64_t))(v19 + 16))(a1, v18, v19);
          MEMORY[0x1A1AD9A6C]();
          if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_19CFDF8A8();
          sub_19CFDF8E4();
          sub_19CFDF878();
          v17 += 5;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease();
        a5 = v31;
      }
      sub_19CE0326C(v26);
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(a4, sel_context);
      if (!v20)
      {
        __break(1u);
        return;
      }
      v21 = v20;
      v22 = a4;
      swift_bridgeObjectRetain();
      sub_19CE037DC(v21, v22);
      v24 = v23;

      swift_bridgeObjectRelease_n();
      *a5 = v24;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  }
  else
  {
    sub_19CE8F038((uint64_t)&v26);
    v12 = a1;
    v13 = sub_19CE03DAC(a3, (uint64_t)v12);

    if (!v5)
    {
      sub_19CE0326C(v13);
      swift_bridgeObjectRelease();
      v14 = (void *)sub_19CFDF854();
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(a4, sel_callWithArguments_, v14);

      if (v15)
      {
        *a5 = v15;
      }
      else
      {
        sub_19CDC98D8();
        swift_allocError();
        *(_QWORD *)v25 = 0xD000000000000017;
        *(_QWORD *)(v25 + 8) = 0x800000019D06FCF0;
        *(_QWORD *)(v25 + 16) = 0;
        *(_BYTE *)(v25 + 24) = 1;
        *(_QWORD *)(v25 + 32) = 0;
        *(_BYTE *)(v25 + 40) = 1;
        *(_OWORD *)(v25 + 48) = 0u;
        *(_OWORD *)(v25 + 64) = 0u;
        *(_OWORD *)(v25 + 80) = 0u;
        *(_QWORD *)(v25 + 96) = 0;
        swift_willThrow();
      }
    }
  }
}

uint64_t JSCallable.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3)
    return 0x296C6C756E28;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_description);
  v6 = sub_19CFDF578();

  return v6;
}

uint64_t sub_19CE8EE70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3)
    return 0x296C6C756E28;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_description);
  v6 = sub_19CFDF578();

  return v6;
}

uint64_t _s9JetEngine10JSCallableV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v9 = (void *)v8;
  if (v5)
  {
    if (!v8)
    {
      v11 = 0;
      goto LABEL_8;
    }
    sub_19CD15680();
    v10 = v5;
    v11 = sub_19CFDFEF0();

  }
  else
  {
    if (!v8)
    {
      v11 = 1;
      return v11 & 1;
    }
    v11 = 0;
  }
  v5 = v9;
LABEL_8:

  return v11 & 1;
}

void sub_19CE8EFD4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_19CE8EA50(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_19CE8EFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE436C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19CE8F038(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE436C38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19CE8F078()
{
  uint64_t v0;

  return v0;
}

uint64_t static TraceablePointOfInterest._attestation.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t dispatch thunk of static TraceablePointOfInterest._attestation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for _AttestFromJetEngine()
{
  return &type metadata for _AttestFromJetEngine;
}

void sub_19CE8F0A0(uint64_t a1, uint64_t a2)
{
  if ((ValueMetadata *)(*(uint64_t (**)(void))(a2 + 8))() != &type metadata for _AttestFromJetEngine)
    sub_19CFABF98((unint64_t)"JetEngine/TraceablePointOfInterest.swift", 0x28uLL, 2, 0x32uLL);
}

uint64_t sub_19CE8F0F4(char *a1, char *a2)
{
  return sub_19CE80B04(*a1, *a2);
}

uint64_t sub_19CE8F100()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE8F194()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE8F204()
{
  sub_19CFE08C8();
  sub_19CFDF650();
  swift_bridgeObjectRelease();
  return sub_19CFE0910();
}

uint64_t sub_19CE8F294@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_19CFE0424();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_19CE8F2F0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x447972616D697270;
  if (*v1)
    v2 = 0x7261646E6F636573;
  v3 = 0xEB00000000617461;
  if (*v1)
    v3 = 0xED00006174614479;
  *a1 = v2;
  a1[1] = v3;
}

void sub_19CE8F344(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_19CCDC684(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_19CE8F360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_19CCD2994(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

Swift::Void __swiftcall PageIntentInstrumentation._forBooksOnly_process(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  __CFBundle *v2;
  __CFString *v3;

  v2 = CFBundleGetMainBundle();
  v3 = (id)CFBundleGetIdentifier(v2);

  if (v3)
  {
    sub_19CFDF56C();

  }
  swift_bridgeObjectRelease();
  if ((sub_19CFDF71C() & 1) == 0 && (sub_19CFDF71C() & 1) == 0 && (sub_19CFDF71C() & 1) == 0)
    sub_19CFAC5BC((unint64_t)"JetEngine/PageIntentInstrumentation.swift", 0x29uLL, 2, 0x7DuLL);
  swift_bridgeObjectRelease();
  sub_19CD33764((uint64_t)contentsOf._rawValue);
}

char *assignWithCopy for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;

  if (a1 != a2)
  {
    sub_19CCEACE4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_19CFDEF84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      v8 = type metadata accessor for PageRenderEvent();
      v9 = *(int *)(v8 + 20);
      v10 = *(void **)&a2[v9];
      v11 = v10;
      *(_QWORD *)&a1[v9] = v10;
      v12 = *(int *)(v8 + 24);
      v13 = &a1[v12];
      v14 = &a2[v12];
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_19CFDEF84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for MonotonicTimeReference();
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    v8 = type metadata accessor for PageRenderEvent();
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    *(_OWORD *)&a1[*(int *)(v8 + 24)] = *(_OWORD *)&a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for PageIntentInstrumentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_19CCEACE4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PageIntentInstrumentation);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_19CFDEF84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for MonotonicTimeReference();
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      v8 = type metadata accessor for PageRenderEvent();
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      *(_OWORD *)&a1[*(int *)(v8 + 24)] = *(_OWORD *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_19CE8F8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PageIntentInstrumentationModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PageIntentInstrumentationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageIntentInstrumentationModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageIntentInstrumentationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageIntentInstrumentationModel()
{
  return &type metadata for PageIntentInstrumentationModel;
}

uint64_t storeEnumTagSinglePayload for PageIntentInstrumentationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19CE8FA64 + 4 * byte_19D05BAD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19CE8FA98 + 4 * asc_19D05BAD0[v4]))();
}

uint64_t sub_19CE8FA98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE8FAA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CE8FAA8);
  return result;
}

uint64_t sub_19CE8FAB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CE8FABCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19CE8FAC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CE8FAC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageIntentInstrumentationType()
{
  return &type metadata for PageIntentInstrumentationType;
}

unint64_t sub_19CE8FAE8()
{
  unint64_t result;

  result = qword_1EE4406B0[0];
  if (!qword_1EE4406B0[0])
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05BBE8, &type metadata for PageIntentInstrumentationType);
    atomic_store(result, qword_1EE4406B0);
  }
  return result;
}

uint64_t JSConstructable.reference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

id JSConstructable.makeObject(_:)()
{
  _QWORD *v0;
  void *v1;
  id v2;
  JSValue v3;
  uint64_t v4;
  Class isa;
  id result;
  void *v7;
  objc_class *v8;

  v2 = v1;
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v3.super.isa = JSReference.unwrap()().super.isa;
  if (v4)
    return v2;
  isa = v3.super.isa;
  result = -[objc_class context](v3.super.isa, sel_context);
  if (result)
  {
    v7 = result;
    v8 = isa;
    swift_bridgeObjectRetain();
    v2 = sub_19CE03584(v7, v8);

    swift_bridgeObjectRelease();
    return v2;
  }
  __break(1u);
  return result;
}

id JSConstructable.callAsFunction(_:)(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  JSValue v4;
  uint64_t v5;
  Class isa;
  id result;
  void *v8;
  objc_class *v9;

  v3 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4.super.isa = JSReference.unwrap()().super.isa;
  if (v5)
    return v3;
  isa = v4.super.isa;
  result = -[objc_class context](v4.super.isa, sel_context);
  if (result)
  {
    v8 = result;
    swift_bridgeObjectRetain();
    v9 = isa;
    v3 = sub_19CE041D0(v8, a1, v9);

    return v3;
  }
  __break(1u);
  return result;
}

uint64_t JSConstructable.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (!v3)
    return 0x296C6C756E28;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_description);
  v6 = sub_19CFDF578();

  return v6;
}

ValueMetadata *type metadata accessor for JSConstructable()
{
  return &type metadata for JSConstructable;
}

_QWORD *sub_19CE8FD6C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(double);
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  void *v15;
  unsigned int v16;
  id v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void (*v28)(uint64_t, uint64_t);
  _QWORD v30[2];
  char *v31;
  void (*v32)(double);
  uint64_t v33;
  uint64_t v34;
  id v35[2];

  v2 = v1;
  v35[1] = *(id *)MEMORY[0x1E0C80C00];
  v30[1] = *v1;
  v4 = sub_19CFDEDE0();
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v8;
  v9 = *(void (**)(double))(v8 + 16);
  v30[0] = (char *)v1 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_url;
  v32 = v9;
  v9(v6);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_defaultManager);
  sub_19CFDED8C();
  v12 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (v13)
  {
    v14 = objc_msgSend(v10, sel_defaultManager);
    v15 = (void *)sub_19CFDED2C();
    v35[0] = 0;
    v16 = objc_msgSend(v14, sel_removeItemAtURL_error_, v15, v35);

    if (!v16)
    {
      v27 = v35[0];
      sub_19CFDEC9C();

      swift_willThrow();
LABEL_9:
      v28 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v28(a1, v4);
      v28(v30[0], v4);
      swift_deallocPartialClassInstance();
      return v2;
    }
    v17 = v35[0];
  }
  v18 = objc_msgSend(v10, sel_defaultManager);
  sub_19CFDED8C();
  v19 = (void *)sub_19CFDF554();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_fileExistsAtPath_, v19);

  if ((v20 & 1) == 0)
  {
    v21 = objc_msgSend(v10, sel_defaultManager);
    sub_19CFDED8C();
    v22 = (void *)sub_19CFDF554();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_createFileAtPath_contents_attributes_, v22, 0, 0);

  }
  sub_19CE90778();
  v23 = (uint64_t)v31;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v31, a1, v4);
  v24 = v33;
  v25 = sub_19CE90078(v23);
  if (v24)
    goto LABEL_9;
  v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(a1, v4);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_fileHandle) = v26;
  return v2;
}

id sub_19CE90078(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_19CFDED2C();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_19CFDEDE0();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_19CFDEC9C();

    swift_willThrow();
    v9 = sub_19CFDEDE0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_19CE9018C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9JetEngine16FileOutputStream_url;
  v2 = sub_19CFDEDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_19CE901EC()
{
  return type metadata accessor for FileOutputStream();
}

uint64_t type metadata accessor for FileOutputStream()
{
  uint64_t result;

  result = qword_1ECEB1408;
  if (!qword_1ECEB1408)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19CE90230()
{
  uint64_t result;
  unint64_t v1;

  result = sub_19CFDEDE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_19CE902A8()
{
  sub_19CE90734();
  return sub_19CFDFD1C();
}

uint64_t sub_19CE902FC(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_19CCC4FA0(a1, a2);
  v4 = v3;
  sub_19CE90734();
  sub_19CFDFD1C();
  return sub_19CD3BE18(v2, v4);
}

uint64_t sub_19CE90378()
{
  uint64_t v0;
  uint64_t v1;
  FILE *v2;
  uint64_t v3;
  uint64_t v5;

  v1 = sub_19CFDF608();
  swift_bridgeObjectRelease();
  v2 = fopen((const char *)(v1 + 32), "rb");
  swift_release();
  if (v2 && (*(_QWORD *)(v0 + 16) = v2, v3 = MEMORY[0x1A1ADB4F4](v2), !fseek(v2, 0, 2)))
  {
    v5 = MEMORY[0x1A1ADB4F4](v2);
    *(_QWORD *)(v0 + 24) = v5;
    if (v5 < 0 || fseek(v2, v3, 0))
    {
      sub_19CE907B4();
      swift_release();
    }
    else
    {
      clearerr(v2);
    }
  }
  else
  {
    sub_19CE907B4();
    swift_deallocPartialClassInstance();
  }
  return v0;
}

uint64_t sub_19CE90468()
{
  uint64_t v0;

  fclose(*(FILE **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileInputStream()
{
  return objc_opt_self();
}

int64_t sub_19CE904AC(void *a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  FILE *v10;
  int64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15;
  int v16;

  v5 = sub_19CFDE87C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(FILE **)(v2 + 16);
  v11 = fread(a1, 1uLL, a2, v10);
  if (v11 < a2 && ferror(v10))
  {
    v12 = sub_19CFDF224();
    if ((v12 & 0x100000000) != 0)
    {
      sub_19CDEA834();
      swift_allocError();
      *v13 = 1;
    }
    else
    {
      v16 = v12;
      sub_19CE07B90(MEMORY[0x1E0DEE9D8]);
      sub_19CE906EC();
      sub_19CFDEC84();
      sub_19CFDE870();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    swift_willThrow();
  }
  return v11;
}

BOOL sub_19CE905EC()
{
  uint64_t v0;
  FILE *v1;
  int v2;
  int v3;

  v1 = *(FILE **)(*(_QWORD *)v0 + 16);
  clearerr(v1);
  v2 = fgetc(v1);
  ungetc(v2, v1);
  v3 = ferror(v1);
  return v2 != -1 && v3 == 0;
}

uint64_t sub_19CE9063C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_19CE9064C(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  int64_t v5;

  v2 = v1;
  v4 = (_BYTE *)swift_slowAlloc();
  v5 = sub_19CE904AC(v4, a1);
  if (!v1)
    v2 = sub_19CCC4FA0(v4, v5);
  MEMORY[0x1A1ADBE9C](v4, -1, -1);
  return v2;
}

int64_t sub_19CE906CC(void *a1, int64_t a2)
{
  return sub_19CE904AC(a1, a2);
}

unint64_t sub_19CE906EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE436CE0;
  if (!qword_1EE436CE0)
  {
    v1 = sub_19CFDE87C();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CADE88], v1);
    atomic_store(result, (unint64_t *)&qword_1EE436CE0);
  }
  return result;
}

unint64_t sub_19CE90734()
{
  unint64_t result;

  result = qword_1EE43C4F0;
  if (!qword_1EE43C4F0)
  {
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE43C4F0);
  }
  return result;
}

unint64_t sub_19CE90778()
{
  unint64_t result;

  result = qword_1ECEB16F8;
  if (!qword_1ECEB16F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECEB16F8);
  }
  return result;
}

uint64_t sub_19CE907B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  _DWORD v9[4];

  v0 = sub_19CFDE87C();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0, v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1A1AD9460](v3);
  v6 = sub_19CFDF224();
  if ((v6 & 0x100000000) != 0)
  {
    sub_19CDEA834();
    swift_allocError();
    *v7 = 1;
  }
  else
  {
    v9[3] = v6;
    sub_19CE07B90(MEMORY[0x1E0DEE9D8]);
    sub_19CE906EC();
    sub_19CFDEC84();
    sub_19CFDE870();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  }
  return swift_willThrow();
}

uint64_t type metadata accessor for ProcessAssertion.JetRBSAssertion()
{
  return objc_opt_self();
}

id sub_19CE908CC()
{
  id result;
  uint64_t v1[2];

  if (qword_1ECEB3330 != -1)
    swift_once();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x800000019D06DE10;
  result = sub_19CD1462C(v1, 0xD000000000000010, 0x800000019D05BCD0);
  qword_1EE43D340 = (uint64_t)result;
  return result;
}

id sub_19CE90964()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  Swift::String v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  id v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  _QWORD *v31;
  _QWORD *v32;
  objc_super v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  char v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v42 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(v0, sel_isValid))
  {
    if (qword_1EE43D3A8 != -1)
      swift_once();
    v2 = (void *)qword_1EE43D340;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v31 = sub_19CD40918(0, 50, 0, MEMORY[0x1E0DEE9D8]);
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    v6 = type metadata accessor for ProcessAssertion.JetRBSAssertion();
    v41 = v6;
    v40[0] = v1;
    sub_19CD40794((uint64_t)v40, (uint64_t)v36);
    v34 = 0u;
    v35 = 0u;
    v7 = v1;
    sub_19CD40658((uint64_t)v36, (uint64_t)&v34);
    v39 = 0;
    v37 = v34;
    v38 = v35;
    v8 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_19CD40918(0, v31[2] + 1, 1, v31);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_19CD40918((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[5 * v10];
    v12 = v37;
    v13 = v38;
    *((_BYTE *)v11 + 64) = v39;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    sub_19CD3F190((uint64_t)v40);
    v14._object = (void *)0x800000019D073280;
    v14._countAndFlagsBits = 0xD000000000000031;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(_QWORD *)(v3 + 32) = v8;
    *(_QWORD *)&v37 = v4;
    LOBYTE(v34) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v34);

    swift_bridgeObjectRelease();
    *(_QWORD *)&v37 = 0;
    if (objc_msgSend(v7, sel_invalidateSyncWithError_, &v37))
    {
      v15 = (id)v37;
    }
    else
    {
      v16 = (id)v37;
      v17 = (void *)sub_19CFDEC9C();

      swift_willThrow();
      v18 = (void *)qword_1EE43D340;
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19D0522A0;
      v20 = v18;
      v32 = sub_19CD40918(0, 64, 0, MEMORY[0x1E0DEE9D8]);
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      v41 = v6;
      v40[0] = v7;
      sub_19CD40794((uint64_t)v40, (uint64_t)v36);
      v34 = 0u;
      v35 = 0u;
      v22 = v7;
      sub_19CD40658((uint64_t)v36, (uint64_t)&v34);
      v39 = 0;
      v37 = v34;
      v38 = v35;
      v23 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_19CD40918(0, v32[2] + 1, 1, v32);
      v25 = v23[2];
      v24 = v23[3];
      if (v25 >= v24 >> 1)
        v23 = sub_19CD40918((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
      v23[2] = v25 + 1;
      v26 = &v23[5 * v25];
      v27 = v37;
      v28 = v38;
      *((_BYTE *)v26 + 64) = v39;
      *((_OWORD *)v26 + 2) = v27;
      *((_OWORD *)v26 + 3) = v28;
      sub_19CD3F190((uint64_t)v40);
      v29._countAndFlagsBits = 0xD00000000000003FLL;
      v29._object = (void *)0x800000019D0732C0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      *(_QWORD *)(v19 + 32) = v23;
      *(_QWORD *)&v37 = v20;
      LOBYTE(v34) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v34);
      swift_bridgeObjectRelease();

    }
  }
  v33.receiver = v1;
  v33.super_class = (Class)type metadata accessor for ProcessAssertion.JetRBSAssertion();
  return objc_msgSendSuper2(&v33, sel_dealloc);
}

id sub_19CE90E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;

  v4 = *(void **)(v2 + 16);
  objc_msgSend(v4, sel_lock);
  sub_19CFB8520(v2, a2);
  return objc_msgSend(v4, sel_unlock);
}

void sub_19CE90EC4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void ProcessAssertion.init(interruptableTask:)(_QWORD *a1@<X8>)
{
  ProcessAssertion.init(explanation:domain:name:)(a1);
}

id ProcessAssertion.isAcquired.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  if ((uint64_t)-[_JEAtomicCounter currentValue](*(_QWORD *)(v0 + 8)) < 1)
    return 0;
  else
    return objc_msgSend(v1, sel_isValid);
}

uint64_t ProcessAssertion.onInvalidate.getter()
{
  return swift_retain();
}

Swift::Bool __swiftcall ProcessAssertion.invalidate()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  id v22;
  __int128 v24;
  __int128 v25;
  _BYTE v26[32];
  _QWORD v27[4];
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD *v31;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  if (qword_1EE43D3A8 != -1)
    swift_once();
  v3 = (void *)qword_1EE43D340;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v31 = sub_19CD40918(0, 39, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_unknownObjectRetain();
  sub_19CCF4C08((uint64_t)&v28);
  v7 = v31;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_19CD40918(0, v7[2] + 1, 1, v7);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_19CD40918((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  v10 = &v7[5 * v9];
  v11 = v28;
  v12 = v29;
  *((_BYTE *)v10 + 64) = v30;
  *((_OWORD *)v10 + 2) = v11;
  *((_OWORD *)v10 + 3) = v12;
  v31 = v7;
  v13._object = (void *)0x800000019D0731D0;
  v13._countAndFlagsBits = 0xD000000000000025;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  v14 = -[_JEAtomicCounter currentValue]((unint64_t)v2);
  v27[3] = MEMORY[0x1E0DEB418];
  v27[0] = v14;
  sub_19CD40794((uint64_t)v27, (uint64_t)v26);
  v24 = 0u;
  v25 = 0u;
  sub_19CD40658((uint64_t)v26, (uint64_t)&v24);
  v30 = 0;
  v28 = v24;
  v29 = v25;
  v15 = v31;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v18 = &v15[5 * v17];
  v19 = v28;
  v20 = v29;
  *((_BYTE *)v18 + 64) = v30;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  v31 = v15;
  sub_19CD3F190((uint64_t)v27);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v4 + 32) = v31;
  *(_QWORD *)&v28 = v5;
  LOBYTE(v24) = 3;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v24);

  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v2, sel_decrement);
  if (v22 == (id)1)
    objc_msgSend(v1, sel_invalidate);
  return v22 == (id)1;
}

void sub_19CE91270(uint64_t *a1, void (*a2)(__int128 *__return_ptr))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  Swift::String v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  _BYTE v37[32];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  _QWORD *v41;

  v3 = *a1;
  if (*a1)
  {
    v4 = a1[1];
    v5 = a1[2];
  }
  else
  {
    a2(&v34);
    v4 = *((_QWORD *)&v34 + 1);
    v3 = v34;
    v5 = v35;
  }
  *(_QWORD *)&v34 = v3;
  *((_QWORD *)&v34 + 1) = v4;
  *(_QWORD *)&v35 = v5;
  ProcessAssertion.acquire()();
  v31 = v4;
  if (v6)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v7 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19D052350;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v9 = swift_allocObject();
    v10 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    *((_QWORD *)&v33 + 1) = v10;
    *(_QWORD *)&v32 = 0xD000000000000030;
    *((_QWORD *)&v32 + 1) = 0x800000019D073300;
    v34 = 0u;
    v35 = 0u;
    v11 = v7;
    sub_19CD40658((uint64_t)&v32, (uint64_t)&v34);
    *(_BYTE *)(v9 + 64) = 0;
    v12 = v35;
    *(_OWORD *)(v9 + 32) = v34;
    *(_OWORD *)(v9 + 48) = v12;
    *(_QWORD *)(v8 + 32) = v9;
    v41 = sub_19CD40918(0, 9, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0x203A6E6F73616572;
    v13._object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    swift_getErrorValue();
    v14 = v38;
    v15 = v39;
    v40[3] = v39;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v40);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_2Tm, v14, v15);
    sub_19CD40794((uint64_t)v40, (uint64_t)v37);
    v32 = 0u;
    v33 = 0u;
    sub_19CD40658((uint64_t)v37, (uint64_t)&v32);
    LOBYTE(v36) = 0;
    v34 = v32;
    v35 = v33;
    v17 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_19CD40918(0, v17[2] + 1, 1, v17);
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v17 = sub_19CD40918((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v17[2] = v19 + 1;
    v20 = &v17[5 * v19];
    v21 = v34;
    v22 = v35;
    *((_BYTE *)v20 + 64) = (_BYTE)v36;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    v41 = v17;
    sub_19CD3F190((uint64_t)v40);
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(_QWORD *)(v8 + 40) = v41;
    *(_QWORD *)&v34 = v11;
    LOBYTE(v32) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v8, (JetEngine::LogMessageLevel)&v32);
    swift_bridgeObjectRelease();

  }
  else
  {
    *((_QWORD *)&v35 + 1) = &type metadata for SyncTaskScheduler;
    v36 = &protocol witness table for SyncTaskScheduler;
    sub_19CCD5B84((uint64_t)&v34, (uint64_t)&v32);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1C70);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
    sub_19CCD14C4(&v32, (uint64_t)(v24 + 3));
    v24[8] = sub_19CE916CC;
    v24[9] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1C68);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v24;
    v26 = *(void **)(v5 + 16);
    swift_retain();
    objc_msgSend(v26, sel_lock);
    swift_beginAccess();
    v27 = *(_QWORD **)(v5 + 24);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v5 + 24) = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_19CD1A218(0, v27[2] + 1, 1, v27);
      *(_QWORD *)(v5 + 24) = v27;
    }
    v30 = v27[2];
    v29 = v27[3];
    if (v30 >= v29 >> 1)
    {
      v27 = sub_19CD1A218((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      *(_QWORD *)(v5 + 24) = v27;
    }
    v27[2] = v30 + 1;
    v27[v30 + 4] = v25;
    swift_endAccess();
    objc_msgSend(v26, sel_unlock);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
    swift_release();
  }
  *a1 = v3;
  a1[1] = v31;
  a1[2] = v5;
}

uint64_t sub_19CE916CC(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  Swift::String v7;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v1 = *a1;
  if (qword_1EE43BE78 != -1)
    swift_once();
  v2 = (void *)qword_1EE43BE68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D052350;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  *((_QWORD *)&v19 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v18 = 0xD00000000000002DLL;
  *((_QWORD *)&v18 + 1) = 0x800000019D073340;
  v24 = 0u;
  v25 = 0u;
  v5 = v2;
  sub_19CD40658((uint64_t)&v18, (uint64_t)&v24);
  *(_BYTE *)(v4 + 64) = 0;
  v6 = v25;
  *(_OWORD *)(v4 + 32) = v24;
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  v23 = sub_19CD40918(0, 20, 0, MEMORY[0x1E0DEE9D8]);
  v7._object = (void *)0x800000019D073370;
  v7._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  if (v1)
  {
    swift_getErrorValue();
    *((_QWORD *)&v22 + 1) = v17;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v21);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v17 - 8) + 16))(boxed_opaque_existential_2Tm);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_19CD40794((uint64_t)&v21, (uint64_t)v20);
  v18 = 0u;
  v19 = 0u;
  sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
  v26 = 0;
  v24 = v18;
  v25 = v19;
  v9 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v9[2] + 1, 1, v9);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[5 * v11];
  v13 = v24;
  v14 = v25;
  *((_BYTE *)v12 + 64) = v26;
  *((_OWORD *)v12 + 2) = v13;
  *((_OWORD *)v12 + 3) = v14;
  v23 = v9;
  sub_19CD3F190((uint64_t)&v21);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  *(_QWORD *)(v3 + 40) = v23;
  *(_QWORD *)&v24 = v5;
  LOBYTE(v18) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v18);

  return swift_bridgeObjectRelease();
}

void *sub_19CE9194C(void *result)
{
  void *v1;
  _QWORD *v2;
  void *v3;

  v1 = *(void **)result;
  if (*(_QWORD *)result)
  {
    v2 = result;
    v3 = (void *)*((_QWORD *)result + 1);
    result = (void *)ProcessAssertion.invalidate()();
    if ((result & 1) != 0)
    {
      result = sub_19CCE9824(v1, v3);
      *v2 = 0;
      v2[1] = 0;
      v2[2] = 0;
    }
  }
  return result;
}

uint64_t destroy for ProcessAssertion(id *a1)
{

  return swift_release();
}

_QWORD *_s9JetEngine16ProcessAssertionVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProcessAssertion(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ProcessAssertion(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

Swift::Double_optional __swiftcall JSONObject.timeInterval(convertedFrom:)(JetEngine::JSONTimeUnit convertedFrom)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  char v6;
  char v7;
  double v8;
  Swift::Bool v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  Swift::Double_optional result;

  v2 = *(unsigned __int8 *)convertedFrom;
  sub_19CDE0324(v1, (uint64_t)v10);
  v3 = v11;
  if (v11)
  {
    v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v5 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4));
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    if ((v7 & 1) == 0 && ((v2 ^ 1) & 1) == 0)
    {
      v8 = v5 / 1000.0;
      v5 = v5 / 1000.0;
    }
  }
  else
  {
    sub_19CDE036C((uint64_t)v10);
    LOBYTE(v5) = 0;
  }
  v9 = LOBYTE(v5);
  result.value = v8;
  result.is_nil = v9;
  return result;
}

uint64_t _Lazy_Many.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v7 = a1;
  v3 = sub_19CFDF938();
  result = sub_19CDF6428((uint64_t)&v7, v3, v4, v5, &v8);
  *a2 = v8;
  return result;
}

uint64_t _Lazy_Many.wrappedValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_19CFDF938();
  v3 = type metadata accessor for LazyValueWrapper(0, v0, v1, v2);
  swift_retain();
  sub_19CDF67BC(v3, v4, v5, (uint64_t)&v7);
  swift_release();
  return v7;
}

uint64_t sub_19CE91C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for _Lazy_Many(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  v4 = swift_bridgeObjectRetain();
  sub_19CE923C4(v4);
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many.wrappedValue.setter(uint64_t a1)
{
  sub_19CE923C4(a1);
  return swift_bridgeObjectRelease();
}

uint64_t (*_Lazy_Many.wrappedValue.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2] = v2;
  *a1 = _Lazy_Many.wrappedValue.getter();
  return sub_19CE91D3C;
}

uint64_t sub_19CE91D3C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    sub_19CE923C4(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CE923C4(v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_19CFDF938();
  v3 = type metadata accessor for LazyValueWrapper(0, v0, v1, v2);
  MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LazyValueWrapper<A>, v3);
  sub_19CFE067C();
  return 0;
}

uint64_t _Lazy_Many<A>.encode(to:)()
{
  _Lazy_Many.wrappedValue.getter();
  sub_19CFDF944();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE91E74()
{
  return _Lazy_Many<A>.encode(to:)();
}

uint64_t _Lazy_Many<A>._partiallyEncode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = _Lazy_Many.wrappedValue.getter();
  Array<A>._partiallyEncode(to:)(a1, v6, *(_QWORD *)(a2 + 16), a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19CE91EDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return _Lazy_Many<A>._partiallyEncode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t _Lazy_Many<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[2];
  uint64_t v16;

  v9 = *a2;
  sub_19CD3E448(a1, (uint64_t)v15);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = v15[1];
  *(_OWORD *)(v10 + 32) = v15[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v9;
  v12 = sub_19CFDF938();
  sub_19CDF6380((uint64_t)sub_19CE92418, v10, v12, v13, (uint64_t *)v15);
  result = sub_19CD3E3F8(a1);
  *a5 = *(_QWORD *)&v15[0];
  return result;
}

uint64_t sub_19CE91FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[40];

  sub_19CD3E448(a1, (uint64_t)v17);
  v14[0] = a2;
  swift_bridgeObjectRetain();
  result = Array<A>.init(deserializing:using:)((uint64_t)v17, v14, a3, a4);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_19CF8E570(0xD000000000000027, 0x800000019D06E560, a2, (uint64_t)v17);
    swift_bridgeObjectRelease();
    sub_19CE3C5DC((uint64_t)v17, (uint64_t)v14);
    v11 = v15;
    if (v15)
    {
      v12 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      v13 = sub_19CFDF938();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v13, v5, v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    }
    else
    {
      sub_19CE3C624((uint64_t)v14);
    }
    swift_willThrow();
    return sub_19CE3C624((uint64_t)v17);
  }
  else
  {
    *a5 = result;
  }
  return result;
}

uint64_t sub_19CE920D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return _Lazy_Many<A>.init(deserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t _Lazy_Many<A>.init(_partiallyDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[2];
  uint64_t v16;

  v9 = *a2;
  sub_19CD3E448(a1, (uint64_t)v15);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = v15[1];
  *(_OWORD *)(v10 + 32) = v15[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v9;
  v12 = sub_19CFDF938();
  sub_19CDF6380((uint64_t)sub_19CE9243C, v10, v12, v13, (uint64_t *)v15);
  result = sub_19CD3E3F8(a1);
  *a5 = *(_QWORD *)&v15[0];
  return result;
}

uint64_t sub_19CE9219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  _BYTE v10[40];
  uint64_t v11;

  sub_19CD3E448(a1, (uint64_t)v10);
  v11 = a2;
  swift_bridgeObjectRetain();
  result = Array<A>.init(_partiallyDeserializing:using:)((uint64_t)v10, &v11, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_19CE92210@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return _Lazy_Many<A>.init(_partiallyDeserializing:using:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t static _Lazy_Many<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;

  type metadata accessor for _Lazy_Many(0, a3, a3, a4);
  _Lazy_Many.wrappedValue.getter();
  _Lazy_Many.wrappedValue.getter();
  v4 = sub_19CFDF95C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_19CE922A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static _Lazy_Many<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t _Lazy_Many<A>.hash(into:)()
{
  _Lazy_Many.wrappedValue.getter();
  sub_19CFDF950();
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_Many<A>.hashValue.getter()
{
  sub_19CFE08C8();
  _Lazy_Many<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CE92364()
{
  return _Lazy_Many<A>.hashValue.getter();
}

uint64_t sub_19CE9236C()
{
  return _Lazy_Many<A>.hash(into:)();
}

uint64_t sub_19CE92374()
{
  sub_19CFE08C8();
  _Lazy_Many<A>.hash(into:)();
  return sub_19CFE0910();
}

void sub_19CE923C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = *v1;
  v9[0] = a1;
  v9[1] = v2;
  v3 = sub_19CFDF938();
  v6 = type metadata accessor for LazyValueWrapper(0, v3, v4, v5);
  sub_19CDF6F58((uint64_t)v9, v6, v7, v8);
}

uint64_t sub_19CE92418@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_19CE91FA4((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t sub_19CE9243C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_19CE9219C((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for _Lazy_Many(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _Lazy_Many);
}

uint64_t sub_19CE92468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> _Lazy_Many<A>, a1, &v4);
}

uint64_t sub_19CE924A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for _Lazy_Many(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  result = _Lazy_Many.wrappedValue.getter();
  *a4 = result;
  return result;
}

uint64_t sub_19CE924EC()
{
  return 8;
}

_QWORD *sub_19CE924F8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t destroy for AMSMetricsIDService(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  id v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = v5;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AMSMetricsIDService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AMSMetricsIDService(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSMetricsIDService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSMetricsIDService()
{
  return &type metadata for AMSMetricsIDService;
}

uint64_t sub_19CE92734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t i;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  _OWORD v27[2];
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v2 + 63) >> 6;
  v32 = (uint64_t)v30 + 8;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v4)
    goto LABEL_30;
LABEL_6:
  v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v8 < v19)
    {
      v9 = *(_QWORD *)(v18 + 8 * v8);
      ++v6;
      if (v9)
        goto LABEL_21;
      v6 = v8 + 1;
      if (v8 + 1 >= v19)
        goto LABEL_31;
      v9 = *(_QWORD *)(v18 + 8 * v6);
      if (v9)
        goto LABEL_21;
      v6 = v8 + 2;
      if (v8 + 2 >= v19)
        goto LABEL_31;
      v9 = *(_QWORD *)(v18 + 8 * v6);
      if (v9)
        goto LABEL_21;
      v6 = v8 + 3;
      if (v8 + 3 >= v19)
        goto LABEL_31;
      v9 = *(_QWORD *)(v18 + 8 * v6);
      if (v9)
      {
LABEL_21:
        v4 = (v9 - 1) & v9;
        for (i = __clz(__rbit64(v9)) + (v6 << 6); ; i = v17 | (v6 << 6))
        {
          sub_19CD23A14(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v29);
          sub_19CD436B0(*(_QWORD *)(a1 + 56) + 32 * i, v32);
          v27[0] = v30[0];
          v27[1] = v30[1];
          v28 = v31;
          v26[0] = v29[0];
          v26[1] = v29[1];
          sub_19CD23A14((uint64_t)v26, (uint64_t)&v20);
          sub_19CD436B0((uint64_t)v27 + 8, (uint64_t)&v22 + 8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43EC38);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2B80);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v24 = 0u;
            v25 = 0u;
            v23 = 0u;
          }
          sub_19CCECFE4((uint64_t)v26, &qword_1ECEB0760);
          if (*((_QWORD *)&v23 + 1))
          {
            v20 = v23;
            v21 = v24;
            v22 = v25;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_19CD23520(0, v7[2] + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v13 = v7[2];
            v12 = v7[3];
            if (v13 >= v12 >> 1)
            {
              result = (uint64_t)sub_19CD23520((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v7[2] = v13 + 1;
            v14 = &v7[6 * v13];
            v15 = v20;
            v16 = v22;
            v14[3] = v21;
            v14[4] = v16;
            v14[2] = v15;
            if (!v4)
              goto LABEL_6;
          }
          else
          {
            result = sub_19CCECFE4((uint64_t)&v23, &qword_1EE4407A8);
            if (!v4)
              goto LABEL_6;
          }
LABEL_30:
          v17 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v10 = v8 + 4;
      if (v10 < v19)
      {
        v9 = *(_QWORD *)(v18 + 8 * v10);
        if (v9)
        {
          v6 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          v6 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_33;
          if (v6 >= v19)
            break;
          v9 = *(_QWORD *)(v18 + 8 * v6);
          ++v10;
          if (v9)
            goto LABEL_21;
        }
      }
    }
LABEL_31:
    swift_release();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_19CE92A38()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE92AB4;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD1EED4();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43D1C0);
  return swift_continuation_await();
}

uint64_t sub_19CE92AB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_19CE92B28()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 312));
}

uint64_t sub_19CE92B5C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  swift_release();
  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240)) & 1) != 0)
  {

  }
  else
  {
    v1 = (__int128 *)(v0 + 80);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v19 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CCF8C5C(v0 + 160, v0 + 192, &qword_1ECEB3370);
    *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19CD40658(v0 + 192, v0 + 80);
    *(_BYTE *)(v0 + 112) = 0;
    v9 = *(_OWORD *)(v0 + 96);
    v20 = *v1;
    v21 = v9;
    v22 = *(_BYTE *)(v0 + 112);
    v10 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v19[2] + 1, 1, v19);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    v14 = &v10[5 * v12];
    v15 = v20;
    v16 = v21;
    *((_BYTE *)v14 + 64) = v22;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    v19 = v10;
    sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v20 = v4;
    LOBYTE(v19) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
    swift_bridgeObjectRelease();

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19CE92DE0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE92E5C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD23C0C();
  sub_19CCECFE4(v1, (uint64_t *)&unk_1EE43C800);
  return swift_continuation_await();
}

uint64_t sub_19CE92E5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 160);
    *(_BYTE *)(v1 + 153) = *(_BYTE *)(v1 + 168);
  }
  return swift_task_switch();
}

uint64_t sub_19CE92ED8()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE92F54;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CD234FC();
  sub_19CCECFE4(v1, &qword_1ECEB04C0);
  return swift_continuation_await();
}

uint64_t sub_19CE92F54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 160);
    *(_BYTE *)(v1 + 153) = *(_BYTE *)(v1 + 168);
  }
  return swift_task_switch();
}

uint64_t sub_19CE92FD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 312), *(unsigned __int8 *)(v0 + 153));
}

uint64_t sub_19CE93008()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  swift_release();
  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240)) & 1) != 0)
  {

  }
  else
  {
    v1 = (__int128 *)(v0 + 80);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v19 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CCF8C5C(v0 + 160, v0 + 192, &qword_1ECEB3370);
    *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19CD40658(v0 + 192, v0 + 80);
    *(_BYTE *)(v0 + 112) = 0;
    v9 = *(_OWORD *)(v0 + 96);
    v20 = *v1;
    v21 = v9;
    v22 = *(_BYTE *)(v0 + 112);
    v10 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v19[2] + 1, 1, v19);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    v14 = &v10[5 * v12];
    v15 = v20;
    v16 = v21;
    *((_BYTE *)v14 + 64) = v22;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    v19 = v10;
    sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v20 = v4;
    LOBYTE(v19) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
    swift_bridgeObjectRelease();

  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

uint64_t sub_19CE93290(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
  return swift_task_switch();
}

uint64_t sub_19CE932A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 288) + 88))();
  return swift_task_switch();
}

uint64_t sub_19CE932F0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_19CE9336C;
  v0[10] = swift_continuation_init();
  v1 = (uint64_t)(v0 + 10);
  *(_BYTE *)(v1 + 72) = 1;
  sub_19CDBF72C();
  sub_19CCECFE4(v1, &qword_1EE43BE60);
  return swift_continuation_await();
}

uint64_t sub_19CE9336C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 304) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_BYTE *)(v1 + 153) = *(_BYTE *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_19CE933E0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 153));
}

uint64_t sub_19CE93414()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  swift_release();
  swift_getErrorValue();
  if ((sub_19CD2C1BC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240)) & 1) != 0)
  {

  }
  else
  {
    v1 = (__int128 *)(v0 + 80);
    if (qword_1ECEB1048 != -1)
      swift_once();
    v2 = (void *)qword_1ECEB5298;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
    v4 = v2;
    v19 = sub_19CD40918(0, 34, 0, MEMORY[0x1E0DEE9D8]);
    v5._object = (void *)0x800000019D06E0C0;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19CCF8C5C(v0 + 160, v0 + 192, &qword_1ECEB3370);
    *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19CD40658(v0 + 192, v0 + 80);
    *(_BYTE *)(v0 + 112) = 0;
    v9 = *(_OWORD *)(v0 + 96);
    v20 = *v1;
    v21 = v9;
    v22 = *(_BYTE *)(v0 + 112);
    v10 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v19[2] + 1, 1, v19);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v13 = *(void **)(v0 + 304);
    v10[2] = v12 + 1;
    v14 = &v10[5 * v12];
    v15 = v20;
    v16 = v21;
    *((_BYTE *)v14 + 64) = v22;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    v19 = v10;
    sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)&v20 = v4;
    LOBYTE(v19) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v19);
    swift_bridgeObjectRelease();

  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
}

uint64_t sub_19CE93698()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2D48);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19D054B60;
  v1 = (void *)sub_19CFDF554();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_keyWithName_crossDeviceSync_, v1, 1);

  *(_QWORD *)(v0 + 32) = v3;
  v4 = (void *)sub_19CFDF554();
  v5 = objc_msgSend(v2, sel_keyWithName_crossDeviceSync_, v4, 0);

  *(_QWORD *)(v0 + 40) = v5;
  result = sub_19CFDF878();
  qword_1EE440738 = v0;
  return result;
}

uint64_t sub_19CE9379C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE937B8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = *(_QWORD *)(v0[7] + 48);
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_19CE93824;
  v1[21] = v0[2];
  return swift_task_switch();
}

uint64_t sub_19CE93824(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE93880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE *v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v4 = swift_bridgeObjectRetain();
    v5 = sub_19CE94C18(v4, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v6 = sub_19CE94950(v5, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v6 + 16))
    {
      v8 = *(_QWORD *)(v6 + 32);
      v7 = *(_QWORD *)(v6 + 40);
      v9 = *(_BYTE *)(v6 + 48);
      v11 = *(_QWORD *)(v6 + 56);
      v10 = *(_QWORD *)(v6 + 64);
      v22 = *(_BYTE *)(v6 + 72);
      v12 = *(_QWORD *)(v6 + 80);
      v21 = *(_QWORD *)(v6 + 88);
      v13 = *(_QWORD *)(v6 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23[0] = v8;
      v23[1] = v7;
      v24 = v9;
      v25 = v11;
      v26 = v10;
      v27 = v22;
      v28 = v12;
      v29 = v21;
      v30 = v13;
      v14 = sub_19CE93B50((uint64_t)v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EE43D640 != -1)
        swift_once();
      v15 = sub_19CD1C8C4(qword_1EE440738, *(_QWORD *)(v0 + 48), 1, 0);

      if (*(_QWORD *)(sub_19CE92734((uint64_t)v15) + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2F10);
        v16 = sub_19CFE03B8();
      }
      else
      {
        v16 = MEMORY[0x1E0DEE9E0];
      }
      v23[0] = v16;
      v20 = swift_bridgeObjectRetain();
      sub_19CCF888C(v20, 1, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v23[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = sub_19CD30650(MEMORY[0x1E0DEE9D8]);
    }
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v19);
  }
  else
  {
    sub_19CE948A0();
    swift_allocError();
    *v17 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

id sub_19CE93B50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  double v3;
  int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[9];

  v2 = (uint64_t)v1;
  v3 = *(double *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB80]), sel_init);
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v11, v6, v7);
  v8 = (void *)v11[0];
  objc_msgSend(v5, sel_setAccount_, v11[0]);

  objc_msgSend(v5, sel_setClientInfo_, *(_QWORD *)(v2 + 40));
  v9 = (void *)sub_19CFDF554();
  objc_msgSend(v5, sel_setDomain_, v9);

  sub_19CE94AF8(v2, (uint64_t)v11);
  if (v4)
    v3 = *(double *)&v11[7];
  sub_19CE94BEC((uint64_t)v11);
  objc_msgSend(v5, sel_setResetInterval_, v3);
  objc_msgSend(v5, sel_setIsActiveITunesAccountRequired_, *(unsigned __int8 *)(v2 + 64));
  return v5;
}

uint64_t sub_19CE93C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE93CA0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[11] = *(_QWORD *)(v0[14] + 48);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_19CE93D0C;
  v1[21] = v0[11];
  return swift_task_switch();
}

uint64_t sub_19CE93D0C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE93D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double *v10;
  _QWORD *v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void);
  _BYTE *v20;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  int v25;
  void *v26;

  v1 = *(_QWORD *)(v0 + 128);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain();
    v3 = sub_19CDFDE6C(v2);
    swift_bridgeObjectRelease();
    swift_retain();
    v4 = swift_bridgeObjectRetain();
    v5 = sub_19CE94E68(v4, v3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v6 = sub_19CE94950(v5, v1);
    swift_bridgeObjectRelease();
    v7 = sub_19CE08990(v6);
    swift_bridgeObjectRelease();
    v8 = sub_19CDFE30C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v9 = v8[2];
    if (v9)
    {
      v10 = (double *)(v8 + 7);
      v22 = *((_QWORD *)v24 + 14);
      v23 = (uint64_t)(v24 + 2);
      do
      {
        v11 = (_QWORD *)*((_QWORD *)v24 + 14);
        v12 = v10[1];
        v25 = *((unsigned __int8 *)v10 + 16);
        v13 = objc_allocWithZone(MEMORY[0x1E0CFDB80]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = objc_msgSend(v13, sel_init);
        v15 = *(_QWORD *)(v22 + 24);
        v16 = *(_QWORD *)(v22 + 32);
        __swift_project_boxed_opaque_existential_1(v11, v15);
        (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v26, v15, v16);
        v17 = v26;
        objc_msgSend(v14, sel_setAccount_, v26);

        objc_msgSend(v14, sel_setClientInfo_, *(_QWORD *)(v22 + 40));
        v18 = (void *)sub_19CFDF554();
        objc_msgSend(v14, sel_setDomain_, v18);

        sub_19CE94AF8((uint64_t)v11, v23);
        if (v25)
          v12 = v24[9];
        sub_19CE94BEC(v23);
        objc_msgSend(v14, sel_setResetInterval_, v12);
        objc_msgSend(v14, sel_setIsActiveITunesAccountRequired_, *(unsigned __int8 *)(v22 + 64));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_reset);

        v10 += 9;
        --v9;
      }
      while (v9);
    }
    swift_release();
    v19 = (uint64_t (*)(void))*((_QWORD *)v24 + 1);
  }
  else
  {
    sub_19CE948A0();
    swift_allocError();
    *v20 = 1;
    swift_willThrow();
    v19 = (uint64_t (*)(void))*((_QWORD *)v24 + 1);
  }
  return v19();
}

uint64_t sub_19CE94078()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_19CE94090()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = *(_QWORD *)(v0[3] + 48);
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_19CE940FC;
  v1[21] = v0[2];
  return swift_task_switch();
}

uint64_t sub_19CE940FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE94158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v6;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_19CE9423C;
    return sub_19CFE0430();
  }
  else
  {
    sub_19CE948A0();
    swift_allocError();
    *v6 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CE9423C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE942A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE942B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[29] = a3;
  v4[30] = a4;
  v4[28] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CE94320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_19CE94950(v2, v1);
  swift_bridgeObjectRelease();
  v4 = sub_19CE08990(v3);
  swift_bridgeObjectRelease();
  v5 = sub_19CDFE30C(v4);
  swift_bridgeObjectRelease();
  v6 = v5[2];
  if (v6)
  {
    v7 = (__int128 *)(v0 + 16);
    v29 = (_OWORD *)(v0 + 88);
    v8 = v5 + 4;
    v9 = sub_19CFDFA10();
    v31 = *(_QWORD *)(v9 - 8);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v32 = v9;
    do
    {
      v33 = v6;
      v12 = *(_QWORD *)(v0 + 248);
      v11 = *(_QWORD *)(v0 + 256);
      v13 = *(_QWORD *)(v0 + 240);
      *v7 = *(_OWORD *)v8;
      v15 = *((_OWORD *)v8 + 2);
      v14 = *((_OWORD *)v8 + 3);
      v16 = *((_OWORD *)v8 + 1);
      *(_QWORD *)(v0 + 80) = v8[8];
      *(_OWORD *)(v0 + 48) = v15;
      *(_OWORD *)(v0 + 64) = v14;
      *(_OWORD *)(v0 + 32) = v16;
      v30(v11, 1, 1, v9);
      sub_19CE94AF8(v13, (uint64_t)v29);
      v17 = swift_allocObject();
      v18 = *(_OWORD *)(v0 + 136);
      *(_OWORD *)(v17 + 64) = *(_OWORD *)(v0 + 120);
      *(_OWORD *)(v17 + 80) = v18;
      v19 = *(_OWORD *)(v0 + 104);
      *(_OWORD *)(v17 + 32) = *v29;
      *(_OWORD *)(v17 + 48) = v19;
      v20 = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v17 + 152) = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v17 + 136) = v20;
      v21 = *v7;
      *(_OWORD *)(v17 + 120) = *(_OWORD *)(v0 + 32);
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      *(_BYTE *)(v17 + 96) = *(_BYTE *)(v0 + 152);
      *(_QWORD *)(v17 + 168) = *(_QWORD *)(v0 + 80);
      *(_OWORD *)(v17 + 104) = v21;
      sub_19CCF8C5C(v11, v12, (uint64_t *)&unk_1ECEB29B0);
      LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v12, 1, v9);
      sub_19CE08A9C(v0 + 16);
      v22 = *(_QWORD *)(v0 + 248);
      if ((_DWORD)v11 == 1)
      {
        sub_19CCECFE4(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_1ECEB29B0);
      }
      else
      {
        sub_19CFDFA04();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v22, v9);
      }
      if (*(_QWORD *)(v17 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v23 = sub_19CFDF998();
        v25 = v24;
        swift_unknownObjectRelease();
      }
      else
      {
        v23 = 0;
        v25 = 0;
      }
      v26 = **(_QWORD **)(v0 + 224);
      v27 = v25 | v23;
      if (v25 | v23)
      {
        v27 = v0 + 160;
        *(_QWORD *)(v0 + 160) = 0;
        *(_QWORD *)(v0 + 168) = 0;
        *(_QWORD *)(v0 + 176) = v23;
        *(_QWORD *)(v0 + 184) = v25;
      }
      v10 = *(_QWORD *)(v0 + 256);
      *(_QWORD *)(v0 + 192) = 1;
      *(_QWORD *)(v0 + 200) = v27;
      *(_QWORD *)(v0 + 208) = v26;
      swift_task_create();
      swift_release();
      sub_19CCECFE4(v10, (uint64_t *)&unk_1ECEB29B0);
      v8 += 9;
      v6 = v33 - 1;
      v9 = v32;
    }
    while (v33 != 1);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE94628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return swift_task_switch();
}

uint64_t sub_19CE94640()
{
  _QWORD *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  _OWORD v10[4];
  uint64_t v11;

  v1 = v0[9];
  v2 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v2;
  v11 = *(_QWORD *)(v1 + 64);
  v3 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v3;
  v4 = sub_19CE93B50((uint64_t)v10);
  v5 = (void *)sub_19CFDF554();
  v6 = objc_msgSend((id)objc_opt_self(), sel_keyWithName_crossDeviceSync_, v5, 1);

  v7 = objc_msgSend(v4, sel_identifierIfExistsForKey_, v6);
  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_19CCCBFA0;
  v0[5] = &block_descriptor_14;
  v8 = _Block_copy(v0 + 2);
  objc_msgSend(v7, sel_addFinishBlock_, v8);
  _Block_release(v8);

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_19CE94770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_19CCC1F98;
  v8[6] = a3;
  v8[7] = v3;
  v8[4] = a1;
  v8[5] = a2;
  return swift_task_switch();
}

uint64_t sub_19CE947E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[13] = a1;
  v4[14] = v1;
  return swift_task_switch();
}

uint64_t sub_19CE94844()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19CCBE344;
  v2[3] = v0;
  return swift_task_switch();
}

unint64_t sub_19CE948A0()
{
  unint64_t result;

  result = qword_1EE440768;
  if (!qword_1EE440768)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for MetricsIDServiceError, &type metadata for MetricsIDServiceError);
    atomic_store(result, &qword_1EE440768);
  }
  return result;
}

uint64_t sub_19CE948E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_19CCBE344;
  return sub_19CE942B0(a1, a2, v7, v6);
}

uint64_t sub_19CE94950(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[2];
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v43 = MEMORY[0x1E0DEE9D8];
    sub_19CD05314(0, v2, 0);
    v3 = v43;
    v5 = (char *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v5 - 1);
      v7 = *v5;
      v9 = *((_QWORD *)v5 + 1);
      v8 = *((_QWORD *)v5 + 2);
      v10 = v5[24];
      v11 = *((_QWORD *)v5 + 6);
      v29[0] = *((_QWORD *)v5 - 2);
      v29[1] = v6;
      v30 = v7;
      v31 = v9;
      v32 = v8;
      v33 = v10;
      v34 = *((_OWORD *)v5 + 2);
      v35 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19CF71FEC(v29, a2, (uint64_t)v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v36[0];
      v13 = v36[1];
      v14 = v37;
      v15 = v38;
      v16 = v39;
      v17 = v40;
      v18 = v41;
      v19 = v42;
      v21 = *(_QWORD *)(v3 + 16);
      v20 = *(_QWORD *)(v3 + 24);
      v43 = v3;
      if (v21 >= v20 >> 1)
      {
        v27 = v41;
        v26 = v38;
        v25 = v40;
        v24 = v42;
        sub_19CD05314(v20 > 1, v21 + 1, 1);
        v19 = v24;
        v17 = v25;
        v15 = v26;
        v18 = v27;
        v3 = v43;
      }
      v5 += 72;
      *(_QWORD *)(v3 + 16) = v21 + 1;
      v22 = v3 + 72 * v21;
      *(_QWORD *)(v22 + 32) = v12;
      *(_QWORD *)(v22 + 40) = v13;
      *(_BYTE *)(v22 + 48) = v14;
      *(_QWORD *)(v22 + 56) = v15;
      *(_QWORD *)(v22 + 64) = v16;
      *(_BYTE *)(v22 + 72) = v17;
      *(_OWORD *)(v22 + 80) = v18;
      *(_QWORD *)(v22 + 96) = v19;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_19CE94AF8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AMSMetricsIDService(a2, a1);
  return a2;
}

uint64_t sub_19CE94B2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE94B88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19CD579FC;
  v2[8] = v0 + 32;
  v2[9] = v0 + 104;
  return swift_task_switch();
}

uint64_t sub_19CE94BEC(uint64_t a1)
{
  destroy for AMSMetricsIDService(a1);
  return a1;
}

uint64_t sub_19CE94C18(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = 0;
    v28 = result + 32;
    v21 = MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(result + 16);
    while (1)
    {
      if (v6 <= v3)
        v7 = v3;
      else
        v7 = v6;
      v30 = v7;
      while (1)
      {
        if (v6 == v30)
          goto LABEL_34;
        v8 = v28 + 72 * v6;
        v9 = *(_QWORD **)(v8 + 24);
        ++v6;
        v10 = v9[2];
        if (!v10)
          goto LABEL_7;
        v26 = *(_QWORD *)v8;
        v22 = *(_QWORD *)(v8 + 8);
        v25 = *(_BYTE *)(v8 + 16);
        v24 = *(_QWORD *)(v8 + 32);
        v23 = *(_BYTE *)(v8 + 40);
        v29 = *(_OWORD *)(v8 + 48);
        v11 = *(_QWORD *)(v8 + 64);
        if (v9[4] == a2 && v9[5] == a3)
          break;
        result = sub_19CFE06A0();
        if ((result & 1) != 0)
          break;
        if (v10 != 1)
        {
          v13 = v9 + 7;
          v14 = 1;
          while (1)
          {
            v15 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (*(v13 - 1) == a2 && *v13 == a3)
              goto LABEL_25;
            result = sub_19CFE06A0();
            if ((result & 1) != 0)
              goto LABEL_25;
            v13 += 2;
            ++v14;
            if (v15 == v10)
              goto LABEL_7;
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v6 == v27)
          return v21;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v21;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_19CD05314(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v17 = v21;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        result = sub_19CD05314(v18 > 1, v19 + 1, 1);
        v17 = v21;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v21 = v17;
      v20 = v17 + 72 * v19;
      *(_QWORD *)(v20 + 32) = v26;
      *(_QWORD *)(v20 + 40) = v22;
      *(_BYTE *)(v20 + 48) = v25;
      *(_QWORD *)(v20 + 56) = v9;
      *(_QWORD *)(v20 + 64) = v24;
      *(_BYTE *)(v20 + 72) = v23;
      *(_OWORD *)(v20 + 80) = v29;
      *(_QWORD *)(v20 + 96) = v11;
      v3 = v27;
      if (v6 == v27)
        return v21;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19CE94E68(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v34;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = 0;
  v24 = result + 32;
  v21 = a2 + 7;
  v4 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(result + 16);
  while (2)
  {
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    v31 = v4;
    v22 = v5;
    while (1)
    {
      if (v3 == v5)
      {
LABEL_38:
        __break(1u);
        return result;
      }
      v6 = v24 + 72 * v3++;
      v34 = *(_QWORD *)(v6 + 24);
      v7 = *(_QWORD *)(v34 + 16);
      if (v7)
        break;
LABEL_27:
      v5 = v22;
      v4 = v31;
      if (v3 == v23)
        return v4;
    }
    v8 = 0;
    v29 = *(_QWORD *)(v6 + 8);
    v30 = *(_QWORD *)v6;
    v28 = *(_BYTE *)(v6 + 16);
    v27 = *(_QWORD *)(v6 + 32);
    v26 = *(_BYTE *)(v6 + 40);
    v32 = *(_OWORD *)(v6 + 48);
    v25 = *(_QWORD *)(v6 + 64);
    v9 = a2[2];
    while (1)
    {
      if (!v9)
        goto LABEL_10;
      v10 = (uint64_t *)(v34 + 32 + 16 * v8);
      v11 = *v10;
      v12 = v10[1];
      if (a2[4] == *v10 && a2[5] == v12)
        break;
      result = sub_19CFE06A0();
      if ((result & 1) != 0)
        break;
      if (v9 != 1)
      {
        v14 = v21;
        v15 = 1;
        while (1)
        {
          v16 = v15 + 1;
          if (__OFADD__(v15, 1))
            break;
          if (*(v14 - 1) == v11 && *v14 == v12)
            goto LABEL_29;
          result = sub_19CFE06A0();
          if ((result & 1) != 0)
            goto LABEL_29;
          v14 += 2;
          ++v15;
          if (v16 == v9)
            goto LABEL_10;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_10:
      if (++v8 == v7)
        goto LABEL_27;
    }
LABEL_29:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = v31;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_19CD05314(0, *(_QWORD *)(v31 + 16) + 1, 1);
      v4 = v31;
    }
    v19 = *(_QWORD *)(v4 + 16);
    v18 = *(_QWORD *)(v4 + 24);
    if (v19 >= v18 >> 1)
    {
      result = sub_19CD05314(v18 > 1, v19 + 1, 1);
      v4 = v31;
    }
    *(_QWORD *)(v4 + 16) = v19 + 1;
    v20 = v4 + 72 * v19;
    *(_QWORD *)(v20 + 32) = v30;
    *(_QWORD *)(v20 + 40) = v29;
    *(_BYTE *)(v20 + 48) = v28;
    *(_QWORD *)(v20 + 56) = v34;
    *(_QWORD *)(v20 + 64) = v27;
    *(_BYTE *)(v20 + 72) = v26;
    *(_OWORD *)(v20 + 80) = v32;
    *(_QWORD *)(v20 + 96) = v25;
    v2 = v23;
    if (v3 != v23)
      continue;
    return v4;
  }
}

uint64_t LazyPromise.__allocating_init(on:perform:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  LazyPromise.init(on:perform:)(a1, a2, a3);
  return v6;
}

uint64_t LazyPromise.init(on:perform:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v3 + 16) = v7;
  sub_19CCD14C4(a1, v3 + 24);
  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = a3;
  *(_BYTE *)(v3 + 80) = 0;
  return v3;
}

uint64_t LazyPromise.hasStarted.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  unsigned __int8 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_19CDD9124((_QWORD *(*)(uint64_t *__return_ptr))sub_19CE952D0, &v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_19CE95218@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  _BYTE v11[64];

  v4 = a1 + 3;
  v3 = *a1;
  swift_beginAccess();
  v7 = type metadata accessor for LazyPromise.State(0, *(_QWORD *)(v3 + 80), v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v8 + 16))(v11, v4, v7);
  if ((v11[56] & 1) != 0)
  {
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    v10 = 1;
  }
  else
  {
    swift_release();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    v10 = 0;
  }
  *a2 = v10;
  return result;
}

uint64_t sub_19CE952D0@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_19CE95218(v1, a1);
}

uint64_t *LazyPromise.start()()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, uint64_t **, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t *v24;
  char v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31;
  char v32;

  v1 = *v0;
  v2 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v2);
  v3 = v0 + 3;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 80);
  v7 = type metadata accessor for LazyPromise.State(0, v4, v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(__int128 *, uint64_t *, uint64_t))(v8 + 16))(v29, v0 + 3, v7);
  if ((v32 & 1) != 0)
  {
    v9 = *(uint64_t **)&v29[0];
    os_unfair_lock_unlock(v2);
  }
  else
  {
    v11 = v30;
    v10 = v31;
    sub_19CCD14C4(v29, (uint64_t)v26);
    v14 = type metadata accessor for Promise(0, v4, v12, v13);
    v9 = Promise.__allocating_init()(v14, v15, v16, v17);
    v24 = v9;
    v25 = 1;
    swift_beginAccess();
    v18 = *(void (**)(_QWORD *, uint64_t **, uint64_t))(v8 + 40);
    swift_retain();
    v18(v3, &v24, v7);
    swift_endAccess();
    os_unfair_lock_unlock(v2);
    v19 = v27;
    v20 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v11;
    v21[3] = v10;
    v21[4] = v9;
    v22 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v20 + 8);
    swift_retain();
    swift_retain();
    v22(sub_19CE96D5C, v21, v19, v20);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  return v9;
}

uint64_t sub_19CE95488(void (*a1)(_QWORD, uint64_t, _QWORD, uint64_t), uint64_t a2, uint64_t a3)
{
  swift_retain_n();
  a1(j___s9JetEngine7PromiseC7resolveyyxF, a3, j___s9JetEngine7PromiseC6rejectyys5Error_pF_0, a3);
  return swift_release_n();
}

uint64_t LazyPromise.then(perform:orCatchError:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)(a1, a2, a3, a4, a5);
  return swift_release();
}

uint64_t LazyPromise.then()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19CE95560()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[4] = (uint64_t)LazyPromise.start()();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_19CE955C0;
  return Promise.then()(v0[2]);
}

uint64_t sub_19CE955C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CE95624()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CE95658()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LazyPromise.map<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;
  __int128 v13[2];
  __int128 v14[2];

  v5 = v4;
  type metadata accessor for LazyPromise(0, a4, a3, a4);
  sub_19CCD5B84(a1, (uint64_t)v14);
  sub_19CCD5B84(a1, (uint64_t)v13);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a4;
  v10[3] = v5;
  v10[4] = a2;
  v10[5] = a3;
  sub_19CCD14C4(v13, (uint64_t)(v10 + 6));
  v11 = swift_allocObject();
  LazyPromise.init(on:perform:)(v14, (uint64_t)sub_19CE96DA8, (uint64_t)v10);
  swift_retain();
  swift_retain();
  return v11;
}

uint64_t sub_19CE95760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v15 = *a5;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = *(_QWORD *)(v15 + 80);
  v16[3] = a9;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a6;
  v16[7] = a7;
  v16[8] = a3;
  v16[9] = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_retain();
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19CE97428, (uint64_t)v16, (uint64_t)sub_19CCE9D70, v17, a8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_19CE9586C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(double);
  uint64_t v16;

  v10 = *(_QWORD *)(a9 - 8);
  v11 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v11);
  a2(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, a9);
}

uint64_t LazyPromise.flatMap<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v18[2];
  __int128 v19[2];

  v6 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for LazyPromise(0, AssociatedTypeWitness, v13, v14);
  sub_19CCD5B84(a1, (uint64_t)v19);
  sub_19CCD5B84(a1, (uint64_t)v18);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = v6;
  v15[5] = a2;
  v15[6] = a3;
  sub_19CCD14C4(v18, (uint64_t)(v15 + 7));
  v16 = swift_allocObject();
  LazyPromise.init(on:perform:)(v19, (uint64_t)sub_19CE96E08, (uint64_t)v15);
  swift_retain();
  swift_retain();
  return v16;
}

uint64_t sub_19CE95A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v21[2];

  v16 = *a5;
  sub_19CCD5B84(a8, (uint64_t)v21);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = *(_QWORD *)(v16 + 80);
  v17[3] = a9;
  v17[4] = a10;
  v17[5] = a6;
  v17[6] = a7;
  v17[7] = a1;
  v17[8] = a2;
  v17[9] = a3;
  v17[10] = a4;
  sub_19CCD14C4(v21, (uint64_t)(v17 + 11));
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_retain();
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19CE97358, (uint64_t)v17, (uint64_t)sub_19CE97460, v18, a8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t LazyPromise.join<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  _UNKNOWN **v31;

  v4 = v3;
  v27 = a3;
  v28 = a1;
  v26 = *v3;
  v6 = sub_19CFDFD88();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6, v8);
  v9 = sub_19CFDF308();
  MEMORY[0x1E0C80A78](v9, v10);
  v11 = sub_19CFDFDAC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19CD48F8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0DEF8D8], v11);
  sub_19CFDF2F0();
  *(_QWORD *)&v29 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3068, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3050);
  sub_19CD09F78((unint64_t *)&qword_1ECEB3058, &qword_1ECEB3050);
  sub_19CFE0070();
  v17 = (void *)sub_19CFDFDDC();
  v18 = v27;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  type metadata accessor for LazyPromise(0, TupleTypeMetadata2, v20, v21);
  v30 = v16;
  v31 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v29 = v17;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a2;
  v22[3] = v18;
  v22[4] = v4;
  v22[5] = v17;
  v22[6] = v28;
  v23 = swift_allocObject();
  LazyPromise.init(on:perform:)(&v29, (uint64_t)sub_19CE96E6C, (uint64_t)v22);
  v24 = v17;
  swift_retain();
  swift_unknownObjectRetain();
  return v23;
}

uint64_t sub_19CE95DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  NSObject *v29;
  id v30;
  uint64_t AssociatedTypeWitness;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  void (*v39)(uint64_t (*)(uint64_t), _QWORD *, uint64_t (*)(uint64_t), _QWORD *, _QWORD *, uint64_t, uint64_t);
  NSObject *v40;
  NSObject *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD aBlock[3];
  void *v67;
  void (*v68)();
  _QWORD *v69;

  v56 = a7;
  v54 = a5;
  v58 = a3;
  v59 = a4;
  v13 = *a5;
  v61 = sub_19CFDF2D8();
  v64 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61, v14);
  v60 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19CFDF308();
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v57 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject();
  v52 = v19;
  v20 = *(_QWORD *)(v13 + 80);
  v19[2] = v20;
  v19[3] = a8;
  v19[4] = a9;
  v19[5] = a1;
  v19[6] = a2;
  swift_retain();
  v21 = dispatch_group_create();
  v24 = type metadata accessor for Result(255, v20, v22, v23);
  sub_19CFDFF5C();
  v25 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v26, 1, 1, v24);
  dispatch_group_enter(v21);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v20;
  v27[3] = a8;
  v27[4] = a9;
  v27[5] = v25;
  v27[6] = v21;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v20;
  v28[3] = a8;
  v28[4] = a9;
  v28[5] = v25;
  v55 = v25;
  v28[6] = v21;
  v53 = sub_19CD48F8C();
  v67 = (void *)v53;
  v68 = (void (*)())&protocol witness table for OS_dispatch_queue;
  aBlock[0] = a6;
  swift_retain_n();
  v29 = v21;
  v30 = a6;
  LazyPromise.start()();
  Promise.then(perform:orCatchError:on:)((uint64_t)sub_19CE97244, (uint64_t)v27, (uint64_t)sub_19CE97254, (uint64_t)v28, (uint64_t)aBlock);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34 = type metadata accessor for Result(255, AssociatedTypeWitness, v32, v33);
  sub_19CFDFF5C();
  v35 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v36, 1, 1, v34);
  dispatch_group_enter(v29);
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = v20;
  v37[3] = a8;
  v37[4] = a9;
  v37[5] = v35;
  v37[6] = v29;
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v20;
  v38[3] = a8;
  v38[4] = a9;
  v38[5] = v35;
  v38[6] = v29;
  v67 = (void *)v53;
  v68 = (void (*)())&protocol witness table for OS_dispatch_queue;
  aBlock[0] = v30;
  v39 = *(void (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t (*)(uint64_t), _QWORD *, _QWORD *, uint64_t, uint64_t))(a9 + 16);
  v40 = v29;
  swift_retain_n();
  v41 = v40;
  v54 = (uint64_t *)v30;
  v39(sub_19CE97264, v37, sub_19CE972A0, v38, aBlock, a8, a9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v20;
  v42[3] = a8;
  v43 = v55;
  v42[4] = a9;
  v42[5] = v43;
  v42[6] = v35;
  v42[7] = sub_19CE97230;
  v44 = v58;
  v45 = v59;
  v42[8] = v52;
  v42[9] = v44;
  v42[10] = v45;
  v68 = sub_19CE972E8;
  v69 = v42;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19CD0C78C;
  v67 = &block_descriptor_15;
  v46 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v47 = v57;
  sub_19CFDF2F0();
  v65 = MEMORY[0x1E0DEE9D8];
  sub_19CCC5C88(qword_1ECEB3100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB3198);
  sub_19CD09F78((unint64_t *)&qword_1ECEB31A0, &qword_1ECEB3198);
  v49 = v60;
  v48 = v61;
  sub_19CFE0070();
  sub_19CFDFD70();
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v48);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_19CE962D8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v12);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a5 - 8) + 16))((char *)&v17 - v14, a1, a5, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(&v15[*(int *)(TupleTypeMetadata2 + 48)], a2, AssociatedTypeWitness);
  a3(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, TupleTypeMetadata2);
}

void sub_19CE963DC(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v7 = type metadata accessor for Result(255, a4, (uint64_t)a3, a4);
  v8 = sub_19CFDFF5C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v14 - v11;
  v13 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v12, a1, a4);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v12, 0, 1, v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v13, v12, v8);
  dispatch_group_leave(a3);
}

void sub_19CE964EC(void *a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v6 = type metadata accessor for Result(255, a4, (uint64_t)a3, a4);
  v7 = sub_19CFDFF5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (uint64_t *)((char *)&v14 - v10);
  v12 = swift_projectBox();
  *v11 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v11, 0, 1, v6);
  swift_beginAccess();
  v13 = a1;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v8 + 40))(v12, v11, v7);
  dispatch_group_leave(a3);
}

void sub_19CE965EC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for Result(255, AssociatedTypeWitness, v6, v7);
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v15 - v12;
  v14 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v13, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v13, 0, 1, v8);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v14, v13, v9);
  dispatch_group_leave(a3);
}

void sub_19CE96720(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for Result(255, AssociatedTypeWitness, v6, v7);
  v9 = sub_19CFDFF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (uint64_t *)((char *)&v16 - v12);
  v14 = swift_projectBox();
  *v13 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v13, 0, 1, v8);
  swift_beginAccess();
  v15 = a1;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v10 + 40))(v14, v13, v9);
  dispatch_group_leave(a3);
}

void sub_19CE96844(uint64_t a1, uint64_t a2, void (*a3)(char *, char *), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void **v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void *);
  uint64_t TupleTypeMetadata2;
  uint64_t v62;

  v59 = a6;
  v60 = a5;
  v55 = a4;
  v56 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v52 = (char *)&v51 - v10;
  v57 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v11, v12);
  v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a7;
  v16 = type metadata accessor for Result(255, a7, v14, v15);
  v54 = AssociatedTypeWitness;
  v19 = type metadata accessor for Result(255, AssociatedTypeWitness, v17, v18);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2, v20);
  v22 = (void **)((char *)&v51 - v21);
  v62 = sub_19CFDFF5C();
  v23 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62, v24);
  v26 = (char *)&v51 - v25;
  v27 = sub_19CFDFF5C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v29);
  v31 = (char *)&v51 - v30;
  v32 = swift_projectBox();
  v33 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v32, v27);
  v34 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v16) == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v33, v62);
  v35 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v26, 1, v19) == 1)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v36 = (void **)((char *)v22 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(void **, char *, uint64_t))(v34 + 32))(v22, v31, v16);
  (*(void (**)(void **, char *, uint64_t))(v35 + 32))(v36, v26, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v37 = *v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = *v36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43A200);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_19D052350;
      *(_QWORD *)(v39 + 32) = v37;
      *(_QWORD *)(v39 + 40) = v38;
      sub_19CE04734();
      v40 = (void *)swift_allocError();
      v42 = v41;
      v43 = v37;
      v44 = v38;
      *v42 = v39;
      v60(v40);

LABEL_10:
      return;
    }
    (*(void (**)(void **, uint64_t))(v35 + 8))(v36, v19);
LABEL_9:
    v60(v37);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v37 = *v36;
    (*(void (**)(void **, uint64_t))(v57 + 8))(v22, v58);
    goto LABEL_9;
  }
  v46 = v57;
  v45 = v58;
  v47 = v51;
  (*(void (**)(char *, void **, uint64_t))(v57 + 32))(v51, v22, v58);
  v49 = v52;
  v48 = v53;
  v50 = v54;
  (*(void (**)(char *, void **, uint64_t))(v53 + 32))(v52, v36, v54);
  v56(v47, v49);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
}

uint64_t *LazyPromise.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_release();
  v4 = type metadata accessor for LazyPromise.State(0, *(_QWORD *)(v1 + 80), v2, v3);
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + 3, v4);
  return v0;
}

uint64_t LazyPromise.__deallocating_deinit()
{
  LazyPromise.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19CE96CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CCBE344;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t type metadata accessor for LazyPromise.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyPromise.State);
}

uint64_t sub_19CE96D30()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE96D5C()
{
  uint64_t v0;

  return sub_19CE95488(*(void (**)(_QWORD, uint64_t, _QWORD, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t type metadata accessor for LazyPromise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyPromise);
}

uint64_t sub_19CE96D74()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_19CE96DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CE95760(a1, a2, a3, a4, *(uint64_t **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), v4 + 48, *(_QWORD *)(v4 + 16));
}

uint64_t sub_19CE96DD4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_19CE96E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CE95A38(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), v4 + 56, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_19CE96E38()
{
  uint64_t v0;

  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CE96E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_19CE95DF8(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_19CE96E98()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LazyPromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LazyPromise.__allocating_init(on:perform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_19CE96EF8(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 != 1)
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_release();
}

uint64_t sub_19CE96F40(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  char v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = 1;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    v5 = 0;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
  }
  swift_retain();
  *(_BYTE *)(a1 + 56) = v5;
  return a1;
}

uint64_t sub_19CE96FCC(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_release();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    else
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      LOBYTE(v5) = 0;
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v7;
    }
    *(_BYTE *)(a1 + 56) = v5;
    swift_retain();
  }
  return a1;
}

uint64_t sub_19CE9708C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_release();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t sub_19CE97138(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_19CE97174(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_19CE971C4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_19CE971E0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

uint64_t sub_19CE9720C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE97230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19CE962D8(a1, a2, *(void (**)(char *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t sub_19CE97244(uint64_t a1)
{
  return sub_19CCFEE08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE963DC);
}

uint64_t sub_19CE97254(uint64_t a1)
{
  return sub_19CCFEE08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE964EC);
}

uint64_t sub_19CE97264(uint64_t a1)
{
  return sub_19CCFEE08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE965EC);
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19CE972A0(uint64_t a1)
{
  return sub_19CCFEE08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19CE96720);
}

uint64_t sub_19CE972AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_19CE972E8()
{
  uint64_t v0;

  sub_19CE96844(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void (**)(char *, char *))(v0 + 56), *(_QWORD *)(v0 + 64), *(void (**)(void *))(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 16));
}

uint64_t sub_19CE9731C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return swift_deallocObject();
}

uint64_t sub_19CE97358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  (*(void (**)(void))(v0 + 40))();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v4, v5, v6, v0 + 88, v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_19CE973D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE973F4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CE97428(uint64_t a1)
{
  uint64_t v1;

  return sub_19CE9586C(a1, *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for AppVersionFieldProvider()
{
  return &type metadata for AppVersionFieldProvider;
}

uint64_t sub_19CE97478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = a3;
  return swift_task_switch();
}

unint64_t sub_19CE97490()
{
  unint64_t result;

  result = qword_1EE437108;
  if (!qword_1EE437108)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE437108);
  }
  return result;
}

uint64_t sub_19CE974CC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  void (*v25)(char *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41[32];
  uint64_t v42;

  v30 = a5;
  v31 = a8;
  v36 = a1;
  v37 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v38 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v34 = (char *)&v27 - v13;
  v39 = a4;
  MEMORY[0x1E0C80A78](v14, v15);
  v33 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v27 - v19;
  v21 = sub_19CFDFC08();
  if (!v21)
    return sub_19CFDF8B4();
  v22 = v21;
  v28 = v17;
  v42 = sub_19CFDF398();
  v35 = sub_19CFE0280();
  sub_19CFE022C();
  v39 = v20;
  result = sub_19CFDFBFC();
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v24 = v34;
    while (1)
    {
      v25 = (void (*)(char *, _QWORD))sub_19CFDFC98();
      (*(void (**)(char *))(v11 + 16))(v24);
      v25(v41, 0);
      v26 = v40;
      v36(v24, v38);
      if (v26)
        break;
      v40 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
      sub_19CFE025C();
      sub_19CFDFC14();
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
        return v42;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v38, v30);
  }
  return result;
}

void *sub_19CE977A8(void *a1)
{
  return sub_19CE97AD4(a1);
}

id sub_19CE977C0(void *a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437190);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 7107189;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = sub_19CFDECFC();
  *(_QWORD *)(inited + 56) = v4;
  v5 = sub_19CD2758C(inited);
  v6 = a1;
  sub_19CE9E624(v5, v6);
  if (v1)
  {
    swift_bridgeObjectRelease();

  }
  else
  {

    v7 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA0);
    v8 = sub_19CFE0808();
    v9 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v8, v7);
    swift_unknownObjectRelease();

    v6 = (id)sub_19CD2F714((uint64_t)v7, v9);
    swift_bridgeObjectRelease();

  }
  return v6;
}

uint64_t sub_19CE97908(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_super v10;
  _QWORD v11[5];

  v2 = v1;
  v11[3] = *v2;
  v11[4] = &protocol witness table for AppleServicesLocalizerFactory;
  v11[0] = v2;
  v4 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v5 = objc_allocWithZone(v4);
  sub_19CCD5B84((uint64_t)v11, (uint64_t)v5 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v10.receiver = v5;
  v10.super_class = v4;
  swift_retain();
  v6 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v6, a1);
  v8 = sub_19CD2F714(a1, v7);

  return v8;
}

uint64_t sub_19CE97A00(void *a1)
{
  const void *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD __dst[43];

  memcpy(__dst, v1, sizeof(__dst));
  __dst[0] = sub_19CD12F58();
  v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v4 = sub_19CFE0808();
  v5 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v4, v3);
  swift_unknownObjectRelease();

  v6 = sub_19CD2F714((uint64_t)v3, v5);
  return v6;
}

void *sub_19CE97AD4(void *a1)
{
  uint64_t v1;
  uint64_t inited;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E560);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 0x73646C656966;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v5 = sub_19CFE0808();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_valueWithObject_inContext_, v5, v4);
  swift_unknownObjectRelease();

  *(_QWORD *)(inited + 48) = v7;
  v8 = sub_19CE106D8(inited);
  v9 = v4;
  sub_19CE9E988(v8, (uint64_t)v9);
  if (v1)
  {
    swift_bridgeObjectRelease();

  }
  else
  {

    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA0);
    v11 = objc_msgSend(v6, sel_valueWithObject_inContext_, sub_19CFE0808(), v10);
    swift_unknownObjectRelease();

    v6 = (void *)sub_19CD2F714((uint64_t)v10, v11);
    swift_bridgeObjectRelease();

  }
  return v6;
}

uint64_t sub_19CE97C88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  objc_class *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  objc_super v11;
  _QWORD v12[6];

  v2 = v1;
  v4 = *v2;
  v12[4] = &off_1E3DD1CE0;
  v12[5] = &protocol witness table for AppleServicesLocalizer;
  v12[3] = v4;
  v12[0] = v2;
  v5 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v6 = objc_allocWithZone(v5);
  sub_19CD3839C((uint64_t)v12, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v11.receiver = v6;
  v11.super_class = v5;
  swift_retain();
  v7 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, a1, v11.receiver, v11.super_class, v12[0]);
  v9 = sub_19CD2F714(a1, v8);

  return v9;
}

uint64_t *sub_19CE97D8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *v1;
  v4 = &v11;
  ScalarDictionary.jsRepresentation(in:)(a1, v8);
  if (!v2)
  {
    v5 = v9;
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v4 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return v4;
}

unint64_t sub_19CE97E24@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  return CustomJSValueConvertible.jsRepresentation(in:)(a1, a2);
}

unint64_t sub_19CE97E38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE9E498(a1, a2);
}

uint64_t sub_19CE97E4C(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE4408F8);
}

__int128 *sub_19CE97E74(uint64_t a1, void (*a2)(__int128 *__return_ptr), uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;

  return sub_19CE992D4(a1, v4, a2, a3, a4);
}

id sub_19CE97F6C(void *a1)
{
  return sub_19CE99548(a1);
}

uint64_t sub_19CE98058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

__int128 *sub_19CE98140(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_19CE99B28(a1, a2, a3, a4 & 1);
}

uint64_t sub_19CE9822C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_19CE9AA98(a1, v2, a2);
}

uint64_t sub_19CE9831C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

__int128 *sub_19CE9840C(void *a1)
{
  return sub_19CE9A56C(a1);
}

uint64_t sub_19CE984F4(uint64_t a1, uint64_t (*a2)(_QWORD), _QWORD *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;

  return sub_19CE9A7D0(a1, v5, a2, a3, a4, a5);
}

uint64_t sub_19CE985F0(void *a1)
{
  uint64_t v1;

  return sub_19CE9AD08(a1, v1);
}

uint64_t sub_19CE986CC(uint64_t a1, uint64_t a2, SEL *a3, uint64_t *a4, uint64_t a5)
{
  return sub_19CE9AFDC(a1, a2, a3, a4, a5);
}

uint64_t sub_19CE987B4(uint64_t a1, SEL *a2, uint64_t (*a3)(_QWORD), uint64_t *a4, double a5, double a6)
{
  return sub_19CE9B4BC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19CE9889C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  return sub_19CE9B740(a1, a2, a3, a4, a5);
}

uint64_t sub_19CE98984(uint64_t a1, double a2)
{
  return sub_19CE9B9D8(a1, a2);
}

uint64_t sub_19CE98A6C(uint64_t a1, char a2)
{
  return sub_19CE9BC4C(a1, a2);
}

uint64_t sub_19CE98B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

JSValue __swiftcall CustomJSValueConvertible.makeValue(in:)(JSContext in)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (JSValue)sub_19CE9C12C((uint64_t)in.super.isa, v3, v1, v2);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSValue._jsValue(in:)(JSContext in)
{
  void *v1;

  return (JSValue)v1;
}

uint64_t sub_19CE98D54(void *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v3 = (uint64_t)a1;
  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_BYTE *)v1 + 24);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_BYTE *)v1 + 40);
  v8 = *((_QWORD *)v1 + 12);
  v16 = *v1;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v9 = v1[4];
  v21 = v1[3];
  v22 = v9;
  v23 = v1[5];
  v24 = v8;
  JSError.jsRepresentation(in:)(a1, v13);
  if (!v2)
  {
    v10 = v14;
    v11 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v3, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  return v3;
}

uint64_t sub_19CE98E28(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440910);
}

uint64_t sub_19CE98E50(uint64_t a1)
{
  return sub_19CE97C88(a1);
}

uint64_t sub_19CE98E70(uint64_t a1)
{
  return sub_19CE9831C(a1, (uint64_t (*)(void))sub_19CE9A068);
}

uint64_t sub_19CE98E98(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE98058(a1, *v1, (uint64_t (*)(void))sub_19CE99030);
}

__int128 *sub_19CE98EB8(uint64_t a1)
{
  return sub_19CE97E74(a1, (void (*)(__int128 *__return_ptr))sub_19CD2FE9C, (uint64_t (*)(_QWORD))type metadata accessor for JSStack.DecoratedIntent, &qword_1EE440958);
}

uint64_t JSCalculatedValue.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_19CE98EEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_19CE6A4CC(a1, v7);
  if (!v2)
  {
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v1 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  return v1;
}

__int128 *sub_19CE98F80(void *a1)
{
  return sub_19CE9840C(a1);
}

uint64_t sub_19CE98F8C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_19CCDC684(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), v7);
  if (!v2)
  {
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v1 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  return v1;
}

__int128 *sub_19CE99020(void *a1)
{
  uint64_t v1;

  return sub_19CE98140(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_19CE99030(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  __int128 v22;
  __int128 v23;
  _BYTE v24[32];
  __int128 v25;
  __int128 v26;
  char v27;
  _QWORD v28[4];
  _QWORD *v29;

  v3 = v2;
  *(_QWORD *)&v25 = a2;
  swift_bridgeObjectRetain();
  v5 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v6 = sub_19CFE0808();
  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v6, v5);
  swift_unknownObjectRelease();

  v8 = v3;
  v9 = sub_19CD2F714((uint64_t)v5, v7);
  if (v8)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v10 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v10;
    v29 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409D8);
    v28[0] = &type metadata for JSStack.Options;
    sub_19CD40794((uint64_t)v28, (uint64_t)v24);
    v22 = 0u;
    v23 = 0u;
    sub_19CD40658((uint64_t)v24, (uint64_t)&v22);
    v27 = 0;
    v25 = v22;
    v26 = v23;
    v14 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_19CD40918(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_19CD40918((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[5 * v16];
    v18 = v25;
    v19 = v26;
    *((_BYTE *)v17 + 64) = v27;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    v29 = v14;
    sub_19CD3F190((uint64_t)v28);
    v20._object = (void *)0x800000019D06E590;
    v20._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(_QWORD *)(v11 + 32) = v29;
    *(_QWORD *)&v25 = v12;
    LOBYTE(v22) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v9;
}

__int128 *sub_19CE992D4(uint64_t a1, uint64_t a2, void (*a3)(__int128 *__return_ptr), uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  _QWORD v28[4];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;

  a3(&v29);
  if (v5)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v11 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v13 = v11;
    v32 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    v15 = a4(0);
    v28[3] = __swift_instantiateConcreteTypeFromMangledName(a5);
    v28[0] = v15;
    sub_19CD40794((uint64_t)v28, (uint64_t)v27);
    v25 = 0u;
    v26 = 0u;
    sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
    LOBYTE(v31) = 0;
    v29 = v25;
    v30 = v26;
    v16 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v29;
    v21 = v30;
    *((_BYTE *)v19 + 64) = v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v32 = v16;
    sub_19CD3F190((uint64_t)v28);
    v22._object = (void *)0x800000019D06E590;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(_QWORD *)(v12 + 32) = v32;
    *(_QWORD *)&v29 = v13;
    LOBYTE(v25) = 1;
    v24 = &v29;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v9 = *((_QWORD *)&v30 + 1);
    v10 = v31;
    __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
    v24 = (__int128 *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v9, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  }
  return v24;
}

id sub_19CE99548(void *a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  id v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD v31[4];
  _QWORD *v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437190);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  *(_QWORD *)(inited + 32) = 7107189;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = sub_19CFDECFC();
  *(_QWORD *)(inited + 56) = v4;
  v5 = sub_19CD2758C(inited);
  v6 = a1;
  sub_19CE9E624(v5, v6);
  v8 = v7;

  if (v1)
  {
    swift_bridgeObjectRelease();
    if (qword_1EE43BE78 != -1)
      swift_once();
    v12 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v24 = v12;
    v32 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    v15 = type metadata accessor for Models.DeepLinkIntent();
    v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440980);
    v31[0] = v15;
    sub_19CD40794((uint64_t)v31, (uint64_t)v27);
    v25 = 0u;
    v26 = 0u;
    sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
    v30 = 0;
    v28 = v25;
    v29 = v26;
    v16 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v28;
    v21 = v29;
    *((_BYTE *)v19 + 64) = v30;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v32 = v16;
    sub_19CD3F190((uint64_t)v31);
    v22._object = (void *)0x800000019D06E590;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(_QWORD *)(v13 + 32) = v32;
    *(_QWORD *)&v28 = v24;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)&v28 = v8;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA0);
    v10 = sub_19CFE0808();
    v11 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v10, v9);
    swift_unknownObjectRelease();

    v24 = (id)sub_19CD2F714((uint64_t)v9, v11);
    swift_bridgeObjectRelease();

  }
  return v24;
}

uint64_t sub_19CE99874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  __int128 v22;
  __int128 v23;
  _BYTE v24[32];
  __int128 v25;
  __int128 v26;
  char v27;
  _QWORD v28[4];
  objc_super v29;
  _QWORD *v30;

  v5 = (objc_class *)type metadata accessor for JSBagObject();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = a2;
  v29.receiver = v6;
  v29.super_class = v5;
  swift_unknownObjectRetain();
  v7 = objc_msgSendSuper2(&v29, sel_init);
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, a1);
  v9 = sub_19CD2F714(a1, v8);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v10 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v10;
    v30 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440960);
    v28[0] = &type metadata for Bag;
    sub_19CD40794((uint64_t)v28, (uint64_t)v24);
    v22 = 0u;
    v23 = 0u;
    sub_19CD40658((uint64_t)v24, (uint64_t)&v22);
    v27 = 0;
    v25 = v22;
    v26 = v23;
    v14 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_19CD40918(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_19CD40918((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[5 * v16];
    v18 = v25;
    v19 = v26;
    *((_BYTE *)v17 + 64) = v27;
    *((_OWORD *)v17 + 2) = v18;
    *((_OWORD *)v17 + 3) = v19;
    v30 = v14;
    sub_19CD3F190((uint64_t)v28);
    v20._object = (void *)0x800000019D06E590;
    v20._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    *(_QWORD *)(v11 + 32) = v30;
    *(_QWORD *)&v25 = v12;
    LOBYTE(v22) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v9;
}

__int128 *sub_19CE99B28(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  _QWORD v24[4];
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  sub_19CCDC684(a1, a2, a3, a4 & 1, &v26);
  if (v4)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v8 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    v10 = v8;
    v25 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440950);
    v24[0] = &type metadata for PageIntentInstrumentationModel;
    sub_19CD40794((uint64_t)v24, (uint64_t)v23);
    v21 = 0u;
    v22 = 0u;
    sub_19CD40658((uint64_t)v23, (uint64_t)&v21);
    LOBYTE(v28) = 0;
    v26 = v21;
    v27 = v22;
    v12 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_19CD40918(0, v12[2] + 1, 1, v12);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12[2] = v14 + 1;
    v15 = &v12[5 * v14];
    v16 = v26;
    v17 = v27;
    *((_BYTE *)v15 + 64) = v28;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    v25 = v12;
    sub_19CD3F190((uint64_t)v24);
    v18._object = (void *)0x800000019D06E590;
    v18._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(_QWORD *)(v9 + 32) = v25;
    *(_QWORD *)&v26 = v10;
    LOBYTE(v21) = 1;
    v20 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v6 = *((_QWORD *)&v27 + 1);
    v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    v20 = (__int128 *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v20;
}

uint64_t sub_19CE99D90(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  objc_class *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  _QWORD v26[4];
  objc_super v27;
  __int128 v28;
  __int128 v29;
  _UNKNOWN **v30;
  _QWORD *v31;

  *((_QWORD *)&v29 + 1) = *a2;
  v30 = &protocol witness table for AppleServicesLocalizerFactory;
  *(_QWORD *)&v28 = a2;
  v5 = (objc_class *)type metadata accessor for JSLocalizerFactoryObject();
  v6 = objc_allocWithZone(v5);
  sub_19CCD5B84((uint64_t)&v28, (uint64_t)v6 + OBJC_IVAR____TtC9JetEngine24JSLocalizerFactoryObject_localizerFactory);
  v27.receiver = v6;
  v27.super_class = v5;
  swift_retain();
  v7 = objc_msgSendSuper2(&v27, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, a1);
  v9 = sub_19CD2F714(a1, v8);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v10 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19D0522A0;
    v12 = v10;
    v31 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v13._countAndFlagsBits = 0x69747265766E6F43;
    v13._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    v14 = *a2;
    v26[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440970);
    v26[0] = v14;
    sub_19CD40794((uint64_t)v26, (uint64_t)v25);
    v23 = 0u;
    v24 = 0u;
    sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
    LOBYTE(v30) = 0;
    v28 = v23;
    v29 = v24;
    v15 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v28;
    v20 = v29;
    *((_BYTE *)v18 + 64) = (_BYTE)v30;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v31 = v15;
    sub_19CD3F190((uint64_t)v26);
    v21._object = (void *)0x800000019D06E590;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v11 + 32) = v31;
    *(_QWORD *)&v28 = v12;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v9;
}

uint64_t sub_19CE9A068(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  objc_class *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  __int128 v24;
  __int128 v25;
  _BYTE v26[32];
  _QWORD v27[4];
  objc_super v28;
  __int128 v29;
  __int128 v30;
  _UNKNOWN **v31;
  _UNKNOWN **v32;
  _QWORD *v33;

  v5 = *a2;
  v31 = &off_1E3DD1CE0;
  v32 = &protocol witness table for AppleServicesLocalizer;
  *((_QWORD *)&v30 + 1) = v5;
  *(_QWORD *)&v29 = a2;
  v6 = (objc_class *)type metadata accessor for JSLocalizerObject();
  v7 = objc_allocWithZone(v6);
  sub_19CD3839C((uint64_t)&v29, (uint64_t)v7 + OBJC_IVAR____TtC9JetEngine17JSLocalizerObject_localizer);
  v28.receiver = v7;
  v28.super_class = v6;
  swift_retain();
  v8 = objc_msgSendSuper2(&v28, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
  v9 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v8, a1);
  v10 = sub_19CD2F714(a1, v9);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v11 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v13 = v11;
    v33 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    v15 = *a2;
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409D0);
    v27[0] = v15;
    sub_19CD40794((uint64_t)v27, (uint64_t)v26);
    v24 = 0u;
    v25 = 0u;
    sub_19CD40658((uint64_t)v26, (uint64_t)&v24);
    LOBYTE(v31) = 0;
    v29 = v24;
    v30 = v25;
    v16 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v29;
    v21 = v30;
    *((_BYTE *)v19 + 64) = (_BYTE)v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    v33 = v16;
    sub_19CD3F190((uint64_t)v27);
    v22._object = (void *)0x800000019D06E590;
    v22._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(_QWORD *)(v12 + 32) = v33;
    *(_QWORD *)&v29 = v13;
    LOBYTE(v24) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v24);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v10;
}

uint64_t sub_19CE9A34C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  Swift::String v14;
  __int128 v16;
  __int128 v17;
  _BYTE v18[32];
  __int128 v19;
  __int128 v20;
  char v21;
  _QWORD v22[4];
  _QWORD *v23;

  v3 = a2();
  if (v2)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v4 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_19D0522A0;
    v6 = v4;
    v23 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v7._countAndFlagsBits = 0x69747265766E6F43;
    v7._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409C8);
    v22[0] = &type metadata for JSCalculatedValue;
    sub_19CD40794((uint64_t)v22, (uint64_t)v18);
    v16 = 0u;
    v17 = 0u;
    sub_19CD40658((uint64_t)v18, (uint64_t)&v16);
    v21 = 0;
    v19 = v16;
    v20 = v17;
    v8 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_19CD40918(0, v8[2] + 1, 1, v8);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_19CD40918((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[5 * v10];
    v12 = v19;
    v13 = v20;
    *((_BYTE *)v11 + 64) = v21;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    v23 = v8;
    sub_19CD3F190((uint64_t)v22);
    v14._object = (void *)0x800000019D06E590;
    v14._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(_QWORD *)(v5 + 32) = v23;
    *(_QWORD *)&v19 = v6;
    LOBYTE(v16) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v5, (JetEngine::LogMessageLevel)&v16);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v3;
}

__int128 *sub_19CE9A56C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  Swift::String v15;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  _QWORD v21[4];
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  sub_19CE6A4CC(a1, &v23);
  if (v1)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v5 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
    v7 = v5;
    v22 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v8._countAndFlagsBits = 0x69747265766E6F43;
    v8._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409E0);
    v21[0] = &type metadata for LookupResponse;
    sub_19CD40794((uint64_t)v21, (uint64_t)v20);
    v18 = 0u;
    v19 = 0u;
    sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
    LOBYTE(v25) = 0;
    v23 = v18;
    v24 = v19;
    v9 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_19CD40918(0, v9[2] + 1, 1, v9);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    v12 = &v9[5 * v11];
    v13 = v23;
    v14 = v24;
    *((_BYTE *)v12 + 64) = v25;
    *((_OWORD *)v12 + 2) = v13;
    *((_OWORD *)v12 + 3) = v14;
    v22 = v9;
    sub_19CD3F190((uint64_t)v21);
    v15._object = (void *)0x800000019D06E590;
    v15._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    *(_QWORD *)(v6 + 32) = v22;
    *(_QWORD *)&v23 = v7;
    LOBYTE(v18) = 1;
    v17 = &v23;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v3 = *((_QWORD *)&v24 + 1);
    v4 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    v17 = (__int128 *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  }
  return v17;
}

uint64_t sub_19CE9A7D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), _QWORD *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  Swift::String v27;
  __int128 v29;
  __int128 v30;
  _BYTE v31[32];
  _QWORD v32[4];
  objc_super v33;
  __int128 v34;
  __int128 v35;
  char v36;
  _QWORD *v37;

  sub_19CCD5B84(a2, (uint64_t)&v34);
  v12 = (objc_class *)a3(0);
  v13 = objc_allocWithZone(v12);
  sub_19CCD5B84((uint64_t)&v34, (uint64_t)v13 + *a4);
  v33.receiver = v13;
  v33.super_class = v12;
  v14 = objc_msgSendSuper2(&v33, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
  v15 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v14, a1);
  v16 = sub_19CD2F714(a1, v15);
  if (v6)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v17 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19D0522A0;
    v19 = v17;
    v37 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v20._countAndFlagsBits = 0x69747265766E6F43;
    v20._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(a5);
    v32[0] = a6;
    sub_19CD40794((uint64_t)v32, (uint64_t)v31);
    v29 = 0u;
    v30 = 0u;
    sub_19CD40658((uint64_t)v31, (uint64_t)&v29);
    v36 = 0;
    v34 = v29;
    v35 = v30;
    v21 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_19CD40918(0, v21[2] + 1, 1, v21);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v24 = &v21[5 * v23];
    v25 = v34;
    v26 = v35;
    *((_BYTE *)v24 + 64) = v36;
    *((_OWORD *)v24 + 2) = v25;
    *((_OWORD *)v24 + 3) = v26;
    v37 = v21;
    sub_19CD3F190((uint64_t)v32);
    v27._object = (void *)0x800000019D06E590;
    v27._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    *(_QWORD *)(v18 + 32) = v37;
    *(_QWORD *)&v34 = v19;
    LOBYTE(v29) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v29);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v16;
}

uint64_t sub_19CE9AA98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  uint64_t ObjectType;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  __int128 v25;
  char v26;
  _QWORD v27[4];
  _QWORD *v28;

  v6 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, a2, a1);
  v7 = sub_19CD2F714(a1, v6);
  if (v3)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v8 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    v10 = v8;
    v28 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    ObjectType = swift_getObjectType();
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(a3);
    v27[0] = ObjectType;
    sub_19CD40794((uint64_t)v27, (uint64_t)v23);
    v21 = 0u;
    v22 = 0u;
    sub_19CD40658((uint64_t)v23, (uint64_t)&v21);
    v26 = 0;
    v24 = v21;
    v25 = v22;
    v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    v16 = &v13[5 * v15];
    v17 = v24;
    v18 = v25;
    *((_BYTE *)v16 + 64) = v26;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    v28 = v13;
    sub_19CD3F190((uint64_t)v27);
    v19._object = (void *)0x800000019D06E590;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(_QWORD *)(v9 + 32) = v28;
    *(_QWORD *)&v24 = v10;
    LOBYTE(v21) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v7;
}

uint64_t sub_19CE9AD08(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  char v31;
  _QWORD v32[4];
  _QWORD *v33;

  v5 = sub_19CFDEF84();
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5, v7);
  v10 = a1;
  v11 = sub_19CFE0808();
  v12 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v11, v10);
  swift_unknownObjectRelease();

  v13 = sub_19CD2F714((uint64_t)v10, v12);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v14 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_19D0522A0;
    v16 = v14;
    v33 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v17._countAndFlagsBits = 0x69747265766E6F43;
    v17._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409C0);
    v32[0] = v5;
    sub_19CD40794((uint64_t)v32, (uint64_t)v28);
    v26 = 0u;
    v27 = 0u;
    sub_19CD40658((uint64_t)v28, (uint64_t)&v26);
    v31 = 0;
    v29 = v26;
    v30 = v27;
    v18 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_19CD40918(0, v18[2] + 1, 1, v18);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_19CD40918((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[5 * v20];
    v22 = v29;
    v23 = v30;
    *((_BYTE *)v21 + 64) = v31;
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    v33 = v18;
    sub_19CD3F190((uint64_t)v32);
    v24._object = (void *)0x800000019D06E590;
    v24._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v15 + 32) = v33;
    *(_QWORD *)&v29 = v16;
    LOBYTE(v26) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v15, (JetEngine::LogMessageLevel)&v26);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v13;
}

uint64_t sub_19CE9AFDC(uint64_t a1, uint64_t a2, SEL *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  char v28;
  _QWORD v29[4];
  _QWORD *v30;

  v9 = objc_msgSend((id)objc_opt_self(), *a3, a2, a1);
  v10 = sub_19CD2F714(a1, v9);
  if (v5)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v11 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19D0522A0;
    v13 = v11;
    v30 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v14._countAndFlagsBits = 0x69747265766E6F43;
    v14._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    v29[3] = __swift_instantiateConcreteTypeFromMangledName(a4);
    v29[0] = a5;
    sub_19CD40794((uint64_t)v29, (uint64_t)v25);
    v23 = 0u;
    v24 = 0u;
    sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
    v28 = 0;
    v26 = v23;
    v27 = v24;
    v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v26;
    v20 = v27;
    *((_BYTE *)v18 + 64) = v28;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v30 = v15;
    sub_19CD3F190((uint64_t)v29);
    v21._object = (void *)0x800000019D06E590;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v12 + 32) = v30;
    *(_QWORD *)&v26 = v13;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v10;
}

uint64_t sub_19CE9B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  __int128 v25;
  char v26;
  _QWORD v27[4];
  _QWORD *v28;

  v5 = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_inContext_, a2, a3, a1);
  v6 = sub_19CD2F714(a1, v5);
  if (v3)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v7 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_19D0522A0;
    v9 = v7;
    v28 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v10._countAndFlagsBits = 0x69747265766E6F43;
    v10._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    type metadata accessor for _NSRange(0);
    v12 = v11;
    v27[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4409A8);
    v27[0] = v12;
    sub_19CD40794((uint64_t)v27, (uint64_t)v23);
    v21 = 0u;
    v22 = 0u;
    sub_19CD40658((uint64_t)v23, (uint64_t)&v21);
    v26 = 0;
    v24 = v21;
    v25 = v22;
    v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    v16 = &v13[5 * v15];
    v17 = v24;
    v18 = v25;
    *((_BYTE *)v16 + 64) = v26;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    v28 = v13;
    sub_19CD3F190((uint64_t)v27);
    v19._object = (void *)0x800000019D06E590;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(_QWORD *)(v8 + 32) = v28;
    *(_QWORD *)&v24 = v9;
    LOBYTE(v21) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v8, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v6;
}

uint64_t sub_19CE9B4BC(uint64_t a1, SEL *a2, uint64_t (*a3)(_QWORD), uint64_t *a4, double a5, double a6)
{
  uint64_t v6;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  Swift::String v23;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  char v30;
  _QWORD v31[4];
  _QWORD *v32;

  v10 = objc_msgSend((id)objc_opt_self(), *a2, a1, a5, a6);
  v11 = sub_19CD2F714(a1, v10);
  if (v6)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v12 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v14 = v12;
    v32 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v15._countAndFlagsBits = 0x69747265766E6F43;
    v15._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v16 = a3(0);
    v31[3] = __swift_instantiateConcreteTypeFromMangledName(a4);
    v31[0] = v16;
    sub_19CD40794((uint64_t)v31, (uint64_t)v27);
    v25 = 0u;
    v26 = 0u;
    sub_19CD40658((uint64_t)v27, (uint64_t)&v25);
    v30 = 0;
    v28 = v25;
    v29 = v26;
    v17 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_19CD40918(0, v17[2] + 1, 1, v17);
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v17 = sub_19CD40918((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v17[2] = v19 + 1;
    v20 = &v17[5 * v19];
    v21 = v28;
    v22 = v29;
    *((_BYTE *)v20 + 64) = v30;
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v22;
    v32 = v17;
    sub_19CD3F190((uint64_t)v31);
    v23._object = (void *)0x800000019D06E590;
    v23._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *(_QWORD *)(v13 + 32) = v32;
    *(_QWORD *)&v28 = v14;
    LOBYTE(v25) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v25);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v11;
}

uint64_t sub_19CE9B740(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  __int128 v23;
  __int128 v24;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  char v28;
  _QWORD v29[4];
  _QWORD *v30;

  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithRect_inContext_, a1, a2, a3, a4, a5);
  v8 = sub_19CD2F714(a1, v7);
  if (v5)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v9 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_19D0522A0;
    v11 = v9;
    v30 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v12._countAndFlagsBits = 0x69747265766E6F43;
    v12._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    type metadata accessor for CGRect(0);
    v14 = v13;
    v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440998);
    v29[0] = v14;
    sub_19CD40794((uint64_t)v29, (uint64_t)v25);
    v23 = 0u;
    v24 = 0u;
    sub_19CD40658((uint64_t)v25, (uint64_t)&v23);
    v28 = 0;
    v26 = v23;
    v27 = v24;
    v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_19CD40918(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_19CD40918((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    v18 = &v15[5 * v17];
    v19 = v26;
    v20 = v27;
    *((_BYTE *)v18 + 64) = v28;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v30 = v15;
    sub_19CD3F190((uint64_t)v29);
    v21._object = (void *)0x800000019D06E590;
    v21._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(_QWORD *)(v10 + 32) = v30;
    *(_QWORD *)&v26 = v11;
    LOBYTE(v23) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v8;
}

uint64_t sub_19CE9B9D8(uint64_t a1, double a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;
  char v23;
  _QWORD v24[4];
  _QWORD *v25;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, a1, a2);
  v5 = sub_19CD2F714(a1, v4);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v6 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
    v8 = v6;
    v25 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v9._countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6E8);
    v24[0] = MEMORY[0x1E0DEB070];
    sub_19CD40794((uint64_t)v24, (uint64_t)v20);
    v18 = 0u;
    v19 = 0u;
    sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
    v23 = 0;
    v21 = v18;
    v22 = v19;
    v10 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[5 * v12];
    v14 = v21;
    v15 = v22;
    *((_BYTE *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    v25 = v10;
    sub_19CD3F190((uint64_t)v24);
    v16._object = (void *)0x800000019D06E590;
    v16._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(_QWORD *)(v7 + 32) = v25;
    *(_QWORD *)&v21 = v8;
    LOBYTE(v18) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v5;
}

uint64_t sub_19CE9BC4C(uint64_t a1, char a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;
  char v23;
  _QWORD v24[4];
  _QWORD *v25;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, a2 & 1, a1);
  v5 = sub_19CD2F714(a1, v4);
  if (v2)
  {

    if (qword_1EE43BE78 != -1)
      swift_once();
    v6 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
    v8 = v6;
    v25 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v9._countAndFlagsBits = 0x69747265766E6F43;
    v9._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43E6F0);
    v24[0] = MEMORY[0x1E0DEAFA0];
    sub_19CD40794((uint64_t)v24, (uint64_t)v20);
    v18 = 0u;
    v19 = 0u;
    sub_19CD40658((uint64_t)v20, (uint64_t)&v18);
    v23 = 0;
    v21 = v18;
    v22 = v19;
    v10 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_19CD40918(0, v10[2] + 1, 1, v10);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_19CD40918((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[5 * v12];
    v14 = v21;
    v15 = v22;
    *((_BYTE *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    v25 = v10;
    sub_19CD3F190((uint64_t)v24);
    v16._object = (void *)0x800000019D06E590;
    v16._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(_QWORD *)(v7 + 32) = v25;
    *(_QWORD *)&v21 = v8;
    LOBYTE(v18) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v18);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {

  }
  return v5;
}

__int128 *sub_19CE9BEB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  Swift::String v18;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  _QWORD v24[4];
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v30 = a3;
  v5 = MEMORY[0x1E0DEA968];
  sub_19CE9DE0C(a1, &v26);
  if (v3)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v8 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    v10 = v8;
    v25 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440990);
    v24[0] = v5;
    sub_19CD40794((uint64_t)v24, (uint64_t)v23);
    v21 = 0u;
    v22 = 0u;
    sub_19CD40658((uint64_t)v23, (uint64_t)&v21);
    LOBYTE(v28) = 0;
    v26 = v21;
    v27 = v22;
    v12 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_19CD40918(0, v12[2] + 1, 1, v12);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_19CD40918((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12[2] = v14 + 1;
    v15 = &v12[5 * v14];
    v16 = v26;
    v17 = v27;
    *((_BYTE *)v15 + 64) = v28;
    *((_OWORD *)v15 + 2) = v16;
    *((_OWORD *)v15 + 3) = v17;
    v25 = v12;
    sub_19CD3F190((uint64_t)v24);
    v18._object = (void *)0x800000019D06E590;
    v18._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    *(_QWORD *)(v9 + 32) = v25;
    *(_QWORD *)&v26 = v10;
    LOBYTE(v21) = 1;
    v20 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v21);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v6 = *((_QWORD *)&v27 + 1);
    v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    v20 = (__int128 *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v20;
}

__int128 *sub_19CE9C12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  uint64_t DynamicType;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  Swift::String v19;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[32];
  _QWORD v25[4];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;

  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 8))(&v26, a1, a3, a4);
  if (v4)
  {
    if (qword_1EE43BE78 != -1)
      swift_once();
    v8 = (void *)qword_1EE43BE68;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19D0522A0;
    v10 = v8;
    v29 = sub_19CD40918(0, 82, 0, MEMORY[0x1E0DEE9D8]);
    v11._countAndFlagsBits = 0x69747265766E6F43;
    v11._object = (void *)0xEC0000003C20676ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    DynamicType = swift_getDynamicType();
    v25[3] = swift_getMetatypeMetadata();
    v25[0] = DynamicType;
    sub_19CD40794((uint64_t)v25, (uint64_t)v24);
    v22 = 0u;
    v23 = 0u;
    sub_19CD40658((uint64_t)v24, (uint64_t)&v22);
    LOBYTE(v28) = 0;
    v26 = v22;
    v27 = v23;
    v13 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_19CD40918(0, v13[2] + 1, 1, v13);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    v16 = &v13[5 * v15];
    v17 = v26;
    v18 = v27;
    *((_BYTE *)v16 + 64) = v28;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = v18;
    v29 = v13;
    sub_19CD3F190((uint64_t)v25);
    v19._object = (void *)0x800000019D06E590;
    v19._countAndFlagsBits = 0xD000000000000045;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    *(_QWORD *)(v9 + 32) = v29;
    *(_QWORD *)&v26 = v10;
    LOBYTE(v22) = 1;
    v21 = &v26;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v9, (JetEngine::LogMessageLevel)&v22);

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v6 = *((_QWORD *)&v27 + 1);
    v7 = v28;
    __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
    v21 = (__int128 *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  }
  return v21;
}

uint64_t CustomJSValueConvertible<>.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  OpaqueJSString *v33;
  uint64_t result;
  JSValueRef v35;
  id v36;
  unint64_t v37;
  _QWORD *v38;
  OpaqueJSString *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char string[8];
  uint64_t v50;
  unint64_t v51;

  v48 = a3;
  v45 = a1;
  v46 = a2;
  v43 = a4;
  v4 = sub_19CFDF5CC();
  MEMORY[0x1E0C80A78](v4, v5);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_19CFDE990();
  v7 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47, v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_19CFDE960();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19CFDE96C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDE9C0();
  swift_allocObject();
  sub_19CFDE9B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v20, *MEMORY[0x1E0CAE140], v16);
  sub_19CFDE984();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0CAE128], v11);
  sub_19CFDE978();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0CAE188], v47);
  sub_19CFDE99C();
  v21 = v51;
  v22 = sub_19CFDE9A8();
  if (!v21)
  {
    v24 = v22;
    v25 = v23;
    v26 = v45;
    sub_19CFDF5B4();
    v51 = v25;
    v27 = sub_19CFDF590();
    if (v28)
    {
      v29 = v28;
      if ((v28 & 0x1000000000000000) != 0 || !(v28 & 0x2000000000000000 | v27 & 0x1000000000000000))
      {
        sub_19CFE0100();
        v33 = *(OpaqueJSString **)string;
      }
      else
      {
        MEMORY[0x1E0C80A78](v27, v28);
        *(&v42 - 2) = (uint64_t)sub_19CCC2170;
        *(&v42 - 1) = 0;
        if ((v29 & 0x2000000000000000) != 0)
        {
          *(_QWORD *)string = v30;
          v50 = v29 & 0xFFFFFFFFFFFFFFLL;
          result = (uint64_t)JSStringCreateWithUTF8CString(string);
          if (!result)
          {
            __break(1u);
            return result;
          }
          v33 = (OpaqueJSString *)result;
        }
        else
        {
          if ((v30 & 0x1000000000000000) != 0)
          {
            v31 = (v29 & 0xFFFFFFFFFFFFFFFLL) + 32;
            v32 = v30 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            v31 = sub_19CFE01FC();
          }
          v33 = (OpaqueJSString *)sub_19CF2C980(v31, v32, (uint64_t (*)(void))sub_19CE1FCA0);
        }
      }
      v35 = JSValueMakeFromJSONString((JSContextRef)objc_msgSend(v26, sel_JSGlobalContextRef), v33);
      if (v35)
      {
        v36 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, v35, v26);
        JSStringRelease(v33);
        swift_bridgeObjectRelease();
        if (v36)
        {
          v37 = sub_19CD15680();
          v38 = v43;
          v43[3] = v37;
          v38[4] = &protocol witness table for JSValue;
          sub_19CD3BE18(v24, v51);
          result = swift_release();
          *v38 = v36;
          return result;
        }
      }
      else
      {
        JSStringRelease(v33);
        swift_bridgeObjectRelease();
      }
    }
    *(_QWORD *)string = 0;
    v50 = 0xE000000000000000;
    sub_19CFE010C();
    sub_19CFDF698();
    sub_19CFE0670();
    sub_19CFDF698();
    v39 = *(OpaqueJSString **)string;
    v40 = v50;
    sub_19CDC98D8();
    swift_allocError();
    *(_QWORD *)v41 = v39;
    *(_QWORD *)(v41 + 8) = v40;
    *(_QWORD *)(v41 + 16) = 0;
    *(_BYTE *)(v41 + 24) = 1;
    *(_QWORD *)(v41 + 32) = 0;
    *(_BYTE *)(v41 + 40) = 1;
    *(_OWORD *)(v41 + 48) = 0u;
    *(_OWORD *)(v41 + 64) = 0u;
    *(_OWORD *)(v41 + 80) = 0u;
    *(_QWORD *)(v41 + 96) = 0;
    swift_willThrow();
    sub_19CD3BE18(v24, v51);
  }
  return swift_release();
}

uint64_t AnyCustomJSValueConvertible.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *boxed_opaque_existential_2Tm;

  a4[3] = a2;
  a4[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_2Tm, a1, a2);
}

uint64_t AnyCustomJSValueConvertible.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19CCD5B84(v1, a1);
}

uint64_t AnyCustomJSValueConvertible.jsRepresentation(in:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyCustomJSValueConvertible._jsValue(in:)(JSContext in)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (JSValue)(*(uint64_t (**)(Class, uint64_t, uint64_t))(v4 + 16))(in.super.isa, v3, v4);
}

JSValue __swiftcall AnyCustomJSValueConvertible.makeValue(in:)(JSContext in)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (JSValue)(*(uint64_t (**)(Class, uint64_t, uint64_t))(v4 + 24))(in.super.isa, v3, v4);
}

uint64_t AnyCustomJSValueConvertible.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D128);
  sub_19CFE02E0();
  return 0;
}

uint64_t sub_19CE9C9B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_19CE9CA14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_19CE9CA70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t sub_19CE9CABC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D128);
  sub_19CFE02E0();
  return 0;
}

unint64_t JSCalculatedValue.jsRepresentation(in:)@<X0>(unint64_t *a1@<X8>)
{
  uint64_t (**v1)(void);
  uint64_t v2;
  unint64_t result;
  unint64_t v5;

  result = (*v1)();
  if (!v2)
  {
    v5 = result;
    result = sub_19CD15680();
    a1[3] = result;
    a1[4] = (unint64_t)&protocol witness table for JSValue;
    *a1 = v5;
  }
  return result;
}

unint64_t sub_19CE9CB60@<X0>(unint64_t *a1@<X8>)
{
  uint64_t (**v1)(void);
  uint64_t v2;
  unint64_t result;
  unint64_t v5;

  result = (*v1)();
  if (!v2)
  {
    v5 = result;
    result = sub_19CD15680();
    a1[3] = result;
    a1[4] = (unint64_t)&protocol witness table for JSValue;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_19CE9CBB4(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE98B54(a1, *v1, v1[1], (uint64_t (*)(void))sub_19CE9A34C);
}

void JSValue.init(jsConvertible:in:)(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 16))(a2, v5, v6);
  if (v2
    || (v8 = (void *)v7,
        v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithObject_inContext_, v7, a2),
        v8,
        v9))
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
}

id JSValue.jsRepresentation(in:)@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  a1[3] = sub_19CD15680();
  a1[4] = &protocol witness table for JSValue;
  *a1 = v1;
  return v1;
}

JSValue __swiftcall JSValue.makeValue(in:)(JSContext in)
{
  void *v1;

  return (JSValue)v1;
}

id sub_19CE9CCD8@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  void **v2;
  void *v5;

  v5 = *v2;
  a2[3] = sub_19CD15680();
  a2[4] = a1;
  *a2 = v5;
  return v5;
}

id sub_19CE9CD20()
{
  id *v0;

  return *v0;
}

unint64_t Array<A>.jsRepresentation(in:)@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;
  unint64_t v18;

  v18 = a2;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  v8 = sub_19CFDF938();
  v9 = (char *)sub_19CD15680();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  v11 = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0DEAF50], v8);
  result = sub_19CE974CC((void (*)(char *, char *))sub_19CE9E53C, (uint64_t)v16, v8, v9, v10, v11, MEMORY[0x1E0DEDB38], (uint64_t)&v17);
  if (!v5)
  {
    v18 = result;
    v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CD80);
    v14 = sub_19CFE0808();
    v15 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v14, v13);
    swift_unknownObjectRelease();

    a5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
    result = sub_19CCE2634();
    a5[4] = result;
    *a5 = v15;
  }
  return result;
}

unint64_t sub_19CE9CE74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t *v4;

  return Array<A>.jsRepresentation(in:)(a1, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

unint64_t Dictionary<>.jsRepresentation(in:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  id v6;
  uint64_t v7;
  id v8;

  sub_19CD15680();
  result = sub_19CFDF44C();
  if (!v2)
  {
    v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAA0);
    v7 = sub_19CFE0808();
    v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, v6);
    swift_unknownObjectRelease();

    a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
    result = sub_19CCE2634();
    a2[4] = result;
    *a2 = v8;
  }
  return result;
}

unint64_t sub_19CE9CFA4@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return Dictionary<>.jsRepresentation(in:)(a1, a2);
}

unint64_t Bool.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, a2 & 1, a1);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a3[4] = result;
  *a3 = v4;
  return result;
}

unint64_t sub_19CE9D044@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, *v2, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19CE9D0C0(uint64_t a1)
{
  unsigned __int8 *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithBool_inContext_, *v1, a1);
  v4 = sub_19CD2F714(a1, v3);

  return v4;
}

uint64_t sub_19CE9D13C(uint64_t a1)
{
  char *v1;

  return sub_19CE98A6C(a1, *v1);
}

unint64_t Date.jsRepresentation(in:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t result;
  uint64_t v15;

  v3 = v2;
  v6 = sub_19CFDEF84();
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v6, v8);
  v11 = a1;
  v12 = sub_19CFE0808();
  v13 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v12, v11);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v13;
  return result;
}

unint64_t sub_19CE9D23C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t result;
  uint64_t v13;

  v3 = v2;
  v6 = MEMORY[0x1E0C80A78](a1, v3);
  (*(void (**)(char *, double))(v8 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v9 = a1;
  v10 = sub_19CFE0808();
  v11 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v10, v9);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v11;
  return result;
}

uint64_t sub_19CE9D328(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = MEMORY[0x1E0C80A78](a1, v2);
  (*(void (**)(char *, double))(v6 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v7 = a1;
  v8 = sub_19CFE0808();
  v9 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v8, v7);
  swift_unknownObjectRelease();

  v10 = sub_19CD2F714((uint64_t)v7, v9);
  return v10;
}

unint64_t Double.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, a1, a3);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

unint64_t sub_19CE9D494@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, a1, *v2);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19CE9D518(uint64_t a1)
{
  double *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithDouble_inContext_, a1, *v1);
  v4 = sub_19CD2F714(a1, v3);

  return v4;
}

uint64_t sub_19CE9D59C(uint64_t a1)
{
  double *v1;

  return sub_19CE98984(a1, *v1);
}

unint64_t Int32.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CE9DFA0(a1, a2, (SEL *)&selRef_valueWithInt32_inContext_, a3);
}

unint64_t sub_19CE9D5C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE9E040(a1, (SEL *)&selRef_valueWithInt32_inContext_, a2);
}

uint64_t sub_19CE9D5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE9E0E0(a1, a2, a3, (SEL *)&selRef_valueWithInt32_inContext_);
}

uint64_t sub_19CE9D5F8(uint64_t a1)
{
  unsigned int *v1;

  return sub_19CE986CC(a1, *v1, (SEL *)&selRef_valueWithInt32_inContext_, &qword_1EE4409B8, MEMORY[0x1E0DEDBC8]);
}

unint64_t NSNull.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithNullInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v3;
  return result;
}

unint64_t sub_19CE9D69C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithNullInContext_, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v3;
  return result;
}

unint64_t CGPoint.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  return sub_19CE9D964(a1, (SEL *)&selRef_valueWithPoint_inContext_, a2, a3, a4);
}

unint64_t sub_19CE9D72C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE9DA0C(a1, (SEL *)&selRef_valueWithPoint_inContext_, a2);
}

uint64_t sub_19CE9D748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE9DAB0(a1, a2, a3, (SEL *)&selRef_valueWithPoint_inContext_);
}

uint64_t sub_19CE9D764(uint64_t a1)
{
  double *v1;

  return sub_19CE987B4(a1, (SEL *)&selRef_valueWithPoint_inContext_, (uint64_t (*)(_QWORD))type metadata accessor for CGPoint, &qword_1EE4409B0, *v1, v1[1]);
}

unint64_t _NSRange.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v5;
  unint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_inContext_, a2, a3, a1);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a4[4] = result;
  *a4 = v5;
  return result;
}

unint64_t sub_19CE9D820@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_inContext_, *v2, v2[1], a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19CE9D8A8(uint64_t a1)
{
  _QWORD *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_inContext_, *v1, v1[1], a1);
  v4 = sub_19CD2F714(a1, v3);

  return v4;
}

uint64_t sub_19CE9D928(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE98B54(a1, *v1, v1[1], (uint64_t (*)(void))sub_19CE9B244);
}

unint64_t CGSize.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  return sub_19CE9D964(a1, (SEL *)&selRef_valueWithSize_inContext_, a2, a3, a4);
}

unint64_t sub_19CE9D964@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v6;
  unint64_t result;

  v6 = objc_msgSend((id)objc_opt_self(), *a2, a1, a4, a5);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a3[4] = result;
  *a3 = v6;
  return result;
}

unint64_t sub_19CE9D9F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE9DA0C(a1, (SEL *)&selRef_valueWithSize_inContext_, a2);
}

unint64_t sub_19CE9DA0C@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  double *v3;
  id v5;
  unint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), *a2, a1, *v3, v3[1]);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a3[4] = result;
  *a3 = v5;
  return result;
}

uint64_t sub_19CE9DA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE9DAB0(a1, a2, a3, (SEL *)&selRef_valueWithSize_inContext_);
}

uint64_t sub_19CE9DAB0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  double *v4;
  id v6;
  uint64_t v7;

  v6 = objc_msgSend((id)objc_opt_self(), *a4, a1, *v4, v4[1]);
  v7 = sub_19CD2F714(a1, v6);

  return v7;
}

uint64_t sub_19CE9DB38(uint64_t a1)
{
  double *v1;

  return sub_19CE987B4(a1, (SEL *)&selRef_valueWithSize_inContext_, (uint64_t (*)(_QWORD))type metadata accessor for CGSize, &qword_1EE4409A0, *v1, v1[1]);
}

unint64_t CGRect.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  id v7;
  unint64_t result;

  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithRect_inContext_, a1, a3, a4, a5, a6);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v7;
  return result;
}

unint64_t sub_19CE9DC0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithRect_inContext_, a1, *v2, v2[1], v2[2], v2[3]);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19CE9DCA8(uint64_t a1)
{
  double *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithRect_inContext_, a1, *v1, v1[1], v1[2], v1[3]);
  v4 = sub_19CD2F714(a1, v3);

  return v4;
}

uint64_t sub_19CE9DD44(uint64_t a1)
{
  double *v1;

  return sub_19CE9889C(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t String.jsRepresentation(in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v6;
  uint64_t v7;
  id v8;
  unint64_t result;

  swift_bridgeObjectRetain();
  v6 = a1;
  v7 = sub_19CFE0808();
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v7, v6, a2, a3);
  swift_unknownObjectRelease();

  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a4[4] = result;
  *a4 = v8;
  return result;
}

unint64_t sub_19CE9DE0C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  id v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;

  v9 = *v2;
  v10 = v2[1];
  swift_bridgeObjectRetain();
  v5 = a1;
  v6 = sub_19CFE0808();
  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v6, v5, v9, v10);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v7;
  return result;
}

uint64_t *sub_19CE9DEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *v3;
  v6 = &v13;
  (*(void (**)(_QWORD *__return_ptr))(a3 + 8))(v10);
  if (!v4)
  {
    v7 = v11;
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  return v6;
}

uint64_t sub_19CE9DF64(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE98B54(a1, *v1, v1[1], (uint64_t (*)(void))sub_19CE9BEB8);
}

unint64_t UInt32.jsRepresentation(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_19CE9DFA0(a1, a2, (SEL *)&selRef_valueWithUInt32_inContext_, a3);
}

unint64_t sub_19CE9DFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X2>, _QWORD *a4@<X8>)
{
  id v5;
  unint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), *a3, a2, a1);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a4[4] = result;
  *a4 = v5;
  return result;
}

unint64_t sub_19CE9E024@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_19CE9E040(a1, (SEL *)&selRef_valueWithUInt32_inContext_, a2);
}

unint64_t sub_19CE9E040@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  unsigned int *v3;
  id v5;
  unint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), *a2, *v3, a1);
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a3[4] = result;
  *a3 = v5;
  return result;
}

uint64_t sub_19CE9E0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CE9E0E0(a1, a2, a3, (SEL *)&selRef_valueWithUInt32_inContext_);
}

uint64_t sub_19CE9E0E0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  unsigned int *v4;
  id v6;
  uint64_t v7;

  v6 = objc_msgSend((id)objc_opt_self(), *a4, *v4, a1);
  v7 = sub_19CD2F714(a1, v6);

  return v7;
}

uint64_t sub_19CE9E15C(uint64_t a1)
{
  unsigned int *v1;

  return sub_19CE986CC(a1, *v1, (SEL *)&selRef_valueWithUInt32_inContext_, &qword_1EE440988, MEMORY[0x1E0DEE0F8]);
}

id sub_19CE9E18C(void *a1)
{
  return sub_19CE977C0(a1);
}

uint64_t sub_19CE9E1A4(uint64_t a1)
{
  return sub_19CD00CE8(a1, (uint64_t (*)(_QWORD))type metadata accessor for JSCookieProviderObject, &OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider);
}

uint64_t sub_19CE9E1C8(uint64_t a1)
{
  return sub_19CE984F4(a1, (uint64_t (*)(_QWORD))type metadata accessor for JSCookieProviderObject, &OBJC_IVAR____TtC9JetEngine22JSCookieProviderObject_accountProvider, &qword_1EE440978, (uint64_t)&type metadata for CookieProvider);
}

uint64_t sub_19CE9E1FC(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE4408F0);
}

uint64_t sub_19CE9E224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CD2FE10(a1, a2, a3, (void (*)(_QWORD *__return_ptr))sub_19CEEF130);
}

__int128 *sub_19CE9E240(uint64_t a1)
{
  return sub_19CE97E74(a1, (void (*)(__int128 *__return_ptr))sub_19CEEF130, (uint64_t (*)(_QWORD))type metadata accessor for JSCookie, &qword_1EE440918);
}

uint64_t sub_19CE9E26C(uint64_t a1)
{
  return sub_19CE97908(a1);
}

uint64_t sub_19CE9E28C(uint64_t a1)
{
  return sub_19CE9831C(a1, (uint64_t (*)(void))sub_19CE99D90);
}

uint64_t sub_19CE9E2B4(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440920);
}

uint64_t sub_19CE9E2DC(void *a1)
{
  const void *v1;
  _BYTE __dst[344];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_19CE97A00(a1);
}

uint64_t sub_19CE9E32C(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440928);
}

uint64_t sub_19CE9E354(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440930);
}

uint64_t sub_19CE9E37C(uint64_t a1)
{
  return sub_19CE984F4(a1, (uint64_t (*)(_QWORD))type metadata accessor for JSNetObject, &OBJC_IVAR____TtC9JetEngineP33_E3DD9B86F26A226B87DD24EC834542AC11JSNetObject_guts, &qword_1EE440968, (uint64_t)&type metadata for Net);
}

uint64_t sub_19CE9E3B0(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440900);
}

uint64_t sub_19CE9E3D8(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE4408E8);
}

uint64_t sub_19CE9E400(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440938);
}

uint64_t sub_19CE9E428(uint64_t a1)
{
  uint64_t *v1;

  return sub_19CE98058(a1, *v1, (uint64_t (*)(void))sub_19CE99874);
}

uint64_t sub_19CE9E448(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440908);
}

uint64_t sub_19CE9E470(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440940);
}

unint64_t sub_19CE9E498@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, *v2, a1);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
  result = sub_19CCE2634();
  a2[4] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_19CE9E514(uint64_t a1)
{
  return sub_19CE9822C(a1, &qword_1EE440948);
}

uint64_t sub_19CE9E53C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2[3] + 16))(v2[4], v2[2]);
  if (v3)
    *a1 = v3;
  else
    *a2 = result;
  return result;
}

uint64_t sub_19CE9E590@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v1[3] + 16))(v1[4], v1[2]);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t dispatch thunk of CustomJSValueConvertible.jsRepresentation(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CustomJSValueConvertible._jsValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CustomJSValueConvertible.makeValue(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for AnyCustomJSValueConvertible()
{
  return &type metadata for AnyCustomJSValueConvertible;
}

ValueMetadata *type metadata accessor for JSCalculatedValue()
{
  return &type metadata for JSCalculatedValue;
}

void sub_19CE9E624(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  BOOL v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  _UNKNOWN **v27;
  id v28;
  uint64_t (*v29)(id, uint64_t, _UNKNOWN **);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  _UNKNOWN **v48;
  uint64_t v49;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAB0);
  v5 = sub_19CFE03A0();
  v6 = 0;
  v39 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v36 = v8;
  v37 = (unint64_t)(v10 + 63) >> 6;
  v38 = v5 + 64;
  v41 = (_QWORD *)v5;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v49 = v3;
  v42 = (v12 - 1) & v12;
  v43 = v6;
  for (i = __clz(__rbit64(v12)) | (v6 << 6); ; i = __clz(__rbit64(v16)) + (v15 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * i);
    v19 = v18[1];
    v44 = *v18;
    v20 = (_QWORD *)(*(_QWORD *)(v39 + 56) + 16 * i);
    v21 = v20[1];
    v46[0] = *v20;
    v46[1] = v21;
    swift_bridgeObjectRetain_n();
    v45 = v19;
    swift_bridgeObjectRetain();
    v22 = a2;
    v23 = sub_19CFE0808();
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v24, sel_valueWithObject_inContext_, v23, v22);
    swift_unknownObjectRelease();

    if (v25)
    {
      v26 = sub_19CD15680();
      v47 = v26;
      v27 = &protocol witness table for JSValue;
      v28 = v25;
    }
    else
    {
      v28 = objc_msgSend(v24, sel_valueWithUndefinedInContext_, v22);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
      v47 = v26;
      v27 = (_UNKNOWN **)sub_19CCE2634();
    }
    v48 = v27;
    v46[0] = v28;
    __swift_project_boxed_opaque_existential_1(v46, v26);
    v29 = (uint64_t (*)(id, uint64_t, _UNKNOWN **))v27[2];
    v30 = v25;
    v31 = v49;
    v32 = v29(v22, v26, v27);
    v3 = v31;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    swift_bridgeObjectRelease();
    if (v31)
    {
      swift_bridgeObjectRelease();
      swift_release();

      return;
    }

    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v33 = (_QWORD *)(v41[6] + 16 * i);
    *v33 = v44;
    v33[1] = v45;
    *(_QWORD *)(v41[7] + 8 * i) = v32;
    v34 = v41[2];
    v14 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v14)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v41[2] = v35;
    v12 = v42;
    v6 = v43;
    if (v42)
      goto LABEL_4;
LABEL_5:
    v14 = __OFADD__(v6, 1);
    v15 = v6 + 1;
    if (v14)
      goto LABEL_30;
    if (v15 >= v37)
      return;
    v16 = *(_QWORD *)(v36 + 8 * v15);
    if (!v16)
      break;
LABEL_15:
    v49 = v3;
    v42 = (v16 - 1) & v16;
    v43 = v15;
  }
  v17 = v15 + 1;
  if (v15 + 1 >= v37)
    return;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v15 + 2;
  if (v15 + 2 >= v37)
    return;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v15 + 3;
  if (v15 + 3 >= v37)
    return;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
  {
LABEL_14:
    v15 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v37)
      return;
    v16 = *(_QWORD *)(v36 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_15;
  }
LABEL_31:
  __break(1u);
}

void sub_19CE9E988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t i;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _UNKNOWN **v24;
  id v25;
  void *v26;
  uint64_t (*v27)(uint64_t, uint64_t, _UNKNOWN **);
  id v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CAB0);
  v6 = sub_19CFE03A0();
  v7 = 0;
  v37 = a1;
  v38 = (_QWORD *)v6;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v34 = v9;
  v35 = (unint64_t)(v11 + 63) >> 6;
  v36 = v6 + 64;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v15 = (v13 - 1) & v13;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v39 = v15;
    v40 = v7;
    v20 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * i);
    v21 = v20[1];
    v41 = *v20;
    v22 = *(void **)(*(_QWORD *)(v37 + 56) + 8 * i);
    v45 = v3;
    if (v22)
    {
      v23 = sub_19CD15680();
      v24 = &protocol witness table for JSValue;
      v43 = v23;
      v44 = &protocol witness table for JSValue;
      swift_bridgeObjectRetain();
      v25 = v22;
    }
    else
    {
      v26 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v25 = objc_msgSend(v26, sel_valueWithUndefinedInContext_, a2);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE437298);
      v43 = v23;
      v24 = (_UNKNOWN **)sub_19CCE2634();
      v44 = v24;
    }
    v42[0] = v25;
    __swift_project_boxed_opaque_existential_1(v42, v23);
    v27 = (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))v24[2];
    v28 = v22;
    v29 = v45;
    v30 = v27(a2, v23, v24);
    v3 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);

    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v31 = (_QWORD *)(v38[6] + 16 * i);
    *v31 = v41;
    v31[1] = v21;
    *(_QWORD *)(v38[7] + 8 * i) = v30;
    v32 = v38[2];
    v17 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v17)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v38[2] = v33;
    v13 = v39;
    v7 = v40;
    if (v39)
      goto LABEL_4;
LABEL_5:
    v17 = __OFADD__(v7++, 1);
    if (v17)
      goto LABEL_30;
    if (v7 >= v35)
      return;
    v18 = *(_QWORD *)(v34 + 8 * v7);
    if (!v18)
      break;
LABEL_15:
    v15 = (v18 - 1) & v18;
  }
  v19 = v7 + 1;
  if (v7 + 1 >= v35)
    return;
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 2;
  if (v7 + 2 >= v35)
    return;
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 3;
  if (v7 + 3 >= v35)
    return;
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
  {
LABEL_14:
    v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v35)
      return;
    v18 = *(_QWORD *)(v34 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_15;
  }
LABEL_31:
  __break(1u);
}

uint64_t MetricsFieldsContext.impressionsTracker.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_bridgeObjectRetain();
  v2 = sub_19CDF2194(0xD000000000000026, 0x800000019D06F290, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MetricsFieldsContext.containsValue<A>(forProperty:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v2 = *v1;
  if (!*(_QWORD *)(v2 + 16))
  {
    v9 = 0u;
    v10 = 0u;
    goto LABEL_7;
  }
  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  v5 = sub_19CD3FD1C(v4, v3);
  if ((v6 & 1) == 0)
  {
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_19CD436B0(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  v7 = 1;
LABEL_8:
  sub_19CD3F190((uint64_t)&v9);
  return v7;
}

uint64_t MetricsFieldsContext.Property.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsFieldsContext.Property.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MetricsFieldsContext.Property.key.modify())()
{
  return nullsub_1;
}

uint64_t static MetricsFieldsContext.Property.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_19CFE06A0();
}

uint64_t MetricsFieldsContext.removeValue<A>(forProperty:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_19CD143A0(v1, v2, v4);
  swift_bridgeObjectRelease();
  return sub_19CD3F190((uint64_t)v4);
}

uint64_t MetricsFieldsContext.removingValue<A>(forProperty:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  v5 = a1[1];
  *a2 = *v2;
  v7[0] = v4;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return MetricsFieldsContext.removeValue<A>(forProperty:)(v7);
}

Swift::Void __swiftcall MetricsFieldsContext.removeAll()()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  *v0 = MEMORY[0x1E0DEE9E0];
}

JetEngine::MetricsFieldsContext __swiftcall MetricsFieldsContext.removingAll()()
{
  _QWORD *v0;
  JetEngine::MetricsFieldsContext result;

  *v0 = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t static MetricsFieldsContext.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  _QWORD v6[3];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v5[3] = v7;
  v6[0] = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v2) = _isStructurallyEqual(_:to:with:at:)(v6, v5, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v2 & 1;
}

uint64_t sub_19CE9EF74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  _QWORD v6[3];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2B70);
  v5[3] = v7;
  v6[0] = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v2) = _isStructurallyEqual(_:to:with:at:)(v6, v5, 3uLL, 0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v2 & 1;
}

void static MetricsFieldsContext.Property<A>.metricsIdentifierActiveITunesAccountRequired.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000040;
  a1[1] = 0x800000019D073520;
}

void static MetricsFieldsContext.Property<A>.clickLocationTracker.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000028;
  a1[1] = 0x800000019D073570;
}

void static MetricsFieldsContext.Property<A>.clickLocationUniqueID.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x800000019D0735A0;
}

void static MetricsFieldsContext.Property<A>.impressionsParentContextID.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000002ELL;
  a1[1] = 0x800000019D0735D0;
}

void static MetricsFieldsContext.Property<A>.topic.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x800000019D06DEC0;
}

void static MetricsFieldsContext.Property<A>.pageRenderOmitsClientId.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019D070950;
}

void static MetricsFieldsContext.Property<A>.enableRequirements.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000019D06F2C0;
}

void static MetricsFieldsContext.customMetrics.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x800000019D070730;
}

void static MetricsFieldsContext.metricsIdentifierDomain.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019D073480;
}

void static MetricsFieldsContext.metricsIdentifierKeys.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x800000019D0734B0;
}

void static MetricsFieldsContext.metricsIdentifierResetInterval.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000032;
  a1[1] = 0x800000019D0734E0;
}

void static MetricsFieldsContext.impressionsTracker.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000019D06F290;
}

uint64_t MonotonicTimeReference.date(from:)()
{
  type metadata accessor for MonotonicTimeReference();
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return sub_19CFDEF24();
}

uint64_t MonotonicTimeReference.init(date:time:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  v5 = *a2;
  v6 = a2[1];
  v7 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  result = type metadata accessor for MonotonicTimeReference();
  v9 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v9 = v5;
  v9[1] = v6;
  return result;
}

uint64_t MonotonicTimeReference.referenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

__n128 MonotonicTimeReference.referenceTime.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  *a1 = result;
  return result;
}

double static MonotonicTimeReference.+ infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;

  sub_19CFDEF24();
  v6 = type metadata accessor for MonotonicTimeReference();
  v7 = (uint64_t *)(a1 + *(int *)(v6 + 20));
  v8 = *v7;
  v9 = v7[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1ECEB2D50 + (double)v8 + a3);
  result = *(double *)&v11;
  *(_OWORD *)(a2 + *(int *)(v6 + 20)) = v11;
  return result;
}

uint64_t static MonotonicTimeReference.+= infix(_:_:)(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v4 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF24();
  v8 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  v9 = *v8;
  v10 = v8[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v10 / *(double *)&qword_1ECEB2D50 + (double)v9 + a2);
  *(_OWORD *)&v7[*(int *)(v4 + 20)] = v12;
  sub_19CD17A60(a1);
  return sub_19CD513F8((uint64_t)v7, a1);
}

double static MonotonicTimeReference.- infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;

  sub_19CFDEF30();
  v6 = type metadata accessor for MonotonicTimeReference();
  v7 = (uint64_t *)(a1 + *(int *)(v6 + 20));
  v8 = *v7;
  v9 = v7[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v9 / *(double *)&qword_1ECEB2D50 + (double)v8 - a3);
  result = *(double *)&v11;
  *(_OWORD *)(a2 + *(int *)(v6 + 20)) = v11;
  return result;
}

uint64_t static MonotonicTimeReference.-= infix(_:_:)(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v4 = type metadata accessor for MonotonicTimeReference();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF30();
  v8 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  v9 = *v8;
  v10 = v8[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)((double)v10 / *(double *)&qword_1ECEB2D50 + (double)v9 - a2);
  *(_OWORD *)&v7[*(int *)(v4 + 20)] = v12;
  sub_19CD17A60(a1);
  return sub_19CD513F8((uint64_t)v7, a1);
}

Swift::Int MonotonicTimeReference.time(from:)()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  sub_19CFDEEF4();
  v2 = v1;
  v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  v4 = *v3;
  v5 = v3[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  return MonotonicTime.init(timeInterval:)(v2 + (double)v5 / *(double *)&qword_1ECEB2D50 + (double)v4).seconds;
}

JetEngine::MonotonicTime __swiftcall MonotonicTimeReference.time(fromIntervalSince1970:)(Swift::Double fromIntervalSince1970)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  JetEngine::MonotonicTime result;
  uint64_t v16;

  v2 = v1;
  v3 = sub_19CFDEF84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFDEF3C();
  sub_19CFDEEF4();
  v9 = v8;
  v10 = (uint64_t *)(v2 + *(int *)(type metadata accessor for MonotonicTimeReference() + 20));
  v11 = *v10;
  v12 = v10[1];
  if (qword_1ECEB2F88 != -1)
    swift_once();
  MonotonicTime.init(timeInterval:)(v9 + (double)v12 / *(double *)&qword_1ECEB2D50 + (double)v11);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  result.nanoseconds = v14;
  result.seconds = v13;
  return result;
}

BOOL static MonotonicTimeReference.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  if ((sub_19CFDEF54() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for MonotonicTimeReference() + 20);
  v6 = *(_QWORD *)(a1 + v4);
  v5 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (uint64_t *)(a2 + v4);
  v9 = *v7;
  v8 = v7[1];
  return v6 == v9 && v5 == v8;
}

BOOL sub_19CE9F840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if ((sub_19CFDEF54() & 1) == 0)
    return 0;
  v6 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v6);
  v7 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (uint64_t *)(a2 + v6);
  v11 = *v9;
  v10 = v9[1];
  return v8 == v11 && v7 == v10;
}

uint64_t *initializeBufferWithCopyOfBuffer for MonotonicTimeReference(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_19CFDEF84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for MonotonicTimeReference(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for MonotonicTimeReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_19CFDEF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for MonotonicTimeReference()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE9FAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MonotonicTimeReference()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19CE9FB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_19CFDEF84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_19CE9FB6C(uint64_t a1)
{
  return sub_19CE9FB90(a1);
}

uint64_t sub_19CE9FB90(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 192) + 16);
  os_unfair_lock_lock(v2);
  sub_19CE4601C((_QWORD *(*)(_QWORD *__return_ptr))sub_19CEA0728, &v6);
  os_unfair_lock_unlock(v2);
  v3 = v6;

  return v3;
}

Swift::String __swiftcall Localizer.integer(for:in:)(Swift::Int a1, JetEngine::LocalizerContext in)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  char v14;

  v4 = v3;
  v5 = v2;
  v6 = *(_BYTE *)in;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v14 = v6;
  v8 = (*(uint64_t (**)(id, _QWORD, uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t))(v4 + 64))(v7, 0, 1, 0, 0, &v14, v5, v4);
  v10 = v9;

  v11 = v8;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

BOOL static LocalizerLookupStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LocalizerLookupStrategy.hash(into:)()
{
  return sub_19CFE08D4();
}

uint64_t LocalizerLookupStrategy.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFE08D4();
  return sub_19CFE0910();
}

JetEngine::LocalizerContext_optional __swiftcall LocalizerContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  JetEngine::LocalizerContext_optional result;
  char v5;

  v2 = v1;
  v3 = sub_19CFE0424();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LocalizerContext.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CE9FDF0 + 4 * byte_19D05C2B0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_19CE9FDF0()
{
  return 0x63696D616E7964;
}

uint64_t sub_19CE9FE04()
{
  return 0x6F6C61646E617473;
}

uint64_t sub_19CE9FE20()
{
  return 0x6D6574497473696CLL;
}

unint64_t sub_19CE9FE38()
{
  return 0xD000000000000013;
}

unint64_t sub_19CE9FE58()
{
  return 0xD000000000000010;
}

void sub_19CE9FE74(char *a1)
{
  sub_19CE8196C(*a1);
}

void sub_19CE9FE80()
{
  char *v0;

  sub_19CF98A3C(*v0);
}

void sub_19CE9FE88(uint64_t a1)
{
  char *v1;

  sub_19CE115AC(a1, *v1);
}

void sub_19CE9FE90(uint64_t a1)
{
  char *v1;

  sub_19CE11948(a1, *v1);
}

JetEngine::LocalizerContext_optional sub_19CE9FE98(Swift::String *a1)
{
  return LocalizerContext.init(rawValue:)(*a1);
}

uint64_t sub_19CE9FEA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LocalizerContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Bool __swiftcall Localizer.hasString(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  return 1;
}

Swift::Bool __swiftcall Localizer.isLocalizedString(_:)(Swift::String a1)
{
  return 1;
}

uint64_t Localizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v13;
  char v15;

  v15 = *a5;
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(a7 + 48);
  swift_bridgeObjectRetain();
  v13 = v12(a1, a2, a3, &v15, a6, a7);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19CE9FF70(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(a1, sel_decimalValue);
  v3 = sub_19CFDFF20();
  v4 = v1;
  sub_19CFDF698();
  return v3;
}

Swift::String __swiftcall Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(NSNumber forNumber, Swift::Int_optional minimumFractionDigits, Swift::Int_optional maximumFractionDigits, JetEngine::LocalizerContext in)
{
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;
  uint64_t v8;
  void *v9;

  -[objc_class decimalValue](forNumber.super.super.isa, sel_decimalValue, *(_QWORD *)&minimumFractionDigits.is_nil, maximumFractionDigits.value, *(_QWORD *)&maximumFractionDigits.is_nil, in);
  v8 = sub_19CFDFF20();
  v9 = v4;
  sub_19CFDF698();
  v5 = v8;
  v6 = v9;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t Localizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v15;
  char v17;

  v17 = *a6;
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(a8 + 88);
  swift_bridgeObjectRetain();
  v15 = v14(a1, a2, a3, a4, &v17, a7, a8);
  swift_bridgeObjectRelease();
  return v15;
}

Swift::String __swiftcall Localizer.string(forKey:with:)(Swift::String forKey, Swift::OpaquePointer_optional with)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;
  char v6;

  v6 = 0;
  v3 = (*(uint64_t (**)(uint64_t, void *, void *, char *, _QWORD))(v2 + 48))(forKey._countAndFlagsBits, forKey._object, with.value._rawValue, &v6, *(_QWORD *)&with.is_nil);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall Localizer.string(forKey:using:)(Swift::String forKey, JetEngine::LocalizerLookupStrategy using)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;
  char v6;

  v6 = *(_BYTE *)using;
  v3 = (*(uint64_t (**)(uint64_t, void *, _QWORD, char *))(v2 + 48))(forKey._countAndFlagsBits, forKey._object, 0, &v6);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall Localizer.string(forKey:)(Swift::String forKey)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;
  char v5;

  v5 = 0;
  v2 = (*(uint64_t (**)(uint64_t, void *, _QWORD, char *))(v1 + 48))(forKey._countAndFlagsBits, forKey._object, 0, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t Localizer.string(forKey:defaultValue:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  char v5;
  char v6;
  char v8;
  __int128 v9;
  char v10;
  char v11;

  v5 = *((_BYTE *)a3 + 16);
  v6 = *((_BYTE *)a3 + 17);
  v9 = *a3;
  v10 = v5;
  v11 = v6;
  v8 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, __int128 *, char *, uint64_t, uint64_t))(a5 + 56))(a1, a2, 0, &v9, &v8, a4, a5);
}

uint64_t Localizer.string(forKey:defaultValue:using:)(uint64_t a1, uint64_t a2, __int128 *a3, char *a4, uint64_t a5, uint64_t a6)
{
  char v6;
  char v7;
  char v8;
  char v10;
  __int128 v11;
  char v12;
  char v13;

  v6 = *((_BYTE *)a3 + 16);
  v7 = *((_BYTE *)a3 + 17);
  v8 = *a4;
  v11 = *a3;
  v12 = v6;
  v13 = v7;
  v10 = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, __int128 *, char *, uint64_t))(a6 + 56))(a1, a2, 0, &v11, &v10, a5);
}

uint64_t Localizer.string(forKey:with:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  char v6;
  char v7;
  char v9;
  __int128 v10;
  char v11;
  char v12;

  v6 = *((_BYTE *)a4 + 16);
  v7 = *((_BYTE *)a4 + 17);
  v10 = *a4;
  v11 = v6;
  v12 = v7;
  v9 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __int128 *, char *, uint64_t))(a6 + 56))(a1, a2, a3, &v10, &v9, a5);
}

Swift::String __swiftcall Localizer.decimal(forNumber:)(NSNumber forNumber)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;
  char v5;

  v5 = 0;
  v2 = (*(uint64_t (**)(Class, _QWORD, uint64_t, _QWORD, uint64_t, char *))(v1 + 64))(forNumber.super.super.isa, 0, 1, 0, 1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.percentage(forNumber:)(NSNumber forNumber)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;
  char v5;

  v5 = 0;
  v2 = (*(uint64_t (**)(Class, _QWORD, uint64_t, _QWORD, uint64_t, char *))(v1 + 72))(forNumber.super.super.isa, 0, 1, 0, 1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.integer(for:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;
  char v5;

  v5 = 0;
  v2 = (*(uint64_t (**)(Swift::Int, char *))(v1 + 80))(a1, &v5);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Localizer.string(withCount:forKey:with:)(Swift::Int withCount, Swift::String forKey, Swift::OpaquePointer_optional with)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::String result;
  char v7;

  v7 = 0;
  v4 = (*(uint64_t (**)(Swift::Int, uint64_t, void *, void *, char *, _QWORD))(v3 + 88))(withCount, forKey._countAndFlagsBits, forKey._object, with.value._rawValue, &v7, *(_QWORD *)&with.is_nil);
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

Swift::String __swiftcall Localizer.string(withCount:forKey:)(Swift::Int withCount, Swift::String forKey)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;
  char v6;

  v6 = 0;
  v3 = (*(uint64_t (**)(Swift::Int, uint64_t, void *, _QWORD, char *))(v2 + 88))(withCount, forKey._countAndFlagsBits, forKey._object, 0, &v6);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t Localizer.string(withCount:forKey:with:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  char v7;
  char v8;
  char v10;
  __int128 v11;
  char v12;
  char v13;

  v7 = *((_BYTE *)a5 + 16);
  v8 = *((_BYTE *)a5 + 17);
  v11 = *a5;
  v12 = v7;
  v13 = v8;
  v10 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *, char *, uint64_t))(a7 + 96))(a1, a2, a3, a4, &v11, &v10, a6);
}

uint64_t Localizer.string(withCount:forKey:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  char v6;
  char v7;
  char v9;
  __int128 v10;
  char v11;
  char v12;

  v6 = *((_BYTE *)a4 + 16);
  v7 = *((_BYTE *)a4 + 17);
  v10 = *a4;
  v11 = v6;
  v12 = v7;
  v9 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, __int128 *, char *, uint64_t, uint64_t))(a6 + 96))(a1, a2, a3, 0, &v10, &v9, a5, a6);
}

uint64_t Localizer.relativeDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(a3 + 136))(a1, &v4, a2);
}

unint64_t sub_19CEA042C()
{
  unint64_t result;

  result = qword_1EE4409E8;
  if (!qword_1EE4409E8)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LocalizerLookupStrategy, &type metadata for LocalizerLookupStrategy);
    atomic_store(result, (unint64_t *)&qword_1EE4409E8);
  }
  return result;
}

unint64_t sub_19CEA0474()
{
  unint64_t result;

  result = qword_1EE4409F0;
  if (!qword_1EE4409F0)
  {
    result = MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for LocalizerContext, &type metadata for LocalizerContext);
    atomic_store(result, (unint64_t *)&qword_1EE4409F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocalizerLookupStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19CEA0504 + 4 * byte_19D05C2BB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19CEA0538 + 4 * byte_19D05C2B6[v4]))();
}

uint64_t sub_19CEA0538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA0540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEA0548);
  return result;
}

uint64_t sub_19CEA0554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEA055CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19CEA0560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA0568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for LocalizerContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CEA05C0 + 4 * byte_19D05C2C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CEA05F4 + 4 * byte_19D05C2C0[v4]))();
}

uint64_t sub_19CEA05F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA05FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEA0604);
  return result;
}

uint64_t sub_19CEA0610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEA0618);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CEA061C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA0624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of static Localizer.fetch(contentsOf:for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16)
                                                                                     + *(_QWORD *)(a6 + 16));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_19CCBE344;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of Localizer.locale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Localizer.hasString(forKey:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of Localizer.isLocalizedString(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Localizer.string(forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of Localizer.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(a8 + 72))(a1, a2, a3 & 1, a4, a5 & 1);
}

uint64_t dispatch thunk of Localizer.integer(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of Localizer.string(withCount:forKey:with:defaultValue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 96))();
}

uint64_t dispatch thunk of Localizer.fileSize(forBytes:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Localizer.formattedDate(format:date:withContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 120))();
}

uint64_t dispatch thunk of Localizer.relativeDate(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t sub_19CEA0728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_19CE42E58(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(void **)(v1 + 64), a1);
}

uint64_t ReadOnlyLens.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a1 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1, a1);
  v6 = (char *)&v8 - v5;
  swift_getAtKeyPath();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, v3);
}

uint64_t ReadOnlyLens.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19CEA0804(a1, MEMORY[0x1E0DEE2A8], a2);
}

{
  return sub_19CEA0804(a1, MEMORY[0x1E0DED210], a2);
}

uint64_t sub_19CEA0804@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD v7[2];

  v5 = *a1;
  swift_getAtKeyPath();
  v7[0] = v7[1];
  return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)(*(_QWORD *)(*a2 + v5 + 8) - 8) + 32))(a3, v7);
}

uint64_t ReadOnlyLens.description.getter(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  return sub_19CFDF5E4();
}

uint64_t static ReadOnlyLens<A>.== infix(_:_:)()
{
  return sub_19CFDF548() & 1;
}

uint64_t sub_19CEA0908()
{
  return static ReadOnlyLens<A>.== infix(_:_:)();
}

uint64_t ReadOnlyLens<A>.hash(into:)()
{
  return sub_19CFDF4D0();
}

uint64_t ReadOnlyLens<A>.hashValue.getter()
{
  sub_19CFE08C8();
  sub_19CFDF4D0();
  return sub_19CFE0910();
}

uint64_t sub_19CEA0970()
{
  return ReadOnlyLens<A>.hashValue.getter();
}

uint64_t sub_19CEA0978()
{
  return ReadOnlyLens<A>.hash(into:)();
}

uint64_t sub_19CEA0980()
{
  sub_19CFE08C8();
  ReadOnlyLens<A>.hash(into:)();
  return sub_19CFE0910();
}

uint64_t sub_19CEA09D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A1ADBD7C](&protocol conformance descriptor for <A> ReadOnlyLens<A>, a1, &v4);
}

uint64_t destroy for SentryException(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SentryException(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    v10 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SentryException(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 64);
  v5 = (__int128 *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
    }
    else
    {
      sub_19CEA0D30(a1 + 64);
      v8 = *(_OWORD *)(a2 + 80);
      v7 = *(_OWORD *)(a2 + 96);
      v9 = *v5;
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 96) = v7;
      *v4 = v9;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 80);
    v12 = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = v12;
    *v4 = v10;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19CEA0D30(uint64_t a1)
{
  destroy for ComponentID();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for SentryException(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 72))
    goto LABEL_5;
  v8 = *(_QWORD *)(a2 + 72);
  if (!v8)
  {
    sub_19CEA0D30(a1 + 64);
LABEL_5:
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
LABEL_6:
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryException(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SentryException(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryException()
{
  return &type metadata for SentryException;
}

uint64_t sub_19CEA0F2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v12[55];
  char v13;
  _BYTE v14[56];
  _BYTE v15[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE436EB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CEA1CB0();
  sub_19CFE0A24();
  v12[0] = 0;
  sub_19CFE0538();
  if (!v2)
  {
    v12[0] = 1;
    sub_19CFE0538();
    v12[0] = 2;
    sub_19CFE04FC();
    v12[0] = 3;
    sub_19CFE04FC();
    sub_19CCC290C(v3 + 120, (uint64_t)v15, &qword_1EE436E30);
    sub_19CCC290C((uint64_t)v15, (uint64_t)v12, &qword_1EE436E30);
    v13 = 4;
    sub_19CEA1D7C();
    sub_19CFE052C();
    sub_19CCC290C(v3 + 64, (uint64_t)v14, &qword_1EE436E58);
    sub_19CCC290C((uint64_t)v14, (uint64_t)v12, &qword_1EE436E58);
    v13 = 5;
    sub_19CEA1DC0();
    sub_19CFE052C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_19CEA1150(char *a1)
{
  sub_19CE81B4C(*a1);
}

void sub_19CEA115C()
{
  char *v0;

  sub_19CF98B38(*v0);
}

void sub_19CEA1164()
{
  __asm { BR              X10 }
}

uint64_t sub_19CEA1198()
{
  sub_19CFDF650();
  return swift_bridgeObjectRelease();
}

void sub_19CEA1230(uint64_t a1)
{
  char *v1;

  sub_19CE11A40(a1, *v1);
}

uint64_t sub_19CEA1238@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CEA1FA8();
  *a1 = result;
  return result;
}

uint64_t sub_19CEA1264()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_19CEA128C + 4 * byte_19D05C54E[*v0]))();
}

void sub_19CEA128C(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

void sub_19CEA12A4(_QWORD *a1@<X8>)
{
  *a1 = 0x656C75646F6DLL;
  a1[1] = 0xE600000000000000;
}

void sub_19CEA12BC(_QWORD *a1@<X8>)
{
  *a1 = 0x695F646165726874;
  a1[1] = 0xE900000000000064;
}

void sub_19CEA12DC(_QWORD *a1@<X8>)
{
  *a1 = 0x6172746B63617473;
  a1[1] = 0xEA00000000006563;
}

void sub_19CEA12FC(_QWORD *a1@<X8>)
{
  *a1 = 0x73696E616863656DLL;
  a1[1] = 0xE90000000000006DLL;
}

uint64_t sub_19CEA1324()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19CEA134C + 4 * byte_19D05C554[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_19CEA134C()
{
  return 0x65756C6176;
}

uint64_t sub_19CEA1360()
{
  return 0x656C75646F6DLL;
}

uint64_t sub_19CEA1374()
{
  return 0x695F646165726874;
}

uint64_t sub_19CEA1390()
{
  return 0x6172746B63617473;
}

uint64_t sub_19CEA13AC()
{
  return 0x73696E616863656DLL;
}

uint64_t sub_19CEA13D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19CEA1FA8();
  *a1 = result;
  return result;
}

uint64_t sub_19CEA13F4()
{
  sub_19CEA1CB0();
  return sub_19CFE0A48();
}

uint64_t sub_19CEA141C()
{
  sub_19CEA1CB0();
  return sub_19CFE0A54();
}

double sub_19CEA1444@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  sub_19CEA17A0(a1, v9);
  if (!v2)
  {
    v5 = v13;
    a2[4] = v12;
    a2[5] = v5;
    v6 = v15;
    a2[6] = v14;
    a2[7] = v6;
    v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    result = *(double *)&v10;
    v8 = v11;
    a2[2] = v10;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_19CEA1494(_QWORD *a1)
{
  return sub_19CEA0F2C(a1);
}

uint64_t sub_19CEA14DC(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[8];
  _OWORD v14[8];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[3];
  v14[2] = a2[2];
  v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_19CEA154C((uint64_t)v13, (uint64_t)v14) & 1;
}

uint64_t sub_19CEA154C(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[6];
  __int16 v32;
  _QWORD v33[6];
  __int16 v34;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_19CFE06A0(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_19CFE06A0(), result = 0, (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(a1 + 40);
      v10 = *(_QWORD *)(a2 + 40);
      if (v9)
      {
        if (!v10)
          return 0;
        if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v9 != v10)
        {
          v11 = sub_19CFE06A0();
          result = 0;
          if ((v11 & 1) == 0)
            return result;
        }
      }
      else if (v10)
      {
        return 0;
      }
      v12 = *(_QWORD *)(a1 + 56);
      v13 = *(_QWORD *)(a2 + 56);
      if (v12)
      {
        if (!v13)
          return 0;
        if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v12 != v13)
        {
          v14 = sub_19CFE06A0();
          result = 0;
          if ((v14 & 1) == 0)
            return result;
        }
      }
      else if (v13)
      {
        return 0;
      }
      v15 = *(_QWORD *)(a1 + 72);
      v16 = *(_QWORD *)(a1 + 80);
      v17 = *(_QWORD *)(a1 + 88);
      v19 = *(_QWORD *)(a1 + 96);
      v18 = *(_QWORD *)(a1 + 104);
      v20 = *(_WORD *)(a1 + 112);
      v22 = *(_QWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 72);
      v23 = *(_QWORD *)(a2 + 80);
      v24 = *(_QWORD *)(a2 + 88);
      v26 = *(_QWORD *)(a2 + 96);
      v25 = *(_QWORD *)(a2 + 104);
      v27 = *(_WORD *)(a2 + 112);
      if (v15)
      {
        if (v21)
        {
          v31[0] = *(_QWORD *)(a1 + 64);
          v31[1] = v15;
          v31[2] = v16;
          v31[3] = v17;
          v31[4] = v19;
          v31[5] = v18;
          v32 = v20;
          v33[0] = v22;
          v33[1] = v21;
          v33[2] = v23;
          v33[3] = v24;
          v33[4] = v26;
          v33[5] = v25;
          v34 = v27;
          if ((sub_19CE698E8((uint64_t)v31, (uint64_t)v33) & 1) == 0)
            return 0;
          goto LABEL_33;
        }
      }
      else if (!v21)
      {
LABEL_33:
        v28 = *(_QWORD *)(a1 + 120);
        v29 = *(_QWORD *)(a2 + 120);
        if (v28)
        {
          if (v29 && (sub_19CDCC844(v28, v29) & 1) != 0)
            return 1;
        }
        else if (!v29)
        {
          return 1;
        }
        return 0;
      }
      v30 = *(_QWORD *)(a1 + 64);
      sub_19CE68014(v30, v15);
      sub_19CE68014(v22, v21);
      sub_19CE67F24(v30, v15);
      sub_19CE67F24(v22, v21);
      return 0;
    }
  }
  return result;
}

uint64_t sub_19CEA17A0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  __int128 v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _QWORD v55[14];
  __int16 v56;
  int v57;
  __int16 v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  unsigned __int16 v64;
  int v65;
  __int16 v66;
  uint64_t v67;

  v46 = a2;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440A00);
  v4 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CEA1CB0();
  sub_19CFE09E8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v8 = v4;
  LOBYTE(v55[0]) = 0;
  v9 = v67;
  v10 = v7;
  v11 = sub_19CFE0490();
  v13 = v12;
  LOBYTE(v55[0]) = 1;
  swift_bridgeObjectRetain();
  v44 = sub_19CFE0490();
  LOBYTE(v55[0]) = 2;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_19CFE0454();
  v45 = v17;
  v40 = v16;
  v42 = v15;
  LOBYTE(v55[0]) = 3;
  swift_bridgeObjectRetain();
  v41 = 0;
  v39 = sub_19CFE0454();
  LOBYTE(v47) = 4;
  v19 = v18;
  sub_19CEA1CF4();
  v43 = v19;
  swift_bridgeObjectRetain();
  sub_19CFE0484();
  v20 = v55[0];
  v60 = 5;
  sub_19CEA1D38();
  v38 = v20;
  swift_bridgeObjectRetain();
  sub_19CFE0484();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v9);
  v41 = v61;
  v36 = v62;
  v37 = *((_QWORD *)&v61 + 1);
  v34 = v63;
  v35 = *((_QWORD *)&v62 + 1);
  v33 = *((_QWORD *)&v63 + 1);
  LODWORD(v67) = v64;
  *(_QWORD *)&v47 = v11;
  *((_QWORD *)&v47 + 1) = v13;
  v21 = v45;
  v22 = v42;
  *(_QWORD *)&v48 = v44;
  *((_QWORD *)&v48 + 1) = v42;
  v23 = v40;
  *(_QWORD *)&v49 = v40;
  *((_QWORD *)&v49 + 1) = v45;
  v32 = v11;
  v24 = v43;
  *(_QWORD *)&v50 = v39;
  *((_QWORD *)&v50 + 1) = v43;
  v51 = v61;
  v52 = v62;
  v53 = v63;
  LOWORD(v54) = v64;
  v25 = v38;
  *((_QWORD *)&v54 + 1) = v38;
  sub_19CE67F60((uint64_t)&v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v55[0] = v32;
  v55[1] = v13;
  v55[2] = v44;
  v55[3] = v22;
  v55[4] = v23;
  v55[5] = v21;
  v55[6] = v39;
  v55[7] = v24;
  v55[8] = v41;
  v55[9] = v37;
  v55[10] = v36;
  v55[11] = v35;
  v55[12] = v34;
  v55[13] = v33;
  v56 = v67;
  v57 = v65;
  v58 = v66;
  v59 = v25;
  result = sub_19CE67E70((uint64_t)v55);
  v27 = v52;
  v28 = v46;
  v46[4] = v51;
  v28[5] = v27;
  v29 = v54;
  v28[6] = v53;
  v28[7] = v29;
  v30 = v48;
  *v28 = v47;
  v28[1] = v30;
  v31 = v50;
  v28[2] = v49;
  v28[3] = v31;
  return result;
}

unint64_t sub_19CEA1CB0()
{
  unint64_t result;

  result = qword_1EE436DD8;
  if (!qword_1EE436DD8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C6EC, &type metadata for SentryException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436DD8);
  }
  return result;
}

unint64_t sub_19CEA1CF4()
{
  unint64_t result;

  result = qword_1EE440A08;
  if (!qword_1EE440A08)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A134, &type metadata for SentryStackTrace);
    atomic_store(result, (unint64_t *)&qword_1EE440A08);
  }
  return result;
}

unint64_t sub_19CEA1D38()
{
  unint64_t result;

  result = qword_1EE440A10;
  if (!qword_1EE440A10)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05973C, &type metadata for SentryExceptionMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE440A10);
  }
  return result;
}

unint64_t sub_19CEA1D7C()
{
  unint64_t result;

  result = qword_1EE436E28;
  if (!qword_1EE436E28)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05A10C, &type metadata for SentryStackTrace);
    atomic_store(result, (unint64_t *)&qword_1EE436E28);
  }
  return result;
}

unint64_t sub_19CEA1DC0()
{
  unint64_t result;

  result = qword_1EE436E50;
  if (!qword_1EE436E50)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D059714, &type metadata for SentryExceptionMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE436E50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SentryException.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19CEA1E50 + 4 * byte_19D05C55F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19CEA1E84 + 4 * byte_19D05C55A[v4]))();
}

uint64_t sub_19CEA1E84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA1E8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19CEA1E94);
  return result;
}

uint64_t sub_19CEA1EA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19CEA1EA8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19CEA1EAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19CEA1EB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SentryException.CodingKeys()
{
  return &type metadata for SentryException.CodingKeys;
}

unint64_t sub_19CEA1ED4()
{
  unint64_t result;

  result = qword_1EE440A18;
  if (!qword_1EE440A18)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C6C4, &type metadata for SentryException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE440A18);
  }
  return result;
}

unint64_t sub_19CEA1F1C()
{
  unint64_t result;

  result = qword_1EE436DE8;
  if (!qword_1EE436DE8)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C5FC, &type metadata for SentryException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436DE8);
  }
  return result;
}

unint64_t sub_19CEA1F64()
{
  unint64_t result;

  result = qword_1EE436DE0;
  if (!qword_1EE436DE0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C624, &type metadata for SentryException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE436DE0);
  }
  return result;
}

uint64_t sub_19CEA1FA8()
{
  unint64_t v0;

  v0 = sub_19CFE0424();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t destroy for PageRenderClientIdentifierFieldsProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for PageRenderClientIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 32, v6, v8);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PageRenderClientIdentifierFieldsProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for PageRenderClientIdentifierFieldsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PageRenderClientIdentifierFieldsProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageRenderClientIdentifierFieldsProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderClientIdentifierFieldsProvider()
{
  return &type metadata for PageRenderClientIdentifierFieldsProvider;
}

void sub_19CEA2258()
{
  void *v0;
  id v1;

  v0 = (void *)sub_19CFDF554();
  v1 = objc_msgSend((id)objc_opt_self(), sel_keyWithName_crossDeviceSync_, v0, 0);

  qword_1EE440A20 = (uint64_t)v1;
}

uint64_t sub_19CEA22C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[32] = a1;
  v3[33] = v2;
  v3[34] = *a2;
  return swift_task_switch();
}

uint64_t sub_19CEA22E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _OWORD *v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;

  v1 = *(_QWORD **)(v0 + 256);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  v5 = sub_19CE46798((uint64_t)&unk_1E3DD8300);
  swift_arrayDestroy();
  if (!*(_QWORD *)(v4 + 16)
    || (v6 = sub_19CD3FD1C(0x707954746E657665, 0xE900000000000065), (v7 & 1) == 0)
    || (v8 = (_OWORD *)(v0 + 80), sub_19CD436B0(*(_QWORD *)(v4 + 56) + 32 * v6, v0 + 80), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = sub_19CD0BB80(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v10 = *(uint64_t **)(v0 + 264);
  v12 = v1[3];
  v11 = v1[4];
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 256), v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v12, v11);
  if (*(_QWORD *)(v13 + 16))
  {
    v15 = *v10;
    v14 = v10[1];
    swift_bridgeObjectRetain();
    v16 = sub_19CD3FD1C(v15, v14);
    if ((v17 & 1) != 0)
    {
      sub_19CD436B0(*(_QWORD *)(v13 + 56) + 32 * v16, v0 + 80);
    }
    else
    {
      *v8 = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *v8 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v0 + 104);
  sub_19CD3F190(v0 + 80);
  if (v19)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v20 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRetain();
  v21 = sub_19CD1D4BC(0xD00000000000002BLL, 0x800000019D070950, v20);
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v22 = *(_QWORD **)(v0 + 264);
  v23 = v22[7];
  v24 = v22[8];
  __swift_project_boxed_opaque_existential_1(v22 + 4, v23);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v24 + 8))(&v29, v23, v24);
  v25 = v29;
  v26 = (void *)objc_opt_self();
  v27 = (void *)sub_19CFDF554();
  v28 = objc_msgSend(v26, sel_identifierStoreWithAccount_bagNamespace_bag_, v25, v27, v22[9]);
  *(_QWORD *)(v0 + 280) = v28;

  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_19CEA25F8;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_19CD59864;
  *(_QWORD *)(v0 + 104) = &block_descriptor_16;
  objc_msgSend(v28, sel_resultWithCompletion_, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_19CEA25F8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19CEA2658()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 120);

  if (qword_1EE43D648 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(uint64_t **)(v0 + 264);
  v4 = objc_msgSend(v1, sel_identifierForKey_, qword_1EE440A20);
  v5 = sub_19CFDF578();
  v7 = v6;

  *(_QWORD *)(v0 + 104) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 80) = v5;
  *(_QWORD *)(v0 + 88) = v7;
  v8 = *v3;
  v9 = v3[1];
  v10 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v0 + 80, v8, v9, v10, v11);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA295C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  Swift::String v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v1 = (__int128 *)(v0 + 120);
  v2 = *(void **)(v0 + 280);
  swift_willThrow();

  v3 = *(void **)(v0 + 288);
  if (qword_1EE43D060 != -1)
    swift_once();
  sub_19CFE0A6C();
  v15 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v17 = sub_19CD40918(0, 192, 0, MEMORY[0x1E0DEE9D8]);
  v5._object = (void *)0x800000019D073630;
  v5._countAndFlagsBits = 0xD0000000000000BFLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v5);
  swift_getErrorValue();
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 216) = v7;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 192));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
  sub_19CD40794(v0 + 192, v0 + 160);
  *v1 = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  sub_19CD40658(v0 + 160, v0 + 120);
  *(_BYTE *)(v0 + 152) = 0;
  v18 = *v1;
  v19 = *(_OWORD *)(v0 + 136);
  v20 = *(_BYTE *)(v0 + 152);
  v9 = v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v17[2] + 1, 1, v17);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[5 * v11];
  *((_BYTE *)v12 + 64) = v20;
  *((_OWORD *)v12 + 2) = v18;
  *((_OWORD *)v12 + 3) = v19;
  sub_19CD3F190(v0 + 192);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  *(_QWORD *)(v4 + 32) = v9;
  Logger.error(_:)(v4, v16, v15);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA2BC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_19CCBE344;
  v6[32] = a1;
  v6[33] = v2;
  v6[34] = *a2;
  return swift_task_switch();
}

uint64_t sub_19CEA2C34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA2C40()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA2C4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA2CAC()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[2] = v0[4];
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_19CEA2D70;
  return sub_19CFE0A84();
}

uint64_t sub_19CEA2D70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA2DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for JetPackAsset(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
    sub_19CDB46D4();
    return sub_19CFE0340();
  }
  else
  {
    sub_19CCFDB04(v1, *(_QWORD *)(v0 + 24));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CEA2EAC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JetPackAssetSession.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  sub_19CD60F34(a1, v2 + 16);
  v3 = sub_19CD59D00(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1038);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  sub_19CCC2888(a1);
  *(_QWORD *)(v2 + 96) = v4;
  return v2;
}

uint64_t JetPackAssetSession.jetPack<A>(for:fetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  v6[19] = a5;
  v6[20] = v5;
  v6[17] = a3;
  v6[18] = a4;
  v6[15] = a1;
  v6[16] = a2;
  v8 = sub_19CFDF1E8();
  v6[21] = v8;
  v6[22] = *(_QWORD *)(v8 - 8);
  v6[23] = swift_task_alloc();
  v6[24] = swift_task_alloc();
  v9 = *(_QWORD *)(a4 - 8);
  v6[25] = v9;
  v6[26] = *(_QWORD *)(v9 + 64);
  v6[27] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[28] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[29] = v11;
  v6[30] = *(_QWORD *)(v11 + 64);
  v6[31] = swift_task_alloc();
  v12 = sub_19CFDF1AC();
  v6[32] = v12;
  v6[33] = *(_QWORD *)(v12 - 8);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v6[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA30A4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  Swift::String v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  char v52;

  if (qword_1ECEB09F0 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  *(_QWORD *)(v0 + 304) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECEB09D8);
  sub_19CFDF1C4();
  sub_19CFDF188();
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 264);
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16);
    v7(v4, *(_QWORD *)(v0 + 296), v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v9, "Perform JetPack Request", "", v8, 2u);
    MEMORY[0x1A1ADBE9C](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 264);

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v11 = (__int128 *)(v0 + 16);
  *(_QWORD *)(v0 + 312) = v7;
  v7(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 256));
  sub_19CFDF20C();
  swift_allocObject();
  *(_QWORD *)(v0 + 320) = sub_19CFDF200();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 128);
  v15 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_19D0522A0;
  v46 = v15;
  v49 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
  v17._object = (void *)0x800000019D073710;
  v17._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v0 + 80) = v12;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
  v45 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16);
  v45(boxed_opaque_existential_2Tm, v14, v12);
  sub_19CCF8C5C(v0 + 56, v0 + 88, &qword_1ECEB3370);
  *v11 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CD40658(v0 + 88, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v19 = *(_OWORD *)(v0 + 32);
  v50 = *v11;
  v51 = v19;
  v52 = *(_BYTE *)(v0 + 48);
  v20 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v49[2] + 1, 1, v49);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v23 = *(uint64_t **)(v0 + 248);
  v24 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 240);
  v47 = *(_QWORD *)(v0 + 200);
  v48 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 144);
  v43 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 128);
  v40 = *(_QWORD *)(v0 + 136);
  v41 = *(_QWORD *)(v0 + 232);
  v20[2] = v22 + 1;
  v27 = &v20[5 * v22];
  v28 = v50;
  v29 = v51;
  *((_BYTE *)v27 + 64) = v52;
  *((_OWORD *)v27 + 2) = v28;
  *((_OWORD *)v27 + 3) = v29;
  v49 = v20;
  sub_19CCECFE4(v0 + 56, &qword_1ECEB3370);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  *(_QWORD *)(v16 + 32) = v20;
  *(_QWORD *)&v50 = v46;
  LOBYTE(v49) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v49);
  swift_bridgeObjectRelease();

  v45(v23, v26, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v40, v25);
  v31 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v32 = (v42 + *(unsigned __int8 *)(v47 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v33 = (char *)swift_allocObject();
  *(_QWORD *)(v0 + 328) = v33;
  *((_QWORD *)v33 + 2) = v25;
  *((_QWORD *)v33 + 3) = v43;
  *((_QWORD *)v33 + 4) = v44;
  (*(void (**)(char *, uint64_t *, uint64_t))(v41 + 32))(&v33[v31], v23, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(&v33[v32], v48, v25);
  swift_retain();
  v34 = swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v34;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)v34 = v0;
  *(_QWORD *)(v34 + 8) = sub_19CEA3568;
  v36 = *(_QWORD *)(v0 + 224);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = *(_OWORD *)(v0 + 120);
  *(_QWORD *)(v34 + 56) = AssociatedConformanceWitness;
  *(_QWORD *)(v34 + 64) = v37;
  *(_QWORD *)(v34 + 40) = v33;
  *(_QWORD *)(v34 + 48) = v36;
  *(_QWORD *)(v34 + 32) = &unk_1EE440A48;
  *(_OWORD *)(v34 + 16) = v38;
  return swift_task_switch();
}

uint64_t sub_19CEA3568()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEA35D4()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));
      v6 = "";
    }
    v7 = (uint64_t *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 312))(*(_QWORD *)(v0 + 288), v10, v11);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v14, "Perform JetPack Request", v6, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  else
  {
    v7 = (uint64_t *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 264);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 256);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA37DC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release();
  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 168);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
      v6 = "";
    }
    v7 = (uint64_t *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 312))(*(_QWORD *)(v0 + 288), v10, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v14, "Perform JetPack Request", v6, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    v7 = (uint64_t *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 264);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 256);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA39EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[75] = a6;
  v6[74] = a5;
  v6[73] = a4;
  v6[72] = a3;
  v6[71] = a2;
  v6[70] = a1;
  v7 = *(_QWORD *)(a5 - 8);
  v6[76] = v7;
  v6[77] = *(_QWORD *)(v7 + 64);
  v6[78] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  v6[79] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[80] = AssociatedTypeWitness;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[81] = v9;
  v6[82] = *(_QWORD *)(v9 + 64);
  v6[83] = swift_task_alloc();
  v6[84] = swift_task_alloc();
  v10 = type metadata accessor for JetPackAsset(0);
  v6[85] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[86] = v11;
  v6[87] = *(_QWORD *)(v11 + 64);
  v6[88] = swift_task_alloc();
  v6[89] = swift_task_alloc();
  v6[90] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v6[91] = swift_task_alloc();
  v6[92] = swift_task_alloc();
  v6[93] = swift_task_alloc();
  v6[94] = swift_task_alloc();
  v6[95] = swift_task_alloc();
  v6[96] = swift_task_alloc();
  v6[97] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA3B90()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_19CFDFAB8();
  v1 = (_QWORD *)v0[71];
  v2 = v1 + 2;
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  v5 = v0[97];
  v6 = v0[85];
  v7 = v0[80];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[86] + 56);
  v0[98] = v8;
  v8(v5, 1, 1, v6);
  v9 = v1[5];
  v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v9);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[99] = AssociatedConformanceWitness;
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v0[100] = v12;
  v13 = v12(v7, AssociatedConformanceWitness);
  v15 = v14;
  v0[101] = v14;
  v18 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v10 + 16) + *(_QWORD *)(v10 + 16));
  v16 = (_QWORD *)swift_task_alloc();
  v0[102] = v16;
  *v16 = v0;
  v16[1] = sub_19CEA3DBC;
  return v18(v0[96], v13, v15, v9, v10);
}

uint64_t sub_19CEA3DBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_19CEA3E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  __int128 *v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  Swift::String v40;
  __int128 v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  Swift::String v50;
  void (*v51)(__int128 *__return_ptr, uint64_t, uint64_t);
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(void);
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v121)(_QWORD, uint64_t, uint64_t);
  uint64_t v122;
  __int128 v123;
  _QWORD *v124;
  __int128 v125;
  __int128 v126;
  char v127;

  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 760);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(_QWORD *)(v0 + 680);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  sub_19CEACA18(v2, v1);
  sub_19CCF8C5C(v1, v3, (uint64_t *)&unk_1ECEB1140);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 760);
  if (v6 == 1)
  {
    sub_19CCECFE4(v7, (uint64_t *)&unk_1ECEB1140);
    goto LABEL_3;
  }
  sub_19CCFDB04(v7, *(_QWORD *)(v0 + 720));
  if (qword_1ECEB0870 != -1)
    swift_once();
  v13 = *(_QWORD *)(v0 + 824);
  v14 = qword_1ECEB5270;
  *(_QWORD *)(v0 + 536) = (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 800))(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 792));
  *(_QWORD *)(v0 + 544) = v15;
  v16 = *(_QWORD *)(v14 + 16);
  v17 = swift_task_alloc();
  *(_QWORD *)(v17 + 16) = v0 + 536;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  sub_19CF6E2C0((uint64_t *)(v16 + 16), *(uint64_t **)(v17 + 16), &v125);
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
  if (!v13)
  {
    v57 = v125;
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if ((v57 & 1) == 0)
    {
      sub_19CDB7640(*(_QWORD *)(v0 + 720));
LABEL_3:
      v8 = *(_QWORD *)(v0 + 776);
      v9 = *(_QWORD *)(v0 + 752);
      v10 = *(_QWORD *)(v0 + 688);
      v11 = *(_QWORD *)(v0 + 680);
      sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, v0 + 16);
      sub_19CCF8C5C(v8, v9, (uint64_t *)&unk_1ECEB1140);
      v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v116(v9, 1, v11) == 1)
      {
        v12 = 4;
      }
      else
      {
        v18 = *(_QWORD *)(v0 + 712);
        sub_19CCFDB04(*(_QWORD *)(v0 + 752), v18);
        v19 = *(_QWORD *)(v0 + 40);
        v20 = *(_QWORD *)(v0 + 48);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v19);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v20 + 8))(&v125, v18, v19, v20);
        v12 = v125;
        sub_19CDB7640(v18);
      }
      v119 = v12;
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      if (qword_1ECEB0B68 != -1)
        swift_once();
      v21 = (__int128 *)(v0 + 216);
      v22 = *(_QWORD *)(v0 + 776);
      v23 = *(_QWORD *)(v0 + 744);
      v24 = *(_QWORD *)(v0 + 680);
      v25 = (void *)qword_1ECEB0B60;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_19D0522A0;
      v27 = v25;
      v124 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
      v28._countAndFlagsBits = 0x7341646568636163;
      v28._object = (void *)0xEC0000003D746573;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_19CCF8C5C(v22, v23, (uint64_t *)&unk_1ECEB1140);
      v29 = v116(v23, 1, v24);
      v30 = *(_QWORD *)(v0 + 744);
      if (v29 == 1)
      {
        sub_19CCECFE4(*(_QWORD *)(v0 + 744), (uint64_t *)&unk_1ECEB1140);
        *(_OWORD *)(v0 + 256) = 0u;
        *(_OWORD *)(v0 + 272) = 0u;
      }
      else
      {
        *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 680);
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
        sub_19CCFDB04(v30, (uint64_t)boxed_opaque_existential_2Tm);
      }
      sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
      *v21 = 0u;
      *(_OWORD *)(v0 + 232) = 0u;
      sub_19CD40658(v0 + 288, v0 + 216);
      *(_BYTE *)(v0 + 248) = 0;
      v32 = *(_OWORD *)(v0 + 232);
      v125 = *v21;
      v126 = v32;
      v127 = *(_BYTE *)(v0 + 248);
      v33 = v124;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_19CD40918(0, v124[2] + 1, 1, v124);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_19CD40918((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v36 = (__int128 *)(v0 + 136);
      v33[2] = v35 + 1;
      v37 = &v33[5 * v35];
      v38 = v125;
      v39 = v126;
      *((_BYTE *)v37 + 64) = v127;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      v124 = v33;
      sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
      v40._countAndFlagsBits = 0x3D73757461747320;
      v40._object = (void *)0xE800000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      if (v119 == 4)
      {
        *(_OWORD *)(v0 + 480) = 0u;
        *(_OWORD *)(v0 + 496) = 0u;
      }
      else
      {
        *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
        *(_BYTE *)(v0 + 480) = v119;
      }
      sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
      *v36 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      sub_19CD40658(v0 + 384, v0 + 136);
      *(_BYTE *)(v0 + 168) = 0;
      v41 = *(_OWORD *)(v0 + 152);
      v125 = *v36;
      v126 = v41;
      v127 = *(_BYTE *)(v0 + 168);
      v42 = v124;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_19CD40918(0, v124[2] + 1, 1, v124);
      v44 = v42[2];
      v43 = v42[3];
      if (v44 >= v43 >> 1)
        v42 = sub_19CD40918((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
      v45 = *(_QWORD *)(v0 + 792);
      v46 = *(_QWORD *)(v0 + 640);
      v42[2] = v44 + 1;
      v47 = &v42[5 * v44];
      v48 = v125;
      v49 = v126;
      *((_BYTE *)v47 + 64) = v127;
      *((_OWORD *)v47 + 2) = v48;
      *((_OWORD *)v47 + 3) = v49;
      v124 = v42;
      sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      *(_QWORD *)(v26 + 32) = v42;
      *(_QWORD *)&v125 = v27;
      LOBYTE(v124) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v26, (JetEngine::LogMessageLevel)&v124);
      swift_bridgeObjectRelease();

      v51 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v45 + 24);
      v51(&v125, v46, v45);
      if ((_BYTE)v125)
      {
        v52 = v119;
        if (v119 == 4 || v125 != 2)
          goto LABEL_44;
      }
      else
      {
        v52 = v119;
        if (v119 == 4)
          goto LABEL_44;
      }
      v53 = *(_QWORD *)(v0 + 736);
      v54 = *(_QWORD *)(v0 + 680);
      sub_19CCF8C5C(*(_QWORD *)(v0 + 776), v53, (uint64_t *)&unk_1ECEB1140);
      v55 = v116(v53, 1, v54);
      v56 = *(_QWORD *)(v0 + 736);
      if (v55 == 1)
      {
        sub_19CCECFE4(v56, (uint64_t *)&unk_1ECEB1140);
      }
      else
      {
        sub_19CCFDB04(v56, *(_QWORD *)(v0 + 704));
        v69 = v52 - 1;
        if (v52 <= 1)
        {
          v122 = *(_QWORD *)(v0 + 672);
          v70 = *(_QWORD *)(v0 + 648);
          v117 = *(_QWORD *)(v0 + 640);
          v71 = *(_QWORD *)(v0 + 576);
          v72 = (void *)qword_1ECEB0B60;
          v73 = swift_allocObject();
          *(_OWORD *)(v73 + 16) = xmmword_19D0522A0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
          v74 = swift_allocObject();
          v75 = MEMORY[0x1E0DEA968];
          *(_OWORD *)(v74 + 16) = xmmword_19D0522A0;
          *(_QWORD *)(v0 + 472) = v75;
          *(_QWORD *)(v0 + 448) = 0xD000000000000012;
          *(_QWORD *)(v0 + 456) = 0x800000019D073850;
          *(_OWORD *)(v0 + 96) = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
          v76 = v72;
          sub_19CD40658(v0 + 448, v0 + 96);
          *(_BYTE *)(v0 + 128) = 0;
          v77 = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v74 + 32) = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v74 + 48) = v77;
          *(_BYTE *)(v74 + 64) = *(_BYTE *)(v0 + 128);
          *(_QWORD *)(v73 + 32) = v74;
          *(_QWORD *)&v125 = v76;
          LOBYTE(v124) = 2;
          OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v73, (JetEngine::LogMessageLevel)&v124);
          swift_bridgeObjectRelease();

          v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
          v78(v122, v71, v117);
          if (v69 > 1)
          {
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 640));
          }
          else
          {
            v79 = *(_QWORD *)(v0 + 672);
            v80 = *(_QWORD *)(v0 + 648);
            v81 = *(_QWORD *)(v0 + 640);
            v51(&v125, v81, *(_QWORD *)(v0 + 792));
            (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
            if (!(_BYTE)v125 || v125 == 1)
            {
              v82 = *(_QWORD *)(v0 + 712);
              v109 = *(_QWORD *)(v0 + 704);
              v110 = v82;
              v114 = *(_QWORD *)(v0 + 688);
              v83 = *(_QWORD *)(v0 + 664);
              v108 = *(_QWORD *)(v0 + 648);
              v84 = *(_QWORD *)(v0 + 640);
              v85 = *(_QWORD *)(v0 + 632);
              v118 = v85;
              v86 = *(_QWORD *)(v0 + 624);
              v111 = v83;
              v112 = *(_QWORD *)(v0 + 616);
              v113 = *(_QWORD *)(v0 + 656);
              v87 = *(_QWORD *)(v0 + 608);
              v88 = *(_QWORD *)(v0 + 584);
              v89 = *(_QWORD *)(v0 + 576);
              v115 = *(_QWORD *)(v0 + 568);
              v90 = sub_19CFDFA10();
              v123 = *(_OWORD *)(v0 + 592);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v85, 1, 1, v90);
              v91 = v83;
              v92 = v84;
              v78(v91, v89, v84);
              (*(void (**)(uint64_t, uint64_t, _QWORD))(v87 + 16))(v86, v88, v123);
              sub_19CDF3E10(v109, v82);
              v93 = (*(unsigned __int8 *)(v108 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
              v94 = (v113 + *(unsigned __int8 *)(v87 + 80) + v93) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
              v95 = (v112 + *(unsigned __int8 *)(v114 + 80) + v94) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
              v96 = swift_allocObject();
              *(_QWORD *)(v96 + 16) = 0;
              *(_QWORD *)(v96 + 24) = 0;
              *(_OWORD *)(v96 + 32) = v123;
              *(_QWORD *)(v96 + 48) = v115;
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v108 + 32))(v96 + v93, v111, v92);
              (*(void (**)(unint64_t, uint64_t, _QWORD))(v87 + 32))(v96 + v94, v86, v123);
              sub_19CCFDB04(v110, v96 + v95);
              swift_retain();
              sub_19CF69A9C(v118, (uint64_t)asc_1EE440B18, v96);
              swift_release();
            }
          }
          v103 = *(_QWORD *)(v0 + 704);
          v104 = *(_QWORD *)(v0 + 560);
          sub_19CCECFE4(*(_QWORD *)(v0 + 776), (uint64_t *)&unk_1ECEB1140);
          sub_19CCFDB04(v103, v104);
          v105 = *(_QWORD **)(v0 + 568);
          v107 = v105[5];
          v106 = v105[6];
          __swift_project_boxed_opaque_existential_1(v105 + 2, v107);
          (*(void (**)(uint64_t, uint64_t))(v106 + 56))(v107, v106);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v102 = *(void (**)(void))(v0 + 8);
          goto LABEL_53;
        }
        sub_19CDB7640(*(_QWORD *)(v0 + 704));
      }
LABEL_44:
      v51(&v125, *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 792));
      if (!(_BYTE)v125 || v125 == 1)
      {
        if (v52 == 3)
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 784))(*(_QWORD *)(v0 + 728), 1, 1, *(_QWORD *)(v0 + 680));
        else
          sub_19CCF8C5C(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
        v97 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 848) = v97;
        *v97 = v0;
        v97[1] = sub_19CEA575C;
        sub_19CEA7760(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600));
        return;
      }
      v98 = *(_QWORD *)(v0 + 776);
      v99 = *(_QWORD **)(v0 + 568);
      sub_19CEAC74C();
      swift_allocError();
      swift_willThrow();
      sub_19CCECFE4(v98, (uint64_t *)&unk_1ECEB1140);
      v100 = v99[5];
      v101 = v99[6];
      __swift_project_boxed_opaque_existential_1(v99 + 2, v100);
      (*(void (**)(uint64_t, uint64_t))(v101 + 56))(v100, v101);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v102 = *(void (**)(void))(v0 + 8);
LABEL_53:
      v102();
      return;
    }
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 784);
    v58 = *(_QWORD *)(v0 + 776);
    v59 = *(_QWORD *)(v0 + 680);
    v60 = *(_QWORD **)(v0 + 568);
    v61 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_19D0522A0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
    v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_19D0522A0;
    *(_QWORD *)(v0 + 344) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 320) = 0xD000000000000054;
    *(_QWORD *)(v0 + 328) = 0x800000019D073870;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    v64 = v61;
    sub_19CD40658(v0 + 320, v0 + 56);
    *(_BYTE *)(v0 + 88) = 0;
    *(_BYTE *)(v63 + 64) = 0;
    v65 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v63 + 32) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v63 + 48) = v65;
    *(_QWORD *)(v62 + 32) = v63;
    *(_QWORD *)&v125 = v64;
    LOBYTE(v124) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v62, (JetEngine::LogMessageLevel)&v124);
    swift_bridgeObjectRelease();

    sub_19CCECFE4(v58, (uint64_t *)&unk_1ECEB1140);
    v120(v58, 1, 1, v59);
    v66 = v60[5];
    v67 = v60[6];
    __swift_project_boxed_opaque_existential_1(v60 + 2, v66);
    v121 = (void (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v67 + 24) + *(_QWORD *)(v67 + 24));
    v68 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 832) = v68;
    *v68 = v0;
    v68[1] = sub_19CEA4C28;
    v121(*(_QWORD *)(v0 + 720), v66, v67);
  }
}

uint64_t sub_19CEA4C28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 840) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA4C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  __int128 *v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  __int128 v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  Swift::String v38;
  void (*v39)(__int128 *__return_ptr, uint64_t, uint64_t);
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  __int128 v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  __int128 v98;
  _QWORD *v99;
  __int128 v100;
  __int128 v101;
  char v102;

  sub_19CDB7640(*(_QWORD *)(v0 + 720));
  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD *)(v0 + 752);
  v3 = *(_QWORD *)(v0 + 688);
  v4 = *(_QWORD *)(v0 + 680);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, v0 + 16);
  sub_19CCF8C5C(v1, v2, (uint64_t *)&unk_1ECEB1140);
  v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v93(v2, 1, v4) == 1)
  {
    v5 = 4;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 712);
    sub_19CCFDB04(*(_QWORD *)(v0 + 752), v6);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v100, v6, v7, v8);
    v5 = v100;
    sub_19CDB7640(v6);
  }
  v96 = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v9 = (__int128 *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 776);
  v11 = *(_QWORD *)(v0 + 744);
  v12 = *(_QWORD *)(v0 + 680);
  v13 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19D0522A0;
  v15 = v13;
  v99 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v16._countAndFlagsBits = 0x7341646568636163;
  v16._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  sub_19CCF8C5C(v10, v11, (uint64_t *)&unk_1ECEB1140);
  v17 = v93(v11, 1, v12);
  v18 = *(_QWORD *)(v0 + 744);
  if (v17 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 744), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 680);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFDB04(v18, (uint64_t)boxed_opaque_existential_2Tm);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v9 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v20 = *(_OWORD *)(v0 + 232);
  v100 = *v9;
  v101 = v20;
  v102 = *(_BYTE *)(v0 + 248);
  v21 = v99;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = sub_19CD40918(0, v99[2] + 1, 1, v99);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_19CD40918((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v24 = (__int128 *)(v0 + 136);
  v21[2] = v23 + 1;
  v25 = &v21[5 * v23];
  v26 = v100;
  v27 = v101;
  *((_BYTE *)v25 + 64) = v102;
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v27;
  v99 = v21;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v28._countAndFlagsBits = 0x3D73757461747320;
  v28._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  if (v96 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v96;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v24 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v29 = *(_OWORD *)(v0 + 152);
  v100 = *v24;
  v101 = v29;
  v102 = *(_BYTE *)(v0 + 168);
  v30 = v99;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = sub_19CD40918(0, v99[2] + 1, 1, v99);
  v32 = v30[2];
  v31 = v30[3];
  if (v32 >= v31 >> 1)
    v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
  v33 = *(_QWORD *)(v0 + 792);
  v34 = *(_QWORD *)(v0 + 640);
  v30[2] = v32 + 1;
  v35 = &v30[5 * v32];
  v36 = v100;
  v37 = v101;
  *((_BYTE *)v35 + 64) = v102;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
  v99 = v30;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  *(_QWORD *)(v14 + 32) = v30;
  *(_QWORD *)&v100 = v15;
  LOBYTE(v99) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v14, (JetEngine::LogMessageLevel)&v99);
  swift_bridgeObjectRelease();

  v39 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v33 + 24);
  v39(&v100, v34, v33);
  if ((_BYTE)v100)
  {
    v40 = v96;
    if (v96 == 4 || v100 != 2)
      goto LABEL_33;
  }
  else
  {
    v40 = v96;
    if (v96 == 4)
      goto LABEL_33;
  }
  v41 = *(_QWORD *)(v0 + 736);
  v42 = *(_QWORD *)(v0 + 680);
  sub_19CCF8C5C(*(_QWORD *)(v0 + 776), v41, (uint64_t *)&unk_1ECEB1140);
  v43 = v93(v41, 1, v42);
  v44 = *(_QWORD *)(v0 + 736);
  if (v43 == 1)
  {
    sub_19CCECFE4(v44, (uint64_t *)&unk_1ECEB1140);
  }
  else
  {
    sub_19CCFDB04(v44, *(_QWORD *)(v0 + 704));
    v45 = v40 - 1;
    if (v40 <= 1)
    {
      v46 = *(_QWORD *)(v0 + 648);
      v94 = *(_QWORD *)(v0 + 640);
      v97 = *(_QWORD *)(v0 + 672);
      v47 = *(_QWORD *)(v0 + 576);
      v48 = (void *)qword_1ECEB0B60;
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v50 = swift_allocObject();
      v51 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v50 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 472) = v51;
      *(_QWORD *)(v0 + 448) = 0xD000000000000012;
      *(_QWORD *)(v0 + 456) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v52 = v48;
      sub_19CD40658(v0 + 448, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v53 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v50 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v50 + 48) = v53;
      *(_BYTE *)(v50 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v49 + 32) = v50;
      *(_QWORD *)&v100 = v52;
      LOBYTE(v99) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v49, (JetEngine::LogMessageLevel)&v99);
      swift_bridgeObjectRelease();

      v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      v54(v97, v47, v94);
      if (v45 > 1)
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 640));
      }
      else
      {
        v55 = *(_QWORD *)(v0 + 672);
        v56 = *(_QWORD *)(v0 + 648);
        v57 = *(_QWORD *)(v0 + 640);
        v39(&v100, v57, *(_QWORD *)(v0 + 792));
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
        if (!(_BYTE)v100 || v100 == 1)
        {
          v58 = *(_QWORD *)(v0 + 712);
          v86 = *(_QWORD *)(v0 + 704);
          v87 = v58;
          v91 = *(_QWORD *)(v0 + 688);
          v59 = *(_QWORD *)(v0 + 664);
          v85 = *(_QWORD *)(v0 + 648);
          v60 = *(_QWORD *)(v0 + 640);
          v61 = *(_QWORD *)(v0 + 632);
          v95 = v61;
          v62 = *(_QWORD *)(v0 + 624);
          v88 = v59;
          v89 = *(_QWORD *)(v0 + 616);
          v90 = *(_QWORD *)(v0 + 656);
          v63 = *(_QWORD *)(v0 + 608);
          v64 = *(_QWORD *)(v0 + 584);
          v65 = *(_QWORD *)(v0 + 576);
          v92 = *(_QWORD *)(v0 + 568);
          v66 = sub_19CFDFA10();
          v98 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v61, 1, 1, v66);
          v67 = v59;
          v68 = v60;
          v54(v67, v65, v60);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(v63 + 16))(v62, v64, v98);
          sub_19CDF3E10(v86, v58);
          v69 = (*(unsigned __int8 *)(v85 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
          v70 = (v90 + *(unsigned __int8 *)(v63 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
          v71 = (v89 + *(unsigned __int8 *)(v91 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
          v72 = swift_allocObject();
          *(_QWORD *)(v72 + 16) = 0;
          *(_QWORD *)(v72 + 24) = 0;
          *(_OWORD *)(v72 + 32) = v98;
          *(_QWORD *)(v72 + 48) = v92;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v85 + 32))(v72 + v69, v88, v68);
          (*(void (**)(unint64_t, uint64_t, _QWORD))(v63 + 32))(v72 + v70, v62, v98);
          sub_19CCFDB04(v87, v72 + v71);
          swift_retain();
          sub_19CF69A9C(v95, (uint64_t)asc_1EE440B18, v72);
          swift_release();
        }
      }
      v80 = *(_QWORD *)(v0 + 704);
      v81 = *(_QWORD *)(v0 + 560);
      sub_19CCECFE4(*(_QWORD *)(v0 + 776), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFDB04(v80, v81);
      v82 = *(_QWORD **)(v0 + 568);
      v84 = v82[5];
      v83 = v82[6];
      __swift_project_boxed_opaque_existential_1(v82 + 2, v84);
      (*(void (**)(uint64_t, uint64_t))(v83 + 56))(v84, v83);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v79 = *(uint64_t (**)(void))(v0 + 8);
      return v79();
    }
    sub_19CDB7640(*(_QWORD *)(v0 + 704));
  }
LABEL_33:
  v39(&v100, *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 792));
  if ((_BYTE)v100 && v100 != 1)
  {
    v75 = *(_QWORD *)(v0 + 776);
    v76 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v75, (uint64_t *)&unk_1ECEB1140);
    v77 = v76[5];
    v78 = v76[6];
    __swift_project_boxed_opaque_existential_1(v76 + 2, v77);
    (*(void (**)(uint64_t, uint64_t))(v78 + 56))(v77, v78);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v79 = *(uint64_t (**)(void))(v0 + 8);
    return v79();
  }
  if (v40 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 784))(*(_QWORD *)(v0 + 728), 1, 1, *(_QWORD *)(v0 + 680));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
  v73 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v73;
  *v73 = v0;
  v73[1] = sub_19CEA575C;
  return sub_19CEA7760(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600));
}

uint64_t sub_19CEA575C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 856) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA57C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 776);
  sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v2 = *(_QWORD **)(v0 + 568);
  v4 = v2[5];
  v3 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA5910()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  void (*v56)(__int128 *__return_ptr, uint64_t, uint64_t);
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  __int128 v115;
  _QWORD *v116;
  __int128 v117;
  __int128 v118;
  char v119;

  v1 = (__int128 *)(v0 + 176);
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 824);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v108 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v116 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 376) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 352, v0 + 416, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 416, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v10 = *(_OWORD *)(v0 + 192);
  v117 = *v1;
  v118 = v10;
  v119 = *(_BYTE *)(v0 + 208);
  v11 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, v116[2] + 1, 1, v116);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v117;
  v16 = v118;
  *((_BYTE *)v14 + 64) = v119;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  v116 = v11;
  sub_19CCECFE4(v0 + 352, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v117 = v5;
  LOBYTE(v116) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v116);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 776);
  v19 = *(_QWORD *)(v0 + 752);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 680);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, (uint64_t)v108);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v110(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 712);
    sub_19CCFDB04(*(_QWORD *)(v0 + 752), v23);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v108, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v117, v23, v24, v25);
    v22 = v117;
    sub_19CDB7640(v23);
  }
  v113 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 776);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  v116 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v110(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 744);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 744), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 680);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFDB04(v35, (uint64_t)v36);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v37 = *(_OWORD *)(v0 + 232);
  v117 = *v26;
  v118 = v37;
  v119 = *(_BYTE *)(v0 + 248);
  v38 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v117;
  v44 = v118;
  *((_BYTE *)v42 + 64) = v119;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  v116 = v38;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v113 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v113;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v117 = *v41;
  v118 = v46;
  v119 = *(_BYTE *)(v0 + 168);
  v47 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 792);
  v51 = *(_QWORD *)(v0 + 640);
  v47[2] = v49 + 1;
  v52 = &v47[5 * v49];
  v53 = v117;
  v54 = v118;
  *((_BYTE *)v52 + 64) = v119;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  v116 = v47;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *(_QWORD *)(v31 + 32) = v116;
  *(_QWORD *)&v117 = v32;
  LOBYTE(v116) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v116);

  swift_bridgeObjectRelease();
  v56 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v50 + 24);
  v56(&v117, v51, v50);
  if ((_BYTE)v117)
  {
    v57 = v113;
    if (v113 == 4 || v117 != 2)
      goto LABEL_39;
  }
  else
  {
    v57 = v113;
    if (v113 == 4)
      goto LABEL_39;
  }
  v58 = *(_QWORD *)(v0 + 736);
  v59 = *(_QWORD *)(v0 + 680);
  sub_19CCF8C5C(*(_QWORD *)(v0 + 776), v58, (uint64_t *)&unk_1ECEB1140);
  v60 = v110(v58, 1, v59);
  v61 = *(_QWORD *)(v0 + 736);
  if (v60 == 1)
  {
    sub_19CCECFE4(v61, (uint64_t *)&unk_1ECEB1140);
  }
  else
  {
    sub_19CCFDB04(v61, *(_QWORD *)(v0 + 704));
    v62 = v57 - 1;
    if (v57 <= 1)
    {
      v63 = *(_QWORD *)(v0 + 648);
      v111 = *(_QWORD *)(v0 + 640);
      v114 = *(_QWORD *)(v0 + 672);
      v64 = *(_QWORD *)(v0 + 576);
      v65 = (void *)qword_1ECEB0B60;
      v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 472) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 448) = 0xD000000000000012;
      *(_QWORD *)(v0 + 456) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v68 = v65;
      sub_19CD40658(v0 + 448, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v69 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v67 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v67 + 48) = v69;
      *(_BYTE *)(v67 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v66 + 32) = v67;
      *(_QWORD *)&v117 = v68;
      LOBYTE(v116) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v66, (JetEngine::LogMessageLevel)&v116);

      swift_bridgeObjectRelease();
      v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
      v70(v114, v64, v111);
      if (v62 > 1)
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 640));
      }
      else
      {
        v71 = *(_QWORD *)(v0 + 672);
        v72 = *(_QWORD *)(v0 + 648);
        v73 = *(_QWORD *)(v0 + 640);
        v56(&v117, v73, *(_QWORD *)(v0 + 792));
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        if (!(_BYTE)v117 || v117 == 1)
        {
          v74 = *(_QWORD *)(v0 + 712);
          v102 = *(_QWORD *)(v0 + 704);
          v103 = v74;
          v107 = *(_QWORD *)(v0 + 688);
          v75 = *(_QWORD *)(v0 + 664);
          v101 = *(_QWORD *)(v0 + 648);
          v76 = *(_QWORD *)(v0 + 640);
          v77 = *(_QWORD *)(v0 + 632);
          v112 = v77;
          v78 = *(_QWORD *)(v0 + 624);
          v104 = v75;
          v105 = *(_QWORD *)(v0 + 616);
          v106 = *(_QWORD *)(v0 + 656);
          v79 = *(_QWORD *)(v0 + 608);
          v80 = *(_QWORD *)(v0 + 584);
          v81 = *(_QWORD *)(v0 + 576);
          v109 = *(_QWORD *)(v0 + 568);
          v82 = sub_19CFDFA10();
          v115 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v77, 1, 1, v82);
          v83 = v75;
          v84 = v76;
          v70(v83, v81, v76);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(v79 + 16))(v78, v80, v115);
          sub_19CDF3E10(v102, v74);
          v85 = (*(unsigned __int8 *)(v101 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
          v86 = (v106 + *(unsigned __int8 *)(v79 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
          v87 = (v105 + *(unsigned __int8 *)(v107 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
          v88 = swift_allocObject();
          *(_QWORD *)(v88 + 16) = 0;
          *(_QWORD *)(v88 + 24) = 0;
          *(_OWORD *)(v88 + 32) = v115;
          *(_QWORD *)(v88 + 48) = v109;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v101 + 32))(v88 + v85, v104, v84);
          (*(void (**)(unint64_t, uint64_t, _QWORD))(v79 + 32))(v88 + v86, v78, v115);
          sub_19CCFDB04(v103, v88 + v87);
          swift_retain();
          sub_19CF69A9C(v112, (uint64_t)asc_1EE440B18, v88);
          swift_release();
        }
      }
      v96 = *(_QWORD *)(v0 + 704);
      v97 = *(_QWORD *)(v0 + 560);
      sub_19CCECFE4(*(_QWORD *)(v0 + 776), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFDB04(v96, v97);
      v98 = *(_QWORD **)(v0 + 568);
      v100 = v98[5];
      v99 = v98[6];
      __swift_project_boxed_opaque_existential_1(v98 + 2, v100);
      (*(void (**)(uint64_t, uint64_t))(v99 + 56))(v100, v99);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v95 = *(uint64_t (**)(void))(v0 + 8);
      return v95();
    }
    sub_19CDB7640(*(_QWORD *)(v0 + 704));
  }
LABEL_39:
  v56(&v117, *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 792));
  if ((_BYTE)v117 && v117 != 1)
  {
    v91 = *(_QWORD *)(v0 + 776);
    v92 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v91, (uint64_t *)&unk_1ECEB1140);
    v93 = v92[5];
    v94 = v92[6];
    __swift_project_boxed_opaque_existential_1(v92 + 2, v93);
    (*(void (**)(uint64_t, uint64_t))(v94 + 56))(v93, v94);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v95 = *(uint64_t (**)(void))(v0 + 8);
    return v95();
  }
  if (v57 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 784))(*(_QWORD *)(v0 + 728), 1, 1, *(_QWORD *)(v0 + 680));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
  v89 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v89;
  *v89 = v0;
  v89[1] = sub_19CEA575C;
  return sub_19CEA7760(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600));
}

uint64_t sub_19CEA65E4()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  Swift::String v45;
  __int128 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  void (*v56)(__int128 *__return_ptr, uint64_t, uint64_t);
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  __int128 v115;
  _QWORD *v116;
  __int128 v117;
  __int128 v118;
  char v119;

  v1 = (__int128 *)(v0 + 176);
  sub_19CDB7640(*(_QWORD *)(v0 + 720));
  v2 = *(void **)(v0 + 840);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v108 = (_QWORD *)(v0 + 16);
  v3 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  v5 = v3;
  v116 = sub_19CD40918(0, 45, 0, MEMORY[0x1E0DEE9D8]);
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v6._object = (void *)0x800000019D073820;
  LogMessage.StringInterpolation.appendLiteral(_:)(v6);
  swift_getErrorValue();
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 376) = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 352));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v7, v8);
  sub_19CCF8C5C(v0 + 352, v0 + 416, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  sub_19CD40658(v0 + 416, v0 + 176);
  *(_BYTE *)(v0 + 208) = 0;
  v10 = *(_OWORD *)(v0 + 192);
  v117 = *v1;
  v118 = v10;
  v119 = *(_BYTE *)(v0 + 208);
  v11 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_19CD40918(0, v116[2] + 1, 1, v116);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_19CD40918((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[5 * v13];
  v15 = v117;
  v16 = v118;
  *((_BYTE *)v14 + 64) = v119;
  *((_OWORD *)v14 + 2) = v15;
  *((_OWORD *)v14 + 3) = v16;
  v116 = v11;
  sub_19CCECFE4(v0 + 352, &qword_1ECEB3370);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  *(_QWORD *)(v4 + 32) = v11;
  *(_QWORD *)&v117 = v5;
  LOBYTE(v116) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v4, (JetEngine::LogMessageLevel)&v116);
  swift_bridgeObjectRelease();

  v18 = *(_QWORD *)(v0 + 776);
  v19 = *(_QWORD *)(v0 + 752);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 680);
  sub_19CCD5B84(*(_QWORD *)(v0 + 568) + 56, (uint64_t)v108);
  sub_19CCF8C5C(v18, v19, (uint64_t *)&unk_1ECEB1140);
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v110(v19, 1, v21) == 1)
  {
    v22 = 4;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 712);
    sub_19CCFDB04(*(_QWORD *)(v0 + 752), v23);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v108, v24);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v25 + 8))(&v117, v23, v24, v25);
    v22 = v117;
    sub_19CDB7640(v23);
  }
  v113 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v26 = (__int128 *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 776);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_19D0522A0;
  v32 = v30;
  v116 = sub_19CD40918(0, 22, 0, MEMORY[0x1E0DEE9D8]);
  v33._countAndFlagsBits = 0x7341646568636163;
  v33._object = (void *)0xEC0000003D746573;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  sub_19CCF8C5C(v27, v28, (uint64_t *)&unk_1ECEB1140);
  v34 = v110(v28, 1, v29);
  v35 = *(_QWORD *)(v0 + 744);
  if (v34 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 744), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 680);
    v36 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 256));
    sub_19CCFDB04(v35, (uint64_t)v36);
  }
  sub_19CCF8C5C(v0 + 256, v0 + 288, &qword_1ECEB3370);
  *v26 = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_19CD40658(v0 + 288, v0 + 216);
  *(_BYTE *)(v0 + 248) = 0;
  v37 = *(_OWORD *)(v0 + 232);
  v117 = *v26;
  v118 = v37;
  v119 = *(_BYTE *)(v0 + 248);
  v38 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_19CD40918(0, v38[2] + 1, 1, v38);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_19CD40918((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v41 = (__int128 *)(v0 + 136);
  v38[2] = v40 + 1;
  v42 = &v38[5 * v40];
  v43 = v117;
  v44 = v118;
  *((_BYTE *)v42 + 64) = v119;
  *((_OWORD *)v42 + 2) = v43;
  *((_OWORD *)v42 + 3) = v44;
  v116 = v38;
  sub_19CCECFE4(v0 + 256, &qword_1ECEB3370);
  v45._countAndFlagsBits = 0x3D73757461747320;
  v45._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v45);
  if (v113 == 4)
  {
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 504) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 480) = v113;
  }
  sub_19CCF8C5C(v0 + 480, v0 + 384, &qword_1ECEB3370);
  *v41 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  sub_19CD40658(v0 + 384, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v46 = *(_OWORD *)(v0 + 152);
  v117 = *v41;
  v118 = v46;
  v119 = *(_BYTE *)(v0 + 168);
  v47 = v116;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v47 = sub_19CD40918(0, v47[2] + 1, 1, v47);
  v49 = v47[2];
  v48 = v47[3];
  if (v49 >= v48 >> 1)
    v47 = sub_19CD40918((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
  v50 = *(_QWORD *)(v0 + 792);
  v51 = *(_QWORD *)(v0 + 640);
  v47[2] = v49 + 1;
  v52 = &v47[5 * v49];
  v53 = v117;
  v54 = v118;
  *((_BYTE *)v52 + 64) = v119;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  v116 = v47;
  sub_19CCECFE4(v0 + 480, &qword_1ECEB3370);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  *(_QWORD *)(v31 + 32) = v116;
  *(_QWORD *)&v117 = v32;
  LOBYTE(v116) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v31, (JetEngine::LogMessageLevel)&v116);

  swift_bridgeObjectRelease();
  v56 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v50 + 24);
  v56(&v117, v51, v50);
  if ((_BYTE)v117)
  {
    v57 = v113;
    if (v113 == 4 || v117 != 2)
      goto LABEL_39;
  }
  else
  {
    v57 = v113;
    if (v113 == 4)
      goto LABEL_39;
  }
  v58 = *(_QWORD *)(v0 + 736);
  v59 = *(_QWORD *)(v0 + 680);
  sub_19CCF8C5C(*(_QWORD *)(v0 + 776), v58, (uint64_t *)&unk_1ECEB1140);
  v60 = v110(v58, 1, v59);
  v61 = *(_QWORD *)(v0 + 736);
  if (v60 == 1)
  {
    sub_19CCECFE4(v61, (uint64_t *)&unk_1ECEB1140);
  }
  else
  {
    sub_19CCFDB04(v61, *(_QWORD *)(v0 + 704));
    v62 = v57 - 1;
    if (v57 <= 1)
    {
      v63 = *(_QWORD *)(v0 + 648);
      v111 = *(_QWORD *)(v0 + 640);
      v114 = *(_QWORD *)(v0 + 672);
      v64 = *(_QWORD *)(v0 + 576);
      v65 = (void *)qword_1ECEB0B60;
      v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_19D0522A0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_19D0522A0;
      *(_QWORD *)(v0 + 472) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 448) = 0xD000000000000012;
      *(_QWORD *)(v0 + 456) = 0x800000019D073850;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      v68 = v65;
      sub_19CD40658(v0 + 448, v0 + 96);
      *(_BYTE *)(v0 + 128) = 0;
      v69 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v67 + 32) = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v67 + 48) = v69;
      *(_BYTE *)(v67 + 64) = *(_BYTE *)(v0 + 128);
      *(_QWORD *)(v66 + 32) = v67;
      *(_QWORD *)&v117 = v68;
      LOBYTE(v116) = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v66, (JetEngine::LogMessageLevel)&v116);

      swift_bridgeObjectRelease();
      v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
      v70(v114, v64, v111);
      if (v62 > 1)
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 648) + 8))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 640));
      }
      else
      {
        v71 = *(_QWORD *)(v0 + 672);
        v72 = *(_QWORD *)(v0 + 648);
        v73 = *(_QWORD *)(v0 + 640);
        v56(&v117, v73, *(_QWORD *)(v0 + 792));
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        if (!(_BYTE)v117 || v117 == 1)
        {
          v74 = *(_QWORD *)(v0 + 712);
          v102 = *(_QWORD *)(v0 + 704);
          v103 = v74;
          v107 = *(_QWORD *)(v0 + 688);
          v75 = *(_QWORD *)(v0 + 664);
          v101 = *(_QWORD *)(v0 + 648);
          v76 = *(_QWORD *)(v0 + 640);
          v77 = *(_QWORD *)(v0 + 632);
          v112 = v77;
          v78 = *(_QWORD *)(v0 + 624);
          v104 = v75;
          v105 = *(_QWORD *)(v0 + 616);
          v106 = *(_QWORD *)(v0 + 656);
          v79 = *(_QWORD *)(v0 + 608);
          v80 = *(_QWORD *)(v0 + 584);
          v81 = *(_QWORD *)(v0 + 576);
          v109 = *(_QWORD *)(v0 + 568);
          v82 = sub_19CFDFA10();
          v115 = *(_OWORD *)(v0 + 592);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v77, 1, 1, v82);
          v83 = v75;
          v84 = v76;
          v70(v83, v81, v76);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(v79 + 16))(v78, v80, v115);
          sub_19CDF3E10(v102, v74);
          v85 = (*(unsigned __int8 *)(v101 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
          v86 = (v106 + *(unsigned __int8 *)(v79 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
          v87 = (v105 + *(unsigned __int8 *)(v107 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
          v88 = swift_allocObject();
          *(_QWORD *)(v88 + 16) = 0;
          *(_QWORD *)(v88 + 24) = 0;
          *(_OWORD *)(v88 + 32) = v115;
          *(_QWORD *)(v88 + 48) = v109;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v101 + 32))(v88 + v85, v104, v84);
          (*(void (**)(unint64_t, uint64_t, _QWORD))(v79 + 32))(v88 + v86, v78, v115);
          sub_19CCFDB04(v103, v88 + v87);
          swift_retain();
          sub_19CF69A9C(v112, (uint64_t)asc_1EE440B18, v88);
          swift_release();
        }
      }
      v96 = *(_QWORD *)(v0 + 704);
      v97 = *(_QWORD *)(v0 + 560);
      sub_19CCECFE4(*(_QWORD *)(v0 + 776), (uint64_t *)&unk_1ECEB1140);
      sub_19CCFDB04(v96, v97);
      v98 = *(_QWORD **)(v0 + 568);
      v100 = v98[5];
      v99 = v98[6];
      __swift_project_boxed_opaque_existential_1(v98 + 2, v100);
      (*(void (**)(uint64_t, uint64_t))(v99 + 56))(v100, v99);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v95 = *(uint64_t (**)(void))(v0 + 8);
      return v95();
    }
    sub_19CDB7640(*(_QWORD *)(v0 + 704));
  }
LABEL_39:
  v56(&v117, *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 792));
  if ((_BYTE)v117 && v117 != 1)
  {
    v91 = *(_QWORD *)(v0 + 776);
    v92 = *(_QWORD **)(v0 + 568);
    sub_19CEAC74C();
    swift_allocError();
    swift_willThrow();
    sub_19CCECFE4(v91, (uint64_t *)&unk_1ECEB1140);
    v93 = v92[5];
    v94 = v92[6];
    __swift_project_boxed_opaque_existential_1(v92 + 2, v93);
    (*(void (**)(uint64_t, uint64_t))(v94 + 56))(v93, v94);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v95 = *(uint64_t (**)(void))(v0 + 8);
    return v95();
  }
  if (v57 == 3)
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 784))(*(_QWORD *)(v0 + 728), 1, 1, *(_QWORD *)(v0 + 680));
  else
    sub_19CCF8C5C(*(_QWORD *)(v0 + 776), *(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
  v89 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v89;
  *v89 = v0;
  v89[1] = sub_19CEA575C;
  return sub_19CEA7760(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600));
}

uint64_t sub_19CEA72B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD **)(v0 + 568);
  v3 = v2 + 2;
  sub_19CCECFE4(*(_QWORD *)(v0 + 728), (uint64_t *)&unk_1ECEB1140);
  sub_19CCECFE4(v1, (uint64_t *)&unk_1ECEB1140);
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[15] = a8;
  v8[16] = v11;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v8[17] = swift_task_alloc();
  v9 = type metadata accessor for JetPackAsset(0);
  v8[18] = v9;
  v8[19] = *(_QWORD *)(v9 - 8);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA7498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  _QWORD *v10;
  char v12;

  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = 0xD000000000000020;
  *(_QWORD *)(v0 + 64) = 0x800000019D0738D0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v8 = v5;
  sub_19CD40658(v0 + 56, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  *(_BYTE *)(v7 + 64) = 0;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v6 + 32) = v7;
  v12 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v6, (JetEngine::LogMessageLevel)&v12);
  swift_bridgeObjectRelease();

  sub_19CDF3E10(v4, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v10;
  *v10 = v0;
  v10[1] = sub_19CEA7658;
  return sub_19CEA7760(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_19CEA7658()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  sub_19CCECFE4(v3, (uint64_t *)&unk_1ECEB1140);
  if (!v0)
    sub_19CDB7640(*(_QWORD *)(v2 + 160));
  return swift_task_switch();
}

uint64_t sub_19CEA76E0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7720()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[37] = a6;
  v7[38] = v6;
  v7[35] = a4;
  v7[36] = a5;
  v7[33] = a2;
  v7[34] = a3;
  v7[32] = a1;
  v8 = type metadata accessor for JetPackAsset(0);
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  v7[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA7800()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  int v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  Swift::String v20;
  _QWORD *v21;
  id v23;
  uint64_t (*v24)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  char v28;

  sub_19CFDFAB8();
  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = (__int128 *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = (void *)qword_1ECEB0B60;
  *(_QWORD *)(v0 + 352) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19D0522A0;
  v23 = v6;
  v25 = sub_19CD40918(0, 51, 0, MEMORY[0x1E0DEE9D8]);
  v8._object = (void *)0x800000019D073900;
  v8._countAndFlagsBits = 0xD000000000000032;
  LogMessage.StringInterpolation.appendLiteral(_:)(v8);
  sub_19CCF8C5C(v5, v2, (uint64_t *)&unk_1ECEB1140);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  v10 = *(_QWORD *)(v0 + 344);
  if (v9 == 1)
  {
    sub_19CCECFE4(*(_QWORD *)(v0 + 344), (uint64_t *)&unk_1ECEB1140);
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 312);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    sub_19CCFDB04(v10, (uint64_t)boxed_opaque_existential_2Tm);
  }
  sub_19CCF8C5C(v0 + 160, v0 + 96, &qword_1ECEB3370);
  *v1 = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_19CD40658(v0 + 96, v0 + 56);
  *(_BYTE *)(v0 + 88) = 0;
  v12 = *(_OWORD *)(v0 + 72);
  v26 = *v1;
  v27 = v12;
  v28 = *(_BYTE *)(v0 + 88);
  v13 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_19CD40918(0, v25[2] + 1, 1, v25);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_19CD40918((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v16 = *(_QWORD *)(v0 + 296);
  v13[2] = v15 + 1;
  v17 = &v13[5 * v15];
  v18 = v26;
  v19 = v27;
  *((_BYTE *)v17 + 64) = v28;
  *((_OWORD *)v17 + 2) = v18;
  *((_OWORD *)v17 + 3) = v19;
  v25 = v13;
  sub_19CCECFE4(v0 + 160, &qword_1ECEB3370);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  *(_QWORD *)(v7 + 32) = v13;
  *(_QWORD *)&v26 = v23;
  LOBYTE(v25) = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)&v25);
  swift_bridgeObjectRelease();

  v24 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v16 + 24) + *(_QWORD *)(v16 + 24));
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v21;
  *v21 = v0;
  v21[1] = sub_19CEA7B0C;
  return v24(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
}

uint64_t sub_19CEA7B0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA7B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 256);
  sub_19CCFDB04(*(_QWORD *)(v0 + 336), v2);
  v3 = *(int *)(v1 + 20);
  v4 = v2 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 36) + v3;
  if ((*(_BYTE *)(v4 + 8) & 1) != 0 || *(double *)v4 != 0.0)
  {
    v6 = *(_QWORD **)(v0 + 304);
    v7 = v6[5];
    v8 = v6[6];
    __swift_project_boxed_opaque_existential_1(v6 + 2, v7);
    v10 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v9;
    *v9 = v0;
    v9[1] = sub_19CEA7C70;
    return v10(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 256), v7, v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CEA7C70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_19CDB7640(*(_QWORD *)(v2 + 328));
  return swift_task_switch();
}

uint64_t sub_19CEA7CDC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7D24()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7D74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v1 = (void *)qword_1ECEB0B60;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19D0522A0;
  v3 = v1;
  v18 = sub_19CD40918(0, 35, 0, MEMORY[0x1E0DEE9D8]);
  v4._object = (void *)0x800000019D073940;
  v4._countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v4);
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 152) = v6;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 128));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_2Tm, v5, v6);
  sub_19CCF8C5C(v0 + 128, v0 + 192, &qword_1ECEB3370);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CD40658(v0 + 192, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v21 = 0;
  v8 = *(_OWORD *)(v0 + 32);
  v19 = *(_OWORD *)(v0 + 16);
  v20 = v8;
  v9 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_19CD40918(0, v18[2] + 1, 1, v18);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v12 = *(void **)(v0 + 384);
  v9[2] = v11 + 1;
  v13 = &v9[5 * v11];
  v14 = v19;
  v15 = v20;
  *((_BYTE *)v13 + 64) = v21;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  v18 = v9;
  sub_19CCECFE4(v0 + 128, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)&v19 = v3;
  LOBYTE(v18) = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v2, (JetEngine::LogMessageLevel)&v18);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA7FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19CEA7FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 96);
  v3 = (uint64_t *)swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 24);
  *((_OWORD *)v3 + 1) = *(_OWORD *)(v0 + 48);
  *((_OWORD *)v3 + 2) = v4;
  v3[6] = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_19CEAA5D4((uint64_t *)(v2 + 16), v3[4], v3[5], v3[6], v3[2], &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  *(_QWORD *)(v0 + 72) = v7;
  swift_release();
  swift_task_dealloc();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  type metadata accessor for JetPackAsset(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB1F50);
  *v5 = v0;
  v5[1] = sub_19CEA80EC;
  return sub_19CFDFA94();
}

uint64_t sub_19CEA80EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_19CEA8150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 24);
  v6 = *(_OWORD *)(v0 + 48);
  swift_release();
  v4 = *(os_unfair_lock_s **)(v2 + 96);
  v5 = swift_task_alloc();
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = v3;
  swift_retain();
  os_unfair_lock_lock(v4 + 6);
  sub_19CEAA9B0();
  os_unfair_lock_unlock(v4 + 6);
  if (!v1)
  {
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CEA821C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JetPackAssetSession.emptyCache()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  return swift_task_switch();
}

uint64_t sub_19CEA8268()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);
  char v12;

  if (qword_1ECEB0B68 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 88);
  v2 = (void *)qword_1ECEB0B60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19D0522A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB3360);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19D0522A0;
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = 0xD000000000000015;
  *(_QWORD *)(v0 + 64) = 0x800000019D073730;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v5 = v2;
  sub_19CD40658(v0 + 56, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  *(_BYTE *)(v4 + 64) = 0;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  v12 = 2;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v12);
  swift_bridgeObjectRelease();

  v7 = v1[5];
  v8 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v8 + 32) + *(_QWORD *)(v8 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v9;
  *v9 = v0;
  v9[1] = sub_19CEA8408;
  return v11(v7, v8);
}

uint64_t sub_19CEA8408()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t JetPackAssetSession.performMaintenance()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[116] = v0;
  v2 = sub_19CFDF1E8();
  v1[117] = v2;
  v1[118] = *(_QWORD *)(v2 - 8);
  v1[119] = swift_task_alloc();
  v1[120] = swift_task_alloc();
  v3 = type metadata accessor for JetPackAsset(0);
  v1[121] = v3;
  v1[122] = *(_QWORD *)(v3 - 8);
  v1[123] = swift_task_alloc();
  v4 = sub_19CFDF1AC();
  v1[124] = v4;
  v1[125] = *(_QWORD *)(v4 - 8);
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEA8538()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t);

  if (qword_1ECEB09F0 != -1)
    swift_once();
  v1 = sub_19CFDF1DC();
  v0[130] = __swift_project_value_buffer(v1, (uint64_t)qword_1ECEB09D8);
  sub_19CFDF1C4();
  sub_19CFDF188();
  v2 = sub_19CFDF1C4();
  v3 = sub_19CFDFE84();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v4 = v0[128];
    v5 = v0[125];
    v6 = v0[124];
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16);
    v7(v4, v0[129], v6);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v2, v3, v9, "Perform Maintenance", "", v8, 2u);
    MEMORY[0x1A1ADBE9C](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    v10 = v0[125];

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v0[131] = v7;
  v11 = (_QWORD *)v0[116];
  v7(v0[128], v0[129], v0[124]);
  sub_19CFDF20C();
  swift_allocObject();
  v0[132] = sub_19CFDF200();
  v12 = v11 + 2;
  v13 = v11[5];
  v14 = v11[6];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v17 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 40) + *(_QWORD *)(v14 + 40));
  v15 = (_QWORD *)swift_task_alloc();
  v0[133] = v15;
  *v15 = v0;
  v15[1] = sub_19CEA8714;
  return v17(v13, v14);
}

uint64_t sub_19CEA8714(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 1072) = a1;
  *(_QWORD *)(v3 + 1080) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA8784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  __int128 v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  Swift::String v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  __int128 *v46;
  int v47;
  __int128 v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  NSObject *v63;
  os_signpost_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t *v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  os_signpost_id_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  id v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  __int128 *v88;
  uint64_t (*v89)(_QWORD, uint64_t, uint64_t);
  unsigned __int8 v90;
  id v91;
  char v92;

  v1 = *(_QWORD *)(v0 + 1072);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 1088) = v2;
  if (v2)
  {
    v3 = 0;
    v88 = (__int128 *)(v0 + 96);
    v4 = (__int128 *)(v0 + 336);
    v82 = (__int128 *)(v0 + 176);
    v5 = (__int128 *)(v0 + 456);
    v81 = v0 + 496;
    v86 = v0 + 752;
    v87 = (__int128 *)(v0 + 256);
    v85 = v0 + 784;
    v79 = v0 + 848;
    v80 = v0 + 720;
    v6 = (_QWORD *)(v0 + 920);
    v7 = *(_QWORD *)(v0 + 976);
    v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 52) = v8;
    v9 = *(_QWORD *)(v7 + 72);
    *(_QWORD *)(v0 + 1096) = v9;
    while (1)
    {
      *(_QWORD *)(v0 + 1104) = v3;
      v10 = *(_QWORD *)(v0 + 984);
      v11 = *(_QWORD **)(v0 + 928);
      v12 = v11 + 7;
      sub_19CDF3E10(v1 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v3, v10);
      v13 = v11[10];
      v14 = v11[11];
      __swift_project_boxed_opaque_existential_1(v12, v13);
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, uint64_t))(v14 + 8))(&v90, v10, v13, v14);
      v15 = v90;
      if (qword_1ECEB0B68 != -1)
        swift_once();
      v16 = (void *)qword_1ECEB0B60;
      *(_QWORD *)(v0 + 1112) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19D0522A0;
      v83 = v16;
      *(_QWORD *)(v0 + 920) = sub_19CD40918(0, 52, 0, MEMORY[0x1E0DEE9D8]);
      v18._countAndFlagsBits = 0xD00000000000001ELL;
      v18._object = (void *)0x800000019D073770;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      *(_QWORD *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
      v84 = v15;
      *(_BYTE *)(v0 + 752) = v15;
      sub_19CCF8C5C(v86, v79, &qword_1ECEB3370);
      *v82 = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      sub_19CD40658(v79, (uint64_t)v82);
      *(_BYTE *)(v0 + 208) = 0;
      v19 = *(_OWORD *)(v0 + 192);
      *v88 = *v82;
      *(_OWORD *)(v0 + 112) = v19;
      *(_BYTE *)(v0 + 128) = *(_BYTE *)(v0 + 208);
      v20 = *(_QWORD **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
      v22 = v20[2];
      v21 = v20[3];
      if (v22 >= v21 >> 1)
        v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
      v23 = *(_QWORD *)(v0 + 984);
      v24 = *(_QWORD *)(v0 + 968);
      v20[2] = v22 + 1;
      v25 = &v20[5 * v22];
      v26 = *v88;
      v27 = *(_OWORD *)(v0 + 112);
      *((_BYTE *)v25 + 64) = *(_BYTE *)(v0 + 128);
      *((_OWORD *)v25 + 2) = v26;
      *((_OWORD *)v25 + 3) = v27;
      *(_QWORD *)(v0 + 920) = v20;
      sub_19CCECFE4(v86, &qword_1ECEB3370);
      v28._countAndFlagsBits = 0x654B656863616320;
      v28._object = (void *)0xEA00000000003D79;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      v29 = *(int *)(v24 + 28);
      *(_DWORD *)(v0 + 92) = v29;
      v30 = (uint64_t *)(v23 + v29);
      v31 = *v30;
      v32 = v30[1];
      *(_QWORD *)(v0 + 808) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v0 + 784) = v31;
      *(_QWORD *)(v0 + 792) = v32;
      sub_19CCF8C5C(v85, v80, &qword_1ECEB3370);
      *v4 = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
      swift_bridgeObjectRetain();
      sub_19CD40658(v80, v0 + 336);
      *(_BYTE *)(v0 + 368) = 0;
      v33 = *(_OWORD *)(v0 + 352);
      *v87 = *v4;
      *(_OWORD *)(v0 + 272) = v33;
      *(_BYTE *)(v0 + 288) = *(_BYTE *)(v0 + 368);
      v34 = *(_QWORD **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_19CD40918(0, v34[2] + 1, 1, v34);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_19CD40918((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v37 = *(_QWORD *)(v0 + 984);
      v38 = *(_QWORD *)(v0 + 968);
      v34[2] = v36 + 1;
      v39 = &v34[5 * v36];
      v40 = *v87;
      v41 = *(_OWORD *)(v0 + 272);
      *((_BYTE *)v39 + 64) = *(_BYTE *)(v0 + 288);
      *((_OWORD *)v39 + 2) = v40;
      *((_OWORD *)v39 + 3) = v41;
      *(_QWORD *)(v0 + 920) = v34;
      sub_19CCECFE4(v85, &qword_1ECEB3370);
      v42._countAndFlagsBits = 0x4449656863616320;
      v42._object = (void *)0xE90000000000003DLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      v43 = *(int *)(v38 + 24);
      *(_DWORD *)(v0 + 132) = v43;
      v44 = (int *)(v37 + v43);
      if ((v44[1] & 1) != 0)
      {
        v45 = v0 + 656;
        *(_OWORD *)(v0 + 656) = 0u;
        *(_OWORD *)(v0 + 672) = 0u;
        v46 = (__int128 *)(v0 + 416);
      }
      else
      {
        v47 = *v44;
        *(_QWORD *)(v0 + 680) = MEMORY[0x1E0DEDBC8];
        *(_DWORD *)(v0 + 656) = v47;
        v46 = (__int128 *)(v0 + 416);
        v45 = v0 + 656;
      }
      sub_19CCF8C5C(v45, v81, &qword_1ECEB3370);
      *v5 = 0u;
      *(_OWORD *)(v0 + 472) = 0u;
      sub_19CD40658(v81, v0 + 456);
      *(_BYTE *)(v0 + 488) = 0;
      v48 = *(_OWORD *)(v0 + 472);
      *v46 = *v5;
      v46[1] = v48;
      *((_BYTE *)v46 + 32) = *(_BYTE *)(v0 + 488);
      v49 = *(_QWORD **)(v0 + 920);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v49 = sub_19CD40918(0, v49[2] + 1, 1, v49);
      v51 = v49[2];
      v50 = v49[3];
      if (v51 >= v50 >> 1)
        v49 = sub_19CD40918((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
      v49[2] = v51 + 1;
      v52 = &v49[5 * v51];
      v53 = *v46;
      v54 = v46[1];
      *((_BYTE *)v52 + 64) = *((_BYTE *)v46 + 32);
      *((_OWORD *)v52 + 2) = v53;
      *((_OWORD *)v52 + 3) = v54;
      *v6 = v49;
      sub_19CCECFE4(v45, &qword_1ECEB3370);
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      *(_QWORD *)(v17 + 32) = *v6;
      v91 = v83;
      v92 = 2;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v92);
      swift_bridgeObjectRelease();

      if (v84 == 3)
        break;
      v56 = *(_QWORD *)(v0 + 1088);
      v57 = *(_QWORD *)(v0 + 1104) + 1;
      sub_19CDB7640(*(_QWORD *)(v0 + 984));
      if (v57 == v56)
        goto LABEL_24;
      v3 = *(_QWORD *)(v0 + 1104) + 1;
      v9 = *(_QWORD *)(v0 + 1096);
      LOBYTE(v8) = *(_BYTE *)(v0 + 52);
      v1 = *(_QWORD *)(v0 + 1072);
    }
    v58 = *(_QWORD **)(v0 + 928);
    v59 = v58[5];
    v60 = v58[6];
    __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
    v89 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v60 + 24) + *(_QWORD *)(v60 + 24));
    v61 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1120) = v61;
    *v61 = v0;
    v61[1] = sub_19CEA8F7C;
    return v89(*(_QWORD *)(v0 + 984), v59, v60);
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    v63 = sub_19CFDF1C4();
    sub_19CFDF1F4();
    v64 = sub_19CFDFE78();
    if ((sub_19CFDFF2C() & 1) != 0)
    {
      v65 = *(_QWORD *)(v0 + 960);
      v66 = *(_QWORD *)(v0 + 944);
      v67 = *(_QWORD *)(v0 + 936);
      swift_retain();
      sub_19CFDF218();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v66 + 88))(v65, v67) == *MEMORY[0x1E0DF2190])
      {
        v68 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));
        v68 = "";
      }
      v69 = (uint64_t *)(v0 + 1024);
      v72 = *(_QWORD *)(v0 + 1016);
      v73 = *(_QWORD *)(v0 + 1000);
      v74 = *(_QWORD *)(v0 + 992);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 1048))(*(_QWORD *)(v0 + 1024), v72, v74);
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      v76 = sub_19CFDF194();
      _os_signpost_emit_with_name_impl(&dword_19CCBB000, v63, v64, v76, "Perform Maintenance", v68, v75, 2u);
      MEMORY[0x1A1ADBE9C](v75, -1, -1);

      v71 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v71(v72, v74);
    }
    else
    {
      v69 = (uint64_t *)(v0 + 1016);
      v70 = *(_QWORD *)(v0 + 1000);

      v71 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    }
    v77 = *(_QWORD *)(v0 + 1032);
    v78 = *(_QWORD *)(v0 + 992);
    v71(*v69, v78);
    swift_release();
    v71(v77, v78);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19CEA8F7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEA8FE0()
{
  uint64_t v0;
  __int128 *v1;
  __int128 *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  __int128 v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  Swift::String v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  __int128 *v42;
  int v43;
  __int128 v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  __int128 v49;
  __int128 v50;
  Swift::String v51;
  NSObject *v52;
  os_signpost_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  os_signpost_id_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  id v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __int128 *v81;
  __int128 *v82;
  uint64_t (*v83)(_QWORD, uint64_t, uint64_t);
  unsigned __int8 v84;
  id v85;
  char v86;

  v82 = (__int128 *)(v0 + 96);
  v1 = (__int128 *)(v0 + 336);
  v76 = (__int128 *)(v0 + 176);
  v2 = (__int128 *)(v0 + 456);
  v75 = v0 + 496;
  v80 = v0 + 752;
  v81 = (__int128 *)(v0 + 256);
  v79 = v0 + 784;
  v73 = v0 + 848;
  v74 = v0 + 720;
  v3 = (_QWORD *)(v0 + 920);
  while (1)
  {
    v4 = *(_QWORD *)(v0 + 1088);
    v5 = *(_QWORD *)(v0 + 1104) + 1;
    sub_19CDB7640(*(_QWORD *)(v0 + 984));
    if (v5 == v4)
      break;
    v6 = *(_QWORD *)(v0 + 1104) + 1;
    *(_QWORD *)(v0 + 1104) = v6;
    v7 = *(_QWORD *)(v0 + 984);
    v8 = *(_QWORD **)(v0 + 928);
    sub_19CDF3E10(*(_QWORD *)(v0 + 1072)+ ((*(unsigned __int8 *)(v0 + 52) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 52))+ *(_QWORD *)(v0 + 1096) * v6, v7);
    v9 = v8[10];
    v10 = v8[11];
    __swift_project_boxed_opaque_existential_1(v8 + 7, v9);
    (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v84, v7, v9, v10);
    v11 = v84;
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v12 = (void *)qword_1ECEB0B60;
    *(_QWORD *)(v0 + 1112) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19D0522A0;
    v77 = v12;
    *(_QWORD *)(v0 + 920) = sub_19CD40918(0, 52, 0, MEMORY[0x1E0DEE9D8]);
    v14._countAndFlagsBits = 0xD00000000000001ELL;
    v14._object = (void *)0x800000019D073770;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    *(_QWORD *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
    v78 = v11;
    *(_BYTE *)(v0 + 752) = v11;
    sub_19CCF8C5C(v80, v73, &qword_1ECEB3370);
    *v76 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19CD40658(v73, (uint64_t)v76);
    *(_BYTE *)(v0 + 208) = 0;
    v15 = *(_OWORD *)(v0 + 192);
    *v82 = *v76;
    *(_OWORD *)(v0 + 112) = v15;
    *(_BYTE *)(v0 + 128) = *(_BYTE *)(v0 + 208);
    v16 = *(_QWORD **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_19CD40918(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_19CD40918((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v19 = *(_QWORD *)(v0 + 984);
    v20 = *(_QWORD *)(v0 + 968);
    v16[2] = v18 + 1;
    v21 = &v16[5 * v18];
    v22 = *v82;
    v23 = *(_OWORD *)(v0 + 112);
    *((_BYTE *)v21 + 64) = *(_BYTE *)(v0 + 128);
    *((_OWORD *)v21 + 2) = v22;
    *((_OWORD *)v21 + 3) = v23;
    *(_QWORD *)(v0 + 920) = v16;
    sub_19CCECFE4(v80, &qword_1ECEB3370);
    v24._countAndFlagsBits = 0x654B656863616320;
    v24._object = (void *)0xEA00000000003D79;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    v25 = *(int *)(v20 + 28);
    *(_DWORD *)(v0 + 92) = v25;
    v26 = (uint64_t *)(v19 + v25);
    v27 = *v26;
    v28 = v26[1];
    *(_QWORD *)(v0 + 808) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 784) = v27;
    *(_QWORD *)(v0 + 792) = v28;
    sub_19CCF8C5C(v79, v74, &qword_1ECEB3370);
    *v1 = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658(v74, v0 + 336);
    *(_BYTE *)(v0 + 368) = 0;
    v29 = *(_OWORD *)(v0 + 352);
    *v81 = *v1;
    *(_OWORD *)(v0 + 272) = v29;
    *(_BYTE *)(v0 + 288) = *(_BYTE *)(v0 + 368);
    v30 = *(_QWORD **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_19CD40918(0, v30[2] + 1, 1, v30);
    v32 = v30[2];
    v31 = v30[3];
    if (v32 >= v31 >> 1)
      v30 = sub_19CD40918((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
    v33 = *(_QWORD *)(v0 + 984);
    v34 = *(_QWORD *)(v0 + 968);
    v30[2] = v32 + 1;
    v35 = &v30[5 * v32];
    v36 = *v81;
    v37 = *(_OWORD *)(v0 + 272);
    *((_BYTE *)v35 + 64) = *(_BYTE *)(v0 + 288);
    *((_OWORD *)v35 + 2) = v36;
    *((_OWORD *)v35 + 3) = v37;
    *(_QWORD *)(v0 + 920) = v30;
    sub_19CCECFE4(v79, &qword_1ECEB3370);
    v38._countAndFlagsBits = 0x4449656863616320;
    v38._object = (void *)0xE90000000000003DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    v39 = *(int *)(v34 + 24);
    *(_DWORD *)(v0 + 132) = v39;
    v40 = (int *)(v33 + v39);
    if ((v40[1] & 1) != 0)
    {
      v41 = v0 + 656;
      *(_OWORD *)(v0 + 656) = 0u;
      *(_OWORD *)(v0 + 672) = 0u;
      v42 = (__int128 *)(v0 + 416);
    }
    else
    {
      v43 = *v40;
      *(_QWORD *)(v0 + 680) = MEMORY[0x1E0DEDBC8];
      *(_DWORD *)(v0 + 656) = v43;
      v42 = (__int128 *)(v0 + 416);
      v41 = v0 + 656;
    }
    sub_19CCF8C5C(v41, v75, &qword_1ECEB3370);
    *v2 = 0u;
    *(_OWORD *)(v0 + 472) = 0u;
    sub_19CD40658(v75, v0 + 456);
    *(_BYTE *)(v0 + 488) = 0;
    v44 = *(_OWORD *)(v0 + 472);
    *v42 = *v2;
    v42[1] = v44;
    *((_BYTE *)v42 + 32) = *(_BYTE *)(v0 + 488);
    v45 = *(_QWORD **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v45 = sub_19CD40918(0, v45[2] + 1, 1, v45);
    v47 = v45[2];
    v46 = v45[3];
    if (v47 >= v46 >> 1)
      v45 = sub_19CD40918((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
    v45[2] = v47 + 1;
    v48 = &v45[5 * v47];
    v49 = *v42;
    v50 = v42[1];
    *((_BYTE *)v48 + 64) = *((_BYTE *)v42 + 32);
    *((_OWORD *)v48 + 2) = v49;
    *((_OWORD *)v48 + 3) = v50;
    *v3 = v45;
    sub_19CCECFE4(v41, &qword_1ECEB3370);
    v51._countAndFlagsBits = 0;
    v51._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    *(_QWORD *)(v13 + 32) = *v3;
    v85 = v77;
    v86 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v86);
    swift_bridgeObjectRelease();

    if (v78 == 3)
    {
      v58 = *(_QWORD **)(v0 + 928);
      v59 = v58[5];
      v60 = v58[6];
      __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
      v83 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v60 + 24) + *(_QWORD *)(v60 + 24));
      v61 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1120) = v61;
      *v61 = v0;
      v61[1] = sub_19CEA8F7C;
      return v83(*(_QWORD *)(v0 + 984), v59, v60);
    }
  }
  swift_bridgeObjectRelease();
  v52 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v53 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v54 = *(_QWORD *)(v0 + 960);
    v55 = *(_QWORD *)(v0 + 944);
    v56 = *(_QWORD *)(v0 + 936);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v55 + 88))(v54, v56) == *MEMORY[0x1E0DF2190])
    {
      v57 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));
      v57 = "";
    }
    v63 = (uint64_t *)(v0 + 1024);
    v66 = *(_QWORD *)(v0 + 1016);
    v67 = *(_QWORD *)(v0 + 1000);
    v68 = *(_QWORD *)(v0 + 992);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 1048))(*(_QWORD *)(v0 + 1024), v66, v68);
    v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v69 = 0;
    v70 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v52, v53, v70, "Perform Maintenance", v57, v69, 2u);
    MEMORY[0x1A1ADBE9C](v69, -1, -1);

    v65 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v65(v66, v68);
  }
  else
  {
    v63 = (uint64_t *)(v0 + 1016);
    v64 = *(_QWORD *)(v0 + 1000);

    v65 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  }
  v71 = *(_QWORD *)(v0 + 1032);
  v72 = *(_QWORD *)(v0 + 992);
  v65(*v63, v72);
  swift_release();
  v65(v71, v72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA97AC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v2 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 952);
    v4 = *(_QWORD *)(v0 + 944);
    v5 = *(_QWORD *)(v0 + 936);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 952), *(_QWORD *)(v0 + 936));
      v6 = "";
    }
    v7 = (uint64_t *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1008);
    v11 = *(_QWORD *)(v0 + 1000);
    v12 = *(_QWORD *)(v0 + 992);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 1048))(*(_QWORD *)(v0 + 1024), v10, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v1, v2, v14, "Perform Maintenance", v6, v13, 2u);
    MEMORY[0x1A1ADBE9C](v13, -1, -1);

    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    v7 = (uint64_t *)(v0 + 1008);
    v8 = *(_QWORD *)(v0 + 1000);

    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v15 = *(_QWORD *)(v0 + 1032);
  v16 = *(_QWORD *)(v0 + 992);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEA99C4()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_2Tm;
  __int128 v6;
  _QWORD *v7;
  __int128 *v8;
  __int128 *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  __int128 *v23;
  __int128 *v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  int v30;
  __int128 v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  __int128 *v35;
  __int128 *v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  _QWORD *v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  id v52;
  Swift::String v53;
  __int128 v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  __int128 v75;
  __int128 v76;
  Swift::String v77;
  uint64_t v78;
  int *v79;
  __int128 *v80;
  uint64_t v81;
  int v82;
  __int128 v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  __int128 v88;
  __int128 v89;
  Swift::String v90;
  NSObject *v91;
  os_signpost_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint8_t *v108;
  os_signpost_id_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t contentsOf;
  __int128 *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  int v120;
  __int128 *v121;
  __int128 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(_QWORD, uint64_t, uint64_t);
  id v128;
  char v129;

  v123 = v0 + 816;
  v125 = v0 + 528;
  v1 = (void *)qword_1ECEB0B60;
  contentsOf = swift_allocObject();
  *(_OWORD *)(contentsOf + 16) = xmmword_19D0522A0;
  v118 = v1;
  *(_QWORD *)(v0 + 904) = sub_19CD40918(0, 56, 0, MEMORY[0x1E0DEE9D8]);
  v2._countAndFlagsBits = 0xD000000000000022;
  v2._object = (void *)0x800000019D073790;
  LogMessage.StringInterpolation.appendLiteral(_:)(v2);
  swift_getErrorValue();
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 888);
  *(_QWORD *)(v0 + 584) = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 560));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_2Tm, v3, v4);
  sub_19CCF8C5C(v0 + 560, v0 + 688, &qword_1ECEB3370);
  *(_OWORD *)(v0 + 296) = 0u;
  *(_OWORD *)(v0 + 312) = 0u;
  sub_19CD40658(v0 + 688, v0 + 296);
  *(_BYTE *)(v0 + 328) = 0;
  *(_BYTE *)(v0 + 408) = 0;
  v6 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 376) = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 392) = v6;
  v7 = *(_QWORD **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_19CD40918(0, v7[2] + 1, 1, v7);
  v8 = (__int128 *)(v0 + 136);
  v9 = (__int128 *)(v0 + 216);
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
    v7 = sub_19CD40918((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
  v12 = (uint64_t *)(*(_QWORD *)(v0 + 984) + *(int *)(v0 + 92));
  v7[2] = v11 + 1;
  v13 = &v7[5 * v11];
  v14 = *(_OWORD *)(v0 + 376);
  v15 = *(_OWORD *)(v0 + 392);
  *((_BYTE *)v13 + 64) = *(_BYTE *)(v0 + 408);
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  *(_QWORD *)(v0 + 904) = v7;
  sub_19CCECFE4(v0 + 560, &qword_1ECEB3370);
  v16._countAndFlagsBits = 0x654B656863616320;
  v16._object = (void *)0xEA00000000003D79;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  v17 = *v12;
  v18 = v12[1];
  *(_QWORD *)(v0 + 552) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 528) = v17;
  *(_QWORD *)(v0 + 536) = v18;
  sub_19CCF8C5C(v125, v123, &qword_1ECEB3370);
  *v8 = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  swift_bridgeObjectRetain();
  sub_19CD40658(v123, v0 + 136);
  *(_BYTE *)(v0 + 168) = 0;
  v19 = *(_OWORD *)(v0 + 152);
  *v9 = *v8;
  *(_OWORD *)(v0 + 232) = v19;
  *(_BYTE *)(v0 + 248) = *(_BYTE *)(v0 + 168);
  v20 = *(_QWORD **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_19CD40918(0, v20[2] + 1, 1, v20);
  v22 = v20[2];
  v21 = v20[3];
  if (v22 >= v21 >> 1)
    v20 = sub_19CD40918((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
  v23 = (__int128 *)(v0 + 16);
  v24 = (__int128 *)(v0 + 56);
  v25 = *(_QWORD *)(v0 + 984) + *(int *)(v0 + 132);
  v20[2] = v22 + 1;
  v26 = &v20[5 * v22];
  v27 = *v9;
  v28 = *(_OWORD *)(v0 + 232);
  *((_BYTE *)v26 + 64) = *(_BYTE *)(v0 + 248);
  *((_OWORD *)v26 + 2) = v27;
  *((_OWORD *)v26 + 3) = v28;
  *(_QWORD *)(v0 + 904) = v20;
  sub_19CCECFE4(v125, &qword_1ECEB3370);
  v29._countAndFlagsBits = 0x4449656863616320;
  v29._object = (void *)0xE90000000000003DLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  if ((*(_BYTE *)(v25 + 4) & 1) != 0)
  {
    *(_OWORD *)(v0 + 624) = 0u;
    *(_OWORD *)(v0 + 640) = 0u;
  }
  else
  {
    v30 = *(_DWORD *)(*(_QWORD *)(v0 + 984) + *(int *)(v0 + 132));
    *(_QWORD *)(v0 + 648) = MEMORY[0x1E0DEDBC8];
    *(_DWORD *)(v0 + 624) = v30;
  }
  sub_19CCF8C5C(v0 + 624, v0 + 592, &qword_1ECEB3370);
  *v23 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_19CD40658(v0 + 592, v0 + 16);
  *(_BYTE *)(v0 + 48) = 0;
  v31 = *(_OWORD *)(v0 + 32);
  *v24 = *v23;
  *(_OWORD *)(v0 + 72) = v31;
  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v0 + 48);
  v32 = *(_QWORD **)(v0 + 904);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v32 = sub_19CD40918(0, v32[2] + 1, 1, v32);
  v116 = v0 + 720;
  v117 = v0 + 496;
  v124 = v0 + 784;
  v126 = v0 + 752;
  v115 = v0 + 848;
  v34 = v32[2];
  v33 = v32[3];
  if (v34 >= v33 >> 1)
    v32 = sub_19CD40918((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
  v121 = (__int128 *)(v0 + 256);
  v122 = (__int128 *)(v0 + 96);
  v35 = (__int128 *)(v0 + 336);
  v114 = (__int128 *)(v0 + 176);
  v36 = (__int128 *)(v0 + 456);
  v37 = (_QWORD *)(v0 + 920);
  v112 = *(id *)(v0 + 1128);
  v32[2] = v34 + 1;
  v38 = *v24;
  v39 = *(_OWORD *)(v0 + 72);
  v40 = &v32[5 * v34];
  *((_BYTE *)v40 + 64) = *(_BYTE *)(v0 + 88);
  *((_OWORD *)v40 + 2) = v38;
  *((_OWORD *)v40 + 3) = v39;
  *(_QWORD *)(v0 + 904) = v32;
  sub_19CCECFE4(v0 + 624, &qword_1ECEB3370);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  *(_QWORD *)(contentsOf + 32) = *(_QWORD *)(v0 + 904);
  v128 = v118;
  v129 = 0;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)contentsOf, (JetEngine::LogMessageLevel)&v129);
  swift_bridgeObjectRelease();

  while (1)
  {
    v42 = *(_QWORD *)(v0 + 1088);
    v43 = *(_QWORD *)(v0 + 1104) + 1;
    sub_19CDB7640(*(_QWORD *)(v0 + 984));
    if (v43 == v42)
      break;
    v44 = *(_QWORD *)(v0 + 1104) + 1;
    *(_QWORD *)(v0 + 1104) = v44;
    v45 = *(_QWORD *)(v0 + 984);
    v46 = *(_QWORD **)(v0 + 928);
    sub_19CDF3E10(*(_QWORD *)(v0 + 1072)+ ((*(unsigned __int8 *)(v0 + 52) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 52))+ *(_QWORD *)(v0 + 1096) * v44, v45);
    v47 = v46[10];
    v48 = v46[11];
    __swift_project_boxed_opaque_existential_1(v46 + 7, v47);
    (*(void (**)(id *__return_ptr, uint64_t, uint64_t, uint64_t))(v48 + 8))(&v128, v45, v47, v48);
    v49 = (char)v128;
    v120 = v128;
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v50 = (void *)qword_1ECEB0B60;
    *(_QWORD *)(v0 + 1112) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_19D0522A0;
    v52 = v50;
    *(_QWORD *)(v0 + 920) = sub_19CD40918(0, 52, 0, MEMORY[0x1E0DEE9D8]);
    v53._countAndFlagsBits = 0xD00000000000001ELL;
    v53._object = (void *)0x800000019D073770;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    *(_QWORD *)(v0 + 776) = &type metadata for JetPackAssetCacheStatus;
    *(_BYTE *)(v0 + 752) = v49;
    sub_19CCF8C5C(v126, v115, &qword_1ECEB3370);
    *v114 = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_19CD40658(v115, (uint64_t)v114);
    *(_BYTE *)(v0 + 208) = 0;
    v54 = *(_OWORD *)(v0 + 192);
    *v122 = *v114;
    *(_OWORD *)(v0 + 112) = v54;
    *(_BYTE *)(v0 + 128) = *(_BYTE *)(v0 + 208);
    v55 = *(_QWORD **)(v0 + 920);
    v119 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v55 = sub_19CD40918(0, v55[2] + 1, 1, v55);
    v57 = v55[2];
    v56 = v55[3];
    if (v57 >= v56 >> 1)
      v55 = sub_19CD40918((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
    v58 = *(_QWORD *)(v0 + 984);
    v59 = *(_QWORD *)(v0 + 968);
    v55[2] = v57 + 1;
    v60 = &v55[5 * v57];
    v61 = *v122;
    v62 = *(_OWORD *)(v0 + 112);
    *((_BYTE *)v60 + 64) = *(_BYTE *)(v0 + 128);
    *((_OWORD *)v60 + 2) = v61;
    *((_OWORD *)v60 + 3) = v62;
    *(_QWORD *)(v0 + 920) = v55;
    sub_19CCECFE4(v126, &qword_1ECEB3370);
    v63._countAndFlagsBits = 0x654B656863616320;
    v63._object = (void *)0xEA00000000003D79;
    LogMessage.StringInterpolation.appendLiteral(_:)(v63);
    v64 = *(int *)(v59 + 28);
    *(_DWORD *)(v0 + 92) = v64;
    v65 = (uint64_t *)(v58 + v64);
    v66 = *v65;
    v67 = v65[1];
    *(_QWORD *)(v0 + 808) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 784) = v66;
    *(_QWORD *)(v0 + 792) = v67;
    sub_19CCF8C5C(v124, v116, &qword_1ECEB3370);
    *v35 = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    swift_bridgeObjectRetain();
    sub_19CD40658(v116, v0 + 336);
    *(_BYTE *)(v0 + 368) = 0;
    v68 = *(_OWORD *)(v0 + 352);
    *v121 = *v35;
    *(_OWORD *)(v0 + 272) = v68;
    *(_BYTE *)(v0 + 288) = *(_BYTE *)(v0 + 368);
    v69 = *(_QWORD **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v69 = sub_19CD40918(0, v69[2] + 1, 1, v69);
    v71 = v69[2];
    v70 = v69[3];
    if (v71 >= v70 >> 1)
      v69 = sub_19CD40918((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
    v72 = *(_QWORD *)(v0 + 984);
    v73 = *(_QWORD *)(v0 + 968);
    v69[2] = v71 + 1;
    v74 = &v69[5 * v71];
    v75 = *v121;
    v76 = *(_OWORD *)(v0 + 272);
    *((_BYTE *)v74 + 64) = *(_BYTE *)(v0 + 288);
    *((_OWORD *)v74 + 2) = v75;
    *((_OWORD *)v74 + 3) = v76;
    *(_QWORD *)(v0 + 920) = v69;
    sub_19CCECFE4(v124, &qword_1ECEB3370);
    v77._countAndFlagsBits = 0x4449656863616320;
    v77._object = (void *)0xE90000000000003DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v77);
    v78 = *(int *)(v73 + 24);
    *(_DWORD *)(v0 + 132) = v78;
    v79 = (int *)(v72 + v78);
    if ((v79[1] & 1) != 0)
    {
      v81 = v0 + 656;
      v80 = (__int128 *)(v0 + 416);
      *(_OWORD *)(v0 + 656) = 0u;
      *(_OWORD *)(v0 + 672) = 0u;
    }
    else
    {
      v82 = *v79;
      *(_QWORD *)(v0 + 680) = MEMORY[0x1E0DEDBC8];
      *(_DWORD *)(v0 + 656) = v82;
      v81 = v0 + 656;
      v80 = (__int128 *)(v0 + 416);
    }
    sub_19CCF8C5C(v81, v117, &qword_1ECEB3370);
    *v36 = 0u;
    *(_OWORD *)(v0 + 472) = 0u;
    sub_19CD40658(v117, v0 + 456);
    *(_BYTE *)(v0 + 488) = 0;
    v83 = *(_OWORD *)(v0 + 472);
    *v80 = *v36;
    v80[1] = v83;
    *((_BYTE *)v80 + 32) = *(_BYTE *)(v0 + 488);
    v84 = *(_QWORD **)(v0 + 920);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v84 = sub_19CD40918(0, v84[2] + 1, 1, v84);
    v86 = v84[2];
    v85 = v84[3];
    if (v86 >= v85 >> 1)
      v84 = sub_19CD40918((_QWORD *)(v85 > 1), v86 + 1, 1, v84);
    v84[2] = v86 + 1;
    v87 = &v84[5 * v86];
    v88 = *v80;
    v89 = v80[1];
    *((_BYTE *)v87 + 64) = *((_BYTE *)v80 + 32);
    *((_OWORD *)v87 + 2) = v88;
    *((_OWORD *)v87 + 3) = v89;
    *v37 = v84;
    sub_19CCECFE4(v81, &qword_1ECEB3370);
    v90._countAndFlagsBits = 0;
    v90._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v90);
    *(_QWORD *)(v51 + 32) = *v37;
    v128 = v119;
    v129 = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v51, (JetEngine::LogMessageLevel)&v129);
    swift_bridgeObjectRelease();

    if (v120 == 3)
    {
      v97 = *(_QWORD **)(v0 + 928);
      v98 = v97[5];
      v99 = v97[6];
      __swift_project_boxed_opaque_existential_1(v97 + 2, v98);
      v127 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v99 + 24) + *(_QWORD *)(v99 + 24));
      v100 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1120) = v100;
      *v100 = v0;
      v100[1] = sub_19CEA8F7C;
      return v127(*(_QWORD *)(v0 + 984), v98, v99);
    }
  }
  swift_bridgeObjectRelease();
  v91 = sub_19CFDF1C4();
  sub_19CFDF1F4();
  v92 = sub_19CFDFE78();
  if ((sub_19CFDFF2C() & 1) != 0)
  {
    v93 = *(_QWORD *)(v0 + 960);
    v94 = *(_QWORD *)(v0 + 944);
    v95 = *(_QWORD *)(v0 + 936);
    swift_retain();
    sub_19CFDF218();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v94 + 88))(v93, v95) == *MEMORY[0x1E0DF2190])
    {
      v96 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));
      v96 = "";
    }
    v102 = (uint64_t *)(v0 + 1024);
    v105 = *(_QWORD *)(v0 + 1016);
    v106 = *(_QWORD *)(v0 + 1000);
    v107 = *(_QWORD *)(v0 + 992);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 1048))(*(_QWORD *)(v0 + 1024), v105, v107);
    v108 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v108 = 0;
    v109 = sub_19CFDF194();
    _os_signpost_emit_with_name_impl(&dword_19CCBB000, v91, v92, v109, "Perform Maintenance", v96, v108, 2u);
    MEMORY[0x1A1ADBE9C](v108, -1, -1);

    v104 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
    v104(v105, v107);
  }
  else
  {
    v102 = (uint64_t *)(v0 + 1016);
    v103 = *(_QWORD *)(v0 + 1000);

    v104 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  }
  v110 = *(_QWORD *)(v0 + 1032);
  v111 = *(_QWORD *)(v0 + 992);
  v104(*v102, v111);
  swift_release();
  v104(v110, v111);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAA5D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  uint64_t *boxed_opaque_existential_2Tm;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  Swift::String v31;
  uint64_t result;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[32];
  uint64_t v40[4];
  __int128 v41;
  __int128 v42;
  char v43;
  _QWORD *v44;

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB29B0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CFE0418();
  v16 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v17 = sub_19CD20240((uint64_t)&v41), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_retain();
    sub_19CD20334((uint64_t)&v41);
    if (qword_1ECEB0B68 != -1)
      swift_once();
    v20 = (void *)qword_1ECEB0B60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB31C0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_19D0522A0;
    v22 = v20;
    v44 = sub_19CD40918(0, 31, 0, MEMORY[0x1E0DEE9D8]);
    v23._object = (void *)0x800000019D073800;
    v23._countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    v40[3] = a5;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v40);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_2Tm, a2, a5);
    sub_19CCF8C5C((uint64_t)v40, (uint64_t)v39, &qword_1ECEB3370);
    v37 = 0u;
    v38 = 0u;
    sub_19CD40658((uint64_t)v39, (uint64_t)&v37);
    v43 = 0;
    v41 = v37;
    v42 = v38;
    v25 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_19CD40918(0, v25[2] + 1, 1, v25);
    v27 = v25[2];
    v26 = v25[3];
    if (v27 >= v26 >> 1)
      v25 = sub_19CD40918((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
    v25[2] = v27 + 1;
    v28 = &v25[5 * v27];
    v29 = v41;
    v30 = v42;
    *((_BYTE *)v28 + 64) = v43;
    *((_OWORD *)v28 + 2) = v29;
    *((_OWORD *)v28 + 3) = v30;
    v44 = v25;
    sub_19CCECFE4((uint64_t)v40, &qword_1ECEB3370);
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    *(_QWORD *)(v21 + 32) = v44;
    *(_QWORD *)&v41 = v22;
    LOBYTE(v37) = 2;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v37);

    result = swift_bridgeObjectRelease();
  }
  else
  {
    sub_19CD20334((uint64_t)&v41);
    v33 = sub_19CFDFA10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = a3;
    v34[5] = a4;
    swift_retain();
    v19 = sub_19CF6996C((uint64_t)v15, (uint64_t)&unk_1EE442DC0, (uint64_t)v34);
    sub_19CFE0418();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v37 = *a1;
    *a1 = 0x8000000000000000;
    sub_19CCCDAA4(v19, (uint64_t)&v41, isUniquelyReferenced_nonNull_native);
    *a1 = v37;
    swift_bridgeObjectRelease();
    result = sub_19CD20334((uint64_t)&v41);
  }
  *a6 = v19;
  return result;
}

uint64_t sub_19CEAA94C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_19CCBE344;
  return v8(a1);
}

uint64_t sub_19CEAA9B0()
{
  _BYTE v1[40];

  sub_19CFE0418();
  sub_19CCCB25C((uint64_t)v1);
  sub_19CD20334((uint64_t)v1);
  return swift_release();
}

uint64_t sub_19CEAAA10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 392) = a1;
  return swift_task_switch();
}

uint64_t sub_19CEAAA28()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[50] = type metadata accessor for BaseObjectGraph();
  v1 = static BaseObjectGraph.current.getter();
  v0[51] = v1;
  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[47] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[52] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440AF0);
  *v2 = v0;
  v2[1] = sub_19CEAAB24;
  return sub_19CFE0A84();
}

uint64_t sub_19CEAAB24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAAB90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  char *v5;
  char *v6;

  if (*(_QWORD *)(v0 + 280))
  {
    sub_19CCD14C4((__int128 *)(v0 + 256), v0 + 336);
LABEL_3:
    v1 = static BaseObjectGraph.current.getter();
    *(_QWORD *)(v0 + 432) = v1;
    *(_QWORD *)(v0 + 384) = v1;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 440) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B00);
    *v2 = v0;
    v2[1] = sub_19CEAAD10;
    return sub_19CFE0A84();
  }
  v4 = *(_QWORD *)(v0 + 424);
  v5 = sub_19CCD9598();
  if (!v4)
  {
    v6 = v5;
    *(_QWORD *)(v0 + 360) = type metadata accessor for JetPackAssetDiskCache();
    *(_QWORD *)(v0 + 368) = &protocol witness table for JetPackAssetDiskCache;
    *(_QWORD *)(v0 + 336) = v6;
    sub_19CCECFE4(v0 + 256, &qword_1EE440AF0);
    goto LABEL_3;
  }
  sub_19CCECFE4(v0 + 256, &qword_1EE440AF0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAACDC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAAD10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAAD7C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_19CCD5B84(v0 + 336, v0 + 296);
  if (*(_QWORD *)(v0 + 40))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
    v1 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 224) = v1;
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 80);
    v2 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 192) = v2;
  }
  else
  {
    sub_19CCD5B84(v0 + 296, v0 + 176);
    *(_QWORD *)(v0 + 240) = &type metadata for JetPackAssetStandardCachePolicy;
    *(_QWORD *)(v0 + 248) = &protocol witness table for JetPackAssetStandardCachePolicy;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
    sub_19CCECFE4(v0 + 16, &qword_1EE440B00);
  }
  v3 = *(uint64_t **)(v0 + 392);
  sub_19CD60F34(v0 + 176, v0 + 96);
  type metadata accessor for JetPackAssetSession();
  v4 = swift_allocObject();
  sub_19CD60F34(v0 + 96, v4 + 16);
  v5 = sub_19CD59D00(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1038);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = v5;
  sub_19CCC2888(v0 + 96);
  *(_QWORD *)(v4 + 96) = v6;
  sub_19CCC2888(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
  *v3 = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAAEC8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 336);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAAF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch();
}

uint64_t sub_19CEAAF20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v0[10] = type metadata accessor for BaseObjectGraph();
  v0[11] = static BaseObjectGraph.current.getter();
  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE43F1E8 + dword_1EE43F1E8);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = v1;
  *v1 = v0;
  v1[1] = sub_19CEAAF94;
  return v3();
}

uint64_t sub_19CEAAF94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEAB000()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD *);

  if (v0[13])
  {
    swift_release();
    v0[15] = static BaseObjectGraph.current.getter();
    v3 = (uint64_t (*)(_QWORD *))((char *)&dword_1EE440AD8 + dword_1EE440AD8);
    v1 = (_QWORD *)swift_task_alloc();
    v0[16] = v1;
    *v1 = v0;
    v1[1] = sub_19CEAB10C;
    return v3(v0 + 7);
  }
  else
  {
    sub_19CDB46B0();
    return sub_19CFE0340();
  }
}

uint64_t sub_19CEAB0D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAB10C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAB178()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v0[18] = v0[7];
  v0[19] = static BaseObjectGraph.current.getter();
  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE43F1C8 + dword_1EE43F1C8);
  v1 = (_QWORD *)swift_task_alloc();
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_19CEAB1E8;
  return v3();
}

uint64_t sub_19CEAB1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAB25C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v1 = (id)v0[21];
  if (!v1)
    v1 = objc_msgSend((id)objc_opt_self(), sel_ams_configurationWithProcessInfo_bag_, 0, v0[18]);
  v0[23] = v1;
  v2 = v0[18];
  v3 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  swift_unknownObjectRetain_n();
  v4 = v1;
  v5 = (void *)sub_19CFDF554();
  v6 = objc_msgSend(v3, sel_initWithContainerID_bag_, v5, v2);
  v0[24] = v6;

  v0[2] = v2;
  v0[3] = v2;
  v0[4] = v4;
  v0[5] = 0;
  v0[6] = v6;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE442E50 + dword_1EE442E50);
  v7 = (_QWORD *)swift_task_alloc();
  v0[25] = v7;
  *v7 = v0;
  v7[1] = sub_19CEAB394;
  return v9(v0[8], v0[9], (uint64_t)(v0 + 2));
}

uint64_t sub_19CEAB394()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEAB3F8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 184);
  v1 = *(void **)(v0 + 192);

  swift_unknownObjectRelease_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAB458()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAB498()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAB4E0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 184);
  v1 = *(void **)(v0 + 192);

  swift_unknownObjectRelease_n();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static JetPackAssetSession.diskJetPack(request:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_BYTE *)a1 + 32);
  v9 = *a1;
  v10 = v1;
  v11 = v2;
  LOBYTE(v12) = v3;
  sub_19CEAC2D0((uint64_t)&v9);
  *(_QWORD *)&v9 = type metadata accessor for DiskJetPackResourceBundle();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440A70);
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = &unk_1EE440A68;
  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 40) = 0;
  v12 = v4;
  *((_QWORD *)&v9 + 1) = v5;
  v7 = sub_19CD0CDB8((uint64_t *)&v9);
  swift_release();
  sub_19CD4C098((uint64_t)&v9);
  return v7;
}

uint64_t sub_19CEAB610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[17] = a1;
  v2 = sub_19CFDEDE0();
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = swift_task_alloc();
  type metadata accessor for JetPackAsset(0);
  v1[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEAB690()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[22] = type metadata accessor for BaseObjectGraph();
  v1 = static BaseObjectGraph.current.getter();
  v0[23] = v1;
  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[16] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[24] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440AB8);
  *v2 = v0;
  v2[1] = sub_19CEAB78C;
  return sub_19CFE0A84();
}

uint64_t sub_19CEAB78C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAB7F8()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = (_OWORD *)(v0 + 72);
  if (*(_QWORD *)(v0 + 112) == 1)
  {
    *(_QWORD *)(v0 + 56) = &type metadata for JetPackManagedKeyProvider;
    *(_QWORD *)(v0 + 64) = &protocol witness table for JetPackManagedKeyProvider;
    *(_OWORD *)(v0 + 16) = xmmword_19D05C780;
    sub_19CCECFE4((uint64_t)v1, &qword_1EE440AB8);
  }
  else
  {
    v2 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v2;
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 120);
  }
  *(_QWORD *)(v0 + 208) = static BaseObjectGraph.current.getter();
  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EE440AA0 + dword_1EE440AA0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v3;
  *v3 = v0;
  v3[1] = sub_19CEAB908;
  return v5(*(_QWORD *)(v0 + 168));
}

uint64_t sub_19CEAB8C4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAB908()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEAB974()
{
  uint64_t *v0;
  id v1;
  id v2;
  _QWORD *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v2 = objc_msgSend(v1, sel_temporaryDirectory);

  sub_19CFDED74();
  v3 = (_QWORD *)swift_task_alloc();
  v0[29] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_19CEABA2C;
  return DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:)(v0[17], v0[21], v0[20], 1);
}

uint64_t sub_19CEABA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_19CEABAB0()
{
  uint64_t v0;

  sub_19CDB7640(*(_QWORD *)(v0 + 168));
  sub_19CDC2DFC((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEABB0C()
{
  uint64_t v0;

  sub_19CDC2DFC((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEABB50()
{
  uint64_t v0;

  sub_19CDB7640(*(_QWORD *)(v0 + 168));
  sub_19CDC2DFC((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static JetPackAssetSession.inMemoryJetPack(request:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_BYTE *)a1 + 32);
  v9 = *a1;
  v10 = v1;
  v11 = v2;
  LOBYTE(v12) = v3;
  sub_19CEAC2D0((uint64_t)&v9);
  *(_QWORD *)&v9 = type metadata accessor for InMemoryJetPackResourceBundle();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440A80);
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = &unk_1EE440A78;
  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 40) = 0;
  v12 = v4;
  *((_QWORD *)&v9 + 1) = v5;
  v7 = sub_19CD0CDB8((uint64_t *)&v9);
  swift_release();
  sub_19CD4C098((uint64_t)&v9);
  return v7;
}

uint64_t sub_19CEABC70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  type metadata accessor for JetPackAsset(0);
  *(_QWORD *)(v1 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19CEABCC8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[19] = type metadata accessor for BaseObjectGraph();
  v1 = static BaseObjectGraph.current.getter();
  v0[20] = v1;
  if (qword_1ECEB1330 != -1)
    swift_once();
  v0[16] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[21] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440A98);
  *v2 = v0;
  v2[1] = sub_19CEABDC4;
  return sub_19CFE0A84();
}

uint64_t sub_19CEABDC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_19CEABE30()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = (_OWORD *)(v0 + 72);
  if (*(_QWORD *)(v0 + 112) == 1)
  {
    *(_QWORD *)(v0 + 56) = &type metadata for JetPackManagedKeyProvider;
    *(_QWORD *)(v0 + 64) = &protocol witness table for JetPackManagedKeyProvider;
    *(_OWORD *)(v0 + 16) = xmmword_19D05C780;
    sub_19CCECFE4((uint64_t)v1, &qword_1EE440A98);
  }
  else
  {
    v2 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v2;
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 120);
  }
  *(_QWORD *)(v0 + 184) = static BaseObjectGraph.current.getter();
  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EE440AA0 + dword_1EE440AA0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v3;
  *v3 = v0;
  v3[1] = sub_19CEABF38;
  return v5(*(_QWORD *)(v0 + 144));
}

uint64_t sub_19CEABEFC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEABF38()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[25] = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[26] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_19CEABFE4;
  return InMemoryJetPackLoader.bundle(from:)(v2[17], v2[18]);
}

uint64_t sub_19CEABFE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19CEAC048()
{
  uint64_t v0;

  sub_19CDB7640(*(_QWORD *)(v0 + 144));
  sub_19CDC2DC8((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAC094()
{
  uint64_t v0;

  sub_19CDC2DC8((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CEAC0D0()
{
  uint64_t v0;

  sub_19CDB7640(*(_QWORD *)(v0 + 144));
  sub_19CDC2DC8((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t JetPackAssetSession.deinit()
{
  uint64_t v0;

  sub_19CCC2888(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_19CEAC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_19CEAC204(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[2];
  v5 = v1[3];
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v9 = v1[4];
  v10 = (uint64_t)v1 + v7;
  v11 = (uint64_t)v1 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_19CCBE344;
  return sub_19CEA39EC(a1, v9, v10, v11, v4, v5);
}

uint64_t sub_19CEAC2D0(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16[5];
  _QWORD v17[5];
  _OWORD v18[2];
  char v19;

  v2 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v2;
  v19 = *(_BYTE *)(a1 + 32);
  v17[0] = type metadata accessor for JetPackAssetSession();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE58);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = &unk_1EE440AC0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v17[4] = v3;
  v17[1] = v4;
  v6 = swift_allocObject();
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 48) = *(_BYTE *)(a1 + 32);
  v16[0] = type metadata accessor for JetPackAsset(0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43DE00);
  v9 = swift_allocObject();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = &unk_1EE440AD0;
  *(_QWORD *)(v9 + 32) = v6;
  *(_BYTE *)(v9 + 40) = 0;
  v16[4] = v8;
  v16[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2F20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19D0522A0;
  sub_19CD41714(v17, (_QWORD *)(inited + 32));
  sub_19CCEC5FC((uint64_t)v18);
  sub_19CD249F0();
  v15 = sub_19CFDF3F8();
  sub_19CD23D8C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for BaseObjectGraph();
  v12 = (_QWORD *)swift_initStackObject();
  v12[3] = 0;
  v12[4] = 0xE000000000000000;
  v12[2] = v15;
  v13 = sub_19CD0CDB8(v16);
  swift_bridgeObjectRelease();
  sub_19CD4C098((uint64_t)v16);
  sub_19CD4C098((uint64_t)v17);
  return v13;
}

uint64_t method lookup function for JetPackAssetSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JetPackAssetSession.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_19CEAC4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return sub_19CE6402C(a1, v1);
}

uint64_t sub_19CEAC540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return sub_19CE63EFC(a1, v1);
}

uint64_t sub_19CEAC594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return sub_19CE63F94(a1, v1);
}

uint64_t sub_19CEAC5E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEAC614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  v4[8] = a1;
  v4[9] = v1 + 16;
  return swift_task_switch();
}

uint64_t sub_19CEAC678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return sub_19CE63E64(a1, v1);
}

uint64_t sub_19CEAC6CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19CD579FC;
  return sub_19CE63DCC(a1, v1);
}

uint64_t sub_19CEAC720()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_19CEAC74C()
{
  unint64_t result;

  result = qword_1EE4373E0;
  if (!qword_1EE4373E0)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C874, &type metadata for JetPackAssetSessionError);
    atomic_store(result, (unint64_t *)&qword_1EE4373E0);
  }
  return result;
}

uint64_t sub_19CEAC790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for JetPackAsset(0);
  v9 = (v6 + v7 + *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v14 = v8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v9);
  v10 = v0 + v9 + *(int *)(v14 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  v12 = sub_19CFDEF84();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19CEAC908(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = v1[4];
  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JetPackAsset(0) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = v1[2];
  v13 = v1[3];
  v14 = v1[6];
  v15 = (uint64_t)v1 + v6;
  v16 = (uint64_t)v1 + v8;
  v17 = (uint64_t)v1 + (v11 & ~v10);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v18;
  *v18 = v2;
  v18[1] = sub_19CD579FC;
  return sub_19CEA7408(a1, v12, v13, v14, v15, v16, v17, v4);
}

uint64_t sub_19CEACA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB1140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for JetPackAssetSessionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19CEACAA0 + 4 * byte_19D05C790[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19CEACAC0 + 4 * byte_19D05C795[v4]))();
}

_BYTE *sub_19CEACAA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19CEACAC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEACAC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEACAD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19CEACAD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19CEACAE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetSessionError()
{
  return &type metadata for JetPackAssetSessionError;
}

unint64_t sub_19CEACB00()
{
  unint64_t result;

  result = qword_1EE440B30;
  if (!qword_1EE440B30)
  {
    result = MEMORY[0x1A1ADBD7C](&unk_19D05C84C, &type metadata for JetPackAssetSessionError);
    atomic_store(result, (unint64_t *)&qword_1EE440B30);
  }
  return result;
}

uint64_t sub_19CEACB44(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v5;
  uint64_t v7[5];

  v7[3] = type metadata accessor for JSPackageIndex();
  v7[4] = (uint64_t)&protocol witness table for JSPackageIndex;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v7);
  sub_19CEAE14C(a1, (uint64_t)boxed_opaque_existential_2Tm);
  v5 = a2(v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  return v5;
}

uint64_t IndexJSLoader.indexPipeline.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t IndexJSLoader.sourcePipeline.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t IndexJSLoader.init(url:bag:urlSession:urlEncoder:process:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, double);
  id v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t result;
  uint64_t *v101;
  uint64_t v102;
  id v103;
  id v104;
  void (*v105)(char *, uint64_t);
  void (*v106)(char *);
  unint64_t v107;
  unsigned int v108;
  id v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t);
  id v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t *v123;
  id v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  _QWORD v128[5];

  v124 = a5;
  v109 = a3;
  v123 = a6;
  v9 = sub_19CFDF5CC();
  v120 = *(_QWORD *)(v9 - 8);
  v121 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v116 = v11;
  v117 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v118 = (char *)&v102 - v14;
  v115 = sub_19CFDF2E4();
  v113 = *(_QWORD **)(v115 - 8);
  MEMORY[0x1E0C80A78](v115, v15);
  v114 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2418);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_19CFDEDE0();
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25, v26);
  v29 = (char *)&v102 - v28;
  v30 = *a2;
  v32 = v31;
  v33 = a1;
  v34 = a1;
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t, uint64_t, double))(v31 + 16);
  v37((char *)&v102 - v28, v34, v35, v27);
  if (a4)
  {
    v38 = a4;
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v36);
    v122 = v38;
  }
  else
  {
    v128[0] = v30;
    v122 = 0;
    v38 = sub_19CEADB4C((uint64_t)v29, v128, (uint64_t)v124);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v36);
    swift_unknownObjectRelease();
  }
  ((void (*)(char *, uint64_t, uint64_t))v37)(v24, v33, v36);
  v111 = (void (*)(char *, uint64_t, uint64_t))v37;
  v119 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v20, v24, v36);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEB2438);
  v39 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v40 = swift_allocObject();
  *(_DWORD *)(v40 + 16) = 0;
  v39[2] = v40;
  sub_19CCC290C((uint64_t)v20, (uint64_t)v39 + *(_QWORD *)(*v39 + 96), &qword_1ECEB2418);
  v112 = (id)__swift_instantiateConcreteTypeFromMangledName(qword_1ECEB0CD8);
  swift_allocObject();
  v41 = v109;
  v103 = v41;
  v42 = v38;
  v104 = v42;
  v43 = ((uint64_t (*)(void))sub_19CD51798)();
  type metadata accessor for JSRemoteIndexFetcher();
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = v42;
  *(_QWORD *)(v44 + 32) = 0;
  *(_QWORD *)(v44 + 40) = 0;
  *(_QWORD *)(v44 + 48) = 4;
  *(_BYTE *)(v44 + 56) = 1;
  *(_QWORD *)(v44 + 64) = v43;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = sub_19CEADD7C;
  *(_QWORD *)(v45 + 24) = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43D090);
  v46 = swift_allocObject();
  v110 = v33;
  v47 = v46;
  *(_QWORD *)(v46 + 16) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B38);
  v48 = (_QWORD *)swift_allocObject();
  v48[2] = v47;
  v48[3] = sub_19CEADDA8;
  v48[4] = v45;
  ((void (*)(char *, uint64_t, uint64_t))v37)(v24, v33, v36);
  v109 = (id)sub_19CEADDB4();
  v49 = v24;
  sub_19CFE00C4();
  v107 = sub_19CD48F8C();
  v108 = *MEMORY[0x1E0DEF540];
  v50 = v113;
  v106 = (void (*)(char *))v113[13];
  v52 = v114;
  v51 = v115;
  v106(v114);
  v53 = sub_19CFDFDE8();
  v105 = (void (*)(char *, uint64_t))v50[1];
  v105(v52, v51);
  sub_19CD23A14((uint64_t)v128, (uint64_t)&v125);
  type metadata accessor for PersistentPipelineBackoff();
  v54 = swift_allocObject();
  v55 = v126;
  *(_OWORD *)(v54 + 16) = v125;
  *(_OWORD *)(v54 + 32) = v55;
  *(_QWORD *)(v54 + 48) = v127;
  *(_QWORD *)(v54 + 56) = sub_19CEAD680;
  *(_QWORD *)(v54 + 64) = 0;
  v56 = (_QWORD *)swift_allocObject();
  v56[2] = v54;
  v56[3] = &off_1E3DD44E0;
  v56[4] = v53;
  sub_19CD20334((uint64_t)v128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B40);
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B48);
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = v57;
  v58[3] = sub_19CEADE00;
  v58[4] = v56;
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = 0;
  v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v60;
  *(_QWORD *)(v61 + 24) = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B50);
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = v58;
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = v62;
  v63[3] = sub_19CEADE14;
  v63[4] = v61;
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = v63;
  swift_allocObject();
  v65 = v103;
  v112 = v65;
  v66 = v104;
  v113 = v66;
  v67 = swift_retain();
  v68 = sub_19CD51798(v67);
  type metadata accessor for JSRemoteScriptFetcher();
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = v65;
  *(_QWORD *)(v69 + 24) = v66;
  *(_OWORD *)(v69 + 32) = xmmword_19D050770;
  *(_QWORD *)(v69 + 48) = 4;
  *(_BYTE *)(v69 + 56) = 1;
  *(_QWORD *)(v69 + 64) = v68;
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = sub_19CDE7F10;
  *(_QWORD *)(v70 + 24) = v69;
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = sub_19CEADE20;
  *(_QWORD *)(v71 + 24) = v70;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B58);
  v72 = swift_allocObject();
  *(_QWORD *)(v72 + 16) = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B60);
  v73 = (_QWORD *)swift_allocObject();
  v73[2] = v72;
  v73[3] = sub_19CEADE28;
  v73[4] = v71;
  v74 = v110;
  v111(v49, v110, v36);
  sub_19CFE00C4();
  ((void (*)(char *, _QWORD, uint64_t))v106)(v52, v108, v51);
  v75 = sub_19CFDFDE8();
  v105(v52, v51);
  sub_19CD23A14((uint64_t)v128, (uint64_t)&v125);
  v76 = v36;
  v77 = swift_allocObject();
  v78 = v126;
  *(_OWORD *)(v77 + 16) = v125;
  *(_OWORD *)(v77 + 32) = v78;
  *(_QWORD *)(v77 + 48) = v127;
  *(_QWORD *)(v77 + 56) = sub_19CEAD680;
  *(_QWORD *)(v77 + 64) = 0;
  v79 = (_QWORD *)swift_allocObject();
  v79[2] = v77;
  v79[3] = &off_1E3DD44E0;
  v79[4] = v75;
  sub_19CD20334((uint64_t)v128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B68);
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = v73;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B70);
  v81 = (_QWORD *)swift_allocObject();
  v81[2] = v80;
  v81[3] = sub_19CEADE38;
  v81[4] = v79;
  v82 = v118;
  sub_19CFDF5B4();
  v84 = v120;
  v83 = v121;
  v85 = v117;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v82, v121);
  v86 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v87 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v87 + v86, v85, v83);
  v88 = swift_allocObject();
  *(_QWORD *)(v88 + 16) = sub_19CEADEA8;
  *(_QWORD *)(v88 + 24) = v87;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B78);
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC50);
  v90 = (_QWORD *)swift_allocObject();
  v90[2] = v89;
  v90[3] = sub_19CEADEE4;
  v90[4] = v88;
  v91 = swift_allocObject();
  *(_QWORD *)(v91 + 16) = sub_19CEADF4C;
  *(_QWORD *)(v91 + 24) = 0;
  v92 = swift_allocObject();
  *(_QWORD *)(v92 + 16) = sub_19CEADF50;
  *(_QWORD *)(v92 + 24) = v91;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCC0);
  v93 = swift_allocObject();
  *(_QWORD *)(v93 + 16) = v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CC70);
  v94 = (_QWORD *)swift_allocObject();
  v94[2] = v93;
  v94[3] = sub_19CEADF58;
  v94[4] = v92;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = 0;
  v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = v96;
  *(_QWORD *)(v97 + 24) = v95;

  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v74, v76);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE43CCE0);
  v98 = swift_allocObject();
  *(_QWORD *)(v98 + 16) = v94;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B80);
  v99 = (_QWORD *)swift_allocObject();
  v99[2] = v98;
  v99[3] = sub_19CEADF88;
  v99[4] = v97;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B88);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v99;
  v101 = v123;
  *v123 = v64;
  v101[1] = result;
  return result;
}

uint64_t sub_19CEAD684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CEAD84C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19CEAD690);
}

_QWORD *sub_19CEAD690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[48];
  __int128 v13[2];
  _BYTE v14[24];
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE43E400);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = &type metadata for SyncTaskScheduler;
  v16 = &protocol witness table for SyncTaskScheduler;
  *v6 = MEMORY[0x1E0DEE9D8];
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE440B90);
  v7 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  sub_19CCC290C((uint64_t)v6, (uint64_t)v7 + *(_QWORD *)(*v7 + 96), (uint64_t *)&unk_1EE43E400);
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v13);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  sub_19CCD14C4(v13, (uint64_t)(v9 + 5));
  v11[0] = sub_19CEAE194;
  v11[1] = v9;
  v11[2] = sub_19CEAE1A4;
  v11[3] = v7;
  sub_19CCD5B84((uint64_t)v14, (uint64_t)v12);
  v12[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDBE6E0((uint64_t)v11);
  sub_19CCECFE4((uint64_t)v11, &qword_1EE43D310);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v7;
}

uint64_t sub_19CEAD840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19CEAD84C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19CEAD8AC);
}

uint64_t sub_19CEAD84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  v7 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 88))();
  v8 = a4(a2, a3, v7);
  swift_release();
  return v8;
}

uint64_t sub_19CEAD8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE436BA8);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CEAE110;
  v9[1] = v7;
  v9[2] = sub_19CEAE128;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0D70();
  sub_19CCECFE4((uint64_t)v9, &qword_1EE440CF0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19CEAD9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[4];
  _BYTE v10[48];
  __int128 v11[2];
  _BYTE v12[24];
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v13 = &type metadata for SyncTaskScheduler;
  v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE43C320);
  v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEB2570);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v11);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v4;
  sub_19CCD14C4(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19CEAE134;
  v9[1] = v7;
  v9[2] = sub_19CEAE144;
  v9[3] = v4;
  sub_19CCD5B84((uint64_t)v12, (uint64_t)v10);
  v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19CDC0AF4();
  sub_19CCECFE4((uint64_t)v9, (uint64_t *)&unk_1EE443AF0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

id sub_19CEADB4C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  _BYTE *v12;
  os_unfair_lock_s *v13;
  int v14;
  char v15;
  uint64_t v17;
  unsigned __int8 v18;

  v6 = sub_19CFDEDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDC80]), sel_initWithBag_, *a2);
  objc_msgSend(v11, sel_setIncludeClientVersions_, 0);
  objc_msgSend(v11, sel_setAnisetteType_, 0);
  objc_msgSend(v11, sel_setMescalType_, 0);
  objc_msgSend(v11, sel_setAccount_, 0);
  objc_msgSend(v11, sel_setRequestEncoding_, 1);
  objc_msgSend(v11, sel_setDialogOptions_, 1);
  objc_msgSend(v11, sel_setClientInfo_, a3);
  objc_msgSend(v11, sel_setDisableResponseDecoding_, 1);
  if (qword_1ECEB1958 != -1)
    swift_once();
  v12 = (char *)off_1ECEB1948 + 16;
  v13 = (os_unfair_lock_s *)((char *)off_1ECEB1948 + 20);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_19CD3EA18(v12, &v18);
  os_unfair_lock_unlock(v13);
  v14 = v18;
  swift_release();
  if (v14 == 2)
    LOBYTE(v14) = os_variant_has_internal_content();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((v14 & 1) != 0)
  {
    v15 = sub_19CFDECC0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v15 & 1) != 0)
      objc_msgSend(v11, sel_setUrlKnownToBeTrusted_, 1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v11;
}

_QWORD *sub_19CEADD7C(uint64_t a1)
{
  return sub_19CF7715C(a1);
}

uint64_t sub_19CEADD84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19CEADDA8(uint64_t a1)
{
  return sub_19CEADEF0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19CEAD690);
}

unint64_t sub_19CEADDB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECEB29D8;
  if (!qword_1ECEB29D8)
  {
    v1 = sub_19CFDEDE0();
    result = MEMORY[0x1A1ADBD7C](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1ECEB29D8);
  }
  return result;
}

_QWORD *sub_19CEADE00(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF0A18C(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_19CEADE14(uint64_t *a1)
{
  return sub_19CEADF94(a1, (uint64_t (*)(uint64_t, uint64_t))sub_19CF076F0);
}

uint64_t sub_19CEADE20(uint64_t a1)
{
  uint64_t v1;

  return sub_19CEACB44(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_19CEADE28(uint64_t a1)
{
  return sub_19CEADEF0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_19CEAD9FC);
}

uint64_t sub_19CEADE38(uint64_t *a1)
{
  uint64_t v1;

  return sub_19CF09E94(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

